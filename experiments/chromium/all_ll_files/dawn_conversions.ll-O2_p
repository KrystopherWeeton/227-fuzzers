; ModuleID = '../../third_party/blink/renderer/modules/webgpu/dawn_conversions.cc'
source_filename = "../../third_party/blink/renderer/modules/webgpu/dawn_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.WGPUColor = type { double, double, double, double }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.blink::GPUColorDict" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::V8UnionDoubleSequenceOrGPUColorDict" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::Vector", %"class.blink::Member" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::GPUColorDict"* }
%"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.2", %"class.WTF::Vector.4" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::GPUExtent3DDict"* }
%"class.blink::GPUExtent3DDict" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i32, i32, i32 }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { i32*, i32, i32 }
%"class.blink::GPUDevice" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::DawnObject", %"class.blink::Member.155", %"class.blink::Member.157", %"class.blink::Member.159", %"class.blink::Member.161", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17", [32 x i8] }
%"class.WTF::VectorBufferBase.17" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.19" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::HeapVector.21"* }
%"class.blink::HeapVector.21" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.24"* }
%"class.WTF::Vector.24" = type opaque
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.210", i32, i8, [3 x i8], %"class.blink::HeapVector.212", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.220", %"class.blink::Member.222", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.231", %"class.blink::Member.237", %"class.blink::Member.239", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.184" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.181" }
%"class.WTF::HashTable.181" = type <{ %"class.blink::WeakMember.183"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.183" = type opaque
%"class.blink::Supplementable.184" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.185" }
%"class.blink::HeapHashMap.185" = type { %"class.WTF::HashMap.188" }
%"class.WTF::HashMap.188" = type { %"class.WTF::HashTable.189" }
%"class.WTF::HashTable.189" = type <{ %"struct.WTF::KeyValuePair.191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.191" = type { i8*, %"class.blink::Member.265" }
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.267" }
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.192, %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", %"class.blink::Member.205", i32, [4 x i8], %"class.WTF::HashSet.206", i32, i32 }
%class.scoped_refptr.192 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.205" = type { %"class.blink::MemberBase.26" }
%"class.WTF::HashSet.206" = type { %"class.WTF::HashTable.207" }
%"class.WTF::HashTable.207" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.212" = type { %"class.WTF::Vector.215" }
%"class.WTF::Vector.215" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %"class.blink::Member.218"*, i32, i32 }
%"class.blink::Member.218" = type opaque
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.224", i32, i32 }
%"class.blink::HeapHashMap.224" = type { %"class.WTF::HashMap.227" }
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.230" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::DawnObject" = type { %"class.blink::DawnObjectBase", %struct.WGPUDeviceImpl* }
%"class.blink::DawnObjectBase" = type { %class.scoped_refptr.27, %"class.WTF::String" }
%class.scoped_refptr.27 = type { %"class.blink::DawnControlClientHolder"* }
%"class.blink::DawnControlClientHolder" = type { %"class.WTF::RefCounted", %"class.std::__1::unique_ptr.28", %"class.gpu::webgpu::WebGPUInterface"*, %struct.DawnProcTable, i8, %"class.blink::WebGPURecyclableResourceCache" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.48", %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.54" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gpu::webgpu::WebGPUInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUTextureImpl = type opaque
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::WebGPURecyclableResourceCache" = type { %"class.WTF::Deque", i64, i64, i32, %"class.gpu::webgpu::WebGPUInterface"*, %class.scoped_refptr.151, %"class.base::RepeatingCallback", i8, i32, %"class.base::WeakPtr.153", %"class.base::WeakPtrFactory.154" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { %"struct.blink::WebGPURecyclableResourceCache::Resource"*, i32, i32 }
%"struct.blink::WebGPURecyclableResourceCache::Resource" = type { %"class.std::__1::unique_ptr.65", i32, i32 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.69", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.105", i8, i32, i32, i32, %"class.WTF::Vector.120", i8, i8, i64, i64, %"class.base::RepeatingCallback.126", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.147" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.68" }
%"class.base::WeakPtrFactory.68" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.35" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.69" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.96", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.79, [384 x i64], %class.sk_sp.80, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.81", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.87" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.79 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.80 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.93, %class.SkPixmap, %class.sk_sp.95 }
%class.sk_sp.93 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.94, i32, i32 }
%class.sk_sp.94 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.35" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.95 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.108, %"class.std::__1::unique_ptr.109" }
%class.scoped_refptr.108 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %class.scoped_refptr.123*, i32, i32 }
%class.scoped_refptr.123 = type opaque
%"class.base::RepeatingCallback.126" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.115 }
%class.scoped_refptr.115 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.116", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.116" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.127" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.141" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.std::__1::pair.143"*, %"struct.std::__1::pair.143"*, %"class.std::__1::__compressed_pair.144" }
%"struct.std::__1::pair.143" = type { i32, i32 }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145", %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::pair.143"* }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.94, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.147" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.151 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.152" }>
%"class.base::RefCountedThreadSafe.152" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.153" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.154" = type { %"class.base::internal::WeakPtrFactoryBase" }
%struct.WGPUDeviceImpl = type opaque
%"class.blink::Member.155" = type { %"class.blink::MemberBase.156" }
%"class.blink::MemberBase.156" = type { %"class.blink::GPUAdapter"* }
%"class.blink::GPUAdapter" = type opaque
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::GPUSupportedFeatures"* }
%"class.blink::GPUSupportedFeatures" = type opaque
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::GPUQueue"* }
%"class.blink::GPUQueue" = type opaque
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::DawnCallback"* }
%"class.blink::DawnCallback" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::DawnCallback.172"* }
%"class.blink::DawnCallback.172" = type opaque
%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict" = type { i32, %"class.blink::Member.2", %"class.WTF::Vector.4" }
%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict" = type { i32, %"class.blink::Member.241", %"class.WTF::Vector.4" }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::GPUOrigin3DDict"* }
%"class.blink::GPUOrigin3DDict" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i32, i32, i32 }
%"class.blink::GPUImageCopyTexture" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::String", i32, %"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict", %"class.blink::Member.243" }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::GPUTexture"* }
%"class.blink::GPUTexture" = type { %"class.blink::DawnObject.245", i32, %class.scoped_refptr.248 }
%"class.blink::DawnObject.245" = type { %"class.blink::DawnObjectImpl", %struct.WGPUTextureImpl*, %struct.WGPUDeviceImpl* }
%"class.blink::DawnObjectImpl" = type { %"class.blink::ScriptWrappable", %"class.blink::DawnObjectBase", %"class.blink::Member.246" }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::GPUDevice"* }
%class.scoped_refptr.248 = type { %"class.blink::WebGPUMailboxTexture"* }
%"class.blink::WebGPUMailboxTexture" = type opaque
%"class.blink::GPUImageDataLayout" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, i64, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.252" }
%"class.std::__1::__tuple_leaf" = type { %struct.WGPUProgrammableStageDescriptor }
%"class.std::__1::__tuple_leaf.252" = type { %"class.std::__1::unique_ptr.253" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { i8* }
%"class.blink::GPUProgrammableStage" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.blink::Member.249" }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::GPUShaderModule"* }
%"class.blink::GPUShaderModule" = type { %"class.blink::DawnObject.251" }
%"class.blink::DawnObject.251" = type { %"class.blink::DawnObjectImpl", %struct.WGPUShaderModuleImpl*, %struct.WGPUDeviceImpl* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.261 }
%union.anon.261 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [38 x i8] c"bytesPerRow must be a multiple of 256\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"rowsPerImage is too large\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AsDawnColorERKN3WTF6VectorIdLj0ENS0_18PartitionAllocatorEEE(%struct.WGPUColor* noalias nocapture sret, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 0) #6
  %4 = bitcast double* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %struct.WGPUColor* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 1) #6
  %8 = bitcast double* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 1
  %11 = bitcast double* %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 2) #6
  %13 = bitcast double* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 2
  %16 = bitcast double* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 3) #6
  %18 = bitcast double* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 3
  %21 = bitcast double* %20 to i64*
  store i64 %19, i64* %21, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10AsDawnTypeEPKNS_12GPUColorDictE(%struct.WGPUColor* noalias nocapture sret, %"class.blink::GPUColorDict"* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::GPUColorDict", %"class.blink::GPUColorDict"* %1, i64 0, i32 7
  %4 = bitcast double* %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = shufflevector <2 x i64> %5, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %7 = bitcast %struct.WGPUColor* %0 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 8
  %8 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::GPUColorDict", %"class.blink::GPUColorDict"* %1, i64 0, i32 5
  %10 = bitcast double* %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = shufflevector <2 x i64> %11, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %13 = bitcast double* %8 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10AsDawnTypeEPKNS_35V8UnionDoubleSequenceOrGPUColorDictE(%struct.WGPUColor* noalias nocapture sret, %"class.blink::V8UnionDoubleSequenceOrGPUColorDict"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::V8UnionDoubleSequenceOrGPUColorDict", %"class.blink::V8UnionDoubleSequenceOrGPUColorDict"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %40 [
    i32 0, label %5
    i32 1, label %26
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::V8UnionDoubleSequenceOrGPUColorDict", %"class.blink::V8UnionDoubleSequenceOrGPUColorDict"* %1, i64 0, i32 2
  %7 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #6, !noalias !2
  %8 = bitcast double* %7 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !2
  %10 = bitcast %struct.WGPUColor* %0 to i64*
  store i64 %9, i64* %10, align 8, !alias.scope !2
  %11 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 1) #6, !noalias !2
  %12 = bitcast double* %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !2
  %14 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 1
  %15 = bitcast double* %14 to i64*
  store i64 %13, i64* %15, align 8, !alias.scope !2
  %16 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 2) #6, !noalias !2
  %17 = bitcast double* %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !2
  %19 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 2
  %20 = bitcast double* %19 to i64*
  store i64 %18, i64* %20, align 8, !alias.scope !2
  %21 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 3) #6, !noalias !2
  %22 = bitcast double* %21 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !2
  %24 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 3
  %25 = bitcast double* %24 to i64*
  store i64 %23, i64* %25, align 8, !alias.scope !2
  br label %42

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::V8UnionDoubleSequenceOrGPUColorDict", %"class.blink::V8UnionDoubleSequenceOrGPUColorDict"* %1, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::GPUColorDict"*, %"class.blink::GPUColorDict"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::GPUColorDict", %"class.blink::GPUColorDict"* %28, i64 0, i32 7
  %30 = bitcast double* %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8, !noalias !5
  %32 = shufflevector <2 x i64> %31, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %33 = bitcast %struct.WGPUColor* %0 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 8, !alias.scope !5
  %34 = getelementptr inbounds %struct.WGPUColor, %struct.WGPUColor* %0, i64 0, i32 2
  %35 = getelementptr inbounds %"class.blink::GPUColorDict", %"class.blink::GPUColorDict"* %28, i64 0, i32 5
  %36 = bitcast double* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8, !noalias !5
  %38 = shufflevector <2 x i64> %37, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %39 = bitcast double* %34 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %39, align 8, !alias.scope !5
  br label %42

40:                                               ; preds = %2
  %41 = bitcast %struct.WGPUColor* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 32, i1 false)
  br label %42

42:                                               ; preds = %40, %26, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_56V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequenceEPNS_9GPUDeviceE(%"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"*, %"class.blink::GPUDevice"* nocapture readnone) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence", %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %30 [
    i32 0, label %5
    i32 1, label %14
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence", %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::GPUExtent3DDict"*, %"class.blink::GPUExtent3DDict"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::GPUExtent3DDict", %"class.blink::GPUExtent3DDict"* %7, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::GPUExtent3DDict", %"class.blink::GPUExtent3DDict"* %7, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::GPUExtent3DDict", %"class.blink::GPUExtent3DDict"* %7, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  br label %30

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence", %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence", %"class.blink::V8UnionGPUExtent3DDictOrUnsignedLongEnforceRangeSequence"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %18 [
    i32 2, label %21
    i32 1, label %25
    i32 0, label %30
  ]

18:                                               ; preds = %14
  %19 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %15, i32 2) #6
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi i32 [ %20, %18 ], [ 1, %14 ]
  %23 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %15, i32 1) #6
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %14, %21
  %26 = phi i32 [ %22, %21 ], [ %17, %14 ]
  %27 = phi i32 [ %24, %21 ], [ %17, %14 ]
  %28 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %15, i32 0) #6
  %29 = load i32, i32* %28, align 4
  br label %30

30:                                               ; preds = %14, %25, %2, %5
  %31 = phi i32 [ 1, %2 ], [ %13, %5 ], [ %26, %25 ], [ 1, %14 ]
  %32 = phi i32 [ 1, %2 ], [ %9, %5 ], [ %29, %25 ], [ 1, %14 ]
  %33 = phi i32 [ 1, %2 ], [ %11, %5 ], [ %27, %25 ], [ 1, %14 ]
  %34 = zext i32 %33 to i64
  %35 = shl nuw i64 %34, 32
  %36 = zext i32 %32 to i64
  %37 = or i64 %35, %36
  %38 = insertvalue { i64, i32 } undef, i64 %37, 0
  %39 = insertvalue { i64, i32 } %38, i32 %31, 1
  ret { i64, i32 } %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_49UnsignedLongEnforceRangeSequenceOrGPUExtent3DDictEPNS_9GPUDeviceE(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict"*, %"class.blink::GPUDevice"* nocapture readnone) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict", %"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %29 [
    i32 2, label %5
    i32 1, label %21
  ]

5:                                                ; preds = %2
  %6 = tail call dereferenceable(16) %"class.WTF::Vector.4"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict37GetAsUnsignedLongEnforceRangeSequenceEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict"* %0) #6
  %7 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %6, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %9 [
    i32 2, label %12
    i32 1, label %16
    i32 0, label %29
  ]

9:                                                ; preds = %5
  %10 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %6, i32 2) #6
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi i32 [ %11, %9 ], [ 1, %5 ]
  %14 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %6, i32 1) #6
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %5, %12
  %17 = phi i32 [ %13, %12 ], [ %8, %5 ]
  %18 = phi i32 [ %15, %12 ], [ %8, %5 ]
  %19 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %6, i32 0) #6
  %20 = load i32, i32* %19, align 4
  br label %29

21:                                               ; preds = %2
  %22 = tail call %"class.blink::GPUExtent3DDict"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict20GetAsGPUExtent3DDictEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict"* %0) #6
  %23 = getelementptr inbounds %"class.blink::GPUExtent3DDict", %"class.blink::GPUExtent3DDict"* %22, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::GPUExtent3DDict", %"class.blink::GPUExtent3DDict"* %22, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::GPUExtent3DDict", %"class.blink::GPUExtent3DDict"* %22, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %2, %5, %16, %21
  %30 = phi i32 [ %28, %21 ], [ %17, %16 ], [ 1, %5 ], [ 1, %2 ]
  %31 = phi i32 [ %24, %21 ], [ %20, %16 ], [ 1, %5 ], [ 1, %2 ]
  %32 = phi i32 [ %26, %21 ], [ %18, %16 ], [ 1, %5 ], [ 1, %2 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw i64 %33, 32
  %35 = zext i32 %31 to i64
  %36 = or i64 %34, %35
  %37 = insertvalue { i64, i32 } undef, i64 %36, 0
  %38 = insertvalue { i64, i32 } %37, i32 %30, 1
  ret { i64, i32 } %38
}

declare dereferenceable(16) %"class.WTF::Vector.4"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict37GetAsUnsignedLongEnforceRangeSequenceEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict"*) local_unnamed_addr #2

declare %"class.blink::GPUExtent3DDict"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict20GetAsGPUExtent3DDictEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUExtent3DDict"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_49UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDictE(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict", %"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %28 [
    i32 2, label %4
    i32 1, label %20
  ]

4:                                                ; preds = %1
  %5 = tail call dereferenceable(16) %"class.WTF::Vector.4"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict37GetAsUnsignedLongEnforceRangeSequenceEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict"* %0) #6
  %6 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %8 [
    i32 2, label %11
    i32 1, label %15
    i32 0, label %28
  ]

8:                                                ; preds = %4
  %9 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %5, i32 2) #6
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ]
  %13 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %5, i32 1) #6
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi i32 [ %12, %11 ], [ 0, %4 ]
  %17 = phi i32 [ %14, %11 ], [ 0, %4 ]
  %18 = tail call dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"* %5, i32 0) #6
  %19 = load i32, i32* %18, align 4
  br label %28

20:                                               ; preds = %1
  %21 = tail call %"class.blink::GPUOrigin3DDict"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict20GetAsGPUOrigin3DDictEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict"* %0) #6
  %22 = getelementptr inbounds %"class.blink::GPUOrigin3DDict", %"class.blink::GPUOrigin3DDict"* %21, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::GPUOrigin3DDict", %"class.blink::GPUOrigin3DDict"* %21, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::GPUOrigin3DDict", %"class.blink::GPUOrigin3DDict"* %21, i64 0, i32 6
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %1, %4, %15, %20
  %29 = phi i32 [ %27, %20 ], [ %16, %15 ], [ %7, %4 ], [ 0, %1 ]
  %30 = phi i32 [ %25, %20 ], [ %17, %15 ], [ %7, %4 ], [ 0, %1 ]
  %31 = phi i32 [ %23, %20 ], [ %19, %15 ], [ %7, %4 ], [ 0, %1 ]
  %32 = zext i32 %30 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %31 to i64
  %35 = or i64 %33, %34
  %36 = insertvalue { i64, i32 } undef, i64 %35, 0
  %37 = insertvalue { i64, i32 } %36, i32 %29, 1
  ret { i64, i32 } %37
}

declare dereferenceable(16) %"class.WTF::Vector.4"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict37GetAsUnsignedLongEnforceRangeSequenceEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict"*) local_unnamed_addr #2

declare %"class.blink::GPUOrigin3DDict"* @_ZNK5blink49UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict20GetAsGPUOrigin3DDictEv(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10AsDawnTypeEPKNS_19GPUImageCopyTextureEPNS_9GPUDeviceE(%struct.WGPUImageCopyTexture* noalias nocapture sret, %"class.blink::GPUImageCopyTexture"*, %"class.blink::GPUDevice"* nocapture readnone) local_unnamed_addr #0 {
  %4 = bitcast %struct.WGPUImageCopyTexture* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  %5 = getelementptr inbounds %"class.blink::GPUImageCopyTexture", %"class.blink::GPUImageCopyTexture"* %1, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::GPUTexture"*, %"class.blink::GPUTexture"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::GPUTexture", %"class.blink::GPUTexture"* %6, i64 0, i32 0, i32 1
  %8 = bitcast %struct.WGPUTextureImpl** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.WGPUImageCopyTexture, %struct.WGPUImageCopyTexture* %0, i64 0, i32 1
  %11 = bitcast %struct.WGPUTextureImpl** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::GPUImageCopyTexture", %"class.blink::GPUImageCopyTexture"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.WGPUImageCopyTexture, %struct.WGPUImageCopyTexture* %0, i64 0, i32 2
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::GPUImageCopyTexture", %"class.blink::GPUImageCopyTexture"* %1, i64 0, i32 4
  %16 = tail call { i64, i32 } @_ZN5blink10AsDawnTypeEPKNS_49UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDictE(%"class.blink::UnsignedLongEnforceRangeSequenceOrGPUOrigin3DDict"* %15)
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  %19 = getelementptr inbounds %struct.WGPUImageCopyTexture, %struct.WGPUImageCopyTexture* %0, i64 0, i32 3
  %20 = bitcast %struct.WGPUOrigin3D* %19 to i64*
  store i64 %17, i64* %20, align 4
  %21 = getelementptr inbounds %struct.WGPUImageCopyTexture, %struct.WGPUImageCopyTexture* %0, i64 0, i32 3, i32 2
  store i32 %18, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::GPUImageCopyTexture", %"class.blink::GPUImageCopyTexture"* %1, i64 0, i32 2
  %23 = tail call i32 @_ZN5blink10AsDawnEnumI17WGPUTextureAspectEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %22) #6
  %24 = getelementptr inbounds %struct.WGPUImageCopyTexture, %struct.WGPUImageCopyTexture* %0, i64 0, i32 4
  store i32 %23, i32* %24, align 8
  ret void
}

declare i32 @_ZN5blink10AsDawnEnumI17WGPUTextureAspectEET_RKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5blink25ValidateTextureDataLayoutEPKNS_18GPUImageDataLayoutEP21WGPUTextureDataLayout(%"class.blink::GPUImageDataLayout"* nocapture readonly, %struct.WGPUTextureDataLayout* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::GPUImageDataLayout", %"class.blink::GPUImageDataLayout"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::GPUImageDataLayout", %"class.blink::GPUImageDataLayout"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %27, label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %8, %6 ], [ -1, %2 ]
  %12 = getelementptr inbounds %"class.blink::GPUImageDataLayout", %"class.blink::GPUImageDataLayout"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 2, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::GPUImageDataLayout", %"class.blink::GPUImageDataLayout"* %0, i64 0, i32 7
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %27, label %19

19:                                               ; preds = %10, %15
  %20 = phi i32 [ %17, %15 ], [ -1, %10 ]
  %21 = bitcast %struct.WGPUTextureDataLayout* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false)
  %22 = getelementptr inbounds %"class.blink::GPUImageDataLayout", %"class.blink::GPUImageDataLayout"* %0, i64 0, i32 6
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.WGPUTextureDataLayout, %struct.WGPUTextureDataLayout* %1, i64 0, i32 1
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %struct.WGPUTextureDataLayout, %struct.WGPUTextureDataLayout* %1, i64 0, i32 2
  store i32 %11, i32* %25, align 8
  %26 = getelementptr inbounds %struct.WGPUTextureDataLayout, %struct.WGPUTextureDataLayout* %1, i64 0, i32 3
  store i32 %20, i32* %26, align 4
  br label %27

27:                                               ; preds = %19, %15, %6
  %28 = phi i8* [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), %6 ], [ null, %19 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), %15 ]
  ret i8* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10AsDawnTypeEPKNS_20GPUProgrammableStageE(%"class.std::__1::tuple"* noalias nocapture sret, %"class.blink::GPUProgrammableStage"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::GPUProgrammableStage", %"class.blink::GPUProgrammableStage"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %7) #6
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = load i64, i64* %6, align 8
  %14 = zext i8 %11 to i64
  %15 = select i1 %12, i64 %13, i64 %14
  %16 = add i64 %15, 1
  %17 = call i8* @_Znam(i64 %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %17, i8 0, i64 %16, i1 false) #6
  %18 = ptrtoint i8* %17 to i64
  %19 = load i8*, i8** %5, align 8
  %20 = select i1 %12, i8* %19, i8* %4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 %20, i64 %16, i1 false)
  %21 = getelementptr inbounds %"class.blink::GPUProgrammableStage", %"class.blink::GPUProgrammableStage"* %1, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::GPUShaderModule"*, %"class.blink::GPUShaderModule"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::GPUShaderModule", %"class.blink::GPUShaderModule"* %22, i64 0, i32 0, i32 1
  %24 = bitcast %struct.WGPUShaderModuleImpl** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %struct.WGPUChainedStruct* null, %struct.WGPUChainedStruct** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %struct.WGPUShaderModuleImpl** %27 to i64*
  store i64 %25, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8* %17, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %0, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::__tuple_leaf.252"* %30 to i64*
  store i64 %18, i64* %31, align 8, !alias.scope !9
  br i1 %12, label %32, label %33

32:                                               ; preds = %2
  call void @_ZdlPv(i8* %19) #7
  br label %33

33:                                               ; preds = %2, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  ret void
}

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZNK3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink11AsDawnColorERKN3WTF6VectorIdLj0ENS0_18PartitionAllocatorEEE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink11AsDawnColorERKN3WTF6VectorIdLj0ENS0_18PartitionAllocatorEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink10AsDawnTypeEPKNS_12GPUColorDictE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink10AsDawnTypeEPKNS_12GPUColorDictE"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__110make_tupleIJR31WGPUProgrammableStageDescriptorNS_10unique_ptrIA_cNS_14default_deleteIS4_EEEEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__110make_tupleIJR31WGPUProgrammableStageDescriptorNS_10unique_ptrIA_cNS_14default_deleteIS4_EEEEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_"}
