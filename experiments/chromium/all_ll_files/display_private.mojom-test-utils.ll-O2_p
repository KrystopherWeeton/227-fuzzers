; ModuleID = 'gen/services/viz/privileged/mojom/compositing/display_private.mojom-test-utils.cc'
source_filename = "gen/services/viz/privileged/mojom/compositing/display_private.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::DisplayPrivateAsyncWaiter" = type { %"class.viz::mojom::DisplayPrivate"* }
%"class.viz::mojom::DisplayPrivate" = type { i32 (...)** }
%"class.viz::mojom::DisplayClientAsyncWaiter" = type { %"class.viz::mojom::DisplayClient"* }
%"class.viz::mojom::DisplayClient" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivateInterceptorForTesting" = type { %"class.viz::mojom::DisplayPrivate" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.3, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.5", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.4" }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.viz::mojom::DisplayClientInterceptorForTesting" = type { %"class.viz::mojom::DisplayClient" }

$_ZN3viz5mojom14DisplayPrivateD2Ev = comdat any

$_ZN3viz5mojom35DisplayPrivateInterceptorForTestingD0Ev = comdat any

$_ZN3viz5mojom13DisplayClientD2Ev = comdat any

$_ZN3viz5mojom34DisplayClientInterceptorForTestingD0Ev = comdat any

@_ZTVN3viz5mojom35DisplayPrivateInterceptorForTestingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::DisplayPrivate"*)* @_ZN3viz5mojom14DisplayPrivateD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, i1)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting17SetDisplayVisibleEb to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.gfx::Size"*)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting6ResizeERKN3gfx4SizeE to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.gfx::Transform"*)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting21SetDisplayColorMatrixERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.gfx::DisplayColorSpaces"*)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, i1)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting17SetOutputIsSecureEb to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, i64, i64)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting25SetDisplayVSyncParametersEN4base9TimeTicksENS2_9TimeDeltaE to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting35ForceImmediateDrawAndSwapIfPossibleEv to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.mojo::PendingRemote"*)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting25AddVSyncParameterObserverEN4mojo13PendingRemoteINS0_22VSyncParameterObserverEEE to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.mojo::PendingReceiver"*)* @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting28SetDelegatedInkPointRendererEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3viz5mojom34DisplayClientInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::DisplayClient"*)* @_ZN3viz5mojom13DisplayClientD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)* @_ZN3viz5mojom34DisplayClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::DisplayClientInterceptorForTesting"*, %"class.gfx::Size"*)* @_ZN3viz5mojom34DisplayClientInterceptorForTesting26DidCompleteSwapWithNewSizeERKN3gfx4SizeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3viz5mojom25DisplayPrivateAsyncWaiterC1EPNS0_14DisplayPrivateE = hidden unnamed_addr alias void (%"class.viz::mojom::DisplayPrivateAsyncWaiter"*, %"class.viz::mojom::DisplayPrivate"*), void (%"class.viz::mojom::DisplayPrivateAsyncWaiter"*, %"class.viz::mojom::DisplayPrivate"*)* @_ZN3viz5mojom25DisplayPrivateAsyncWaiterC2EPNS0_14DisplayPrivateE
@_ZN3viz5mojom25DisplayPrivateAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::DisplayPrivateAsyncWaiter"*), void (%"class.viz::mojom::DisplayPrivateAsyncWaiter"*)* @_ZN3viz5mojom25DisplayPrivateAsyncWaiterD2Ev
@_ZN3viz5mojom24DisplayClientAsyncWaiterC1EPNS0_13DisplayClientE = hidden unnamed_addr alias void (%"class.viz::mojom::DisplayClientAsyncWaiter"*, %"class.viz::mojom::DisplayClient"*), void (%"class.viz::mojom::DisplayClientAsyncWaiter"*, %"class.viz::mojom::DisplayClient"*)* @_ZN3viz5mojom24DisplayClientAsyncWaiterC2EPNS0_13DisplayClientE
@_ZN3viz5mojom24DisplayClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::DisplayClientAsyncWaiter"*), void (%"class.viz::mojom::DisplayClientAsyncWaiter"*)* @_ZN3viz5mojom24DisplayClientAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting17SetDisplayVisibleEb(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::DisplayPrivate"* %6(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.viz::mojom::DisplayPrivate"* %7 to void (%"class.viz::mojom::DisplayPrivate"*, i1)***
  %9 = load void (%"class.viz::mojom::DisplayPrivate"*, i1)**, void (%"class.viz::mojom::DisplayPrivate"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, i1)*, void (%"class.viz::mojom::DisplayPrivate"*, i1)** %9, i64 2
  %11 = load void (%"class.viz::mojom::DisplayPrivate"*, i1)*, void (%"class.viz::mojom::DisplayPrivate"*, i1)** %10, align 8
  tail call void %11(%"class.viz::mojom::DisplayPrivate"* %7, i1 zeroext %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting6ResizeERKN3gfx4SizeE(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::DisplayPrivate"* %6(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.viz::mojom::DisplayPrivate"* %7 to void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Size"*)***
  %9 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Size"*)**, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Size"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Size"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Size"*)** %9, i64 3
  %11 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Size"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Size"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::DisplayPrivate"* %7, %"class.gfx::Size"* dereferenceable(8) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting21SetDisplayColorMatrixERKN3gfx9TransformE(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::DisplayPrivate"* %6(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.viz::mojom::DisplayPrivate"* %7 to void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Transform"*)***
  %9 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Transform"*)**, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Transform"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Transform"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Transform"*)** %9, i64 4
  %11 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Transform"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::Transform"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::DisplayPrivate"* %7, %"class.gfx::Transform"* dereferenceable(68) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting21SetDisplayColorSpacesERKN3gfx18DisplayColorSpacesE(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::DisplayPrivate"* %6(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.viz::mojom::DisplayPrivate"* %7 to void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::DisplayColorSpaces"*)***
  %9 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::DisplayColorSpaces"*)**, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::DisplayColorSpaces"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::DisplayColorSpaces"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::DisplayColorSpaces"*)** %9, i64 5
  %11 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::DisplayColorSpaces"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.gfx::DisplayColorSpaces"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::DisplayPrivate"* %7, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting17SetOutputIsSecureEb(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::DisplayPrivate"* %6(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.viz::mojom::DisplayPrivate"* %7 to void (%"class.viz::mojom::DisplayPrivate"*, i1)***
  %9 = load void (%"class.viz::mojom::DisplayPrivate"*, i1)**, void (%"class.viz::mojom::DisplayPrivate"*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, i1)*, void (%"class.viz::mojom::DisplayPrivate"*, i1)** %9, i64 6
  %11 = load void (%"class.viz::mojom::DisplayPrivate"*, i1)*, void (%"class.viz::mojom::DisplayPrivate"*, i1)** %10, align 8
  tail call void %11(%"class.viz::mojom::DisplayPrivate"* %7, i1 zeroext %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting25SetDisplayVSyncParametersEN4base9TimeTicksENS2_9TimeDeltaE(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::DisplayPrivate"* %7(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %9 = bitcast %"class.viz::mojom::DisplayPrivate"* %8 to void (%"class.viz::mojom::DisplayPrivate"*, i64, i64)***
  %10 = load void (%"class.viz::mojom::DisplayPrivate"*, i64, i64)**, void (%"class.viz::mojom::DisplayPrivate"*, i64, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, i64, i64)*, void (%"class.viz::mojom::DisplayPrivate"*, i64, i64)** %10, i64 7
  %12 = load void (%"class.viz::mojom::DisplayPrivate"*, i64, i64)*, void (%"class.viz::mojom::DisplayPrivate"*, i64, i64)** %11, align 8
  tail call void %12(%"class.viz::mojom::DisplayPrivate"* %8, i64 %1, i64 %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting35ForceImmediateDrawAndSwapIfPossibleEv(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %3 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.viz::mojom::DisplayPrivate"* %5(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %7 = bitcast %"class.viz::mojom::DisplayPrivate"* %6 to void (%"class.viz::mojom::DisplayPrivate"*)***
  %8 = load void (%"class.viz::mojom::DisplayPrivate"*)**, void (%"class.viz::mojom::DisplayPrivate"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*)*, void (%"class.viz::mojom::DisplayPrivate"*)** %8, i64 8
  %10 = load void (%"class.viz::mojom::DisplayPrivate"*)*, void (%"class.viz::mojom::DisplayPrivate"*)** %9, align 8
  tail call void %10(%"class.viz::mojom::DisplayPrivate"* %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting25AddVSyncParameterObserverEN4mojo13PendingRemoteINS0_22VSyncParameterObserverEEE(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote", align 4
  %4 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::DisplayPrivate"* %7(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %9 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #6
  %11 = bitcast %"class.viz::mojom::DisplayPrivate"* %8 to void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingRemote"*)***
  %12 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingRemote"*)**, void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingRemote"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingRemote"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingRemote"*)** %12, i64 9
  %14 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingRemote"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingRemote"*)** %13, align 8
  call void %14(%"class.viz::mojom::DisplayPrivate"* %8, %"class.mojo::PendingRemote"* nonnull %3) #6
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTesting28SetDelegatedInkPointRendererEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver", align 8
  %4 = bitcast %"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)***
  %5 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)**, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)*, %"class.viz::mojom::DisplayPrivate"* (%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.viz::mojom::DisplayPrivate"* %7(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"* %0) #6
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #6
  %11 = bitcast %"class.viz::mojom::DisplayPrivate"* %8 to void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingReceiver"*)***
  %12 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingReceiver"*)**, void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingReceiver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingReceiver"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingReceiver"*)** %12, i64 10
  %14 = load void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingReceiver"*)*, void (%"class.viz::mojom::DisplayPrivate"*, %"class.mojo::PendingReceiver"*)** %13, align 8
  call void %14(%"class.viz::mojom::DisplayPrivate"* %8, %"class.mojo::PendingReceiver"* nonnull %3) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom25DisplayPrivateAsyncWaiterC2EPNS0_14DisplayPrivateE(%"class.viz::mojom::DisplayPrivateAsyncWaiter"* nocapture, %"class.viz::mojom::DisplayPrivate"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::DisplayPrivateAsyncWaiter", %"class.viz::mojom::DisplayPrivateAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::DisplayPrivate"* %1, %"class.viz::mojom::DisplayPrivate"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom25DisplayPrivateAsyncWaiterD2Ev(%"class.viz::mojom::DisplayPrivateAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom34DisplayClientInterceptorForTesting26DidCompleteSwapWithNewSizeERKN3gfx4SizeE(%"class.viz::mojom::DisplayClientInterceptorForTesting"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::DisplayClientInterceptorForTesting"* %0 to %"class.viz::mojom::DisplayClient"* (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::DisplayClient"* (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)**, %"class.viz::mojom::DisplayClient"* (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::DisplayClient"* (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)*, %"class.viz::mojom::DisplayClient"* (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.viz::mojom::DisplayClient"* (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)*, %"class.viz::mojom::DisplayClient"* (%"class.viz::mojom::DisplayClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::DisplayClient"* %6(%"class.viz::mojom::DisplayClientInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.viz::mojom::DisplayClient"* %7 to void (%"class.viz::mojom::DisplayClient"*, %"class.gfx::Size"*)***
  %9 = load void (%"class.viz::mojom::DisplayClient"*, %"class.gfx::Size"*)**, void (%"class.viz::mojom::DisplayClient"*, %"class.gfx::Size"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::DisplayClient"*, %"class.gfx::Size"*)*, void (%"class.viz::mojom::DisplayClient"*, %"class.gfx::Size"*)** %9, i64 2
  %11 = load void (%"class.viz::mojom::DisplayClient"*, %"class.gfx::Size"*)*, void (%"class.viz::mojom::DisplayClient"*, %"class.gfx::Size"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::DisplayClient"* %7, %"class.gfx::Size"* dereferenceable(8) %1) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom24DisplayClientAsyncWaiterC2EPNS0_13DisplayClientE(%"class.viz::mojom::DisplayClientAsyncWaiter"* nocapture, %"class.viz::mojom::DisplayClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::DisplayClientAsyncWaiter", %"class.viz::mojom::DisplayClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::DisplayClient"* %1, %"class.viz::mojom::DisplayClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom24DisplayClientAsyncWaiterD2Ev(%"class.viz::mojom::DisplayClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom14DisplayPrivateD2Ev(%"class.viz::mojom::DisplayPrivate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom35DisplayPrivateInterceptorForTestingD0Ev(%"class.viz::mojom::DisplayPrivateInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom13DisplayClientD2Ev(%"class.viz::mojom::DisplayClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom34DisplayClientInterceptorForTestingD0Ev(%"class.viz::mojom::DisplayClientInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
