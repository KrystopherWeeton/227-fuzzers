; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/absolute_capture_time_receiver.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/absolute_capture_time_receiver.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::AbsoluteCaptureTimeReceiver" = type { %"class.webrtc::AbsoluteCaptureTimeInterpolator", %"class.webrtc::CaptureClockOffsetUpdater" }
%"class.webrtc::AbsoluteCaptureTimeInterpolator" = type { %"class.webrtc::Clock"*, %"class.webrtc::Mutex", %"class.webrtc::Timestamp", i32, i32, i32, i64, %"class.absl::optional" }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.webrtc::CaptureClockOffsetUpdater" = type { %"class.absl::optional" }
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional" }

@_ZN6webrtc27AbsoluteCaptureTimeReceiverC1EPNS_5ClockE = hidden unnamed_addr alias void (%"class.webrtc::AbsoluteCaptureTimeReceiver"*, %"class.webrtc::Clock"*), void (%"class.webrtc::AbsoluteCaptureTimeReceiver"*, %"class.webrtc::Clock"*)* @_ZN6webrtc27AbsoluteCaptureTimeReceiverC2EPNS_5ClockE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc27AbsoluteCaptureTimeReceiverC2EPNS_5ClockE(%"class.webrtc::AbsoluteCaptureTimeReceiver"*, %"class.webrtc::Clock"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeReceiver", %"class.webrtc::AbsoluteCaptureTimeReceiver"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc31AbsoluteCaptureTimeInterpolatorC2EPNS_5ClockE(%"class.webrtc::AbsoluteCaptureTimeInterpolator"* %3, %"class.webrtc::Clock"* %1) #4
  %4 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeReceiver", %"class.webrtc::AbsoluteCaptureTimeReceiver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  ret void
}

declare void @_ZN6webrtc31AbsoluteCaptureTimeInterpolatorC2EPNS_5ClockE(%"class.webrtc::AbsoluteCaptureTimeInterpolator"*, %"class.webrtc::Clock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc27AbsoluteCaptureTimeReceiver27SetRemoteToLocalClockOffsetEN4absl8optionalIlEE(%"class.webrtc::AbsoluteCaptureTimeReceiver"*, i8, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeReceiver", %"class.webrtc::AbsoluteCaptureTimeReceiver"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc25CaptureClockOffsetUpdater27SetRemoteToLocalClockOffsetEN4absl8optionalIlEE(%"class.webrtc::CaptureClockOffsetUpdater"* %4, i8 %1, i64 %2) #4
  ret void
}

declare void @_ZN6webrtc25CaptureClockOffsetUpdater27SetRemoteToLocalClockOffsetEN4absl8optionalIlEE(%"class.webrtc::CaptureClockOffsetUpdater"*, i8, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc27AbsoluteCaptureTimeReceiver15OnReceivePacketEjjjRKN4absl8optionalINS_19AbsoluteCaptureTimeEEE(%"class.absl::optional.0"* noalias sret, %"class.webrtc::AbsoluteCaptureTimeReceiver"*, i32, i32, i32, %"class.absl::optional.0"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %7 = alloca [7 x i8], align 1
  %8 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 32, i1 false)
  %9 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeReceiver", %"class.webrtc::AbsoluteCaptureTimeReceiver"* %1, i64 0, i32 0
  tail call void @_ZN6webrtc31AbsoluteCaptureTimeInterpolator15OnReceivePacketEjjjRKN4absl8optionalINS_19AbsoluteCaptureTimeEEE(%"class.absl::optional.0"* sret %0, %"class.webrtc::AbsoluteCaptureTimeInterpolator"* %9, i32 %2, i32 %3, i32 %4, %"class.absl::optional.0"* dereferenceable(32) %5) #4
  %10 = load i8, i8* %8, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.webrtc::AbsoluteCaptureTimeReceiver", %"class.webrtc::AbsoluteCaptureTimeReceiver"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = tail call { i8, i64 } @_ZNK6webrtc25CaptureClockOffsetUpdater33AdjustEstimatedCaptureClockOffsetEN4absl8optionalIlEE(%"class.webrtc::CaptureClockOffsetUpdater"* %14, i8 %16, i64 %18) #4
  %20 = load i8, i8* %8, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %12
  tail call void @llvm.trap() #4
  unreachable

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = extractvalue { i8, i64 } %19, 1
  %26 = extractvalue { i8, i64 } %19, 0
  store i8 %26, i8* %15, align 8
  %27 = bitcast %"struct.webrtc::AbsoluteCaptureTime"* %24 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* nonnull align 1 %13, i64 7, i1 false)
  store i64 %25, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %13)
  br label %29

29:                                               ; preds = %6, %23
  ret void
}

declare void @_ZN6webrtc31AbsoluteCaptureTimeInterpolator15OnReceivePacketEjjjRKN4absl8optionalINS_19AbsoluteCaptureTimeEEE(%"class.absl::optional.0"* sret, %"class.webrtc::AbsoluteCaptureTimeInterpolator"*, i32, i32, i32, %"class.absl::optional.0"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { i8, i64 } @_ZNK6webrtc25CaptureClockOffsetUpdater33AdjustEstimatedCaptureClockOffsetEN4absl8optionalIlEE(%"class.webrtc::CaptureClockOffsetUpdater"*, i8, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
