; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkImageImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkImageImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkCubicResampler = type { float, float }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2, i32, i32 }
%class.sk_sp.2 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.9*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.9 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.10*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.1*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.9*, i8*, i64, i8*)*, i8* }
%class.sk_sp.10 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.11", [7 x i8] }>
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.(anonymous namespace)::SkImageImageFilter" = type <{ %class.SkImageFilter_Base.base, [4 x i8], %class.sk_sp.1, %struct.SkRect, %struct.SkRect, %struct.SkSamplingOptions, [4 x i8] }>
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.20 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.GrRecordingContext = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.21, [384 x i64], %class.sk_sp.22, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.23", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.29" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.21 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.22 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.35, %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.35 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.36 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.37 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.38 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [19 x i8] c"SkImageImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"SkImageSourceImpl\00", align 1
@_ZTVN12_GLOBAL__N_118SkImageImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::SkImageImageFilter"*)* @_ZN12_GLOBAL__N_118SkImageImageFilterD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkImageImageFilter"*)* @_ZN12_GLOBAL__N_118SkImageImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkImageImageFilter"*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkImageImageFilter"*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkImageImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkImageImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkImageImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkImageImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkImageImageFilter"*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZN12_GLOBAL__N_118SkImageImageFilter10CreateProcER12SkReadBuffer.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters5ImageE5sk_spI7SkImageERK6SkRectS5_RK17SkSamplingOptions(%class.sk_sp* noalias nocapture sret, %class.sk_sp.1* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkSamplingOptions* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %7 = load %class.SkImage*, %class.SkImage** %6, align 8
  %8 = icmp eq %class.SkImage* %7, null
  %9 = ptrtoint %class.SkImage* %7 to i64
  br i1 %8, label %24, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = fsub float %12, %14
  %16 = fcmp ugt float %15, 0.000000e+00
  br i1 %16, label %17, label %24

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float %19, %21
  %23 = fcmp ugt float %22, 0.000000e+00
  br i1 %23, label %26, label %24

24:                                               ; preds = %5, %17, %10
  %25 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %25, align 8
  br label %39

26:                                               ; preds = %17
  %27 = tail call i8* @_Znwm(i64 144) #10
  store %class.SkImage* null, %class.SkImage** %6, align 8
  %28 = bitcast i8* %27 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %28, %class.sk_sp* null, i32 0, %struct.SkRect* null) #11
  %29 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkImageImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 80
  %31 = bitcast i8* %30 to i64*
  store i64 %9, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 88
  %33 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %33, i64 16, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %27, i64 104
  %35 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 4 %35, i64 16, i1 false) #11
  %36 = getelementptr inbounds i8, i8* %27, i64 120
  %37 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 4 %37, i64 20, i1 false) #11
  %38 = bitcast %class.sk_sp* %0 to i8**
  store i8* %27, i8** %38, align 8
  br label %39

39:                                               ; preds = %26, %24
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z37SkRegisterImageImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_118SkImageImageFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_118SkImageImageFilter10CreateProcER12SkReadBuffer) #11
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118SkImageImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca [19 x i8], align 1
  %4 = alloca %struct.SkSamplingOptions, align 4
  %5 = alloca %struct.SkSamplingOptions, align 4
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca %class.sk_sp.1, align 8
  %9 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %9)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN12_GLOBAL__N_118SkImageImageFilter10CreateProcER12SkReadBuffer.sampling, i64 0, i32 1, i64 0), i64 3, i1 false)
  %10 = getelementptr inbounds [19 x i8], [19 x i8]* %3, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 16, i1 false)
  %11 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  %14 = icmp ult i32 %13, 83
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %16) #11
  %17 = tail call i32 @_ZN12SkReadBuffer18checkFilterQualityEv(%class.SkReadBuffer* %1) #11
  call void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions* nonnull %4, i32 %17, i32 1) #11
  br label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %19) #11
  call void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* nonnull sret %5, %class.SkReadBuffer* %1) #11
  br label %20

20:                                               ; preds = %18, %15
  %21 = phi i8* [ %19, %18 ], [ %16, %15 ]
  %22 = load i8, i8* %21, align 4
  %23 = getelementptr inbounds i8, i8* %21, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 %23, i64 19, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #11
  %24 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %27 = bitcast %struct.SkRect* %7 to i8*
  %28 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %29 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %6) #11
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %7) #11
  %30 = bitcast %class.sk_sp.1* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %8, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %31, align 8
  call void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp.1* nonnull sret %8, %class.SkReadBuffer* %1) #11
  %32 = load %class.SkImage*, %class.SkImage** %31, align 8
  %33 = icmp eq %class.SkImage* %32, null
  %34 = ptrtoint %class.SkImage* %32 to i64
  br i1 %33, label %35, label %37

35:                                               ; preds = %20
  %36 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %36, align 8
  br label %85

37:                                               ; preds = %20
  %38 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %39 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %31, align 8
  %40 = load float, float* %38, align 4, !noalias !2
  %41 = load float, float* %39, align 4, !noalias !2
  %42 = fsub float %40, %41
  %43 = fcmp ugt float %42, 0.000000e+00
  br i1 %43, label %44, label %61

44:                                               ; preds = %37
  %45 = load float, float* %26, align 4, !noalias !2
  %46 = load float, float* %25, align 4, !noalias !2
  %47 = fsub float %45, %46
  %48 = fcmp ugt float %47, 0.000000e+00
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = call i8* @_Znwm(i64 144) #10, !noalias !2
  %51 = bitcast i8* %50 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %51, %class.sk_sp* null, i32 0, %struct.SkRect* null) #11, !noalias !2
  %52 = bitcast i8* %50 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkImageImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8, !noalias !2
  %53 = getelementptr inbounds i8, i8* %50, i64 80
  %54 = bitcast i8* %53 to i64*
  store i64 %34, i64* %54, align 8, !noalias !2
  %55 = getelementptr inbounds i8, i8* %50, i64 88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 4 %24, i64 16, i1 false) #11, !noalias !2
  %56 = getelementptr inbounds i8, i8* %50, i64 104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 4 %27, i64 16, i1 false) #11, !noalias !2
  %57 = getelementptr inbounds i8, i8* %50, i64 120
  store i8 %22, i8* %57, align 8, !noalias !2
  %58 = getelementptr inbounds i8, i8* %50, i64 121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* nonnull align 1 %9, i64 19, i1 false), !noalias !2
  %59 = ptrtoint i8* %50 to i64
  %60 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %59, i64* %60, align 8
  br label %72

61:                                               ; preds = %37, %44
  %62 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %class.SkImage, %class.SkImage* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = bitcast %class.SkImage* %32 to %class.SkRefCntBase*
  %68 = bitcast %class.SkImage* %32 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #11
  br label %72

72:                                               ; preds = %66, %61, %49
  %73 = load %class.SkImage*, %class.SkImage** %31, align 8
  %74 = icmp eq %class.SkImage* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %class.SkImage, %class.SkImage* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.SkImage* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.SkImage* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %80) #11
  br label %85

85:                                               ; preds = %35, %72, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %9)
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118SkImageImageFilterD2Ev(%"class.(anonymous namespace)::SkImageImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkImageImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.(anonymous namespace)::SkImageImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118SkImageImageFilterD0Ev(%"class.(anonymous namespace)::SkImageImageFilter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkImageImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.(anonymous namespace)::SkImageImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %17) #11
  %18 = bitcast %"class.(anonymous namespace)::SkImageImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_118SkImageImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkImageImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_118SkImageImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_118SkImageImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkImageImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_118SkImageImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkImageImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 5
  tail call void @_ZN14SkSamplingPriv5WriteER13SkWriteBufferRK17SkSamplingOptions(%class.SkWriteBuffer* dereferenceable(56) %1, %struct.SkSamplingOptions* dereferenceable(20) %3) #11
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 3
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %6 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %6, i64 22
  %8 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %4) #11
  %9 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 4
  %10 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %5, align 8
  %11 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %10, i64 22
  %12 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %11, align 8
  tail call void %12(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %9) #11
  %13 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 2, i32 0
  %14 = load %class.SkImage*, %class.SkImage** %13, align 8
  %15 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkImage*)***
  %16 = load void (%class.SkWriteBuffer*, %class.SkImage*)**, void (%class.SkWriteBuffer*, %class.SkImage*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkImage*)*, void (%class.SkWriteBuffer*, %class.SkImage*)** %16, i64 26
  %18 = load void (%class.SkWriteBuffer*, %class.SkImage*)*, void (%class.SkWriteBuffer*, %class.SkImage*)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %1, %class.SkImage* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_118SkImageImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkImageImageFilter"* nocapture readonly, %struct.SkRect* nocapture readnone dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 4
  %4 = bitcast %struct.SkRect* %3 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 4, i32 2
  %7 = bitcast float* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 8
  %9 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %5, 0
  %10 = insertvalue { <2 x float>, <2 x float> } %9, <2 x float> %8, 1
  ret { <2 x float>, <2 x float> } %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_118SkImageImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkImageImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %11 = alloca %class.sk_sp.1, align 8
  %12 = alloca %class.sk_sp.20, align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %struct.SkISize*
  %15 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 4
  %17 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -1, i64 16, i1 false) #11
  %19 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %15, %struct.SkRect* nonnull %18, %struct.SkRect* dereferenceable(16) %16, i32 1) #11
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %21 = load <2 x float>, <2 x float>* %20, align 8
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %23 = load <2 x float>, <2 x float>* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %24 = extractelement <2 x float> %21, i32 0
  %25 = call float @llvm.floor.f32(float %24) #11
  %26 = fcmp olt float %25, 0x41DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0x41DFFFFFE0000000
  %28 = fcmp ogt float %27, 0xC1DFFFFFE0000000
  %29 = select i1 %28, float %27, float 0xC1DFFFFFE0000000
  %30 = fptosi float %29 to i32
  %31 = extractelement <2 x float> %21, i32 1
  %32 = call float @llvm.floor.f32(float %31) #11
  %33 = fcmp olt float %32, 0x41DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0x41DFFFFFE0000000
  %35 = fcmp ogt float %34, 0xC1DFFFFFE0000000
  %36 = select i1 %35, float %34, float 0xC1DFFFFFE0000000
  %37 = fptosi float %36 to i32
  %38 = extractelement <2 x float> %23, i32 0
  %39 = call float @llvm.ceil.f32(float %38) #11
  %40 = fcmp olt float %39, 0x41DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0x41DFFFFFE0000000
  %42 = fcmp ogt float %41, 0xC1DFFFFFE0000000
  %43 = select i1 %42, float %41, float 0xC1DFFFFFE0000000
  %44 = fptosi float %43 to i32
  %45 = extractelement <2 x float> %23, i32 1
  %46 = call float @llvm.ceil.f32(float %45) #11
  %47 = fcmp olt float %46, 0x41DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0x41DFFFFFE0000000
  %49 = fcmp ogt float %48, 0xC1DFFFFFE0000000
  %50 = select i1 %49, float %48, float 0xC1DFFFFFE0000000
  %51 = fptosi float %50 to i32
  %52 = zext i32 %37 to i64
  %53 = shl nuw i64 %52, 32
  %54 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = trunc i32 %55 to i8
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %4
  %59 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %15) #11
  %60 = zext i8 %59 to i32
  store i32 %60, i32* %54, align 4
  br label %61

61:                                               ; preds = %4, %58
  %62 = phi i32 [ %60, %58 ], [ %55, %4 ]
  %63 = and i32 %62, 12
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 0
  %67 = load float, float* %66, align 4
  %68 = fcmp ogt float %67, 0.000000e+00
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1, i32 0, i64 4
  %71 = load float, float* %70, align 4
  %72 = fcmp ule float %71, 0.000000e+00
  br label %73

73:                                               ; preds = %69, %65, %61
  %74 = phi i1 [ true, %65 ], [ true, %61 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 3
  %76 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %75, i64 0, i32 0
  %77 = load float, float* %76, align 8
  %78 = call float @llvm.floor.f32(float %77) #11
  %79 = fcmp oeq float %78, %77
  br i1 %79, label %80, label %85

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 3, i32 1
  %82 = load float, float* %81, align 4
  %83 = call float @llvm.floor.f32(float %82) #11
  %84 = fcmp une float %83, %82
  br label %85

85:                                               ; preds = %80, %73
  %86 = phi i1 [ true, %73 ], [ %84, %80 ]
  %87 = fcmp une float %25, %24
  %88 = fcmp une float %32, %31
  %89 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 3, i32 2
  %90 = load float, float* %89, align 4
  %91 = fsub float %90, %77
  %92 = call float @llvm.floor.f32(float %91) #11
  %93 = fcmp oeq float %92, %91
  %94 = fsub float %38, %24
  %95 = fcmp oeq float %91, %94
  %96 = and i1 %95, %93
  br i1 %96, label %97, label %227

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 3, i32 3
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 3, i32 1
  %101 = load float, float* %100, align 4
  %102 = fsub float %99, %101
  %103 = call float @llvm.floor.f32(float %102) #11
  %104 = fcmp oeq float %103, %102
  br i1 %104, label %105, label %227

105:                                              ; preds = %97
  %106 = fsub float %45, %31
  %107 = fcmp une float %102, %106
  %108 = or i1 %74, %86
  %109 = or i1 %88, %87
  %110 = or i1 %109, %108
  %111 = or i1 %110, %107
  br i1 %111, label %227, label %112

112:                                              ; preds = %105
  %113 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #11
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %115 = fcmp olt float %78, 0x41DFFFFFE0000000
  %116 = select i1 %115, float %78, float 0x41DFFFFFE0000000
  %117 = fcmp ogt float %116, 0xC1DFFFFFE0000000
  %118 = select i1 %117, float %116, float 0xC1DFFFFFE0000000
  %119 = fptosi float %118 to i32
  %120 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 3, i32 1
  %121 = load float, float* %120, align 4
  %122 = call float @llvm.floor.f32(float %121) #11
  %123 = fcmp olt float %122, 0x41DFFFFFE0000000
  %124 = select i1 %123, float %122, float 0x41DFFFFFE0000000
  %125 = fcmp ogt float %124, 0xC1DFFFFFE0000000
  %126 = select i1 %125, float %124, float 0xC1DFFFFFE0000000
  %127 = fptosi float %126 to i32
  %128 = call float @llvm.ceil.f32(float %90) #11
  %129 = fcmp olt float %128, 0x41DFFFFFE0000000
  %130 = select i1 %129, float %128, float 0x41DFFFFFE0000000
  %131 = fcmp ogt float %130, 0xC1DFFFFFE0000000
  %132 = select i1 %131, float %130, float 0xC1DFFFFFE0000000
  %133 = fptosi float %132 to i32
  %134 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 3, i32 3
  %135 = load float, float* %134, align 4
  %136 = call float @llvm.ceil.f32(float %135) #11
  %137 = fcmp olt float %136, 0x41DFFFFFE0000000
  %138 = select i1 %137, float %136, float 0x41DFFFFFE0000000
  %139 = fcmp ogt float %138, 0xC1DFFFFFE0000000
  %140 = select i1 %139, float %138, float 0xC1DFFFFFE0000000
  %141 = fptosi float %140 to i32
  %142 = zext i32 %127 to i64
  %143 = shl nuw i64 %142, 32
  %144 = zext i32 %119 to i64
  %145 = or i64 %143, %144
  %146 = zext i32 %141 to i64
  %147 = shl nuw i64 %146, 32
  %148 = zext i32 %133 to i64
  %149 = or i64 %147, %148
  %150 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %145, i64* %150, align 8
  store i64 %149, i64* %114, align 8
  %151 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #11
  %152 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 2, i32 0
  %153 = load %class.SkImage*, %class.SkImage** %152, align 8
  %154 = getelementptr inbounds %class.SkImage, %class.SkImage* %153, i64 0, i32 2, i32 1, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %class.SkImage, %class.SkImage* %153, i64 0, i32 2, i32 1, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  %159 = shl nuw i64 %158, 32
  %160 = zext i32 %155 to i64
  %161 = or i64 %159, %160
  %162 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  store i64 %161, i64* %163, align 8
  %164 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %8, %struct.SkIRect* nonnull dereferenceable(16) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #11
  br i1 %164, label %167, label %165

165:                                              ; preds = %112
  %166 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %166, align 8
  br label %226

167:                                              ; preds = %112
  %168 = bitcast { i64, i64 }* %7 to i32*
  %169 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %170 = load i32, i32* %168, align 8
  %171 = load i32, i32* %169, align 4
  %172 = sext i32 %30 to i64
  %173 = sext i32 %170 to i64
  %174 = add nsw i64 %173, %172
  %175 = icmp slt i64 %174, 2147483647
  %176 = select i1 %175, i64 %174, i64 2147483647
  %177 = icmp sgt i64 %176, -2147483647
  %178 = select i1 %177, i64 %176, i64 -2147483647
  %179 = sext i32 %37 to i64
  %180 = sext i32 %171 to i64
  %181 = add nsw i64 %180, %179
  %182 = icmp slt i64 %181, 2147483647
  %183 = select i1 %182, i64 %181, i64 2147483647
  %184 = icmp sgt i64 %183, -2147483647
  %185 = select i1 %184, i64 %183, i64 -2147483647
  %186 = sext i32 %119 to i64
  %187 = sub nsw i64 %178, %186
  %188 = icmp slt i64 %187, 2147483647
  %189 = select i1 %188, i64 %187, i64 2147483647
  %190 = icmp sgt i64 %189, -2147483647
  %191 = select i1 %190, i64 %189, i64 -2147483647
  %192 = sext i32 %127 to i64
  %193 = sub nsw i64 %185, %192
  %194 = icmp slt i64 %193, 2147483647
  %195 = select i1 %194, i64 %193, i64 2147483647
  %196 = icmp sgt i64 %195, -2147483647
  %197 = select i1 %196, i64 %195, i64 -2147483647
  %198 = shl nsw i64 %197, 32
  %199 = and i64 %191, 4294967295
  %200 = or i64 %198, %199
  %201 = bitcast %struct.SkIPoint* %3 to i64*
  store i64 %200, i64* %201, align 4
  %202 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %203 = load %class.SkSpecialImage*, %class.SkSpecialImage** %202, align 8
  %204 = call %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage* %203) #11
  %205 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %11, i64 0, i32 0
  %206 = load %class.SkImage*, %class.SkImage** %152, align 8
  %207 = icmp eq %class.SkImage* %206, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %167
  %209 = getelementptr inbounds %class.SkImage, %class.SkImage* %206, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i32* %209, i32 1 monotonic
  br label %211

211:                                              ; preds = %167, %208
  store %class.SkImage* %206, %class.SkImage** %205, align 8
  %212 = load %class.SkSpecialImage*, %class.SkSpecialImage** %202, align 8
  %213 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %212, i64 0, i32 1
  call void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.18* sret %0, %class.GrRecordingContext* %204, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.sk_sp.1* nonnull %11, %class.SkSurfaceProps* dereferenceable(8) %213) #11
  %214 = load %class.SkImage*, %class.SkImage** %205, align 8
  %215 = icmp eq %class.SkImage* %214, null
  br i1 %215, label %226, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %class.SkImage, %class.SkImage* %214, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 -1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = bitcast %class.SkImage* %214 to %class.SkRefCntBase*
  %222 = bitcast %class.SkImage* %214 to void (%class.SkRefCntBase*)***
  %223 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %222, align 8
  %224 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %223, i64 2
  %225 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, align 8
  call void %225(%class.SkRefCntBase* nonnull %221) #11
  br label %226

226:                                              ; preds = %220, %216, %211, %165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #11
  br label %281

227:                                              ; preds = %85, %97, %105
  %228 = bitcast %class.sk_sp.20* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #11
  %229 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %12, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %229, align 8
  %230 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #11
  %231 = sub i32 %44, %30
  %232 = sub i32 %51, %37
  %233 = zext i32 %232 to i64
  %234 = shl nuw i64 %233, 32
  %235 = zext i32 %231 to i64
  %236 = or i64 %234, %235
  store i64 %236, i64* %13, align 8
  %237 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %238 = load %class.SkSpecialImage*, %class.SkSpecialImage** %237, align 8, !noalias !5
  %239 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %238, i64 0, i32 1
  %240 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %241 = load i32, i32* %240, align 8, !noalias !5
  %242 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %243 = load %class.SkColorSpace*, %class.SkColorSpace** %242, align 8, !noalias !5
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* nonnull sret %12, %class.SkSpecialImage* %238, i32 %241, %class.SkColorSpace* %243, %struct.SkISize* nonnull dereferenceable(8) %14, i32 2, %class.SkSurfaceProps* dereferenceable(8) %239) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #11
  %244 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %229, align 8
  %245 = icmp eq %class.SkSpecialSurface* %244, null
  br i1 %245, label %246, label %248

246:                                              ; preds = %227
  %247 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %247, align 8
  br label %280

248:                                              ; preds = %227
  %249 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %244) #11
  %250 = sub nsw i32 0, %30
  %251 = sitofp i32 %250 to float
  %252 = sub nsw i32 0, %37
  %253 = sitofp i32 %252 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %249, float %251, float %253) #11
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %249, %class.SkMatrix* dereferenceable(40) %15) #11
  %254 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %255 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #11
  %256 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #11
  %257 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %258 = extractvalue { <2 x float>, <2 x float> } %256, 0
  store <2 x float> %258, <2 x float>* %257, align 8
  %259 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %260 = extractvalue { <2 x float>, <2 x float> } %256, 1
  store <2 x float> %260, <2 x float>* %259, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %249, %struct.SkRGBA4f* nonnull dereferenceable(16) %254, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #11
  %261 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 2, i32 0
  %262 = load %class.SkImage*, %class.SkImage** %261, align 8
  %263 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %1, i64 0, i32 5
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %249, %class.SkImage* %262, %struct.SkRect* dereferenceable(16) %75, %struct.SkRect* dereferenceable(16) %16, %struct.SkSamplingOptions* dereferenceable(20) %263, %class.SkPaint* null, i32 0) #11
  %264 = zext i32 %30 to i64
  %265 = or i64 %53, %264
  %266 = bitcast %struct.SkIPoint* %3 to i64*
  store i64 %265, i64* %266, align 4
  %267 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %229, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %267) #11
  %268 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %229, align 8
  %269 = icmp eq %class.SkSpecialSurface* %268, null
  br i1 %269, label %280, label %270

270:                                              ; preds = %248
  %271 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %268, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = atomicrmw add i32* %271, i32 -1 acq_rel
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %274, label %280

274:                                              ; preds = %270
  %275 = bitcast %class.SkSpecialSurface* %268 to %class.SkRefCntBase*
  %276 = bitcast %class.SkSpecialSurface* %268 to void (%class.SkRefCntBase*)***
  %277 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %276, align 8
  %278 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %277, i64 2
  %279 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %278, align 8
  call void %279(%class.SkRefCntBase* nonnull %275) #11
  br label %280

280:                                              ; preds = %246, %248, %270, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #11
  br label %281

281:                                              ; preds = %280, %226
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_118SkImageImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkImageImageFilter"*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkRect, align 4
  %7 = icmp eq i32 %3, 1
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = bitcast %"class.(anonymous namespace)::SkImageImageFilter"* %0 to %class.SkImageFilter_Base*
  %10 = tail call { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base* %9, %struct.SkIRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %2, i32 1, %struct.SkIRect* %4) #11
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  br label %58

13:                                               ; preds = %5
  %14 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %19 = getelementptr inbounds %"class.(anonymous namespace)::SkImageImageFilter", %"class.(anonymous namespace)::SkImageImageFilter"* %0, i64 0, i32 4
  %20 = bitcast %struct.SkRect* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 8 %20, i64 16, i1 false)
  %21 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %6, i32 1) #11
  %22 = load float, float* %15, align 4
  %23 = call float @llvm.floor.f32(float %22) #11
  %24 = fcmp olt float %23, 0x41DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0x41DFFFFFE0000000
  %26 = fcmp ogt float %25, 0xC1DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0xC1DFFFFFE0000000
  %28 = fptosi float %27 to i32
  %29 = load float, float* %16, align 4
  %30 = call float @llvm.floor.f32(float %29) #11
  %31 = fcmp olt float %30, 0x41DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0x41DFFFFFE0000000
  %33 = fcmp ogt float %32, 0xC1DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0xC1DFFFFFE0000000
  %35 = fptosi float %34 to i32
  %36 = load float, float* %17, align 4
  %37 = call float @llvm.ceil.f32(float %36) #11
  %38 = fcmp olt float %37, 0x41DFFFFFE0000000
  %39 = select i1 %38, float %37, float 0x41DFFFFFE0000000
  %40 = fcmp ogt float %39, 0xC1DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0xC1DFFFFFE0000000
  %42 = fptosi float %41 to i32
  %43 = load float, float* %18, align 4
  %44 = call float @llvm.ceil.f32(float %43) #11
  %45 = fcmp olt float %44, 0x41DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0x41DFFFFFE0000000
  %47 = fcmp ogt float %46, 0xC1DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0xC1DFFFFFE0000000
  %49 = fptosi float %48 to i32
  %50 = zext i32 %35 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %28 to i64
  %53 = or i64 %51, %52
  %54 = zext i32 %49 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %42 to i64
  %57 = or i64 %55, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %58

58:                                               ; preds = %13, %8
  %59 = phi i64 [ %11, %8 ], [ %53, %13 ]
  %60 = phi i64 [ %12, %8 ], [ %57, %13 ]
  %61 = insertvalue { i64, i64 } undef, i64 %59, 0
  %62 = insertvalue { i64, i64 } %61, i64 %60, 1
  ret { i64, i64 } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_118SkImageImageFilter21onCanHandleComplexCTMEv(%"class.(anonymous namespace)::SkImageImageFilter"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN14SkSamplingPriv5WriteER13SkWriteBufferRK17SkSamplingOptions(%class.SkWriteBuffer* dereferenceable(56), %struct.SkSamplingOptions* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.18* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), %class.sk_sp.1*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare %class.GrRecordingContext* @_ZNK14SkSpecialImage10getContextEv(%class.SkSpecialImage*) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.20* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare i32 @_ZN12SkReadBuffer18checkFilterQualityEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN17SkSamplingOptionsC1E15SkFilterQualityNS_14MediumBehaviorE(%struct.SkSamplingOptions*, i32, i32) unnamed_addr #2

declare void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* sret, %class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp.1* sret, %class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN14SkImageFilters5ImageE5sk_spI7SkImageERK6SkRectS5_RK17SkSamplingOptions: argument 0"}
!4 = distinct !{!4, !"_ZN14SkImageFilters5ImageE5sk_spI7SkImageERK6SkRectS5_RK17SkSamplingOptions"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!7 = distinct !{!7, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
