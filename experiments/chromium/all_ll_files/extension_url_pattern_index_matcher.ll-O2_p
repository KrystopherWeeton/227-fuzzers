; ModuleID = '../../extensions/browser/api/declarative_net_request/extension_url_pattern_index_matcher.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/extension_url_pattern_index_matcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher" = type { %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.flatbuffers::Vector"*, %"class.std::__1::vector", i8, i64 }
%"class.extensions::declarative_net_request::RulesetMatcherBase" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.util::IdType", %"class.std::__1::map" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.std::__1::__compressed_pair.10" }
%"class.url_pattern_index::UrlPatternIndexMatcher" = type { %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"class.absl::optional" }
%"struct.url_pattern_index::flat::UrlPatternIndex" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.url_pattern_index::UrlPatternIndexMatcher"* }
%"class.flatbuffers::Vector.15" = type { i32 }
%"class.flatbuffers::Vector" = type { i32 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, [7 x i8], %union.anon.51 }
%union.anon.51 = type { %"struct.extensions::declarative_net_request::RequestAction" }
%"struct.extensions::declarative_net_request::RequestAction" = type <{ i32, [4 x i8], %"class.absl::optional.52", i32, [4 x i8], i64, %"class.util::IdType", [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.57", %"class.std::__1::vector.57", i8, [7 x i8] }>
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GURL* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"class.std::__1::__compressed_pair.59" }
%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo" = type { %"class.std::__1::basic_string", i32, %"class.absl::optional.32" }
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* }
%"struct.extensions::declarative_net_request::RequestParams" = type { %class.GURL*, %"class.url::Origin", i32, i8, i32, %"struct.content::GlobalFrameRoutingId", %"class.base::RepeatingCallback", %"class.base::flat_map", %"class.absl::optional.32", %"class.base::flat_map.37" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.19" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.37" = type { %"class.base::internal::flat_tree.38" }
%"class.base::internal::flat_tree.38" = type { %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"*, %"class.std::__1::__compressed_pair.42" }
%"struct.std::__1::pair.41" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::pair.41"* }
%"struct.url_pattern_index::flat::UrlRule" = type { %"class.flatbuffers::Table" }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.extensions::declarative_net_request::RequestAction"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"**, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.url_pattern_index::flat::UrlRule"** }
%"struct.extensions::declarative_net_request::flat::UrlRuleMetadata" = type { %"class.flatbuffers::Table" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher21IsExtraHeadersMatcherEv = comdat any

$_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher13GetRulesCountEv = comdat any

$_ZNSt3__16vectorIN17url_pattern_index22UrlPatternIndexMatcherENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN17url_pattern_index22UrlPatternIndexMatcherENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRPKNS1_4flat15UrlPatternIndexEEEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZTVN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*)* @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD2Ev to i8*), i8* bitcast (void (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*)* @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector.68"*, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"*, i8, i64)* @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher23GetModifyHeadersActionsERKNS0_13RequestParamsEN4absl8optionalImEE to i8*), i8* bitcast (i1 (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*)* @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher21IsExtraHeadersMatcherEv to i8*), i8* bitcast (i64 (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*)* @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher13GetRulesCountEv to i8*), i8* bitcast (void (%"class.absl::optional.47"*, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"*)* @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher25GetAllowAllRequestsActionERKNS0_13RequestParamsE to i8*), i8* bitcast (void (%"class.absl::optional.47"*, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"*)* @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher39GetBeforeRequestActionIgnoringAncestorsERKNS0_13RequestParamsE to i8*)] }, align 8

@_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPKN11flatbuffers6VectorINSF_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEEEPKNSG_INSH_INS0_4flat15UrlRuleMetadataEEEEE = hidden unnamed_addr alias void (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"class.std::__1::basic_string"*, i32, %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector"*), void (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"class.std::__1::basic_string"*, i32, %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector"*)* @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPKN11flatbuffers6VectorINSF_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEEEPKNSG_INSH_INS0_4flat15UrlRuleMetadataEEEEE
@_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD1Ev = hidden unnamed_addr alias void (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*), void (%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*)* @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPKN11flatbuffers6VectorINSF_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEEEPKNSG_INSH_INS0_4flat15UrlRuleMetadataEEEEE(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector"*) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.url_pattern_index::flat::UrlPatternIndex"*, align 8
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEE(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2) #9
  %8 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 1
  store %"class.flatbuffers::Vector"* %4, %"class.flatbuffers::Vector"** %9, align 8
  %10 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9, !alias.scope !2
  tail call void @_ZNSt3__16vectorIN17url_pattern_index22UrlPatternIndexMatcherENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"* %10, i64 3) #9
  %14 = getelementptr inbounds %"class.flatbuffers::Vector.15", %"class.flatbuffers::Vector.15"* %3, i64 1, i32 0
  %15 = getelementptr inbounds %"class.flatbuffers::Vector.15", %"class.flatbuffers::Vector.15"* %3, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !5
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %14, i64 %17
  %19 = bitcast i32* %18 to i8*
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %5
  %22 = bitcast i32* %14 to i8*
  %23 = bitcast %"struct.url_pattern_index::flat::UrlPatternIndex"** %6 to i8*
  %24 = bitcast %"struct.url_pattern_index::flat::UrlPatternIndex"** %6 to i8**
  %25 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"** %11 to i64*
  br label %26

26:                                               ; preds = %40, %21
  %27 = phi i8* [ %22, %21 ], [ %41, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9, !noalias !2
  store %"struct.url_pattern_index::flat::UrlPatternIndex"* inttoptr (i64 -6148914691236517206 to %"struct.url_pattern_index::flat::UrlPatternIndex"*), %"struct.url_pattern_index::flat::UrlPatternIndex"** %6, align 8, !noalias !2
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4, !noalias !2
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %27, i64 %30
  store i8* %31, i8** %24, align 8, !noalias !2
  %32 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %11, align 8, !alias.scope !2
  %33 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %12, align 8, !alias.scope !2
  %34 = icmp ult %"class.url_pattern_index::UrlPatternIndexMatcher"* %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %26
  %36 = bitcast i8* %31 to %"struct.url_pattern_index::flat::UrlPatternIndex"*
  call void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %32, %"struct.url_pattern_index::flat::UrlPatternIndex"* %36) #9
  %37 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %32, i64 1
  %38 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %37 to i64
  store i64 %38, i64* %25, align 8, !alias.scope !2
  br label %40

39:                                               ; preds = %26
  call void @_ZNSt3__16vectorIN17url_pattern_index22UrlPatternIndexMatcherENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRPKNS1_4flat15UrlPatternIndexEEEEvDpOT_(%"class.std::__1::vector"* %10, %"struct.url_pattern_index::flat::UrlPatternIndex"** nonnull dereferenceable(8) %6) #9
  br label %40

40:                                               ; preds = %39, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9, !noalias !2
  %41 = getelementptr inbounds i8, i8* %27, i64 4
  %42 = icmp eq i8* %41, %19
  br i1 %42, label %43, label %26

43:                                               ; preds = %40, %5
  %44 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 3
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %46 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %45, align 8
  %47 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %46, i64 2
  %48 = call i64 @_ZNK17url_pattern_index22UrlPatternIndexMatcher13GetRulesCountEv(%"class.url_pattern_index::UrlPatternIndexMatcher"* %47) #9
  %49 = icmp ne i64 %48, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %44, align 8
  %51 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 4
  %52 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %45, align 8
  %53 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %11, align 8
  %54 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %52, %53
  br i1 %54, label %62, label %55

55:                                               ; preds = %43, %55
  %56 = phi i64 [ %59, %55 ], [ 0, %43 ]
  %57 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %60, %55 ], [ %52, %43 ]
  %58 = call i64 @_ZNK17url_pattern_index22UrlPatternIndexMatcher13GetRulesCountEv(%"class.url_pattern_index::UrlPatternIndexMatcher"* %57) #9
  %59 = add i64 %58, %56
  %60 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %57, i64 1
  %61 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %60, %53
  br i1 %61, label %62, label %55

62:                                               ; preds = %55, %43
  %63 = phi i64 [ 0, %43 ], [ %59, %55 ]
  store i64 %63, i64* %51, align 8
  ret void
}

declare void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD2Ev(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %4, align 8
  %6 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"* %5 to i8*
  %9 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %9, align 8
  %11 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %13, i64 -1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherD1Ev(%"class.url_pattern_index::UrlPatternIndexMatcher"* %14) #9
  %15 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.url_pattern_index::UrlPatternIndexMatcher"* %5, %"class.url_pattern_index::UrlPatternIndexMatcher"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD2Ev(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %22) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD2Ev(%"class.extensions::declarative_net_request::RulesetMatcherBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD0Ev(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %4, align 8
  %6 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"* %5 to i8*
  %9 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %9, align 8
  %11 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %13, i64 -1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherD1Ev(%"class.url_pattern_index::UrlPatternIndexMatcher"* %14) #9
  %15 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.url_pattern_index::UrlPatternIndexMatcher"* %5, %"class.url_pattern_index::UrlPatternIndexMatcher"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBaseD2Ev(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %22) #9
  %23 = bitcast %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher25GetAllowAllRequestsActionERKNS0_13RequestParamsE(%"class.absl::optional.47"* noalias sret, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %5 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %5, align 8
  %7 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %6, i64 1
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %9 = load %class.GURL*, %class.GURL** %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !8
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 6
  %19 = tail call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %7, %class.GURL* dereferenceable(120) %9, %"class.url::Origin"* dereferenceable(80) %10, i32 %12, i32 0, i32 %14, i1 zeroext %17, i1 zeroext false, %"class.base::RepeatingCallback"* dereferenceable(8) %18, i32 1) #9
  %20 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = bitcast %union.anon.51* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 240, i1 false) #9
  br label %30

25:                                               ; preds = %3
  %26 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase28CreateAllowAllRequestsActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %4, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %27, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"struct.url_pattern_index::flat::UrlRule"* nonnull dereferenceable(1) %19) #9
  %28 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %29, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %4) #9
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %26) #9
  br label %30

30:                                               ; preds = %25, %21
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.url_pattern_index::flat::UrlRule"* @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher15GetMatchingRuleERKNS0_13RequestParamsENS0_4flat9IndexTypeEN17url_pattern_index22UrlPatternIndexMatcher16FindRuleStrategyE(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* nocapture readonly, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %6, align 8
  %8 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %7, i64 %5
  %9 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %1, i64 0, i32 0
  %10 = load %class.GURL*, %class.GURL** %9, align 8
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %1, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %1, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !8
  %18 = icmp ne i8 %17, 0
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %1, i64 0, i32 6
  %20 = tail call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %8, %class.GURL* dereferenceable(120) %10, %"class.url::Origin"* dereferenceable(80) %11, i32 %13, i32 0, i32 %15, i1 zeroext %18, i1 zeroext false, %"class.base::RepeatingCallback"* dereferenceable(8) %19, i32 %3) #9
  ret %"struct.url_pattern_index::flat::UrlRule"* %20
}

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase28CreateAllowAllRequestsActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher23GetModifyHeadersActionsERKNS0_13RequestParamsEN4absl8optionalImEE(%"class.std::__1::vector.68"* noalias sret, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), i8, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.75", align 8
  %7 = bitcast %"class.std::__1::vector.75"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector.75"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %10, align 8, !noalias !9
  %13 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %12, i64 2
  %14 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %15 = load %class.GURL*, %class.GURL** %14, align 8, !noalias !9
  %16 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 2
  %18 = load i32, i32* %17, align 8, !noalias !9
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 4
  %20 = load i32, i32* %19, align 8, !noalias !9
  %21 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !8, !noalias !9
  %23 = icmp ne i8 %22, 0
  %24 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 6
  call void @_ZNK17url_pattern_index22UrlPatternIndexMatcher14FindAllMatchesERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"class.std::__1::vector.75"* nonnull sret %6, %"class.url_pattern_index::UrlPatternIndexMatcher"* %13, %class.GURL* dereferenceable(120) %15, %"class.url::Origin"* dereferenceable(80) %16, i32 %18, i32 0, i32 %20, i1 zeroext %23, i1 zeroext false, %"class.base::RepeatingCallback"* dereferenceable(8) %24) #9
  %25 = icmp eq i8 %3, 0
  br i1 %25, label %104, label %26

26:                                               ; preds = %5
  %27 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %8, align 8
  %28 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %9, align 8
  %29 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %27, %28
  br i1 %29, label %55, label %30

30:                                               ; preds = %26, %52
  %31 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %53, %52 ], [ %27, %26 ]
  %32 = load %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %31, align 8
  %33 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = sub nsw i64 0, %35
  %37 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %32, i64 0, i32 0, i32 0, i64 %36
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2
  %40 = icmp ugt i16 %39, 26
  br i1 %40, label %41, label %55

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %37, i64 26
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %41
  %47 = zext i16 %44 to i64
  %48 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %32, i64 0, i32 0, i32 0, i64 %47
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %50, %4
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %31, i64 1
  %54 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %53, %28
  br i1 %54, label %104, label %30

55:                                               ; preds = %30, %41, %46, %26
  %56 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %27, %26 ], [ %31, %46 ], [ %31, %41 ], [ %31, %30 ]
  %57 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %56, %28
  br i1 %57, label %104, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %56, i64 1
  %60 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %59, %28
  br i1 %60, label %99, label %61

61:                                               ; preds = %58
  %62 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %56 to i64
  br label %63

63:                                               ; preds = %61, %92
  %64 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %94, %92 ], [ %59, %61 ]
  %65 = phi i64 [ %93, %92 ], [ %62, %61 ]
  %66 = load %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %64, align 8
  %67 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %66, i64 0, i32 0, i32 0, i64 %70
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp ugt i16 %73, 26
  %75 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"* %66 to i64
  br i1 %74, label %76, label %92

76:                                               ; preds = %63
  %77 = getelementptr inbounds i8, i8* %71, i64 26
  %78 = bitcast i8* %77 to i16*
  %79 = load i16, i16* %78, align 2
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %76
  %82 = zext i16 %79 to i64
  %83 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %66, i64 0, i32 0, i32 0, i64 %82
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %85, %4
  br i1 %86, label %87, label %92

87:                                               ; preds = %81
  %88 = inttoptr i64 %65 to %"struct.url_pattern_index::flat::UrlRule"**
  %89 = inttoptr i64 %65 to i64*
  store i64 %75, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %88, i64 1
  %91 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %90 to i64
  br label %92

92:                                               ; preds = %63, %76, %87, %81
  %93 = phi i64 [ %65, %81 ], [ %91, %87 ], [ %65, %76 ], [ %65, %63 ]
  %94 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule"*, %"struct.url_pattern_index::flat::UrlRule"** %64, i64 1
  %95 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %94, %28
  br i1 %95, label %96, label %63

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to %"struct.url_pattern_index::flat::UrlRule"**
  %98 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %9, align 8
  br label %99

99:                                               ; preds = %96, %58
  %100 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %28, %58 ], [ %98, %96 ]
  %101 = phi %"struct.url_pattern_index::flat::UrlRule"** [ %56, %58 ], [ %97, %96 ]
  %102 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %101, %100
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  store %"struct.url_pattern_index::flat::UrlRule"** %101, %"struct.url_pattern_index::flat::UrlRule"*** %9, align 8
  br label %104

104:                                              ; preds = %52, %5, %103, %99, %55
  %105 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 0
  %106 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 1
  %107 = load %"class.flatbuffers::Vector"*, %"class.flatbuffers::Vector"** %106, align 8
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase35GetModifyHeadersActionsFromMetadataERKNS0_13RequestParamsERKNSt3__16vectorIPKN17url_pattern_index4flat7UrlRuleENS5_9allocatorISB_EEEERKN11flatbuffers6VectorINSH_6OffsetINS0_4flat15UrlRuleMetadataEEEEE(%"class.std::__1::vector.68"* sret %0, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %105, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"class.std::__1::vector.75"* nonnull dereferenceable(24) %6, %"class.flatbuffers::Vector"* dereferenceable(4) %107) #9
  %108 = load %"struct.url_pattern_index::flat::UrlRule"**, %"struct.url_pattern_index::flat::UrlRule"*** %8, align 8
  %109 = icmp eq %"struct.url_pattern_index::flat::UrlRule"** %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %104
  %111 = ptrtoint %"struct.url_pattern_index::flat::UrlRule"** %108 to i64
  %112 = bitcast %"struct.url_pattern_index::flat::UrlRule"*** %9 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.url_pattern_index::flat::UrlRule"** %108 to i8*
  call void @_ZdlPv(i8* %113) #10
  br label %114

114:                                              ; preds = %104, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher19GetAllMatchingRulesERKNS0_13RequestParamsENS0_4flat9IndexTypeE(%"class.std::__1::vector.75"* noalias sret, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* nocapture readonly, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), i32) local_unnamed_addr #0 align 2 {
  %5 = zext i32 %3 to i64
  %6 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %6, align 8
  %8 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %7, i64 %5
  %9 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %10 = load %class.GURL*, %class.GURL** %9, align 8
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !8
  %18 = icmp ne i8 %17, 0
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 6
  tail call void @_ZNK17url_pattern_index22UrlPatternIndexMatcher14FindAllMatchesERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"class.std::__1::vector.75"* sret %0, %"class.url_pattern_index::UrlPatternIndexMatcher"* %8, %class.GURL* dereferenceable(120) %10, %"class.url::Origin"* dereferenceable(80) %11, i32 %13, i32 0, i32 %15, i1 zeroext %18, i1 zeroext false, %"class.base::RepeatingCallback"* dereferenceable(8) %19) #9
  ret void
}

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase35GetModifyHeadersActionsFromMetadataERKNS0_13RequestParamsERKNSt3__16vectorIPKN17url_pattern_index4flat7UrlRuleENS5_9allocatorISB_EEEERKN11flatbuffers6VectorINSH_6OffsetINS0_4flat15UrlRuleMetadataEEEEE(%"class.std::__1::vector.68"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), %"class.std::__1::vector.75"* dereferenceable(24), %"class.flatbuffers::Vector"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher39GetBeforeRequestActionIgnoringAncestorsERKNS0_13RequestParamsE(%"class.absl::optional.47"* noalias sret, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %5 = alloca %"class.absl::optional.47", align 8
  %6 = alloca %"class.absl::optional.47", align 8
  call void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher28GetBeforeRequestActionHelperERKNS0_13RequestParamsE(%"class.absl::optional.47"* nonnull sret %5, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2)
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %7, align 8, !noalias !12
  %9 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %8, i64 1
  %10 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %11 = load %class.GURL*, %class.GURL** %10, align 8, !noalias !12
  %12 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 2
  %14 = load i32, i32* %13, align 8, !noalias !12
  %15 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 4
  %16 = load i32, i32* %15, align 8, !noalias !12
  %17 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !8, !noalias !12
  %19 = icmp ne i8 %18, 0
  %20 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 6
  %21 = call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %9, %class.GURL* dereferenceable(120) %11, %"class.url::Origin"* dereferenceable(80) %12, i32 %14, i32 0, i32 %16, i1 zeroext %19, i1 zeroext false, %"class.base::RepeatingCallback"* dereferenceable(8) %20, i32 1) #9, !noalias !12
  %22 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 8, !alias.scope !12
  %25 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast %union.anon.51* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 240, i1 false) #9, !alias.scope !12
  br label %32

27:                                               ; preds = %3
  %28 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %28) #9, !noalias !12
  %29 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase28CreateAllowAllRequestsActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %4, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %29, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"struct.url_pattern_index::flat::UrlRule"* nonnull dereferenceable(1) %21) #9, !noalias !12
  %30 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %30, align 8, !alias.scope !12
  %31 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %31, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %4) #9
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %28) #9, !noalias !12
  br label %32

32:                                               ; preds = %23, %27
  call void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.47"* sret %0, %"class.absl::optional.47"* nonnull %5, %"class.absl::optional.47"* nonnull %6) #9
  %33 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %6, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %37) #9
  store i8 0, i8* %33, align 8
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %43) #9
  store i8 0, i8* %39, align 8
  br label %44

44:                                               ; preds = %38, %42
  ret void
}

declare void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.47"* sret, %"class.absl::optional.47"*, %"class.absl::optional.47"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher28GetBeforeRequestActionHelperERKNS0_13RequestParamsE(%"class.absl::optional.47"* noalias sret, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %5 = alloca %"struct.extensions::declarative_net_request::RequestAction", align 8
  %6 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %6, align 8
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 0
  %9 = load %class.GURL*, %class.GURL** %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !8
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %2, i64 0, i32 6
  %19 = tail call %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %7, %class.GURL* dereferenceable(120) %9, %"class.url::Origin"* dereferenceable(80) %10, i32 %12, i32 0, i32 %14, i1 zeroext %17, i1 zeroext false, %"class.base::RepeatingCallback"* dereferenceable(8) %18, i32 1) #9
  %20 = icmp eq %"struct.url_pattern_index::flat::UrlRule"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = bitcast %union.anon.51* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 240, i1 false) #9
  br label %141

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 1
  %27 = load %"class.flatbuffers::Vector"*, %"class.flatbuffers::Vector"** %26, align 8
  %28 = bitcast %"struct.url_pattern_index::flat::UrlRule"* %19 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = sub nsw i64 0, %30
  %32 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %19, i64 0, i32 0, i32 0, i64 %31
  %33 = bitcast i8* %32 to i16*
  %34 = load i16, i16* %33, align 2
  %35 = icmp ugt i16 %34, 24
  br i1 %35, label %36, label %46

36:                                               ; preds = %25
  %37 = getelementptr inbounds i8, i8* %32, i64 24
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = zext i16 %39 to i64
  %43 = getelementptr inbounds %"struct.url_pattern_index::flat::UrlRule", %"struct.url_pattern_index::flat::UrlRule"* %19, i64 0, i32 0, i32 0, i64 %42
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %25, %36, %41
  %47 = phi i32 [ %45, %41 ], [ 0, %36 ], [ 0, %25 ]
  %48 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %27, i64 1, i32 0
  %49 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %27, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %104, label %52

52:                                               ; preds = %46
  %53 = zext i32 %50 to i64
  br label %54

54:                                               ; preds = %96, %52
  %55 = phi i64 [ %98, %96 ], [ %53, %52 ]
  %56 = phi i64 [ %97, %96 ], [ 0, %52 ]
  %57 = add i64 %56, %55
  %58 = lshr i64 %57, 1
  %59 = getelementptr i32, i32* %48, i64 %58
  %60 = bitcast i32* %59 to i8*
  %61 = load i32, i32* %59, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  %64 = bitcast i8* %63 to %"class.flatbuffers::Table"*
  %65 = bitcast i8* %63 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"class.flatbuffers::Table", %"class.flatbuffers::Table"* %64, i64 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %85

73:                                               ; preds = %54
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = getelementptr inbounds %"class.flatbuffers::Table", %"class.flatbuffers::Table"* %64, i64 0, i32 0, i64 %79
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = icmp ugt i32 %82, %47
  %84 = zext i1 %83 to i32
  br label %85

85:                                               ; preds = %78, %73, %54
  %86 = phi i32 [ %84, %78 ], [ 0, %54 ], [ 0, %73 ]
  %87 = phi i32 [ %82, %78 ], [ 0, %54 ], [ 0, %73 ]
  %88 = icmp ult i32 %87, %47
  %89 = zext i1 %88 to i32
  %90 = sub nsw i32 %89, %86
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %90, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %92
  %95 = add nuw i64 %58, 1
  br label %96

96:                                               ; preds = %94, %85
  %97 = phi i64 [ %95, %94 ], [ %56, %85 ]
  %98 = phi i64 [ %55, %94 ], [ %58, %85 ]
  %99 = icmp ult i64 %97, %98
  br i1 %99, label %54, label %104

100:                                              ; preds = %92
  %101 = icmp eq i32* %59, null
  %102 = bitcast i8* %63 to %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"*
  %103 = select i1 %101, %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* null, %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %102
  br label %104

104:                                              ; preds = %96, %100, %46
  %105 = phi %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* [ null, %46 ], [ %103, %100 ], [ null, %96 ]
  %106 = bitcast %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %105, i64 0, i32 0, i32 0, i64 %109
  %111 = bitcast i8* %110 to i16*
  %112 = load i16, i16* %111, align 2
  %113 = icmp ugt i16 %112, 6
  br i1 %113, label %114, label %123

114:                                              ; preds = %104
  %115 = getelementptr inbounds i8, i8* %110, i64 6
  %116 = bitcast i8* %115 to i16*
  %117 = load i16, i16* %116, align 2
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %114
  %120 = zext i16 %117 to i64
  %121 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata", %"struct.extensions::declarative_net_request::flat::UrlRuleMetadata"* %105, i64 0, i32 0, i32 0, i64 %120
  %122 = load i8, i8* %121, align 1
  switch i8 %122, label %137 [
    i8 0, label %123
    i8 1, label %128
    i8 2, label %133
    i8 3, label %135
  ]

123:                                              ; preds = %104, %114, %119
  %124 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %124) #9
  %125 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase34CreateBlockOrCollapseRequestActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %4, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %125, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"struct.url_pattern_index::flat::UrlRule"* nonnull dereferenceable(1) %19) #9
  %126 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %127, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %4) #9
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %124) #9
  br label %141

128:                                              ; preds = %119
  %129 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %129) #9
  %130 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase17CreateAllowActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* nonnull sret %5, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %130, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"struct.url_pattern_index::flat::UrlRule"* nonnull dereferenceable(1) %19) #9
  %131 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %131, align 8
  %132 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %132, %"struct.extensions::declarative_net_request::RequestAction"* nonnull dereferenceable(240) %5) #9
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %129) #9
  br label %141

133:                                              ; preds = %119
  %134 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 0
  tail call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase32CreateRedirectActionFromMetadataERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleERKN11flatbuffers6VectorINSA_6OffsetINS0_4flat15UrlRuleMetadataEEEEE(%"class.absl::optional.47"* sret %0, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %134, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"struct.url_pattern_index::flat::UrlRule"* nonnull dereferenceable(1) %19, %"class.flatbuffers::Vector"* dereferenceable(4) %27) #9
  br label %141

135:                                              ; preds = %119
  %136 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %1, i64 0, i32 0
  tail call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateUpgradeActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"class.absl::optional.47"* sret %0, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %136, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200) %2, %"struct.url_pattern_index::flat::UrlRule"* nonnull dereferenceable(1) %19) #9
  br label %141

137:                                              ; preds = %119
  %138 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %138, align 8
  %139 = getelementptr inbounds %"class.absl::optional.47", %"class.absl::optional.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %140 = bitcast %union.anon.51* %139 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 240, i1 false) #9
  br label %141

141:                                              ; preds = %123, %128, %133, %135, %137, %21
  ret void
}

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase34CreateBlockOrCollapseRequestActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1)) local_unnamed_addr #1

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase17CreateAllowActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"struct.extensions::declarative_net_request::RequestAction"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1)) local_unnamed_addr #1

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase32CreateRedirectActionFromMetadataERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleERKN11flatbuffers6VectorINSA_6OffsetINS0_4flat15UrlRuleMetadataEEEEE(%"class.absl::optional.47"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1), %"class.flatbuffers::Vector"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase19CreateUpgradeActionERKNS0_13RequestParamsERKN17url_pattern_index4flat7UrlRuleE(%"class.absl::optional.47"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"* dereferenceable(200), %"struct.url_pattern_index::flat::UrlRule"* dereferenceable(1)) local_unnamed_addr #1

declare %"struct.url_pattern_index::flat::UrlRule"* @_ZNK17url_pattern_index22UrlPatternIndexMatcher9FindMatchERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEENS0_16FindRuleStrategyE(%"class.url_pattern_index::UrlPatternIndexMatcher"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32, i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZNK17url_pattern_index22UrlPatternIndexMatcher14FindAllMatchesERK4GURLRKN3url6OriginENS_4flat11ElementTypeENS8_14ActivationTypeENS8_13RequestMethodEbbRKN4base17RepeatingCallbackIFbRKN11flatbuffers6VectorIhEEEEE(%"class.std::__1::vector.75"* sret, %"class.url_pattern_index::UrlPatternIndexMatcher"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32, i32, i32, i1 zeroext, i1 zeroext, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher21IsExtraHeadersMatcherEv(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher13GetRulesCountEv(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN17url_pattern_index22UrlPatternIndexMatcherENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.url_pattern_index::UrlPatternIndexMatcher"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.url_pattern_index::UrlPatternIndexMatcher"*
  %24 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %23, i64 %20
  %25 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %24 to i64
  %26 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %23, i64 %1
  %27 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.url_pattern_index::UrlPatternIndexMatcher"*
  %29 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %31, i64 -1
  %34 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %32, i64 -1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EOS0_(%"class.url_pattern_index::UrlPatternIndexMatcher"* %33, %"class.url_pattern_index::UrlPatternIndexMatcher"* dereferenceable(24) %34) #9
  %35 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.url_pattern_index::UrlPatternIndexMatcher"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %48, i64 -1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherD1Ev(%"class.url_pattern_index::UrlPatternIndexMatcher"* %49) #9
  %50 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EOS0_(%"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17url_pattern_index22UrlPatternIndexMatcherD1Ev(%"class.url_pattern_index::UrlPatternIndexMatcher"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN17url_pattern_index22UrlPatternIndexMatcherENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRPKNS1_4flat15UrlPatternIndexEEEEvDpOT_(%"class.std::__1::vector"*, %"struct.url_pattern_index::flat::UrlPatternIndex"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.url_pattern_index::UrlPatternIndexMatcher"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.url_pattern_index::UrlPatternIndexMatcher"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %33, i64 %9
  %35 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %33, i64 %32
  %36 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %35 to i64
  %37 = load %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"struct.url_pattern_index::flat::UrlPatternIndex"** %1, align 8
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"* %34, %"struct.url_pattern_index::flat::UrlPatternIndex"* %37) #9
  %38 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %34, i64 1
  %39 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %41 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %40, align 8
  %42 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %3, align 8
  %43 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %42, %41
  br i1 %43, label %44, label %46

44:                                               ; preds = %31
  %45 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %41 to i64
  br label %55

46:                                               ; preds = %31, %46
  %47 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %49, %46 ], [ %34, %31 ]
  %48 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %50, %46 ], [ %42, %31 ]
  %49 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %47, i64 -1
  %50 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %48, i64 -1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EOS0_(%"class.url_pattern_index::UrlPatternIndexMatcher"* %49, %"class.url_pattern_index::UrlPatternIndexMatcher"* dereferenceable(24) %50) #9
  %51 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %50, %41
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = load i64, i64* %6, align 8
  %54 = load %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"** %3, align 8
  br label %55

55:                                               ; preds = %44, %52
  %56 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %41, %44 ], [ %54, %52 ]
  %57 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %34, %44 ], [ %49, %52 ]
  %58 = phi i64 [ %45, %44 ], [ %53, %52 ]
  %59 = ptrtoint %"class.url_pattern_index::UrlPatternIndexMatcher"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %39, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %60 = inttoptr i64 %58 to %"class.url_pattern_index::UrlPatternIndexMatcher"*
  %61 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %56, %60
  br i1 %61, label %66, label %62

62:                                               ; preds = %55, %62
  %63 = phi %"class.url_pattern_index::UrlPatternIndexMatcher"* [ %64, %62 ], [ %56, %55 ]
  %64 = getelementptr inbounds %"class.url_pattern_index::UrlPatternIndexMatcher", %"class.url_pattern_index::UrlPatternIndexMatcher"* %63, i64 -1
  tail call void @_ZN17url_pattern_index22UrlPatternIndexMatcherD1Ev(%"class.url_pattern_index::UrlPatternIndexMatcher"* %64) #9
  %65 = icmp eq %"class.url_pattern_index::UrlPatternIndexMatcher"* %64, %60
  br i1 %65, label %66, label %62

66:                                               ; preds = %62, %55
  %67 = icmp eq i64 %58, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %66, %68
  ret void
}

declare void @_ZN17url_pattern_index22UrlPatternIndexMatcherC1EPKNS_4flat15UrlPatternIndexE(%"class.url_pattern_index::UrlPatternIndexMatcher"*, %"struct.url_pattern_index::flat::UrlPatternIndex"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare i64 @_ZNK17url_pattern_index22UrlPatternIndexMatcher13GetRulesCountEv(%"class.url_pattern_index::UrlPatternIndexMatcher"*) local_unnamed_addr #1

declare void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_111GetMatchersEPKN11flatbuffers6VectorINS2_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN10extensions23declarative_net_request12_GLOBAL__N_111GetMatchersEPKN11flatbuffers6VectorINS2_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEEE"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK11flatbuffers6VectorINS_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK11flatbuffers6VectorINS_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEE3endEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher19GetAllMatchingRulesERKNS0_13RequestParamsENS0_4flat9IndexTypeE: argument 0"}
!11 = distinct !{!11, !"_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher19GetAllMatchingRulesERKNS0_13RequestParamsENS0_4flat9IndexTypeE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher25GetAllowAllRequestsActionERKNS0_13RequestParamsE: argument 0"}
!14 = distinct !{!14, !"_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher25GetAllowAllRequestsActionERKNS0_13RequestParamsE"}
