; ModuleID = '../../third_party/abseil-cpp/absl/base/internal/cycleclock.cc'
source_filename = "../../third_party/abseil-cpp/absl/base/internal/cycleclock.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 ()* }

@_ZN4absl13base_internal12_GLOBAL__N_118cycle_clock_sourceE = internal unnamed_addr global %"struct.std::__1::atomic" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4absl13base_internal10CycleClock3NowEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* bitcast (%"struct.std::__1::atomic"* @_ZN4absl13base_internal12_GLOBAL__N_118cycle_clock_sourceE to i64*) monotonic, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %6, label %3

3:                                                ; preds = %0
  %4 = load atomic i64, i64* bitcast (%"struct.std::__1::atomic"* @_ZN4absl13base_internal12_GLOBAL__N_118cycle_clock_sourceE to i64*) acquire, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %0, %3
  %7 = tail call i64 @_ZN4absl13base_internal18UnscaledCycleClock3NowEv() #3
  br label %11

8:                                                ; preds = %3
  %9 = inttoptr i64 %4 to i64 ()*
  %10 = tail call i64 %9() #3
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  %13 = ashr i64 %12, 1
  ret i64 %13
}

declare i64 @_ZN4absl13base_internal18UnscaledCycleClock3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN4absl13base_internal10CycleClock9FrequencyEv() local_unnamed_addr #0 align 2 {
  %1 = tail call double @_ZN4absl13base_internal18UnscaledCycleClock9FrequencyEv() #3
  %2 = fmul double %1, 5.000000e-01
  ret double %2
}

declare double @_ZN4absl13base_internal18UnscaledCycleClock9FrequencyEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4absl13base_internal16CycleClockSource8RegisterEPFlvE(i64 ()*) local_unnamed_addr #2 align 2 {
  %2 = ptrtoint i64 ()* %0 to i64
  store atomic i64 %2, i64* bitcast (%"struct.std::__1::atomic"* @_ZN4absl13base_internal12_GLOBAL__N_118cycle_clock_sourceE to i64*) release, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
