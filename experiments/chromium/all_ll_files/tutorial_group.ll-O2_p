; ModuleID = '../../chrome/browser/video_tutorials/internal/tutorial_group.cc'
source_filename = "../../chrome/browser/video_tutorials/internal/tutorial_group.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.video_tutorials::TutorialGroup" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"*, %"class.std::__1::__compressed_pair.4" }
%"struct.video_tutorials::Tutorial" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %class.GURL, %class.GURL, %class.GURL, %class.GURL, %class.GURL, %class.GURL, i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.video_tutorials::Tutorial"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN15video_tutorials8TutorialENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZN15video_tutorials13TutorialGroupC1Ev = hidden unnamed_addr alias void (%"struct.video_tutorials::TutorialGroup"*), void (%"struct.video_tutorials::TutorialGroup"*)* @_ZN15video_tutorials13TutorialGroupC2Ev
@_ZN15video_tutorials13TutorialGroupC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"struct.video_tutorials::TutorialGroup"*, %"class.std::__1::basic_string"*), void (%"struct.video_tutorials::TutorialGroup"*, %"class.std::__1::basic_string"*)* @_ZN15video_tutorials13TutorialGroupC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN15video_tutorials13TutorialGroupD1Ev = hidden unnamed_addr alias void (%"struct.video_tutorials::TutorialGroup"*), void (%"struct.video_tutorials::TutorialGroup"*)* @_ZN15video_tutorials13TutorialGroupD2Ev
@_ZN15video_tutorials13TutorialGroupC1ERKS0_ = hidden unnamed_addr alias void (%"struct.video_tutorials::TutorialGroup"*, %"struct.video_tutorials::TutorialGroup"*), void (%"struct.video_tutorials::TutorialGroup"*, %"struct.video_tutorials::TutorialGroup"*)* @_ZN15video_tutorials13TutorialGroupC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15video_tutorials13TutorialGroupC2Ev(%"struct.video_tutorials::TutorialGroup"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15video_tutorials13TutorialGroupC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.video_tutorials::TutorialGroup"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #8
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #8
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1
  %18 = bitcast %"class.std::__1::vector"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15video_tutorials13TutorialGroupeqERKS0_(%"struct.video_tutorials::TutorialGroup"* nocapture readonly, %"struct.video_tutorials::TutorialGroup"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.video_tutorials::TutorialGroup"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %82

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"struct.video_tutorials::TutorialGroup"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %82

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %82

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %82

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1, i32 0, i32 1
  %56 = bitcast %"struct.video_tutorials::Tutorial"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector"* %53 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 1, i32 0, i32 1
  %62 = bitcast %"struct.video_tutorials::Tutorial"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector"* %54 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = icmp eq i64 %60, %66
  %68 = inttoptr i64 %59 to %"struct.video_tutorials::Tutorial"*
  %69 = inttoptr i64 %57 to %"struct.video_tutorials::Tutorial"*
  br i1 %67, label %70, label %82

70:                                               ; preds = %52
  %71 = icmp eq %"struct.video_tutorials::Tutorial"* %68, %69
  br i1 %71, label %82, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %65 to %"struct.video_tutorials::Tutorial"*
  br label %74

74:                                               ; preds = %72, %78
  %75 = phi %"struct.video_tutorials::Tutorial"* [ %80, %78 ], [ %73, %72 ]
  %76 = phi %"struct.video_tutorials::Tutorial"* [ %79, %78 ], [ %68, %72 ]
  %77 = tail call zeroext i1 @_ZNK15video_tutorials8TutorialeqERKS0_(%"struct.video_tutorials::Tutorial"* %76, %"struct.video_tutorials::Tutorial"* dereferenceable(760) %75) #8
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %76, i64 1
  %80 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %75, i64 1
  %81 = icmp eq %"struct.video_tutorials::Tutorial"* %79, %69
  br i1 %81, label %82, label %74

82:                                               ; preds = %44, %78, %74, %31, %2, %70, %52, %49
  %83 = phi i1 [ false, %49 ], [ false, %52 ], [ true, %70 ], [ false, %2 ], [ false, %31 ], [ false, %74 ], [ true, %78 ], [ false, %44 ]
  ret i1 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15video_tutorials13TutorialGroupneERKS0_(%"struct.video_tutorials::TutorialGroup"* nocapture readonly, %"struct.video_tutorials::TutorialGroup"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK15video_tutorials13TutorialGroupeqERKS0_(%"struct.video_tutorials::TutorialGroup"* %0, %"struct.video_tutorials::TutorialGroup"* dereferenceable(48) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15video_tutorials13TutorialGroupD2Ev(%"struct.video_tutorials::TutorialGroup"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %3, align 8
  %5 = icmp eq %"struct.video_tutorials::Tutorial"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.video_tutorials::Tutorial"* %4 to i8*
  %8 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %8, align 8
  %10 = icmp eq %"struct.video_tutorials::Tutorial"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.video_tutorials::Tutorial"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %12, i64 -1
  tail call void @_ZN15video_tutorials8TutorialD1Ev(%"struct.video_tutorials::Tutorial"* %13) #8
  %14 = icmp eq %"struct.video_tutorials::Tutorial"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.video_tutorials::Tutorial"* %4, %"struct.video_tutorials::Tutorial"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %1, %18
  %21 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15video_tutorials13TutorialGroupC2ERKS0_(%"struct.video_tutorials::TutorialGroup"*, %"struct.video_tutorials::TutorialGroup"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.video_tutorials::TutorialGroup"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to i8*
  %9 = bitcast %"struct.video_tutorials::TutorialGroup"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #8
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #8
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__1::vector"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #8
  %20 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.video_tutorials::Tutorial"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = sdiv exact i64 %25, 760
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %56, label %28

28:                                               ; preds = %16
  %29 = icmp ugt i64 %26, 24272031675933620
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #10
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #9
  %34 = bitcast i8* %33 to %"struct.video_tutorials::Tutorial"*
  %35 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.video_tutorials::Tutorial"** %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast %"class.std::__1::vector"* %17 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %34, i64 %26
  %39 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.video_tutorials::Tutorial"* %38, %"struct.video_tutorials::Tutorial"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %41 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %40, align 8
  %42 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %20, align 8
  %43 = bitcast %"struct.video_tutorials::Tutorial"** %35 to i64*
  %44 = ptrtoint i8* %33 to i64
  %45 = icmp eq %"struct.video_tutorials::Tutorial"* %41, %42
  br i1 %45, label %54, label %46

46:                                               ; preds = %32, %46
  %47 = phi %"struct.video_tutorials::Tutorial"* [ %50, %46 ], [ %34, %32 ]
  %48 = phi %"struct.video_tutorials::Tutorial"* [ %49, %46 ], [ %41, %32 ]
  tail call void @_ZN15video_tutorials8TutorialC1ERKS0_(%"struct.video_tutorials::Tutorial"* %47, %"struct.video_tutorials::Tutorial"* dereferenceable(760) %48) #8
  %49 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %48, i64 1
  %50 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %47, i64 1
  %51 = icmp eq %"struct.video_tutorials::Tutorial"* %49, %42
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = ptrtoint %"struct.video_tutorials::Tutorial"* %50 to i64
  br label %54

54:                                               ; preds = %52, %32
  %55 = phi i64 [ %44, %32 ], [ %53, %52 ]
  store i64 %55, i64* %43, align 8
  br label %56

56:                                               ; preds = %16, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.video_tutorials::TutorialGroup"* @_ZN15video_tutorials13TutorialGroupaSERKS0_(%"struct.video_tutorials::TutorialGroup"* returned, %"struct.video_tutorials::TutorialGroup"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 0
  %4 = icmp eq %"struct.video_tutorials::TutorialGroup"* %0, %1
  br i1 %4, label %40, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"struct.video_tutorials::TutorialGroup"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"struct.video_tutorials::TutorialGroup"* %0 to i8*
  %17 = bitcast %"struct.video_tutorials::TutorialGroup"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #8
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #8
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.video_tutorials::TutorialGroup"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #8
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 1, i32 0, i32 0
  %37 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %36, align 8
  %38 = getelementptr inbounds %"struct.video_tutorials::TutorialGroup", %"struct.video_tutorials::TutorialGroup"* %1, i64 0, i32 1, i32 0, i32 1
  %39 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %38, align 8
  tail call void @_ZNSt3__16vectorIN15video_tutorials8TutorialENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %35, %"struct.video_tutorials::Tutorial"* %37, %"struct.video_tutorials::Tutorial"* %39) #8
  br label %40

40:                                               ; preds = %2, %34
  ret %"struct.video_tutorials::TutorialGroup"* %0
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN15video_tutorials8TutorialD1Ev(%"struct.video_tutorials::Tutorial"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZNK15video_tutorials8TutorialeqERKS0_(%"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"* dereferenceable(760)) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN15video_tutorials8TutorialC1ERKS0_(%"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"* dereferenceable(760)) unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN15video_tutorials8TutorialENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.video_tutorials::Tutorial"* %2 to i64
  %5 = ptrtoint %"struct.video_tutorials::Tutorial"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 760
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.video_tutorials::Tutorial"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 760
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.video_tutorials::Tutorial"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.video_tutorials::Tutorial"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 760
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %1, i64 %22
  %25 = select i1 %23, %"struct.video_tutorials::Tutorial"* %24, %"struct.video_tutorials::Tutorial"* %2
  %26 = icmp eq %"struct.video_tutorials::Tutorial"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.video_tutorials::Tutorial"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.video_tutorials::Tutorial"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(760) %"struct.video_tutorials::Tutorial"* @_ZN15video_tutorials8TutorialaSERKS0_(%"struct.video_tutorials::Tutorial"* %28, %"struct.video_tutorials::Tutorial"* dereferenceable(760) %29) #8
  %31 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %29, i64 1
  %32 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %28, i64 1
  %33 = icmp eq %"struct.video_tutorials::Tutorial"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.video_tutorials::Tutorial"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.video_tutorials::Tutorial"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.video_tutorials::Tutorial"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.video_tutorials::Tutorial"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"struct.video_tutorials::Tutorial"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN15video_tutorials8TutorialC1ERKS0_(%"struct.video_tutorials::Tutorial"* %42, %"struct.video_tutorials::Tutorial"* dereferenceable(760) %43) #8
  %44 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %43, i64 1
  %45 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %42, i64 1
  %46 = icmp eq %"struct.video_tutorials::Tutorial"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.video_tutorials::Tutorial"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %18, align 8
  %53 = icmp eq %"struct.video_tutorials::Tutorial"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"struct.video_tutorials::Tutorial"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %55, i64 -1
  tail call void @_ZN15video_tutorials8TutorialD1Ev(%"struct.video_tutorials::Tutorial"* %56) #8
  %57 = icmp eq %"struct.video_tutorials::Tutorial"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"struct.video_tutorials::Tutorial"* %35, %"struct.video_tutorials::Tutorial"** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %64 = load %"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"** %63, align 8
  %65 = icmp eq %"struct.video_tutorials::Tutorial"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.video_tutorials::Tutorial"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %67, i64 -1
  tail call void @_ZN15video_tutorials8TutorialD1Ev(%"struct.video_tutorials::Tutorial"* %68) #8
  %69 = icmp eq %"struct.video_tutorials::Tutorial"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"struct.video_tutorials::Tutorial"* %16, %"struct.video_tutorials::Tutorial"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #9
  %75 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #8
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 24272031675933620
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #10
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 760
  %83 = icmp ult i64 %82, 12136015837966810
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 24272031675933620, %81 ]
  %90 = mul i64 %89, 760
  %91 = tail call i8* @_Znwm(i64 %90) #9
  %92 = bitcast i8* %91 to %"struct.video_tutorials::Tutorial"*
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %"struct.video_tutorials::Tutorial"** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %92, i64 %89
  store %"struct.video_tutorials::Tutorial"* %96, %"struct.video_tutorials::Tutorial"** %8, align 8
  %97 = bitcast %"struct.video_tutorials::Tutorial"** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %"struct.video_tutorials::Tutorial"* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %"struct.video_tutorials::Tutorial"* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %"struct.video_tutorials::Tutorial"* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN15video_tutorials8TutorialC1ERKS0_(%"struct.video_tutorials::Tutorial"* %101, %"struct.video_tutorials::Tutorial"* dereferenceable(760) %102) #8
  %103 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %102, i64 1
  %104 = getelementptr inbounds %"struct.video_tutorials::Tutorial", %"struct.video_tutorials::Tutorial"* %101, i64 1
  %105 = icmp eq %"struct.video_tutorials::Tutorial"* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %"struct.video_tutorials::Tutorial"* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare dereferenceable(760) %"struct.video_tutorials::Tutorial"* @_ZN15video_tutorials8TutorialaSERKS0_(%"struct.video_tutorials::Tutorial"*, %"struct.video_tutorials::Tutorial"* dereferenceable(760)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
