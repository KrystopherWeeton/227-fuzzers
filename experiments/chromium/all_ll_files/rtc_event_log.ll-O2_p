; ModuleID = '../../third_party/webrtc/api/rtc_event_log/rtc_event_log.cc'
source_filename = "../../third_party/webrtc/api/rtc_event_log/rtc_event_log.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::RtcEventLogNull" = type { %"class.webrtc::RtcEventLog" }
%"class.webrtc::RtcEventLog" = type { i32 (...)** }
%"class.webrtc::RtcEventLogOutput" = type { i32 (...)** }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.webrtc::RtcEvent" = type { i32 (...)**, i64 }

$_ZN6webrtc11RtcEventLogD2Ev = comdat any

$_ZN6webrtc15RtcEventLogNullD0Ev = comdat any

$_ZN6webrtc15RtcEventLogNull11StopLoggingEv = comdat any

$_ZN6webrtc11RtcEventLog11StopLoggingENSt3__18functionIFvvEEE = comdat any

$_ZN6webrtc15RtcEventLogNull3LogENSt3__110unique_ptrINS_8RtcEventENS1_14default_deleteIS3_EEEE = comdat any

@_ZTVN6webrtc15RtcEventLogNullE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEventLog"*)* @_ZN6webrtc11RtcEventLogD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEventLogNull"*)* @_ZN6webrtc15RtcEventLogNullD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::RtcEventLogNull"*, %"class.webrtc::RtcEventLogOutput"*, i64)* @_ZN6webrtc15RtcEventLogNull12StartLoggingENSt3__110unique_ptrINS_17RtcEventLogOutputENS1_14default_deleteIS3_EEEEl to i8*), i8* bitcast (void (%"class.webrtc::RtcEventLogNull"*)* @_ZN6webrtc15RtcEventLogNull11StopLoggingEv to i8*), i8* bitcast (void (%"class.webrtc::RtcEventLog"*, %"class.std::__1::function"*)* @_ZN6webrtc11RtcEventLog11StopLoggingENSt3__18functionIFvvEEE to i8*), i8* bitcast (void (%"class.webrtc::RtcEventLogNull"*, %"class.webrtc::RtcEvent"*)* @_ZN6webrtc15RtcEventLogNull3LogENSt3__110unique_ptrINS_8RtcEventENS1_14default_deleteIS3_EEEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15RtcEventLogNull12StartLoggingENSt3__110unique_ptrINS_17RtcEventLogOutputENS1_14default_deleteIS3_EEEEl(%"class.webrtc::RtcEventLogNull"* nocapture readnone, %"class.webrtc::RtcEventLogOutput"*, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.webrtc::RtcEventLogOutput"* %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.webrtc::RtcEventLogOutput"* %1 to void (%"class.webrtc::RtcEventLogOutput"*)***
  %7 = load void (%"class.webrtc::RtcEventLogOutput"*)**, void (%"class.webrtc::RtcEventLogOutput"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.webrtc::RtcEventLogOutput"*)*, void (%"class.webrtc::RtcEventLogOutput"*)** %7, i64 1
  %9 = load void (%"class.webrtc::RtcEventLogOutput"*)*, void (%"class.webrtc::RtcEventLogOutput"*)** %8, align 8
  tail call void %9(%"class.webrtc::RtcEventLogOutput"* nonnull %1) #3
  br label %10

10:                                               ; preds = %3, %5
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc11RtcEventLogD2Ev(%"class.webrtc::RtcEventLog"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc15RtcEventLogNullD0Ev(%"class.webrtc::RtcEventLogNull"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.webrtc::RtcEventLogNull"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc15RtcEventLogNull11StopLoggingEv(%"class.webrtc::RtcEventLogNull"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc11RtcEventLog11StopLoggingENSt3__18functionIFvvEEE(%"class.webrtc::RtcEventLog"*, %"class.std::__1::function"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.webrtc::RtcEventLog"* %0 to void (%"class.webrtc::RtcEventLog"*)***
  %4 = load void (%"class.webrtc::RtcEventLog"*)**, void (%"class.webrtc::RtcEventLog"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.webrtc::RtcEventLog"*)*, void (%"class.webrtc::RtcEventLog"*)** %4, i64 3
  %6 = load void (%"class.webrtc::RtcEventLog"*)*, void (%"class.webrtc::RtcEventLog"*)** %5, align 8
  tail call void %6(%"class.webrtc::RtcEventLog"* %0) #3
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %8 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  tail call void %8(%"union.std::__1::__function::__policy_storage"* %9) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc15RtcEventLogNull3LogENSt3__110unique_ptrINS_8RtcEventENS1_14default_deleteIS3_EEEE(%"class.webrtc::RtcEventLogNull"*, %"class.webrtc::RtcEvent"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.webrtc::RtcEvent"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.webrtc::RtcEvent"* %1 to void (%"class.webrtc::RtcEvent"*)***
  %6 = load void (%"class.webrtc::RtcEvent"*)**, void (%"class.webrtc::RtcEvent"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.webrtc::RtcEvent"*)*, void (%"class.webrtc::RtcEvent"*)** %6, i64 1
  %8 = load void (%"class.webrtc::RtcEvent"*)*, void (%"class.webrtc::RtcEvent"*)** %7, align 8
  tail call void %8(%"class.webrtc::RtcEvent"* nonnull %1) #3
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
