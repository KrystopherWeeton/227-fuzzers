; ModuleID = '../../third_party/boringssl/src/crypto/x509/x_pubkey.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x_pubkey.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_AUX_st = type { i8*, i32, i32, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 }
%struct.ASN1_VALUE_st = type opaque
%struct.CRYPTO_STATIC_MUTEX = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.X509_pubkey_st = type { %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st* }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.evp_pkey_st = type { i32, i32, %union.anon.0, %struct.evp_pkey_asn1_method_st* }
%union.anon.0 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.cbs_st = type { i8*, i64 }

@X509_PUBKEY_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_ALGOR_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_BIT_STRING_it }], align 16
@X509_PUBKEY_aux = internal constant %struct.ASN1_AUX_st { i8* null, i32 0, i32 0, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* @pubkey_cb, i32 0 }, align 8
@.str = private unnamed_addr constant [12 x i8] c"X509_PUBKEY\00", align 1
@X509_PUBKEY_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @X509_PUBKEY_seq_tt, i32 0, i32 0), i64 2, i8* bitcast (%struct.ASN1_AUX_st* @X509_PUBKEY_aux to i8*), i64 24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509/x_pubkey.c\00", align 1
@g_pubkey_lock = internal global %struct.CRYPTO_STATIC_MUTEX zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"algor\00", align 1
@X509_ALGOR_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"public_key\00", align 1
@ASN1_BIT_STRING_it = external constant %struct.ASN1_ITEM_st, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_pubkey_st* @d2i_X509_PUBKEY(%struct.X509_pubkey_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.X509_pubkey_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.X509_pubkey_st*
  ret %struct.X509_pubkey_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_PUBKEY(%struct.X509_pubkey_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.X509_pubkey_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_pubkey_st* @X509_PUBKEY_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.X509_pubkey_st*
  ret %struct.X509_pubkey_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_PUBKEY_free(%struct.X509_pubkey_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.X509_pubkey_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_PUBKEY_set(%struct.X509_pubkey_st**, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  store i8* null, i8** %3, align 8
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %9 = icmp eq %struct.X509_pubkey_st** %0, null
  br i1 %9, label %45, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = call i32 @CBB_init(%struct.cbb_st* nonnull %5, i64 0) #5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = call i32 @EVP_marshal_public_key(%struct.cbb_st* nonnull %5, %struct.evp_pkey_st* %1) #5
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = call i32 @CBB_finish(%struct.cbb_st* nonnull %5, i8** nonnull %3, i64* nonnull %4) #5
  %19 = icmp eq i32 %18, 0
  %20 = load i64, i64* %4, align 8
  %21 = icmp slt i64 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %14, %10, %17
  call void @CBB_cleanup(%struct.cbb_st* nonnull %5) #5
  call void @ERR_put_error(i32 11, i32 0, i32 126, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 106) #5
  br label %40

24:                                               ; preds = %17
  %25 = bitcast i8** %3 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8** %6 to i64*
  store i64 %26, i64* %27, align 8
  %28 = call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** null, i8** nonnull %6, i64 %20, %struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  %29 = icmp eq %struct.ASN1_VALUE_st* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = load i8*, i8** %6, align 8
  %32 = load i8*, i8** %3, align 8
  %33 = load i64, i64* %4, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = icmp eq i8* %31, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %30, %24
  call void @ERR_put_error(i32 11, i32 0, i32 125, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 113) #5
  br label %40

37:                                               ; preds = %30
  call void @OPENSSL_free(i8* %32) #5
  %38 = bitcast %struct.X509_pubkey_st** %0 to %struct.ASN1_VALUE_st**
  %39 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %38, align 8
  call void @ASN1_item_free(%struct.ASN1_VALUE_st* %39, %struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  store %struct.ASN1_VALUE_st* %28, %struct.ASN1_VALUE_st** %38, align 8
  br label %43

40:                                               ; preds = %36, %23
  %41 = phi %struct.ASN1_VALUE_st* [ null, %23 ], [ %28, %36 ]
  call void @ASN1_item_free(%struct.ASN1_VALUE_st* %41, %struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  %42 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %42) #5
  br label %43

43:                                               ; preds = %40, %37
  %44 = phi i32 [ 0, %40 ], [ 1, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #5
  br label %45

45:                                               ; preds = %2, %43
  %46 = phi i32 [ %44, %43 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret i32 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #1

declare i32 @EVP_marshal_public_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #1

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #1

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st*) local_unnamed_addr #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  store i8* null, i8** %2, align 8
  %5 = icmp eq %struct.X509_pubkey_st* %0, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %1
  tail call void @CRYPTO_STATIC_MUTEX_lock_read(%struct.CRYPTO_STATIC_MUTEX* nonnull @g_pubkey_lock) #5
  %7 = getelementptr inbounds %struct.X509_pubkey_st, %struct.X509_pubkey_st* %0, i64 0, i32 2
  %8 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %7, align 8
  %9 = icmp eq %struct.evp_pkey_st* %8, null
  tail call void @CRYPTO_STATIC_MUTEX_unlock_read(%struct.CRYPTO_STATIC_MUTEX* nonnull @g_pubkey_lock) #5
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %7, align 8
  %12 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* %11) #5
  %13 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %7, align 8
  br label %41

14:                                               ; preds = %6
  %15 = bitcast %struct.X509_pubkey_st* %0 to %struct.ASN1_VALUE_st*
  %16 = call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* nonnull %15, i8** nonnull %2, %struct.ASN1_ITEM_st* nonnull @X509_PUBKEY_it) #5
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %38, label %18

18:                                               ; preds = %14
  %19 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load i8*, i8** %2, align 8
  %21 = sext i32 %16 to i64
  call void @CBS_init(%struct.cbs_st* nonnull %3, i8* %20, i64 %21) #5
  %22 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %3) #5
  %23 = icmp eq %struct.evp_pkey_st* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #5
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %24, %18
  call void @ERR_put_error(i32 11, i32 0, i32 125, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 159) #5
  br label %38

28:                                               ; preds = %24
  call void @CRYPTO_STATIC_MUTEX_lock_write(%struct.CRYPTO_STATIC_MUTEX* nonnull @g_pubkey_lock) #5
  %29 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %7, align 8
  %30 = icmp eq %struct.evp_pkey_st* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  call void @CRYPTO_STATIC_MUTEX_unlock_write(%struct.CRYPTO_STATIC_MUTEX* nonnull @g_pubkey_lock) #5
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %22) #5
  %32 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %7, align 8
  br label %34

33:                                               ; preds = %28
  store %struct.evp_pkey_st* %22, %struct.evp_pkey_st** %7, align 8
  call void @CRYPTO_STATIC_MUTEX_unlock_write(%struct.CRYPTO_STATIC_MUTEX* nonnull @g_pubkey_lock) #5
  br label %34

34:                                               ; preds = %33, %31
  %35 = phi %struct.evp_pkey_st* [ %32, %31 ], [ %22, %33 ]
  %36 = load i8*, i8** %2, align 8
  call void @OPENSSL_free(i8* %36) #5
  %37 = call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* %35) #5
  br label %41

38:                                               ; preds = %14, %1, %27
  %39 = phi %struct.evp_pkey_st* [ null, %1 ], [ null, %14 ], [ %22, %27 ]
  %40 = load i8*, i8** %2, align 8
  call void @OPENSSL_free(i8* %40) #5
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %39) #5
  br label %41

41:                                               ; preds = %38, %34, %10
  %42 = phi %struct.evp_pkey_st* [ null, %38 ], [ %13, %10 ], [ %35, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret %struct.evp_pkey_st* %42
}

declare void @CRYPTO_STATIC_MUTEX_lock_read(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #1

declare void @CRYPTO_STATIC_MUTEX_unlock_read(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #1

declare i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st*) local_unnamed_addr #1

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #1

declare %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #1

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #1

declare void @CRYPTO_STATIC_MUTEX_lock_write(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #1

declare void @CRYPTO_STATIC_MUTEX_unlock_write(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #1

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_PUBKEY_set0_param(%struct.X509_pubkey_st* nocapture readonly, %struct.asn1_object_st*, i32, i8*, i8*, i32) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.X509_pubkey_st, %struct.X509_pubkey_st* %0, i64 0, i32 0
  %8 = load %struct.X509_algor_st*, %struct.X509_algor_st** %7, align 8
  %9 = tail call i32 @X509_ALGOR_set0(%struct.X509_algor_st* %8, %struct.asn1_object_st* %1, i32 %2, i8* %3) #5
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.X509_pubkey_st, %struct.X509_pubkey_st* %0, i64 0, i32 1
  %13 = load %struct.asn1_string_st*, %struct.asn1_string_st** %12, align 8
  tail call void @ASN1_STRING_set0(%struct.asn1_string_st* %13, i8* %4, i32 %5) #5
  %14 = load %struct.asn1_string_st*, %struct.asn1_string_st** %12, align 8
  %15 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %14, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, -16
  store i64 %17, i64* %15, align 8
  %18 = load %struct.asn1_string_st*, %struct.asn1_string_st** %12, align 8
  %19 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %18, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = or i64 %20, 8
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %6, %11
  %23 = phi i32 [ 1, %11 ], [ 0, %6 ]
  ret i32 %23
}

declare i32 @X509_ALGOR_set0(%struct.X509_algor_st*, %struct.asn1_object_st*, i32, i8*) local_unnamed_addr #1

declare void @ASN1_STRING_set0(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @X509_PUBKEY_get0_param(%struct.asn1_object_st**, i8**, i32* nocapture, %struct.X509_algor_st**, %struct.X509_pubkey_st* nocapture readonly) local_unnamed_addr #3 {
  %6 = icmp eq %struct.asn1_object_st** %0, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = bitcast %struct.X509_pubkey_st* %4 to i64**
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %struct.asn1_object_st** %0 to i64*
  store i64 %10, i64* %11, align 8
  br label %12

12:                                               ; preds = %5, %7
  %13 = icmp eq i8** %1, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.X509_pubkey_st, %struct.X509_pubkey_st* %4, i64 0, i32 1
  %16 = load %struct.asn1_string_st*, %struct.asn1_string_st** %15, align 8
  %17 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %16, i64 0, i32 2
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8** %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = load %struct.asn1_string_st*, %struct.asn1_string_st** %15, align 8
  %22 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %2, align 4
  br label %24

24:                                               ; preds = %12, %14
  %25 = icmp eq %struct.X509_algor_st** %3, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = bitcast %struct.X509_pubkey_st* %4 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.X509_algor_st** %3 to i64*
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %24, %26
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_PUBKEY_get0_public_key(%struct.X509_pubkey_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.X509_pubkey_st, %struct.X509_pubkey_st* %0, i64 0, i32 1
  %3 = load %struct.asn1_string_st*, %struct.asn1_string_st** %2, align 8
  ret %struct.asn1_string_st* %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pubkey_cb(i32, %struct.ASN1_VALUE_st** nocapture readonly, %struct.ASN1_ITEM_st* nocapture readnone, i8* nocapture readnone) #0 {
  %5 = icmp eq i32 %0, 3
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  %7 = bitcast %struct.ASN1_VALUE_st** %1 to %struct.X509_pubkey_st**
  %8 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %7, align 8
  %9 = getelementptr inbounds %struct.X509_pubkey_st, %struct.X509_pubkey_st* %8, i64 0, i32 2
  %10 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %9, align 8
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %10) #5
  br label %11

11:                                               ; preds = %6, %4
  ret i32 1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
