; ModuleID = '../../third_party/angle/src/compiler/translator/tree_ops/vulkan/ReplaceForShaderFramebufferFetch.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_ops/vulkan/ReplaceForShaderFramebufferFetch.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.sh::TCompiler" = type { %"class.sh::TShHandleBase", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"struct.sh::ValidateASTOptions", %"class.angle::BitSetT", i8, i8, i32, i32, i32, %"class.sh::CallDAG", %"class.std::__1::vector.59", %struct.ShBuiltInResources, %"class.std::__1::basic_string", %"class.sh::TSymbolTable", %"class.std::__1::map.90", %"class.sh::ArrayBoundsClamper", %"class.sh::BuiltInFunctionEmulator", i32, %"class.sh::TInfoSink", %"class.sh::TDiagnostics", i8*, i8, i8, i8, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::map.124", %struct.TPragma, i64 }
%"class.sh::TShHandleBase" = type { i32 (...)**, %"class.angle::PoolAllocator" }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.3" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.117", i8, i8, %"class.std::__1::vector.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { i32*, i32*, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i32* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.sh::ShaderVariable"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.15" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.1" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.sh::InterfaceBlock"* }
%"struct.sh::ValidateASTOptions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.angle::BitSetT" = type { i32 }
%"class.sh::CallDAG" = type { %"class.std::__1::vector.20", %"class.std::__1::map" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.sh::CallDAG::Record"*, %"struct.sh::CallDAG::Record"*, %"class.std::__1::__compressed_pair.46" }
%"struct.sh::CallDAG::Record" = type { %"class.sh::TIntermFunctionDefinition"*, %"class.std::__1::vector.39" }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TVector" = type opaque
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TConstantUnion" = type { %union.anon.30, i32 }
%union.anon.30 = type { i32 }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.22" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.23"*, i64, i32, %"class.std::__1::basic_string.24" }
%"class.sh::TVector.23" = type opaque
%"class.std::__1::basic_string.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i32* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.sh::CallDAG::Record"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i64 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.sh::TCompiler::FunctionMetadata"*, %"struct.sh::TCompiler::FunctionMetadata"*, %"class.std::__1::__compressed_pair.61" }
%"struct.sh::TCompiler::FunctionMetadata" = type { i8 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.sh::TCompiler::FunctionMetadata"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.66", %"class.std::__1::vector.73", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map.81", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.std::__1::unique_ptr.75"*, %"class.std::__1::unique_ptr.75"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::unique_ptr.75" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::unique_ptr.75"* }
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.sh::ArrayBoundsClamper" = type <{ i32, i8, [3 x i8] }>
%"class.sh::BuiltInFunctionEmulator" = type { %"class.std::__1::map.101", %"class.std::__1::map", %"class.std::__1::vector.39", %"class.std::__1::vector.110" }
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { i8* (i32)**, i8* (i32)**, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i8* (i32)** }
%"class.sh::TInfoSink" = type { %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase" }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.117" }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%struct.TPragma = type { i8, i8, i8, %"struct.TPragma::STDGL" }
%"struct.TPragma::STDGL" = type { i8 }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31", i8, [7 x i8] }>
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector.31" = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.sh::TIntermNode"** }
%"struct.std::__1::pair.271" = type { %"class.sh::TVariable"*, %"class.sh::TIntermTyped"* }
%"struct.std::__1::less.213" = type { i8 }
%"class.angle::BitSetT.135" = type { i64 }
%"class.std::__1::map.136" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser" = type { %"class.sh::TIntermTraverser", %"class.std::__1::map.136"*, i32*, %"class.angle::BitSetT.135"*, i8* }
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.147", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.154", %"class.std::__1::vector.161", %"class.sh::TVector.31", %"class.std::__1::vector.168" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.149" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector.31" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.156" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector.31", %"class.sh::TVector.31" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.163" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.170" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils" = type { %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils" }
%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils" = type { i32 (...)**, %"class.sh::TCompiler"*, %"class.sh::TSymbolTable"*, %"class.sh::TIntermBlock"*, %"class.std::__1::vector.1"*, i8, %"class.angle::BitSetT.135", %"class.std::__1::map.136", %"class.sh::TVector.31", i32, %"class.std::__1::map.175", %"class.std::__1::map.186", %"class.std::__1::map.195" }
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::map.195" = type { %"class.std::__1::__tree.196" }
%"class.std::__1::__tree.196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.sh::(anonymous namespace)::ReplaceVariableTraverser" = type { %"class.sh::TIntermTraverser", %"class.std::__1::map.204" }
%"class.std::__1::map.204" = type { %"class.std::__1::__tree.205" }
%"class.std::__1::__tree.205" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.sh::TIntermSymbol"* }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.std::__1::__tree_node.237" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.238" }
%"struct.std::__1::__value_type.238" = type { %"struct.std::__1::pair.239" }
%"struct.std::__1::pair.239" = type { i32, %"class.sh::TFunction"* }
%"class.std::__1::__tree_node.235" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.236" }
%"struct.std::__1::__value_type.236" = type { %"struct.std::__1::pair.217" }
%"struct.std::__1::pair.217" = type { i32, %"class.sh::TVariable"* }
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.278" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.279" }
%"struct.std::__1::__value_type.279" = type { %"struct.std::__1::pair.271" }
%"class.std::__1::__tree_node.232" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.233" }
%"struct.std::__1::__value_type.233" = type { %"struct.std::__1::pair.234" }
%"struct.std::__1::pair.234" = type { i32, %"class.sh::TVariable"* }
%"class.sh::(anonymous namespace)::ReplaceInOutUtils" = type { %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils" }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.218", i8, [7 x i8] }>
%"class.sh::TVector.218" = type { %"class.std::__1::vector.219" }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { i32*, i32*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE = comdat any

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE21__emplace_unique_implIJiRS4_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEEDpOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__13mapIjPN2sh13TIntermSymbolENS_4lessIjEENS_9allocatorINS_4pairIKjS3_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIjS3_EEPNS_11__tree_nodeISG_PvEElEEEEEEvT_SN_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_SF_EElEERPNS_15__tree_end_nodeISH_EESI_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__13mapIPKN2sh9TVariableEPKNS1_12TIntermTypedENS_4lessIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEEC2ESt16initializer_listISD_ERKS9_ = comdat any

$_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_ = comdat any

$_ZNSt3__16vectorIN2sh16TIntermTraverser28NodeReplaceWithMultipleEntryENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJPNS1_12TIntermBlockERPNS1_18TIntermDeclarationENS1_7TVectorIPNS1_11TIntermNodeEEEEEEvDpOT_ = comdat any

$_ZNSt3__13mapIPKN2sh9TVariableEPKNS1_12TIntermTypedENS_4lessIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIS4_S7_EEPNS_11__tree_nodeISK_PvEElEEEEEEvT_SR_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

@.str = private unnamed_addr constant [16 x i8] c"gl_LastFragData\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"ANGLELastFragData\00", align 1
@_ZTVN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"*)* @_ZN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtilsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*)* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"*)* @_ZN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtilsD0Ev to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"*)* @_ZN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtils28declareSubpassInputVariablesEv to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"*)* @_ZN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtils23loadInputAttachmentDataEv to i8*)] }, align 8
@_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*)* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*)* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN2sh2vk20kInputAttachmentNameE = external constant [0 x i8], align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN2sh18TIntermDeclarationE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8
@_ZTVN2sh12TIntermBlockE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"subpassLoad\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"subpassLoadMS\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"subpassInput\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"subpassInputMS\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"isubpassInput\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"isubpassInputMS\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"usubpassInput\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"usubpassInputMS\00", align 1
@_ZTVN2sh12_GLOBAL__N_124ReplaceVariableTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*)* @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*)* @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@_ZTVN2sh12_GLOBAL__N_117ReplaceInOutUtilsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*)* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceInOutUtils"*)* @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtilsD0Ev to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ReplaceInOutUtils"*)* @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtils28declareSubpassInputVariablesEv to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::ReplaceInOutUtils"*)* @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtils23loadInputAttachmentDataEv to i8*)] }, align 8
@switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i = private unnamed_addr constant [6 x i32] [i32 0, i32 2, i32 4, i32 1, i32 3, i32 5], align 4
@switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.13 = private unnamed_addr constant [6 x i64] [i64 11, i64 13, i64 11, i64 13, i64 11, i64 13], align 8
@switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.14 = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)], align 8
@switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.15 = private unnamed_addr constant [6 x i64] [i64 12, i64 14, i64 13, i64 15, i64 13, i64 15], align 8
@switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.16 = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh19ReplaceLastFragDataEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TSymbolTableEPNSt3__16vectorINS_14ShaderVariableENS6_9allocatorIS8_EEEE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, %"class.std::__1::vector.1"*) local_unnamed_addr #0 {
  %5 = alloca [1 x %"struct.std::__1::pair.271"], align 8
  %6 = alloca %"struct.std::__1::less.213", align 1
  %7 = alloca %"class.angle::BitSetT.135", align 8
  %8 = alloca %"class.std::__1::map.136", align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", align 8
  %12 = alloca %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", align 8
  %13 = alloca %"class.sh::ImmutableString", align 8
  %14 = alloca %"class.sh::ImmutableString", align 8
  %15 = alloca %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", align 8
  %16 = bitcast %"class.angle::BitSetT.135"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.angle::BitSetT.135", %"class.angle::BitSetT.135"* %7, i64 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = bitcast %"class.std::__1::map.136"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %8, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %19, align 8
  %24 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #14
  store i32 0, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #14
  store i8 0, i8* %10, align 1
  %25 = bitcast %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %25) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 184, i1 false)
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %11, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %26, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #14
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %11, i64 0, i32 1
  store %"class.std::__1::map.136"* %8, %"class.std::__1::map.136"** %28, align 8
  %29 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %11, i64 0, i32 2
  store i32* %9, i32** %29, align 8
  %30 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %11, i64 0, i32 3
  store %"class.angle::BitSetT.135"* %7, %"class.angle::BitSetT.135"** %30, align 8
  %31 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %11, i64 0, i32 4
  store i8* %10, i8** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %8, i64 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* nonnull %32, %"class.std::__1::__tree_node"* %34) #14
  store i64 0, i64* %21, align 8
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %19, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %35, align 8
  %36 = load i32*, i32** %29, align 8
  store i32 0, i32* %36, align 4
  %37 = load %"class.angle::BitSetT.135"*, %"class.angle::BitSetT.135"** %30, align 8
  %38 = getelementptr inbounds %"class.angle::BitSetT.135", %"class.angle::BitSetT.135"* %37, i64 0, i32 0
  store i64 0, i64* %38, align 8
  %39 = load i8*, i8** %31, align 8
  store i8 0, i8* %39, align 1
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %26) #14
  %40 = load i64, i64* %17, align 8
  %41 = icmp eq i64 %40, 0
  %42 = load i8, i8* %10, align 1
  %43 = icmp eq i8 %42, 0
  %44 = and i1 %41, %43
  br i1 %44, label %609, label %45

45:                                               ; preds = %4
  %46 = bitcast %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %46) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 184, i1 false)
  %47 = icmp ne i8 %42, 0
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 1
  store %"class.sh::TCompiler"* %0, %"class.sh::TCompiler"** %50, align 8
  %51 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 2
  store %"class.sh::TSymbolTable"* %2, %"class.sh::TSymbolTable"** %51, align 8
  %52 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 3
  store %"class.sh::TIntermBlock"* %1, %"class.sh::TIntermBlock"** %52, align 8
  %53 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 4
  store %"class.std::__1::vector.1"* %3, %"class.std::__1::vector.1"** %53, align 8
  %54 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 5
  store i8 %48, i8* %54, align 8
  %55 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 6, i32 0
  store i64 %40, i64* %55, align 8
  %56 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 7
  %57 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %56, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %59 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 7, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__compressed_pair.138"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %57, align 8
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  call void @_ZNSt3__13mapIjPN2sh13TIntermSymbolENS_4lessIjEENS_9allocatorINS_4pairIKjS3_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIjS3_EEPNS_11__tree_nodeISG_PvEElEEEEEEvT_SN_(%"class.std::__1::map.136"* %56, %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"* %22) #14
  %62 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 8
  %63 = bitcast %"class.sh::TVector.31"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #14
  %64 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 10
  %65 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %64, i64 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_node_base"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %70 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 11, i32 0, i32 0
  %71 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %73 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 12, i32 0, i32 0
  %74 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 8, i32 0, i32 0, i32 1
  %75 = bitcast %"class.sh::TIntermNode"*** %74 to i64*
  store i64 0, i64* %75, align 8
  %76 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 9
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %77, align 8
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %70, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %78, align 8
  %79 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %79, align 8
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %64, i64 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_node.237"**
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %81, %"class.std::__1::__tree_node.237"* null) #14
  %83 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %83, align 8
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %67, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %84, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %85 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0
  %86 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 7, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %87, %58
  br i1 %88, label %136, label %89

89:                                               ; preds = %45, %133
  %90 = phi %"class.std::__1::__tree_end_node"* [ %134, %133 ], [ %87, %45 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 4
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to i32*
  %93 = load i32, i32* %92, align 8
  %94 = zext i32 %93 to i64
  %95 = load i64, i64* %55, align 8
  %96 = shl i64 1, %94
  %97 = and i64 %96, %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 5
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to %"class.sh::TIntermSymbol"**
  %102 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %101, align 8
  %103 = call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils31declareSubpassInputVariableImplEPKNS_13TIntermSymbolEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* nonnull %85, %"class.sh::TIntermSymbol"* %102, i32 %93) #14
  br i1 %103, label %104, label %590

104:                                              ; preds = %99
  call fastcc void @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils25addInputAttachmentUniformEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* nonnull %85, i32 %93) #14
  br label %105

105:                                              ; preds = %104, %89
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 1, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %117

109:                                              ; preds = %105
  %110 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 2
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to %"class.std::__1::__tree_end_node"**
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %110
  br i1 %116, label %133, label %124

117:                                              ; preds = %105, %117
  %118 = phi %"class.std::__1::__tree_node_base"* [ %120, %117 ], [ %107, %105 ]
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %117

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %118, i64 0, i32 0
  br label %133

124:                                              ; preds = %109, %124
  %125 = phi %"class.std::__1::__tree_end_node"** [ %128, %124 ], [ %112, %109 ]
  %126 = bitcast %"class.std::__1::__tree_end_node"** %125 to %"class.std::__1::__tree_node_base"**
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %127, i64 0, i32 2
  %129 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, %127
  br i1 %132, label %133, label %124

133:                                              ; preds = %124, %122, %109
  %134 = phi %"class.std::__1::__tree_end_node"* [ %123, %122 ], [ %113, %109 ], [ %129, %124 ]
  %135 = icmp eq %"class.std::__1::__tree_end_node"* %134, %58
  br i1 %135, label %136, label %89

136:                                              ; preds = %133, %45
  %137 = load i64, i64* %21, align 8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %146, label %139

139:                                              ; preds = %136
  %140 = bitcast %"class.std::__1::map.136"* %8 to %"class.std::__1::__tree_node"**
  %141 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %141, i64 0, i32 1, i32 0, i32 1
  %143 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %142, align 8
  %144 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %143, i64 0, i32 1
  %145 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %144, align 8
  br label %152

146:                                              ; preds = %136
  %147 = bitcast %"class.sh::ImmutableString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #14
  %148 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8** %148, align 8
  %149 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 1
  store i64 15, i64* %149, align 8
  %150 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %2, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %13, i32 100) #14
  %151 = bitcast %"class.sh::TSymbol"* %150 to %"class.sh::TVariable"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #14
  br label %152

152:                                              ; preds = %146, %139
  %153 = phi %"class.sh::TVariable"* [ %145, %139 ], [ %151, %146 ]
  %154 = icmp eq %"class.sh::TVariable"* %153, null
  br i1 %154, label %590, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %153, i64 0, i32 1
  %157 = load %"class.sh::TType"*, %"class.sh::TType"** %156, align 8
  %158 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %157, i64 0, i32 8
  %163 = load i8, i8* %162, align 8
  %164 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %157, i64 0, i32 10, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %157, i64 0, i32 10, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = add i64 %167, -1
  %169 = getelementptr inbounds i32, i32* %165, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = bitcast %"class.sh::ImmutableString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #14
  %172 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %14, i64 0, i32 0
  %173 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8** %172, align 8
  store i64 17, i64* %173, align 8
  %174 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %175 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %174, i64 184) #14
  %176 = bitcast i8* %175 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %176, i32 %159, i32 %161, i32 1, i8 zeroext %163, i8 zeroext 1) #14
  call void @_ZN2sh5TType9makeArrayEj(%"class.sh::TType"* %176, i32 %170) #14
  %177 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %178 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %177, i64 40) #14
  %179 = bitcast i8* %178 to %"class.sh::TVariable"*
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %179, %"class.sh::TSymbolTable"* %2, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %14, %"class.sh::TType"* %176, i8 zeroext 2, i8 zeroext 0) #14
  %180 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 12
  %181 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node.235"**
  %182 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node.235"* %182, null
  br i1 %183, label %209, label %184

184:                                              ; preds = %155
  %185 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %182, i64 0, i32 1, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %184, %203
  %189 = phi %"class.std::__1::__tree_node.235"* [ %204, %203 ], [ %182, %184 ]
  %190 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %189, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %193, label %203

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %189, i64 0, i32 0, i32 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %189, i64 0, i32 0, i32 0
  br label %209

196:                                              ; preds = %203
  %197 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %189, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::__tree_node_base"* %191 to %"class.std::__1::__tree_node.235"*
  br label %199

199:                                              ; preds = %196, %184
  %200 = phi %"class.std::__1::__tree_node.235"* [ %182, %184 ], [ %198, %196 ]
  %201 = phi %"class.std::__1::__tree_node_base"** [ %71, %184 ], [ %197, %196 ]
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %200, i64 0, i32 0, i32 0
  br label %209

203:                                              ; preds = %188
  %204 = bitcast %"class.std::__1::__tree_node_base"* %191 to %"class.std::__1::__tree_node.235"*
  %205 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 1
  %206 = bitcast %"class.std::__1::__tree_node_base"* %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %196, label %188

209:                                              ; preds = %155, %199, %193
  %210 = phi %"class.std::__1::__tree_end_node"* [ %195, %193 ], [ %202, %199 ], [ %72, %155 ]
  %211 = phi %"class.std::__1::__tree_node_base"** [ %194, %193 ], [ %201, %199 ], [ %80, %155 ]
  %212 = bitcast %"class.std::__1::__tree_node_base"** %211 to %"class.std::__1::__tree_node.235"**
  %213 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node.235"* %213, null
  br i1 %214, label %215, label %240

215:                                              ; preds = %209
  %216 = call i8* @_Znwm(i64 48) #15, !noalias !2
  %217 = getelementptr inbounds i8, i8* %216, i64 32
  %218 = bitcast i8* %217 to i32*
  store i32 0, i32* %218, align 8, !noalias !2
  %219 = getelementptr inbounds i8, i8* %216, i64 40
  %220 = bitcast i8* %219 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %220, align 8, !noalias !2
  %221 = bitcast i8* %216 to %"class.std::__1::__tree_node.235"*
  %222 = bitcast i8* %216 to %"class.std::__1::__tree_node_base"*
  %223 = getelementptr inbounds i8, i8* %216, i64 16
  %224 = bitcast i8* %223 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %210, %"class.std::__1::__tree_end_node"** %224, align 8
  %225 = bitcast %"class.std::__1::__tree_node_base"** %211 to i8**
  store i8* %216, i8** %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %180, i64 0, i32 0, i32 0
  %227 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %227, i64 0, i32 0
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_node_base"* %229, null
  br i1 %230, label %235, label %231

231:                                              ; preds = %215
  %232 = ptrtoint %"class.std::__1::__tree_node_base"* %229 to i64
  %233 = bitcast %"class.std::__1::map.195"* %180 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  br label %235

235:                                              ; preds = %231, %215
  %236 = phi %"class.std::__1::__tree_node_base"* [ %222, %215 ], [ %234, %231 ]
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %237, %"class.std::__1::__tree_node_base"* %236) #14
  %238 = load i64, i64* %79, align 8
  %239 = add i64 %238, 1
  store i64 %239, i64* %79, align 8
  br label %240

240:                                              ; preds = %209, %235
  %241 = phi %"class.std::__1::__tree_node.235"* [ %221, %235 ], [ %213, %209 ]
  %242 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %241, i64 0, i32 1, i32 0, i32 1
  %243 = bitcast %"class.sh::TVariable"** %242 to i8**
  store i8* %178, i8** %243, align 8
  %244 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %245 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %244, i64 56) #14
  %246 = bitcast i8* %245 to %"class.sh::TIntermDeclaration"*
  %247 = bitcast i8* %245 to i32 (...)***
  %248 = getelementptr inbounds i8, i8* %245, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 16, i1 false) #14
  %249 = getelementptr inbounds i8, i8* %245, i64 24
  %250 = bitcast i8* %249 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  %251 = getelementptr inbounds i8, i8* %245, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %251, i8 0, i64 24, i1 false) #14
  %252 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %253 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %252, i64 32) #14
  %254 = bitcast i8* %253 to %"class.sh::TIntermSymbol"*
  %255 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %181, align 8
  %256 = icmp eq %"class.std::__1::__tree_node.235"* %255, null
  br i1 %256, label %282, label %257

257:                                              ; preds = %240
  %258 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %255, i64 0, i32 1, i32 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %272, label %261

261:                                              ; preds = %257, %276
  %262 = phi %"class.std::__1::__tree_node.235"* [ %277, %276 ], [ %255, %257 ]
  %263 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %262, i64 0, i32 0, i32 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, null
  br i1 %265, label %266, label %276

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %262, i64 0, i32 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %262, i64 0, i32 0, i32 0
  br label %282

269:                                              ; preds = %276
  %270 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %262, i64 0, i32 0, i32 0, i32 0
  %271 = bitcast %"class.std::__1::__tree_node_base"* %264 to %"class.std::__1::__tree_node.235"*
  br label %272

272:                                              ; preds = %269, %257
  %273 = phi %"class.std::__1::__tree_node.235"* [ %255, %257 ], [ %271, %269 ]
  %274 = phi %"class.std::__1::__tree_node_base"** [ %71, %257 ], [ %270, %269 ]
  %275 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %273, i64 0, i32 0, i32 0
  br label %282

276:                                              ; preds = %261
  %277 = bitcast %"class.std::__1::__tree_node_base"* %264 to %"class.std::__1::__tree_node.235"*
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %264, i64 1
  %279 = bitcast %"class.std::__1::__tree_node_base"* %278 to i32*
  %280 = load i32, i32* %279, align 4
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %269, label %261

282:                                              ; preds = %240, %272, %266
  %283 = phi %"class.std::__1::__tree_end_node"* [ %268, %266 ], [ %275, %272 ], [ %72, %240 ]
  %284 = phi %"class.std::__1::__tree_node_base"** [ %267, %266 ], [ %274, %272 ], [ %80, %240 ]
  %285 = bitcast %"class.std::__1::__tree_node_base"** %284 to %"class.std::__1::__tree_node.235"**
  %286 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %285, align 8
  %287 = icmp eq %"class.std::__1::__tree_node.235"* %286, null
  br i1 %287, label %288, label %313

288:                                              ; preds = %282
  %289 = call i8* @_Znwm(i64 48) #15, !noalias !5
  %290 = getelementptr inbounds i8, i8* %289, i64 32
  %291 = bitcast i8* %290 to i32*
  store i32 0, i32* %291, align 8, !noalias !5
  %292 = getelementptr inbounds i8, i8* %289, i64 40
  %293 = bitcast i8* %292 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %293, align 8, !noalias !5
  %294 = bitcast i8* %289 to %"class.std::__1::__tree_node.235"*
  %295 = bitcast i8* %289 to %"class.std::__1::__tree_node_base"*
  %296 = getelementptr inbounds i8, i8* %289, i64 16
  %297 = bitcast i8* %296 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %283, %"class.std::__1::__tree_end_node"** %297, align 8
  %298 = bitcast %"class.std::__1::__tree_node_base"** %284 to i8**
  store i8* %289, i8** %298, align 8
  %299 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %180, i64 0, i32 0, i32 0
  %300 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %299, align 8
  %301 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %300, i64 0, i32 0
  %302 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node_base"* %302, null
  br i1 %303, label %308, label %304

304:                                              ; preds = %288
  %305 = ptrtoint %"class.std::__1::__tree_node_base"* %302 to i64
  %306 = bitcast %"class.std::__1::map.195"* %180 to i64*
  store i64 %305, i64* %306, align 8
  %307 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  br label %308

308:                                              ; preds = %304, %288
  %309 = phi %"class.std::__1::__tree_node_base"* [ %295, %288 ], [ %307, %304 ]
  %310 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %310, %"class.std::__1::__tree_node_base"* %309) #14
  %311 = load i64, i64* %79, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %79, align 8
  br label %313

313:                                              ; preds = %282, %308
  %314 = phi %"class.std::__1::__tree_node.235"* [ %294, %308 ], [ %286, %282 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %314, i64 0, i32 1, i32 0, i32 1
  %316 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %315, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %254, %"class.sh::TVariable"* %316) #14
  %317 = bitcast i8* %253 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %246, %"class.sh::TIntermTyped"* %317) #14
  %318 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 8, i32 0
  %319 = ptrtoint i8* %245 to i64
  %320 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %74, align 8
  %321 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %322 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %321, align 8
  %323 = icmp ult %"class.sh::TIntermNode"** %320, %322
  %324 = ptrtoint %"class.sh::TIntermNode"** %322 to i64
  br i1 %323, label %325, label %331

325:                                              ; preds = %313
  %326 = bitcast %"class.sh::TIntermNode"** %320 to i64*
  store i64 %319, i64* %326, align 8
  %327 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %320, i64 1
  %328 = ptrtoint %"class.sh::TIntermNode"** %327 to i64
  store i64 %328, i64* %75, align 8
  %329 = bitcast %"class.std::__1::vector.32"* %318 to i64*
  %330 = load i64, i64* %329, align 8
  br label %543

331:                                              ; preds = %313
  %332 = ptrtoint %"class.sh::TIntermNode"** %320 to i64
  %333 = bitcast %"class.std::__1::vector.32"* %318 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = sub i64 %332, %334
  %336 = ashr exact i64 %335, 3
  %337 = add nsw i64 %336, 1
  %338 = icmp ugt i64 %337, 2305843009213693951
  br i1 %338, label %339, label %341

339:                                              ; preds = %331
  %340 = bitcast %"class.std::__1::vector.32"* %318 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %340) #16
  unreachable

341:                                              ; preds = %331
  %342 = bitcast %"class.sh::TIntermNode"*** %321 to i64*
  %343 = sub i64 %324, %334
  %344 = ashr exact i64 %343, 3
  %345 = icmp ult i64 %344, 1152921504606846975
  br i1 %345, label %346, label %351

346:                                              ; preds = %341
  %347 = ashr exact i64 %343, 2
  %348 = icmp ult i64 %347, %337
  %349 = select i1 %348, i64 %337, i64 %347
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %357, label %351

351:                                              ; preds = %346, %341
  %352 = phi i64 [ %349, %346 ], [ 2305843009213693951, %341 ]
  %353 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %354 = shl i64 %352, 3
  %355 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %353, i64 %354) #14
  %356 = bitcast i8* %355 to %"class.sh::TIntermNode"**
  br label %357

357:                                              ; preds = %351, %346
  %358 = phi i64 [ %352, %351 ], [ 0, %346 ]
  %359 = phi %"class.sh::TIntermNode"** [ %356, %351 ], [ null, %346 ]
  %360 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 %336
  %361 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 %358
  %362 = ptrtoint %"class.sh::TIntermNode"** %361 to i64
  %363 = bitcast %"class.sh::TIntermNode"** %360 to i64*
  store i64 %319, i64* %363, align 8
  %364 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %360, i64 1
  %365 = ptrtoint %"class.sh::TIntermNode"** %364 to i64
  %366 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %318, i64 0, i32 0, i32 0
  %367 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %366, align 8
  %368 = ptrtoint %"class.sh::TIntermNode"** %367 to i64
  %369 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %74, align 8
  %370 = icmp eq %"class.sh::TIntermNode"** %369, %367
  br i1 %370, label %540, label %371

371:                                              ; preds = %357
  %372 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 -1
  %373 = ptrtoint %"class.sh::TIntermNode"** %372 to i64
  %374 = sub i64 %373, %368
  %375 = lshr i64 %374, 3
  %376 = add nuw nsw i64 %375, 1
  %377 = icmp ult i64 %376, 4
  br i1 %377, label %470, label %378

378:                                              ; preds = %371
  %379 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 -1
  %380 = ptrtoint %"class.sh::TIntermNode"** %379 to i64
  %381 = sub i64 %380, %368
  %382 = lshr i64 %381, 3
  %383 = xor i64 %382, -1
  %384 = add nsw i64 %336, %383
  %385 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 %384
  %386 = xor i64 %382, -1
  %387 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 %386
  %388 = icmp ult %"class.sh::TIntermNode"** %385, %369
  %389 = icmp ult %"class.sh::TIntermNode"** %387, %360
  %390 = and i1 %388, %389
  br i1 %390, label %470, label %391

391:                                              ; preds = %378
  %392 = and i64 %376, 4611686018427387900
  %393 = sub nsw i64 0, %392
  %394 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %360, i64 %393
  %395 = sub nsw i64 0, %392
  %396 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 %395
  %397 = add nsw i64 %392, -4
  %398 = lshr exact i64 %397, 2
  %399 = add nuw nsw i64 %398, 1
  %400 = and i64 %399, 1
  %401 = icmp eq i64 %397, 0
  br i1 %401, label %448, label %402

402:                                              ; preds = %391
  %403 = sub nuw nsw i64 %399, %400
  %404 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %360, i64 -1
  %405 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 -1
  %406 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %360, i64 -1
  %407 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 -1
  br label %408

408:                                              ; preds = %408, %402
  %409 = phi i64 [ 0, %402 ], [ %443, %408 ]
  %410 = phi i64 [ %403, %402 ], [ %444, %408 ]
  %411 = sub i64 0, %409
  %412 = sub i64 0, %409
  %413 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %404, i64 %411
  %414 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %405, i64 %412
  %415 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %414, i64 -1
  %416 = bitcast %"class.sh::TIntermNode"** %415 to <2 x i64>*
  %417 = load <2 x i64>, <2 x i64>* %416, align 8, !alias.scope !8
  %418 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %414, i64 -2
  %419 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %418, i64 -1
  %420 = bitcast %"class.sh::TIntermNode"** %419 to <2 x i64>*
  %421 = load <2 x i64>, <2 x i64>* %420, align 8, !alias.scope !8
  %422 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %413, i64 -1
  %423 = bitcast %"class.sh::TIntermNode"** %422 to <2 x i64>*
  store <2 x i64> %417, <2 x i64>* %423, align 8, !alias.scope !11, !noalias !8
  %424 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %413, i64 -2
  %425 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %424, i64 -1
  %426 = bitcast %"class.sh::TIntermNode"** %425 to <2 x i64>*
  store <2 x i64> %421, <2 x i64>* %426, align 8, !alias.scope !11, !noalias !8
  %427 = sub nuw nsw i64 -4, %409
  %428 = sub nuw nsw i64 -4, %409
  %429 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %406, i64 %427
  %430 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %407, i64 %428
  %431 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -1
  %432 = bitcast %"class.sh::TIntermNode"** %431 to <2 x i64>*
  %433 = load <2 x i64>, <2 x i64>* %432, align 8, !alias.scope !8
  %434 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -2
  %435 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %434, i64 -1
  %436 = bitcast %"class.sh::TIntermNode"** %435 to <2 x i64>*
  %437 = load <2 x i64>, <2 x i64>* %436, align 8, !alias.scope !8
  %438 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %429, i64 -1
  %439 = bitcast %"class.sh::TIntermNode"** %438 to <2 x i64>*
  store <2 x i64> %433, <2 x i64>* %439, align 8, !alias.scope !11, !noalias !8
  %440 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %429, i64 -2
  %441 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %440, i64 -1
  %442 = bitcast %"class.sh::TIntermNode"** %441 to <2 x i64>*
  store <2 x i64> %437, <2 x i64>* %442, align 8, !alias.scope !11, !noalias !8
  %443 = add i64 %409, 8
  %444 = add i64 %410, -2
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %446, label %408, !llvm.loop !13

446:                                              ; preds = %408
  %447 = sub nuw nsw i64 -8, %409
  br label %448

448:                                              ; preds = %446, %391
  %449 = phi i64 [ 0, %391 ], [ %447, %446 ]
  %450 = icmp eq i64 %400, 0
  br i1 %450, label %468, label %451

451:                                              ; preds = %448
  %452 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %360, i64 -1
  %453 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %369, i64 -1
  %454 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %452, i64 %449
  %455 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %453, i64 %449
  %456 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %455, i64 -1
  %457 = bitcast %"class.sh::TIntermNode"** %456 to <2 x i64>*
  %458 = load <2 x i64>, <2 x i64>* %457, align 8, !alias.scope !8
  %459 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %455, i64 -2
  %460 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %459, i64 -1
  %461 = bitcast %"class.sh::TIntermNode"** %460 to <2 x i64>*
  %462 = load <2 x i64>, <2 x i64>* %461, align 8, !alias.scope !8
  %463 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %454, i64 -1
  %464 = bitcast %"class.sh::TIntermNode"** %463 to <2 x i64>*
  store <2 x i64> %458, <2 x i64>* %464, align 8, !alias.scope !11, !noalias !8
  %465 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %454, i64 -2
  %466 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %465, i64 -1
  %467 = bitcast %"class.sh::TIntermNode"** %466 to <2 x i64>*
  store <2 x i64> %462, <2 x i64>* %467, align 8, !alias.scope !11, !noalias !8
  br label %468

468:                                              ; preds = %448, %451
  %469 = icmp eq i64 %376, %392
  br i1 %469, label %540, label %470

470:                                              ; preds = %468, %378, %371
  %471 = phi %"class.sh::TIntermNode"** [ %360, %378 ], [ %360, %371 ], [ %394, %468 ]
  %472 = phi %"class.sh::TIntermNode"** [ %369, %378 ], [ %369, %371 ], [ %396, %468 ]
  %473 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %472, i64 -1
  %474 = ptrtoint %"class.sh::TIntermNode"** %473 to i64
  %475 = sub i64 %474, %368
  %476 = lshr i64 %475, 3
  %477 = add nuw nsw i64 %476, 1
  %478 = and i64 %477, 7
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %491, label %480

480:                                              ; preds = %470, %480
  %481 = phi %"class.sh::TIntermNode"** [ %484, %480 ], [ %471, %470 ]
  %482 = phi %"class.sh::TIntermNode"** [ %485, %480 ], [ %472, %470 ]
  %483 = phi i64 [ %489, %480 ], [ %478, %470 ]
  %484 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %481, i64 -1
  %485 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %482, i64 -1
  %486 = bitcast %"class.sh::TIntermNode"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = bitcast %"class.sh::TIntermNode"** %484 to i64*
  store i64 %487, i64* %488, align 8
  %489 = add i64 %483, -1
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %491, label %480, !llvm.loop !15

491:                                              ; preds = %480, %470
  %492 = phi %"class.sh::TIntermNode"** [ undef, %470 ], [ %484, %480 ]
  %493 = phi %"class.sh::TIntermNode"** [ %471, %470 ], [ %484, %480 ]
  %494 = phi %"class.sh::TIntermNode"** [ %472, %470 ], [ %485, %480 ]
  %495 = icmp ult i64 %475, 56
  br i1 %495, label %540, label %496

496:                                              ; preds = %491, %496
  %497 = phi %"class.sh::TIntermNode"** [ %534, %496 ], [ %493, %491 ]
  %498 = phi %"class.sh::TIntermNode"** [ %535, %496 ], [ %494, %491 ]
  %499 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -1
  %500 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -1
  %501 = bitcast %"class.sh::TIntermNode"** %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = bitcast %"class.sh::TIntermNode"** %499 to i64*
  store i64 %502, i64* %503, align 8
  %504 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -2
  %505 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -2
  %506 = bitcast %"class.sh::TIntermNode"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.sh::TIntermNode"** %504 to i64*
  store i64 %507, i64* %508, align 8
  %509 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -3
  %510 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -3
  %511 = bitcast %"class.sh::TIntermNode"** %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.sh::TIntermNode"** %509 to i64*
  store i64 %512, i64* %513, align 8
  %514 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -4
  %515 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -4
  %516 = bitcast %"class.sh::TIntermNode"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = bitcast %"class.sh::TIntermNode"** %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -5
  %520 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -5
  %521 = bitcast %"class.sh::TIntermNode"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"class.sh::TIntermNode"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -6
  %525 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -6
  %526 = bitcast %"class.sh::TIntermNode"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.sh::TIntermNode"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -7
  %530 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -7
  %531 = bitcast %"class.sh::TIntermNode"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.sh::TIntermNode"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %497, i64 -8
  %535 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -8
  %536 = bitcast %"class.sh::TIntermNode"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.sh::TIntermNode"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = icmp eq %"class.sh::TIntermNode"** %535, %367
  br i1 %539, label %540, label %496, !llvm.loop !17

540:                                              ; preds = %491, %496, %468, %357
  %541 = phi %"class.sh::TIntermNode"** [ %360, %357 ], [ %394, %468 ], [ %492, %491 ], [ %534, %496 ]
  %542 = ptrtoint %"class.sh::TIntermNode"** %541 to i64
  store i64 %542, i64* %333, align 8
  store i64 %365, i64* %75, align 8
  store i64 %362, i64* %342, align 8
  br label %543

543:                                              ; preds = %325, %540
  %544 = phi i64* [ %329, %325 ], [ %333, %540 ]
  %545 = phi i64 [ %330, %325 ], [ %542, %540 ]
  %546 = phi i64 [ %328, %325 ], [ %365, %540 ]
  %547 = icmp eq i64 %546, %545
  br i1 %547, label %563, label %548

548:                                              ; preds = %543, %548
  %549 = phi i64 [ %559, %548 ], [ %545, %543 ]
  %550 = phi i64 [ %557, %548 ], [ 0, %543 ]
  %551 = phi i32 [ %556, %548 ], [ 0, %543 ]
  %552 = inttoptr i64 %549 to %"class.sh::TIntermNode"**
  %553 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %52, align 8
  %554 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %552, i64 %550
  %555 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %554, align 8
  call void @_ZN2sh12TIntermBlock15insertStatementEmPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %553, i64 %550, %"class.sh::TIntermNode"* %555) #14
  %556 = add i32 %551, 1
  %557 = zext i32 %556 to i64
  %558 = load i64, i64* %75, align 8
  %559 = load i64, i64* %544, align 8
  %560 = sub i64 %558, %559
  %561 = ashr exact i64 %560, 3
  %562 = icmp ugt i64 %561, %557
  br i1 %562, label %548, label %563

563:                                              ; preds = %548, %543
  %564 = phi i64 [ %545, %543 ], [ %559, %548 ]
  store i64 %564, i64* %75, align 8
  %565 = call zeroext i1 @_ZN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtils23loadInputAttachmentDataEv(%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* nonnull %12)
  br i1 %565, label %566, label %588

566:                                              ; preds = %563
  %567 = bitcast %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %567) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %567, i8 -86, i64 176, i1 false)
  %568 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %569 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %568, i64 32) #14
  %570 = bitcast i8* %569 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %570, %"class.sh::TVariable"* %179) #14
  %571 = ptrtoint %"class.sh::TVariable"* %153 to i64
  %572 = ptrtoint i8* %569 to i64
  %573 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %573, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #14
  %574 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceVariableTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %574, align 8
  %575 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 1
  %576 = bitcast [1 x %"struct.std::__1::pair.271"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %576) #14
  %577 = getelementptr inbounds [1 x %"struct.std::__1::pair.271"], [1 x %"struct.std::__1::pair.271"]* %5, i64 0, i64 0
  %578 = bitcast [1 x %"struct.std::__1::pair.271"]* %5 to i64*
  store i64 %571, i64* %578, align 8
  %579 = getelementptr inbounds [1 x %"struct.std::__1::pair.271"], [1 x %"struct.std::__1::pair.271"]* %5, i64 0, i64 0, i32 1
  %580 = bitcast %"class.sh::TIntermTyped"** %579 to i64*
  store i64 %572, i64* %580, align 8
  %581 = getelementptr inbounds %"struct.std::__1::less.213", %"struct.std::__1::less.213"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %581) #14
  call void @_ZNSt3__13mapIPKN2sh9TVariableEPKNS1_12TIntermTypedENS_4lessIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEEC2ESt16initializer_listISD_ERKS9_(%"class.std::__1::map.204"* %575, %"struct.std::__1::pair.271"* nonnull %577, i64 1, %"struct.std::__1::less.213"* nonnull dereferenceable(1) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %581) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %576) #14
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %573) #14
  %582 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 0
  %583 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %573, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %582) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceVariableTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %574, align 8
  %584 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 1, i32 0
  %585 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %586 = bitcast %"class.std::__1::__tree_end_node"* %585 to %"class.std::__1::__tree_node.278"**
  %587 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %586, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"* %584, %"class.std::__1::__tree_node.278"* %587) #14
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %573) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %567) #14
  br label %588

588:                                              ; preds = %563, %566
  %589 = phi i1 [ %583, %566 ], [ false, %563 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #14
  br label %590

590:                                              ; preds = %99, %588, %152
  %591 = phi i1 [ %589, %588 ], [ false, %152 ], [ false, %99 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %592 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 12, i32 0
  %593 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node.235"**
  %594 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %593, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* %592, %"class.std::__1::__tree_node.235"* %594) #14
  %595 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 11, i32 0
  %596 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node.232"**
  %597 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %596, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"* %595, %"class.std::__1::__tree_node.232"* %597) #14
  %598 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 10, i32 0
  %599 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %82, align 8
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %598, %"class.std::__1::__tree_node.237"* %599) #14
  %600 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %601 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %600, align 8
  %602 = icmp eq %"class.sh::TIntermNode"** %601, null
  br i1 %602, label %605, label %603

603:                                              ; preds = %590
  %604 = ptrtoint %"class.sh::TIntermNode"** %601 to i64
  store i64 %604, i64* %75, align 8
  br label %605

605:                                              ; preds = %590, %603
  %606 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %12, i64 0, i32 0, i32 7, i32 0
  %607 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %608 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %607, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %606, %"class.std::__1::__tree_node"* %608) #14
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %46) #14
  br label %609

609:                                              ; preds = %4, %605
  %610 = phi i1 [ %591, %605 ], [ true, %4 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #14
  %611 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* nonnull %32, %"class.std::__1::__tree_node"* %611) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  ret i1 %610
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtils28declareSubpassInputVariablesEv(%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %56, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 6, i32 0
  br label %9

9:                                                ; preds = %7, %53
  %10 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %54, %53 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 4
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %8, align 8
  %16 = shl i64 1, %14
  %17 = and i64 %16, %15
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 5
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.sh::TIntermSymbol"**
  %22 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %21, align 8
  %23 = tail call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils31declareSubpassInputVariableImplEPKNS_13TIntermSymbolEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %2, %"class.sh::TIntermSymbol"* %22, i32 %13)
  br i1 %23, label %24, label %56

24:                                               ; preds = %19
  tail call fastcc void @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils25addInputAttachmentUniformEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %2, i32 %13)
  br label %25

25:                                               ; preds = %9, %24
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %53, label %44

37:                                               ; preds = %25, %37
  %38 = phi %"class.std::__1::__tree_node_base"* [ %40, %37 ], [ %27, %25 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %37

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  br label %53

44:                                               ; preds = %29, %44
  %45 = phi %"class.std::__1::__tree_end_node"** [ %48, %44 ], [ %32, %29 ]
  %46 = bitcast %"class.std::__1::__tree_end_node"** %45 to %"class.std::__1::__tree_node_base"**
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 2
  %49 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %49, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, %47
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %29, %42
  %54 = phi %"class.std::__1::__tree_end_node"* [ %43, %42 ], [ %33, %29 ], [ %49, %44 ]
  %55 = icmp eq %"class.std::__1::__tree_end_node"* %54, %5
  br i1 %55, label %56, label %9

56:                                               ; preds = %19, %53, %1
  %57 = phi i1 [ true, %1 ], [ true, %53 ], [ false, %19 ]
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"*, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #2

declare void @_ZN2sh5TType9makeArrayEj(%"class.sh::TType"*, i32) local_unnamed_addr #2

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtils23loadInputAttachmentDataEv(%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %3 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2, i64 64) #14
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #14
  %6 = getelementptr inbounds i8, i8* %3, i64 24
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false) #14
  %9 = bitcast i8* %3 to %"class.sh::TIntermNode"*
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %26, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 6, i32 0
  %17 = bitcast i8* %3 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %18 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 12
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node.235"**
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %18, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::map.195"* %18 to i64*
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 2, i32 0, i32 0
  br label %32

26:                                               ; preds = %136, %1
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 1
  %28 = load %"class.sh::TCompiler"*, %"class.sh::TCompiler"** %27, align 8
  %29 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 3
  %30 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %29, align 8
  %31 = tail call zeroext i1 @_ZN2sh25RunAtTheBeginningOfShaderEPNS_9TCompilerEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TCompiler"* %28, %"class.sh::TIntermBlock"* %30, %"class.sh::TIntermNode"* %9) #14
  ret i1 %31

32:                                               ; preds = %15, %136
  %33 = phi %"class.std::__1::__tree_end_node"* [ %12, %15 ], [ %137, %136 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 4
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = load i64, i64* %16, align 8
  %39 = shl i64 1, %37
  %40 = and i64 %39, %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %108, label %42

42:                                               ; preds = %32
  %43 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %17, align 8
  %44 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %43, i64 8
  %45 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %44, align 8
  %46 = tail call %"class.sh::TIntermBlock"* %45(%"class.sh::TIntermNode"* %9) #14
  %47 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %20, align 8
  %48 = icmp eq %"class.std::__1::__tree_node.235"* %47, null
  br i1 %48, label %74, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %47, i64 0, i32 1, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %49, %68
  %54 = phi %"class.std::__1::__tree_node.235"* [ %69, %68 ], [ %47, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %68

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %54, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %54, i64 0, i32 0, i32 0
  br label %74

61:                                               ; preds = %68
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %54, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_node_base"* %56 to %"class.std::__1::__tree_node.235"*
  br label %64

64:                                               ; preds = %61, %49
  %65 = phi %"class.std::__1::__tree_node.235"* [ %47, %49 ], [ %63, %61 ]
  %66 = phi %"class.std::__1::__tree_node_base"** [ %21, %49 ], [ %62, %61 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %65, i64 0, i32 0, i32 0
  br label %74

68:                                               ; preds = %53
  %69 = bitcast %"class.std::__1::__tree_node_base"* %56 to %"class.std::__1::__tree_node.235"*
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 1
  %71 = bitcast %"class.std::__1::__tree_node_base"* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %61, label %53

74:                                               ; preds = %42, %64, %58
  %75 = phi %"class.std::__1::__tree_end_node"* [ %60, %58 ], [ %67, %64 ], [ %19, %42 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %59, %58 ], [ %66, %64 ], [ %22, %42 ]
  %77 = bitcast %"class.std::__1::__tree_node_base"** %76 to %"class.std::__1::__tree_node.235"**
  %78 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node.235"* %78, null
  br i1 %79, label %80, label %103

80:                                               ; preds = %74
  %81 = tail call i8* @_Znwm(i64 48) #15, !noalias !18
  %82 = getelementptr inbounds i8, i8* %81, i64 32
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 8, !noalias !18
  %84 = getelementptr inbounds i8, i8* %81, i64 40
  %85 = bitcast i8* %84 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %85, align 8, !noalias !18
  %86 = bitcast i8* %81 to %"class.std::__1::__tree_node.235"*
  %87 = bitcast i8* %81 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds i8, i8* %81, i64 16
  %89 = bitcast i8* %88 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %89, align 8
  %90 = bitcast %"class.std::__1::__tree_node_base"** %76 to i8**
  store i8* %81, i8** %90, align 8
  %91 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %80
  %96 = ptrtoint %"class.std::__1::__tree_node_base"* %93 to i64
  store i64 %96, i64* %24, align 8
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  br label %98

98:                                               ; preds = %95, %80
  %99 = phi %"class.std::__1::__tree_node_base"* [ %87, %80 ], [ %97, %95 ]
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %100, %"class.std::__1::__tree_node_base"* %99) #14
  %101 = load i64, i64* %25, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %25, align 8
  br label %103

103:                                              ; preds = %74, %98
  %104 = phi %"class.std::__1::__tree_node.235"* [ %86, %98 ], [ %78, %74 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %104, i64 0, i32 1, i32 0, i32 1
  %106 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %105, align 8
  %107 = tail call fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils27loadInputAttachmentDataImplEmjPKNS_9TVariableE(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %10, i64 0, i32 %36, %"class.sh::TVariable"* %106)
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %46, %"class.sh::TIntermNode"* %107) #14
  br label %108

108:                                              ; preds = %32, %103
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 1, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %120

112:                                              ; preds = %108
  %113 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 2
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.std::__1::__tree_end_node"**
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %113
  br i1 %119, label %136, label %127

120:                                              ; preds = %108, %120
  %121 = phi %"class.std::__1::__tree_node_base"* [ %123, %120 ], [ %110, %108 ]
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %125, label %120

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %121, i64 0, i32 0
  br label %136

127:                                              ; preds = %112, %127
  %128 = phi %"class.std::__1::__tree_end_node"** [ %131, %127 ], [ %115, %112 ]
  %129 = bitcast %"class.std::__1::__tree_end_node"** %128 to %"class.std::__1::__tree_node_base"**
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %130, i64 0, i32 2
  %132 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %131, align 8
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %132, i64 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, %130
  br i1 %135, label %136, label %127

136:                                              ; preds = %127, %112, %125
  %137 = phi %"class.std::__1::__tree_end_node"* [ %126, %125 ], [ %116, %112 ], [ %132, %127 ]
  %138 = icmp eq %"class.std::__1::__tree_end_node"* %137, %13
  br i1 %138, label %26, label %32
}

declare void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"*, %"class.sh::TVariable"*) unnamed_addr #2

declare zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverserD2Ev(%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceVariableTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.278"**
  %6 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"* %3, %"class.std::__1::__tree_node.278"* %6) #14
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %7) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh21ReplaceInOutVariablesEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TSymbolTableEPNSt3__16vectorINS_14ShaderVariableENS6_9allocatorIS8_EEEE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, %"class.std::__1::vector.1"*) local_unnamed_addr #0 {
  %5 = alloca %"class.angle::BitSetT.135", align 8
  %6 = alloca %"class.std::__1::map.136", align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", align 8
  %10 = alloca %"class.sh::(anonymous namespace)::ReplaceInOutUtils", align 8
  %11 = alloca %"class.std::__1::map.195", align 8
  %12 = alloca %"class.std::__1::map.195", align 8
  %13 = alloca %"class.sh::ImmutableString", align 8
  %14 = alloca %"class.std::__1::map.204", align 8
  %15 = alloca %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", align 8
  %16 = bitcast %"class.angle::BitSetT.135"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.angle::BitSetT.135", %"class.angle::BitSetT.135"* %5, i64 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = bitcast %"class.std::__1::map.136"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %6, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %19, align 8
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #14
  store i32 0, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #14
  store i8 0, i8* %8, align 1
  %25 = bitcast %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %25) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 184, i1 false)
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %9, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %26, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #14
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %9, i64 0, i32 1
  store %"class.std::__1::map.136"* %6, %"class.std::__1::map.136"** %28, align 8
  %29 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %9, i64 0, i32 2
  store i32* %7, i32** %29, align 8
  %30 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %9, i64 0, i32 3
  store %"class.angle::BitSetT.135"* %5, %"class.angle::BitSetT.135"** %30, align 8
  %31 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %9, i64 0, i32 4
  store i8* %8, i8** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %6, i64 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* nonnull %32, %"class.std::__1::__tree_node"* %34) #14
  store i64 0, i64* %21, align 8
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %19, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %35, align 8
  %36 = load i32*, i32** %29, align 8
  store i32 0, i32* %36, align 4
  %37 = load %"class.angle::BitSetT.135"*, %"class.angle::BitSetT.135"** %30, align 8
  %38 = getelementptr inbounds %"class.angle::BitSetT.135", %"class.angle::BitSetT.135"* %37, i64 0, i32 0
  store i64 0, i64* %38, align 8
  %39 = load i8*, i8** %31, align 8
  store i8 0, i8* %39, align 1
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %26) #14
  %40 = load i64, i64* %21, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %1006, label %42

42:                                               ; preds = %4
  %43 = bitcast %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %43) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 184, i1 false)
  %44 = load i8, i8* %8, align 1, !range !21
  %45 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 1
  store %"class.sh::TCompiler"* %0, %"class.sh::TCompiler"** %46, align 8
  %47 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 2
  store %"class.sh::TSymbolTable"* %2, %"class.sh::TSymbolTable"** %47, align 8
  %48 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 3
  store %"class.sh::TIntermBlock"* %1, %"class.sh::TIntermBlock"** %48, align 8
  %49 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 4
  store %"class.std::__1::vector.1"* %3, %"class.std::__1::vector.1"** %49, align 8
  %50 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 5
  store i8 %44, i8* %50, align 8
  %51 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 6, i32 0
  %52 = load i64, i64* %17, align 8
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 7
  %54 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %53, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %56 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 7, i32 0, i32 1
  %57 = bitcast %"class.std::__1::__compressed_pair.138"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %54, align 8
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  call void @_ZNSt3__13mapIjPN2sh13TIntermSymbolENS_4lessIjEENS_9allocatorINS_4pairIKjS3_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIjS3_EEPNS_11__tree_nodeISG_PvEElEEEEEEvT_SN_(%"class.std::__1::map.136"* %53, %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"* %22) #14
  %59 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 8
  %60 = bitcast %"class.sh::TVector.31"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #14
  %61 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 10
  %62 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %61, i64 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::__tree_node_base"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %67 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 11, i32 0, i32 0
  %68 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %70 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 12, i32 0, i32 0
  %71 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 8, i32 0, i32 0, i32 1
  %72 = bitcast %"class.sh::TIntermNode"*** %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 9
  store i32 0, i32* %73, align 8
  %74 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %74, align 8
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %67, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %76, align 8
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %70, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %61, i64 0, i32 0
  %79 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_node.237"**
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %78, %"class.std::__1::__tree_node.237"* null) #14
  %80 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %80, align 8
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %64, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %81, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_117ReplaceInOutUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %82 = call zeroext i1 @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtils28declareSubpassInputVariablesEv(%"class.sh::(anonymous namespace)::ReplaceInOutUtils"* nonnull %10)
  br i1 %82, label %83, label %987

83:                                               ; preds = %42
  %84 = bitcast %"class.std::__1::map.195"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #14
  %85 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %11, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %89 = bitcast %"class.std::__1::__tree_node_base"** %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %88, %"class.std::__1::__tree_end_node"** %85, align 8
  %90 = bitcast %"class.std::__1::map.195"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #14
  %91 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %12, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %95 = bitcast %"class.std::__1::__tree_node_base"** %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %91, align 8
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %97 = icmp eq %"class.std::__1::__tree_end_node"* %96, %22
  br i1 %97, label %117, label %98

98:                                               ; preds = %83
  %99 = bitcast %"class.sh::ImmutableString"* %13 to i8*
  %100 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 0
  %101 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 1
  %102 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.std::__1::__tree_node.235"**
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %104 = bitcast %"class.std::__1::map.195"* %12 to i64*
  %105 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 12
  %106 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node.235"**
  %107 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %105, i64 0, i32 0, i32 0
  %108 = bitcast %"class.std::__1::map.195"* %105 to i64*
  %109 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 8, i32 0
  %110 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"class.std::__1::vector.32"* %109 to i64*
  %112 = bitcast %"class.sh::TIntermNode"*** %110 to i64*
  %113 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %109, i64 0, i32 0, i32 0
  %114 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.235"**
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %116 = bitcast %"class.std::__1::map.195"* %11 to i64*
  br label %141

117:                                              ; preds = %774, %83
  %118 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 8, i32 0
  %119 = load i64, i64* %72, align 8
  %120 = bitcast %"class.std::__1::vector.32"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %119, %121
  br i1 %122, label %138, label %123

123:                                              ; preds = %117, %123
  %124 = phi i64 [ %134, %123 ], [ %121, %117 ]
  %125 = phi i64 [ %132, %123 ], [ 0, %117 ]
  %126 = phi i32 [ %131, %123 ], [ 0, %117 ]
  %127 = inttoptr i64 %124 to %"class.sh::TIntermNode"**
  %128 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %48, align 8
  %129 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %127, i64 %125
  %130 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %129, align 8
  call void @_ZN2sh12TIntermBlock15insertStatementEmPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %128, i64 %125, %"class.sh::TIntermNode"* %130) #14
  %131 = add i32 %126, 1
  %132 = zext i32 %131 to i64
  %133 = load i64, i64* %72, align 8
  %134 = load i64, i64* %120, align 8
  %135 = sub i64 %133, %134
  %136 = ashr exact i64 %135, 3
  %137 = icmp ugt i64 %136, %132
  br i1 %137, label %123, label %138

138:                                              ; preds = %123, %117
  %139 = phi i64 [ %119, %117 ], [ %134, %123 ]
  store i64 %139, i64* %72, align 8
  %140 = call zeroext i1 @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtils23loadInputAttachmentDataEv(%"class.sh::(anonymous namespace)::ReplaceInOutUtils"* nonnull %10)
  br i1 %140, label %777, label %979

141:                                              ; preds = %98, %774
  %142 = phi %"class.std::__1::__tree_end_node"* [ %96, %98 ], [ %775, %774 ]
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 4
  %144 = bitcast %"class.std::__1::__tree_end_node"* %143 to i32*
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 5
  %147 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"class.sh::TIntermSymbol"**
  %148 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %147, align 8
  %149 = bitcast %"class.sh::TIntermSymbol"* %148 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %150 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %150, i64 31
  %152 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %151, align 8
  %153 = call dereferenceable(184) %"class.sh::TType"* %152(%"class.sh::TIntermSymbol"* %148) #14
  %154 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %153, i64 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %149, align 8
  %157 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %156, i64 31
  %158 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %157, align 8
  %159 = call dereferenceable(184) %"class.sh::TType"* %158(%"class.sh::TIntermSymbol"* %148) #14
  %160 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %159, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %149, align 8
  %163 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %162, i64 31
  %164 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %163, align 8
  %165 = call dereferenceable(184) %"class.sh::TType"* %164(%"class.sh::TIntermSymbol"* %148) #14
  %166 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %165, i64 0, i32 8
  %167 = load i8, i8* %166, align 8
  %168 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %148, i64 0, i32 0
  %169 = bitcast %"class.sh::TIntermSymbol"* %148 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %170 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %169, align 8
  %171 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %170, i64 31
  %172 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %171, align 8
  %173 = call dereferenceable(184) %"class.sh::TType"* %172(%"class.sh::TIntermTyped"* %168) #14
  %174 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %173, i64 0, i32 10, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %189, label %177

177:                                              ; preds = %141
  %178 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %169, align 8
  %179 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %178, i64 31
  %180 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %179, align 8
  %181 = call dereferenceable(184) %"class.sh::TType"* %180(%"class.sh::TIntermTyped"* %168) #14
  %182 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %181, i64 0, i32 10, i32 0
  %183 = load i32*, i32** %182, align 8
  %184 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %181, i64 0, i32 10, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = add i64 %185, -1
  %187 = getelementptr inbounds i32, i32* %183, i64 %186
  %188 = load i32, i32* %187, align 4
  br label %189

189:                                              ; preds = %141, %177
  %190 = phi i32 [ %188, %177 ], [ 0, %141 ]
  %191 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %192 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %191, i64 184) #14
  %193 = bitcast i8* %192 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %193, i32 %155, i32 %161, i32 1, i8 zeroext %167, i8 zeroext 1) #14
  %194 = getelementptr inbounds i8, i8* %192, i64 8
  %195 = bitcast i8* %194 to i32*
  store i32 10, i32* %195, align 8
  %196 = icmp eq i32 %190, 0
  br i1 %196, label %198, label %197

197:                                              ; preds = %189
  call void @_ZN2sh5TType9makeArrayEj(%"class.sh::TType"* %193, i32 %190) #14
  br label %198

198:                                              ; preds = %189, %197
  %199 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %200 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %199, i64 40) #14
  %201 = bitcast i8* %200 to %"class.sh::TVariable"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #14
  %202 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %148) #14
  %203 = extractvalue { i8*, i64 } %202, 0
  store i8* %203, i8** %100, align 8
  %204 = extractvalue { i8*, i64 } %202, 1
  store i64 %204, i64* %101, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %201, %"class.sh::TSymbolTable"* %2, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %13, %"class.sh::TType"* %193, i8 zeroext 1, i8 zeroext 0) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #14
  %205 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %102, align 8
  %206 = icmp eq %"class.std::__1::__tree_node.235"* %205, null
  br i1 %206, label %233, label %207

207:                                              ; preds = %198, %229
  %208 = phi %"class.std::__1::__tree_node.235"* [ %232, %229 ], [ %205, %198 ]
  %209 = phi %"class.std::__1::__tree_node_base"** [ %231, %229 ], [ %92, %198 ]
  %210 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %208, i64 0, i32 1, i32 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp ult i32 %145, %211
  br i1 %212, label %213, label %219

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %208, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %214, align 8
  %216 = icmp eq %"class.std::__1::__tree_node_base"* %215, null
  br i1 %216, label %217, label %229

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %208, i64 0, i32 0, i32 0
  br label %233

219:                                              ; preds = %207
  %220 = icmp ult i32 %211, %145
  br i1 %220, label %221, label %227

221:                                              ; preds = %219
  %222 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %208, i64 0, i32 0, i32 1
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = icmp eq %"class.std::__1::__tree_node_base"* %223, null
  br i1 %224, label %225, label %229

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %208, i64 0, i32 0, i32 0
  br label %233

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %208, i64 0, i32 0, i32 0
  br label %233

229:                                              ; preds = %221, %213
  %230 = phi %"class.std::__1::__tree_node_base"* [ %215, %213 ], [ %223, %221 ]
  %231 = phi %"class.std::__1::__tree_node_base"** [ %214, %213 ], [ %222, %221 ]
  %232 = bitcast %"class.std::__1::__tree_node_base"* %230 to %"class.std::__1::__tree_node.235"*
  br label %207

233:                                              ; preds = %198, %227, %225, %217
  %234 = phi %"class.std::__1::__tree_end_node"* [ %218, %217 ], [ %226, %225 ], [ %228, %227 ], [ %94, %198 ]
  %235 = phi %"class.std::__1::__tree_node_base"** [ %214, %217 ], [ %222, %225 ], [ %209, %227 ], [ %103, %198 ]
  %236 = bitcast %"class.std::__1::__tree_node_base"** %235 to %"class.std::__1::__tree_node.235"**
  %237 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node.235"* %237, null
  br i1 %238, label %239, label %263

239:                                              ; preds = %233
  %240 = call i8* @_Znwm(i64 48) #15, !noalias !22
  %241 = getelementptr inbounds i8, i8* %240, i64 32
  %242 = bitcast i8* %241 to i32*
  store i32 %145, i32* %242, align 8, !noalias !22
  %243 = getelementptr inbounds i8, i8* %240, i64 40
  %244 = bitcast i8* %243 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %244, align 8, !noalias !22
  %245 = bitcast i8* %240 to %"class.std::__1::__tree_node.235"*
  %246 = bitcast i8* %240 to %"class.std::__1::__tree_node_base"*
  %247 = getelementptr inbounds i8, i8* %240, i64 16
  %248 = bitcast i8* %247 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %240, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %234, %"class.std::__1::__tree_end_node"** %248, align 8
  %249 = bitcast %"class.std::__1::__tree_node_base"** %235 to i8**
  store i8* %240, i8** %249, align 8
  %250 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %251 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %250, i64 0, i32 0
  %252 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %251, align 8
  %253 = icmp eq %"class.std::__1::__tree_node_base"* %252, null
  br i1 %253, label %257, label %254

254:                                              ; preds = %239
  %255 = ptrtoint %"class.std::__1::__tree_node_base"* %252 to i64
  store i64 %255, i64* %104, align 8
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %235, align 8
  br label %257

257:                                              ; preds = %254, %239
  %258 = phi %"class.std::__1::__tree_node_base"* [ %246, %239 ], [ %256, %254 ]
  %259 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %259, %"class.std::__1::__tree_node_base"* %258) #14
  %260 = load i64, i64* %93, align 8
  %261 = add i64 %260, 1
  store i64 %261, i64* %93, align 8
  %262 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %102, align 8
  br label %263

263:                                              ; preds = %233, %257
  %264 = phi %"class.std::__1::__tree_node.235"* [ %262, %257 ], [ %205, %233 ]
  %265 = phi %"class.std::__1::__tree_node.235"* [ %245, %257 ], [ %237, %233 ]
  %266 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %265, i64 0, i32 1, i32 0, i32 1
  %267 = bitcast %"class.sh::TVariable"** %266 to i8**
  store i8* %200, i8** %267, align 8
  %268 = icmp eq %"class.std::__1::__tree_node.235"* %264, null
  br i1 %268, label %295, label %269

269:                                              ; preds = %263, %291
  %270 = phi %"class.std::__1::__tree_node.235"* [ %294, %291 ], [ %264, %263 ]
  %271 = phi %"class.std::__1::__tree_node_base"** [ %293, %291 ], [ %92, %263 ]
  %272 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %270, i64 0, i32 1, i32 0, i32 0
  %273 = load i32, i32* %272, align 4
  %274 = icmp ult i32 %145, %273
  br i1 %274, label %275, label %281

275:                                              ; preds = %269
  %276 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %270, i64 0, i32 0, i32 0, i32 0
  %277 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %276, align 8
  %278 = icmp eq %"class.std::__1::__tree_node_base"* %277, null
  br i1 %278, label %279, label %291

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %270, i64 0, i32 0, i32 0
  br label %295

281:                                              ; preds = %269
  %282 = icmp ult i32 %273, %145
  br i1 %282, label %283, label %289

283:                                              ; preds = %281
  %284 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %270, i64 0, i32 0, i32 1
  %285 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  %286 = icmp eq %"class.std::__1::__tree_node_base"* %285, null
  br i1 %286, label %287, label %291

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %270, i64 0, i32 0, i32 0
  br label %295

289:                                              ; preds = %281
  %290 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %270, i64 0, i32 0, i32 0
  br label %295

291:                                              ; preds = %283, %275
  %292 = phi %"class.std::__1::__tree_node_base"* [ %277, %275 ], [ %285, %283 ]
  %293 = phi %"class.std::__1::__tree_node_base"** [ %276, %275 ], [ %284, %283 ]
  %294 = bitcast %"class.std::__1::__tree_node_base"* %292 to %"class.std::__1::__tree_node.235"*
  br label %269

295:                                              ; preds = %263, %289, %287, %279
  %296 = phi %"class.std::__1::__tree_end_node"* [ %280, %279 ], [ %288, %287 ], [ %290, %289 ], [ %94, %263 ]
  %297 = phi %"class.std::__1::__tree_node_base"** [ %276, %279 ], [ %284, %287 ], [ %271, %289 ], [ %103, %263 ]
  %298 = bitcast %"class.std::__1::__tree_node_base"** %297 to %"class.std::__1::__tree_node.235"**
  %299 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %298, align 8
  %300 = icmp eq %"class.std::__1::__tree_node.235"* %299, null
  br i1 %300, label %301, label %324

301:                                              ; preds = %295
  %302 = call i8* @_Znwm(i64 48) #15, !noalias !25
  %303 = getelementptr inbounds i8, i8* %302, i64 32
  %304 = bitcast i8* %303 to i32*
  store i32 %145, i32* %304, align 8, !noalias !25
  %305 = getelementptr inbounds i8, i8* %302, i64 40
  %306 = bitcast i8* %305 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %306, align 8, !noalias !25
  %307 = bitcast i8* %302 to %"class.std::__1::__tree_node.235"*
  %308 = bitcast i8* %302 to %"class.std::__1::__tree_node_base"*
  %309 = getelementptr inbounds i8, i8* %302, i64 16
  %310 = bitcast i8* %309 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %302, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %296, %"class.std::__1::__tree_end_node"** %310, align 8
  %311 = bitcast %"class.std::__1::__tree_node_base"** %297 to i8**
  store i8* %302, i8** %311, align 8
  %312 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %313 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 0, i32 0
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  %315 = icmp eq %"class.std::__1::__tree_node_base"* %314, null
  br i1 %315, label %319, label %316

316:                                              ; preds = %301
  %317 = ptrtoint %"class.std::__1::__tree_node_base"* %314 to i64
  store i64 %317, i64* %104, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %297, align 8
  br label %319

319:                                              ; preds = %316, %301
  %320 = phi %"class.std::__1::__tree_node_base"* [ %308, %301 ], [ %318, %316 ]
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %321, %"class.std::__1::__tree_node_base"* %320) #14
  %322 = load i64, i64* %93, align 8
  %323 = add i64 %322, 1
  store i64 %323, i64* %93, align 8
  br label %324

324:                                              ; preds = %295, %319
  %325 = phi %"class.std::__1::__tree_node.235"* [ %307, %319 ], [ %299, %295 ]
  %326 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %325, i64 0, i32 1, i32 0, i32 1
  %327 = bitcast %"class.sh::TVariable"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %106, align 8
  %330 = icmp eq %"class.std::__1::__tree_node.235"* %329, null
  br i1 %330, label %357, label %331

331:                                              ; preds = %324, %353
  %332 = phi %"class.std::__1::__tree_node.235"* [ %356, %353 ], [ %329, %324 ]
  %333 = phi %"class.std::__1::__tree_node_base"** [ %355, %353 ], [ %68, %324 ]
  %334 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %332, i64 0, i32 1, i32 0, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = icmp ult i32 %145, %335
  br i1 %336, label %337, label %343

337:                                              ; preds = %331
  %338 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %332, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %338, align 8
  %340 = icmp eq %"class.std::__1::__tree_node_base"* %339, null
  br i1 %340, label %341, label %353

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %332, i64 0, i32 0, i32 0
  br label %357

343:                                              ; preds = %331
  %344 = icmp ult i32 %335, %145
  br i1 %344, label %345, label %351

345:                                              ; preds = %343
  %346 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %332, i64 0, i32 0, i32 1
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = icmp eq %"class.std::__1::__tree_node_base"* %347, null
  br i1 %348, label %349, label %353

349:                                              ; preds = %345
  %350 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %332, i64 0, i32 0, i32 0
  br label %357

351:                                              ; preds = %343
  %352 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %332, i64 0, i32 0, i32 0
  br label %357

353:                                              ; preds = %345, %337
  %354 = phi %"class.std::__1::__tree_node_base"* [ %339, %337 ], [ %347, %345 ]
  %355 = phi %"class.std::__1::__tree_node_base"** [ %338, %337 ], [ %346, %345 ]
  %356 = bitcast %"class.std::__1::__tree_node_base"* %354 to %"class.std::__1::__tree_node.235"*
  br label %331

357:                                              ; preds = %324, %351, %349, %341
  %358 = phi %"class.std::__1::__tree_end_node"* [ %342, %341 ], [ %350, %349 ], [ %352, %351 ], [ %69, %324 ]
  %359 = phi %"class.std::__1::__tree_node_base"** [ %338, %341 ], [ %346, %349 ], [ %333, %351 ], [ %77, %324 ]
  %360 = bitcast %"class.std::__1::__tree_node_base"** %359 to %"class.std::__1::__tree_node.235"**
  %361 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %360, align 8
  %362 = icmp eq %"class.std::__1::__tree_node.235"* %361, null
  br i1 %362, label %363, label %386

363:                                              ; preds = %357
  %364 = call i8* @_Znwm(i64 48) #15, !noalias !28
  %365 = getelementptr inbounds i8, i8* %364, i64 32
  %366 = bitcast i8* %365 to i32*
  store i32 %145, i32* %366, align 8, !noalias !28
  %367 = getelementptr inbounds i8, i8* %364, i64 40
  %368 = bitcast i8* %367 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %368, align 8, !noalias !28
  %369 = bitcast i8* %364 to %"class.std::__1::__tree_node.235"*
  %370 = bitcast i8* %364 to %"class.std::__1::__tree_node_base"*
  %371 = getelementptr inbounds i8, i8* %364, i64 16
  %372 = bitcast i8* %371 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %364, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %358, %"class.std::__1::__tree_end_node"** %372, align 8
  %373 = bitcast %"class.std::__1::__tree_node_base"** %359 to i8**
  store i8* %364, i8** %373, align 8
  %374 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %375 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %374, i64 0, i32 0
  %376 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %375, align 8
  %377 = icmp eq %"class.std::__1::__tree_node_base"* %376, null
  br i1 %377, label %381, label %378

378:                                              ; preds = %363
  %379 = ptrtoint %"class.std::__1::__tree_node_base"* %376 to i64
  store i64 %379, i64* %108, align 8
  %380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %359, align 8
  br label %381

381:                                              ; preds = %378, %363
  %382 = phi %"class.std::__1::__tree_node_base"* [ %370, %363 ], [ %380, %378 ]
  %383 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %383, %"class.std::__1::__tree_node_base"* %382) #14
  %384 = load i64, i64* %76, align 8
  %385 = add i64 %384, 1
  store i64 %385, i64* %76, align 8
  br label %386

386:                                              ; preds = %357, %381
  %387 = phi %"class.std::__1::__tree_node.235"* [ %369, %381 ], [ %361, %357 ]
  %388 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %387, i64 0, i32 1, i32 0, i32 1
  %389 = bitcast %"class.sh::TVariable"** %388 to i64*
  store i64 %328, i64* %389, align 8
  %390 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %391 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %390, i64 56) #14
  %392 = bitcast i8* %391 to %"class.sh::TIntermDeclaration"*
  %393 = bitcast i8* %391 to i32 (...)***
  %394 = getelementptr inbounds i8, i8* %391, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %394, i8 0, i64 16, i1 false) #14
  %395 = getelementptr inbounds i8, i8* %391, i64 24
  %396 = bitcast i8* %395 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %393, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %396, align 8
  %397 = getelementptr inbounds i8, i8* %391, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %397, i8 0, i64 24, i1 false) #14
  %398 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %399 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %398, i64 32) #14
  %400 = bitcast i8* %399 to %"class.sh::TIntermSymbol"*
  %401 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %106, align 8
  %402 = icmp eq %"class.std::__1::__tree_node.235"* %401, null
  br i1 %402, label %429, label %403

403:                                              ; preds = %386, %425
  %404 = phi %"class.std::__1::__tree_node.235"* [ %428, %425 ], [ %401, %386 ]
  %405 = phi %"class.std::__1::__tree_node_base"** [ %427, %425 ], [ %68, %386 ]
  %406 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %404, i64 0, i32 1, i32 0, i32 0
  %407 = load i32, i32* %406, align 4
  %408 = icmp ult i32 %145, %407
  br i1 %408, label %409, label %415

409:                                              ; preds = %403
  %410 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %404, i64 0, i32 0, i32 0, i32 0
  %411 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %410, align 8
  %412 = icmp eq %"class.std::__1::__tree_node_base"* %411, null
  br i1 %412, label %413, label %425

413:                                              ; preds = %409
  %414 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %404, i64 0, i32 0, i32 0
  br label %429

415:                                              ; preds = %403
  %416 = icmp ult i32 %407, %145
  br i1 %416, label %417, label %423

417:                                              ; preds = %415
  %418 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %404, i64 0, i32 0, i32 1
  %419 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %418, align 8
  %420 = icmp eq %"class.std::__1::__tree_node_base"* %419, null
  br i1 %420, label %421, label %425

421:                                              ; preds = %417
  %422 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %404, i64 0, i32 0, i32 0
  br label %429

423:                                              ; preds = %415
  %424 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %404, i64 0, i32 0, i32 0
  br label %429

425:                                              ; preds = %417, %409
  %426 = phi %"class.std::__1::__tree_node_base"* [ %411, %409 ], [ %419, %417 ]
  %427 = phi %"class.std::__1::__tree_node_base"** [ %410, %409 ], [ %418, %417 ]
  %428 = bitcast %"class.std::__1::__tree_node_base"* %426 to %"class.std::__1::__tree_node.235"*
  br label %403

429:                                              ; preds = %386, %423, %421, %413
  %430 = phi %"class.std::__1::__tree_end_node"* [ %414, %413 ], [ %422, %421 ], [ %424, %423 ], [ %69, %386 ]
  %431 = phi %"class.std::__1::__tree_node_base"** [ %410, %413 ], [ %418, %421 ], [ %405, %423 ], [ %77, %386 ]
  %432 = bitcast %"class.std::__1::__tree_node_base"** %431 to %"class.std::__1::__tree_node.235"**
  %433 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %432, align 8
  %434 = icmp eq %"class.std::__1::__tree_node.235"* %433, null
  br i1 %434, label %435, label %458

435:                                              ; preds = %429
  %436 = call i8* @_Znwm(i64 48) #15, !noalias !31
  %437 = getelementptr inbounds i8, i8* %436, i64 32
  %438 = bitcast i8* %437 to i32*
  store i32 %145, i32* %438, align 8, !noalias !31
  %439 = getelementptr inbounds i8, i8* %436, i64 40
  %440 = bitcast i8* %439 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %440, align 8, !noalias !31
  %441 = bitcast i8* %436 to %"class.std::__1::__tree_node.235"*
  %442 = bitcast i8* %436 to %"class.std::__1::__tree_node_base"*
  %443 = getelementptr inbounds i8, i8* %436, i64 16
  %444 = bitcast i8* %443 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %436, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %430, %"class.std::__1::__tree_end_node"** %444, align 8
  %445 = bitcast %"class.std::__1::__tree_node_base"** %431 to i8**
  store i8* %436, i8** %445, align 8
  %446 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %447 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %446, i64 0, i32 0
  %448 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %447, align 8
  %449 = icmp eq %"class.std::__1::__tree_node_base"* %448, null
  br i1 %449, label %453, label %450

450:                                              ; preds = %435
  %451 = ptrtoint %"class.std::__1::__tree_node_base"* %448 to i64
  store i64 %451, i64* %108, align 8
  %452 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %431, align 8
  br label %453

453:                                              ; preds = %450, %435
  %454 = phi %"class.std::__1::__tree_node_base"* [ %442, %435 ], [ %452, %450 ]
  %455 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %455, %"class.std::__1::__tree_node_base"* %454) #14
  %456 = load i64, i64* %76, align 8
  %457 = add i64 %456, 1
  store i64 %457, i64* %76, align 8
  br label %458

458:                                              ; preds = %429, %453
  %459 = phi %"class.std::__1::__tree_node.235"* [ %441, %453 ], [ %433, %429 ]
  %460 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %459, i64 0, i32 1, i32 0, i32 1
  %461 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %460, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %400, %"class.sh::TVariable"* %461) #14
  %462 = bitcast i8* %399 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %392, %"class.sh::TIntermTyped"* %462) #14
  %463 = ptrtoint i8* %391 to i64
  %464 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %71, align 8
  %465 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %110, align 8
  %466 = icmp ult %"class.sh::TIntermNode"** %464, %465
  %467 = ptrtoint %"class.sh::TIntermNode"** %465 to i64
  br i1 %466, label %468, label %472

468:                                              ; preds = %458
  %469 = bitcast %"class.sh::TIntermNode"** %464 to i64*
  store i64 %463, i64* %469, align 8
  %470 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %464, i64 1
  %471 = ptrtoint %"class.sh::TIntermNode"** %470 to i64
  store i64 %471, i64* %72, align 8
  br label %682

472:                                              ; preds = %458
  %473 = ptrtoint %"class.sh::TIntermNode"** %464 to i64
  %474 = load i64, i64* %111, align 8
  %475 = sub i64 %473, %474
  %476 = ashr exact i64 %475, 3
  %477 = add nsw i64 %476, 1
  %478 = icmp ugt i64 %477, 2305843009213693951
  br i1 %478, label %479, label %481

479:                                              ; preds = %472
  %480 = bitcast %"class.std::__1::vector.32"* %109 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %480) #16
  unreachable

481:                                              ; preds = %472
  %482 = sub i64 %467, %474
  %483 = ashr exact i64 %482, 3
  %484 = icmp ult i64 %483, 1152921504606846975
  br i1 %484, label %485, label %490

485:                                              ; preds = %481
  %486 = ashr exact i64 %482, 2
  %487 = icmp ult i64 %486, %477
  %488 = select i1 %487, i64 %477, i64 %486
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %496, label %490

490:                                              ; preds = %485, %481
  %491 = phi i64 [ %488, %485 ], [ 2305843009213693951, %481 ]
  %492 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %493 = shl i64 %491, 3
  %494 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %492, i64 %493) #14
  %495 = bitcast i8* %494 to %"class.sh::TIntermNode"**
  br label %496

496:                                              ; preds = %490, %485
  %497 = phi i64 [ %491, %490 ], [ 0, %485 ]
  %498 = phi %"class.sh::TIntermNode"** [ %495, %490 ], [ null, %485 ]
  %499 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 %476
  %500 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 %497
  %501 = ptrtoint %"class.sh::TIntermNode"** %500 to i64
  %502 = bitcast %"class.sh::TIntermNode"** %499 to i64*
  store i64 %463, i64* %502, align 8
  %503 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %499, i64 1
  %504 = ptrtoint %"class.sh::TIntermNode"** %503 to i64
  %505 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %113, align 8
  %506 = ptrtoint %"class.sh::TIntermNode"** %505 to i64
  %507 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %71, align 8
  %508 = icmp eq %"class.sh::TIntermNode"** %507, %505
  br i1 %508, label %679, label %509

509:                                              ; preds = %496
  %510 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %507, i64 -1
  %511 = ptrtoint %"class.sh::TIntermNode"** %510 to i64
  %512 = sub i64 %511, %506
  %513 = lshr i64 %512, 3
  %514 = add nuw nsw i64 %513, 1
  %515 = icmp ult i64 %514, 4
  br i1 %515, label %609, label %516

516:                                              ; preds = %509
  %517 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %498, i64 -1
  %518 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %507, i64 -1
  %519 = ptrtoint %"class.sh::TIntermNode"** %518 to i64
  %520 = sub i64 %519, %506
  %521 = lshr i64 %520, 3
  %522 = sub nsw i64 %476, %521
  %523 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %517, i64 %522
  %524 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %507, i64 -1
  %525 = sub nsw i64 0, %521
  %526 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %524, i64 %525
  %527 = icmp ult %"class.sh::TIntermNode"** %523, %507
  %528 = icmp ult %"class.sh::TIntermNode"** %526, %499
  %529 = and i1 %527, %528
  br i1 %529, label %609, label %530

530:                                              ; preds = %516
  %531 = and i64 %514, 4611686018427387900
  %532 = sub nsw i64 0, %531
  %533 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %499, i64 %532
  %534 = sub nsw i64 0, %531
  %535 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %507, i64 %534
  %536 = add nsw i64 %531, -4
  %537 = lshr exact i64 %536, 2
  %538 = add nuw nsw i64 %537, 1
  %539 = and i64 %538, 1
  %540 = icmp eq i64 %536, 0
  br i1 %540, label %585, label %541

541:                                              ; preds = %530
  %542 = sub nuw nsw i64 %538, %539
  %543 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %499, i64 -1
  %544 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %507, i64 -1
  %545 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %499, i64 -1
  %546 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %507, i64 -1
  br label %547

547:                                              ; preds = %547, %541
  %548 = phi i64 [ 0, %541 ], [ %582, %547 ]
  %549 = phi i64 [ %542, %541 ], [ %583, %547 ]
  %550 = sub i64 0, %548
  %551 = sub i64 0, %548
  %552 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %543, i64 %550
  %553 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %544, i64 %551
  %554 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %553, i64 -1
  %555 = bitcast %"class.sh::TIntermNode"** %554 to <2 x i64>*
  %556 = load <2 x i64>, <2 x i64>* %555, align 8, !alias.scope !34
  %557 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %553, i64 -2
  %558 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %557, i64 -1
  %559 = bitcast %"class.sh::TIntermNode"** %558 to <2 x i64>*
  %560 = load <2 x i64>, <2 x i64>* %559, align 8, !alias.scope !34
  %561 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %552, i64 -1
  %562 = bitcast %"class.sh::TIntermNode"** %561 to <2 x i64>*
  store <2 x i64> %556, <2 x i64>* %562, align 8, !alias.scope !37, !noalias !34
  %563 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %552, i64 -2
  %564 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %563, i64 -1
  %565 = bitcast %"class.sh::TIntermNode"** %564 to <2 x i64>*
  store <2 x i64> %560, <2 x i64>* %565, align 8, !alias.scope !37, !noalias !34
  %566 = sub nuw nsw i64 -4, %548
  %567 = sub nuw nsw i64 -4, %548
  %568 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %545, i64 %566
  %569 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %546, i64 %567
  %570 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %569, i64 -1
  %571 = bitcast %"class.sh::TIntermNode"** %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !34
  %573 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %569, i64 -2
  %574 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %573, i64 -1
  %575 = bitcast %"class.sh::TIntermNode"** %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !34
  %577 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %568, i64 -1
  %578 = bitcast %"class.sh::TIntermNode"** %577 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %578, align 8, !alias.scope !37, !noalias !34
  %579 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %568, i64 -2
  %580 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %579, i64 -1
  %581 = bitcast %"class.sh::TIntermNode"** %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !37, !noalias !34
  %582 = add i64 %548, 8
  %583 = add i64 %549, -2
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %585, label %547, !llvm.loop !39

585:                                              ; preds = %547, %530
  %586 = phi i64 [ 0, %530 ], [ %582, %547 ]
  %587 = icmp eq i64 %539, 0
  br i1 %587, label %607, label %588

588:                                              ; preds = %585
  %589 = sub i64 0, %586
  %590 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %499, i64 -1
  %591 = sub i64 0, %586
  %592 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %507, i64 -1
  %593 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %590, i64 %589
  %594 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %592, i64 %591
  %595 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %594, i64 -1
  %596 = bitcast %"class.sh::TIntermNode"** %595 to <2 x i64>*
  %597 = load <2 x i64>, <2 x i64>* %596, align 8, !alias.scope !34
  %598 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %594, i64 -2
  %599 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %598, i64 -1
  %600 = bitcast %"class.sh::TIntermNode"** %599 to <2 x i64>*
  %601 = load <2 x i64>, <2 x i64>* %600, align 8, !alias.scope !34
  %602 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %593, i64 -1
  %603 = bitcast %"class.sh::TIntermNode"** %602 to <2 x i64>*
  store <2 x i64> %597, <2 x i64>* %603, align 8, !alias.scope !37, !noalias !34
  %604 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %593, i64 -2
  %605 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %604, i64 -1
  %606 = bitcast %"class.sh::TIntermNode"** %605 to <2 x i64>*
  store <2 x i64> %601, <2 x i64>* %606, align 8, !alias.scope !37, !noalias !34
  br label %607

607:                                              ; preds = %585, %588
  %608 = icmp eq i64 %514, %531
  br i1 %608, label %679, label %609

609:                                              ; preds = %607, %516, %509
  %610 = phi %"class.sh::TIntermNode"** [ %499, %516 ], [ %499, %509 ], [ %533, %607 ]
  %611 = phi %"class.sh::TIntermNode"** [ %507, %516 ], [ %507, %509 ], [ %535, %607 ]
  %612 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %611, i64 -1
  %613 = ptrtoint %"class.sh::TIntermNode"** %612 to i64
  %614 = sub i64 %613, %506
  %615 = lshr i64 %614, 3
  %616 = add nuw nsw i64 %615, 1
  %617 = and i64 %616, 7
  %618 = icmp eq i64 %617, 0
  br i1 %618, label %630, label %619

619:                                              ; preds = %609, %619
  %620 = phi %"class.sh::TIntermNode"** [ %623, %619 ], [ %610, %609 ]
  %621 = phi %"class.sh::TIntermNode"** [ %624, %619 ], [ %611, %609 ]
  %622 = phi i64 [ %628, %619 ], [ %617, %609 ]
  %623 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %620, i64 -1
  %624 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %621, i64 -1
  %625 = bitcast %"class.sh::TIntermNode"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast %"class.sh::TIntermNode"** %623 to i64*
  store i64 %626, i64* %627, align 8
  %628 = add i64 %622, -1
  %629 = icmp eq i64 %628, 0
  br i1 %629, label %630, label %619, !llvm.loop !40

630:                                              ; preds = %619, %609
  %631 = phi %"class.sh::TIntermNode"** [ undef, %609 ], [ %623, %619 ]
  %632 = phi %"class.sh::TIntermNode"** [ %610, %609 ], [ %623, %619 ]
  %633 = phi %"class.sh::TIntermNode"** [ %611, %609 ], [ %624, %619 ]
  %634 = icmp ult i64 %614, 56
  br i1 %634, label %679, label %635

635:                                              ; preds = %630, %635
  %636 = phi %"class.sh::TIntermNode"** [ %673, %635 ], [ %632, %630 ]
  %637 = phi %"class.sh::TIntermNode"** [ %674, %635 ], [ %633, %630 ]
  %638 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -1
  %639 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -1
  %640 = bitcast %"class.sh::TIntermNode"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"class.sh::TIntermNode"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -2
  %644 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -2
  %645 = bitcast %"class.sh::TIntermNode"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"class.sh::TIntermNode"** %643 to i64*
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -3
  %649 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -3
  %650 = bitcast %"class.sh::TIntermNode"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = bitcast %"class.sh::TIntermNode"** %648 to i64*
  store i64 %651, i64* %652, align 8
  %653 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -4
  %654 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -4
  %655 = bitcast %"class.sh::TIntermNode"** %654 to i64*
  %656 = load i64, i64* %655, align 8
  %657 = bitcast %"class.sh::TIntermNode"** %653 to i64*
  store i64 %656, i64* %657, align 8
  %658 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -5
  %659 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -5
  %660 = bitcast %"class.sh::TIntermNode"** %659 to i64*
  %661 = load i64, i64* %660, align 8
  %662 = bitcast %"class.sh::TIntermNode"** %658 to i64*
  store i64 %661, i64* %662, align 8
  %663 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -6
  %664 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -6
  %665 = bitcast %"class.sh::TIntermNode"** %664 to i64*
  %666 = load i64, i64* %665, align 8
  %667 = bitcast %"class.sh::TIntermNode"** %663 to i64*
  store i64 %666, i64* %667, align 8
  %668 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -7
  %669 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -7
  %670 = bitcast %"class.sh::TIntermNode"** %669 to i64*
  %671 = load i64, i64* %670, align 8
  %672 = bitcast %"class.sh::TIntermNode"** %668 to i64*
  store i64 %671, i64* %672, align 8
  %673 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %636, i64 -8
  %674 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %637, i64 -8
  %675 = bitcast %"class.sh::TIntermNode"** %674 to i64*
  %676 = load i64, i64* %675, align 8
  %677 = bitcast %"class.sh::TIntermNode"** %673 to i64*
  store i64 %676, i64* %677, align 8
  %678 = icmp eq %"class.sh::TIntermNode"** %674, %505
  br i1 %678, label %679, label %635, !llvm.loop !41

679:                                              ; preds = %630, %635, %607, %496
  %680 = phi %"class.sh::TIntermNode"** [ %499, %496 ], [ %533, %607 ], [ %631, %630 ], [ %673, %635 ]
  %681 = ptrtoint %"class.sh::TIntermNode"** %680 to i64
  store i64 %681, i64* %111, align 8
  store i64 %504, i64* %72, align 8
  store i64 %501, i64* %112, align 8
  br label %682

682:                                              ; preds = %468, %679
  %683 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %148, i64 0, i32 1
  %684 = bitcast %"class.sh::TVariable"** %683 to i64*
  %685 = load i64, i64* %684, align 8
  %686 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %114, align 8
  %687 = icmp eq %"class.std::__1::__tree_node.235"* %686, null
  br i1 %687, label %714, label %688

688:                                              ; preds = %682, %710
  %689 = phi %"class.std::__1::__tree_node.235"* [ %713, %710 ], [ %686, %682 ]
  %690 = phi %"class.std::__1::__tree_node_base"** [ %712, %710 ], [ %86, %682 ]
  %691 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %689, i64 0, i32 1, i32 0, i32 0
  %692 = load i32, i32* %691, align 4
  %693 = icmp ult i32 %145, %692
  br i1 %693, label %694, label %700

694:                                              ; preds = %688
  %695 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %689, i64 0, i32 0, i32 0, i32 0
  %696 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %695, align 8
  %697 = icmp eq %"class.std::__1::__tree_node_base"* %696, null
  br i1 %697, label %698, label %710

698:                                              ; preds = %694
  %699 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %689, i64 0, i32 0, i32 0
  br label %714

700:                                              ; preds = %688
  %701 = icmp ult i32 %692, %145
  br i1 %701, label %702, label %708

702:                                              ; preds = %700
  %703 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %689, i64 0, i32 0, i32 1
  %704 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %703, align 8
  %705 = icmp eq %"class.std::__1::__tree_node_base"* %704, null
  br i1 %705, label %706, label %710

706:                                              ; preds = %702
  %707 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %689, i64 0, i32 0, i32 0
  br label %714

708:                                              ; preds = %700
  %709 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %689, i64 0, i32 0, i32 0
  br label %714

710:                                              ; preds = %702, %694
  %711 = phi %"class.std::__1::__tree_node_base"* [ %696, %694 ], [ %704, %702 ]
  %712 = phi %"class.std::__1::__tree_node_base"** [ %695, %694 ], [ %703, %702 ]
  %713 = bitcast %"class.std::__1::__tree_node_base"* %711 to %"class.std::__1::__tree_node.235"*
  br label %688

714:                                              ; preds = %682, %708, %706, %698
  %715 = phi %"class.std::__1::__tree_end_node"* [ %699, %698 ], [ %707, %706 ], [ %709, %708 ], [ %88, %682 ]
  %716 = phi %"class.std::__1::__tree_node_base"** [ %695, %698 ], [ %703, %706 ], [ %690, %708 ], [ %115, %682 ]
  %717 = bitcast %"class.std::__1::__tree_node_base"** %716 to %"class.std::__1::__tree_node.235"**
  %718 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %717, align 8
  %719 = icmp eq %"class.std::__1::__tree_node.235"* %718, null
  br i1 %719, label %720, label %743

720:                                              ; preds = %714
  %721 = call i8* @_Znwm(i64 48) #15, !noalias !42
  %722 = getelementptr inbounds i8, i8* %721, i64 32
  %723 = bitcast i8* %722 to i32*
  store i32 %145, i32* %723, align 8, !noalias !42
  %724 = getelementptr inbounds i8, i8* %721, i64 40
  %725 = bitcast i8* %724 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %725, align 8, !noalias !42
  %726 = bitcast i8* %721 to %"class.std::__1::__tree_node.235"*
  %727 = bitcast i8* %721 to %"class.std::__1::__tree_node_base"*
  %728 = getelementptr inbounds i8, i8* %721, i64 16
  %729 = bitcast i8* %728 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %721, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %715, %"class.std::__1::__tree_end_node"** %729, align 8
  %730 = bitcast %"class.std::__1::__tree_node_base"** %716 to i8**
  store i8* %721, i8** %730, align 8
  %731 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %732 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %731, i64 0, i32 0
  %733 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %732, align 8
  %734 = icmp eq %"class.std::__1::__tree_node_base"* %733, null
  br i1 %734, label %738, label %735

735:                                              ; preds = %720
  %736 = ptrtoint %"class.std::__1::__tree_node_base"* %733 to i64
  store i64 %736, i64* %116, align 8
  %737 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %716, align 8
  br label %738

738:                                              ; preds = %735, %720
  %739 = phi %"class.std::__1::__tree_node_base"* [ %727, %720 ], [ %737, %735 ]
  %740 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %740, %"class.std::__1::__tree_node_base"* %739) #14
  %741 = load i64, i64* %87, align 8
  %742 = add i64 %741, 1
  store i64 %742, i64* %87, align 8
  br label %743

743:                                              ; preds = %714, %738
  %744 = phi %"class.std::__1::__tree_node.235"* [ %726, %738 ], [ %718, %714 ]
  %745 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %744, i64 0, i32 1, i32 0, i32 1
  %746 = bitcast %"class.sh::TVariable"** %745 to i64*
  store i64 %685, i64* %746, align 8
  %747 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %748 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %747, align 8
  %749 = icmp eq %"class.std::__1::__tree_node_base"* %748, null
  br i1 %749, label %750, label %758

750:                                              ; preds = %743
  %751 = bitcast %"class.std::__1::__tree_end_node"* %142 to %"class.std::__1::__tree_node_base"*
  %752 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 2
  %753 = bitcast %"class.std::__1::__tree_end_node"* %752 to %"class.std::__1::__tree_end_node"**
  %754 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %753, align 8
  %755 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %754, i64 0, i32 0
  %756 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %755, align 8
  %757 = icmp eq %"class.std::__1::__tree_node_base"* %756, %751
  br i1 %757, label %774, label %765

758:                                              ; preds = %743, %758
  %759 = phi %"class.std::__1::__tree_node_base"* [ %761, %758 ], [ %748, %743 ]
  %760 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %759, i64 0, i32 0, i32 0
  %761 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %760, align 8
  %762 = icmp eq %"class.std::__1::__tree_node_base"* %761, null
  br i1 %762, label %763, label %758

763:                                              ; preds = %758
  %764 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %759, i64 0, i32 0
  br label %774

765:                                              ; preds = %750, %765
  %766 = phi %"class.std::__1::__tree_end_node"** [ %769, %765 ], [ %753, %750 ]
  %767 = bitcast %"class.std::__1::__tree_end_node"** %766 to %"class.std::__1::__tree_node_base"**
  %768 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %767, align 8
  %769 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %768, i64 0, i32 2
  %770 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %769, align 8
  %771 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %770, i64 0, i32 0
  %772 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %771, align 8
  %773 = icmp eq %"class.std::__1::__tree_node_base"* %772, %768
  br i1 %773, label %774, label %765

774:                                              ; preds = %765, %750, %763
  %775 = phi %"class.std::__1::__tree_end_node"* [ %764, %763 ], [ %754, %750 ], [ %770, %765 ]
  %776 = icmp eq %"class.std::__1::__tree_end_node"* %775, %22
  br i1 %776, label %117, label %141

777:                                              ; preds = %138
  %778 = bitcast %"class.std::__1::map.204"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %778) #14
  %779 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %14, i64 0, i32 0, i32 0
  %780 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %781 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %782 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %783 = bitcast %"class.std::__1::__tree_node_base"** %780 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %783, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %782, %"class.std::__1::__tree_end_node"** %779, align 8
  %784 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %785 = icmp eq %"class.std::__1::__tree_end_node"* %784, %94
  br i1 %785, label %786, label %788

786:                                              ; preds = %777
  %787 = bitcast %"class.std::__1::__tree_end_node"* %782 to %"class.std::__1::__tree_node.278"**
  br label %795

788:                                              ; preds = %777
  %789 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.235"**
  %790 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %791 = bitcast %"class.std::__1::map.195"* %11 to i64*
  %792 = bitcast %"class.std::__1::__tree_end_node"* %782 to %"class.std::__1::__tree_node.278"**
  %793 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %782, i64 0, i32 0
  %794 = bitcast %"class.std::__1::map.204"* %14 to i64*
  br label %813

795:                                              ; preds = %976, %786
  %796 = phi %"class.std::__1::__tree_node.278"** [ %787, %786 ], [ %792, %976 ]
  %797 = bitcast %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %797) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %797, i8 -86, i64 176, i1 false)
  %798 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %798, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #14
  %799 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceVariableTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %799, align 8
  %800 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 1
  %801 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %800, i64 0, i32 0, i32 0
  %802 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %803 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 1, i32 0, i32 1
  %804 = bitcast %"class.std::__1::__compressed_pair.206"* %803 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %804, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %802, %"class.std::__1::__tree_end_node"** %801, align 8
  %805 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %779, align 8
  call void @_ZNSt3__13mapIPKN2sh9TVariableEPKNS1_12TIntermTypedENS_4lessIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIS4_S7_EEPNS_11__tree_nodeISK_PvEElEEEEEEvT_SR_(%"class.std::__1::map.204"* %800, %"class.std::__1::__tree_end_node"* %805, %"class.std::__1::__tree_end_node"* %782) #14
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %798) #14
  %806 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 0
  %807 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %798, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %806) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceVariableTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %799, align 8
  %808 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %15, i64 0, i32 1, i32 0
  %809 = bitcast %"class.std::__1::__tree_end_node"* %802 to %"class.std::__1::__tree_node.278"**
  %810 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %809, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"* %808, %"class.std::__1::__tree_node.278"* %810) #14
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %798) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %797) #14
  %811 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %14, i64 0, i32 0
  %812 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %796, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"* nonnull %811, %"class.std::__1::__tree_node.278"* %812) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %778) #14
  br label %979

813:                                              ; preds = %788, %976
  %814 = phi %"class.std::__1::__tree_end_node"* [ %784, %788 ], [ %977, %976 ]
  %815 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %814, i64 4
  %816 = bitcast %"class.std::__1::__tree_end_node"* %815 to i32*
  %817 = load i32, i32* %816, align 8
  %818 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %819 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %818, i64 32) #14
  %820 = bitcast i8* %819 to %"class.sh::TIntermSymbol"*
  %821 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %814, i64 5
  %822 = bitcast %"class.std::__1::__tree_end_node"* %821 to %"class.sh::TVariable"**
  %823 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %822, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %820, %"class.sh::TVariable"* %823) #14
  %824 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %789, align 8
  %825 = icmp eq %"class.std::__1::__tree_node.235"* %824, null
  br i1 %825, label %852, label %826

826:                                              ; preds = %813, %848
  %827 = phi %"class.std::__1::__tree_node.235"* [ %851, %848 ], [ %824, %813 ]
  %828 = phi %"class.std::__1::__tree_node_base"** [ %850, %848 ], [ %86, %813 ]
  %829 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %827, i64 0, i32 1, i32 0, i32 0
  %830 = load i32, i32* %829, align 4
  %831 = icmp ult i32 %817, %830
  br i1 %831, label %832, label %838

832:                                              ; preds = %826
  %833 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %827, i64 0, i32 0, i32 0, i32 0
  %834 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %833, align 8
  %835 = icmp eq %"class.std::__1::__tree_node_base"* %834, null
  br i1 %835, label %836, label %848

836:                                              ; preds = %832
  %837 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %827, i64 0, i32 0, i32 0
  br label %852

838:                                              ; preds = %826
  %839 = icmp ult i32 %830, %817
  br i1 %839, label %840, label %846

840:                                              ; preds = %838
  %841 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %827, i64 0, i32 0, i32 1
  %842 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %841, align 8
  %843 = icmp eq %"class.std::__1::__tree_node_base"* %842, null
  br i1 %843, label %844, label %848

844:                                              ; preds = %840
  %845 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %827, i64 0, i32 0, i32 0
  br label %852

846:                                              ; preds = %838
  %847 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %827, i64 0, i32 0, i32 0
  br label %852

848:                                              ; preds = %840, %832
  %849 = phi %"class.std::__1::__tree_node_base"* [ %834, %832 ], [ %842, %840 ]
  %850 = phi %"class.std::__1::__tree_node_base"** [ %833, %832 ], [ %841, %840 ]
  %851 = bitcast %"class.std::__1::__tree_node_base"* %849 to %"class.std::__1::__tree_node.235"*
  br label %826

852:                                              ; preds = %813, %846, %844, %836
  %853 = phi %"class.std::__1::__tree_end_node"* [ %837, %836 ], [ %845, %844 ], [ %847, %846 ], [ %88, %813 ]
  %854 = phi %"class.std::__1::__tree_node_base"** [ %833, %836 ], [ %841, %844 ], [ %828, %846 ], [ %790, %813 ]
  %855 = bitcast %"class.std::__1::__tree_node_base"** %854 to %"class.std::__1::__tree_node.235"**
  %856 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %855, align 8
  %857 = icmp eq %"class.std::__1::__tree_node.235"* %856, null
  br i1 %857, label %858, label %881

858:                                              ; preds = %852
  %859 = call i8* @_Znwm(i64 48) #15, !noalias !45
  %860 = getelementptr inbounds i8, i8* %859, i64 32
  %861 = bitcast i8* %860 to i32*
  store i32 %817, i32* %861, align 8, !noalias !45
  %862 = getelementptr inbounds i8, i8* %859, i64 40
  %863 = bitcast i8* %862 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %863, align 8, !noalias !45
  %864 = bitcast i8* %859 to %"class.std::__1::__tree_node.235"*
  %865 = bitcast i8* %859 to %"class.std::__1::__tree_node_base"*
  %866 = getelementptr inbounds i8, i8* %859, i64 16
  %867 = bitcast i8* %866 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %859, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %853, %"class.std::__1::__tree_end_node"** %867, align 8
  %868 = bitcast %"class.std::__1::__tree_node_base"** %854 to i8**
  store i8* %859, i8** %868, align 8
  %869 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %870 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %869, i64 0, i32 0
  %871 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %870, align 8
  %872 = icmp eq %"class.std::__1::__tree_node_base"* %871, null
  br i1 %872, label %876, label %873

873:                                              ; preds = %858
  %874 = ptrtoint %"class.std::__1::__tree_node_base"* %871 to i64
  store i64 %874, i64* %791, align 8
  %875 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %854, align 8
  br label %876

876:                                              ; preds = %873, %858
  %877 = phi %"class.std::__1::__tree_node_base"* [ %865, %858 ], [ %875, %873 ]
  %878 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %878, %"class.std::__1::__tree_node_base"* %877) #14
  %879 = load i64, i64* %87, align 8
  %880 = add i64 %879, 1
  store i64 %880, i64* %87, align 8
  br label %881

881:                                              ; preds = %852, %876
  %882 = phi %"class.std::__1::__tree_node.235"* [ %864, %876 ], [ %856, %852 ]
  %883 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %882, i64 0, i32 1, i32 0, i32 1
  %884 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %792, align 8
  %885 = icmp eq %"class.std::__1::__tree_node.278"* %884, null
  br i1 %885, label %914, label %886

886:                                              ; preds = %881
  %887 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %883, align 8
  br label %888

888:                                              ; preds = %910, %886
  %889 = phi %"class.std::__1::__tree_node.278"* [ %913, %910 ], [ %884, %886 ]
  %890 = phi %"class.std::__1::__tree_node_base"** [ %912, %910 ], [ %780, %886 ]
  %891 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %889, i64 0, i32 1, i32 0, i32 0
  %892 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %891, align 8
  %893 = icmp ult %"class.sh::TVariable"* %887, %892
  br i1 %893, label %894, label %900

894:                                              ; preds = %888
  %895 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %889, i64 0, i32 0, i32 0, i32 0
  %896 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %895, align 8
  %897 = icmp eq %"class.std::__1::__tree_node_base"* %896, null
  br i1 %897, label %898, label %910

898:                                              ; preds = %894
  %899 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %889, i64 0, i32 0, i32 0
  br label %914

900:                                              ; preds = %888
  %901 = icmp ult %"class.sh::TVariable"* %892, %887
  br i1 %901, label %902, label %908

902:                                              ; preds = %900
  %903 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %889, i64 0, i32 0, i32 1
  %904 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %903, align 8
  %905 = icmp eq %"class.std::__1::__tree_node_base"* %904, null
  br i1 %905, label %906, label %910

906:                                              ; preds = %902
  %907 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %889, i64 0, i32 0, i32 0
  br label %914

908:                                              ; preds = %900
  %909 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %889, i64 0, i32 0, i32 0
  br label %914

910:                                              ; preds = %902, %894
  %911 = phi %"class.std::__1::__tree_node_base"* [ %896, %894 ], [ %904, %902 ]
  %912 = phi %"class.std::__1::__tree_node_base"** [ %895, %894 ], [ %903, %902 ]
  %913 = bitcast %"class.std::__1::__tree_node_base"* %911 to %"class.std::__1::__tree_node.278"*
  br label %888

914:                                              ; preds = %881, %908, %906, %898
  %915 = phi %"class.std::__1::__tree_end_node"* [ %899, %898 ], [ %907, %906 ], [ %909, %908 ], [ %782, %881 ]
  %916 = phi %"class.std::__1::__tree_node_base"** [ %895, %898 ], [ %903, %906 ], [ %890, %908 ], [ %793, %881 ]
  %917 = bitcast %"class.std::__1::__tree_node_base"** %916 to %"class.std::__1::__tree_node.278"**
  %918 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %917, align 8
  %919 = icmp eq %"class.std::__1::__tree_node.278"* %918, null
  br i1 %919, label %920, label %945

920:                                              ; preds = %914
  %921 = call i8* @_Znwm(i64 48) #15, !noalias !48
  %922 = getelementptr inbounds i8, i8* %921, i64 32
  %923 = bitcast %"class.sh::TVariable"** %883 to i64*
  %924 = load i64, i64* %923, align 8, !noalias !48
  %925 = bitcast i8* %922 to i64*
  store i64 %924, i64* %925, align 8, !noalias !48
  %926 = getelementptr inbounds i8, i8* %921, i64 40
  %927 = bitcast i8* %926 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* null, %"class.sh::TIntermTyped"** %927, align 8, !noalias !48
  %928 = bitcast i8* %921 to %"class.std::__1::__tree_node.278"*
  %929 = bitcast i8* %921 to %"class.std::__1::__tree_node_base"*
  %930 = getelementptr inbounds i8, i8* %921, i64 16
  %931 = bitcast i8* %930 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %921, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %915, %"class.std::__1::__tree_end_node"** %931, align 8
  %932 = bitcast %"class.std::__1::__tree_node_base"** %916 to i8**
  store i8* %921, i8** %932, align 8
  %933 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %779, align 8
  %934 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %933, i64 0, i32 0
  %935 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %934, align 8
  %936 = icmp eq %"class.std::__1::__tree_node_base"* %935, null
  br i1 %936, label %940, label %937

937:                                              ; preds = %920
  %938 = ptrtoint %"class.std::__1::__tree_node_base"* %935 to i64
  store i64 %938, i64* %794, align 8
  %939 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %916, align 8
  br label %940

940:                                              ; preds = %937, %920
  %941 = phi %"class.std::__1::__tree_node_base"* [ %929, %920 ], [ %939, %937 ]
  %942 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %780, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %942, %"class.std::__1::__tree_node_base"* %941) #14
  %943 = load i64, i64* %781, align 8
  %944 = add i64 %943, 1
  store i64 %944, i64* %781, align 8
  br label %945

945:                                              ; preds = %914, %940
  %946 = phi %"class.std::__1::__tree_node.278"* [ %928, %940 ], [ %918, %914 ]
  %947 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %946, i64 0, i32 1, i32 0, i32 1
  %948 = bitcast %"class.sh::TIntermTyped"** %947 to i8**
  store i8* %819, i8** %948, align 8
  %949 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %814, i64 1, i32 0
  %950 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %949, align 8
  %951 = icmp eq %"class.std::__1::__tree_node_base"* %950, null
  br i1 %951, label %952, label %960

952:                                              ; preds = %945
  %953 = bitcast %"class.std::__1::__tree_end_node"* %814 to %"class.std::__1::__tree_node_base"*
  %954 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %814, i64 2
  %955 = bitcast %"class.std::__1::__tree_end_node"* %954 to %"class.std::__1::__tree_end_node"**
  %956 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %955, align 8
  %957 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %956, i64 0, i32 0
  %958 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %957, align 8
  %959 = icmp eq %"class.std::__1::__tree_node_base"* %958, %953
  br i1 %959, label %976, label %967

960:                                              ; preds = %945, %960
  %961 = phi %"class.std::__1::__tree_node_base"* [ %963, %960 ], [ %950, %945 ]
  %962 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %961, i64 0, i32 0, i32 0
  %963 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %962, align 8
  %964 = icmp eq %"class.std::__1::__tree_node_base"* %963, null
  br i1 %964, label %965, label %960

965:                                              ; preds = %960
  %966 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %961, i64 0, i32 0
  br label %976

967:                                              ; preds = %952, %967
  %968 = phi %"class.std::__1::__tree_end_node"** [ %971, %967 ], [ %955, %952 ]
  %969 = bitcast %"class.std::__1::__tree_end_node"** %968 to %"class.std::__1::__tree_node_base"**
  %970 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %969, align 8
  %971 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %970, i64 0, i32 2
  %972 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %971, align 8
  %973 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %972, i64 0, i32 0
  %974 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %973, align 8
  %975 = icmp eq %"class.std::__1::__tree_node_base"* %974, %970
  br i1 %975, label %976, label %967

976:                                              ; preds = %967, %952, %965
  %977 = phi %"class.std::__1::__tree_end_node"* [ %966, %965 ], [ %956, %952 ], [ %972, %967 ]
  %978 = icmp eq %"class.std::__1::__tree_end_node"* %977, %94
  br i1 %978, label %795, label %813

979:                                              ; preds = %138, %795
  %980 = phi i1 [ %807, %795 ], [ false, %138 ]
  %981 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %12, i64 0, i32 0
  %982 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.std::__1::__tree_node.235"**
  %983 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %982, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* nonnull %981, %"class.std::__1::__tree_node.235"* %983) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #14
  %984 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %11, i64 0, i32 0
  %985 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.235"**
  %986 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %985, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* nonnull %984, %"class.std::__1::__tree_node.235"* %986) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #14
  br label %987

987:                                              ; preds = %42, %979
  %988 = phi i1 [ %980, %979 ], [ false, %42 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %989 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 12, i32 0
  %990 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node.235"**
  %991 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %990, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* %989, %"class.std::__1::__tree_node.235"* %991) #14
  %992 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 11, i32 0
  %993 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_node.232"**
  %994 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %993, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"* %992, %"class.std::__1::__tree_node.232"* %994) #14
  %995 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 10, i32 0
  %996 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %79, align 8
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %995, %"class.std::__1::__tree_node.237"* %996) #14
  %997 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %998 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %997, align 8
  %999 = icmp eq %"class.sh::TIntermNode"** %998, null
  br i1 %999, label %1002, label %1000

1000:                                             ; preds = %987
  %1001 = ptrtoint %"class.sh::TIntermNode"** %998 to i64
  store i64 %1001, i64* %72, align 8
  br label %1002

1002:                                             ; preds = %987, %1000
  %1003 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %10, i64 0, i32 0, i32 7, i32 0
  %1004 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node"**
  %1005 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1004, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %1003, %"class.std::__1::__tree_node"* %1005) #14
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %43) #14
  br label %1006

1006:                                             ; preds = %4, %1002
  %1007 = phi i1 [ %988, %1002 ], [ true, %4 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #14
  %1008 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* nonnull %32, %"class.std::__1::__tree_node"* %1008) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  ret i1 %1007
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtils28declareSubpassInputVariablesEv(%"class.sh::(anonymous namespace)::ReplaceInOutUtils"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %77, label %7

7:                                                ; preds = %1, %74
  %8 = phi %"class.std::__1::__tree_end_node"* [ %75, %74 ], [ %4, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 4
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 5
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.sh::TIntermSymbol"**
  %14 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %13, align 8
  %15 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %14, i64 0, i32 0
  %16 = bitcast %"class.sh::TIntermSymbol"* %14 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %17 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %17, i64 31
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %18, align 8
  %20 = tail call dereferenceable(184) %"class.sh::TType"* %19(%"class.sh::TIntermTyped"* %15) #14
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %20, i64 0, i32 10, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %7
  %25 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %26 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %25, i64 31
  %27 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %26, align 8
  %28 = tail call dereferenceable(184) %"class.sh::TType"* %27(%"class.sh::TIntermTyped"* %15) #14
  %29 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %28, i64 0, i32 10, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %28, i64 0, i32 10, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  %34 = getelementptr inbounds i32, i32* %30, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %7, %24
  %38 = phi i32 [ %35, %24 ], [ 1, %7 ]
  br label %39

39:                                               ; preds = %43, %37
  %40 = phi i32 [ %44, %43 ], [ 0, %37 ]
  %41 = add i32 %40, %11
  %42 = tail call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils31declareSubpassInputVariableImplEPKNS_13TIntermSymbolEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %2, %"class.sh::TIntermSymbol"* %14, i32 %41)
  br i1 %42, label %43, label %77

43:                                               ; preds = %39
  tail call fastcc void @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils25addInputAttachmentUniformEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %2, i32 %41)
  %44 = add nuw i32 %40, 1
  %45 = icmp eq i32 %44, %38
  br i1 %45, label %46, label %39

46:                                               ; preds = %43, %24
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %58

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_end_node"**
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %51
  br i1 %57, label %74, label %65

58:                                               ; preds = %46, %58
  %59 = phi %"class.std::__1::__tree_node_base"* [ %61, %58 ], [ %48, %46 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %58

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0
  br label %74

65:                                               ; preds = %50, %65
  %66 = phi %"class.std::__1::__tree_end_node"** [ %69, %65 ], [ %53, %50 ]
  %67 = bitcast %"class.std::__1::__tree_end_node"** %66 to %"class.std::__1::__tree_node_base"**
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %68, i64 0, i32 2
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %68
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %50, %63
  %75 = phi %"class.std::__1::__tree_end_node"* [ %64, %63 ], [ %54, %50 ], [ %70, %65 ]
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %75, %5
  br i1 %76, label %77, label %7

77:                                               ; preds = %74, %39, %1
  %78 = phi i1 [ true, %1 ], [ false, %39 ], [ true, %74 ]
  ret i1 %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtils23loadInputAttachmentDataEv(%"class.sh::(anonymous namespace)::ReplaceInOutUtils"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %3 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2, i64 64) #14
  %4 = bitcast i8* %3 to %"class.sh::TIntermBlock"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #14
  %7 = getelementptr inbounds i8, i8* %3, i64 24
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false) #14
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  br i1 %14, label %24, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 12
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node.235"**
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::map.195", %"class.std::__1::map.195"* %16, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::map.195"* %16 to i64*
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 2, i32 0, i32 0
  br label %31

24:                                               ; preds = %151, %1
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 1
  %26 = load %"class.sh::TCompiler"*, %"class.sh::TCompiler"** %25, align 8
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 3
  %28 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %27, align 8
  %29 = bitcast i8* %3 to %"class.sh::TIntermNode"*
  %30 = tail call zeroext i1 @_ZN2sh25RunAtTheBeginningOfShaderEPNS_9TCompilerEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TCompiler"* %26, %"class.sh::TIntermBlock"* %28, %"class.sh::TIntermNode"* %29) #14
  ret i1 %30

31:                                               ; preds = %15, %151
  %32 = phi %"class.std::__1::__tree_end_node"* [ %12, %15 ], [ %152, %151 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 4
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 5
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.sh::TIntermTyped"**
  %38 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %37, align 8
  %39 = bitcast %"class.sh::TIntermTyped"* %38 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %40 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %40, i64 31
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %41, align 8
  %43 = tail call dereferenceable(184) %"class.sh::TType"* %42(%"class.sh::TIntermTyped"* %38) #14
  %44 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 10, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %31
  %48 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %49 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %48, i64 31
  %50 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %49, align 8
  %51 = tail call dereferenceable(184) %"class.sh::TType"* %50(%"class.sh::TIntermTyped"* %38) #14
  %52 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %51, i64 0, i32 10, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %51, i64 0, i32 10, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, -1
  %57 = getelementptr inbounds i32, i32* %53, i64 %56
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %31, %47
  %60 = phi i32 [ %58, %47 ], [ 0, %31 ]
  %61 = zext i32 %60 to i64
  %62 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %18, align 8
  %63 = icmp eq %"class.std::__1::__tree_node.235"* %62, null
  br i1 %63, label %90, label %64

64:                                               ; preds = %59, %86
  %65 = phi %"class.std::__1::__tree_node.235"* [ %89, %86 ], [ %62, %59 ]
  %66 = phi %"class.std::__1::__tree_node_base"** [ %88, %86 ], [ %19, %59 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %65, i64 0, i32 1, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp ult i32 %35, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %65, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %86

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %65, i64 0, i32 0, i32 0
  br label %90

76:                                               ; preds = %64
  %77 = icmp ult i32 %68, %35
  br i1 %77, label %78, label %84

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %65, i64 0, i32 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %65, i64 0, i32 0, i32 0
  br label %90

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %65, i64 0, i32 0, i32 0
  br label %90

86:                                               ; preds = %78, %70
  %87 = phi %"class.std::__1::__tree_node_base"* [ %72, %70 ], [ %80, %78 ]
  %88 = phi %"class.std::__1::__tree_node_base"** [ %71, %70 ], [ %79, %78 ]
  %89 = bitcast %"class.std::__1::__tree_node_base"* %87 to %"class.std::__1::__tree_node.235"*
  br label %64

90:                                               ; preds = %59, %84, %82, %74
  %91 = phi %"class.std::__1::__tree_end_node"* [ %75, %74 ], [ %83, %82 ], [ %85, %84 ], [ %17, %59 ]
  %92 = phi %"class.std::__1::__tree_node_base"** [ %71, %74 ], [ %79, %82 ], [ %66, %84 ], [ %20, %59 ]
  %93 = bitcast %"class.std::__1::__tree_node_base"** %92 to %"class.std::__1::__tree_node.235"**
  %94 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node.235"* %94, null
  br i1 %95, label %96, label %119

96:                                               ; preds = %90
  %97 = tail call i8* @_Znwm(i64 48) #15, !noalias !51
  %98 = getelementptr inbounds i8, i8* %97, i64 32
  %99 = bitcast i8* %98 to i32*
  store i32 %35, i32* %99, align 8, !noalias !51
  %100 = getelementptr inbounds i8, i8* %97, i64 40
  %101 = bitcast i8* %100 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %101, align 8, !noalias !51
  %102 = bitcast i8* %97 to %"class.std::__1::__tree_node.235"*
  %103 = bitcast i8* %97 to %"class.std::__1::__tree_node_base"*
  %104 = getelementptr inbounds i8, i8* %97, i64 16
  %105 = bitcast i8* %104 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %105, align 8
  %106 = bitcast %"class.std::__1::__tree_node_base"** %92 to i8**
  store i8* %97, i8** %106, align 8
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %21, align 8
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %96
  %112 = ptrtoint %"class.std::__1::__tree_node_base"* %109 to i64
  store i64 %112, i64* %22, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  br label %114

114:                                              ; preds = %111, %96
  %115 = phi %"class.std::__1::__tree_node_base"* [ %103, %96 ], [ %113, %111 ]
  %116 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %116, %"class.std::__1::__tree_node_base"* %115) #14
  %117 = load i64, i64* %23, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %23, align 8
  br label %119

119:                                              ; preds = %90, %114
  %120 = phi %"class.std::__1::__tree_node.235"* [ %102, %114 ], [ %94, %90 ]
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %120, i64 0, i32 1, i32 0, i32 1
  %122 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %121, align 8
  %123 = tail call fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils27loadInputAttachmentDataImplEmjPKNS_9TVariableE(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %10, i64 %61, i32 %35, %"class.sh::TVariable"* %122)
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %4, %"class.sh::TIntermNode"* %123) #14
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 1, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %127, label %135

127:                                              ; preds = %119
  %128 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 2
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::__tree_end_node"**
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, %128
  br i1 %134, label %151, label %142

135:                                              ; preds = %119, %135
  %136 = phi %"class.std::__1::__tree_node_base"* [ %138, %135 ], [ %125, %119 ]
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %135

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 0
  br label %151

142:                                              ; preds = %127, %142
  %143 = phi %"class.std::__1::__tree_end_node"** [ %146, %142 ], [ %130, %127 ]
  %144 = bitcast %"class.std::__1::__tree_end_node"** %143 to %"class.std::__1::__tree_node_base"**
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 2
  %147 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 0, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, %145
  br i1 %150, label %151, label %142

151:                                              ; preds = %142, %127, %140
  %152 = phi %"class.std::__1::__tree_end_node"* [ %141, %140 ], [ %131, %127 ], [ %147, %142 ]
  %153 = icmp eq %"class.std::__1::__tree_end_node"* %152, %13
  br i1 %153, label %24, label %31
}

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverserD0Ev(%"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* nocapture readonly, i32, %"class.sh::TIntermBinary"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sh::TIntermSymbol"*, align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, -2
  %9 = icmp eq i8 %8, 44
  br i1 %9, label %10, label %152

10:                                               ; preds = %3
  %11 = bitcast %"class.sh::TIntermSymbol"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  store %"class.sh::TIntermSymbol"* inttoptr (i64 -6148914691236517206 to %"class.sh::TIntermSymbol"*), %"class.sh::TIntermSymbol"** %4, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %13 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %12, align 8
  %14 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %13, i64 0, i32 0
  %15 = bitcast %"class.sh::TIntermTyped"* %13 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %16 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %16, i64 19
  %18 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %17, align 8
  %19 = tail call %"class.sh::TIntermSymbol"* %18(%"class.sh::TIntermNode"* %14) #14
  store %"class.sh::TIntermSymbol"* %19, %"class.sh::TIntermSymbol"** %4, align 8
  %20 = icmp eq %"class.sh::TIntermSymbol"* %19, null
  br i1 %20, label %151, label %21

21:                                               ; preds = %10
  %22 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %19) #14
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = icmp eq i8* %23, null
  %25 = select i1 %24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %23
  %26 = tail call i32 @strcmp(i8* %25, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %151

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %30 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %29, align 8
  %31 = bitcast %"class.sh::TIntermTyped"* %30 to %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)***
  %32 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)** %32, i64 29
  %34 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)** %33, align 8
  %35 = tail call %"class.sh::TConstantUnion"* %34(%"class.sh::TIntermTyped"* %30) #14
  %36 = icmp eq %"class.sh::TConstantUnion"* %35, null
  br i1 %36, label %37, label %53

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 1
  %39 = load %"class.std::__1::map.136"*, %"class.std::__1::map.136"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %39, i64 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %40, %"class.std::__1::__tree_node"* %43) #14
  %44 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %39, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %39, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %46, align 8
  %47 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 4
  %48 = load i8*, i8** %47, align 8
  store i8 1, i8* %48, align 1
  %49 = load %"class.std::__1::map.136"*, %"class.std::__1::map.136"** %38, align 8
  %50 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #14
  store i32 0, i32* %5, align 4
  %51 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %49, i64 0, i32 0
  %52 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE21__emplace_unique_implIJiRS4_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEEDpOT_(%"class.std::__1::__tree.137"* %51, i32* nonnull dereferenceable(4) %5, %"class.sh::TIntermSymbol"** nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #14
  br label %151

53:                                               ; preds = %28
  %54 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %35, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  switch i32 %55, label %66 [
    i32 3, label %56
    i32 4, label %58
    i32 1, label %60
    i32 5, label %63
  ]

56:                                               ; preds = %53
  %57 = tail call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* nonnull %35) #14
  br label %66

58:                                               ; preds = %53
  %59 = tail call i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"* nonnull %35) #14
  br label %66

60:                                               ; preds = %53
  %61 = tail call float @_ZNK2sh14TConstantUnion9getFConstEv(%"class.sh::TConstantUnion"* nonnull %35) #14
  %62 = fptoui float %61 to i32
  br label %66

63:                                               ; preds = %53
  %64 = tail call zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"* nonnull %35) #14
  %65 = zext i1 %64 to i32
  br label %66

66:                                               ; preds = %53, %63, %60, %58, %56
  %67 = phi i32 [ 0, %53 ], [ %65, %63 ], [ %62, %60 ], [ %59, %58 ], [ %57, %56 ]
  %68 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 3
  %69 = load %"class.angle::BitSetT.135"*, %"class.angle::BitSetT.135"** %68, align 8
  %70 = zext i32 %67 to i64
  %71 = shl i64 1, %70
  %72 = and i64 %71, 4294967295
  %73 = getelementptr inbounds %"class.angle::BitSetT.135", %"class.angle::BitSetT.135"* %69, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = or i64 %72, %74
  store i64 %75, i64* %73, align 8
  %76 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 2
  %77 = load i32*, i32** %76, align 8
  %78 = load i32, i32* %77, align 4
  %79 = icmp ult i32 %78, %67
  %80 = select i1 %79, i32 %67, i32 %78
  store i32 %80, i32* %77, align 4
  %81 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 1
  %82 = load %"class.std::__1::map.136"*, %"class.std::__1::map.136"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %82, i64 0, i32 0, i32 1, i32 0, i32 0
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_node"**
  %85 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node"* %85, null
  br i1 %86, label %115, label %87

87:                                               ; preds = %66
  %88 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %82, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %111, %87
  %90 = phi %"class.std::__1::__tree_node"* [ %114, %111 ], [ %85, %87 ]
  %91 = phi %"class.std::__1::__tree_node_base"** [ %113, %111 ], [ %88, %87 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 1, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp ult i32 %67, %93
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %111

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

101:                                              ; preds = %89
  %102 = icmp ult i32 %93, %67
  br i1 %102, label %103, label %109

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 1
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

111:                                              ; preds = %103, %95
  %112 = phi %"class.std::__1::__tree_node_base"* [ %97, %95 ], [ %105, %103 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %96, %95 ], [ %104, %103 ]
  %114 = bitcast %"class.std::__1::__tree_node_base"* %112 to %"class.std::__1::__tree_node"*
  br label %89

115:                                              ; preds = %66
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 0, i32 0
  br label %117

117:                                              ; preds = %115, %109, %107, %99
  %118 = phi %"class.std::__1::__tree_end_node"* [ %83, %115 ], [ %100, %99 ], [ %108, %107 ], [ %110, %109 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %116, %115 ], [ %96, %99 ], [ %104, %107 ], [ %91, %109 ]
  %120 = bitcast %"class.std::__1::__tree_node_base"** %119 to %"class.std::__1::__tree_node"**
  %121 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node"* %121, null
  br i1 %122, label %123, label %151

123:                                              ; preds = %117
  %124 = tail call i8* @_Znwm(i64 48) #15, !noalias !54
  %125 = getelementptr inbounds i8, i8* %124, i64 32
  %126 = bitcast i8* %125 to i32*
  store i32 %67, i32* %126, align 8, !noalias !54
  %127 = getelementptr inbounds i8, i8* %124, i64 40
  %128 = bitcast %"class.sh::TIntermSymbol"** %4 to i64*
  %129 = load i64, i64* %128, align 8, !noalias !54
  %130 = bitcast i8* %127 to i64*
  store i64 %129, i64* %130, align 8, !noalias !54
  %131 = bitcast i8* %124 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds i8, i8* %124, i64 16
  %133 = bitcast i8* %132 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %118, %"class.std::__1::__tree_end_node"** %133, align 8
  %134 = bitcast %"class.std::__1::__tree_node_base"** %119 to i8**
  store i8* %124, i8** %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %82, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %136, i64 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %123
  %141 = ptrtoint %"class.std::__1::__tree_node_base"* %138 to i64
  %142 = bitcast %"class.std::__1::map.136"* %82 to i64*
  store i64 %141, i64* %142, align 8
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  br label %144

144:                                              ; preds = %140, %123
  %145 = phi %"class.std::__1::__tree_node_base"* [ %131, %123 ], [ %143, %140 ]
  %146 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %82, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %147, %"class.std::__1::__tree_node_base"* %145) #14
  %148 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %82, i64 0, i32 0, i32 2, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %148, align 8
  br label %151

151:                                              ; preds = %144, %117, %21, %37, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %152

152:                                              ; preds = %3, %151
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_133InputAttachmentReferenceTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* nocapture readonly, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.sh::TIntermDeclaration"* %2 to %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)***
  %5 = load %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)** %5, i64 27
  %7 = load %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)** %6, align 8
  %8 = tail call %"class.sh::TVector.31"* %7(%"class.sh::TIntermDeclaration"* %2) #14
  %9 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.sh::TVector.31"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 8
  br i1 %15, label %16, label %183

16:                                               ; preds = %3
  %17 = inttoptr i64 %13 to %"class.sh::TIntermNode"**
  %18 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %17, align 8
  %19 = bitcast %"class.sh::TIntermNode"* %18 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %20 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %20, i64 4
  %22 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %21, align 8
  %23 = tail call %"class.sh::TIntermTyped"* %22(%"class.sh::TIntermNode"* %18) #14
  %24 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %23, i64 0, i32 0
  %25 = bitcast %"class.sh::TIntermTyped"* %23 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %26 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %26, i64 19
  %28 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %27, align 8
  %29 = tail call %"class.sh::TIntermSymbol"* %28(%"class.sh::TIntermNode"* %24) #14
  %30 = ptrtoint %"class.sh::TIntermSymbol"* %29 to i64
  %31 = icmp eq %"class.sh::TIntermSymbol"* %29, null
  br i1 %31, label %183, label %32

32:                                               ; preds = %16
  %33 = bitcast %"class.sh::TIntermSymbol"* %29 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %34 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %34, i64 31
  %36 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %35, align 8
  %37 = tail call dereferenceable(184) %"class.sh::TType"* %36(%"class.sh::TIntermSymbol"* nonnull %29) #14
  %38 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %37, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 13
  br i1 %40, label %41, label %183

41:                                               ; preds = %32
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %33, align 8
  %43 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %42, i64 31
  %44 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %43, align 8
  %45 = tail call dereferenceable(184) %"class.sh::TType"* %44(%"class.sh::TIntermSymbol"* nonnull %29) #14
  %46 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %45, i64 0, i32 7, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %33, align 8
  %49 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %48, i64 31
  %50 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %49, align 8
  %51 = tail call dereferenceable(184) %"class.sh::TType"* %50(%"class.sh::TIntermSymbol"* nonnull %29) #14
  %52 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %51, i64 0, i32 10, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %100, label %55

55:                                               ; preds = %41
  %56 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %33, align 8
  %57 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %56, i64 31
  %58 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %57, align 8
  %59 = tail call dereferenceable(184) %"class.sh::TType"* %58(%"class.sh::TIntermSymbol"* nonnull %29) #14
  %60 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %59, i64 0, i32 10, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %59, i64 0, i32 10, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, -1
  %65 = getelementptr inbounds i32, i32* %61, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %114, label %68

68:                                               ; preds = %55
  %69 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 3
  %70 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 2
  br label %71

71:                                               ; preds = %68, %71
  %72 = phi i64 [ 0, %68 ], [ %86, %71 ]
  %73 = trunc i64 %72 to i32
  %74 = add i32 %47, %73
  %75 = load %"class.angle::BitSetT.135"*, %"class.angle::BitSetT.135"** %69, align 8
  %76 = zext i32 %74 to i64
  %77 = shl i64 1, %76
  %78 = and i64 %77, 4294967295
  %79 = getelementptr inbounds %"class.angle::BitSetT.135", %"class.angle::BitSetT.135"* %75, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = or i64 %80, %78
  store i64 %81, i64* %79, align 8
  %82 = load i32*, i32** %70, align 8
  %83 = load i32, i32* %82, align 4
  %84 = icmp ult i32 %83, %74
  %85 = select i1 %84, i32 %74, i32 %83
  store i32 %85, i32* %82, align 4
  %86 = add nuw nsw i64 %72, 1
  %87 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %33, align 8
  %88 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %87, i64 31
  %89 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %88, align 8
  %90 = tail call dereferenceable(184) %"class.sh::TType"* %89(%"class.sh::TIntermSymbol"* nonnull %29) #14
  %91 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %90, i64 0, i32 10, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %90, i64 0, i32 10, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  %96 = getelementptr inbounds i32, i32* %92, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %86, %98
  br i1 %99, label %71, label %114

100:                                              ; preds = %41
  %101 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 3
  %102 = load %"class.angle::BitSetT.135"*, %"class.angle::BitSetT.135"** %101, align 8
  %103 = zext i32 %47 to i64
  %104 = shl i64 1, %103
  %105 = and i64 %104, 4294967295
  %106 = getelementptr inbounds %"class.angle::BitSetT.135", %"class.angle::BitSetT.135"* %102, i64 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = or i64 %107, %105
  store i64 %108, i64* %106, align 8
  %109 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 2
  %110 = load i32*, i32** %109, align 8
  %111 = load i32, i32* %110, align 4
  %112 = icmp ult i32 %111, %47
  %113 = select i1 %112, i32 %47, i32 %111
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %71, %55, %100
  %115 = getelementptr inbounds %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser", %"class.sh::(anonymous namespace)::InputAttachmentReferenceTraverser"* %0, i64 0, i32 1
  %116 = load %"class.std::__1::map.136"*, %"class.std::__1::map.136"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %116, i64 0, i32 0, i32 1, i32 0, i32 0
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_node"**
  %119 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node"* %119, null
  br i1 %120, label %149, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %116, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %123

123:                                              ; preds = %145, %121
  %124 = phi %"class.std::__1::__tree_node"* [ %148, %145 ], [ %119, %121 ]
  %125 = phi %"class.std::__1::__tree_node_base"** [ %147, %145 ], [ %122, %121 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %124, i64 0, i32 1, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp ult i32 %47, %127
  br i1 %128, label %129, label %135

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %124, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %133, label %145

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %124, i64 0, i32 0, i32 0
  br label %151

135:                                              ; preds = %123
  %136 = icmp ult i32 %127, %47
  br i1 %136, label %137, label %143

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %124, i64 0, i32 0, i32 1
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, null
  br i1 %140, label %141, label %145

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %124, i64 0, i32 0, i32 0
  br label %151

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %124, i64 0, i32 0, i32 0
  br label %151

145:                                              ; preds = %137, %129
  %146 = phi %"class.std::__1::__tree_node_base"* [ %131, %129 ], [ %139, %137 ]
  %147 = phi %"class.std::__1::__tree_node_base"** [ %130, %129 ], [ %138, %137 ]
  %148 = bitcast %"class.std::__1::__tree_node_base"* %146 to %"class.std::__1::__tree_node"*
  br label %123

149:                                              ; preds = %114
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  br label %151

151:                                              ; preds = %149, %143, %141, %133
  %152 = phi %"class.std::__1::__tree_end_node"* [ %117, %149 ], [ %134, %133 ], [ %142, %141 ], [ %144, %143 ]
  %153 = phi %"class.std::__1::__tree_node_base"** [ %150, %149 ], [ %130, %133 ], [ %138, %141 ], [ %125, %143 ]
  %154 = bitcast %"class.std::__1::__tree_node_base"** %153 to %"class.std::__1::__tree_node"**
  %155 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node"* %155, null
  br i1 %156, label %157, label %183

157:                                              ; preds = %151
  %158 = tail call i8* @_Znwm(i64 48) #15, !noalias !57
  %159 = getelementptr inbounds i8, i8* %158, i64 32
  %160 = bitcast i8* %159 to i32*
  store i32 %47, i32* %160, align 8, !noalias !57
  %161 = getelementptr inbounds i8, i8* %158, i64 40
  %162 = bitcast i8* %161 to i64*
  store i64 %30, i64* %162, align 8, !noalias !57
  %163 = bitcast i8* %158 to %"class.std::__1::__tree_node_base"*
  %164 = getelementptr inbounds i8, i8* %158, i64 16
  %165 = bitcast i8* %164 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %152, %"class.std::__1::__tree_end_node"** %165, align 8
  %166 = bitcast %"class.std::__1::__tree_node_base"** %153 to i8**
  store i8* %158, i8** %166, align 8
  %167 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %116, i64 0, i32 0, i32 0
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %157
  %173 = ptrtoint %"class.std::__1::__tree_node_base"* %170 to i64
  %174 = bitcast %"class.std::__1::map.136"* %116 to i64*
  store i64 %173, i64* %174, align 8
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  br label %176

176:                                              ; preds = %172, %157
  %177 = phi %"class.std::__1::__tree_node_base"* [ %163, %157 ], [ %175, %172 ]
  %178 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %116, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %179, %"class.std::__1::__tree_node_base"* %177) #14
  %180 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %116, i64 0, i32 0, i32 2, i32 0, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 1
  store i64 %182, i64* %180, align 8
  br label %183

183:                                              ; preds = %176, %151, %16, %32, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

declare i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

declare float @_ZNK2sh14TConstantUnion9getFConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE21__emplace_unique_implIJiRS4_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEEDpOT_(%"class.std::__1::__tree.137"*, i32* dereferenceable(4), %"class.sh::TIntermSymbol"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 48) #15, !noalias !60
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %1, align 4, !noalias !60
  store i32 %7, i32* %6, align 8, !noalias !60
  %8 = getelementptr inbounds i8, i8* %4, i64 40
  %9 = bitcast %"class.sh::TIntermSymbol"** %2 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !60
  %11 = bitcast i8* %8 to i64*
  store i64 %10, i64* %11, align 8, !noalias !60
  %12 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node"* %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %40, %16
  %19 = phi %"class.std::__1::__tree_node"* [ %43, %40 ], [ %14, %16 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %42, %40 ], [ %17, %16 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %7, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

30:                                               ; preds = %18
  %31 = icmp ult i32 %22, %7
  br i1 %31, label %32, label %38

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  br label %46

40:                                               ; preds = %32, %24
  %41 = phi %"class.std::__1::__tree_node_base"* [ %26, %24 ], [ %34, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %25, %24 ], [ %33, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"* %41 to %"class.std::__1::__tree_node"*
  br label %18

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  br label %46

46:                                               ; preds = %28, %36, %38, %44
  %47 = phi %"class.std::__1::__tree_end_node"* [ %12, %44 ], [ %29, %28 ], [ %37, %36 ], [ %39, %38 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %45, %44 ], [ %25, %28 ], [ %33, %36 ], [ %20, %38 ]
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node"* %50, null
  br i1 %51, label %52, label %74

52:                                               ; preds = %46
  %53 = bitcast i8* %4 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds i8, i8* %4, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %47, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = bitcast %"class.std::__1::__tree_node_base"** %48 to i8**
  store i8* %4, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %52
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %60 to i64
  %64 = bitcast %"class.std::__1::__tree.137"* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  br label %66

66:                                               ; preds = %62, %52
  %67 = phi %"class.std::__1::__tree_node_base"* [ %53, %52 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"* %67) #14
  %70 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = bitcast i8* %4 to %"class.std::__1::__tree_end_node"*
  br label %76

74:                                               ; preds = %46
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* nonnull %4) #15
  br label %76

76:                                               ; preds = %66, %74
  %77 = phi %"class.std::__1::__tree_end_node"* [ %73, %66 ], [ %75, %74 ]
  %78 = phi i8 [ 1, %66 ], [ 0, %74 ]
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %80 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %79, i8 %78, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %80
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !21
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !21
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !21
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_126ReplaceGlLastFragDataUtilsD0Ev(%"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.235"**
  %6 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* %3, %"class.std::__1::__tree_node.235"* %6) #14
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 11, i32 0
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.232"**
  %10 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"* %7, %"class.std::__1::__tree_node.232"* %10) #14
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 10, i32 0
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.237"**
  %14 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %13, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %11, %"class.std::__1::__tree_node.237"* %14) #14
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %16 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %17 = icmp eq %"class.sh::TIntermNode"** %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %1
  %19 = ptrtoint %"class.sh::TIntermNode"** %16 to i64
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 1
  %21 = bitcast %"class.sh::TIntermNode"*** %20 to i64*
  store i64 %19, i64* %21, align 8
  br label %22

22:                                               ; preds = %1, %18
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 7, i32 0
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils", %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node"**
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %23, %"class.std::__1::__tree_node"* %26) #14
  %27 = bitcast %"class.sh::(anonymous namespace)::ReplaceGlLastFragDataUtils"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsD2Ev(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.235"**
  %6 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* %3, %"class.std::__1::__tree_node.235"* %6) #14
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.232"**
  %10 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"* %7, %"class.std::__1::__tree_node.232"* %10) #14
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 10, i32 0
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.237"**
  %14 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %13, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %11, %"class.std::__1::__tree_node.237"* %14) #14
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %16 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %17 = icmp eq %"class.sh::TIntermNode"** %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %1
  %19 = ptrtoint %"class.sh::TIntermNode"** %16 to i64
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %21 = bitcast %"class.sh::TIntermNode"*** %20 to i64*
  store i64 %19, i64* %21, align 8
  br label %22

22:                                               ; preds = %1, %18
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 7, i32 0
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node"**
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %23, %"class.std::__1::__tree_node"* %26) #14
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsD0Ev(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* nocapture readnone) unnamed_addr #9 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapIjPN2sh13TIntermSymbolENS_4lessIjEENS_9allocatorINS_4pairIKjS3_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIjS3_EEPNS_11__tree_nodeISG_PvEElEEEEEEvT_SN_(%"class.std::__1::map.136"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %6 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %7, label %17, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %0, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  %11 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  %12 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %13 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %0, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::map.136"* %0 to i64*
  %15 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map.136", %"class.std::__1::map.136"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %18

17:                                               ; preds = %75, %3
  ret void

18:                                               ; preds = %8, %75
  %19 = phi %"class.std::__1::__tree_end_node"* [ %1, %8 ], [ %76, %75 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to i32*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %5, align 8
  %22 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_SF_EElEERPNS_15__tree_end_nodeISH_EESI_RKT_(%"class.std::__1::__tree.137"* %9, %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %5, i32* dereferenceable(4) %21) #14
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %26, label %47

26:                                               ; preds = %18
  %27 = call i8* @_Znwm(i64 48) #15, !noalias !63
  %28 = getelementptr inbounds i8, i8* %27, i64 32
  %29 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #14, !noalias !63
  %30 = load i64, i64* %12, align 8
  %31 = bitcast i8* %27 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds i8, i8* %27, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #14
  %33 = bitcast i8* %32 to i64*
  store i64 %30, i64* %33, align 8
  %34 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8**
  store i8* %27, i8** %34, align 8
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %26
  %40 = ptrtoint %"class.std::__1::__tree_node_base"* %37 to i64
  store i64 %40, i64* %14, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  br label %42

42:                                               ; preds = %39, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %31, %26 ], [ %41, %39 ]
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %44, %"class.std::__1::__tree_node_base"* %43) #14
  %45 = load i64, i64* %16, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %16, align 8
  br label %47

47:                                               ; preds = %18, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %52
  br i1 %58, label %75, label %66

59:                                               ; preds = %47, %59
  %60 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %49, %47 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0
  br label %75

66:                                               ; preds = %51, %66
  %67 = phi %"class.std::__1::__tree_end_node"** [ %70, %66 ], [ %54, %51 ]
  %68 = bitcast %"class.std::__1::__tree_end_node"** %67 to %"class.std::__1::__tree_node_base"**
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %69
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %51, %64
  %76 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %55, %51 ], [ %71, %66 ]
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %76, %2
  br i1 %77, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_SF_EElEERPNS_15__tree_end_nodeISH_EESI_RKT_(%"class.std::__1::__tree.137"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to i32*
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %11, align 4
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %15, label %90

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  br i1 %18, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %1, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %4, align 4
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %15, %39
  %48 = phi i64 [ %41, %39 ], [ %6, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %48, i64* %53, align 8
  %54 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %170

56:                                               ; preds = %39
  %57 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node"* %58, null
  br i1 %59, label %88, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %84, %60
  %63 = phi %"class.std::__1::__tree_node"* [ %87, %84 ], [ %58, %60 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %86, %84 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp ult i32 %45, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

74:                                               ; preds = %62
  %75 = icmp ult i32 %66, %45
  br i1 %75, label %76, label %82

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

84:                                               ; preds = %76, %68
  %85 = phi %"class.std::__1::__tree_node_base"* [ %70, %68 ], [ %78, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %77, %76 ]
  %87 = bitcast %"class.std::__1::__tree_node_base"* %85 to %"class.std::__1::__tree_node"*
  br label %62

88:                                               ; preds = %56
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

90:                                               ; preds = %9
  %91 = icmp ult i32 %13, %12
  br i1 %91, label %92, label %167

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %109, %96
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %7
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 4
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = icmp ult i32 %12, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %120, %123
  br i1 %95, label %129, label %131

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %130, align 8
  br label %170

131:                                              ; preds = %128
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %2, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  br label %170

133:                                              ; preds = %123
  %134 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %135 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.std::__1::__tree.137", %"class.std::__1::__tree.137"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %139

139:                                              ; preds = %161, %137
  %140 = phi %"class.std::__1::__tree_node"* [ %164, %161 ], [ %135, %137 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %163, %161 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp ult i32 %12, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %161

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %150, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

151:                                              ; preds = %139
  %152 = icmp ult i32 %143, %12
  br i1 %152, label %153, label %159

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %160, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

161:                                              ; preds = %153, %145
  %162 = phi %"class.std::__1::__tree_node_base"* [ %147, %145 ], [ %155, %153 ]
  %163 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %154, %153 ]
  %164 = bitcast %"class.std::__1::__tree_node_base"* %162 to %"class.std::__1::__tree_node"*
  br label %139

165:                                              ; preds = %133
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

167:                                              ; preds = %90
  %168 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %168, align 8
  %169 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %169, align 8
  br label %170

170:                                              ; preds = %129, %131, %149, %157, %159, %165, %50, %52, %72, %80, %82, %88, %167
  %171 = phi %"class.std::__1::__tree_node_base"** [ %3, %167 ], [ %51, %50 ], [ %55, %52 ], [ %69, %72 ], [ %77, %80 ], [ %64, %82 ], [ %89, %88 ], [ %93, %129 ], [ %132, %131 ], [ %146, %149 ], [ %154, %157 ], [ %141, %159 ], [ %166, %165 ]
  ret %"class.std::__1::__tree_node_base"** %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"*, %"class.std::__1::__tree_node.232"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.232"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.232"* %1 to %"class.std::__1::__tree_node.232"**
  %6 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"* %0, %"class.std::__1::__tree_node.232"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.232"**
  %9 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"* %0, %"class.std::__1::__tree_node.232"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.232"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"*, %"class.std::__1::__tree_node.235"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.235"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.235"* %1 to %"class.std::__1::__tree_node.235"**
  %6 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* %0, %"class.std::__1::__tree_node.235"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.235", %"class.std::__1::__tree_node.235"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.235"**
  %9 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* %0, %"class.std::__1::__tree_node.235"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.235"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* readnone, %"class.std::__1::__tree_node.237"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.237"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.237"* %1 to %"class.std::__1::__tree_node.237"**
  %6 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %0, %"class.std::__1::__tree_node.237"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.237"**
  %9 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %0, %"class.std::__1::__tree_node.237"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.237"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils31declareSubpassInputVariableImplEPKNS_13TIntermSymbolEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*, %"class.sh::TIntermSymbol"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_stringstream", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.sh::ImmutableString", align 8
  %7 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #14
  %8 = extractvalue { i8*, i64 } %7, 0
  %9 = icmp eq i8* %8, null
  %10 = select i1 %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %8
  %11 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #14
  br i1 %11, label %23, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0
  %14 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %15 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %15, i64 31
  %17 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %16, align 8
  %18 = tail call dereferenceable(184) %"class.sh::TType"* %17(%"class.sh::TIntermTyped"* %13) #14
  %19 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %476 [
    i32 1, label %23
    i32 3, label %21
    i32 4, label %22
  ]

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  br label %23

23:                                               ; preds = %3, %22, %21, %12
  %24 = phi i32 [ 84, %12 ], [ 85, %21 ], [ 86, %22 ], [ 84, %3 ]
  %25 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %26 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %25, i64 184) #14
  %27 = bitcast i8* %26 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %27, i32 %24, i32 0, i32 6, i8 zeroext 1, i8 zeroext 1) #14
  %28 = getelementptr inbounds i8, i8* %26, i64 104
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %26, i64 108
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  store i32 %2, i32* %29, align 4
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %30, align 4
  %34 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %35 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %34, i64 40) #14
  %36 = bitcast i8* %35 to %"class.sh::TVariable"*
  %37 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 2
  %38 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %39 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %40 = bitcast %"class.std::__1::basic_stringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %40) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 280, i1 false) #14
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %4) #14
  %41 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_ostream.base"* %41 to %"class.std::__1::basic_ostream"*
  %43 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk20kInputAttachmentNameE, i64 0, i64 0)) #14
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2sh2vk20kInputAttachmentNameE, i64 0, i64 0), i64 %43) #14
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %44, i32 %2) #14
  %46 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #14
  %47 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_stringbuf"* %47) #14
  %48 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %50 to i64
  %57 = select i1 %51, i8* %53, i8* %46
  %58 = select i1 %51, i64 %55, i64 %56
  %59 = add i64 %58, 1
  %60 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %61 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %60, i64 %59) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %57, i64 %59, i1 false) #14
  %62 = load i8, i8* %49, align 1
  %63 = icmp slt i8 %62, 0
  %64 = load i64, i64* %54, align 8
  %65 = zext i8 %62 to i64
  %66 = select i1 %63, i64 %64, i64 %65
  br i1 %63, label %67, label %69

67:                                               ; preds = %23
  %68 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %67, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #14
  %70 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %71 = bitcast %"class.std::__1::basic_stringstream"* %4 to i64*
  store i64 %70, i64* %71, align 8
  %72 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr i8, i8* %73, i64 -24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %40, i64 %76
  %78 = bitcast i8* %77 to i64*
  store i64 %72, i64* %78, align 8
  %79 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %80 = bitcast %"class.std::__1::basic_ostream.base"* %41 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %47, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %69
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %69, %87
  %91 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %47, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %91) #14
  %92 = bitcast %"class.std::__1::basic_stringstream"* %4 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %92, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #14
  %93 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 2
  %94 = bitcast %"class.std::__1::basic_ios.base"* %93 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %94) #14
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %40) #14
  %95 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  store i8* %61, i8** %95, align 8
  %96 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 1
  store i64 %66, i64* %96, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %36, %"class.sh::TSymbolTable"* %38, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %6, %"class.sh::TType"* %27, i8 zeroext 2, i8 zeroext 0) #14
  %97 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11
  %98 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node.232"**
  %100 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node.232"* %100, null
  br i1 %101, label %130, label %102

102:                                              ; preds = %90
  %103 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %126, %102
  %105 = phi %"class.std::__1::__tree_node.232"* [ %129, %126 ], [ %100, %102 ]
  %106 = phi %"class.std::__1::__tree_node_base"** [ %128, %126 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %105, i64 0, i32 1, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp ugt i32 %108, %2
  br i1 %109, label %110, label %116

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %105, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %126

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %105, i64 0, i32 0, i32 0
  br label %132

116:                                              ; preds = %104
  %117 = icmp ult i32 %108, %2
  br i1 %117, label %118, label %124

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %105, i64 0, i32 0, i32 1
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %105, i64 0, i32 0, i32 0
  br label %132

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %105, i64 0, i32 0, i32 0
  br label %132

126:                                              ; preds = %118, %110
  %127 = phi %"class.std::__1::__tree_node_base"* [ %112, %110 ], [ %120, %118 ]
  %128 = phi %"class.std::__1::__tree_node_base"** [ %111, %110 ], [ %119, %118 ]
  %129 = bitcast %"class.std::__1::__tree_node_base"* %127 to %"class.std::__1::__tree_node.232"*
  br label %104

130:                                              ; preds = %90
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 0, i32 0
  br label %132

132:                                              ; preds = %130, %124, %122, %114
  %133 = phi %"class.std::__1::__tree_end_node"* [ %98, %130 ], [ %115, %114 ], [ %123, %122 ], [ %125, %124 ]
  %134 = phi %"class.std::__1::__tree_node_base"** [ %131, %130 ], [ %111, %114 ], [ %119, %122 ], [ %106, %124 ]
  %135 = bitcast %"class.std::__1::__tree_node_base"** %134 to %"class.std::__1::__tree_node.232"**
  %136 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node.232"* %136, null
  br i1 %137, label %138, label %165

138:                                              ; preds = %132
  %139 = call i8* @_Znwm(i64 48) #15, !noalias !66
  %140 = getelementptr inbounds i8, i8* %139, i64 32
  %141 = bitcast i8* %140 to i32*
  store i32 %2, i32* %141, align 8, !noalias !66
  %142 = getelementptr inbounds i8, i8* %139, i64 40
  %143 = bitcast i8* %142 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %143, align 8, !noalias !66
  %144 = bitcast i8* %139 to %"class.std::__1::__tree_node.232"*
  %145 = bitcast i8* %139 to %"class.std::__1::__tree_node_base"*
  %146 = getelementptr inbounds i8, i8* %139, i64 16
  %147 = bitcast i8* %146 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %133, %"class.std::__1::__tree_end_node"** %147, align 8
  %148 = bitcast %"class.std::__1::__tree_node_base"** %134 to i8**
  store i8* %139, i8** %148, align 8
  %149 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %97, i64 0, i32 0, i32 0
  %150 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %150, i64 0, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %158, label %154

154:                                              ; preds = %138
  %155 = ptrtoint %"class.std::__1::__tree_node_base"* %152 to i64
  %156 = bitcast %"class.std::__1::map.186"* %97 to i64*
  store i64 %155, i64* %156, align 8
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  br label %158

158:                                              ; preds = %154, %138
  %159 = phi %"class.std::__1::__tree_node_base"* [ %145, %138 ], [ %157, %154 ]
  %160 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %161, %"class.std::__1::__tree_node_base"* %159) #14
  %162 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %163, 1
  store i64 %164, i64* %162, align 8
  br label %165

165:                                              ; preds = %132, %158
  %166 = phi %"class.std::__1::__tree_node.232"* [ %144, %158 ], [ %136, %132 ]
  %167 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %166, i64 0, i32 1, i32 0, i32 1
  %168 = bitcast %"class.sh::TVariable"** %167 to i8**
  store i8* %35, i8** %168, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  %169 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %170 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %169, i64 32) #14
  %171 = bitcast i8* %170 to %"class.sh::TIntermSymbol"*
  %172 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %99, align 8
  %173 = icmp eq %"class.std::__1::__tree_node.232"* %172, null
  br i1 %173, label %202, label %174

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %176

176:                                              ; preds = %198, %174
  %177 = phi %"class.std::__1::__tree_node.232"* [ %201, %198 ], [ %172, %174 ]
  %178 = phi %"class.std::__1::__tree_node_base"** [ %200, %198 ], [ %175, %174 ]
  %179 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %177, i64 0, i32 1, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp ugt i32 %180, %2
  br i1 %181, label %182, label %188

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %177, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, null
  br i1 %185, label %186, label %198

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %177, i64 0, i32 0, i32 0
  br label %204

188:                                              ; preds = %176
  %189 = icmp ult i32 %180, %2
  br i1 %189, label %190, label %196

190:                                              ; preds = %188
  %191 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %177, i64 0, i32 0, i32 1
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node_base"* %192, null
  br i1 %193, label %194, label %198

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %177, i64 0, i32 0, i32 0
  br label %204

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %177, i64 0, i32 0, i32 0
  br label %204

198:                                              ; preds = %190, %182
  %199 = phi %"class.std::__1::__tree_node_base"* [ %184, %182 ], [ %192, %190 ]
  %200 = phi %"class.std::__1::__tree_node_base"** [ %183, %182 ], [ %191, %190 ]
  %201 = bitcast %"class.std::__1::__tree_node_base"* %199 to %"class.std::__1::__tree_node.232"*
  br label %176

202:                                              ; preds = %165
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 0, i32 0
  br label %204

204:                                              ; preds = %202, %196, %194, %186
  %205 = phi %"class.std::__1::__tree_end_node"* [ %98, %202 ], [ %187, %186 ], [ %195, %194 ], [ %197, %196 ]
  %206 = phi %"class.std::__1::__tree_node_base"** [ %203, %202 ], [ %183, %186 ], [ %191, %194 ], [ %178, %196 ]
  %207 = bitcast %"class.std::__1::__tree_node_base"** %206 to %"class.std::__1::__tree_node.232"**
  %208 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node.232"* %208, null
  br i1 %209, label %210, label %237

210:                                              ; preds = %204
  %211 = call i8* @_Znwm(i64 48) #15, !noalias !69
  %212 = getelementptr inbounds i8, i8* %211, i64 32
  %213 = bitcast i8* %212 to i32*
  store i32 %2, i32* %213, align 8, !noalias !69
  %214 = getelementptr inbounds i8, i8* %211, i64 40
  %215 = bitcast i8* %214 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %215, align 8, !noalias !69
  %216 = bitcast i8* %211 to %"class.std::__1::__tree_node.232"*
  %217 = bitcast i8* %211 to %"class.std::__1::__tree_node_base"*
  %218 = getelementptr inbounds i8, i8* %211, i64 16
  %219 = bitcast i8* %218 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %205, %"class.std::__1::__tree_end_node"** %219, align 8
  %220 = bitcast %"class.std::__1::__tree_node_base"** %206 to i8**
  store i8* %211, i8** %220, align 8
  %221 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %97, i64 0, i32 0, i32 0
  %222 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %230, label %226

226:                                              ; preds = %210
  %227 = ptrtoint %"class.std::__1::__tree_node_base"* %224 to i64
  %228 = bitcast %"class.std::__1::map.186"* %97 to i64*
  store i64 %227, i64* %228, align 8
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  br label %230

230:                                              ; preds = %226, %210
  %231 = phi %"class.std::__1::__tree_node_base"* [ %217, %210 ], [ %229, %226 ]
  %232 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %233, %"class.std::__1::__tree_node_base"* %231) #14
  %234 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %235 = load i64, i64* %234, align 8
  %236 = add i64 %235, 1
  store i64 %236, i64* %234, align 8
  br label %237

237:                                              ; preds = %204, %230
  %238 = phi %"class.std::__1::__tree_node.232"* [ %216, %230 ], [ %208, %204 ]
  %239 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %238, i64 0, i32 1, i32 0, i32 1
  %240 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %239, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %171, %"class.sh::TVariable"* %240) #14
  %241 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %242 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %241, i64 56) #14
  %243 = bitcast i8* %242 to %"class.sh::TIntermDeclaration"*
  %244 = bitcast i8* %242 to i32 (...)***
  %245 = getelementptr inbounds i8, i8* %242, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %245, i8 0, i64 16, i1 false) #14
  %246 = getelementptr inbounds i8, i8* %242, i64 24
  %247 = bitcast i8* %246 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %244, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  %248 = getelementptr inbounds i8, i8* %242, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 24, i1 false) #14
  %249 = bitcast i8* %170 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %243, %"class.sh::TIntermTyped"* %249) #14
  %250 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 8, i32 0
  %251 = ptrtoint i8* %242 to i64
  %252 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %253 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %252, align 8
  %254 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %255 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %254, align 8
  %256 = icmp ult %"class.sh::TIntermNode"** %253, %255
  %257 = ptrtoint %"class.sh::TIntermNode"** %255 to i64
  br i1 %256, label %258, label %263

258:                                              ; preds = %237
  %259 = bitcast %"class.sh::TIntermNode"** %253 to i64*
  store i64 %251, i64* %259, align 8
  %260 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %253, i64 1
  %261 = ptrtoint %"class.sh::TIntermNode"** %260 to i64
  %262 = bitcast %"class.sh::TIntermNode"*** %252 to i64*
  store i64 %261, i64* %262, align 8
  br label %476

263:                                              ; preds = %237
  %264 = ptrtoint %"class.sh::TIntermNode"** %253 to i64
  %265 = bitcast %"class.sh::TIntermNode"*** %252 to i64*
  %266 = bitcast %"class.std::__1::vector.32"* %250 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = sub i64 %264, %267
  %269 = ashr exact i64 %268, 3
  %270 = add nsw i64 %269, 1
  %271 = icmp ugt i64 %270, 2305843009213693951
  br i1 %271, label %272, label %274

272:                                              ; preds = %263
  %273 = bitcast %"class.std::__1::vector.32"* %250 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %273) #16
  unreachable

274:                                              ; preds = %263
  %275 = bitcast %"class.sh::TIntermNode"*** %254 to i64*
  %276 = sub i64 %257, %267
  %277 = ashr exact i64 %276, 3
  %278 = icmp ult i64 %277, 1152921504606846975
  br i1 %278, label %279, label %284

279:                                              ; preds = %274
  %280 = ashr exact i64 %276, 2
  %281 = icmp ult i64 %280, %270
  %282 = select i1 %281, i64 %270, i64 %280
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %290, label %284

284:                                              ; preds = %279, %274
  %285 = phi i64 [ %282, %279 ], [ 2305843009213693951, %274 ]
  %286 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %287 = shl i64 %285, 3
  %288 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %286, i64 %287) #14
  %289 = bitcast i8* %288 to %"class.sh::TIntermNode"**
  br label %290

290:                                              ; preds = %284, %279
  %291 = phi i64 [ %285, %284 ], [ 0, %279 ]
  %292 = phi %"class.sh::TIntermNode"** [ %289, %284 ], [ null, %279 ]
  %293 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %292, i64 %269
  %294 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %292, i64 %291
  %295 = ptrtoint %"class.sh::TIntermNode"** %294 to i64
  %296 = bitcast %"class.sh::TIntermNode"** %293 to i64*
  store i64 %251, i64* %296, align 8
  %297 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %293, i64 1
  %298 = ptrtoint %"class.sh::TIntermNode"** %297 to i64
  %299 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %250, i64 0, i32 0, i32 0
  %300 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %299, align 8
  %301 = ptrtoint %"class.sh::TIntermNode"** %300 to i64
  %302 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %252, align 8
  %303 = icmp eq %"class.sh::TIntermNode"** %302, %300
  br i1 %303, label %473, label %304

304:                                              ; preds = %290
  %305 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %302, i64 -1
  %306 = ptrtoint %"class.sh::TIntermNode"** %305 to i64
  %307 = sub i64 %306, %301
  %308 = lshr i64 %307, 3
  %309 = add nuw nsw i64 %308, 1
  %310 = icmp ult i64 %309, 4
  br i1 %310, label %403, label %311

311:                                              ; preds = %304
  %312 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %302, i64 -1
  %313 = ptrtoint %"class.sh::TIntermNode"** %312 to i64
  %314 = sub i64 %313, %301
  %315 = lshr i64 %314, 3
  %316 = xor i64 %315, -1
  %317 = add nsw i64 %269, %316
  %318 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %292, i64 %317
  %319 = xor i64 %315, -1
  %320 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %302, i64 %319
  %321 = icmp ult %"class.sh::TIntermNode"** %318, %302
  %322 = icmp ult %"class.sh::TIntermNode"** %320, %293
  %323 = and i1 %321, %322
  br i1 %323, label %403, label %324

324:                                              ; preds = %311
  %325 = and i64 %309, 4611686018427387900
  %326 = sub nsw i64 0, %325
  %327 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %293, i64 %326
  %328 = sub nsw i64 0, %325
  %329 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %302, i64 %328
  %330 = add nsw i64 %325, -4
  %331 = lshr exact i64 %330, 2
  %332 = add nuw nsw i64 %331, 1
  %333 = and i64 %332, 1
  %334 = icmp eq i64 %330, 0
  br i1 %334, label %381, label %335

335:                                              ; preds = %324
  %336 = sub nuw nsw i64 %332, %333
  %337 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %293, i64 -1
  %338 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %302, i64 -1
  %339 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %293, i64 -1
  %340 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %302, i64 -1
  br label %341

341:                                              ; preds = %341, %335
  %342 = phi i64 [ 0, %335 ], [ %376, %341 ]
  %343 = phi i64 [ %336, %335 ], [ %377, %341 ]
  %344 = sub i64 0, %342
  %345 = sub i64 0, %342
  %346 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %337, i64 %344
  %347 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %338, i64 %345
  %348 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %347, i64 -1
  %349 = bitcast %"class.sh::TIntermNode"** %348 to <2 x i64>*
  %350 = load <2 x i64>, <2 x i64>* %349, align 8, !alias.scope !72
  %351 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %347, i64 -2
  %352 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %351, i64 -1
  %353 = bitcast %"class.sh::TIntermNode"** %352 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 8, !alias.scope !72
  %355 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %346, i64 -1
  %356 = bitcast %"class.sh::TIntermNode"** %355 to <2 x i64>*
  store <2 x i64> %350, <2 x i64>* %356, align 8, !alias.scope !75, !noalias !72
  %357 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %346, i64 -2
  %358 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %357, i64 -1
  %359 = bitcast %"class.sh::TIntermNode"** %358 to <2 x i64>*
  store <2 x i64> %354, <2 x i64>* %359, align 8, !alias.scope !75, !noalias !72
  %360 = sub nuw nsw i64 -4, %342
  %361 = sub nuw nsw i64 -4, %342
  %362 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %339, i64 %360
  %363 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %340, i64 %361
  %364 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %363, i64 -1
  %365 = bitcast %"class.sh::TIntermNode"** %364 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 8, !alias.scope !72
  %367 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %363, i64 -2
  %368 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 -1
  %369 = bitcast %"class.sh::TIntermNode"** %368 to <2 x i64>*
  %370 = load <2 x i64>, <2 x i64>* %369, align 8, !alias.scope !72
  %371 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %362, i64 -1
  %372 = bitcast %"class.sh::TIntermNode"** %371 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %372, align 8, !alias.scope !75, !noalias !72
  %373 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %362, i64 -2
  %374 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %373, i64 -1
  %375 = bitcast %"class.sh::TIntermNode"** %374 to <2 x i64>*
  store <2 x i64> %370, <2 x i64>* %375, align 8, !alias.scope !75, !noalias !72
  %376 = add i64 %342, 8
  %377 = add i64 %343, -2
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %341, !llvm.loop !77

379:                                              ; preds = %341
  %380 = sub nuw nsw i64 -8, %342
  br label %381

381:                                              ; preds = %379, %324
  %382 = phi i64 [ 0, %324 ], [ %380, %379 ]
  %383 = icmp eq i64 %333, 0
  br i1 %383, label %401, label %384

384:                                              ; preds = %381
  %385 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %293, i64 -1
  %386 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %302, i64 -1
  %387 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %385, i64 %382
  %388 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %386, i64 %382
  %389 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %388, i64 -1
  %390 = bitcast %"class.sh::TIntermNode"** %389 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !alias.scope !72
  %392 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %388, i64 -2
  %393 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %392, i64 -1
  %394 = bitcast %"class.sh::TIntermNode"** %393 to <2 x i64>*
  %395 = load <2 x i64>, <2 x i64>* %394, align 8, !alias.scope !72
  %396 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %387, i64 -1
  %397 = bitcast %"class.sh::TIntermNode"** %396 to <2 x i64>*
  store <2 x i64> %391, <2 x i64>* %397, align 8, !alias.scope !75, !noalias !72
  %398 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %387, i64 -2
  %399 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %398, i64 -1
  %400 = bitcast %"class.sh::TIntermNode"** %399 to <2 x i64>*
  store <2 x i64> %395, <2 x i64>* %400, align 8, !alias.scope !75, !noalias !72
  br label %401

401:                                              ; preds = %381, %384
  %402 = icmp eq i64 %309, %325
  br i1 %402, label %473, label %403

403:                                              ; preds = %401, %311, %304
  %404 = phi %"class.sh::TIntermNode"** [ %293, %311 ], [ %293, %304 ], [ %327, %401 ]
  %405 = phi %"class.sh::TIntermNode"** [ %302, %311 ], [ %302, %304 ], [ %329, %401 ]
  %406 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %405, i64 -1
  %407 = ptrtoint %"class.sh::TIntermNode"** %406 to i64
  %408 = sub i64 %407, %301
  %409 = lshr i64 %408, 3
  %410 = add nuw nsw i64 %409, 1
  %411 = and i64 %410, 7
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %424, label %413

413:                                              ; preds = %403, %413
  %414 = phi %"class.sh::TIntermNode"** [ %417, %413 ], [ %404, %403 ]
  %415 = phi %"class.sh::TIntermNode"** [ %418, %413 ], [ %405, %403 ]
  %416 = phi i64 [ %422, %413 ], [ %411, %403 ]
  %417 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %414, i64 -1
  %418 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %415, i64 -1
  %419 = bitcast %"class.sh::TIntermNode"** %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast %"class.sh::TIntermNode"** %417 to i64*
  store i64 %420, i64* %421, align 8
  %422 = add i64 %416, -1
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %424, label %413, !llvm.loop !78

424:                                              ; preds = %413, %403
  %425 = phi %"class.sh::TIntermNode"** [ undef, %403 ], [ %417, %413 ]
  %426 = phi %"class.sh::TIntermNode"** [ %404, %403 ], [ %417, %413 ]
  %427 = phi %"class.sh::TIntermNode"** [ %405, %403 ], [ %418, %413 ]
  %428 = icmp ult i64 %408, 56
  br i1 %428, label %473, label %429

429:                                              ; preds = %424, %429
  %430 = phi %"class.sh::TIntermNode"** [ %467, %429 ], [ %426, %424 ]
  %431 = phi %"class.sh::TIntermNode"** [ %468, %429 ], [ %427, %424 ]
  %432 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -1
  %433 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -1
  %434 = bitcast %"class.sh::TIntermNode"** %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = bitcast %"class.sh::TIntermNode"** %432 to i64*
  store i64 %435, i64* %436, align 8
  %437 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -2
  %438 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -2
  %439 = bitcast %"class.sh::TIntermNode"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = bitcast %"class.sh::TIntermNode"** %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -3
  %443 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -3
  %444 = bitcast %"class.sh::TIntermNode"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.sh::TIntermNode"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -4
  %448 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -4
  %449 = bitcast %"class.sh::TIntermNode"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.sh::TIntermNode"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -5
  %453 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -5
  %454 = bitcast %"class.sh::TIntermNode"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.sh::TIntermNode"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -6
  %458 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -6
  %459 = bitcast %"class.sh::TIntermNode"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.sh::TIntermNode"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -7
  %463 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -7
  %464 = bitcast %"class.sh::TIntermNode"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.sh::TIntermNode"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %430, i64 -8
  %468 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %431, i64 -8
  %469 = bitcast %"class.sh::TIntermNode"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.sh::TIntermNode"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = icmp eq %"class.sh::TIntermNode"** %468, %300
  br i1 %472, label %473, label %429, !llvm.loop !79

473:                                              ; preds = %424, %429, %401, %290
  %474 = phi %"class.sh::TIntermNode"** [ %293, %290 ], [ %327, %401 ], [ %425, %424 ], [ %467, %429 ]
  %475 = ptrtoint %"class.sh::TIntermNode"** %474 to i64
  store i64 %475, i64* %266, align 8
  store i64 %298, i64* %265, align 8
  store i64 %295, i64* %275, align 8
  br label %476

476:                                              ; preds = %473, %258, %12
  %477 = phi i1 [ false, %12 ], [ true, %258 ], [ true, %473 ]
  ret i1 %477
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils25addInputAttachmentUniformEj(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.sh::ShaderVariable", align 8
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node.232"**
  %7 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node.232"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node.232"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult i32 %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.232"*
  br label %11

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.232"**
  %43 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.232"* %43, null
  br i1 %44, label %45, label %72

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 48) #15, !noalias !80
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %1, i32* %48, align 8, !noalias !80
  %49 = getelementptr inbounds i8, i8* %46, i64 40
  %50 = bitcast i8* %49 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %50, align 8, !noalias !80
  %51 = bitcast i8* %46 to %"class.std::__1::__tree_node.232"*
  %52 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %46, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %4, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %45
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::map.186"* %4 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %65

65:                                               ; preds = %61, %45
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %45 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #14
  %69 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %39, %65
  %73 = phi %"class.std::__1::__tree_node.232"* [ %51, %65 ], [ %43, %39 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %73, i64 0, i32 1, i32 0, i32 1
  %75 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %74, align 8
  %76 = bitcast %"struct.sh::ShaderVariable"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %76) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 208, i1 false)
  call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* nonnull %3) #14
  %77 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 6
  store i8 1, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 5
  store i8 1, i8* %78, align 8
  %79 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 2
  %80 = bitcast %"class.sh::TVariable"* %75 to %"class.sh::TSymbol"*
  %81 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %80) #14
  %82 = extractvalue { i8*, i64 } %81, 0
  %83 = icmp eq i8* %82, null
  %84 = select i1 %83, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %82
  %85 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %80) #14
  %86 = extractvalue { i8*, i64 } %85, 1
  %87 = call i1 @llvm.is.constant.i64(i64 %86) #14
  %88 = icmp ult i64 %86, 23
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %108

90:                                               ; preds = %72
  %91 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %86, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  br label %102

99:                                               ; preds = %90
  %100 = trunc i64 %86 to i8
  store i8 %100, i8* %92, align 1
  %101 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  br label %102

102:                                              ; preds = %99, %95
  %103 = phi i8* [ %98, %95 ], [ %101, %99 ]
  %104 = icmp eq i64 %86, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %84, i64 %86, i1 false) #14
  br label %106

106:                                              ; preds = %105, %102
  %107 = getelementptr inbounds i8, i8* %103, i64 %86
  store i8 0, i8* %107, align 1
  br label %111

108:                                              ; preds = %72
  %109 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %79, i8* %84, i64 %86) #14
  %110 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %111

111:                                              ; preds = %106, %108
  %112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %91, %106 ], [ %110, %108 ]
  %113 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 3
  %114 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %117, label %131, label %121

121:                                              ; preds = %111
  br i1 %120, label %125, label %122

122:                                              ; preds = %121
  %123 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  %124 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 24, i1 false) #14
  br label %141

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %113, i8* %127, i64 %129) #14
  br label %141

131:                                              ; preds = %111
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %137 = zext i8 %119 to i64
  %138 = select i1 %120, i8* %133, i8* %136
  %139 = select i1 %120, i64 %135, i64 %137
  %140 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %113, i8* %138, i64 %139) #14
  br label %141

141:                                              ; preds = %122, %125, %131
  %142 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 18
  store i8 1, i8* %142, align 2
  %143 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %75, i64 0, i32 1
  %144 = load %"class.sh::TType"*, %"class.sh::TType"** %143, align 8
  %145 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %144, i64 0, i32 7, i32 21
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %3, i64 0, i32 11
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 4
  %149 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 0, i32 0, i32 1
  %151 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %149, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %152, align 8
  %154 = icmp eq %"struct.sh::ShaderVariable"* %151, %153
  br i1 %154, label %159, label %155

155:                                              ; preds = %141
  call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %151, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %3) #14
  %156 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %151, i64 1
  %157 = ptrtoint %"struct.sh::ShaderVariable"* %156 to i64
  %158 = bitcast %"struct.sh::ShaderVariable"** %150 to i64*
  store i64 %157, i64* %158, align 8
  br label %160

159:                                              ; preds = %141
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.1"* %149, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %3) #14
  br label %160

160:                                              ; preds = %155, %159
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %76) #14
  ret void
}

declare void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* noalias sret) local_unnamed_addr #0 comdat {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 272, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #14
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %14, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %5, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #14
  %54 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %57 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #14
  store i32 24, i32* %56, align 8
  %58 = load i8*, i8** %16, align 8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = tail call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #14
  %64 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %66, align 8, !alias.scope !83
  %67 = bitcast i8* %62 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %67) #14
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %67, %"class.std::__1::locale"* dereferenceable(8) %63) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #14
  %68 = getelementptr inbounds i8, i8* %62, i64 40
  %69 = bitcast i8* %68 to %"class.std::__1::basic_streambuf"**
  %70 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %69, align 8, !noalias !83
  %71 = icmp eq %"class.std::__1::basic_streambuf"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %1
  %73 = bitcast %"class.std::__1::basic_streambuf"* %70 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %74 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %73, align 8, !noalias !86
  %75 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %74, i64 2
  %76 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %75, align 8, !noalias !86
  call void %76(%"class.std::__1::basic_streambuf"* nonnull %70, %"class.std::__1::locale"* dereferenceable(8) %63) #14, !noalias !86
  %77 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %3, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %77, align 8, !alias.scope !86, !noalias !83
  %78 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %70, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale"* dereferenceable(8) %78) #14
  %79 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %78, %"class.std::__1::locale"* dereferenceable(8) %63) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #14
  br label %80

80:                                               ; preds = %1, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !21
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #2

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #2

declare { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #13

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.1"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.sh::ShaderVariable"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 208
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 88686269585142075
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.sh::ShaderVariable"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 208
  %20 = icmp ult i64 %19, 44343134792571037
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 88686269585142075, %14 ]
  %28 = mul i64 %27, 208
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.sh::ShaderVariable"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.sh::ShaderVariable"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %33, i64 %32
  %36 = ptrtoint %"struct.sh::ShaderVariable"* %35 to i64
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %34, %"struct.sh::ShaderVariable"* dereferenceable(208) %1) #14
  %37 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %34, i64 1
  %38 = ptrtoint %"struct.sh::ShaderVariable"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %39, align 8
  %41 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %3, align 8
  %42 = icmp eq %"struct.sh::ShaderVariable"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.sh::ShaderVariable"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.sh::ShaderVariable"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.sh::ShaderVariable"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %47, i64 -1
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %48, %"struct.sh::ShaderVariable"* dereferenceable(208) %49) #14
  %50 = icmp eq %"struct.sh::ShaderVariable"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.sh::ShaderVariable"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.sh::ShaderVariable"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.sh::ShaderVariable"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.sh::ShaderVariable"*
  %60 = icmp eq %"struct.sh::ShaderVariable"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.sh::ShaderVariable"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %62, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %63) #14
  %64 = icmp eq %"struct.sh::ShaderVariable"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) unnamed_addr #2

declare void @_ZN2sh12TIntermBlock15insertStatementEmPNS_11TIntermNodeE(%"class.sh::TIntermBlock"*, i64, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils27loadInputAttachmentDataImplEmjPKNS_9TVariableE(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*, i64, i32, %"class.sh::TVariable"*) unnamed_addr #0 align 2 {
  %5 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %6 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %5, i64 32) #14
  %7 = bitcast i8* %6 to %"class.sh::TIntermSymbol"*
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %7, %"class.sh::TVariable"* %3) #14
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %119, label %9

9:                                                ; preds = %4
  %10 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %11 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %10, i64 64) #14
  %12 = bitcast i8* %11 to %"class.sh::TIntermBlock"*
  %13 = bitcast i8* %11 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #14
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false) #14
  %18 = bitcast i8* %6 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.232"**
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %19, i64 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::map.186"* %19 to i64*
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  br label %29

27:                                               ; preds = %102
  %28 = bitcast i8* %11 to %"class.sh::TIntermNode"*
  br label %234

29:                                               ; preds = %9, %102
  %30 = phi i32 [ 0, %9 ], [ %116, %102 ]
  %31 = add i32 %30, %2
  %32 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %33 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %32, i64 240) #14
  %34 = bitcast i8* %33 to %"class.sh::TIntermBinary"*
  %35 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %18, align 8
  %36 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %35, i64 23
  %37 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %36, align 8
  %38 = tail call %"class.sh::TIntermTyped"* %37(%"class.sh::TIntermSymbol"* %7) #14
  %39 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %30) #14
  %40 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %39, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %34, i8 zeroext 44, %"class.sh::TIntermTyped"* %38, %"class.sh::TIntermTyped"* %40) #14
  %41 = bitcast i8* %33 to %"class.sh::TIntermTyped"*
  %42 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %43 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %42, i64 32) #14
  %44 = bitcast i8* %43 to %"class.sh::TIntermSymbol"*
  %45 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %21, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.232"* %45, null
  br i1 %46, label %73, label %47

47:                                               ; preds = %29, %69
  %48 = phi %"class.std::__1::__tree_node.232"* [ %72, %69 ], [ %45, %29 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %71, %69 ], [ %22, %29 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %48, i64 0, i32 1, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %31, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %48, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %48, i64 0, i32 0, i32 0
  br label %73

59:                                               ; preds = %47
  %60 = icmp ult i32 %51, %31
  br i1 %60, label %61, label %67

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %48, i64 0, i32 0, i32 1
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %48, i64 0, i32 0, i32 0
  br label %73

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %48, i64 0, i32 0, i32 0
  br label %73

69:                                               ; preds = %61, %53
  %70 = phi %"class.std::__1::__tree_node_base"* [ %55, %53 ], [ %63, %61 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %54, %53 ], [ %62, %61 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"* %70 to %"class.std::__1::__tree_node.232"*
  br label %47

73:                                               ; preds = %29, %67, %65, %57
  %74 = phi %"class.std::__1::__tree_end_node"* [ %58, %57 ], [ %66, %65 ], [ %68, %67 ], [ %20, %29 ]
  %75 = phi %"class.std::__1::__tree_node_base"** [ %54, %57 ], [ %62, %65 ], [ %49, %67 ], [ %23, %29 ]
  %76 = bitcast %"class.std::__1::__tree_node_base"** %75 to %"class.std::__1::__tree_node.232"**
  %77 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node.232"* %77, null
  br i1 %78, label %79, label %102

79:                                               ; preds = %73
  %80 = tail call i8* @_Znwm(i64 48) #15, !noalias !89
  %81 = getelementptr inbounds i8, i8* %80, i64 32
  %82 = bitcast i8* %81 to i32*
  store i32 %31, i32* %82, align 8, !noalias !89
  %83 = getelementptr inbounds i8, i8* %80, i64 40
  %84 = bitcast i8* %83 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %84, align 8, !noalias !89
  %85 = bitcast i8* %80 to %"class.std::__1::__tree_node.232"*
  %86 = bitcast i8* %80 to %"class.std::__1::__tree_node_base"*
  %87 = getelementptr inbounds i8, i8* %80, i64 16
  %88 = bitcast i8* %87 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %88, align 8
  %89 = bitcast %"class.std::__1::__tree_node_base"** %75 to i8**
  store i8* %80, i8** %89, align 8
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %79
  %95 = ptrtoint %"class.std::__1::__tree_node_base"* %92 to i64
  store i64 %95, i64* %25, align 8
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  br label %97

97:                                               ; preds = %94, %79
  %98 = phi %"class.std::__1::__tree_node_base"* [ %86, %79 ], [ %96, %94 ]
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98) #14
  %100 = load i64, i64* %26, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %26, align 8
  br label %102

102:                                              ; preds = %73, %97
  %103 = phi %"class.std::__1::__tree_node.232"* [ %85, %97 ], [ %77, %73 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %103, i64 0, i32 1, i32 0, i32 1
  %105 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %104, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %44, %"class.sh::TVariable"* %105) #14
  %106 = bitcast i8* %43 to %"class.sh::TIntermTyped"*
  %107 = bitcast i8* %33 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %108 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %107, align 8
  %109 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %108, i64 31
  %110 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %109, align 8
  %111 = tail call dereferenceable(184) %"class.sh::TType"* %110(%"class.sh::TIntermTyped"* %41) #14
  %112 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %111, i64 0, i32 8
  %113 = load i8, i8* %112, align 8
  %114 = zext i8 %113 to i32
  %115 = tail call fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, %"class.sh::TIntermTyped"* %41, %"class.sh::TIntermTyped"* %106, i32 %114)
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %12, %"class.sh::TIntermNode"* %115) #14
  %116 = add i32 %30, 1
  %117 = zext i32 %116 to i64
  %118 = icmp ult i64 %117, %1
  br i1 %118, label %29, label %27

119:                                              ; preds = %4
  %120 = bitcast i8* %6 to %"class.sh::TIntermTyped"*
  %121 = bitcast i8* %6 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %122 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %121, align 8
  %123 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %122, i64 31
  %124 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %123, align 8
  %125 = tail call dereferenceable(184) %"class.sh::TType"* %124(%"class.sh::TIntermTyped"* %120) #14
  %126 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %125, i64 0, i32 10, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %141, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %131 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %130, i64 240) #14
  %132 = bitcast i8* %131 to %"class.sh::TIntermBinary"*
  %133 = bitcast i8* %6 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %134 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %133, align 8
  %135 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %134, i64 23
  %136 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %135, align 8
  %137 = tail call %"class.sh::TIntermTyped"* %136(%"class.sh::TIntermSymbol"* %7) #14
  %138 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %2) #14
  %139 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %138, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %132, i8 zeroext 44, %"class.sh::TIntermTyped"* %137, %"class.sh::TIntermTyped"* %139) #14
  %140 = bitcast i8* %131 to %"class.sh::TIntermTyped"*
  br label %147

141:                                              ; preds = %119
  %142 = bitcast i8* %6 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %143 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %142, align 8
  %144 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %143, i64 23
  %145 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %144, align 8
  %146 = tail call %"class.sh::TIntermTyped"* %145(%"class.sh::TIntermSymbol"* %7) #14
  br label %147

147:                                              ; preds = %141, %129
  %148 = phi %"class.sh::TIntermTyped"* [ %140, %129 ], [ %146, %141 ]
  %149 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %150 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %149, i64 32) #14
  %151 = bitcast i8* %150 to %"class.sh::TIntermSymbol"*
  %152 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11
  %153 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %154 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.std::__1::__tree_node.232"**
  %155 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node.232"* %155, null
  br i1 %156, label %185, label %157

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %159

159:                                              ; preds = %181, %157
  %160 = phi %"class.std::__1::__tree_node.232"* [ %184, %181 ], [ %155, %157 ]
  %161 = phi %"class.std::__1::__tree_node_base"** [ %183, %181 ], [ %158, %157 ]
  %162 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %160, i64 0, i32 1, i32 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = icmp ugt i32 %163, %2
  br i1 %164, label %165, label %171

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %160, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, null
  br i1 %168, label %169, label %181

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %160, i64 0, i32 0, i32 0
  br label %187

171:                                              ; preds = %159
  %172 = icmp ult i32 %163, %2
  br i1 %172, label %173, label %179

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %160, i64 0, i32 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %181

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %160, i64 0, i32 0, i32 0
  br label %187

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %160, i64 0, i32 0, i32 0
  br label %187

181:                                              ; preds = %173, %165
  %182 = phi %"class.std::__1::__tree_node_base"* [ %167, %165 ], [ %175, %173 ]
  %183 = phi %"class.std::__1::__tree_node_base"** [ %166, %165 ], [ %174, %173 ]
  %184 = bitcast %"class.std::__1::__tree_node_base"* %182 to %"class.std::__1::__tree_node.232"*
  br label %159

185:                                              ; preds = %147
  %186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 0, i32 0
  br label %187

187:                                              ; preds = %185, %179, %177, %169
  %188 = phi %"class.std::__1::__tree_end_node"* [ %153, %185 ], [ %170, %169 ], [ %178, %177 ], [ %180, %179 ]
  %189 = phi %"class.std::__1::__tree_node_base"** [ %186, %185 ], [ %166, %169 ], [ %174, %177 ], [ %161, %179 ]
  %190 = bitcast %"class.std::__1::__tree_node_base"** %189 to %"class.std::__1::__tree_node.232"**
  %191 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node.232"* %191, null
  br i1 %192, label %193, label %220

193:                                              ; preds = %187
  %194 = tail call i8* @_Znwm(i64 48) #15, !noalias !92
  %195 = getelementptr inbounds i8, i8* %194, i64 32
  %196 = bitcast i8* %195 to i32*
  store i32 %2, i32* %196, align 8, !noalias !92
  %197 = getelementptr inbounds i8, i8* %194, i64 40
  %198 = bitcast i8* %197 to %"class.sh::TVariable"**
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %198, align 8, !noalias !92
  %199 = bitcast i8* %194 to %"class.std::__1::__tree_node.232"*
  %200 = bitcast i8* %194 to %"class.std::__1::__tree_node_base"*
  %201 = getelementptr inbounds i8, i8* %194, i64 16
  %202 = bitcast i8* %201 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %188, %"class.std::__1::__tree_end_node"** %202, align 8
  %203 = bitcast %"class.std::__1::__tree_node_base"** %189 to i8**
  store i8* %194, i8** %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::map.186", %"class.std::__1::map.186"* %152, i64 0, i32 0, i32 0
  %205 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %204, align 8
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 0, i32 0
  %207 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  %208 = icmp eq %"class.std::__1::__tree_node_base"* %207, null
  br i1 %208, label %213, label %209

209:                                              ; preds = %193
  %210 = ptrtoint %"class.std::__1::__tree_node_base"* %207 to i64
  %211 = bitcast %"class.std::__1::map.186"* %152 to i64*
  store i64 %210, i64* %211, align 8
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %189, align 8
  br label %213

213:                                              ; preds = %209, %193
  %214 = phi %"class.std::__1::__tree_node_base"* [ %200, %193 ], [ %212, %209 ]
  %215 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %216, %"class.std::__1::__tree_node_base"* %214) #14
  %217 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %218 = load i64, i64* %217, align 8
  %219 = add i64 %218, 1
  store i64 %219, i64* %217, align 8
  br label %220

220:                                              ; preds = %187, %213
  %221 = phi %"class.std::__1::__tree_node.232"* [ %199, %213 ], [ %191, %187 ]
  %222 = getelementptr inbounds %"class.std::__1::__tree_node.232", %"class.std::__1::__tree_node.232"* %221, i64 0, i32 1, i32 0, i32 1
  %223 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %222, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %151, %"class.sh::TVariable"* %223) #14
  %224 = bitcast i8* %150 to %"class.sh::TIntermTyped"*
  %225 = bitcast %"class.sh::TIntermTyped"* %148 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %226 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %225, align 8
  %227 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %226, i64 31
  %228 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %227, align 8
  %229 = tail call dereferenceable(184) %"class.sh::TType"* %228(%"class.sh::TIntermTyped"* %148) #14
  %230 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %229, i64 0, i32 8
  %231 = load i8, i8* %230, align 8
  %232 = zext i8 %231 to i32
  %233 = tail call fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, %"class.sh::TIntermTyped"* %148, %"class.sh::TIntermTyped"* %224, i32 %232)
  br label %234

234:                                              ; preds = %220, %27
  %235 = phi %"class.sh::TIntermNode"* [ %28, %27 ], [ %233, %220 ]
  ret %"class.sh::TIntermNode"* %235
}

declare zeroext i1 @_ZN2sh25RunAtTheBeginningOfShaderEPNS_9TCompilerEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32) local_unnamed_addr #2

declare void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i(%"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = alloca %"class.sh::ImmutableString", align 8
  %7 = alloca %"class.sh::TVector.218", align 8
  %8 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %9 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %8, i64 24) #14
  %10 = bitcast i8* %9 to %"class.sh::TVector.31"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #14
  %11 = ptrtoint %"class.sh::TIntermTyped"* %2 to i64
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to %"class.sh::TIntermNode"***
  %14 = getelementptr inbounds i8, i8* %9, i64 16
  %15 = bitcast i8* %12 to i64*
  %16 = bitcast i8* %9 to i64*
  %17 = bitcast i8* %14 to i64*
  %18 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %19 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %18, i64 8) #14
  %20 = bitcast i8* %19 to %"class.sh::TIntermNode"**
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast i8* %19 to i64*
  store i64 %11, i64* %23, align 8
  %24 = bitcast i8* %9 to %"class.sh::TIntermNode"***
  %25 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %24, align 8
  %26 = ptrtoint %"class.sh::TIntermNode"** %25 to i64
  %27 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %13, align 8
  %28 = bitcast %"class.sh::TIntermNode"** %27 to i8*
  %29 = icmp eq %"class.sh::TIntermNode"** %27, %25
  br i1 %29, label %203, label %30

30:                                               ; preds = %4
  %31 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %27, i64 -1
  %32 = ptrtoint %"class.sh::TIntermNode"** %31 to i64
  %33 = sub i64 %32, %26
  %34 = lshr i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = icmp ult i64 %35, 4
  br i1 %36, label %133, label %37

37:                                               ; preds = %30
  %38 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %27, i64 -1
  %39 = ptrtoint %"class.sh::TIntermNode"** %38 to i64
  %40 = sub i64 %39, %26
  %41 = lshr i64 %40, 3
  %42 = and i64 %40, -8
  %43 = xor i64 %42, -8
  %44 = getelementptr i8, i8* %19, i64 %43
  %45 = xor i64 %41, -1
  %46 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %27, i64 %45
  %47 = bitcast %"class.sh::TIntermNode"** %46 to i8*
  %48 = icmp ult i8* %44, %28
  %49 = icmp ugt i8* %19, %47
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %37
  %52 = and i64 %35, 4611686018427387900
  %53 = sub nsw i64 0, %52
  %54 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %20, i64 %53
  %55 = sub nsw i64 0, %52
  %56 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %27, i64 %55
  %57 = add nsw i64 %52, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %57, 0
  br i1 %61, label %108, label %62

62:                                               ; preds = %51
  %63 = sub nuw nsw i64 %59, %60
  %64 = getelementptr i8, i8* %19, i64 -8
  %65 = bitcast i8* %64 to %"class.sh::TIntermNode"**
  %66 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %27, i64 -1
  %67 = getelementptr i8, i8* %19, i64 -8
  %68 = bitcast i8* %67 to %"class.sh::TIntermNode"**
  %69 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %27, i64 -1
  br label %70

70:                                               ; preds = %70, %62
  %71 = phi i64 [ 0, %62 ], [ %105, %70 ]
  %72 = phi i64 [ %63, %62 ], [ %106, %70 ]
  %73 = sub i64 0, %71
  %74 = sub i64 0, %71
  %75 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %65, i64 %73
  %76 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %66, i64 %74
  %77 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %76, i64 -1
  %78 = bitcast %"class.sh::TIntermNode"** %77 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8, !alias.scope !95
  %80 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %76, i64 -2
  %81 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %80, i64 -1
  %82 = bitcast %"class.sh::TIntermNode"** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8, !alias.scope !95
  %84 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %75, i64 -1
  %85 = bitcast %"class.sh::TIntermNode"** %84 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %85, align 8, !alias.scope !98, !noalias !95
  %86 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %75, i64 -2
  %87 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %86, i64 -1
  %88 = bitcast %"class.sh::TIntermNode"** %87 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %88, align 8, !alias.scope !98, !noalias !95
  %89 = sub nuw nsw i64 -4, %71
  %90 = sub nuw nsw i64 -4, %71
  %91 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %68, i64 %89
  %92 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %69, i64 %90
  %93 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %92, i64 -1
  %94 = bitcast %"class.sh::TIntermNode"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !95
  %96 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %92, i64 -2
  %97 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %96, i64 -1
  %98 = bitcast %"class.sh::TIntermNode"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !95
  %100 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %91, i64 -1
  %101 = bitcast %"class.sh::TIntermNode"** %100 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %101, align 8, !alias.scope !98, !noalias !95
  %102 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %91, i64 -2
  %103 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %102, i64 -1
  %104 = bitcast %"class.sh::TIntermNode"** %103 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %104, align 8, !alias.scope !98, !noalias !95
  %105 = add i64 %71, 8
  %106 = add i64 %72, -2
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %70, !llvm.loop !100

108:                                              ; preds = %70, %51
  %109 = phi i64 [ 0, %51 ], [ %105, %70 ]
  %110 = icmp eq i64 %60, 0
  br i1 %110, label %131, label %111

111:                                              ; preds = %108
  %112 = sub i64 0, %109
  %113 = getelementptr i8, i8* %19, i64 -8
  %114 = bitcast i8* %113 to %"class.sh::TIntermNode"**
  %115 = sub i64 0, %109
  %116 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %27, i64 -1
  %117 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %114, i64 %112
  %118 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %116, i64 %115
  %119 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %118, i64 -1
  %120 = bitcast %"class.sh::TIntermNode"** %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !95
  %122 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %118, i64 -2
  %123 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %122, i64 -1
  %124 = bitcast %"class.sh::TIntermNode"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !95
  %126 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %117, i64 -1
  %127 = bitcast %"class.sh::TIntermNode"** %126 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %127, align 8, !alias.scope !98, !noalias !95
  %128 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %117, i64 -2
  %129 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %128, i64 -1
  %130 = bitcast %"class.sh::TIntermNode"** %129 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %130, align 8, !alias.scope !98, !noalias !95
  br label %131

131:                                              ; preds = %108, %111
  %132 = icmp eq i64 %35, %52
  br i1 %132, label %203, label %133

133:                                              ; preds = %131, %37, %30
  %134 = phi %"class.sh::TIntermNode"** [ %20, %37 ], [ %20, %30 ], [ %54, %131 ]
  %135 = phi %"class.sh::TIntermNode"** [ %27, %37 ], [ %27, %30 ], [ %56, %131 ]
  %136 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %135, i64 -1
  %137 = ptrtoint %"class.sh::TIntermNode"** %136 to i64
  %138 = sub i64 %137, %26
  %139 = lshr i64 %138, 3
  %140 = add nuw nsw i64 %139, 1
  %141 = and i64 %140, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %133, %143
  %144 = phi %"class.sh::TIntermNode"** [ %147, %143 ], [ %134, %133 ]
  %145 = phi %"class.sh::TIntermNode"** [ %148, %143 ], [ %135, %133 ]
  %146 = phi i64 [ %152, %143 ], [ %141, %133 ]
  %147 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %144, i64 -1
  %148 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %145, i64 -1
  %149 = bitcast %"class.sh::TIntermNode"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.sh::TIntermNode"** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = add i64 %146, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !101

154:                                              ; preds = %143, %133
  %155 = phi %"class.sh::TIntermNode"** [ undef, %133 ], [ %147, %143 ]
  %156 = phi %"class.sh::TIntermNode"** [ %134, %133 ], [ %147, %143 ]
  %157 = phi %"class.sh::TIntermNode"** [ %135, %133 ], [ %148, %143 ]
  %158 = icmp ult i64 %138, 56
  br i1 %158, label %203, label %159

159:                                              ; preds = %154, %159
  %160 = phi %"class.sh::TIntermNode"** [ %197, %159 ], [ %156, %154 ]
  %161 = phi %"class.sh::TIntermNode"** [ %198, %159 ], [ %157, %154 ]
  %162 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -1
  %163 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -1
  %164 = bitcast %"class.sh::TIntermNode"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.sh::TIntermNode"** %162 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -2
  %168 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -2
  %169 = bitcast %"class.sh::TIntermNode"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.sh::TIntermNode"** %167 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -3
  %173 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -3
  %174 = bitcast %"class.sh::TIntermNode"** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.sh::TIntermNode"** %172 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -4
  %178 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -4
  %179 = bitcast %"class.sh::TIntermNode"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.sh::TIntermNode"** %177 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -5
  %183 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -5
  %184 = bitcast %"class.sh::TIntermNode"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.sh::TIntermNode"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -6
  %188 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -6
  %189 = bitcast %"class.sh::TIntermNode"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.sh::TIntermNode"** %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -7
  %193 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -7
  %194 = bitcast %"class.sh::TIntermNode"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.sh::TIntermNode"** %192 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %160, i64 -8
  %198 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %161, i64 -8
  %199 = bitcast %"class.sh::TIntermNode"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.sh::TIntermNode"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = icmp eq %"class.sh::TIntermNode"** %198, %25
  br i1 %202, label %203, label %159, !llvm.loop !102

203:                                              ; preds = %154, %159, %131, %4
  %204 = phi %"class.sh::TIntermNode"** [ %20, %4 ], [ %54, %131 ], [ %155, %154 ], [ %197, %159 ]
  %205 = ptrtoint %"class.sh::TIntermNode"** %204 to i64
  store i64 %205, i64* %16, align 8
  store i64 %22, i64* %15, align 8
  store i64 %22, i64* %17, align 8
  %206 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 2
  %207 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %206, align 8
  %208 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %209 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %208, align 8
  %210 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 10
  %211 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %209, i64 31
  %212 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %211, align 8
  %213 = tail call dereferenceable(184) %"class.sh::TType"* %212(%"class.sh::TIntermTyped"* %2) #14
  %214 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %213, i64 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = add i32 %215, -84
  %217 = icmp ult i32 %216, 6
  br i1 %217, label %218, label %222

218:                                              ; preds = %203
  %219 = sext i32 %216 to i64
  %220 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i, i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  br label %222

222:                                              ; preds = %203, %218
  %223 = phi i32 [ %221, %218 ], [ 6, %203 ]
  %224 = phi i32 [ %215, %218 ], [ 0, %203 ]
  %225 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %226 = bitcast %"class.std::__1::__tree_end_node"* %225 to %"class.std::__1::__tree_node.237"**
  %227 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %226, align 8
  %228 = icmp eq %"class.std::__1::__tree_node.237"* %227, null
  br i1 %228, label %257, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %231

231:                                              ; preds = %253, %229
  %232 = phi %"class.std::__1::__tree_node.237"* [ %256, %253 ], [ %227, %229 ]
  %233 = phi %"class.std::__1::__tree_node_base"** [ %255, %253 ], [ %230, %229 ]
  %234 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %232, i64 0, i32 1, i32 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = icmp slt i32 %223, %235
  br i1 %236, label %237, label %243

237:                                              ; preds = %231
  %238 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %232, i64 0, i32 0, i32 0, i32 0
  %239 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %238, align 8
  %240 = icmp eq %"class.std::__1::__tree_node_base"* %239, null
  br i1 %240, label %241, label %253

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %232, i64 0, i32 0, i32 0
  br label %259

243:                                              ; preds = %231
  %244 = icmp slt i32 %235, %223
  br i1 %244, label %245, label %251

245:                                              ; preds = %243
  %246 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %232, i64 0, i32 0, i32 1
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node_base"* %247, null
  br i1 %248, label %249, label %253

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %232, i64 0, i32 0, i32 0
  br label %259

251:                                              ; preds = %243
  %252 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %232, i64 0, i32 0, i32 0
  br label %259

253:                                              ; preds = %245, %237
  %254 = phi %"class.std::__1::__tree_node_base"* [ %239, %237 ], [ %247, %245 ]
  %255 = phi %"class.std::__1::__tree_node_base"** [ %238, %237 ], [ %246, %245 ]
  %256 = bitcast %"class.std::__1::__tree_node_base"* %254 to %"class.std::__1::__tree_node.237"*
  br label %231

257:                                              ; preds = %222
  %258 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %225, i64 0, i32 0
  br label %259

259:                                              ; preds = %257, %251, %249, %241
  %260 = phi %"class.std::__1::__tree_end_node"* [ %225, %257 ], [ %242, %241 ], [ %250, %249 ], [ %252, %251 ]
  %261 = phi %"class.std::__1::__tree_node_base"** [ %258, %257 ], [ %238, %241 ], [ %246, %249 ], [ %233, %251 ]
  %262 = bitcast %"class.std::__1::__tree_node_base"** %261 to %"class.std::__1::__tree_node.237"**
  %263 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %262, align 8
  %264 = icmp eq %"class.std::__1::__tree_node.237"* %263, null
  br i1 %264, label %265, label %292

265:                                              ; preds = %259
  %266 = tail call i8* @_Znwm(i64 48) #15, !noalias !103
  %267 = getelementptr inbounds i8, i8* %266, i64 32
  %268 = bitcast i8* %267 to i32*
  store i32 %223, i32* %268, align 8, !noalias !103
  %269 = getelementptr inbounds i8, i8* %266, i64 40
  %270 = bitcast i8* %269 to %"class.sh::TFunction"**
  store %"class.sh::TFunction"* null, %"class.sh::TFunction"** %270, align 8, !noalias !103
  %271 = bitcast i8* %266 to %"class.std::__1::__tree_node.237"*
  %272 = bitcast i8* %266 to %"class.std::__1::__tree_node_base"*
  %273 = getelementptr inbounds i8, i8* %266, i64 16
  %274 = bitcast i8* %273 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %260, %"class.std::__1::__tree_end_node"** %274, align 8
  %275 = bitcast %"class.std::__1::__tree_node_base"** %261 to i8**
  store i8* %266, i8** %275, align 8
  %276 = getelementptr inbounds %"class.std::__1::map.175", %"class.std::__1::map.175"* %210, i64 0, i32 0, i32 0
  %277 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %276, align 8
  %278 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %277, i64 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %265
  %282 = ptrtoint %"class.std::__1::__tree_node_base"* %279 to i64
  %283 = bitcast %"class.std::__1::map.175"* %210 to i64*
  store i64 %282, i64* %283, align 8
  %284 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %261, align 8
  br label %285

285:                                              ; preds = %281, %265
  %286 = phi %"class.std::__1::__tree_node_base"* [ %272, %265 ], [ %284, %281 ]
  %287 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %288 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %287, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %288, %"class.std::__1::__tree_node_base"* %286) #14
  %289 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils", %"class.sh::(anonymous namespace)::ReplaceSubpassInputUtils"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %290 = load i64, i64* %289, align 8
  %291 = add i64 %290, 1
  store i64 %291, i64* %289, align 8
  br label %292

292:                                              ; preds = %285, %259
  %293 = phi %"class.std::__1::__tree_node.237"* [ %271, %285 ], [ %263, %259 ]
  %294 = getelementptr inbounds %"class.std::__1::__tree_node.237", %"class.std::__1::__tree_node.237"* %293, i64 0, i32 1, i32 0, i32 1
  %295 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %294, align 8
  %296 = icmp eq %"class.sh::TFunction"* %295, null
  br i1 %296, label %297, label %340

297:                                              ; preds = %292
  %298 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %299 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %298, i64 184) #14
  %300 = bitcast i8* %299 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %300, i32 %224, i32 0, i32 6, i8 zeroext 1, i8 zeroext 1) #14
  %301 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %302 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %301, i64 80) #14
  %303 = bitcast i8* %302 to %"class.sh::TFunction"*
  %304 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %304) #14
  %305 = icmp ult i32 %223, 6
  br i1 %305, label %306, label %313

306:                                              ; preds = %297
  %307 = sext i32 %223 to i64
  %308 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.13, i64 0, i64 %307
  %309 = load i64, i64* %308, align 8
  %310 = sext i32 %223 to i64
  %311 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.14, i64 0, i64 %310
  %312 = load i8*, i8** %311, align 8
  br label %313

313:                                              ; preds = %306, %297
  %314 = phi i64 [ 0, %297 ], [ %309, %306 ]
  %315 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %297 ], [ %312, %306 ]
  %316 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  store i8* %315, i8** %316, align 8
  %317 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  store i64 %314, i64* %317, align 8
  %318 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %319 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %318, i64 184) #14
  %320 = bitcast i8* %319 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %320, i32 1, i32 0, i32 1, i8 zeroext 4, i8 zeroext 1) #14
  call void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"* %303, %"class.sh::TSymbolTable"* %207, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5, i8 zeroext 2, %"class.sh::TType"* %320, i1 zeroext true) #14
  %321 = bitcast %"class.sh::TFunction"** %294 to i8**
  store i8* %302, i8** %321, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %304) #14
  %322 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %323 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %322, i64 40) #14
  %324 = bitcast i8* %323 to %"class.sh::TVariable"*
  %325 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %325) #14
  %326 = icmp ult i32 %223, 6
  br i1 %326, label %327, label %334

327:                                              ; preds = %313
  %328 = sext i32 %223 to i64
  %329 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.15, i64 0, i64 %328
  %330 = load i64, i64* %329, align 8
  %331 = sext i32 %223 to i64
  %332 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN2sh12_GLOBAL__N_124ReplaceSubpassInputUtils17assignSubpassLoadEPNS_12TIntermTypedES3_i.16, i64 0, i64 %331
  %333 = load i8*, i8** %332, align 8
  br label %334

334:                                              ; preds = %327, %313
  %335 = phi i64 [ 0, %313 ], [ %330, %327 ]
  %336 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %313 ], [ %333, %327 ]
  %337 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  store i8* %336, i8** %337, align 8
  %338 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 1
  store i64 %335, i64* %338, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %324, %"class.sh::TSymbolTable"* %207, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %6, %"class.sh::TType"* %300, i8 zeroext 2, i8 zeroext 0) #14
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %303, %"class.sh::TVariable"* %324) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325) #14
  %339 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %294, align 8
  br label %340

340:                                              ; preds = %292, %334
  %341 = phi %"class.sh::TFunction"* [ %339, %334 ], [ %295, %292 ]
  %342 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %341, %"class.sh::TVector.31"* %10) #14
  %343 = bitcast %"class.sh::TVector.218"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #14
  %344 = getelementptr inbounds %"class.sh::TVector.218", %"class.sh::TVector.218"* %7, i64 0, i32 0, i32 0, i32 0
  %345 = getelementptr inbounds %"class.sh::TVector.218", %"class.sh::TVector.218"* %7, i64 0, i32 0, i32 0, i32 1
  %346 = getelementptr inbounds %"class.sh::TVector.218", %"class.sh::TVector.218"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %347 = sext i32 %3 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %343, i8 0, i64 24, i1 false) #14
  %348 = icmp eq i32 %3, 0
  br i1 %348, label %387, label %349

349:                                              ; preds = %340
  %350 = icmp slt i32 %3, 0
  br i1 %350, label %351, label %353

351:                                              ; preds = %349
  %352 = bitcast %"class.sh::TVector.218"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %352) #16
  unreachable

353:                                              ; preds = %349
  %354 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %355 = shl nsw i64 %347, 2
  %356 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %354, i64 %355) #14
  %357 = bitcast i8* %356 to i32*
  %358 = bitcast %"class.sh::TVector.218"* %7 to i8**
  store i8* %356, i8** %358, align 8
  %359 = getelementptr inbounds i32, i32* %357, i64 %347
  store i32* %359, i32** %346, align 8
  %360 = bitcast i32** %345 to i64*
  %361 = ptrtoint i8* %356 to i64
  %362 = add nsw i64 %347, -1
  %363 = getelementptr i32, i32* %357, i64 %362
  %364 = ptrtoint i32* %363 to i64
  %365 = sub i64 4, %361
  %366 = add i64 %365, %364
  %367 = and i64 %366, -4
  call void @llvm.memset.p0i8.i64(i8* align 4 %356, i8 0, i64 %367, i1 false) #14
  %368 = ptrtoint i32* %359 to i64
  store i64 %368, i64* %360, align 8
  %369 = zext i32 %3 to i64
  %370 = add nsw i64 %369, -1
  %371 = and i64 %369, 3
  %372 = icmp ult i64 %370, 3
  br i1 %372, label %375, label %373

373:                                              ; preds = %353
  %374 = sub nsw i64 %369, %371
  br label %403

375:                                              ; preds = %403, %353
  %376 = phi i64 [ 0, %353 ], [ %421, %403 ]
  %377 = icmp eq i64 %371, 0
  br i1 %377, label %387, label %378

378:                                              ; preds = %375, %378
  %379 = phi i64 [ %384, %378 ], [ %376, %375 ]
  %380 = phi i64 [ %385, %378 ], [ %371, %375 ]
  %381 = load i32*, i32** %344, align 8
  %382 = getelementptr inbounds i32, i32* %381, i64 %379
  %383 = trunc i64 %379 to i32
  store i32 %383, i32* %382, align 4
  %384 = add nuw nsw i64 %379, 1
  %385 = add i64 %380, -1
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %387, label %378, !llvm.loop !106

387:                                              ; preds = %375, %378, %340
  %388 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %389 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %388, i64 248) #14
  %390 = bitcast i8* %389 to %"class.sh::TIntermSwizzle"*
  %391 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %342, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %390, %"class.sh::TIntermTyped"* %391, %"class.sh::TVector.218"* nonnull dereferenceable(24) %7) #14
  %392 = bitcast i8* %389 to %"class.sh::TIntermTyped"*
  %393 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #14
  %394 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %393, i64 240) #14
  %395 = bitcast i8* %394 to %"class.sh::TIntermBinary"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %395, i8 zeroext -118, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %392) #14
  %396 = bitcast i8* %394 to %"class.sh::TIntermNode"*
  %397 = load i32*, i32** %344, align 8
  %398 = icmp eq i32* %397, null
  br i1 %398, label %402, label %399

399:                                              ; preds = %387
  %400 = ptrtoint i32* %397 to i64
  %401 = bitcast i32** %345 to i64*
  store i64 %400, i64* %401, align 8
  br label %402

402:                                              ; preds = %387, %399
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #14
  ret %"class.sh::TIntermNode"* %396

403:                                              ; preds = %403, %373
  %404 = phi i64 [ 0, %373 ], [ %421, %403 ]
  %405 = phi i64 [ %374, %373 ], [ %422, %403 ]
  %406 = load i32*, i32** %344, align 8
  %407 = getelementptr inbounds i32, i32* %406, i64 %404
  %408 = trunc i64 %404 to i32
  store i32 %408, i32* %407, align 4
  %409 = or i64 %404, 1
  %410 = load i32*, i32** %344, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 %409
  %412 = trunc i64 %409 to i32
  store i32 %412, i32* %411, align 4
  %413 = or i64 %404, 2
  %414 = load i32*, i32** %344, align 8
  %415 = getelementptr inbounds i32, i32* %414, i64 %413
  %416 = trunc i64 %413 to i32
  store i32 %416, i32* %415, align 4
  %417 = or i64 %404, 3
  %418 = load i32*, i32** %344, align 8
  %419 = getelementptr inbounds i32, i32* %418, i64 %417
  %420 = trunc i64 %417 to i32
  store i32 %420, i32* %419, align 4
  %421 = add nuw nsw i64 %404, 4
  %422 = add i64 %405, -4
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %375, label %403
}

declare void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"*, %"class.sh::TIntermTyped"*, %"class.sh::TVector.218"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i8 zeroext, %"class.sh::TType"*, i1 zeroext) unnamed_addr #2

declare void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"*, %"class.sh::TVariable"*) local_unnamed_addr #2

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80), %"class.sh::TVector.31"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapIPKN2sh9TVariableEPKNS1_12TIntermTypedENS_4lessIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEEC2ESt16initializer_listISD_ERKS9_(%"class.std::__1::map.204"*, %"struct.std::__1::pair.271"*, i64, %"struct.std::__1::less.213"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.271", %"struct.std::__1::pair.271"* %1, i64 %2
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %116, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::map.204"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = ptrtoint %"class.std::__1::__tree_end_node"* %6 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %16

16:                                               ; preds = %112, %11
  %17 = phi %"class.std::__1::__tree_node.278"* [ null, %11 ], [ %115, %112 ]
  %18 = phi %"class.std::__1::__tree_node_base"* [ null, %11 ], [ %114, %112 ]
  %19 = phi %"class.std::__1::__tree_end_node"* [ %6, %11 ], [ %113, %112 ]
  %20 = phi %"struct.std::__1::pair.271"* [ %1, %11 ], [ %110, %112 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair.271", %"struct.std::__1::pair.271"* %20, i64 0, i32 0
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %19, %6
  br i1 %22, label %49, label %23

23:                                               ; preds = %16
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23, %25
  %26 = phi %"class.std::__1::__tree_node_base"* [ %28, %25 ], [ %18, %23 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %41, label %25

30:                                               ; preds = %23, %30
  %31 = phi %"class.std::__1::__tree_end_node"* [ %35, %30 ], [ %6, %23 ]
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_end_node"**
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %32
  br i1 %38, label %30, label %39

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  br label %41

41:                                               ; preds = %25, %39
  %42 = phi %"class.std::__1::__tree_node_base"* [ %40, %39 ], [ %26, %25 ]
  %43 = ptrtoint %"class.std::__1::__tree_node_base"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 1
  %45 = bitcast %"class.std::__1::__tree_node_base"* %44 to %"class.sh::TVariable"**
  %46 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %45, align 8
  %47 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %21, align 8
  %48 = icmp ult %"class.sh::TVariable"* %46, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %41, %16
  %50 = phi i64 [ %43, %41 ], [ %14, %16 ]
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %51, label %83, label %52

52:                                               ; preds = %49
  %53 = inttoptr i64 %50 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 1
  br label %83

55:                                               ; preds = %41
  %56 = icmp eq %"class.std::__1::__tree_node.278"* %17, null
  br i1 %56, label %83, label %57

57:                                               ; preds = %55, %79
  %58 = phi %"class.std::__1::__tree_node.278"* [ %82, %79 ], [ %17, %55 ]
  %59 = phi %"class.std::__1::__tree_node_base"** [ %81, %79 ], [ %5, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %58, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %60, align 8
  %62 = icmp ult %"class.sh::TVariable"* %47, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %58, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %79

67:                                               ; preds = %63
  %68 = ptrtoint %"class.std::__1::__tree_node.278"* %58 to i64
  br label %83

69:                                               ; preds = %57
  %70 = icmp ult %"class.sh::TVariable"* %61, %47
  br i1 %70, label %71, label %77

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %58, i64 0, i32 0, i32 1
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = ptrtoint %"class.std::__1::__tree_node.278"* %58 to i64
  br label %83

77:                                               ; preds = %69
  %78 = ptrtoint %"class.std::__1::__tree_node.278"* %58 to i64
  br label %83

79:                                               ; preds = %71, %63
  %80 = phi %"class.std::__1::__tree_node_base"* [ %65, %63 ], [ %73, %71 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %64, %63 ], [ %72, %71 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"* %80 to %"class.std::__1::__tree_node.278"*
  br label %57

83:                                               ; preds = %55, %49, %52, %67, %75, %77
  %84 = phi i64 [ %50, %52 ], [ %68, %67 ], [ %76, %75 ], [ %78, %77 ], [ %14, %49 ], [ %14, %55 ]
  %85 = phi %"class.std::__1::__tree_node_base"** [ %54, %52 ], [ %64, %67 ], [ %72, %75 ], [ %59, %77 ], [ %15, %49 ], [ %15, %55 ]
  %86 = bitcast %"class.std::__1::__tree_node_base"** %85 to %"class.std::__1::__tree_node.278"**
  %87 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node.278"* %87, null
  br i1 %88, label %89, label %109

89:                                               ; preds = %83
  %90 = tail call i8* @_Znwm(i64 48) #15, !noalias !107
  %91 = getelementptr inbounds i8, i8* %90, i64 32
  %92 = bitcast %"struct.std::__1::pair.271"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 16, i1 false) #14, !noalias !107
  %93 = bitcast i8* %90 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds i8, i8* %90, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #14
  %95 = bitcast i8* %94 to i64*
  store i64 %84, i64* %95, align 8
  %96 = bitcast %"class.std::__1::__tree_node_base"** %85 to i8**
  store i8* %90, i8** %96, align 8
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %89
  %102 = ptrtoint %"class.std::__1::__tree_node_base"* %99 to i64
  store i64 %102, i64* %12, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  br label %104

104:                                              ; preds = %101, %89
  %105 = phi %"class.std::__1::__tree_node_base"* [ %93, %89 ], [ %103, %101 ]
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %106, %"class.std::__1::__tree_node_base"* %105) #14
  %107 = load i64, i64* %13, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %13, align 8
  br label %109

109:                                              ; preds = %104, %83
  %110 = getelementptr inbounds %"struct.std::__1::pair.271", %"struct.std::__1::pair.271"* %20, i64 1
  %111 = icmp eq %"struct.std::__1::pair.271"* %110, %9
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"* %114 to %"class.std::__1::__tree_node.278"*
  br label %16

116:                                              ; preds = %109, %4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverserD0Ev(%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceVariableTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.278"**
  %6 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"* %3, %"class.std::__1::__tree_node.278"* %6) #14
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*, %"class.sh::TIntermSymbol"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %4 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node.278"**
  %7 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node.278"* %7, null
  br i1 %8, label %65, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %5, %2 ]
  %11 = phi %"class.std::__1::__tree_node.278"* [ %21, %9 ], [ %7, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %12, align 8
  %14 = icmp ult %"class.sh::TVariable"* %13, %4
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node.278"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node.278"* %11 to %"class.std::__1::__tree_node.278"**
  %19 = select i1 %14, %"class.std::__1::__tree_node.278"** %16, %"class.std::__1::__tree_node.278"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node.278"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %5
  br i1 %24, label %65, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.sh::TVariable"**
  %28 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %27, align 8
  %29 = icmp ult %"class.sh::TVariable"* %4, %28
  br i1 %29, label %65, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_node.278"* %7 to %"class.std::__1::__tree_node_base"*
  br label %33

33:                                               ; preds = %49, %30
  %34 = phi %"class.std::__1::__tree_node_base"* [ %50, %49 ], [ %32, %30 ]
  %35 = phi %"class.std::__1::__tree_node.278"* [ %51, %49 ], [ %7, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %36, align 8
  %38 = icmp ult %"class.sh::TVariable"* %4, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %35, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %54, label %49

43:                                               ; preds = %33
  %44 = icmp ult %"class.sh::TVariable"* %37, %4
  br i1 %44, label %45, label %52

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %35, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45, %39
  %50 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %47, %45 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"* %50 to %"class.std::__1::__tree_node.278"*
  br label %33

52:                                               ; preds = %43
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %45, %39, %52
  tail call void @abort() #16
  unreachable

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 1, i32 1
  %57 = bitcast %"class.std::__1::__tree_node_base"** %56 to %"class.sh::TIntermTyped"**
  %58 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %57, align 8
  %59 = bitcast %"class.sh::TIntermTyped"* %58 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %60 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %60, i64 23
  %62 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %61, align 8
  %63 = tail call %"class.sh::TIntermTyped"* %62(%"class.sh::TIntermTyped"* %58) #14
  %64 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %63, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %31, %"class.sh::TIntermNode"* %64, i32 1) #14
  br label %65

65:                                               ; preds = %25, %23, %2, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_124ReplaceVariableTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::(anonymous namespace)::ReplaceVariableTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sh::TIntermDeclaration"*, align 8
  %5 = alloca %"class.sh::TVector.31", align 16
  %6 = alloca %"class.sh::TIntermBlock"*, align 8
  store %"class.sh::TIntermDeclaration"* %2, %"class.sh::TIntermDeclaration"** %4, align 8
  %7 = bitcast %"class.sh::TIntermDeclaration"* %2 to %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)***
  %8 = load %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)** %8, i64 27
  %10 = load %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)** %9, align 8
  %11 = tail call %"class.sh::TVector.31"* %10(%"class.sh::TIntermDeclaration"* %2) #14
  %12 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %11, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.sh::TIntermNode"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.sh::TVector.31"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = icmp eq i64 %17, 8
  %19 = ptrtoint %"class.sh::TIntermDeclaration"* %2 to i64
  br i1 %18, label %20, label %122

20:                                               ; preds = %3
  %21 = inttoptr i64 %16 to %"class.sh::TIntermNode"**
  %22 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %21, align 8
  %23 = bitcast %"class.sh::TIntermNode"* %22 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %24 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %24, i64 4
  %26 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %25, align 8
  %27 = tail call %"class.sh::TIntermTyped"* %26(%"class.sh::TIntermNode"* %22) #14
  %28 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %27, i64 0, i32 0
  %29 = bitcast %"class.sh::TIntermTyped"* %27 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %30 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %30, i64 19
  %32 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %31, align 8
  %33 = tail call %"class.sh::TIntermSymbol"* %32(%"class.sh::TIntermNode"* %28) #14
  %34 = icmp eq %"class.sh::TIntermSymbol"* %33, null
  br i1 %34, label %122, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %33, i64 0, i32 1
  %37 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %36, align 8
  %38 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node.278"**
  %40 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node.278"* %40, null
  br i1 %41, label %122, label %42

42:                                               ; preds = %35, %42
  %43 = phi %"class.std::__1::__tree_end_node"* [ %53, %42 ], [ %38, %35 ]
  %44 = phi %"class.std::__1::__tree_node.278"* [ %54, %42 ], [ %40, %35 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %44, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %45, align 8
  %47 = icmp ult %"class.sh::TVariable"* %46, %37
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %44, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__tree_node_base"** %48 to %"class.std::__1::__tree_node.278"**
  %50 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %44, i64 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_node.278"* %44 to %"class.std::__1::__tree_node.278"**
  %52 = select i1 %47, %"class.std::__1::__tree_node.278"** %49, %"class.std::__1::__tree_node.278"** %51
  %53 = select i1 %47, %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"* %50
  %54 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %52, align 8
  %55 = icmp eq %"class.std::__1::__tree_node.278"* %54, null
  br i1 %55, label %56, label %42

56:                                               ; preds = %42
  %57 = icmp eq %"class.std::__1::__tree_end_node"* %53, %38
  br i1 %57, label %122, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 4
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.sh::TVariable"**
  %61 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %60, align 8
  %62 = icmp ult %"class.sh::TVariable"* %37, %61
  br i1 %62, label %122, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.sh::TVector.31"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #14
  %65 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %5, i64 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %5, i64 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 0, i64 24, i1 false) #14
  %68 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0, i32 7
  %69 = bitcast %"class.sh::TIntermBlock"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #14
  %70 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %71 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %72 = bitcast %"class.sh::TIntermNode"*** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.32"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 3
  %78 = icmp ult i64 %77, 2
  br i1 %78, label %85, label %79

79:                                               ; preds = %63
  %80 = inttoptr i64 %75 to %"class.sh::TIntermNode"**
  %81 = add nsw i64 %77, -2
  %82 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %80, i64 %81
  %83 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %82, align 8
  %84 = bitcast %"class.sh::TIntermNode"* %83 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  br label %85

85:                                               ; preds = %63, %79
  %86 = phi %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** [ %84, %79 ], [ null, %63 ]
  %87 = phi %"class.sh::TIntermNode"* [ %83, %79 ], [ null, %63 ]
  %88 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %86, align 8
  %89 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %88, i64 8
  %90 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %89, align 8
  %91 = tail call %"class.sh::TIntermBlock"* %90(%"class.sh::TIntermNode"* %87) #14
  store %"class.sh::TIntermBlock"* %91, %"class.sh::TIntermBlock"** %6, align 8
  %92 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0, i32 7, i32 0, i32 1
  %93 = load %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %92, align 8
  %94 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableTraverser"* %0, i64 0, i32 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %95 = load %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %94, align 8
  %96 = icmp ult %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %93, %95
  br i1 %96, label %97, label %115

97:                                               ; preds = %85
  %98 = icmp eq %"class.sh::TIntermBlock"* %91, null
  %99 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %91, i64 0, i32 1
  %100 = select i1 %98, %"class.sh::TIntermAggregateBase"* null, %"class.sh::TIntermAggregateBase"* %99
  %101 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %93, i64 0, i32 0
  store %"class.sh::TIntermAggregateBase"* %100, %"class.sh::TIntermAggregateBase"** %101, align 8
  %102 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %93, i64 0, i32 1
  %103 = bitcast %"class.sh::TIntermNode"** %102 to i64*
  store i64 %19, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %93, i64 0, i32 2
  %105 = bitcast %"class.sh::TVector.31"* %5 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 16
  %107 = bitcast %"class.sh::TVector.31"* %104 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %107, align 8
  %108 = bitcast %"class.sh::TIntermNode"*** %67 to i64*
  %109 = load i64, i64* %108, align 16
  %110 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %93, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"class.sh::TIntermNode"*** %110 to i64*
  store i64 %109, i64* %111, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 0, i64 24, i1 false) #14
  %112 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %93, i64 1
  %113 = ptrtoint %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %112 to i64
  %114 = bitcast %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %92 to i64*
  store i64 %113, i64* %114, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14
  br label %121

115:                                              ; preds = %85
  call void @_ZNSt3__16vectorIN2sh16TIntermTraverser28NodeReplaceWithMultipleEntryENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJPNS1_12TIntermBlockERPNS1_18TIntermDeclarationENS1_7TVectorIPNS1_11TIntermNodeEEEEEEvDpOT_(%"class.std::__1::vector.147"* %68, %"class.sh::TIntermBlock"** nonnull dereferenceable(8) %6, %"class.sh::TIntermDeclaration"** nonnull dereferenceable(8) %4, %"class.sh::TVector.31"* nonnull dereferenceable(24) %5) #14
  %116 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %65, align 16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14
  %117 = icmp eq %"class.sh::TIntermNode"** %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = ptrtoint %"class.sh::TIntermNode"** %116 to i64
  %120 = bitcast %"class.sh::TIntermNode"*** %66 to i64*
  store i64 %119, i64* %120, align 8
  br label %121

121:                                              ; preds = %97, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #14
  br label %122

122:                                              ; preds = %58, %56, %35, %121, %20, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_(%"class.std::__1::__tree.205"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.sh::TVariable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.205", %"class.std::__1::__tree.205"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.sh::TVariable"**
  %12 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %4, align 8
  %13 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %11, align 8
  %14 = icmp ult %"class.sh::TVariable"* %12, %13
  br i1 %14, label %15, label %90

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree.205", %"class.std::__1::__tree.205"* %0, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  br i1 %18, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %1, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"class.sh::TVariable"**
  %44 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %43, align 8
  %45 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %4, align 8
  %46 = icmp ult %"class.sh::TVariable"* %44, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %15, %39
  %48 = phi i64 [ %41, %39 ], [ %6, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %48, i64* %53, align 8
  %54 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %170

56:                                               ; preds = %39
  %57 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.278"**
  %58 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node.278"* %58, null
  br i1 %59, label %88, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree.205", %"class.std::__1::__tree.205"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %84, %60
  %63 = phi %"class.std::__1::__tree_node.278"* [ %87, %84 ], [ %58, %60 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %86, %84 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %63, i64 0, i32 1, i32 0, i32 0
  %66 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %65, align 8
  %67 = icmp ult %"class.sh::TVariable"* %45, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %63, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

74:                                               ; preds = %62
  %75 = icmp ult %"class.sh::TVariable"* %66, %45
  br i1 %75, label %76, label %82

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %63, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

84:                                               ; preds = %76, %68
  %85 = phi %"class.std::__1::__tree_node_base"* [ %70, %68 ], [ %78, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %77, %76 ]
  %87 = bitcast %"class.std::__1::__tree_node_base"* %85 to %"class.std::__1::__tree_node.278"*
  br label %62

88:                                               ; preds = %56
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

90:                                               ; preds = %9
  %91 = icmp ult %"class.sh::TVariable"* %13, %12
  br i1 %91, label %92, label %167

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %109, %96
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %7
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 4
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.sh::TVariable"**
  %126 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %125, align 8
  %127 = icmp ult %"class.sh::TVariable"* %12, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %120, %123
  br i1 %95, label %129, label %131

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %130, align 8
  br label %170

131:                                              ; preds = %128
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %2, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  br label %170

133:                                              ; preds = %123
  %134 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.278"**
  %135 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node.278"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.std::__1::__tree.205", %"class.std::__1::__tree.205"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %139

139:                                              ; preds = %161, %137
  %140 = phi %"class.std::__1::__tree_node.278"* [ %164, %161 ], [ %135, %137 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %163, %161 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %140, i64 0, i32 1, i32 0, i32 0
  %143 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %142, align 8
  %144 = icmp ult %"class.sh::TVariable"* %12, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %140, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %161

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %150, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

151:                                              ; preds = %139
  %152 = icmp ult %"class.sh::TVariable"* %143, %12
  br i1 %152, label %153, label %159

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %140, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %160, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

161:                                              ; preds = %153, %145
  %162 = phi %"class.std::__1::__tree_node_base"* [ %147, %145 ], [ %155, %153 ]
  %163 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %154, %153 ]
  %164 = bitcast %"class.std::__1::__tree_node_base"* %162 to %"class.std::__1::__tree_node.278"*
  br label %139

165:                                              ; preds = %133
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

167:                                              ; preds = %90
  %168 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %168, align 8
  %169 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %169, align 8
  br label %170

170:                                              ; preds = %129, %131, %149, %157, %159, %165, %50, %52, %72, %80, %82, %88, %167
  %171 = phi %"class.std::__1::__tree_node_base"** [ %3, %167 ], [ %51, %50 ], [ %55, %52 ], [ %69, %72 ], [ %77, %80 ], [ %64, %82 ], [ %89, %88 ], [ %93, %129 ], [ %132, %131 ], [ %146, %149 ], [ %154, %157 ], [ %141, %159 ], [ %166, %165 ]
  ret %"class.std::__1::__tree_node_base"** %171
}

declare void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2sh16TIntermTraverser28NodeReplaceWithMultipleEntryENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJPNS1_12TIntermBlockERPNS1_18TIntermDeclarationENS1_7TVectorIPNS1_11TIntermNodeEEEEEEvDpOT_(%"class.std::__1::vector.147"*, %"class.sh::TIntermBlock"** dereferenceable(8), %"class.sh::TIntermDeclaration"** dereferenceable(8), %"class.sh::TVector.31"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.147"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 40
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 461168601842738790
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector.147"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #16
  unreachable

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = sdiv exact i64 %20, 40
  %22 = icmp ult i64 %21, 230584300921369395
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = shl nsw i64 %21, 1
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %16, %23
  %29 = phi i64 [ %26, %23 ], [ 461168601842738790, %16 ]
  %30 = mul i64 %29, 40
  %31 = tail call i8* @_Znwm(i64 %30) #15
  %32 = bitcast i8* %31 to %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi i64 [ %29, %28 ], [ 0, %23 ]
  %35 = phi %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* [ %32, %28 ], [ null, %23 ]
  %36 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %35, i64 %11
  %37 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %35, i64 %34
  %38 = ptrtoint %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %37 to i64
  %39 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %1, align 8
  %40 = icmp eq %"class.sh::TIntermBlock"* %39, null
  %41 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %39, i64 0, i32 1
  %42 = select i1 %40, %"class.sh::TIntermAggregateBase"* null, %"class.sh::TIntermAggregateBase"* %41
  %43 = bitcast %"class.sh::TIntermDeclaration"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %36, i64 0, i32 0
  store %"class.sh::TIntermAggregateBase"* %42, %"class.sh::TIntermAggregateBase"** %45, align 8
  %46 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %35, i64 %11, i32 1
  %47 = bitcast %"class.sh::TIntermNode"** %46 to i64*
  store i64 %44, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %35, i64 %11, i32 2
  %49 = bitcast %"class.sh::TVector.31"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #14
  %50 = bitcast %"class.sh::TVector.31"* %3 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.sh::TVector.31"* %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.sh::TIntermNode"*** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %35, i64 %11, i32 2, i32 0, i32 0, i32 1
  %57 = bitcast %"class.sh::TIntermNode"*** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.sh::TIntermNode"*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %35, i64 %11, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.sh::TIntermNode"*** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.sh::TVector.31"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #14
  %64 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %36, i64 1
  %65 = ptrtoint %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.147", %"class.std::__1::vector.147"* %0, i64 0, i32 0, i32 0
  %67 = load %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %66, align 8
  %68 = load %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %5, align 8
  %69 = icmp eq %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %68, %67
  br i1 %69, label %70, label %72

70:                                               ; preds = %33
  %71 = ptrtoint %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %67 to i64
  br label %100

72:                                               ; preds = %33, %72
  %73 = phi %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* [ %75, %72 ], [ %36, %33 ]
  %74 = phi %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* [ %76, %72 ], [ %68, %33 ]
  %75 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %73, i64 -1
  %76 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %74, i64 -1
  %77 = bitcast %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %75 to i8*
  %78 = bitcast %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #14
  %79 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %73, i64 -1, i32 2
  %80 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %74, i64 -1, i32 2
  %81 = bitcast %"class.sh::TVector.31"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #14
  %82 = bitcast %"class.sh::TVector.31"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.sh::TVector.31"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %74, i64 -1, i32 2, i32 0, i32 0, i32 1
  %86 = bitcast %"class.sh::TIntermNode"*** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %73, i64 -1, i32 2, i32 0, i32 0, i32 1
  %89 = bitcast %"class.sh::TIntermNode"*** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %74, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast %"class.sh::TIntermNode"*** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %73, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast %"class.sh::TIntermNode"*** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.sh::TVector.31"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #14
  %96 = icmp eq %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %76, %67
  br i1 %96, label %97, label %72

97:                                               ; preds = %72
  %98 = load i64, i64* %8, align 8
  %99 = load %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"** %5, align 8
  br label %100

100:                                              ; preds = %70, %97
  %101 = phi %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* [ %67, %70 ], [ %99, %97 ]
  %102 = phi %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* [ %36, %70 ], [ %75, %97 ]
  %103 = phi i64 [ %71, %70 ], [ %98, %97 ]
  %104 = ptrtoint %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %102 to i64
  store i64 %104, i64* %8, align 8
  store i64 %65, i64* %6, align 8
  store i64 %38, i64* %18, align 8
  %105 = inttoptr i64 %103 to %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*
  %106 = icmp eq %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %101, %105
  br i1 %106, label %119, label %107

107:                                              ; preds = %100, %117
  %108 = phi %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* [ %109, %117 ], [ %101, %100 ]
  %109 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %108, i64 -1
  %110 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %108, i64 -1, i32 2, i32 0, i32 0, i32 0
  %111 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %110, align 8
  %112 = icmp eq %"class.sh::TIntermNode"** %111, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %107
  %114 = ptrtoint %"class.sh::TIntermNode"** %111 to i64
  %115 = getelementptr inbounds %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry", %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %108, i64 -1, i32 2, i32 0, i32 0, i32 1
  %116 = bitcast %"class.sh::TIntermNode"*** %115 to i64*
  store i64 %114, i64* %116, align 8
  br label %117

117:                                              ; preds = %113, %107
  %118 = icmp eq %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* %109, %105
  br i1 %118, label %119, label %107

119:                                              ; preds = %117, %100
  %120 = icmp eq i64 %103, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %103 to i8*
  tail call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %119, %121
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_117ReplaceInOutUtilsD0Ev(%"class.sh::(anonymous namespace)::ReplaceInOutUtils"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ReplaceSubpassInputUtilsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.235"**
  %6 = load %"class.std::__1::__tree_node.235"*, %"class.std::__1::__tree_node.235"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.196"* %3, %"class.std::__1::__tree_node.235"* %6) #14
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 11, i32 0
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.232"**
  %10 = load %"class.std::__1::__tree_node.232"*, %"class.std::__1::__tree_node.232"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.187"* %7, %"class.std::__1::__tree_node.232"* %10) #14
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 10, i32 0
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.237"**
  %14 = load %"class.std::__1::__tree_node.237"*, %"class.std::__1::__tree_node.237"** %13, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.176"* %11, %"class.std::__1::__tree_node.237"* %14) #14
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %16 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %17 = icmp eq %"class.sh::TIntermNode"** %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %1
  %19 = ptrtoint %"class.sh::TIntermNode"** %16 to i64
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 1
  %21 = bitcast %"class.sh::TIntermNode"*** %20 to i64*
  store i64 %19, i64* %21, align 8
  br label %22

22:                                               ; preds = %1, %18
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 7, i32 0
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceInOutUtils", %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node"**
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.137"* %23, %"class.std::__1::__tree_node"* %26) #14
  %27 = bitcast %"class.sh::(anonymous namespace)::ReplaceInOutUtils"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13mapIPKN2sh9TVariableEPKNS1_12TIntermTypedENS_4lessIS4_EENS_9allocatorINS_4pairIKS4_S7_EEEEE6insertINS_20__map_const_iteratorINS_21__tree_const_iteratorINS_12__value_typeIS4_S7_EEPNS_11__tree_nodeISK_PvEElEEEEEEvT_SR_(%"class.std::__1::map.204"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %6 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %7, label %17, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  %11 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  %12 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %13 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::map.204"* %0 to i64*
  %15 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::map.204", %"class.std::__1::map.204"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %18

17:                                               ; preds = %75, %3
  ret void

18:                                               ; preds = %8, %75
  %19 = phi %"class.std::__1::__tree_end_node"* [ %1, %8 ], [ %76, %75 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.sh::TVariable"**
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %5, align 8
  %22 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE12__find_equalIS5_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_(%"class.std::__1::__tree.205"* %9, %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %5, %"class.sh::TVariable"** dereferenceable(8) %21) #14
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node.278"**
  %24 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node.278"* %24, null
  br i1 %25, label %26, label %47

26:                                               ; preds = %18
  %27 = call i8* @_Znwm(i64 48) #15, !noalias !110
  %28 = getelementptr inbounds i8, i8* %27, i64 32
  %29 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #14, !noalias !110
  %30 = load i64, i64* %12, align 8
  %31 = bitcast i8* %27 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds i8, i8* %27, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #14
  %33 = bitcast i8* %32 to i64*
  store i64 %30, i64* %33, align 8
  %34 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8**
  store i8* %27, i8** %34, align 8
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %26
  %40 = ptrtoint %"class.std::__1::__tree_node_base"* %37 to i64
  store i64 %40, i64* %14, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  br label %42

42:                                               ; preds = %39, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %31, %26 ], [ %41, %39 ]
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %44, %"class.std::__1::__tree_node_base"* %43) #14
  %45 = load i64, i64* %16, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %16, align 8
  br label %47

47:                                               ; preds = %18, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %52
  br i1 %58, label %75, label %66

59:                                               ; preds = %47, %59
  %60 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %49, %47 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0
  br label %75

66:                                               ; preds = %51, %66
  %67 = phi %"class.std::__1::__tree_end_node"** [ %70, %66 ], [ %54, %51 ]
  %68 = bitcast %"class.std::__1::__tree_end_node"** %67 to %"class.std::__1::__tree_node_base"**
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %69
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %51, %64
  %76 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %55, %51 ], [ %71, %66 ]
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %76, %2
  br i1 %77, label %17, label %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"*, %"class.std::__1::__tree_node.278"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.278"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.278"* %1 to %"class.std::__1::__tree_node.278"**
  %6 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"* %0, %"class.std::__1::__tree_node.278"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.278", %"class.std::__1::__tree_node.278"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.278"**
  %9 = load %"class.std::__1::__tree_node.278"*, %"class.std::__1::__tree_node.278"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.205"* %0, %"class.std::__1::__tree_node.278"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.278"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void

11:                                               ; preds = %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !14}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!21 = !{i8 0, i8 2}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !16}
!41 = distinct !{!41, !14}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_IST_EEEEEEDpOT_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_IST_EEEEEEDpOT_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16__treeINS_12__value_typeIjPKN2sh9TVariableEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRjRS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRjRS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRjRS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRjRS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJiRS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISI_EEEEEEDpOT_: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJiRS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISI_EEEEEEDpOT_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_4pairIKjS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISM_EEEEEEDpOT_: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh13TIntermSymbolEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_4pairIKjS4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISM_EEEEEEDpOT_"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!71 = distinct !{!71, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!72 = !{!73}
!73 = distinct !{!73, !74}
!74 = distinct !{!74, !"LVerDomain"}
!75 = !{!76}
!76 = distinct !{!76, !74}
!77 = distinct !{!77, !14}
!78 = distinct !{!78, !16}
!79 = distinct !{!79, !14}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!91 = distinct !{!91, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!94 = distinct !{!94, !"_ZNSt3__16__treeINS_12__value_typeIjPN2sh9TVariableEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !14}
!101 = distinct !{!101, !16}
!102 = distinct !{!102, !14}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__16__treeINS_12__value_typeIN2sh12_GLOBAL__N_19InputTypeEPNS2_9TFunctionEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_"}
!106 = distinct !{!106, !16}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS5_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS5_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS5_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_: argument 0"}
!112 = distinct !{!112, !"_ZNSt3__16__treeINS_12__value_typeIPKN2sh9TVariableEPKNS2_12TIntermTypedEEENS_19__map_value_compareIS5_S9_NS_4lessIS5_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_4pairIKS5_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISQ_EEEEEEDpOT_"}
