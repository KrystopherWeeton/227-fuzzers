; ModuleID = 'gen/ui/events/mojom/keyboard_codes.mojom-shared.cc'
source_filename = "gen/ui/events/mojom/keyboard_codes.mojom-shared.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type opaque
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [31 x i8] c"Unknown KeyboardCode value: %i\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"BACK\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"TAB\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"CLEAR\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"RETURN\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"SHIFT\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"CONTROL\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"MENU\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"PAUSE\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"CAPITAL\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"{KANA, HANGUL}\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"JUNJA\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"FINAL\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"{HANJA, KANJI}\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"ESCAPE\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"CONVERT\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"NONCONVERT\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"ACCEPT\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"MODECHANGE\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"SPACE\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"PRIOR\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"NEXT\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"END\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"LEFT\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"UP\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"RIGHT\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"DOWN\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"SELECT\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"PRINT\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"EXECUTE\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"SNAPSHOT\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"INSERT\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"KEY_DELETE\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"HELP\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"NUM_0\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"NUM_1\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"NUM_2\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"NUM_3\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"NUM_4\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"NUM_5\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"NUM_6\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"NUM_7\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"NUM_8\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"NUM_9\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.47 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.50 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.51 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"J\00", align 1
@.str.56 = private unnamed_addr constant [2 x i8] c"K\00", align 1
@.str.57 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.62 = private unnamed_addr constant [2 x i8] c"Q\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.66 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.68 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.69 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.70 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"{LWIN, COMMAND}\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"RWIN\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"APPS\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"SLEEP\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"NUMPAD0\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"NUMPAD1\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"NUMPAD2\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"NUMPAD3\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"NUMPAD4\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"NUMPAD5\00", align 1
@.str.82 = private unnamed_addr constant [8 x i8] c"NUMPAD6\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"NUMPAD7\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"NUMPAD8\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"NUMPAD9\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"MULTIPLY\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"ADD\00", align 1
@.str.88 = private unnamed_addr constant [10 x i8] c"SEPARATOR\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"SUBTRACT\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"DECIMAL\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"DIVIDE\00", align 1
@.str.92 = private unnamed_addr constant [3 x i8] c"F1\00", align 1
@.str.93 = private unnamed_addr constant [3 x i8] c"F2\00", align 1
@.str.94 = private unnamed_addr constant [3 x i8] c"F3\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"F4\00", align 1
@.str.96 = private unnamed_addr constant [3 x i8] c"F5\00", align 1
@.str.97 = private unnamed_addr constant [3 x i8] c"F6\00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c"F7\00", align 1
@.str.99 = private unnamed_addr constant [3 x i8] c"F8\00", align 1
@.str.100 = private unnamed_addr constant [3 x i8] c"F9\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"F10\00", align 1
@.str.102 = private unnamed_addr constant [4 x i8] c"F11\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"F12\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"F13\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"F14\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"F15\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"F16\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"F17\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"F18\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"F19\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"F20\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"F21\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"F22\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"F23\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"F24\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"NUMLOCK\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"SCROLL\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"WLAN\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"POWER\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"ASSISTANT\00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"LSHIFT\00", align 1
@.str.122 = private unnamed_addr constant [7 x i8] c"RSHIFT\00", align 1
@.str.123 = private unnamed_addr constant [9 x i8] c"LCONTROL\00", align 1
@.str.124 = private unnamed_addr constant [9 x i8] c"RCONTROL\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"LMENU\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"RMENU\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c"BROWSER_BACK\00", align 1
@.str.128 = private unnamed_addr constant [16 x i8] c"BROWSER_FORWARD\00", align 1
@.str.129 = private unnamed_addr constant [16 x i8] c"BROWSER_REFRESH\00", align 1
@.str.130 = private unnamed_addr constant [13 x i8] c"BROWSER_STOP\00", align 1
@.str.131 = private unnamed_addr constant [15 x i8] c"BROWSER_SEARCH\00", align 1
@.str.132 = private unnamed_addr constant [18 x i8] c"BROWSER_FAVORITES\00", align 1
@.str.133 = private unnamed_addr constant [13 x i8] c"BROWSER_HOME\00", align 1
@.str.134 = private unnamed_addr constant [12 x i8] c"VOLUME_MUTE\00", align 1
@.str.135 = private unnamed_addr constant [12 x i8] c"VOLUME_DOWN\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"VOLUME_UP\00", align 1
@.str.137 = private unnamed_addr constant [17 x i8] c"MEDIA_NEXT_TRACK\00", align 1
@.str.138 = private unnamed_addr constant [17 x i8] c"MEDIA_PREV_TRACK\00", align 1
@.str.139 = private unnamed_addr constant [11 x i8] c"MEDIA_STOP\00", align 1
@.str.140 = private unnamed_addr constant [17 x i8] c"MEDIA_PLAY_PAUSE\00", align 1
@.str.141 = private unnamed_addr constant [18 x i8] c"MEDIA_LAUNCH_MAIL\00", align 1
@.str.142 = private unnamed_addr constant [26 x i8] c"MEDIA_LAUNCH_MEDIA_SELECT\00", align 1
@.str.143 = private unnamed_addr constant [18 x i8] c"MEDIA_LAUNCH_APP1\00", align 1
@.str.144 = private unnamed_addr constant [18 x i8] c"MEDIA_LAUNCH_APP2\00", align 1
@.str.145 = private unnamed_addr constant [6 x i8] c"OEM_1\00", align 1
@.str.146 = private unnamed_addr constant [9 x i8] c"OEM_PLUS\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"OEM_COMMA\00", align 1
@.str.148 = private unnamed_addr constant [10 x i8] c"OEM_MINUS\00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"OEM_PERIOD\00", align 1
@.str.150 = private unnamed_addr constant [6 x i8] c"OEM_2\00", align 1
@.str.151 = private unnamed_addr constant [6 x i8] c"OEM_3\00", align 1
@.str.152 = private unnamed_addr constant [16 x i8] c"BRIGHTNESS_DOWN\00", align 1
@.str.153 = private unnamed_addr constant [14 x i8] c"BRIGHTNESS_UP\00", align 1
@.str.154 = private unnamed_addr constant [20 x i8] c"KBD_BRIGHTNESS_DOWN\00", align 1
@.str.155 = private unnamed_addr constant [6 x i8] c"OEM_4\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"OEM_5\00", align 1
@.str.157 = private unnamed_addr constant [6 x i8] c"OEM_6\00", align 1
@.str.158 = private unnamed_addr constant [6 x i8] c"OEM_7\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"OEM_8\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"ALTGR\00", align 1
@.str.161 = private unnamed_addr constant [8 x i8] c"OEM_102\00", align 1
@.str.162 = private unnamed_addr constant [11 x i8] c"PROCESSKEY\00", align 1
@.str.163 = private unnamed_addr constant [8 x i8] c"COMPOSE\00", align 1
@.str.164 = private unnamed_addr constant [7 x i8] c"PACKET\00", align 1
@.str.165 = private unnamed_addr constant [18 x i8] c"KBD_BRIGHTNESS_UP\00", align 1
@.str.166 = private unnamed_addr constant [13 x i8] c"DBE_SBCSCHAR\00", align 1
@.str.167 = private unnamed_addr constant [13 x i8] c"DBE_DBCSCHAR\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"ATTN\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"CRSEL\00", align 1
@.str.170 = private unnamed_addr constant [6 x i8] c"EXSEL\00", align 1
@.str.171 = private unnamed_addr constant [6 x i8] c"EREOF\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"PLAY\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"ZOOM\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c"NONAME\00", align 1
@.str.175 = private unnamed_addr constant [4 x i8] c"PA1\00", align 1
@.str.176 = private unnamed_addr constant [10 x i8] c"OEM_CLEAR\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN2ui5mojomL26KeyboardCodeToStringHelperENS0_12KeyboardCodeE = private unnamed_addr constant [255 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* null, i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* null, i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.120, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.144, i64 0, i64 0), i8* null, i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.151, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i64 0, i64 0), i8* null, i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.165, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.167, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.176, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui5mojom20KeyboardCodeToStringENS0_12KeyboardCodeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  %3 = tail call fastcc i8* @_ZN2ui5mojomL26KeyboardCodeToStringHelperENS0_12KeyboardCodeE(i32 %1)
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i32 %1) #9
  br label %32

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* nonnull %3) #9
  %8 = icmp ugt i64 %7, -17
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %10) #10
  unreachable

11:                                               ; preds = %6
  %12 = icmp ult i64 %7, 23
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = add nuw i64 %7, 16
  %15 = and i64 %14, -16
  %16 = tail call i8* @_Znwm(i64 %15) #11
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = or i64 %15, -9223372036854775808
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %7, i64* %20, align 8
  br label %27

21:                                               ; preds = %11
  %22 = trunc i64 %7 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %26 = icmp eq i64 %7, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21, %13
  %28 = phi i8* [ %16, %13 ], [ %25, %21 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* nonnull align 1 %3, i64 %7, i1 false) #9
  br label %29

29:                                               ; preds = %21, %27
  %30 = phi i8* [ %25, %21 ], [ %28, %27 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %7
  store i8 0, i8* %31, align 1
  br label %32

32:                                               ; preds = %29, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noinline norecurse nounwind readnone ssp uwtable
define internal fastcc i8* @_ZN2ui5mojomL26KeyboardCodeToStringHelperENS0_12KeyboardCodeE(i32) unnamed_addr #2 {
  %2 = icmp ult i32 %0, 255
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [255 x i8*], [255 x i8*]* @switch.table._ZN2ui5mojomL26KeyboardCodeToStringHelperENS0_12KeyboardCodeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2ui5mojomlsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_12KeyboardCodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  call void @_ZN2ui5mojom20KeyboardCodeToStringENS0_12KeyboardCodeE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %1)
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %7 to i64
  %14 = select i1 %8, i8* %10, i8* %4
  %15 = select i1 %8, i64 %12, i64 %13
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %14, i64 %15) #9
  %17 = load i8, i8* %6, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret %"class.std::__1::basic_ostream"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto17TraceFormatTraitsIN2ui5mojom12KeyboardCodeEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  call void @_ZN2ui5mojom20KeyboardCodeToStringENS0_12KeyboardCodeE(%"class.std::__1::basic_string"* nonnull sret %3, i32 %1)
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noinline norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
