; ModuleID = '../../third_party/skia/src/pdf/SkPDFDevice.cpp'
source_filename = "../../third_party/skia/src/pdf/SkPDFDevice.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.137, %class.SkSpan.138, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.136" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.136" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.137 = type { i32*, i64 }
%class.SkSpan.138 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.139, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.139 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%class.SkStrikeSpec = type <{ %class.SkAutoDescriptor, %class.sk_sp.231, %class.sk_sp.229, %class.sk_sp.139, float, [4 x i8] }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%class.sk_sp.231 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.229 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%"struct.SkPDFGraphicStackState::Entry" = type { %class.SkMatrix, i32, %struct.SkRGBA4f, float, i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkClipStack = type <{ %class.SkDeque, i32, %struct.SkRect, [4 x i8] }>
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMarkerStack = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%class.SkTHashSet = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot" = type { %struct.SkPDFIndirectReference, i32 }
%struct.SkPDFIndirectReference = type { i32 }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%class.SkPDFDocument = type { %class.SkDocument.base, %class.SkTHashMap, %class.SkTHashMap.20, %class.SkTHashMap.29, %class.SkTHashMap.38, %class.SkTHashMap.47, %class.SkTHashMap.56, %class.SkTHashMap.65, %class.SkTHashMap.65, %class.SkTHashMap.74, %class.SkTHashMap.83, %class.SkTHashMap.92, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"class.std::__1::vector", %"class.std::__1::vector.105", %class.SkPDFOffsetMap, %class.SkCanvas, %"class.std::__1::vector.162", %"class.std::__1::vector.182", %class.sk_sp.189, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %struct.SkUUID, %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference, %"struct.SkPDF::Metadata", float, float, %class.SkExecutor*, %class.SkPDFTagTree, %class.SkMutex, %class.SkSemaphore }
%class.SkDocument.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkWStream*, i32 }>
%class.SkTHashMap = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFImageShaderKey, SkTHashMap<SkPDFImageShaderKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair, SkPDFGradientShader::Key, SkTHashMap<SkPDFGradientShader::Key, SkPDFIndirectReference, SkPDFGradientShader::KeyHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.29 = type { %class.SkTHashTable.30 }
%class.SkTHashTable.30 = type { i32, i32, %class.SkAutoTArray.31 }
%class.SkAutoTArray.31 = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.341" }
%"struct.std::__1::pair.341" = type { %struct.SkBitmapKey, %struct.SkPDFIndirectReference }
%struct.SkBitmapKey = type { %struct.SkIRect, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkTHashMap.38 = type { %class.SkTHashTable.39 }
%class.SkTHashTable.39 = type { i32, i32, %class.SkAutoTArray.40 }
%class.SkAutoTArray.40 = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::unique_ptr<SkAdvancedTypefaceMetrics, std::__1::default_delete<SkAdvancedTypefaceMetrics> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.47 = type { %class.SkTHashTable.48 }
%class.SkTHashTable.48 = type { i32, i32, %class.SkAutoTArray.49 }
%class.SkAutoTArray.49 = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<SkString, std::__1::allocator<SkString> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.56 = type { %class.SkTHashTable.57 }
%class.SkTHashTable.57 = type { i32, i32, %class.SkAutoTArray.58 }
%class.SkAutoTArray.58 = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, std::__1::vector<int, std::__1::allocator<int> >, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.65 = type { %class.SkTHashTable.66 }
%class.SkTHashTable.66 = type { i32, i32, %class.SkAutoTArray.67 }
%class.SkAutoTArray.67 = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.74 = type { %class.SkTHashTable.75 }
%class.SkTHashTable.75 = type { i32, i32, %class.SkAutoTArray.76 }
%class.SkAutoTArray.76 = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair, unsigned long, SkTHashMap<unsigned long, SkPDFFont, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.83 = type { %class.SkTHashTable.84 }
%class.SkTHashTable.84 = type { i32, i32, %class.SkAutoTArray.85 }
%class.SkAutoTArray.85 = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFStrokeGraphicState, SkTHashMap<SkPDFStrokeGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.92 = type { %class.SkTHashTable.93 }
%class.SkTHashTable.93 = type { i32, i32, %class.SkAutoTArray.94 }
%class.SkAutoTArray.94 = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair, SkPDFFillGraphicState, SkTHashMap<SkPDFFillGraphicState, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %struct.SkPDFLink* }
%struct.SkPDFLink = type <{ i32, [4 x i8], %class.sk_sp.7, %struct.SkRect, i32, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.8, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::unique_ptr.101"* }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination*, %"class.std::__1::__compressed_pair.107" }
%struct.SkPDFNamedDestination = type <{ %class.sk_sp.7, %struct.SkPoint, %struct.SkPDFIndirectReference, [4 x i8] }>
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %struct.SkPDFNamedDestination* }
%class.SkPDFOffsetMap = type { %"class.std::__1::vector.112", i64 }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { i32*, i32*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { i32* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.119, [384 x i64], %class.sk_sp.120, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.121", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.127" }
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.119 = type { %class.SkMarkerStack* }
%class.sk_sp.120 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.134", %class.SkGlyphRunList, %"class.std::__1::vector.152" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %struct.SkPoint* }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.145, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.145 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.146, %struct.SkRect, i32, %"struct.std::__1::atomic.147" }
%class.SkNVRefCnt.146 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i32 }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { i16*, i16*, %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { i16* }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.std::__1::unique_ptr.164"*, %"class.std::__1::unique_ptr.164"*, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %class.SkPDFDict* }
%class.SkPDFDict = type { %class.SkPDFObject, %"class.std::__1::vector.167" }
%class.SkPDFObject = type { i32 (...)** }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.169" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::unique_ptr.164"* }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %struct.SkPDFIndirectReference* }
%class.sk_sp.189 = type { %class.SkPDFDevice* }
%class.SkPDFDevice = type { %class.SkClipStackDevice, %class.SkMatrix, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, i32, %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream, i8, %struct.SkPDFGraphicStackState, %class.SkPDFDocument* }
%class.SkClipStackDevice = type { %class.SkBaseDevice, [320 x i64], %class.SkClipStack }
%struct.SkPDFGraphicStackState = type { [3 x %"struct.SkPDFGraphicStackState::Entry"], i32, %class.SkDynamicMemoryWStream* }
%struct.SkUUID = type { [16 x i8] }
%"struct.SkPDF::Metadata" = type <{ %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %class.SkString, %"struct.SkTime::DateTime", %"struct.SkTime::DateTime", float, i8, [3 x i8], i32, %"struct.SkPDF::StructureElementNode"*, %class.SkExecutor*, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.190 }
%class.sk_sp.190 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.SkTime::DateTime" = type { i16, i16, i8, i8, i8, i8, i8, i8 }
%"struct.SkPDF::StructureElementNode" = type <{ %class.SkString, %"class.std::__1::vector.191", i32, [4 x i8], %"class.std::__1::vector.112", %"class.SkPDF::AttributeList", %class.SkString, %class.SkString, i32, [4 x i8] }>
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.SkPDF::AttributeList" = type { %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.SkPDFArray* }
%class.SkPDFArray = type { %class.SkPDFObject, %"class.std::__1::vector.202" }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %class.SkPDFUnion*, %class.SkPDFUnion*, %"class.std::__1::__compressed_pair.204" }
%class.SkPDFUnion = type opaque
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %class.SkPDFUnion* }
%class.SkExecutor = type opaque
%class.SkPDFTagTree = type { %class.SkArenaAlloc, %class.SkTHashMap.212, %struct.SkPDFTagNode*, %class.SkTArray, %"class.std::__1::vector.222", %"class.std::__1::vector.112" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkTHashMap.212 = type { %class.SkTHashTable.213 }
%class.SkTHashTable.213 = type { i32, i32, %class.SkAutoTArray.214 }
%class.SkAutoTArray.214 = type { %"class.std::__1::unique_ptr.215" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair, int, SkTHashMap<int, SkPDFTagNode *, SkGoodHash>::Pair>::Slot" = type opaque
%struct.SkPDFTagNode = type opaque
%class.SkTArray = type { %class.SkTArray.221*, i64 }
%class.SkTArray.221 = type opaque
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"struct.SkPDFTagTree::IDTreeEntry"*, %"struct.SkPDFTagTree::IDTreeEntry"*, %"class.std::__1::__compressed_pair.224" }
%"struct.SkPDFTagTree::IDTreeEntry" = type { i32, %struct.SkPDFIndirectReference }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.SkPDFTagTree::IDTreeEntry"* }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkPaint = type <{ %class.sk_sp.229, %class.sk_sp.230, %class.sk_sp.231, %class.sk_sp.232, %class.sk_sp.233, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.230 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.232 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.233 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkJpegEncoder::Options" = type { i32, i32, i32 }
%class.SkBitmap = type { %class.sk_sp.9, %class.SkPixmap, %class.sk_sp.10 }
%class.sk_sp.9 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.10 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.GrDirectContext = type opaque
%"struct.SkBaseDevice::CreateInfo" = type { %struct.SkImageInfo, i32, i32, i8, %class.SkRasterHandleAllocator* }
%class.SkBitmapDevice = type { %class.SkBaseDevice, %class.SkBitmap, i8*, %class.SkRasterClipStack, %"class.std::__1::unique_ptr.234", %class.SkGlyphRunListPainter }
%class.SkRasterClipStack = type { i32, [160 x i8*], %class.SkTStack, %struct.SkIRect }
%class.SkTStack = type { %class.SkDeque, %"struct.SkRasterClipStack::Rec"* }
%"struct.SkRasterClipStack::Rec" = type <{ %class.SkRasterClip, i32, [4 x i8] }>
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.230 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %class.SkBitmap* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.240, %class.SkAutoTMalloc }
%class.SkAutoTArray.240 = type { %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.244 }
%union.anon.244 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.245, i32, %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.2", i8, i8 }>
%class.sk_sp.245 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.246, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.247, %class.SkTDArray.248, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.246 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.247 = type { i8*, i32, i32 }
%class.SkTDArray.248 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.249 }
%class.SkTDArray.249 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.250", [3 x i8] }
%"struct.std::__1::atomic.250" = type { %"struct.std::__1::__atomic_base.251" }
%"struct.std::__1::__atomic_base.251" = type { %"struct.std::__1::__cxx_atomic_impl.252" }
%"struct.std::__1::__cxx_atomic_impl.252" = type { %"struct.std::__1::__cxx_atomic_base_impl.253" }
%"struct.std::__1::__cxx_atomic_base_impl.253" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.257, %class.SkSTArray, %class.SkSTArray.263 }
%class.SkZip.257 = type { %"class.std::__1::tuple.258", i64 }
%"class.std::__1::tuple.258" = type { %"struct.std::__1::__tuple_impl.259" }
%"struct.std::__1::__tuple_impl.259" = type { %"class.std::__1::__tuple_leaf.260", %"class.std::__1::__tuple_leaf.261" }
%"class.std::__1::__tuple_leaf.260" = type { i16* }
%"class.std::__1::__tuple_leaf.261" = type { %struct.SkPoint* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.262 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.262 = type { i16*, i64 }
%class.SkSTArray.263 = type { %class.SkAlignedSTStorage.264, %class.SkTArray.265 }
%class.SkAlignedSTStorage.264 = type { [32 x i8] }
%class.SkTArray.265 = type { %struct.SkPoint*, i64 }
%class.SkDraw = type { %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkPixmap, %class.SkMatrixProvider*, %class.SkRasterClip*, %class.SkPixmap* }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.SkTCopyOnFirstWrite = type { %class.SkPaint*, %class.SkTLazy }
%class.SkTLazy = type { [72 x i8], %class.SkPaint* }
%class.ScopedContentEntry = type { %class.SkPDFDevice*, %class.SkDynamicMemoryWStream*, i32, %struct.SkPDFIndirectReference, %class.SkPath, %class.SkClipStack* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%struct.SkIPoint = type { i32, i32 }
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%class.SkKeyedImage = type <{ %class.sk_sp, %struct.SkBitmapKey, [4 x i8] }>
%class.sk_sp.324 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkScopeExit = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%struct.Rec = type { %class.SkPath*, %struct.SkPoint, %struct.SkPoint* }
%class.SkClusterator = type { i32*, i8*, i32, i32, i8, i32 }
%"class.(anonymous namespace)::GlyphPositioner" = type <{ %class.SkDynamicMemoryWStream*, %struct.SkPoint, float, float, i8, i8, i8, [5 x i8] }>
%class.SkBulkGlyphMetricsAndPaths = type { %class.SkAutoSTArray, %class.sk_sp.284 }
%class.SkAutoSTArray = type { i32, %class.SkGlyph**, [160 x i8] }
%class.sk_sp.284 = type { %"class.SkStrikeCache::Strike"* }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.316", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.285, i64, i64, i32, i32 }
%class.SkTHashTable.285 = type { i32, i32, %class.SkAutoTArray.286 }
%class.SkAutoTArray.286 = type { %"class.std::__1::unique_ptr.287" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.293", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap.300, %"class.std::__1::vector.309", %class.SkArenaAlloc }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp.139, %class.sk_sp.229, %class.sk_sp.231, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.296, i8*, i8*, i8* }
%class.sk_sp.296 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%class.SkTHashMap.300 = type { %class.SkTHashTable.301 }
%class.SkTHashTable.301 = type { i32, i32, %class.SkAutoTArray.302 }
%class.SkAutoTArray.302 = type { %"class.std::__1::unique_ptr.303" }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.340" }
%"struct.std::__1::pair.340" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %class.SkGlyph** }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%"struct.SkClusterator::Cluster" = type { i8*, i32, i32, i32 }
%struct.SkAdvancedTypefaceMetrics = type { %class.SkString, %class.SkString, i32, i8, i8, i16, i16, i16, i16, i16, %struct.SkIRect }
%class.SkPDFFont = type <{ %class.sk_sp.139, %class.SkPDFGlyphUse, %struct.SkPDFIndirectReference, i8, [3 x i8] }>
%class.SkPDFGlyphUse = type <{ %class.SkBitSet, i16, i16, [4 x i8] }>
%class.SkBitSet = type { i64, %"class.std::__1::unique_ptr.281" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { i32* }
%class.SkVertices = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp.7, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.sk_sp.338 = type { %class.SkSpecialImage* }
%class.GrRecordingContext = type opaque
%class.SkImageFilterCache = type { %class.SkRefCnt.base, [4 x i8] }
%class.GrSurfaceDrawContext = type opaque
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.SkDrawShadowRec = type opaque
%struct.SkRSXform = type { float, float, float, float }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.339, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.339 = type { %class.SkImage* }
%class.SkDrawable = type opaque
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%"class.std::__1::__function::__default_alloc_func.360" = type { %class.anon.323 }
%class.anon.323 = type { i8*, %"class.(anonymous namespace)::GlyphPositioner"*, %class.SkDynamicMemoryWStream** }

$_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkBaseDevice15getRasterHandleEv = comdat any

$_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect = comdat any

$_ZN12SkBaseDevice29android_utils_clipWithStencilEv = comdat any

$_ZNK12SkBaseDevice16recordingContextEv = comdat any

$_ZN12SkBaseDevice18surfaceDrawContextEv = comdat any

$_ZN12SkBaseDevice12setImmutableEv = comdat any

$_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap = comdat any

$_ZNK12SkBaseDevice16isNoPixelsDeviceEv = comdat any

$_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap = comdat any

$_ZNK12SkBaseDevice27forceConservativeRasterClipEv = comdat any

$_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN12SkTHashTableI22SkPDFIndirectReferenceS0_N10SkTHashSetIS0_10SkGoodHashE6TraitsEE6resizeEi = comdat any

$_ZNSt3__16vectorI21SkPDFNamedDestinationNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI9SkPDFLinkNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZN12SkTHashTableIN10SkTHashMapI11SkBitmapKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E6resizeEi = comdat any

$_ZN12SkTHashTableIN10SkTHashMapI11SkBitmapKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_ = comdat any

@_ZTV11SkPDFDevice = hidden unnamed_addr constant { [63 x i8*], [6 x i8*] } { [63 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPDFDevice*)* @_ZN11SkPDFDeviceD2Ev to i8*), i8* bitcast (void (%class.SkPDFDevice*)* @_ZN11SkPDFDeviceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice15getRasterHandleEv to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZN12SkBaseDevice29android_utils_clipWithStencilEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16recordingContextEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice18surfaceDrawContextEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*)* @_ZN17SkClipStackDevice6onSaveEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*)* @_ZN17SkClipStackDevice9onRestoreEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %struct.SkRect*, i32, i1)* @_ZN17SkClipStackDevice10onClipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkRRect*, i32, i1)* @_ZN17SkClipStackDevice11onClipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkPath*, i32, i1)* @_ZN17SkClipStackDevice10onClipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.sk_sp.230*)* @_ZN17SkClipStackDevice12onClipShaderE5sk_spI8SkShaderE to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkRegion*, i32)* @_ZN17SkClipStackDevice12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %struct.SkIRect*)* @_ZN17SkClipStackDevice13onReplaceClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %struct.SkIRect*)* @_ZN17SkClipStackDevice26onSetDeviceClipRestrictionEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice10onClipIsAAEv to i8*), i8* bitcast (i1 (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice16onClipIsWideOpenEv to i8*), i8* bitcast (void (%class.SkClipStackDevice*, %class.SkRegion*)* @_ZNK17SkClipStackDevice11onAsRgnClipEP8SkRegion to i8*), i8* bitcast (i32 (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice13onGetClipTypeEv to i8*), i8* bitcast ({ i64, i64 } (%class.SkClipStackDevice*)* @_ZNK17SkClipStackDevice15onDevClipBoundsEv to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkPaint*)* @_ZN11SkPDFDevice9drawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN11SkPDFDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN11SkPDFDevice8drawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN11SkPDFDevice8drawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkRRect*, %class.SkPaint*)* @_ZN11SkPDFDevice9drawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkPath*, %class.SkPaint*, i1)* @_ZN11SkPDFDevice8drawPathERK6SkPathRK7SkPaintb to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN11SkPDFDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN11SkPDFDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN11SkPDFDevice14drawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)* @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN11SkPDFDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN11SkPDFDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkPDFDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN11SkPDFDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.sk_sp.338*, %class.SkPDFDevice*, %class.SkBitmap*)* @_ZN11SkPDFDevice11makeSpecialERK8SkBitmap to i8*), i8* bitcast (void (%class.sk_sp.338*, %class.SkPDFDevice*, %class.SkImage*)* @_ZN11SkPDFDevice11makeSpecialEPK7SkImage to i8*), i8* bitcast (void (%class.sk_sp.338*, %class.SkBaseDevice*, %struct.SkIRect*, i1)* @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice12setImmutableEv to i8*), i8* bitcast (void (%class.sk_sp.324*, %class.SkPDFDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN11SkPDFDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBaseDevice* (%class.SkPDFDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)* @_ZN11SkPDFDevice14onCreateDeviceERKN12SkBaseDevice10CreateInfoEPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16isNoPixelsDeviceEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice27forceConservativeRasterClipEv to i8*), i8* bitcast (%class.SkImageFilterCache* (%class.SkPDFDevice*)* @_ZN11SkPDFDevice19getImageFilterCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%class.SkPDFDevice*)* @_ZThn16_N11SkPDFDeviceD1Ev to i8*), i8* bitcast (void (%class.SkPDFDevice*)* @_ZThn16_N11SkPDFDeviceD0Ev to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"ExtGState\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"SMask\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"None\00", align 1
@__const._ZN11SkPDFDevice18drawGlyphRunAsPathERK10SkGlyphRun7SkPointRK7SkPaint.tmpGlyphRun = private unnamed_addr constant %class.SkGlyphRun { %class.SkZip { %"class.std::__1::tuple" { %"struct.std::__1::__tuple_impl" { %"class.std::__1::__tuple_leaf" { i16* inttoptr (i64 -6148914691236517206 to i16*) }, %"class.std::__1::__tuple_leaf.136" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } }, i64 -6148914691236517206 }, %class.SkSpan { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 }, %class.SkSpan.137 { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, %class.SkSpan.138 { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i64 -6148914691236517206 }, %class.SkFont <{ %class.sk_sp.139 { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, i8 -86 }> }, align 8
@.str.3 = private unnamed_addr constant [47 x i8] c"../../third_party/skia/src/pdf/SkPDFDevice.cpp\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"SkPDF: SkTypeface::MakeDefault() returned nullptr.\0A\00", align 1
@__const._ZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaint.strikeSpec = private unnamed_addr constant %class.SkStrikeSpec <{ %class.SkAutoDescriptor { %class.SkDescriptor* inttoptr (i64 -6148914691236517206 to %class.SkDescriptor*), [120 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.sk_sp.231 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.229 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.139 { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.5 = private unnamed_addr constant [4 x i8] c"BT\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"/ReversedChars BMC\0A\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"/Span<</ActualText <\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"> >> BDC\0A\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c" Tf\0A\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c" Do\0A\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"q\0A\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"Q\0A\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"DeviceGray\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"Q\0Aq\0A\00", align 1
@__const._ZN11SkPDFDevice17setUpContentEntryEPK11SkClipStackRK8SkMatrixRK7SkPaintfP22SkPDFIndirectReference.entry = private unnamed_addr constant %"struct.SkPDFGraphicStackState::Entry" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }, align 4
@__const._ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath.empty = private unnamed_addr constant %class.SkClipStack <{ %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath.shapeDev = private unnamed_addr constant { { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }, [320 x i64], %class.SkClipStack }, %class.SkMatrix, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, i32, [4 x i8], %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream, i8, [7 x i8], { [3 x %"struct.SkPDFGraphicStackState::Entry"], i32, [4 x i8], %class.SkDynamicMemoryWStream* }, %class.SkPDFDocument* } { { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }, [320 x i64], %class.SkClipStack } { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 } { %class.SkRefCnt.base { %class.SkRefCntBase.base <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.0" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 -1431655766 } } } } } }> }, [4 x i8] c"\AA\AA\AA\AA", %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*), %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.1 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } }, [320 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.SkClipStack <{ %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA" }> }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkTHashSet { %class.SkTHashTable { i32 -1431655766, i32 -1431655766, %class.SkAutoTArray { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* inttoptr (i64 -6148914691236517206 to %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*) } } } } } }, %class.SkTHashSet { %class.SkTHashTable { i32 -1431655766, i32 -1431655766, %class.SkAutoTArray { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* inttoptr (i64 -6148914691236517206 to %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*) } } } } } }, %class.SkTHashSet { %class.SkTHashTable { i32 -1431655766, i32 -1431655766, %class.SkAutoTArray { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* inttoptr (i64 -6148914691236517206 to %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*) } } } } } }, %class.SkTHashSet { %class.SkTHashTable { i32 -1431655766, i32 -1431655766, %class.SkAutoTArray { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* inttoptr (i64 -6148914691236517206 to %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*) } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, %class.SkDynamicMemoryWStream { %class.SkWStream { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), %"struct.SkDynamicMemoryWStream::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDynamicMemoryWStream::Block"*), i64 -6148914691236517206 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { [3 x %"struct.SkPDFGraphicStackState::Entry"], i32, [4 x i8], %class.SkDynamicMemoryWStream* } { [3 x %"struct.SkPDFGraphicStackState::Entry"] [%"struct.SkPDFGraphicStackState::Entry" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }, %"struct.SkPDFGraphicStackState::Entry" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }, %"struct.SkPDFGraphicStackState::Entry" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkDynamicMemoryWStream* inttoptr (i64 -6148914691236517206 to %class.SkDynamicMemoryWStream*) }, %class.SkPDFDocument* inttoptr (i64 -6148914691236517206 to %class.SkPDFDocument*) }, align 8
@__const._ZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS2_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrix.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.119, [384 x i64], %class.sk_sp.120, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.121", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.127" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.119 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.120 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.121" { %"class.std::__1::__compressed_pair.122" { %"struct.std::__1::__compressed_pair_elem.123" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.127" { %"class.std::__1::__compressed_pair.128" { %"struct.std::__1::__compressed_pair_elem.129" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTV17SkClipStackDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8
@_ZTV12SkBaseDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8
@_ZTV6SkDraw = external unnamed_addr constant { [7 x i8*] }, align 8
@.str.17 = private unnamed_addr constant [12 x i8] c"/P <</MCID \00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c" >>BDC\0A\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"> Tj\0A\00", align 1
@_ZN19SkHexadecimalDigits6gUpperE = external local_unnamed_addr constant [16 x i8], align 16
@.str.20 = private unnamed_addr constant [5 x i8] c"1 0 \00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c" -1 \00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c" Tm\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c" Td \00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"EMC\0A\00", align 1
@__const._ZL39populate_graphic_state_entry_from_paintP13SkPDFDocumentRK8SkMatrixPK11SkClipStack7SkIRectRK7SkPaintS3_fPN22SkPDFGraphicStackState5EntryEP10SkTHashSetI22SkPDFIndirectReference10SkGoodHashESI_.gradientInfo = private unnamed_addr constant { i32, [4 x i8], i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i32* inttoptr (i64 -6148914691236517206 to i32*), float* inttoptr (i64 -6148914691236517206 to float*), [2 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, i32 -1431655766 }, align 8
@__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.229 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.230 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.231 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.232 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.233 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.27 = private unnamed_addr constant [4 x i8] c"ET\0A\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_3FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS7_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrixE3$_5FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8

@_ZN11SkPDFDeviceC1E7SkISizeP13SkPDFDocumentRK8SkMatrix = hidden unnamed_addr alias void (%class.SkPDFDevice*, i64, %class.SkPDFDocument*, %class.SkMatrix*), void (%class.SkPDFDevice*, i64, %class.SkPDFDocument*, %class.SkMatrix*)* @_ZN11SkPDFDeviceC2E7SkISizeP13SkPDFDocumentRK8SkMatrix
@_ZN11SkPDFDeviceD1Ev = hidden unnamed_addr alias void (%class.SkPDFDevice*), void (%class.SkPDFDevice*)* @_ZN11SkPDFDeviceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z23mask_to_greyscale_imageP6SkMask(%class.sk_sp* noalias nocapture sret, %struct.SkMask* nocapture) local_unnamed_addr #0 {
  %3 = alloca %class.SkPixmap, align 8
  %4 = alloca %class.SkDynamicMemoryWStream, align 8
  %5 = alloca %"struct.SkJpegEncoder::Options", align 4
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp.7, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %9, align 8
  %10 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #14
  %11 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %12, %14
  %16 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %15 to i64
  %24 = or i64 %22, %23
  %25 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 0
  %26 = bitcast %struct.SkMask* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = bitcast %class.SkPixmap* %3 to i64*
  store i64 %27, i64* %31, align 8
  %32 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 1
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %33, align 8
  %34 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 1
  %35 = bitcast i32* %34 to i64*
  store i64 4294967307, i64* %35, align 8
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 1
  %37 = bitcast %struct.SkISize* %36 to i64*
  store i64 %24, i64* %37, align 8
  %38 = bitcast %class.SkDynamicMemoryWStream* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #14
  %39 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %41 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #14
  %42 = bitcast %"struct.SkJpegEncoder::Options"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %42) #14
  %43 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %5, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.SkJpegEncoder::Options", %"struct.SkJpegEncoder::Options"* %5, i64 0, i32 2
  store i32 0, i32* %44, align 4
  store i32 0, i32* %45, align 4
  store i32 50, i32* %43, align 4
  %46 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0
  %47 = call zeroext i1 @_ZN13SkJpegEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream* nonnull %46, %class.SkPixmap* nonnull dereferenceable(40) %3, %"struct.SkJpegEncoder::Options"* nonnull dereferenceable(12) %5) #14
  br i1 %47, label %48, label %71

48:                                               ; preds = %2
  %49 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.7* nonnull sret %7, %class.SkDynamicMemoryWStream* nonnull %4) #14
  call void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp* nonnull sret %6, %class.sk_sp.7* nonnull %7) #14
  %50 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %51 = bitcast %class.sk_sp* %6 to i64*
  %52 = load i64, i64* %51, align 8
  store %class.SkImage* null, %class.SkImage** %50, align 8
  %53 = bitcast %class.sk_sp* %0 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %7, i64 0, i32 0
  %55 = load %class.SkData*, %class.SkData** %54, align 8
  %56 = bitcast %class.SkData* %55 to i8*
  %57 = icmp eq %class.SkData* %55, null
  %58 = inttoptr i64 %52 to %class.SkImage*
  br i1 %57, label %66, label %59

59:                                               ; preds = %48
  %60 = getelementptr inbounds %class.SkData, %class.SkData* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %55) #14
  call void @_ZN6SkDatadlEPv(i8* nonnull %56) #14
  br label %64

64:                                               ; preds = %63, %59
  %65 = load %class.SkImage*, %class.SkImage** %9, align 8
  br label %66

66:                                               ; preds = %64, %48
  %67 = phi %class.SkImage* [ %65, %64 ], [ %58, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  %68 = icmp eq %class.SkImage* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = load i8*, i8** %25, align 8
  call void @_ZN6SkMask9FreeImageEPv(i8* %70) #14
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %42) #14
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #14
  br label %76

71:                                               ; preds = %66, %2
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %42) #14
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #14
  %72 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  call void @_ZN7SkImage14MakeFromRasterERK8SkPixmapPFvPKvPvES5_(%class.sk_sp* nonnull sret %8, %class.SkPixmap* nonnull dereferenceable(40) %3, void (i8*, i8*)* nonnull @"_ZZ23mask_to_greyscale_imageP6SkMaskEN3$_08__invokeEPKvPv", i8* null) #14
  %73 = bitcast %class.sk_sp* %8 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %class.sk_sp* %0 to i64*
  store i64 %74, i64* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  br label %76

76:                                               ; preds = %69, %71
  store i8* null, i8** %25, align 8
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %77 to i8*
  call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %76, %79, %83
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN13SkJpegEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream*, %class.SkPixmap* dereferenceable(40), %"struct.SkJpegEncoder::Options"* dereferenceable(12)) local_unnamed_addr #2

declare void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp* sret, %class.sk_sp.7*) local_unnamed_addr #2

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.7* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #2

declare void @_ZN6SkMask9FreeImageEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #3

declare void @_ZN7SkImage14MakeFromRasterERK8SkPixmapPFvPKvPvES5_(%class.sk_sp* sret, %class.SkPixmap* dereferenceable(40), void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z30alpha_image_to_greyscale_imagePK7SkImage(%class.sk_sp* noalias sret, %class.SkImage*) local_unnamed_addr #0 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = alloca %struct.SkImageInfo, align 16
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #14
  %11 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = zext i32 %9 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i32 %7 to i64
  %15 = or i64 %13, %14
  %16 = bitcast %struct.SkImageInfo* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4294967307>, <2 x i64>* %16, align 16, !alias.scope !2
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %18 = bitcast %struct.SkISize* %17 to i64*
  store i64 %15, i64* %18, align 16, !alias.scope !2
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %3, %struct.SkImageInfo* nonnull dereferenceable(24) %4) #14
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.SkColorSpace*, %class.SkColorSpace** %19, align 16
  %21 = icmp eq %class.SkColorSpace* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = bitcast %class.SkColorSpace* %20 to i8*
  call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %26, %22, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %29 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %30, align 16, !alias.scope !5
  %31 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %32 = bitcast %struct.SkISize* %31 to i64*
  store i64 %15, i64* %32, align 16, !alias.scope !5
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = call zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage* %1, %class.GrDirectContext* null, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i8* %34, i64 %36, i32 0, i32 0, i32 0) #14
  %38 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.SkColorSpace*, %class.SkColorSpace** %38, align 16
  %40 = icmp eq %class.SkColorSpace* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %28
  %42 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = bitcast %class.SkColorSpace* %39 to i8*
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %28, %41, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  br i1 %37, label %50, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %49, align 8
  br label %51

50:                                               ; preds = %47
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %3) #14
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp* sret %0, %class.SkBitmap* nonnull %3) #14
  br label %51

51:                                               ; preds = %50, %48
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #14
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage*, %class.GrDirectContext*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp* sret, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBaseDevice* @_ZN11SkPDFDevice14onCreateDeviceERKN12SkBaseDevice10CreateInfoEPK7SkPaint(%class.SkPDFDevice* nocapture readonly, %"struct.SkBaseDevice::CreateInfo"* dereferenceable(48), %class.SkPaint* readonly) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSurfaceProps, align 4
  %5 = icmp eq %class.SkPaint* %2, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 4, i32 0
  %8 = load %class.SkImageFilter*, %class.SkImageFilter** %7, align 8
  %9 = icmp eq %class.SkImageFilter* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 3, i32 0
  %12 = load %class.SkColorFilter*, %class.SkColorFilter** %11, align 8
  %13 = icmp eq %class.SkColorFilter* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 0
  %16 = bitcast %class.SkSurfaceProps* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %4, i32 0, i32 0) #14
  %17 = call %class.SkBitmapDevice* @_ZN14SkBitmapDevice6CreateERK11SkImageInfoRK14SkSurfacePropsbP23SkRasterHandleAllocator(%struct.SkImageInfo* dereferenceable(24) %15, %class.SkSurfaceProps* nonnull dereferenceable(8) %4, i1 zeroext false, %class.SkRasterHandleAllocator* null) #14
  %18 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %17, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %29

19:                                               ; preds = %10, %3
  %20 = tail call i8* @_Znwm(i64 3360) #15
  %21 = bitcast i8* %20 to %class.SkPDFDevice*
  %22 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 0, i32 1
  %23 = bitcast %struct.SkISize* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %26 = load %class.SkPDFDocument*, %class.SkPDFDocument** %25, align 8
  %27 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  tail call void @_ZN11SkPDFDeviceC2E7SkISizeP13SkPDFDocumentRK8SkMatrix(%class.SkPDFDevice* nonnull %21, i64 %24, %class.SkPDFDocument* %26, %class.SkMatrix* dereferenceable(40) %27)
  %28 = bitcast i8* %20 to %class.SkBaseDevice*
  br label %29

29:                                               ; preds = %19, %14
  %30 = phi %class.SkBaseDevice* [ %18, %14 ], [ %28, %19 ]
  ret %class.SkBaseDevice* %30
}

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDeviceC2E7SkISizeP13SkPDFDocumentRK8SkMatrix(%class.SkPDFDevice*, i64, %class.SkPDFDocument*, %class.SkMatrix* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = alloca %class.SkSurfaceProps, align 4
  %7 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %9 = bitcast %struct.SkISize* %8 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #14, !alias.scope !10
  store i64 %1, i64* %9, align 8, !alias.scope !13
  %10 = bitcast %class.SkSurfaceProps* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %6, i32 0, i32 0) #14
  %11 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0
  call void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice* %11, %struct.SkImageInfo* nonnull dereferenceable(24) %5, %class.SkSurfaceProps* nonnull dereferenceable(8) %6) #14
  %12 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 1, i64 0
  %16 = bitcast i64* %15 to i8*
  call void @_ZN11SkClipStackC1EPvm(%class.SkClipStack* %14, i8* %16, i64 2560) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %4, %20, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV11SkPDFDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV11SkPDFDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %27 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1
  %28 = bitcast %class.SkMatrix* %27 to i8*
  %29 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 40, i1 false)
  %30 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2
  %31 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7, i32 0, i32 0
  %32 = bitcast %class.SkTHashSet* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 68, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %33 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7, i32 1
  %34 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #14
  %35 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 8, i32 1
  %37 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10
  %38 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 25, i1 false)
  %39 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %40 = bitcast %struct.SkPDFGraphicStackState* %37 to i8*
  %41 = bitcast %class.SkMatrix* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 40, i1 false) #14
  %42 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 1
  store i32 2, i32* %42, align 4
  %43 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 2, i32 0
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %44, align 4
  %45 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 3
  store float 1.000000e+00, float* %45, align 4
  %46 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 4
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 5
  store i32 -1, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1
  %49 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %50 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %48 to i8*
  %51 = bitcast %class.SkMatrix* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 40, i1 false) #14
  %52 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 1
  store i32 2, i32* %52, align 4
  %53 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 0
  store float 0.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 1
  store float 0.000000e+00, float* %54, align 4
  %55 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 2
  store float 0.000000e+00, float* %55, align 4
  %56 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 3
  store float 1.000000e+00, float* %56, align 4
  %57 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 3
  store float 1.000000e+00, float* %57, align 4
  %58 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 4
  store i32 -1, i32* %58, align 4
  %59 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 5
  store i32 -1, i32* %59, align 4
  %60 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2
  %61 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %62 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %60 to i8*
  %63 = bitcast %class.SkMatrix* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 40, i1 false) #14
  %64 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 1
  store i32 2, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 2, i32 0
  %66 = bitcast float* %65 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %66, align 4
  %67 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 3
  store float 1.000000e+00, float* %67, align 4
  %68 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 4
  store i32 -1, i32* %68, align 4
  %69 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 5
  store i32 -1, i32* %69, align 4
  %70 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 1
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 2
  store %class.SkDynamicMemoryWStream* null, %class.SkDynamicMemoryWStream** %71, align 8
  %72 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  store %class.SkPDFDocument* %2, %class.SkPDFDocument** %72, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDeviceD2Ev(%class.SkPDFDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV11SkPDFDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV11SkPDFDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 8
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %4) #14
  %5 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  tail call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* %5) #14
  %6 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %6, align 8
  store %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %6, align 8
  %8 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %7 to i8*
  tail call void @_ZdaPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %12, align 8
  store %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %12, align 8
  %14 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %13 to i8*
  tail call void @_ZdaPv(i8* %16) #15
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %18, align 8
  store %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %18, align 8
  %20 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %19 to i8*
  tail call void @_ZdaPv(i8* %22) #15
  br label %23

23:                                               ; preds = %17, %21
  %24 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %24, align 8
  store %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %24, align 8
  %26 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %25 to i8*
  tail call void @_ZdaPv(i8* %28) #15
  br label %29

29:                                               ; preds = %23, %27
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV17SkClipStackDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %30 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  tail call void @_ZN11SkClipStackD1Ev(%class.SkClipStack* %30) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %31 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorSpace* %32 to i8*
  tail call void @_ZdlPv(i8* %39) #15
  br label %40

40:                                               ; preds = %29, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N11SkPDFDeviceD1Ev(%class.SkPDFDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 -1, i32 10, i32 2
  %3 = bitcast %class.SkDynamicMemoryWStream** %2 to %class.SkPDFDevice*
  tail call void @_ZN11SkPDFDeviceD2Ev(%class.SkPDFDevice* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDeviceD0Ev(%class.SkPDFDevice*) unnamed_addr #0 align 2 {
  tail call void @_ZN11SkPDFDeviceD2Ev(%class.SkPDFDevice* %0) #14
  %2 = bitcast %class.SkPDFDevice* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N11SkPDFDeviceD0Ev(%class.SkPDFDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 -1, i32 10, i32 2
  %3 = bitcast %class.SkDynamicMemoryWStream** %2 to %class.SkPDFDevice*
  tail call void @_ZN11SkPDFDeviceD2Ev(%class.SkPDFDevice* %3) #14
  %4 = bitcast %class.SkDynamicMemoryWStream** %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice5resetEv(%class.SkPDFDevice*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkMatrix, align 8
  %3 = alloca %class.SkMatrix, align 8
  %4 = alloca %class.SkMatrix, align 8
  %5 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %8, align 8
  %10 = bitcast %class.SkAutoTArray* %7 to i64*
  store i64 0, i64* %10, align 8
  %11 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %9, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %9 to i8*
  tail call void @_ZdaPv(i8* %13) #15
  br label %14

14:                                               ; preds = %1, %12
  %15 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3, i32 0, i32 0
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3, i32 0, i32 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3, i32 0, i32 2
  %18 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %18, align 8
  %20 = bitcast %class.SkAutoTArray* %17 to i64*
  store i64 0, i64* %20, align 8
  %21 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  %23 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %19 to i8*
  tail call void @_ZdaPv(i8* %23) #15
  br label %24

24:                                               ; preds = %14, %22
  %25 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4, i32 0, i32 0
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4, i32 0, i32 1
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4, i32 0, i32 2
  %28 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %28, align 8
  %30 = bitcast %class.SkAutoTArray* %27 to i64*
  store i64 0, i64* %30, align 8
  %31 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %29 to i8*
  tail call void @_ZdaPv(i8* %33) #15
  br label %34

34:                                               ; preds = %24, %32
  %35 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5, i32 0, i32 0
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5, i32 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5, i32 0, i32 2
  %38 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %38, align 8
  %40 = bitcast %class.SkAutoTArray* %37 to i64*
  store i64 0, i64* %40, align 8
  %41 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %39, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %39 to i8*
  tail call void @_ZdaPv(i8* %43) #15
  br label %44

44:                                               ; preds = %34, %42
  %45 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  tail call void @_ZN22SkDynamicMemoryWStream5resetEv(%class.SkDynamicMemoryWStream* %45) #14
  %46 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46)
  %47 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47)
  %48 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48)
  %49 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %50 = bitcast %class.SkMatrix* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 4 %50, i64 40, i1 false)
  %51 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %52 = bitcast %class.SkMatrix* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 4 %52, i64 40, i1 false)
  %53 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %54 = bitcast %class.SkMatrix* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 4 %54, i64 40, i1 false)
  %55 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10
  %56 = bitcast %struct.SkPDFGraphicStackState* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %46, i64 40, i1 false)
  %57 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 1
  store i32 2, i32* %57, align 8
  %58 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 2, i32 0
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %59, align 4
  %60 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 3
  store float 1.000000e+00, float* %60, align 4
  %61 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 4
  store i32 -1, i32* %61, align 8
  %62 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 5
  store i32 -1, i32* %62, align 4
  %63 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1
  %64 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %47, i64 40, i1 false)
  %65 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 1
  store i32 2, i32* %65, align 8
  %66 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 0
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %67, align 4
  %68 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 3
  store float 1.000000e+00, float* %68, align 4
  %69 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 4
  store i32 -1, i32* %69, align 8
  %70 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 5
  store i32 -1, i32* %70, align 4
  %71 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2
  %72 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* nonnull align 8 %48, i64 40, i1 false)
  %73 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 1
  store i32 2, i32* %73, align 8
  %74 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 2, i32 0
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %75, align 4
  %76 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 3
  store float 1.000000e+00, float* %76, align 4
  %77 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 4
  store i32 -1, i32* %77, align 8
  %78 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 5
  store i32 -1, i32* %78, align 4
  %79 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 1
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 2
  store %class.SkDynamicMemoryWStream* null, %class.SkDynamicMemoryWStream** %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48)
  ret void
}

declare void @_ZN22SkDynamicMemoryWStream5resetEv(%class.SkDynamicMemoryWStream*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice14drawAnnotationERK6SkRectPKcP6SkData(%class.SkPDFDevice*, %struct.SkRect* dereferenceable(16), i8* nocapture readonly, %class.SkData*) unnamed_addr #6 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %10 = alloca %struct.SkPDFNamedDestination, align 8
  %11 = alloca %class.SkPath, align 8
  %12 = alloca %class.SkPath, align 8
  %13 = alloca %class.SkPath, align 8
  %14 = alloca %"class.std::__1::unique_ptr.101", align 8
  %15 = icmp eq %class.SkData* %3, null
  br i1 %15, label %246, label %16

16:                                               ; preds = %4
  %17 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #14
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %19 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5
  %20 = bitcast %class.SkM44* %19 to i32*
  %21 = load i32, i32* %20, align 4, !noalias !16
  %22 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 4
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4, !noalias !16
  %25 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 12
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4, !noalias !16
  %28 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 1
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4, !noalias !16
  %31 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 5
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4, !noalias !16
  %34 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 13
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4, !noalias !16
  %37 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 3
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4, !noalias !16
  %40 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 7
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4, !noalias !16
  %43 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i64 15
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4, !noalias !16
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 1
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 2
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 3
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 5
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 6
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 7
  %53 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  %54 = bitcast %class.SkMatrix* %7 to i32*
  store i32 %21, i32* %54, align 4, !alias.scope !19
  %55 = bitcast float* %46 to i32*
  store i32 %24, i32* %55, align 4, !alias.scope !19
  %56 = bitcast float* %47 to i32*
  store i32 %27, i32* %56, align 4, !alias.scope !19
  %57 = bitcast float* %48 to i32*
  store i32 %30, i32* %57, align 4, !alias.scope !19
  %58 = bitcast float* %49 to i32*
  store i32 %33, i32* %58, align 4, !alias.scope !19
  %59 = bitcast float* %50 to i32*
  store i32 %36, i32* %59, align 4, !alias.scope !19
  %60 = bitcast float* %51 to i32*
  store i32 %39, i32* %60, align 4, !alias.scope !19
  %61 = bitcast float* %52 to i32*
  store i32 %42, i32* %61, align 4, !alias.scope !19
  %62 = bitcast float* %53 to i32*
  store i32 %45, i32* %62, align 4, !alias.scope !19
  store i32 128, i32* %18, align 4, !alias.scope !19
  %63 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %64 = load %class.SkPDFDocument*, %class.SkPDFDocument** %63, align 8
  %65 = tail call dereferenceable(40) %class.SkMatrix* @_ZNK13SkPDFDocument20currentPageTransformEv(%class.SkPDFDocument* %64) #14
  %66 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %7, %class.SkMatrix* dereferenceable(40) %65) #14
  %67 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %70 = load float, float* %69, align 4
  %71 = fcmp olt float %68, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %16
  %73 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %76 = load float, float* %75, align 4
  %77 = fcmp uge float %74, %76
  br i1 %77, label %78, label %148

78:                                               ; preds = %16, %72
  %79 = call i8* @_Z17SkPDFGetNodeIdKeyv() #14
  %80 = call i32 @strcmp(i8* %2, i8* %79) #16
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %78
  %83 = getelementptr inbounds %class.SkData, %class.SkData* %3, i64 0, i32 4
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 4
  br i1 %85, label %86, label %245

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.SkData, %class.SkData* %3, i64 0, i32 3
  %88 = bitcast i8** %87 to i32**
  %89 = load i32*, i32** %88, align 8
  %90 = load i32, i32* %89, align 1
  %91 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 6
  store i32 %90, i32* %91, align 8
  br label %245

92:                                               ; preds = %78
  %93 = call i8* @_ZN16SkAnnotationKeys21Define_Named_Dest_KeyEv() #14
  %94 = call i32 @strcmp(i8* %93, i8* %2) #16
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %245

96:                                               ; preds = %92
  %97 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #14
  %98 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %99 = load float, float* %67, align 4
  %100 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %101 = load float, float* %100, align 4
  %102 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102)
  %103 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %104 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %104, align 8
  %105 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %103, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %105, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* %98, float %99, float %101, %struct.SkPoint* nonnull %103) #14
  %106 = bitcast <2 x float>* %5 to i64*
  %107 = load i64, i64* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102)
  %108 = bitcast <2 x float>* %8 to i64*
  store i64 %107, i64* %108, align 8
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %7, %struct.SkPoint* nonnull %9, %struct.SkPoint* nonnull %9, i32 1) #14
  %109 = load %class.SkPDFDocument*, %class.SkPDFDocument** %63, align 8
  %110 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %109, i64 0, i32 19, i32 0, i32 1
  %111 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %110, align 8
  %112 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %111, i64 -1, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = bitcast %struct.SkPDFNamedDestination* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #14
  %115 = getelementptr inbounds %class.SkData, %class.SkData* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 1 monotonic, !noalias !22
  %117 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %10, i64 0, i32 0, i32 0
  store %class.SkData* %3, %class.SkData** %117, align 8, !alias.scope !22
  %118 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %10, i64 0, i32 1
  %119 = bitcast %struct.SkPoint* %118 to i64*
  %120 = load i64, i64* %108, align 8
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %10, i64 0, i32 2, i32 0
  store i32 %113, i32* %121, align 8
  %122 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %109, i64 0, i32 15, i32 0, i32 1
  %123 = load %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination** %122, align 8
  %124 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %109, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %125 = load %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination** %124, align 8
  %126 = icmp ult %struct.SkPDFNamedDestination* %123, %125
  br i1 %126, label %127, label %136

127:                                              ; preds = %96
  %128 = ptrtoint %class.SkData* %3 to i64
  store %class.SkData* null, %class.SkData** %117, align 8
  %129 = bitcast %struct.SkPDFNamedDestination* %123 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %123, i64 0, i32 1
  %131 = bitcast %struct.SkPoint* %130 to i8*
  %132 = bitcast %struct.SkPoint* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 12, i1 false) #14
  %133 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %123, i64 1
  %134 = ptrtoint %struct.SkPDFNamedDestination* %133 to i64
  %135 = bitcast %struct.SkPDFNamedDestination** %122 to i64*
  store i64 %134, i64* %135, align 8
  br label %138

136:                                              ; preds = %96
  %137 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %109, i64 0, i32 15
  call void @_ZNSt3__16vectorI21SkPDFNamedDestinationNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.105"* %137, %struct.SkPDFNamedDestination* nonnull dereferenceable(24) %10) #14
  br label %138

138:                                              ; preds = %127, %136
  %139 = load %class.SkData*, %class.SkData** %117, align 8
  %140 = icmp eq %class.SkData* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %class.SkData, %class.SkData* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 -1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %139) #14
  %146 = bitcast %class.SkData* %139 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %146) #14
  br label %147

147:                                              ; preds = %138, %141, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #14
  br label %245

148:                                              ; preds = %72
  %149 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #14
  %150 = getelementptr inbounds %class.SkPath, %class.SkPath* %11, i64 0, i32 0, i32 0
  %151 = bitcast %class.SkPath* %12 to i8*
  %152 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %12, %struct.SkRect* dereferenceable(16) %1, i32 0, i32 0) #14
  %153 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 16, i1 false) #14, !alias.scope !25
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %11) #14
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %12, %class.SkMatrix* dereferenceable(40) %153, %class.SkPath* nonnull %11, i32 1) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #14
  %154 = bitcast %class.SkPath* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #14
  %155 = bitcast %class.SkPath* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %13) #14
  %156 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  call void @_Z18SkClipStack_AsPathRK11SkClipStackP6SkPath(%class.SkClipStack* dereferenceable(80) %156, %class.SkPath* nonnull %13) #14
  %157 = call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* nonnull dereferenceable(16) %13, %class.SkPath* nonnull dereferenceable(16) %11, i32 1, %class.SkPath* nonnull %11) #14
  %158 = load %class.SkPathRef*, %class.SkPathRef** %150, align 8
  %159 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %158, i64 0, i32 9
  %160 = load i8, i8* %159, align 8
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %171, label %162

162:                                              ; preds = %148
  %163 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %158, i64 0, i32 1
  %164 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %158, i64 0, i32 3, i32 0
  %165 = load %struct.SkPoint*, %struct.SkPoint** %164, align 8
  %166 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %158, i64 0, i32 3, i32 2
  %167 = load i32, i32* %166, align 4
  %168 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %163, %struct.SkPoint* %165, i32 %167) #14
  %169 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %158, i64 0, i32 10
  %170 = zext i1 %168 to i8
  store i8 %170, i8* %169, align 1
  store i8 0, i8* %159, align 8
  br label %171

171:                                              ; preds = %148, %162
  %172 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %158, i64 0, i32 1
  %173 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173)
  %174 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -1, i64 16, i1 false) #14
  %175 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %7, %struct.SkRect* nonnull %174, %struct.SkRect* dereferenceable(16) %172, i32 1) #14
  %176 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %177 = load <2 x float>, <2 x float>* %176, align 8
  %178 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %179 = load <2 x float>, <2 x float>* %178, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173)
  %180 = extractelement <2 x float> %177, i32 0
  %181 = extractelement <2 x float> %179, i32 0
  %182 = fcmp olt float %180, %181
  br i1 %182, label %183, label %244

183:                                              ; preds = %171
  %184 = extractelement <2 x float> %177, i32 1
  %185 = extractelement <2 x float> %179, i32 1
  %186 = fcmp uge float %184, %185
  br i1 %186, label %244, label %187

187:                                              ; preds = %183
  %188 = call i8* @_ZN16SkAnnotationKeys7URL_KeyEv() #14
  %189 = call i32 @strcmp(i8* %188, i8* %2) #16
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %187
  %192 = call i8* @_ZN16SkAnnotationKeys19Link_Named_Dest_KeyEv() #14
  %193 = call i32 @strcmp(i8* %192, i8* %2) #16
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %244

195:                                              ; preds = %191, %187
  %196 = phi i32 [ 1, %187 ], [ 2, %191 ]
  %197 = bitcast %"class.std::__1::unique_ptr.101"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #14
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %14, i64 0, i32 0, i32 0, i32 0
  %199 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 6
  %200 = call i8* @_Znwm(i64 40) #15
  %201 = load i32, i32* %199, align 4
  %202 = bitcast i8* %200 to i32*
  store i32 %196, i32* %202, align 8
  %203 = getelementptr inbounds %class.SkData, %class.SkData* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 1 monotonic, !noalias !28
  %205 = getelementptr inbounds i8, i8* %200, i64 8
  %206 = bitcast i8* %205 to %class.SkData**
  store %class.SkData* %3, %class.SkData** %206, align 8, !alias.scope !28
  %207 = getelementptr inbounds i8, i8* %200, i64 16
  %208 = bitcast i8* %207 to <2 x float>*
  store <2 x float> %177, <2 x float>* %208, align 8
  %209 = getelementptr inbounds i8, i8* %200, i64 24
  %210 = bitcast i8* %209 to <2 x float>*
  store <2 x float> %179, <2 x float>* %210, align 8
  %211 = getelementptr inbounds i8, i8* %200, i64 32
  %212 = bitcast i8* %211 to i32*
  store i32 %201, i32* %212, align 8
  %213 = bitcast %"class.std::__1::unique_ptr.101"* %14 to i8**
  store i8* %200, i8** %213, align 8
  %214 = load %class.SkPDFDocument*, %class.SkPDFDocument** %63, align 8
  %215 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %214, i64 0, i32 14, i32 0, i32 1
  %216 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %215, align 8
  %217 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %214, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %218 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %217, align 8
  %219 = icmp ult %"class.std::__1::unique_ptr.101"* %216, %218
  br i1 %219, label %220, label %226

220:                                              ; preds = %195
  %221 = ptrtoint i8* %200 to i64
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %198, align 8
  %222 = bitcast %"class.std::__1::unique_ptr.101"* %216 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %216, i64 1
  %224 = ptrtoint %"class.std::__1::unique_ptr.101"* %223 to i64
  %225 = bitcast %"class.std::__1::unique_ptr.101"** %215 to i64*
  store i64 %224, i64* %225, align 8
  br label %228

226:                                              ; preds = %195
  %227 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %214, i64 0, i32 14
  call void @_ZNSt3__16vectorINS_10unique_ptrI9SkPDFLinkNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %227, %"class.std::__1::unique_ptr.101"* nonnull dereferenceable(8) %14) #14
  br label %228

228:                                              ; preds = %220, %226
  %229 = load %struct.SkPDFLink*, %struct.SkPDFLink** %198, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %198, align 8
  %230 = icmp eq %struct.SkPDFLink* %229, null
  br i1 %230, label %243, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %struct.SkPDFLink, %struct.SkPDFLink* %229, i64 0, i32 2, i32 0
  %233 = load %class.SkData*, %class.SkData** %232, align 8
  %234 = icmp eq %class.SkData* %233, null
  br i1 %234, label %241, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %class.SkData, %class.SkData* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 -1 acq_rel
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %241

239:                                              ; preds = %235
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %233) #14
  %240 = bitcast %class.SkData* %233 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %240) #14
  br label %241

241:                                              ; preds = %239, %235, %231
  %242 = bitcast %struct.SkPDFLink* %229 to i8*
  call void @_ZdlPv(i8* %242) #15
  br label %243

243:                                              ; preds = %228, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #14
  br label %244

244:                                              ; preds = %171, %243, %191, %183
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #14
  br label %245

245:                                              ; preds = %147, %92, %86, %82, %244
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #14
  br label %246

246:                                              ; preds = %4, %245
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZNK13SkPDFDocument20currentPageTransformEv(%class.SkPDFDocument*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

declare i8* @_Z17SkPDFGetNodeIdKeyv() local_unnamed_addr #2

declare i8* @_ZN16SkAnnotationKeys21Define_Named_Dest_KeyEv() local_unnamed_addr #2

declare void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* sret, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare void @_Z18SkClipStack_AsPathRK11SkClipStackP6SkPath(%class.SkClipStack* dereferenceable(80), %class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #2

declare i8* @_ZN16SkAnnotationKeys7URL_KeyEv() local_unnamed_addr #2

declare i8* @_ZN16SkAnnotationKeys19Link_Named_Dest_KeyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice9drawPaintERK7SkPaint(%class.SkPDFDevice*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %class.SkPath, align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %class.SkPaint, align 8
  %11 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #14
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %13 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %13, align 16
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %16, align 16
  store i32 16, i32* %12, align 4
  %17 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %18 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %17) #14
  %24 = zext i8 %23 to i32
  store i32 %24, i32* %18, align 4
  br label %25

25:                                               ; preds = %22, %2
  %26 = phi i32 [ %24, %22 ], [ %19, %2 ]
  %27 = and i32 %26, 15
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %6) #14
  br label %33

31:                                               ; preds = %25
  %32 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %17, %class.SkMatrix* nonnull %6) #14
  br i1 %32, label %33, label %96

33:                                               ; preds = %29, %31
  %34 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %35 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #14
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0, i64 0
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1, i64 0
  %39 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %40 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %41 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #14
  %42 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %43 to i64
  %49 = or i64 %47, %48
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  store i64 %49, i64* %51, align 8
  %52 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* %40, %struct.SkIRect* nonnull dereferenceable(16) %34) #14
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %54 = extractvalue { <2 x float>, <2 x float> } %52, 0
  store <2 x float> %54, <2 x float>* %53, align 8
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %56 = extractvalue { <2 x float>, <2 x float> } %52, 1
  store <2 x float> %56, <2 x float>* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #14
  %57 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %6, %struct.SkRect* nonnull %8, %struct.SkRect* nonnull dereferenceable(16) %8, i32 1) #14
  %58 = load float, float* %36, align 8
  %59 = call float @llvm.floor.f32(float %58) #14
  %60 = load float, float* %37, align 4
  %61 = call float @llvm.floor.f32(float %60) #14
  %62 = load float, float* %38, align 8
  %63 = call float @llvm.ceil.f32(float %62) #14
  %64 = load float, float* %39, align 4
  %65 = call float @llvm.ceil.f32(float %64) #14
  store float %59, float* %36, align 8
  store float %61, float* %37, align 4
  store float %63, float* %38, align 8
  store float %65, float* %39, align 4
  %66 = bitcast { i64, i64 }* %3 to %struct.SkIRect*
  %67 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = load i32, i32* %42, align 4
  %69 = load i32, i32* %44, align 4
  %70 = zext i32 %69 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i32 %68 to i64
  %73 = or i64 %71, %72
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %73, i64* %75, align 8
  %76 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %40, %struct.SkIRect* nonnull dereferenceable(16) %66) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  br i1 %76, label %95, label %77

77:                                               ; preds = %33
  %78 = bitcast %class.SkPaint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %78) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %10, %class.SkPaint* dereferenceable(72) %1) #14
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %10, i8 zeroext 0) #14
  %79 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #14
  %80 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %81 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %82 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %83 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* nonnull align 8 %35, i64 16, i1 false) #14
  %84 = load float, float* %80, align 4
  %85 = load float, float* %82, align 4
  %86 = fcmp ogt float %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %77
  store float %85, float* %80, align 4
  store float %84, float* %82, align 4
  br label %88

88:                                               ; preds = %87, %77
  %89 = load float, float* %81, align 4
  %90 = load float, float* %83, align 4
  %91 = fcmp ogt float %89, %90
  br i1 %91, label %92, label %93

92:                                               ; preds = %88
  store float %90, float* %81, align 4
  store float %89, float* %83, align 4
  br label %93

93:                                               ; preds = %88, %92
  %94 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %5, %struct.SkRect* nonnull dereferenceable(16) %4, i32 0, i32 0) #14
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %40, %class.SkMatrix* dereferenceable(40) %17, %class.SkPath* nonnull dereferenceable(16) %5, %class.SkPaint* nonnull dereferenceable(72) %10, i1 zeroext true) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %78) #14
  br label %95

95:                                               ; preds = %33, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #14
  br label %96

96:                                               ; preds = %31, %95
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #14
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice8drawRectERK6SkRectRK7SkPaint(%class.SkPDFDevice*, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %class.SkPath, align 8
  %6 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %11 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %11, i64 16, i1 false)
  %12 = load float, float* %7, align 4
  %13 = load float, float* %9, align 4
  %14 = fcmp ogt float %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  store float %13, float* %7, align 4
  store float %12, float* %9, align 4
  br label %16

16:                                               ; preds = %15, %3
  %17 = load float, float* %8, align 4
  %18 = load float, float* %10, align 4
  %19 = fcmp ogt float %17, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store float %18, float* %8, align 4
  store float %17, float* %10, align 4
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %23 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %24 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %5, %struct.SkRect* nonnull dereferenceable(16) %4, i32 0, i32 0) #14
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %22, %class.SkMatrix* dereferenceable(40) %23, %class.SkPath* nonnull dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %2, i1 zeroext true)
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkPDFDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkRect, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %class.SkRasterClip, align 8
  %9 = alloca %class.SkDraw, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca %class.SkTCopyOnFirstWrite, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = alloca %class.ScopedContentEntry, align 8
  %15 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %16 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %17 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  %18 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = shl nuw i64 %22, 32
  %24 = zext i32 %19 to i64
  %25 = or i64 %23, %24
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %28 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %16, %struct.SkIRect* nonnull dereferenceable(16) %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  %29 = icmp eq i64 %2, 0
  %30 = or i1 %29, %28
  br i1 %30, label %274, label %31

31:                                               ; preds = %5
  %32 = bitcast %class.SkTCopyOnFirstWrite* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %32) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 88, i1 false)
  call fastcc void @_ZL11clean_paintRK7SkPaint(%class.SkTCopyOnFirstWrite* nonnull sret %11, %class.SkPaint* dereferenceable(72) %4)
  %33 = icmp eq i32 %1, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 0
  %36 = load %class.SkPaint*, %class.SkPaint** %35, align 8
  %37 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %36, i64 0, i32 8, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 192
  %40 = icmp eq i32 %39, 64
  br i1 %40, label %53, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1
  %43 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1, i32 1
  %44 = load %class.SkPaint*, %class.SkPaint** %43, align 8
  %45 = icmp eq %class.SkPaint* %44, null
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = bitcast %class.SkTLazy* %42 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %47, %class.SkPaint* dereferenceable(72) %36) #14
  %48 = bitcast %class.SkPaint** %43 to %class.SkTLazy**
  store %class.SkTLazy* %42, %class.SkTLazy** %48, align 8
  %49 = ptrtoint %class.SkTLazy* %42 to i64
  %50 = bitcast %class.SkTCopyOnFirstWrite* %11 to i64*
  store i64 %49, i64* %50, align 8
  br label %51

51:                                               ; preds = %46, %41
  %52 = phi %class.SkPaint* [ %47, %46 ], [ %36, %41 ]
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %52, i8 zeroext 1) #14
  br label %53

53:                                               ; preds = %51, %34, %31
  %54 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 0
  %55 = load %class.SkPaint*, %class.SkPaint** %54, align 8
  %56 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %55, i64 0, i32 0, i32 0
  %57 = load %class.SkPathEffect*, %class.SkPathEffect** %56, align 8
  %58 = icmp eq %class.SkPathEffect* %57, null
  br i1 %58, label %115, label %59

59:                                               ; preds = %53
  %60 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #14
  %61 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0
  %62 = bitcast %class.SkPDFDevice* %0 to { i64, i64 } (%class.SkBaseDevice*)***
  %63 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %62, align 8
  %64 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %63, i64 23
  %65 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %64, align 8
  %66 = call { i64, i64 } %65(%class.SkBaseDevice* %61) #14
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %68 = extractvalue { i64, i64 } %66, 0
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %70 = extractvalue { i64, i64 } %66, 1
  store i64 %70, i64* %69, align 8
  %71 = bitcast %class.SkRasterClip* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %71) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 72, i1 false) #14
  call void @_ZN12SkRasterClipC1ERK7SkIRect(%class.SkRasterClip* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %13) #14
  %72 = bitcast %class.SkDraw* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %72) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 72, i1 false) #14
  call void @_ZN6SkDrawC1Ev(%class.SkDraw* nonnull %9) #14
  %73 = bitcast i64* %69 to i32*
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %74 to i64
  %80 = or i64 %78, %79
  %81 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 1, i32 2
  %83 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %82, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast i8** %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #14
  %85 = load %class.SkColorSpace*, %class.SkColorSpace** %83, align 8
  %86 = bitcast %struct.SkImageInfo* %82 to i64*
  store i64 0, i64* %86, align 8
  %87 = icmp eq %class.SkColorSpace* %85, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %59
  %89 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = bitcast %class.SkColorSpace* %85 to i8*
  call void @_ZdlPv(i8* %93) #15
  br label %94

94:                                               ; preds = %92, %88, %59
  %95 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 1, i32 2, i32 0, i32 1
  %96 = bitcast i32* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 1, i32 2, i32 1
  %98 = bitcast %struct.SkISize* %97 to i64*
  store i64 %80, i64* %98, align 8
  %99 = icmp eq %class.SkPDFDevice* %0, null
  %100 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1
  %101 = select i1 %99, %class.SkMatrixProvider* null, %class.SkMatrixProvider* %100
  %102 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 2
  store %class.SkMatrixProvider* %101, %class.SkMatrixProvider** %102, align 8
  %103 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 3
  store %class.SkRasterClip* %8, %class.SkRasterClip** %103, align 8
  call void @_ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice(%class.SkDraw* nonnull %9, i32 %1, i64 %2, %struct.SkPoint* %3, %class.SkPaint* dereferenceable(72) %55, %class.SkBaseDevice* %61) #14
  %104 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  %105 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %9, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %106 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %107 = icmp eq %class.SkColorSpace* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %94
  %109 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = bitcast %class.SkColorSpace* %106 to i8*
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %94, %108, %112
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %72) #14
  call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %71) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #14
  br label %268

115:                                              ; preds = %53
  br i1 %33, label %116, label %194

116:                                              ; preds = %115
  %117 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %55, i64 0, i32 8, i32 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = and i32 %118, 12
  %120 = icmp eq i32 %119, 4
  br i1 %120, label %194, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %55, i64 0, i32 6
  %123 = load float, float* %122, align 8
  %124 = fcmp une float %123, 0.000000e+00
  br i1 %124, label %125, label %181

125:                                              ; preds = %121
  %126 = and i32 %118, 192
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %140, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1
  %130 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1, i32 1
  %131 = load %class.SkPaint*, %class.SkPaint** %130, align 8
  %132 = icmp eq %class.SkPaint* %131, null
  br i1 %132, label %133, label %138

133:                                              ; preds = %128
  %134 = bitcast %class.SkTLazy* %129 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %134, %class.SkPaint* dereferenceable(72) %55) #14
  %135 = bitcast %class.SkPaint** %130 to %class.SkTLazy**
  store %class.SkTLazy* %129, %class.SkTLazy** %135, align 8
  %136 = ptrtoint %class.SkTLazy* %129 to i64
  %137 = bitcast %class.SkTCopyOnFirstWrite* %11 to i64*
  store i64 %136, i64* %137, align 8
  br label %138

138:                                              ; preds = %133, %128
  %139 = phi %class.SkPaint* [ %134, %133 ], [ %55, %128 ]
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %139, i8 zeroext 0) #14
  br label %140

140:                                              ; preds = %138, %125
  %141 = load %class.SkPaint*, %class.SkPaint** %54, align 8
  %142 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %141, i64 0, i32 6
  %143 = load float, float* %142, align 8
  %144 = fmul float %143, -5.000000e-01
  %145 = bitcast %struct.SkRect* %6 to i8*
  %146 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %147 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %148 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %149 = bitcast %struct.SkRect* %6 to <2 x float>*
  %150 = bitcast float* %147 to <2 x float>*
  %151 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %152 = bitcast %class.SkPath* %7 to i8*
  %153 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %154 = insertelement <2 x float> undef, float %144, i32 0
  %155 = shufflevector <2 x float> %154, <2 x float> undef, <2 x i32> zeroinitializer
  %156 = insertelement <2 x float> undef, float %144, i32 0
  %157 = shufflevector <2 x float> %156, <2 x float> undef, <2 x i32> zeroinitializer
  br label %158

158:                                              ; preds = %179, %140
  %159 = phi %class.SkPaint* [ %141, %140 ], [ %180, %179 ]
  %160 = phi i64 [ 0, %140 ], [ %177, %179 ]
  %161 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %160, i32 0
  %162 = bitcast float* %161 to <2 x float>*
  %163 = load <2 x float>, <2 x float>* %162, align 4
  %164 = fadd <2 x float> %163, zeroinitializer
  %165 = fadd <2 x float> %157, %163
  %166 = extractelement <2 x float> %165, i32 0
  %167 = extractelement <2 x float> %165, i32 1
  %168 = fsub <2 x float> %164, %155
  %169 = extractelement <2 x float> %168, i32 0
  %170 = extractelement <2 x float> %168, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #14
  store <2 x float> %165, <2 x float>* %149, align 8
  store <2 x float> %168, <2 x float>* %150, align 8
  %171 = fcmp ogt float %166, %169
  br i1 %171, label %172, label %173

172:                                              ; preds = %158
  store float %169, float* %153, align 8
  store float %166, float* %147, align 8
  br label %173

173:                                              ; preds = %172, %158
  %174 = fcmp ogt float %167, %170
  br i1 %174, label %175, label %176

175:                                              ; preds = %173
  store float %170, float* %146, align 4
  store float %167, float* %148, align 4
  br label %176

176:                                              ; preds = %173, %175
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %7, %struct.SkRect* nonnull dereferenceable(16) %6, i32 0, i32 0) #14
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %16, %class.SkMatrix* dereferenceable(40) %151, %class.SkPath* nonnull dereferenceable(16) %7, %class.SkPaint* dereferenceable(72) %159, i1 zeroext true) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #14
  %177 = add nuw i64 %160, 1
  %178 = icmp eq i64 %177, %2
  br i1 %178, label %268, label %179

179:                                              ; preds = %176
  %180 = load %class.SkPaint*, %class.SkPaint** %54, align 8
  br label %158

181:                                              ; preds = %121
  %182 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1
  %183 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1, i32 1
  %184 = load %class.SkPaint*, %class.SkPaint** %183, align 8
  %185 = icmp eq %class.SkPaint* %184, null
  br i1 %185, label %186, label %191

186:                                              ; preds = %181
  %187 = bitcast %class.SkTLazy* %182 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %187, %class.SkPaint* dereferenceable(72) %55) #14
  %188 = bitcast %class.SkPaint** %183 to %class.SkTLazy**
  store %class.SkTLazy* %182, %class.SkTLazy** %188, align 8
  %189 = ptrtoint %class.SkTLazy* %182 to i64
  %190 = bitcast %class.SkTCopyOnFirstWrite* %11 to i64*
  store i64 %189, i64* %190, align 8
  br label %191

191:                                              ; preds = %181, %186
  %192 = phi %class.SkPaint* [ %187, %186 ], [ %55, %181 ]
  call void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint* %192, i32 1) #14
  %193 = load %class.SkPaint*, %class.SkPaint** %54, align 8
  br label %194

194:                                              ; preds = %116, %191, %115
  %195 = phi %class.SkPaint* [ %55, %116 ], [ %193, %191 ], [ %55, %115 ]
  %196 = bitcast %class.ScopedContentEntry* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %196) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 48, i1 false)
  %197 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %14, %class.SkPDFDevice* %0, %class.SkClipStack* %16, %class.SkMatrix* dereferenceable(40) %197, %class.SkPaint* dereferenceable(72) %195, float 0.000000e+00) #14
  %198 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 1
  %199 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %198, align 8
  %200 = icmp eq %class.SkDynamicMemoryWStream* %199, null
  br i1 %200, label %266, label %201

201:                                              ; preds = %194
  switch i32 %1, label %250 [
    i32 2, label %209
    i32 1, label %204
    i32 0, label %202
  ]

202:                                              ; preds = %201
  %203 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %199, i64 0, i32 0
  br label %239

204:                                              ; preds = %201
  %205 = lshr i64 %2, 1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %247, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %199, i64 0, i32 0
  br label %225

209:                                              ; preds = %201
  %210 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %211 = load float, float* %210, align 4
  %212 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %213 = load float, float* %212, align 4
  %214 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %199, i64 0, i32 0
  call void @_ZN10SkPDFUtils6MoveToEffP9SkWStream(float %211, float %213, %class.SkWStream* %214) #14
  %215 = icmp ugt i64 %2, 1
  br i1 %215, label %217, label %216

216:                                              ; preds = %217, %209
  call void @_ZN10SkPDFUtils10StrokePathEP9SkWStream(%class.SkWStream* %214) #14
  br label %247

217:                                              ; preds = %209, %217
  %218 = phi i64 [ %223, %217 ], [ 1, %209 ]
  %219 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %218, i32 0
  %220 = load float, float* %219, align 4
  %221 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %218, i32 1
  %222 = load float, float* %221, align 4
  call void @_ZN10SkPDFUtils10AppendLineEffP9SkWStream(float %220, float %222, %class.SkWStream* %214) #14
  %223 = add nuw i64 %218, 1
  %224 = icmp eq i64 %223, %2
  br i1 %224, label %216, label %217

225:                                              ; preds = %225, %207
  %226 = phi i64 [ 0, %207 ], [ %237, %225 ]
  %227 = shl nuw i64 %226, 1
  %228 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %227, i32 0
  %229 = load float, float* %228, align 4
  %230 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %227, i32 1
  %231 = load float, float* %230, align 4
  call void @_ZN10SkPDFUtils6MoveToEffP9SkWStream(float %229, float %231, %class.SkWStream* %208) #14
  %232 = or i64 %227, 1
  %233 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %232, i32 0
  %234 = load float, float* %233, align 4
  %235 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %232, i32 1
  %236 = load float, float* %235, align 4
  call void @_ZN10SkPDFUtils10AppendLineEffP9SkWStream(float %234, float %236, %class.SkWStream* %208) #14
  call void @_ZN10SkPDFUtils10StrokePathEP9SkWStream(%class.SkWStream* %208) #14
  %237 = add nuw nsw i64 %226, 1
  %238 = icmp eq i64 %237, %205
  br i1 %238, label %247, label %225

239:                                              ; preds = %239, %202
  %240 = phi i64 [ 0, %202 ], [ %245, %239 ]
  %241 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %240, i32 0
  %242 = load float, float* %241, align 4
  %243 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %240, i32 1
  %244 = load float, float* %243, align 4
  call void @_ZN10SkPDFUtils6MoveToEffP9SkWStream(float %242, float %244, %class.SkWStream* %203) #14
  call void @_ZN10SkPDFUtils9ClosePathEP9SkWStream(%class.SkWStream* %203) #14
  call void @_ZN10SkPDFUtils10StrokePathEP9SkWStream(%class.SkWStream* %203) #14
  %245 = add nuw i64 %240, 1
  %246 = icmp eq i64 %245, %2
  br i1 %246, label %247, label %239

247:                                              ; preds = %239, %225, %204, %216
  %248 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %198, align 8
  %249 = icmp eq %class.SkDynamicMemoryWStream* %248, null
  br i1 %249, label %266, label %250

250:                                              ; preds = %201, %247
  %251 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 4
  %252 = getelementptr inbounds %class.SkPath, %class.SkPath* %251, i64 0, i32 0, i32 0
  %253 = load %class.SkPathRef*, %class.SkPathRef** %252, align 8
  %254 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %253, i64 0, i32 4, i32 2
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, 0
  %257 = select i1 %256, %class.SkPath* null, %class.SkPath* %251
  %258 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 0
  %259 = load %class.SkPDFDevice*, %class.SkPDFDevice** %258, align 8
  %260 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 5
  %261 = load %class.SkClipStack*, %class.SkClipStack** %260, align 8
  %262 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 2
  %263 = load i32, i32* %262, align 8
  %264 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 3, i32 0
  %265 = load i32, i32* %264, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %259, %class.SkClipStack* %261, i32 %263, i32 %265, %class.SkPath* %257) #14
  br label %266

266:                                              ; preds = %194, %247, %250
  %267 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %267) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %196) #14
  br label %268

268:                                              ; preds = %176, %266, %114
  %269 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %11, i64 0, i32 1, i32 1
  %270 = load %class.SkPaint*, %class.SkPaint** %269, align 8
  %271 = icmp eq %class.SkPaint* %270, null
  br i1 %271, label %273, label %272

272:                                              ; preds = %268
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %270) #14
  store %class.SkPaint* null, %class.SkPaint** %269, align 8
  br label %273

273:                                              ; preds = %268, %272
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %32) #14
  br label %274

274:                                              ; preds = %5, %273
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL11clean_paintRK7SkPaint(%class.SkTCopyOnFirstWrite* noalias sret, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 {
  %3 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %0, i64 0, i32 1, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 72, i1 false)
  %4 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %0, i64 0, i32 0
  store %class.SkPaint* %1, %class.SkPaint** %4, align 8
  %5 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %0, i64 0, i32 1, i32 1
  store %class.SkPaint* null, %class.SkPaint** %5, align 8
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 261120
  %9 = icmp eq i32 %8, 3072
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @_Z19SkInterpretXfermodeRK7SkPaintb(%class.SkPaint* dereferenceable(72) %1, i1 zeroext false) #14
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %10
  %14 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %0, i64 0, i32 1
  %15 = load %class.SkPaint*, %class.SkPaint** %5, align 8
  %16 = icmp eq %class.SkPaint* %15, null
  %17 = load %class.SkPaint*, %class.SkPaint** %4, align 8
  br i1 %16, label %18, label %23

18:                                               ; preds = %13
  %19 = bitcast %class.SkTLazy* %14 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %19, %class.SkPaint* dereferenceable(72) %17) #14
  %20 = bitcast %class.SkPaint** %5 to %class.SkTLazy**
  store %class.SkTLazy* %14, %class.SkTLazy** %20, align 8
  %21 = ptrtoint %class.SkTLazy* %14 to i64
  %22 = bitcast %class.SkTCopyOnFirstWrite* %0 to i64*
  store i64 %21, i64* %22, align 8
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi %class.SkPaint* [ %19, %18 ], [ %17, %13 ]
  %25 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %24, i64 0, i32 8, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -261121
  %28 = or i32 %27, 3072
  store i32 %28, i32* %25, align 8
  br label %29

29:                                               ; preds = %2, %23, %10
  %30 = load %class.SkPaint*, %class.SkPaint** %4, align 8
  %31 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %30, i64 0, i32 3, i32 0
  %32 = load %class.SkColorFilter*, %class.SkColorFilter** %31, align 8
  %33 = icmp eq %class.SkColorFilter* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %0, i64 0, i32 1
  %36 = load %class.SkPaint*, %class.SkPaint** %5, align 8
  %37 = icmp eq %class.SkPaint* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  %39 = bitcast %class.SkTLazy* %35 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %39, %class.SkPaint* dereferenceable(72) %30) #14
  %40 = bitcast %class.SkPaint** %5 to %class.SkTLazy**
  store %class.SkTLazy* %35, %class.SkTLazy** %40, align 8
  %41 = ptrtoint %class.SkTLazy* %35 to i64
  %42 = bitcast %class.SkTCopyOnFirstWrite* %0 to i64*
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi %class.SkPaint* [ %39, %38 ], [ %30, %34 ]
  %45 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #14
  tail call void @_ZN11SkPaintPriv17RemoveColorFilterEP7SkPaintP12SkColorSpace(%class.SkPaint* %44, %class.SkColorSpace* %45) #14
  br label %46

46:                                               ; preds = %43, %29
  ret void
}

declare void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint*, i32) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils6MoveToEffP9SkWStream(float, float, %class.SkWStream*) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils10AppendLineEffP9SkWStream(float, float, %class.SkWStream*) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils10StrokePathEP9SkWStream(%class.SkWStream*) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils9ClosePathEP9SkWStream(%class.SkWStream*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice*, %class.SkClipStack* dereferenceable(80), %class.SkMatrix* dereferenceable(40), %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca %class.SkTCopyOnFirstWrite, align 8
  %10 = alloca %class.SkPath, align 8
  %11 = alloca %class.SkMatrix, align 4
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = alloca %class.sk_sp.229, align 8
  %15 = alloca %class.ScopedContentEntry, align 8
  %16 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %18 to i64
  %24 = or i64 %22, %23
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %24, i64* %26, align 8
  %27 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %1, %struct.SkIRect* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  br i1 %27, label %248, label %28

28:                                               ; preds = %6
  %29 = bitcast %class.SkTCopyOnFirstWrite* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %29) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 88, i1 false)
  call fastcc void @_ZL11clean_paintRK7SkPaint(%class.SkTCopyOnFirstWrite* nonnull sret %9, %class.SkPaint* dereferenceable(72) %4)
  %30 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #14
  %31 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %10) #14
  %32 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 0
  %33 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  %34 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %33, i64 0, i32 2, i32 0
  %35 = load %class.SkMaskFilter*, %class.SkMaskFilter** %34, align 8
  %36 = icmp eq %class.SkMaskFilter* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %28
  call void @_ZN11SkPDFDevice26internalDrawPathWithFilterERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaint(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %1, %class.SkMatrix* dereferenceable(40) %2, %class.SkPath* dereferenceable(16) %3, %class.SkPaint* dereferenceable(72) %33)
  br label %242

38:                                               ; preds = %28
  %39 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #14
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %41 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %41, i64 40, i1 false)
  %42 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %33, i64 0, i32 0, i32 0
  %43 = load %class.SkPathEffect*, %class.SkPathEffect** %42, align 8
  %44 = icmp eq %class.SkPathEffect* %43, null
  br i1 %44, label %141, label %45

45:                                               ; preds = %38
  %46 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #14
  %47 = load i32, i32* %17, align 4
  %48 = load i32, i32* %19, align 4
  %49 = zext i32 %48 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %47 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %52, i64* %54, align 8
  %55 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %1, %struct.SkIRect* nonnull dereferenceable(16) %13) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #14
  br i1 %55, label %241, label %56

56:                                               ; preds = %45
  br i1 %5, label %59, label %57

57:                                               ; preds = %56
  %58 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %10, %class.SkPath* dereferenceable(16) %3) #14
  br label %59

59:                                               ; preds = %57, %56
  %60 = phi %class.SkPath* [ %3, %56 ], [ %10, %57 ]
  %61 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  %62 = call zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint* %61, %class.SkPath* dereferenceable(16) %60, %class.SkPath* %60, %struct.SkRect* null, float 1.000000e+00) #14
  %63 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  %64 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %63, i64 0, i32 8, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = lshr i32 %65, 6
  %67 = trunc i32 %66 to i8
  %68 = and i8 %67, 3
  br i1 %62, label %69, label %83

69:                                               ; preds = %59
  %70 = icmp eq i8 %68, 0
  br i1 %70, label %115, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1
  %73 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 1
  %74 = load %class.SkPaint*, %class.SkPaint** %73, align 8
  %75 = icmp eq %class.SkPaint* %74, null
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = bitcast %class.SkTLazy* %72 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %77, %class.SkPaint* dereferenceable(72) %63) #14
  %78 = bitcast %class.SkPaint** %73 to %class.SkTLazy**
  store %class.SkTLazy* %72, %class.SkTLazy** %78, align 8
  %79 = ptrtoint %class.SkTLazy* %72 to i64
  %80 = bitcast %class.SkTCopyOnFirstWrite* %9 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %76, %71
  %82 = phi %class.SkPaint* [ %77, %76 ], [ %63, %71 ]
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %82, i8 zeroext 0) #14
  br label %115

83:                                               ; preds = %59
  %84 = icmp eq i8 %68, 1
  br i1 %84, label %98, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1
  %87 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 1
  %88 = load %class.SkPaint*, %class.SkPaint** %87, align 8
  %89 = icmp eq %class.SkPaint* %88, null
  br i1 %89, label %90, label %95

90:                                               ; preds = %85
  %91 = bitcast %class.SkTLazy* %86 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %91, %class.SkPaint* dereferenceable(72) %63) #14
  %92 = bitcast %class.SkPaint** %87 to %class.SkTLazy**
  store %class.SkTLazy* %86, %class.SkTLazy** %92, align 8
  %93 = ptrtoint %class.SkTLazy* %86 to i64
  %94 = bitcast %class.SkTCopyOnFirstWrite* %9 to i64*
  store i64 %93, i64* %94, align 8
  br label %95

95:                                               ; preds = %90, %85
  %96 = phi %class.SkPaint* [ %91, %90 ], [ %63, %85 ]
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %96, i8 zeroext 1) #14
  %97 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  br label %98

98:                                               ; preds = %83, %95
  %99 = phi %class.SkPaint* [ %63, %83 ], [ %97, %95 ]
  %100 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %99, i64 0, i32 6
  %101 = load float, float* %100, align 8
  %102 = fcmp une float %101, 0.000000e+00
  br i1 %102, label %103, label %115

103:                                              ; preds = %98
  %104 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1
  %105 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 1
  %106 = load %class.SkPaint*, %class.SkPaint** %105, align 8
  %107 = icmp eq %class.SkPaint* %106, null
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = bitcast %class.SkTLazy* %104 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %109, %class.SkPaint* dereferenceable(72) %99) #14
  %110 = bitcast %class.SkPaint** %105 to %class.SkTLazy**
  store %class.SkTLazy* %104, %class.SkTLazy** %110, align 8
  %111 = ptrtoint %class.SkTLazy* %104 to i64
  %112 = bitcast %class.SkTCopyOnFirstWrite* %9 to i64*
  store i64 %111, i64* %112, align 8
  br label %113

113:                                              ; preds = %103, %108
  %114 = phi %class.SkPaint* [ %109, %108 ], [ %99, %103 ]
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* %114, float 0.000000e+00) #14
  br label %115

115:                                              ; preds = %81, %69, %98, %113
  %116 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1
  %117 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 1
  %118 = load %class.SkPaint*, %class.SkPaint** %117, align 8
  %119 = icmp eq %class.SkPaint* %118, null
  %120 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  br i1 %119, label %121, label %126

121:                                              ; preds = %115
  %122 = bitcast %class.SkTLazy* %116 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %122, %class.SkPaint* dereferenceable(72) %120) #14
  %123 = bitcast %class.SkPaint** %117 to %class.SkTLazy**
  store %class.SkTLazy* %116, %class.SkTLazy** %123, align 8
  %124 = ptrtoint %class.SkTLazy* %116 to i64
  %125 = bitcast %class.SkTCopyOnFirstWrite* %9 to i64*
  store i64 %124, i64* %125, align 8
  br label %126

126:                                              ; preds = %115, %121
  %127 = phi %class.SkPaint* [ %122, %121 ], [ %120, %115 ]
  %128 = getelementptr inbounds %class.sk_sp.229, %class.sk_sp.229* %14, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %128, align 8
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* %127, %class.sk_sp.229* nonnull %14) #14
  %129 = load %class.SkPathEffect*, %class.SkPathEffect** %128, align 8
  %130 = icmp eq %class.SkPathEffect* %129, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %129, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = bitcast %class.SkPathEffect* %129 to %class.SkRefCntBase*
  %137 = bitcast %class.SkPathEffect* %129 to void (%class.SkRefCntBase*)***
  %138 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, i64 2
  %140 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, align 8
  call void %140(%class.SkRefCntBase* nonnull %136) #14
  br label %141

141:                                              ; preds = %135, %131, %126, %38
  %142 = phi %class.SkPath* [ %3, %38 ], [ %60, %126 ], [ %60, %131 ], [ %60, %135 ]
  %143 = phi i1 [ %5, %38 ], [ true, %126 ], [ true, %131 ], [ true, %135 ]
  %144 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  %145 = call zeroext i1 @_ZN11SkPDFDevice17handleInversePathERK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkPath* dereferenceable(16) %142, %class.SkPaint* dereferenceable(72) %144, i1 zeroext undef)
  br i1 %145, label %241, label %146

146:                                              ; preds = %141
  %147 = load i32, i32* %40, align 4
  %148 = trunc i32 %147 to i8
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %146
  %151 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %11) #14
  %152 = zext i8 %151 to i32
  store i32 %152, i32* %40, align 4
  br label %153

153:                                              ; preds = %146, %150
  %154 = phi i32 [ %152, %150 ], [ %147, %146 ]
  %155 = and i32 %154, 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  br i1 %143, label %160, label %158

158:                                              ; preds = %157
  %159 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %10, %class.SkPath* dereferenceable(16) %3) #14
  br label %160

160:                                              ; preds = %158, %157
  %161 = phi %class.SkPath* [ %142, %157 ], [ %10, %158 ]
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %161, %class.SkMatrix* nonnull dereferenceable(40) %11, %class.SkPath* %161, i32 1) #14
  %162 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  %163 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %162, i64 0, i32 1, i32 0
  %164 = load %class.SkShader*, %class.SkShader** %163, align 8
  %165 = icmp eq %class.SkShader* %164, null
  br i1 %165, label %178, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1
  %168 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 1
  %169 = load %class.SkPaint*, %class.SkPaint** %168, align 8
  %170 = icmp eq %class.SkPaint* %169, null
  br i1 %170, label %171, label %176

171:                                              ; preds = %166
  %172 = bitcast %class.SkTLazy* %167 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %172, %class.SkPaint* dereferenceable(72) %162) #14
  %173 = bitcast %class.SkPaint** %168 to %class.SkTLazy**
  store %class.SkTLazy* %167, %class.SkTLazy** %173, align 8
  %174 = ptrtoint %class.SkTLazy* %167 to i64
  %175 = bitcast %class.SkTCopyOnFirstWrite* %9 to i64*
  store i64 %174, i64* %175, align 8
  br label %176

176:                                              ; preds = %166, %171
  %177 = phi %class.SkPaint* [ %172, %171 ], [ %162, %166 ]
  call fastcc void @_ZL16transform_shaderP7SkPaintRK8SkMatrix(%class.SkPaint* %177, %class.SkMatrix* nonnull dereferenceable(40) %11)
  br label %178

178:                                              ; preds = %160, %176
  %179 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %180 = bitcast %class.SkMatrix* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %180, i64 40, i1 false)
  br label %181

181:                                              ; preds = %153, %178
  %182 = phi %class.SkPath* [ %161, %178 ], [ %142, %153 ]
  %183 = bitcast %class.ScopedContentEntry* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %183) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 48, i1 false)
  %184 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %15, %class.SkPDFDevice* %0, %class.SkClipStack* %1, %class.SkMatrix* nonnull dereferenceable(40) %11, %class.SkPaint* dereferenceable(72) %184, float 0.000000e+00)
  %185 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 1
  %186 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %187 = icmp eq %class.SkDynamicMemoryWStream* %186, null
  br i1 %187, label %239, label %188

188:                                              ; preds = %181
  %189 = call float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix* nonnull %11, float 1.000000e+00) #14
  %190 = fcmp ogt float %189, 0.000000e+00
  %191 = fdiv float 6.250000e-02, %189
  %192 = select i1 %190, float %191, float 6.250000e-02
  %193 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  %194 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %193, i64 0, i32 8, i32 0, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = lshr i32 %195, 6
  %197 = trunc i32 %196 to i8
  %198 = and i8 %197, 3
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %205, label %200

200:                                              ; preds = %188
  %201 = lshr i32 %195, 2
  %202 = and i32 %201, 3
  %203 = add nsw i32 %202, -1
  %204 = icmp ugt i32 %203, 1
  br label %205

205:                                              ; preds = %200, %188
  %206 = phi i1 [ true, %188 ], [ %204, %200 ]
  %207 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %208 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %207, i64 0, i32 0
  call void @_ZN10SkPDFUtils8EmitPathERK6SkPathN7SkPaint5StyleEbP9SkWStreamf(%class.SkPath* dereferenceable(16) %182, i8 zeroext %198, i1 zeroext %206, %class.SkWStream* %208, float %192) #14
  %209 = load %class.SkPaint*, %class.SkPaint** %32, align 8
  %210 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %209, i64 0, i32 8, i32 0, i32 0
  %211 = load i32, i32* %210, align 8
  %212 = lshr i32 %211, 6
  %213 = trunc i32 %212 to i8
  %214 = and i8 %213, 3
  %215 = getelementptr inbounds %class.SkPath, %class.SkPath* %182, i64 0, i32 4
  %216 = load i8, i8* %215, align 2
  %217 = and i8 %216, 3
  %218 = zext i8 %217 to i32
  %219 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %220 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %219, i64 0, i32 0
  call void @_ZN10SkPDFUtils9PaintPathEN7SkPaint5StyleE14SkPathFillTypeP9SkWStream(i8 zeroext %214, i32 %218, %class.SkWStream* %220) #14
  %221 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %222 = icmp eq %class.SkDynamicMemoryWStream* %221, null
  br i1 %222, label %239, label %223

223:                                              ; preds = %205
  %224 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 4
  %225 = getelementptr inbounds %class.SkPath, %class.SkPath* %224, i64 0, i32 0, i32 0
  %226 = load %class.SkPathRef*, %class.SkPathRef** %225, align 8
  %227 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %226, i64 0, i32 4, i32 2
  %228 = load i32, i32* %227, align 4
  %229 = icmp eq i32 %228, 0
  %230 = select i1 %229, %class.SkPath* null, %class.SkPath* %224
  %231 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 0
  %232 = load %class.SkPDFDevice*, %class.SkPDFDevice** %231, align 8
  %233 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 5
  %234 = load %class.SkClipStack*, %class.SkClipStack** %233, align 8
  %235 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 2
  %236 = load i32, i32* %235, align 8
  %237 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 3, i32 0
  %238 = load i32, i32* %237, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %232, %class.SkClipStack* %234, i32 %236, i32 %238, %class.SkPath* %230) #14
  br label %239

239:                                              ; preds = %181, %205, %223
  %240 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %240) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %183) #14
  br label %241

241:                                              ; preds = %141, %45, %239
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #14
  br label %242

242:                                              ; preds = %241, %37
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #14
  %243 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 1
  %244 = load %class.SkPaint*, %class.SkPaint** %243, align 8
  %245 = icmp eq %class.SkPaint* %244, null
  br i1 %245, label %247, label %246

246:                                              ; preds = %242
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %244) #14
  store %class.SkPaint* null, %class.SkPaint** %243, align 8
  br label %247

247:                                              ; preds = %242, %246
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %29) #14
  br label %248

248:                                              ; preds = %6, %247
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice9drawRRectERK7SkRRectRK7SkPaint(%class.SkPDFDevice*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %7 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  call void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull sret %4, %class.SkRRect* dereferenceable(52) %1, i32 0) #14
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %5, %class.SkMatrix* dereferenceable(40) %6, %class.SkPath* nonnull dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %2, i1 zeroext true)
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirection(%class.SkPath* sret, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice8drawOvalERK6SkRectRK7SkPaint(%class.SkPDFDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %7 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  call void @_ZN6SkPath4OvalERK6SkRect15SkPathDirection(%class.SkPath* nonnull sret %4, %struct.SkRect* dereferenceable(16) %1, i32 0) #14
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %5, %class.SkMatrix* dereferenceable(40) %6, %class.SkPath* nonnull dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %2, i1 zeroext true)
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZN6SkPath4OvalERK6SkRect15SkPathDirection(%class.SkPath* sret, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice8drawPathERK6SkPathRK7SkPaintb(%class.SkPDFDevice*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  tail call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %5, %class.SkMatrix* dereferenceable(40) %6, %class.SkPath* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2, i1 zeroext %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice26internalDrawPathWithFilterERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaint(%class.SkPDFDevice*, %class.SkClipStack* dereferenceable(80), %class.SkMatrix* dereferenceable(40), %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPDFDict, align 8
  %7 = alloca %struct.SkSamplingOptions, align 4
  %8 = alloca %class.SkPath, align 8
  %9 = alloca %class.SkTCopyOnFirstWrite, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = alloca %struct.SkMask, align 8
  %15 = alloca %struct.SkMask, align 8
  %16 = alloca %struct.SkIPoint, align 4
  %17 = alloca %class.sk_sp, align 8
  %18 = alloca %class.SkCanvas, align 8
  %19 = alloca %class.sk_sp.120, align 8
  %20 = alloca %class.ScopedContentEntry, align 8
  %21 = alloca { <2 x float>, <2 x float> }, align 8
  %22 = bitcast { <2 x float>, <2 x float> }* %21 to %struct.SkRect*
  %23 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 4
  %25 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %8, %class.SkPath* dereferenceable(16) %3) #14
  %26 = bitcast %class.SkTCopyOnFirstWrite* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %26) #14
  %27 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 72, i1 false)
  %28 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 0
  store %class.SkPaint* %4, %class.SkPaint** %28, align 8
  %29 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1, i32 1
  store %class.SkPaint* null, %class.SkPaint** %29, align 8
  %30 = call zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint* %4, %class.SkPath* nonnull dereferenceable(16) %8, %class.SkPath* nonnull %8, %struct.SkRect* null, float 1.000000e+00) #14
  %31 = zext i1 %30 to i32
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %8, %class.SkMatrix* dereferenceable(40) %2, %class.SkPath* nonnull %8, i32 1) #14
  %32 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #14
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %34 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #14
  %35 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %36 to i64
  %42 = or i64 %40, %41
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %42, i64* %44, align 8
  %45 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* %1, %struct.SkIRect* nonnull dereferenceable(16) %13) #14
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  %48 = extractelement <2 x float> %46, i32 0
  %49 = call float @llvm.floor.f32(float %48) #14
  %50 = fcmp olt float %49, 0x41DFFFFFE0000000
  %51 = select i1 %50, float %49, float 0x41DFFFFFE0000000
  %52 = fcmp ogt float %51, 0xC1DFFFFFE0000000
  %53 = select i1 %52, float %51, float 0xC1DFFFFFE0000000
  %54 = fptosi float %53 to i32
  %55 = extractelement <2 x float> %46, i32 1
  %56 = call float @llvm.floor.f32(float %55) #14
  %57 = fcmp olt float %56, 0x41DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0x41DFFFFFE0000000
  %59 = fcmp ogt float %58, 0xC1DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0xC1DFFFFFE0000000
  %61 = fptosi float %60 to i32
  %62 = extractelement <2 x float> %47, i32 0
  %63 = call float @llvm.ceil.f32(float %62) #14
  %64 = fcmp olt float %63, 0x41DFFFFFE0000000
  %65 = select i1 %64, float %63, float 0x41DFFFFFE0000000
  %66 = fcmp ogt float %65, 0xC1DFFFFFE0000000
  %67 = select i1 %66, float %65, float 0xC1DFFFFFE0000000
  %68 = fptosi float %67 to i32
  %69 = extractelement <2 x float> %47, i32 1
  %70 = call float @llvm.ceil.f32(float %69) #14
  %71 = fcmp olt float %70, 0x41DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0x41DFFFFFE0000000
  %73 = fcmp ogt float %72, 0xC1DFFFFFE0000000
  %74 = select i1 %73, float %72, float 0xC1DFFFFFE0000000
  %75 = fptosi float %74 to i32
  %76 = zext i32 %61 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %54 to i64
  %79 = or i64 %77, %78
  %80 = zext i32 %75 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %68 to i64
  %83 = or i64 %81, %82
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %79, i64* %84, align 8
  store i64 %83, i64* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #14
  %85 = bitcast %struct.SkMask* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #14
  %86 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 0
  %87 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %14, i64 0, i32 1
  %88 = bitcast %struct.SkIRect* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 24, i1 false)
  store i8* null, i8** %86, align 8
  %89 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 2, i32 0
  %90 = load %class.SkMaskFilter*, %class.SkMaskFilter** %89, align 8
  %91 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %92 = call zeroext i1 @_ZN6SkDraw10DrawToMaskERK6SkPathPK7SkIRectPK12SkMaskFilterPK8SkMatrixP6SkMaskNSC_10CreateModeEN11SkStrokeRec9InitStyleE(%class.SkPath* nonnull dereferenceable(16) %8, %struct.SkIRect* nonnull %11, %class.SkMaskFilter* %90, %class.SkMatrix* %91, %struct.SkMask* nonnull %14, i32 2, i32 %31) #14
  br i1 %92, label %93, label %272

93:                                               ; preds = %5
  %94 = load i8*, i8** %86, align 8
  %95 = bitcast %struct.SkMask* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #14
  %96 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 0
  %97 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1
  %98 = bitcast %struct.SkIRect* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false)
  store i8* null, i8** %96, align 8
  %99 = bitcast %struct.SkIPoint* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #14
  %100 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %16, i64 0, i32 0
  store i32 -1431655766, i32* %100, align 4
  %101 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %16, i64 0, i32 1
  store i32 -1431655766, i32* %101, align 4
  %102 = load %class.SkPaint*, %class.SkPaint** %28, align 8
  %103 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %102, i64 0, i32 2, i32 0
  %104 = bitcast %class.SkMaskFilter** %103 to %class.SkMaskFilterBase**
  %105 = load %class.SkMaskFilterBase*, %class.SkMaskFilterBase** %104, align 8
  %106 = bitcast %class.SkMaskFilterBase* %105 to i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %107 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %106, align 8
  %108 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %107, i64 8
  %109 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %108, align 8
  %110 = call zeroext i1 %109(%class.SkMaskFilterBase* %105, %struct.SkMask* nonnull %15, %struct.SkMask* nonnull dereferenceable(32) %14, %class.SkMatrix* dereferenceable(40) %2, %struct.SkIPoint* nonnull %16) #14
  br i1 %110, label %111, label %269

111:                                              ; preds = %93
  %112 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1, i32 2
  %113 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %15, i64 0, i32 1
  %114 = bitcast %struct.SkIRect* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = trunc i64 %115 to i32
  %117 = lshr i64 %115, 32
  %118 = trunc i64 %117 to i32
  %119 = bitcast i32* %112 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %class.sk_sp* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #14
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %17, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %122, align 8
  call void @_Z23mask_to_greyscale_imageP6SkMask(%class.sk_sp* nonnull sret %17, %struct.SkMask* nonnull %15)
  %123 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  %124 = bitcast %struct.SkISize* %123 to i64*
  %125 = load i64, i64* %124, align 8, !noalias !31
  %126 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %127 = call i8* @_Znwm(i64 3360) #15, !noalias !34
  %128 = bitcast i8* %127 to %class.SkPDFDevice*
  %129 = load %class.SkPDFDocument*, %class.SkPDFDocument** %126, align 8, !noalias !34
  %130 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14, !noalias !34
  call void @_ZN11SkPDFDeviceC2E7SkISizeP13SkPDFDocumentRK8SkMatrix(%class.SkPDFDevice* nonnull %128, i64 %125, %class.SkPDFDocument* %129, %class.SkMatrix* dereferenceable(40) %130) #14, !noalias !34
  %131 = bitcast %class.SkCanvas* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %131) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.119, [384 x i64], %class.sk_sp.120, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.121", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.127" }* @__const._ZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS2_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrix.canvas to i8*), i64 3232, i1 false)
  %132 = getelementptr inbounds %class.sk_sp.120, %class.sk_sp.120* %19, i64 0, i32 0
  %133 = getelementptr inbounds i8, i8* %127, i64 8
  %134 = bitcast i8* %133 to i32*
  %135 = atomicrmw add i32* %134, i32 1 monotonic
  %136 = bitcast %class.sk_sp.120* %19 to i8**
  store i8* %127, i8** %136, align 8
  call void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas* nonnull %18, %class.sk_sp.120* nonnull %19) #14
  %137 = load %class.SkBaseDevice*, %class.SkBaseDevice** %132, align 8
  %138 = icmp eq %class.SkBaseDevice* %137, null
  br i1 %138, label %149, label %139

139:                                              ; preds = %111
  %140 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %137, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %149

143:                                              ; preds = %139
  %144 = bitcast %class.SkBaseDevice* %137 to %class.SkRefCntBase*
  %145 = bitcast %class.SkBaseDevice* %137 to void (%class.SkRefCntBase*)***
  %146 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %145, align 8
  %147 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, i64 2
  %148 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %147, align 8
  call void %148(%class.SkRefCntBase* nonnull %144) #14
  br label %149

149:                                              ; preds = %111, %139, %143
  %150 = sitofp i32 %116 to float
  %151 = sitofp i32 %118 to float
  %152 = load %class.SkImage*, %class.SkImage** %122, align 8
  %153 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %153) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %153, i8 0, i64 20, i1 false) #14
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %18, %class.SkImage* %152, float %150, float %151, %struct.SkSamplingOptions* nonnull dereferenceable(20) %7, %class.SkPaint* null) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %153) #14
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %131) #14
  %154 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = trunc i32 %155 to i8
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %149
  %159 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #14
  %160 = zext i8 %159 to i32
  store i32 %160, i32* %154, align 4
  br label %161

161:                                              ; preds = %149, %158
  %162 = phi i32 [ %160, %158 ], [ %155, %149 ]
  %163 = and i32 %162, 15
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %161
  %166 = load %class.SkPaint*, %class.SkPaint** %28, align 8
  %167 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %166, i64 0, i32 1, i32 0
  %168 = load %class.SkShader*, %class.SkShader** %167, align 8
  %169 = icmp eq %class.SkShader* %168, null
  br i1 %169, label %181, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %9, i64 0, i32 1
  %172 = load %class.SkPaint*, %class.SkPaint** %29, align 8
  %173 = icmp eq %class.SkPaint* %172, null
  br i1 %173, label %174, label %179

174:                                              ; preds = %170
  %175 = bitcast %class.SkTLazy* %171 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %175, %class.SkPaint* dereferenceable(72) %166) #14
  %176 = bitcast %class.SkPaint** %29 to %class.SkTLazy**
  store %class.SkTLazy* %171, %class.SkTLazy** %176, align 8
  %177 = ptrtoint %class.SkTLazy* %171 to i64
  %178 = bitcast %class.SkTCopyOnFirstWrite* %9 to i64*
  store i64 %177, i64* %178, align 8
  br label %179

179:                                              ; preds = %170, %174
  %180 = phi %class.SkPaint* [ %175, %174 ], [ %166, %170 ]
  call fastcc void @_ZL16transform_shaderP7SkPaintRK8SkMatrix(%class.SkPaint* %180, %class.SkMatrix* dereferenceable(40) %2)
  br label %181

181:                                              ; preds = %165, %179, %161
  %182 = bitcast %class.ScopedContentEntry* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %182) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 48, i1 false)
  %183 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %184 = load %class.SkPaint*, %class.SkPaint** %28, align 8
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %20, %class.SkPDFDevice* %0, %class.SkClipStack* %1, %class.SkMatrix* dereferenceable(40) %183, %class.SkPaint* dereferenceable(72) %184, float 0.000000e+00)
  %185 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %20, i64 0, i32 1
  %186 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %187 = icmp eq %class.SkDynamicMemoryWStream* %186, null
  br i1 %187, label %245, label %188

188:                                              ; preds = %181
  %189 = call i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice* nonnull %128, i64 %115, i64 %120, i1 zeroext true)
  %190 = load %class.SkPDFDocument*, %class.SkPDFDocument** %126, align 8
  %191 = call i32 @_ZN17SkPDFGraphicState20GetSMaskGraphicStateE22SkPDFIndirectReferencebNS_14SkPDFSMaskModeEP13SkPDFDocument(i32 %189, i1 zeroext false, i32 1, %class.SkPDFDocument* %190) #14
  %192 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  call void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %191, %class.SkDynamicMemoryWStream* %192)
  %193 = bitcast { <2 x float>, <2 x float> }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #14
  %194 = insertelement <2 x float> undef, float %150, i32 0
  %195 = insertelement <2 x float> %194, float %151, i32 1
  %196 = trunc i64 %120 to i32
  %197 = sitofp i32 %196 to float
  %198 = insertelement <2 x float> undef, float %197, i32 0
  %199 = lshr i64 %120, 32
  %200 = trunc i64 %199 to i32
  %201 = sitofp i32 %200 to float
  %202 = insertelement <2 x float> %198, float %201, i32 1
  %203 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %21, i64 0, i32 0
  store <2 x float> %195, <2 x float>* %203, align 8
  %204 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %21, i64 0, i32 1
  store <2 x float> %202, <2 x float>* %204, align 8
  %205 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %206 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %205, i64 0, i32 0
  call void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* nonnull dereferenceable(16) %22, %class.SkWStream* %206) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #14
  %207 = load i8, i8* %24, align 2
  %208 = and i8 %207, 3
  %209 = zext i8 %208 to i32
  %210 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %211 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %210, i64 0, i32 0
  call void @_ZN10SkPDFUtils9PaintPathEN7SkPaint5StyleE14SkPathFillTypeP9SkWStream(i8 zeroext 0, i32 %209, %class.SkWStream* %211) #14
  %212 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %213 = load %class.SkPDFDocument*, %class.SkPDFDocument** %126, align 8
  %214 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %213, i64 0, i32 13, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %217, label %225

217:                                              ; preds = %188
  %218 = bitcast %class.SkPDFDict* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %218) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %218, i8 -86, i64 32, i1 false) #14
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #14
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14
  %219 = load %class.SkPDFDocument*, %class.SkPDFDocument** %126, align 8
  %220 = getelementptr inbounds %class.SkPDFDict, %class.SkPDFDict* %6, i64 0, i32 0
  %221 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %219, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = atomicrmw add i32* %221, i32 1 seq_cst
  %223 = call i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument* %219, %class.SkPDFObject* nonnull dereferenceable(8) %220, i32 %222) #14
  store i32 %223, i32* %214, align 4
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %218) #14
  %224 = load i32, i32* %214, align 4
  br label %225

225:                                              ; preds = %217, %188
  %226 = phi i32 [ %215, %188 ], [ %224, %217 ]
  call void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %226, %class.SkDynamicMemoryWStream* %212) #14
  %227 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %185, align 8
  %228 = icmp eq %class.SkDynamicMemoryWStream* %227, null
  br i1 %228, label %245, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %20, i64 0, i32 4
  %231 = getelementptr inbounds %class.SkPath, %class.SkPath* %230, i64 0, i32 0, i32 0
  %232 = load %class.SkPathRef*, %class.SkPathRef** %231, align 8
  %233 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %232, i64 0, i32 4, i32 2
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  %236 = select i1 %235, %class.SkPath* null, %class.SkPath* %230
  %237 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %20, i64 0, i32 0
  %238 = load %class.SkPDFDevice*, %class.SkPDFDevice** %237, align 8
  %239 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %20, i64 0, i32 5
  %240 = load %class.SkClipStack*, %class.SkClipStack** %239, align 8
  %241 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %20, i64 0, i32 2
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %20, i64 0, i32 3, i32 0
  %244 = load i32, i32* %243, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %238, %class.SkClipStack* %240, i32 %242, i32 %244, %class.SkPath* %236) #14
  br label %245

245:                                              ; preds = %181, %229, %225
  %246 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %20, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %246) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %182) #14
  %247 = atomicrmw add i32* %134, i32 -1 acq_rel
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %255

249:                                              ; preds = %245
  %250 = bitcast i8* %127 to %class.SkRefCntBase*
  %251 = bitcast i8* %127 to void (%class.SkRefCntBase*)***
  %252 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %251, align 8
  %253 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %252, i64 2
  %254 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, align 8
  call void %254(%class.SkRefCntBase* nonnull %250) #14
  br label %255

255:                                              ; preds = %245, %249
  %256 = load %class.SkImage*, %class.SkImage** %122, align 8
  %257 = icmp eq %class.SkImage* %256, null
  br i1 %257, label %268, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %class.SkImage, %class.SkImage* %256, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = atomicrmw add i32* %259, i32 -1 acq_rel
  %261 = icmp eq i32 %260, 1
  br i1 %261, label %262, label %268

262:                                              ; preds = %258
  %263 = bitcast %class.SkImage* %256 to %class.SkRefCntBase*
  %264 = bitcast %class.SkImage* %256 to void (%class.SkRefCntBase*)***
  %265 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %264, align 8
  %266 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %265, i64 2
  %267 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %266, align 8
  call void %267(%class.SkRefCntBase* nonnull %263) #14
  br label %268

268:                                              ; preds = %255, %258, %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #14
  br label %269

269:                                              ; preds = %93, %268
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #14
  %270 = icmp eq i8* %94, null
  br i1 %270, label %272, label %271

271:                                              ; preds = %269
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %94) #14
  br label %272

272:                                              ; preds = %271, %269, %5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #14
  %273 = load %class.SkPaint*, %class.SkPaint** %29, align 8
  %274 = icmp eq %class.SkPaint* %273, null
  br i1 %274, label %276, label %275

275:                                              ; preds = %272
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %273) #14
  store %class.SkPaint* null, %class.SkPaint** %29, align 8
  br label %276

276:                                              ; preds = %272, %275
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkDraw10DrawToMaskERK6SkPathPK7SkIRectPK12SkMaskFilterPK8SkMatrixP6SkMaskNSC_10CreateModeEN11SkStrokeRec9InitStyleE(%class.SkPath* dereferenceable(16), %struct.SkIRect*, %class.SkMaskFilter*, %class.SkMatrix*, %struct.SkMask*, i32, i32) local_unnamed_addr #2

declare void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.120*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL16transform_shaderP7SkPaintRK8SkMatrix(%class.SkPaint*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.sk_sp.230, align 8
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca %class.sk_sp.230, align 8
  %10 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -1, i64 36, i1 false)
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  store i32 -1431655766, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkShader*, %class.SkShader** %12, align 8
  %14 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #14, !noalias !37
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %16 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16, !noalias !37
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %18, align 16, !noalias !37
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %19, align 16, !noalias !37
  store i32 16, i32* %15, align 4, !noalias !37
  %20 = bitcast %class.sk_sp.230* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14, !noalias !37
  %21 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %4, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %21, align 8, !noalias !37
  %22 = bitcast %class.SkShader* %13 to %class.SkShaderBase*
  %23 = bitcast %class.SkShader* %13 to void (%class.sk_sp.230*, %class.SkShaderBase*, %class.SkMatrix*)***
  %24 = load void (%class.sk_sp.230*, %class.SkShaderBase*, %class.SkMatrix*)**, void (%class.sk_sp.230*, %class.SkShaderBase*, %class.SkMatrix*)*** %23, align 8, !noalias !37
  %25 = getelementptr inbounds void (%class.sk_sp.230*, %class.SkShaderBase*, %class.SkMatrix*)*, void (%class.sk_sp.230*, %class.SkShaderBase*, %class.SkMatrix*)** %24, i64 13
  %26 = load void (%class.sk_sp.230*, %class.SkShaderBase*, %class.SkMatrix*)*, void (%class.sk_sp.230*, %class.SkShaderBase*, %class.SkMatrix*)** %25, align 8, !noalias !37
  call void %26(%class.sk_sp.230* nonnull sret %4, %class.SkShaderBase* %22, %class.SkMatrix* nonnull %3) #14, !noalias !37
  %27 = load %class.SkShader*, %class.SkShader** %21, align 8, !noalias !37
  %28 = icmp eq %class.SkShader* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.SkShader, %class.SkShader* %27, i64 0, i32 1
  %31 = bitcast [4 x i8]* %30 to %class.SkMatrix*
  %32 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %32, align 16, !alias.scope !40
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %34, align 16, !alias.scope !40
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %35, align 16, !alias.scope !40
  store i32 16, i32* %11, align 4, !alias.scope !40
  %36 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %5, %class.SkMatrix* dereferenceable(40) %31, %class.SkMatrix* nonnull dereferenceable(40) %3) #14
  %37 = load %class.SkShader*, %class.SkShader** %21, align 8, !noalias !37
  %38 = icmp eq %class.SkShader* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %class.SkShader, %class.SkShader* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkShader* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkShader* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  call void %48(%class.SkRefCntBase* nonnull %44) #14
  br label %49

49:                                               ; preds = %43, %39, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14, !noalias !37
  br label %52

50:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14, !noalias !37
  %51 = getelementptr inbounds %class.SkShader, %class.SkShader* %13, i64 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %10, i8* align 4 %51, i64 40, i1 false) #14
  br label %52

52:                                               ; preds = %49, %50
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #14, !noalias !37
  %53 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #14
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %55 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %55, align 16
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %57, align 16
  %58 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %58, align 16
  store i32 16, i32* %54, align 4
  %59 = load i32, i32* %11, align 4
  %60 = trunc i32 %59 to i8
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %52
  %63 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %5) #14
  %64 = zext i8 %63 to i32
  store i32 %64, i32* %11, align 4
  br label %65

65:                                               ; preds = %62, %52
  %66 = phi i32 [ %64, %62 ], [ %59, %52 ]
  %67 = and i32 %66, 15
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %6) #14
  br label %73

71:                                               ; preds = %65
  %72 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %5, %class.SkMatrix* nonnull %6) #14
  br i1 %72, label %73, label %103

73:                                               ; preds = %69, %71
  %74 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #14
  %75 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %76 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76) #14
  %77 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %78 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %78, align 16, !alias.scope !43
  %79 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %80 = bitcast float* %79 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %80, align 16, !alias.scope !43
  %81 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %81, align 16, !alias.scope !43
  store i32 16, i32* %77, align 4, !alias.scope !43
  %82 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %8, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkMatrix* dereferenceable(40) %1) #14
  %83 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %83, align 16, !alias.scope !46
  %84 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %85 = bitcast float* %84 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %85, align 16, !alias.scope !46
  %86 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %86, align 16, !alias.scope !46
  store i32 16, i32* %75, align 4, !alias.scope !46
  %87 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %7, %class.SkMatrix* nonnull dereferenceable(40) %8, %class.SkMatrix* nonnull dereferenceable(40) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76) #14
  %88 = load %class.SkShader*, %class.SkShader** %12, align 8
  call void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.230* nonnull sret %9, %class.SkShader* %88, %class.SkMatrix* nonnull dereferenceable(40) %7) #14
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %0, %class.sk_sp.230* nonnull %9) #14
  %89 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %9, i64 0, i32 0
  %90 = load %class.SkShader*, %class.SkShader** %89, align 8
  %91 = icmp eq %class.SkShader* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %73
  %93 = getelementptr inbounds %class.SkShader, %class.SkShader* %90, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = bitcast %class.SkShader* %90 to %class.SkRefCntBase*
  %98 = bitcast %class.SkShader* %90 to void (%class.SkRefCntBase*)***
  %99 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, i64 2
  %101 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, align 8
  call void %101(%class.SkRefCntBase* nonnull %97) #14
  br label %102

102:                                              ; preds = %73, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #14
  br label %103

103:                                              ; preds = %102, %71
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry*, %class.SkPDFDevice*, %class.SkClipStack*, %class.SkMatrix* dereferenceable(40), %class.SkPaint* dereferenceable(72), float) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %0, i64 0, i32 0
  store %class.SkPDFDevice* %1, %class.SkPDFDevice** %7, align 8
  %8 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %0, i64 0, i32 1
  store %class.SkDynamicMemoryWStream* null, %class.SkDynamicMemoryWStream** %8, align 8
  %9 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %0, i64 0, i32 2
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %0, i64 0, i32 3
  %11 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %10, i64 0, i32 0
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %0, i64 0, i32 4
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %12) #14
  %13 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %0, i64 0, i32 5
  store %class.SkClipStack* %2, %class.SkClipStack** %13, align 8
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 192
  %17 = icmp eq i32 %16, 128
  br i1 %17, label %18, label %21

18:                                               ; preds = %6
  %19 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %3) #14
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %14, align 4
  br label %21

21:                                               ; preds = %6, %18
  %22 = phi i32 [ %20, %18 ], [ %15, %6 ]
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = and i32 %22, 192
  %27 = icmp eq i32 %26, 128
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %3) #14
  %30 = zext i8 %29 to i32
  store i32 %30, i32* %14, align 4
  br label %38

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = lshr i32 %33, 10
  %35 = and i32 %34, 255
  store i32 %35, i32* %9, align 8
  %36 = load %class.SkPDFDevice*, %class.SkPDFDevice** %7, align 8
  %37 = tail call %class.SkDynamicMemoryWStream* @_ZN11SkPDFDevice17setUpContentEntryEPK11SkClipStackRK8SkMatrixRK7SkPaintfP22SkPDFIndirectReference(%class.SkPDFDevice* %36, %class.SkClipStack* %2, %class.SkMatrix* dereferenceable(40) %3, %class.SkPaint* dereferenceable(72) %4, float %5, %struct.SkPDFIndirectReference* %10)
  store %class.SkDynamicMemoryWStream* %37, %class.SkDynamicMemoryWStream** %8, align 8
  br label %38

38:                                               ; preds = %28, %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice*, i32, %class.SkDynamicMemoryWStream*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2
  %5 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %4, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 2
  %8 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 3
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %4, i64 0, i32 0
  %14 = icmp sgt i32 %9, 0
  %15 = shl nsw i32 %9, 1
  %16 = select i1 %14, i32 %15, i32 4
  tail call void @_ZN12SkTHashTableI22SkPDFIndirectReferenceS0_N10SkTHashSetIS0_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable* %13, i32 %16) #14
  %17 = load i32, i32* %8, align 4
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i32 [ %9, %3 ], [ %17, %12 ]
  %20 = lshr i32 %1, 16
  %21 = xor i32 %20, %1
  %22 = mul i32 %21, -2048144789
  %23 = lshr i32 %22, 13
  %24 = xor i32 %23, %22
  %25 = mul i32 %24, -1028477387
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, i32 1, i32 %27
  %30 = icmp sgt i32 %19, 0
  br i1 %30, label %31, label %64

31:                                               ; preds = %18
  %32 = add nsw i32 %19, -1
  %33 = and i32 %32, %29
  %34 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %34, align 8
  br label %36

36:                                               ; preds = %57, %31
  %37 = phi i32 [ 0, %31 ], [ %62, %57 ]
  %38 = phi i32 [ %33, %31 ], [ %61, %57 ]
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %35, i64 %39
  %41 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %35, i64 %39, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %35, i64 %39, i32 1
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %40, i64 0, i32 0, i32 0
  store i32 %1, i32* %46, align 4
  store i32 %29, i32* %45, align 4
  %47 = load i32, i32* %5, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %5, align 8
  br label %64

49:                                               ; preds = %36
  %50 = icmp eq i32 %29, %42
  br i1 %50, label %51, label %57

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %40, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %40, i64 0, i32 0, i32 0
  store i32 %1, i32* %56, align 4
  br label %64

57:                                               ; preds = %51, %49
  %58 = add nsw i32 %38, -1
  %59 = icmp slt i32 %38, 1
  %60 = select i1 %59, i32 %19, i32 0
  %61 = add nsw i32 %58, %60
  %62 = add nuw nsw i32 %37, 1
  %63 = icmp eq i32 %62, %19
  br i1 %63, label %64, label %36

64:                                               ; preds = %57, %18, %44, %55
  %65 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %2, i64 0, i32 0
  tail call void @_ZN10SkPDFUtils17ApplyGraphicStateEiP9SkWStream(i32 %1, %class.SkWStream* %65) #14
  ret void
}

declare i32 @_ZN17SkPDFGraphicState20GetSMaskGraphicStateE22SkPDFIndirectReferencebNS_14SkPDFSMaskModeEP13SkPDFDocument(i32, i1 zeroext, i32, %class.SkPDFDocument*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice*, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkMatrix, align 4
  %6 = trunc i64 %1 to i32
  %7 = lshr i64 %1, 32
  %8 = trunc i64 %7 to i32
  %9 = trunc i64 %2 to i32
  %10 = lshr i64 %2, 32
  %11 = trunc i64 %10 to i32
  %12 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -1, i64 36, i1 false)
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  store i32 -1431655766, i32* %13, align 4
  %14 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %15 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 %15, i64 40, i1 false)
  %16 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = trunc i32 %18 to i8
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %16) #14
  %23 = zext i8 %22 to i32
  store i32 %23, i32* %17, align 4
  br label %24

24:                                               ; preds = %4, %21
  %25 = phi i32 [ %23, %21 ], [ %18, %4 ]
  %26 = and i32 %25, 15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = trunc i32 %25 to i8
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %16) #14
  %33 = zext i8 %32 to i32
  store i32 %33, i32* %17, align 4
  br label %34

34:                                               ; preds = %31, %28
  %35 = phi i32 [ %33, %31 ], [ %25, %28 ]
  %36 = and i32 %35, 15
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %5) #14
  br label %44

40:                                               ; preds = %34
  %41 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %16, %class.SkMatrix* nonnull %5) #14
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %5) #14
  br label %44

44:                                               ; preds = %38, %40, %42, %24
  %45 = select i1 %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* null
  %46 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %47 = load %class.SkPDFDocument*, %class.SkPDFDocument** %46, align 8
  %48 = call %class.SkStreamAsset* @_ZN11SkPDFDevice7contentEv(%class.SkPDFDevice* %0)
  %49 = call i8* @_Znwm(i64 32) #15
  %50 = bitcast i8* %49 to %class.SkPDFArray*
  call void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray* nonnull %50) #14
  call void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray* nonnull %50, i32 4) #14
  call void @_ZN10SkPDFArray9appendIntEi(%class.SkPDFArray* nonnull %50, i32 %6) #14
  call void @_ZN10SkPDFArray9appendIntEi(%class.SkPDFArray* nonnull %50, i32 %8) #14
  call void @_ZN10SkPDFArray9appendIntEi(%class.SkPDFArray* nonnull %50, i32 %9) #14
  call void @_ZN10SkPDFArray9appendIntEi(%class.SkPDFArray* nonnull %50, i32 %11) #14
  %51 = call %class.SkPDFDict* @_ZN11SkPDFDevice16makeResourceDictEv(%class.SkPDFDevice* %0)
  %52 = call i32 @_Z20SkPDFMakeFormXObjectP13SkPDFDocumentNSt3__110unique_ptrI13SkStreamAssetNS1_14default_deleteIS3_EEEENS2_I10SkPDFArrayNS4_IS7_EEEENS2_I9SkPDFDictNS4_ISA_EEEERK8SkMatrixPKc(%class.SkPDFDocument* %47, %class.SkStreamAsset* %48, %class.SkPDFArray* nonnull %50, %class.SkPDFDict* %51, %class.SkMatrix* nonnull dereferenceable(40) %5, i8* %45) #14
  call void @_ZN11SkPDFDevice5resetEv(%class.SkPDFDevice* %0)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #14
  ret i32 %52
}

declare void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* dereferenceable(16), %class.SkWStream*) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils9PaintPathEN7SkPaint5StyleE14SkPathFillTypeP9SkWStream(i8 zeroext, i32, %class.SkWStream*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice23clearMaskOnGraphicStateEP22SkDynamicMemoryWStream(%class.SkPDFDevice*, %class.SkDynamicMemoryWStream*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPDFDict, align 8
  %4 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %5 = load %class.SkPDFDocument*, %class.SkPDFDocument** %4, align 8
  %6 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %5, i64 0, i32 13, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = bitcast %class.SkPDFDict* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #14
  %11 = bitcast %class.SkPDFDict* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #14
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14
  %12 = load %class.SkPDFDocument*, %class.SkPDFDocument** %4, align 8
  %13 = getelementptr inbounds %class.SkPDFDict, %class.SkPDFDict* %3, i64 0, i32 0
  %14 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %12, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 seq_cst
  %16 = call i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument* %12, %class.SkPDFObject* nonnull dereferenceable(8) %13, i32 %15) #14
  store i32 %16, i32* %6, align 4
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #14
  %17 = load i32, i32* %6, align 4
  br label %18

18:                                               ; preds = %2, %9
  %19 = phi i32 [ %7, %2 ], [ %17, %9 ]
  call void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %19, %class.SkDynamicMemoryWStream* %1)
  ret void
}

declare void @_ZN10SkPDFUtils17ApplyGraphicStateEiP9SkWStream(i32, %class.SkWStream*) local_unnamed_addr #2

declare void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict*, i8*) unnamed_addr #2

declare void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict*) unnamed_addr #3

declare zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #2

declare void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint*, %class.sk_sp.229*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkPDFDevice17handleInversePathERK6SkPathRK7SkPaintb(%class.SkPDFDevice*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca %class.SkMatrix, align 4
  %11 = alloca <4 x float>, align 16
  %12 = bitcast <4 x float>* %11 to { <2 x float>, <2 x float> }*
  %13 = bitcast <4 x float>* %11 to %struct.SkRect*
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %16 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 2
  %18 = and i8 %17, 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %115, label %20

20:                                               ; preds = %4
  %21 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %22 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %23 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  %30 = zext i32 %25 to i64
  %31 = or i64 %29, %30
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %31, i64* %33, align 8
  %34 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %22, %struct.SkIRect* nonnull dereferenceable(16) %21) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  br i1 %34, label %115, label %35

35:                                               ; preds = %20
  %36 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #14
  %37 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 4
  %38 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #14
  %39 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %8, %class.SkPaint* dereferenceable(72) %2) #14
  %40 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = lshr i32 %41, 6
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 3
  %45 = add nsw i8 %44, -1
  %46 = icmp ult i8 %45, 2
  br i1 %46, label %47, label %54

47:                                               ; preds = %35
  %48 = call zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint* %2, %class.SkPath* dereferenceable(16) %1, %class.SkPath* nonnull %7, %struct.SkRect* null, float 1.000000e+00) #14
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %8, i8 zeroext 0) #14
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %8, float 0.000000e+00) #14
  br label %54

50:                                               ; preds = %47
  %51 = load i8, i8* %37, align 2
  %52 = xor i8 %51, 2
  store i8 %52, i8* %37, align 2
  %53 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %22, %class.SkMatrix* dereferenceable(40) %53, %class.SkPath* nonnull dereferenceable(16) %7, %class.SkPaint* dereferenceable(72) %2, i1 zeroext true)
  br label %113

54:                                               ; preds = %35, %49
  %55 = phi %class.SkPath* [ %7, %49 ], [ %1, %35 ]
  %56 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #14
  %57 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %58 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %58, align 16
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %60, align 16
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %61, align 16
  store i32 16, i32* %57, align 4
  %62 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #14
  %63 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %64 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %65 = bitcast %class.SkMatrix* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 %65, i64 40, i1 false)
  %66 = load i32, i32* %63, align 4
  %67 = trunc i32 %66 to i8
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %54
  %70 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %10) #14
  %71 = zext i8 %70 to i32
  store i32 %71, i32* %63, align 4
  br label %72

72:                                               ; preds = %69, %54
  %73 = phi i32 [ %71, %69 ], [ %66, %54 ]
  %74 = and i32 %73, 15
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %9) #14
  br label %80

78:                                               ; preds = %72
  %79 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %10, %class.SkMatrix* nonnull %9) #14
  br i1 %79, label %80, label %111

80:                                               ; preds = %76, %78
  %81 = bitcast <4 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #14
  %82 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #14
  %83 = load i32, i32* %24, align 4
  %84 = load i32, i32* %26, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw i64 %85, 32
  %87 = zext i32 %83 to i64
  %88 = or i64 %86, %87
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  store i64 %88, i64* %90, align 8
  %91 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* %22, %struct.SkIRect* nonnull dereferenceable(16) %15) #14
  %92 = bitcast <4 x float>* %11 to <2 x float>*
  %93 = extractvalue { <2 x float>, <2 x float> } %91, 0
  store <2 x float> %93, <2 x float>* %92, align 16
  %94 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %95 = extractvalue { <2 x float>, <2 x float> } %91, 1
  store <2 x float> %95, <2 x float>* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #14
  %96 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %9, %struct.SkRect* nonnull %13, %struct.SkRect* nonnull dereferenceable(16) %13, i32 1) #14
  %97 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %98 = load float, float* %97, align 8
  %99 = fadd float %98, 1.000000e+00
  %100 = load <4 x float>, <4 x float>* %11, align 16
  %101 = insertelement <4 x float> undef, float %99, i32 0
  %102 = shufflevector <4 x float> %101, <4 x float> undef, <4 x i32> zeroinitializer
  %103 = fsub <4 x float> %100, %102
  %104 = fadd <4 x float> %100, %102
  %105 = shufflevector <4 x float> %103, <4 x float> %104, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %105, <4 x float>* %11, align 16
  %106 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %5, %struct.SkRect* nonnull dereferenceable(16) %13, i32 0, i32 0) #14
  %107 = call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* nonnull dereferenceable(16) %5, %class.SkPath* dereferenceable(16) %55, i32 1, %class.SkPath* nonnull %7) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #14
  br i1 %107, label %108, label %109

108:                                              ; preds = %80
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %22, %class.SkMatrix* dereferenceable(40) %64, %class.SkPath* nonnull dereferenceable(16) %7, %class.SkPaint* nonnull dereferenceable(72) %8, i1 zeroext true)
  br label %109

109:                                              ; preds = %80, %108
  %110 = phi i1 [ true, %108 ], [ false, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #14
  br label %111

111:                                              ; preds = %78, %109
  %112 = phi i1 [ %110, %109 ], [ false, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #14
  br label %113

113:                                              ; preds = %50, %111
  %114 = phi i1 [ %112, %111 ], [ true, %50 ]
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #14
  br label %115

115:                                              ; preds = %4, %20, %113
  %116 = phi i1 [ %114, %113 ], [ false, %4 ], [ false, %20 ]
  ret i1 %116
}

declare float @_ZNK8SkMatrix9mapRadiusEf(%class.SkMatrix*, float) local_unnamed_addr #2

declare void @_ZN10SkPDFUtils8EmitPathERK6SkPathN7SkPaint5StyleEbP9SkWStreamf(%class.SkPath* dereferenceable(16), i8 zeroext, i1 zeroext, %class.SkWStream*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkPDFDevice*, %class.SkImage*, %struct.SkRect* readonly, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #0 align 2 {
  %8 = alloca %class.SkKeyedImage, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = icmp eq %class.SkImage* %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !49
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  store %class.SkImage* %1, %class.SkImage** %15, align 8, !alias.scope !49
  call void @_ZN12SkKeyedImageC1E5sk_spI7SkImageE(%class.SkKeyedImage* nonnull %8, %class.sk_sp* nonnull %9) #14
  %16 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  call void @_ZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS2_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrix(%class.SkPDFDevice* %0, %class.SkKeyedImage* nonnull %8, %struct.SkRect* %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* dereferenceable(72) %5, %class.SkMatrix* dereferenceable(40) %16)
  %17 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %8, i64 0, i32 0, i32 0
  %18 = load %class.SkImage*, %class.SkImage** %17, align 8
  %19 = icmp eq %class.SkImage* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkImage, %class.SkImage* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkImage* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkImage* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #14
  br label %30

30:                                               ; preds = %14, %20, %24
  %31 = load %class.SkImage*, %class.SkImage** %15, align 8
  %32 = icmp eq %class.SkImage* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.SkImage, %class.SkImage* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkImage* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.SkImage* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #14
  br label %43

43:                                               ; preds = %30, %33, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS2_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrix(%class.SkPDFDevice*, %class.SkKeyedImage*, %struct.SkRect* readonly, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #6 align 2 {
  %8 = alloca %struct.SkSamplingOptions, align 4
  %9 = alloca %class.SkPDFDict, align 8
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = alloca %struct.SkSamplingOptions, align 4
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = alloca %class.sk_sp.324, align 8
  %16 = alloca %struct.SkImageInfo, align 16
  %17 = alloca %class.SkPaint, align 8
  %18 = alloca %class.sk_sp.232, align 8
  %19 = alloca %struct.SkSamplingOptions, align 4
  %20 = alloca %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair", align 8
  %21 = alloca { i64, i64 }, align 8
  %22 = alloca <4 x i32>, align 16
  %23 = bitcast <4 x i32>* %22 to { i64, i64 }*
  %24 = alloca { <2 x float>, <2 x float> }, align 8
  %25 = bitcast { <2 x float>, <2 x float> }* %24 to %struct.SkRect*
  %26 = alloca %class.SkMatrix, align 16
  %27 = alloca { <2 x float>, <2 x float> }, align 8
  %28 = bitcast { <2 x float>, <2 x float> }* %27 to %struct.SkRect*
  %29 = alloca { i64, i64 }, align 8
  %30 = alloca %class.SkKeyedImage, align 8
  %31 = alloca %class.SkTCopyOnFirstWrite, align 8
  %32 = alloca %class.sk_sp.324, align 8
  %33 = alloca %struct.SkImageInfo, align 16
  %34 = alloca %class.SkPaint, align 8
  %35 = alloca %class.sk_sp.230, align 8
  %36 = alloca <2 x i64>, align 16
  %37 = bitcast <2 x i64>* %36 to %struct.SkRGBA4f*
  %38 = alloca %class.sk_sp.230, align 8
  %39 = alloca %class.SkKeyedImage, align 8
  %40 = alloca %class.sk_sp, align 8
  %41 = alloca %class.sk_sp, align 8
  %42 = alloca %class.SkCanvas, align 8
  %43 = alloca %class.sk_sp.120, align 8
  %44 = alloca { <2 x float>, <2 x float> }, align 8
  %45 = bitcast { <2 x float>, <2 x float> }* %44 to %struct.SkRect*
  %46 = alloca { i64, i64 }, align 8
  %47 = bitcast { i64, i64 }* %46 to %struct.SkIRect*
  %48 = alloca %class.SkPaint, align 8
  %49 = alloca %class.sk_sp.230, align 8
  %50 = alloca %struct.SkSamplingOptions, align 4
  %51 = alloca %class.sk_sp.231, align 8
  %52 = alloca { i64, i64 }, align 8
  %53 = bitcast { i64, i64 }* %52 to %struct.SkIRect*
  %54 = alloca %class.ScopedContentEntry, align 8
  %55 = alloca { <2 x float>, <2 x float> }, align 8
  %56 = bitcast { <2 x float>, <2 x float> }* %55 to %struct.SkRect*
  %57 = alloca %class.sk_sp.230, align 8
  %58 = alloca %struct.SkSamplingOptions, align 4
  %59 = alloca %class.SkPath, align 8
  %60 = alloca i8, align 1
  %61 = alloca %class.SkScopeExit, align 8
  %62 = alloca %class.SkMatrix, align 4
  %63 = alloca { <2 x float>, <2 x float> }, align 8
  %64 = bitcast { <2 x float>, <2 x float> }* %63 to %struct.SkRect*
  %65 = alloca %class.SkPath, align 8
  %66 = alloca %class.SkPath, align 8
  %67 = alloca %struct.SkRect, align 4
  %68 = alloca { <2 x float>, <2 x float> }, align 8
  %69 = bitcast { <2 x float>, <2 x float> }* %68 to %struct.SkRect*
  %70 = alloca %class.sk_sp.324, align 8
  %71 = alloca %struct.SkImageInfo, align 16
  %72 = alloca %class.SkMatrix, align 4
  %73 = alloca %class.SkKeyedImage, align 8
  %74 = alloca %class.sk_sp, align 8
  %75 = alloca %class.SkMatrix, align 16
  %76 = alloca %class.ScopedContentEntry, align 8
  %77 = alloca %class.SkPath, align 8
  %78 = alloca %class.SkPath, align 8
  %79 = alloca { <2 x float>, <2 x float> }, align 8
  %80 = bitcast { <2 x float>, <2 x float> }* %79 to %struct.SkRect*
  %81 = alloca %class.sk_sp, align 8
  %82 = alloca %class.SkKeyedImage, align 8
  %83 = alloca %class.sk_sp, align 8
  %84 = alloca %struct.SkBitmapKey, align 4
  %85 = bitcast { i64, i64 }* %21 to %struct.SkIRect*
  %86 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %87 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #14
  %88 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %89 to i64
  %95 = or i64 %93, %94
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  store i64 %95, i64* %97, align 8
  %98 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %86, %struct.SkIRect* nonnull dereferenceable(16) %85) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #14
  br i1 %98, label %1345, label %99

99:                                               ; preds = %7
  %100 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 0, i32 0
  %101 = load %class.SkImage*, %class.SkImage** %100, align 8
  %102 = icmp eq %class.SkImage* %101, null
  br i1 %102, label %1345, label %103

103:                                              ; preds = %99
  %104 = bitcast <4 x i32>* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #14
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  %106 = getelementptr inbounds %class.SkImage, %class.SkImage* %101, i64 0, i32 2, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %class.SkImage, %class.SkImage* %101, i64 0, i32 2, i32 1, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = shl nuw i64 %110, 32
  %112 = zext i32 %107 to i64
  %113 = or i64 %111, %112
  %114 = bitcast <4 x i32>* %22 to i64*
  store i64 0, i64* %114, align 16
  store i64 %113, i64* %105, align 8
  %115 = bitcast { <2 x float>, <2 x float> }* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #14
  %116 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %24, i64 0, i32 0, i64 0
  %117 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %25, i64 0, i32 1
  %118 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %24, i64 0, i32 1, i64 0
  %119 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %25, i64 0, i32 3
  %120 = icmp ne %struct.SkRect* %2, null
  %121 = bitcast { <2 x float>, <2 x float> }* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -1, i64 16, i1 false)
  br i1 %120, label %122, label %124

122:                                              ; preds = %103
  %123 = bitcast %struct.SkRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 4 %123, i64 16, i1 false)
  br label %131

124:                                              ; preds = %103
  %125 = sitofp i32 %107 to float
  %126 = insertelement <2 x float> undef, float %125, i32 0
  %127 = sitofp i32 %109 to float
  %128 = insertelement <2 x float> %126, float %127, i32 1
  %129 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %24, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %129, align 8
  %130 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %24, i64 0, i32 1
  store <2 x float> %128, <2 x float>* %130, align 8
  br label %131

131:                                              ; preds = %124, %122
  %132 = bitcast %class.SkMatrix* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %132) #14
  %133 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 1
  %134 = bitcast %class.SkMatrix* %26 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %134, align 16, !alias.scope !52
  %135 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 4
  %136 = bitcast float* %135 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %136, align 16, !alias.scope !52
  %137 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %26, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %137, align 16, !alias.scope !52
  store i32 16, i32* %133, align 4, !alias.scope !52
  %138 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %26, %struct.SkRect* nonnull dereferenceable(16) %25, %struct.SkRect* dereferenceable(16) %3, i32 0) #14
  br i1 %120, label %139, label %248

139:                                              ; preds = %131
  %140 = sitofp i32 %107 to float
  %141 = insertelement <2 x float> undef, float %140, i32 0
  %142 = sitofp i32 %109 to float
  %143 = insertelement <2 x float> %141, float %142, i32 1
  %144 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %145 = load float, float* %144, align 4
  %146 = fcmp une float %145, 0.000000e+00
  br i1 %146, label %159, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds float, float* %144, i64 1
  %149 = load float, float* %148, align 4
  %150 = fcmp une float %149, 0.000000e+00
  br i1 %150, label %159, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds float, float* %144, i64 2
  %153 = load float, float* %152, align 4
  %154 = fcmp une float %153, %140
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds float, float* %144, i64 3
  %157 = load float, float* %156, align 4
  %158 = fcmp une float %157, %142
  br i1 %158, label %159, label %248

159:                                              ; preds = %139, %147, %151, %155
  %160 = bitcast { <2 x float>, <2 x float> }* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #14
  %161 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %27, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %161, align 8
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %27, i64 0, i32 1
  store <2 x float> %143, <2 x float>* %162, align 8
  %163 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %25, %struct.SkRect* nonnull dereferenceable(16) %28) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #14
  br i1 %163, label %164, label %1344

164:                                              ; preds = %159
  %165 = load float, float* %116, align 8
  %166 = call float @llvm.floor.f32(float %165) #14
  %167 = load float, float* %117, align 4
  %168 = call float @llvm.floor.f32(float %167) #14
  %169 = load float, float* %118, align 8
  %170 = call float @llvm.ceil.f32(float %169) #14
  %171 = load float, float* %119, align 4
  %172 = call float @llvm.ceil.f32(float %171) #14
  %173 = insertelement <4 x float> undef, float %166, i32 0
  %174 = insertelement <4 x float> %173, float %168, i32 1
  %175 = insertelement <4 x float> %174, float %170, i32 2
  %176 = insertelement <4 x float> %175, float %172, i32 3
  %177 = fcmp olt <4 x float> %176, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %178 = select <4 x i1> %177, <4 x float> %176, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %179 = fcmp ogt <4 x float> %178, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %180 = select <4 x i1> %179, <4 x float> %178, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %181 = fptosi <4 x float> %180 to <4 x i32>
  store <4 x i32> %181, <4 x i32>* %22, align 16
  %182 = extractelement <4 x i32> %181, i32 0
  %183 = sitofp i32 %182 to float
  %184 = extractelement <4 x i32> %181, i32 1
  %185 = sitofp i32 %184 to float
  %186 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %26, float %183, float %185) #14
  %187 = bitcast { i64, i64 }* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #14
  %188 = load %class.SkImage*, %class.SkImage** %100, align 8
  %189 = getelementptr inbounds %class.SkImage, %class.SkImage* %188, i64 0, i32 2, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %class.SkImage, %class.SkImage* %188, i64 0, i32 2, i32 1, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i64
  %194 = shl nuw i64 %193, 32
  %195 = zext i32 %190 to i64
  %196 = or i64 %194, %195
  %197 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 0
  store i64 0, i64* %197, align 8
  %198 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 1
  store i64 %196, i64* %198, align 8
  %199 = call i32 @bcmp(i8* nonnull %104, i8* nonnull %187, i64 16) #14
  %200 = icmp eq i32 %199, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #14
  br i1 %200, label %245, label %201

201:                                              ; preds = %164
  %202 = bitcast %class.SkKeyedImage* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #14
  %203 = load i64, i64* %114, align 16
  %204 = load i64, i64* %105, align 8
  call void @_ZNK12SkKeyedImage6subsetE7SkIRect(%class.SkKeyedImage* nonnull sret %30, %class.SkKeyedImage* %1, i64 %203, i64 %204) #14
  %205 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %30, i64 0, i32 0, i32 0
  %206 = bitcast %class.SkKeyedImage* %30 to i64*
  %207 = load i64, i64* %206, align 8
  store %class.SkImage* null, %class.SkImage** %205, align 8
  %208 = load %class.SkImage*, %class.SkImage** %100, align 8
  %209 = bitcast %class.SkKeyedImage* %1 to i64*
  store i64 %207, i64* %209, align 8
  %210 = icmp eq %class.SkImage* %208, null
  br i1 %210, label %211, label %216

211:                                              ; preds = %201
  %212 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %213 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %30, i64 0, i32 1
  %214 = bitcast %struct.SkBitmapKey* %212 to i8*
  %215 = bitcast %struct.SkBitmapKey* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 8 %215, i64 20, i1 false) #14
  br label %243

216:                                              ; preds = %201
  %217 = getelementptr inbounds %class.SkImage, %class.SkImage* %208, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 -1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %226

220:                                              ; preds = %216
  %221 = bitcast %class.SkImage* %208 to %class.SkRefCntBase*
  %222 = bitcast %class.SkImage* %208 to void (%class.SkRefCntBase*)***
  %223 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %222, align 8
  %224 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %223, i64 2
  %225 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, align 8
  call void %225(%class.SkRefCntBase* nonnull %221) #14
  br label %226

226:                                              ; preds = %216, %220
  %227 = load %class.SkImage*, %class.SkImage** %205, align 8
  %228 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %229 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %30, i64 0, i32 1
  %230 = bitcast %struct.SkBitmapKey* %228 to i8*
  %231 = bitcast %struct.SkBitmapKey* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 20, i1 false) #14
  %232 = icmp eq %class.SkImage* %227, null
  br i1 %232, label %243, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %class.SkImage, %class.SkImage* %227, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = atomicrmw add i32* %234, i32 -1 acq_rel
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %237, label %243

237:                                              ; preds = %233
  %238 = bitcast %class.SkImage* %227 to %class.SkRefCntBase*
  %239 = bitcast %class.SkImage* %227 to void (%class.SkRefCntBase*)***
  %240 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %239, align 8
  %241 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %240, i64 2
  %242 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %241, align 8
  call void %242(%class.SkRefCntBase* nonnull %238) #14
  br label %243

243:                                              ; preds = %211, %226, %233, %237
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #14
  %244 = load %class.SkImage*, %class.SkImage** %100, align 8
  br label %245

245:                                              ; preds = %164, %243
  %246 = phi %class.SkImage* [ %188, %164 ], [ %244, %243 ]
  %247 = icmp eq %class.SkImage* %246, null
  br i1 %247, label %1344, label %248

248:                                              ; preds = %245, %131, %155
  %249 = bitcast %class.SkTCopyOnFirstWrite* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %249) #14
  %250 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %31, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 -86, i64 72, i1 false)
  %251 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %31, i64 0, i32 0
  store %class.SkPaint* %5, %class.SkPaint** %251, align 8
  %252 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %31, i64 0, i32 1, i32 1
  store %class.SkPaint* null, %class.SkPaint** %252, align 8
  %253 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 8, i32 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = and i32 %254, 261120
  %256 = icmp eq i32 %255, 3072
  br i1 %256, label %281, label %257

257:                                              ; preds = %248
  %258 = load %class.SkImage*, %class.SkImage** %100, align 8
  %259 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %258) #14
  %260 = icmp eq i32 %259, 1
  br i1 %260, label %261, label %281

261:                                              ; preds = %257
  %262 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %263 = call i32 @_Z19SkInterpretXfermodeRK7SkPaintb(%class.SkPaint* dereferenceable(72) %262, i1 zeroext false) #14
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %265, label %281

265:                                              ; preds = %261
  %266 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %31, i64 0, i32 1
  %267 = load %class.SkPaint*, %class.SkPaint** %252, align 8
  %268 = icmp eq %class.SkPaint* %267, null
  %269 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  br i1 %268, label %270, label %275

270:                                              ; preds = %265
  %271 = bitcast %class.SkTLazy* %266 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %271, %class.SkPaint* dereferenceable(72) %269) #14
  %272 = bitcast %class.SkPaint** %252 to %class.SkTLazy**
  store %class.SkTLazy* %266, %class.SkTLazy** %272, align 8
  %273 = ptrtoint %class.SkTLazy* %266 to i64
  %274 = bitcast %class.SkTCopyOnFirstWrite* %31 to i64*
  store i64 %273, i64* %274, align 8
  br label %275

275:                                              ; preds = %265, %270
  %276 = phi %class.SkPaint* [ %271, %270 ], [ %269, %265 ]
  %277 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %276, i64 0, i32 8, i32 0, i32 0
  %278 = load i32, i32* %277, align 8
  %279 = and i32 %278, -261121
  %280 = or i32 %279, 3072
  store i32 %280, i32* %277, align 8
  br label %281

281:                                              ; preds = %248, %275, %261, %257
  %282 = load %class.SkImage*, %class.SkImage** %100, align 8
  %283 = call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* %282) #14
  br i1 %283, label %284, label %450

284:                                              ; preds = %281
  %285 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %286 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %285, i64 0, i32 3, i32 0
  %287 = load %class.SkColorFilter*, %class.SkColorFilter** %286, align 8
  %288 = icmp eq %class.SkColorFilter* %287, null
  br i1 %288, label %450, label %289

289:                                              ; preds = %284
  %290 = bitcast %class.sk_sp.324* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #14
  %291 = getelementptr inbounds %class.sk_sp.324, %class.sk_sp.324* %32, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %291, align 8
  %292 = bitcast %struct.SkImageInfo* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #14
  %293 = load %class.SkImage*, %class.SkImage** %100, align 8
  %294 = getelementptr inbounds %class.SkImage, %class.SkImage* %293, i64 0, i32 2, i32 1, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = getelementptr inbounds %class.SkImage, %class.SkImage* %293, i64 0, i32 2, i32 1, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i64
  %299 = shl nuw i64 %298, 32
  %300 = zext i32 %295 to i64
  %301 = or i64 %299, %300
  %302 = bitcast %struct.SkImageInfo* %33 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %302, align 16, !alias.scope !57
  %303 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %33, i64 0, i32 1
  %304 = bitcast %struct.SkISize* %303 to i64*
  store i64 %301, i64* %304, align 16, !alias.scope !57
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.324* nonnull sret %32, %struct.SkImageInfo* nonnull dereferenceable(24) %33, i64 0, %class.SkSurfaceProps* null) #14
  %305 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %33, i64 0, i32 0, i32 0, i32 0
  %306 = load %class.SkColorSpace*, %class.SkColorSpace** %305, align 16
  %307 = icmp eq %class.SkColorSpace* %306, null
  br i1 %307, label %314, label %308

308:                                              ; preds = %289
  %309 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %306, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = atomicrmw add i32* %309, i32 -1 acq_rel
  %311 = icmp eq i32 %310, 1
  br i1 %311, label %312, label %314

312:                                              ; preds = %308
  %313 = bitcast %class.SkColorSpace* %306 to i8*
  call void @_ZdlPv(i8* %313) #15
  br label %314

314:                                              ; preds = %312, %308, %289
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #14
  %315 = load %class.SkSurface*, %class.SkSurface** %291, align 8
  %316 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %315) #14
  %317 = bitcast %class.SkPaint* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %317) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %317, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %34) #14
  %318 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %319 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %318, i64 0, i32 1, i32 0
  %320 = load %class.SkShader*, %class.SkShader** %319, align 8
  %321 = icmp eq %class.SkShader* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %314
  %323 = getelementptr inbounds %class.SkShader, %class.SkShader* %320, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = atomicrmw add i32* %323, i32 1 monotonic, !noalias !62
  br label %325

325:                                              ; preds = %314, %322
  %326 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %35, i64 0, i32 0
  store %class.SkShader* %320, %class.SkShader** %326, align 8, !alias.scope !62
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %34, %class.sk_sp.230* nonnull %35) #14
  %327 = load %class.SkShader*, %class.SkShader** %326, align 8
  %328 = icmp eq %class.SkShader* %327, null
  br i1 %328, label %339, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %class.SkShader, %class.SkShader* %327, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = atomicrmw add i32* %330, i32 -1 acq_rel
  %332 = icmp eq i32 %331, 1
  br i1 %332, label %333, label %339

333:                                              ; preds = %329
  %334 = bitcast %class.SkShader* %327 to %class.SkRefCntBase*
  %335 = bitcast %class.SkShader* %327 to void (%class.SkRefCntBase*)***
  %336 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %335, align 8
  %337 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %336, i64 2
  %338 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %337, align 8
  call void %338(%class.SkRefCntBase* nonnull %334) #14
  br label %339

339:                                              ; preds = %325, %329, %333
  %340 = bitcast <2 x i64>* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %340) #14
  %341 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %342 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %341, i64 0, i32 5
  %343 = bitcast %struct.SkRGBA4f* %342 to <2 x i64>*
  %344 = load <2 x i64>, <2 x i64>* %343, align 8
  store <2 x i64> %344, <2 x i64>* %36, align 16
  call void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %34, %struct.SkRGBA4f* nonnull dereferenceable(16) %37, %class.SkColorSpace* null) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %340) #14
  %345 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRGBA4f*
  %346 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %346) #14
  %347 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #14
  %348 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %349 = extractvalue { <2 x float>, <2 x float> } %347, 0
  store <2 x float> %349, <2 x float>* %348, align 8
  %350 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %351 = extractvalue { <2 x float>, <2 x float> } %347, 1
  store <2 x float> %351, <2 x float>* %350, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %316, %struct.SkRGBA4f* nonnull dereferenceable(16) %345, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %346) #14
  %352 = load %class.SkImage*, %class.SkImage** %100, align 8
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %316, %class.SkImage* %352, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* nonnull %34) #14
  %353 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %354 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %353, i64 0, i32 1, i32 0
  %355 = load %class.SkShader*, %class.SkShader** %354, align 8
  %356 = icmp eq %class.SkShader* %355, null
  br i1 %356, label %381, label %357

357:                                              ; preds = %339
  %358 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %31, i64 0, i32 1
  %359 = load %class.SkPaint*, %class.SkPaint** %252, align 8
  %360 = icmp eq %class.SkPaint* %359, null
  br i1 %360, label %361, label %366

361:                                              ; preds = %357
  %362 = bitcast %class.SkTLazy* %358 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %362, %class.SkPaint* dereferenceable(72) %353) #14
  %363 = bitcast %class.SkPaint** %252 to %class.SkTLazy**
  store %class.SkTLazy* %358, %class.SkTLazy** %363, align 8
  %364 = ptrtoint %class.SkTLazy* %358 to i64
  %365 = bitcast %class.SkTCopyOnFirstWrite* %31 to i64*
  store i64 %364, i64* %365, align 8
  br label %366

366:                                              ; preds = %357, %361
  %367 = phi %class.SkPaint* [ %362, %361 ], [ %353, %357 ]
  %368 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %38, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %368, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %367, %class.sk_sp.230* nonnull %38) #14
  %369 = load %class.SkShader*, %class.SkShader** %368, align 8
  %370 = icmp eq %class.SkShader* %369, null
  br i1 %370, label %381, label %371

371:                                              ; preds = %366
  %372 = getelementptr inbounds %class.SkShader, %class.SkShader* %369, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = atomicrmw add i32* %372, i32 -1 acq_rel
  %374 = icmp eq i32 %373, 1
  br i1 %374, label %375, label %381

375:                                              ; preds = %371
  %376 = bitcast %class.SkShader* %369 to %class.SkRefCntBase*
  %377 = bitcast %class.SkShader* %369 to void (%class.SkRefCntBase*)***
  %378 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %377, align 8
  %379 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %378, i64 2
  %380 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %379, align 8
  call void %380(%class.SkRefCntBase* nonnull %376) #14
  br label %381

381:                                              ; preds = %375, %371, %366, %339
  %382 = bitcast %class.SkKeyedImage* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %382) #14
  %383 = load %class.SkSurface*, %class.SkSurface** %291, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp* nonnull sret %40, %class.SkSurface* %383) #14
  call void @_ZN12SkKeyedImageC1E5sk_spI7SkImageE(%class.SkKeyedImage* nonnull %39, %class.sk_sp* nonnull %40) #14
  %384 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %39, i64 0, i32 0, i32 0
  %385 = bitcast %class.SkKeyedImage* %39 to i64*
  %386 = load i64, i64* %385, align 8
  store %class.SkImage* null, %class.SkImage** %384, align 8
  %387 = load %class.SkImage*, %class.SkImage** %100, align 8
  %388 = bitcast %class.SkKeyedImage* %1 to i64*
  store i64 %386, i64* %388, align 8
  %389 = icmp eq %class.SkImage* %387, null
  br i1 %389, label %390, label %395

390:                                              ; preds = %381
  %391 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %392 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %39, i64 0, i32 1
  %393 = bitcast %struct.SkBitmapKey* %391 to i8*
  %394 = bitcast %struct.SkBitmapKey* %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %393, i8* align 8 %394, i64 20, i1 false) #14
  br label %422

395:                                              ; preds = %381
  %396 = getelementptr inbounds %class.SkImage, %class.SkImage* %387, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = atomicrmw add i32* %396, i32 -1 acq_rel
  %398 = icmp eq i32 %397, 1
  br i1 %398, label %399, label %405

399:                                              ; preds = %395
  %400 = bitcast %class.SkImage* %387 to %class.SkRefCntBase*
  %401 = bitcast %class.SkImage* %387 to void (%class.SkRefCntBase*)***
  %402 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %401, align 8
  %403 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %402, i64 2
  %404 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %403, align 8
  call void %404(%class.SkRefCntBase* nonnull %400) #14
  br label %405

405:                                              ; preds = %395, %399
  %406 = load %class.SkImage*, %class.SkImage** %384, align 8
  %407 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %408 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %39, i64 0, i32 1
  %409 = bitcast %struct.SkBitmapKey* %407 to i8*
  %410 = bitcast %struct.SkBitmapKey* %408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %409, i8* align 8 %410, i64 20, i1 false) #14
  %411 = icmp eq %class.SkImage* %406, null
  br i1 %411, label %422, label %412

412:                                              ; preds = %405
  %413 = getelementptr inbounds %class.SkImage, %class.SkImage* %406, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = atomicrmw add i32* %413, i32 -1 acq_rel
  %415 = icmp eq i32 %414, 1
  br i1 %415, label %416, label %422

416:                                              ; preds = %412
  %417 = bitcast %class.SkImage* %406 to %class.SkRefCntBase*
  %418 = bitcast %class.SkImage* %406 to void (%class.SkRefCntBase*)***
  %419 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %418, align 8
  %420 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %419, i64 2
  %421 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %420, align 8
  call void %421(%class.SkRefCntBase* nonnull %417) #14
  br label %422

422:                                              ; preds = %390, %405, %412, %416
  %423 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %40, i64 0, i32 0
  %424 = load %class.SkImage*, %class.SkImage** %423, align 8
  %425 = icmp eq %class.SkImage* %424, null
  br i1 %425, label %436, label %426

426:                                              ; preds = %422
  %427 = getelementptr inbounds %class.SkImage, %class.SkImage* %424, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = atomicrmw add i32* %427, i32 -1 acq_rel
  %429 = icmp eq i32 %428, 1
  br i1 %429, label %430, label %436

430:                                              ; preds = %426
  %431 = bitcast %class.SkImage* %424 to %class.SkRefCntBase*
  %432 = bitcast %class.SkImage* %424 to void (%class.SkRefCntBase*)***
  %433 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %432, align 8
  %434 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %433, i64 2
  %435 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %434, align 8
  call void %435(%class.SkRefCntBase* nonnull %431) #14
  br label %436

436:                                              ; preds = %422, %426, %430
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %382) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %317) #14
  %437 = load %class.SkSurface*, %class.SkSurface** %291, align 8
  %438 = icmp eq %class.SkSurface* %437, null
  br i1 %438, label %449, label %439

439:                                              ; preds = %436
  %440 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %437, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = atomicrmw add i32* %440, i32 -1 acq_rel
  %442 = icmp eq i32 %441, 1
  br i1 %442, label %443, label %449

443:                                              ; preds = %439
  %444 = bitcast %class.SkSurface* %437 to %class.SkRefCntBase*
  %445 = bitcast %class.SkSurface* %437 to void (%class.SkRefCntBase*)***
  %446 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %445, align 8
  %447 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %446, i64 2
  %448 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %447, align 8
  call void %448(%class.SkRefCntBase* nonnull %444) #14
  br label %449

449:                                              ; preds = %436, %439, %443
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #14
  br label %450

450:                                              ; preds = %284, %449, %281
  %451 = load %class.SkImage*, %class.SkImage** %100, align 8
  %452 = call zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage* %451) #14
  br i1 %452, label %453, label %737

453:                                              ; preds = %450
  %454 = bitcast %class.sk_sp* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #14
  %455 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %41, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %455, align 8
  %456 = load %class.SkImage*, %class.SkImage** %100, align 8
  call void @_Z30alpha_image_to_greyscale_imagePK7SkImage(%class.sk_sp* nonnull sret %41, %class.SkImage* %456)
  %457 = load %class.SkImage*, %class.SkImage** %455, align 8
  %458 = icmp eq %class.SkImage* %457, null
  br i1 %458, label %736, label %459

459:                                              ; preds = %453
  %460 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  %461 = bitcast %struct.SkISize* %460 to i64*
  %462 = load i64, i64* %461, align 8, !noalias !65
  %463 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %464 = call i8* @_Znwm(i64 3360) #15, !noalias !68
  %465 = bitcast i8* %464 to %class.SkPDFDevice*
  %466 = load %class.SkPDFDocument*, %class.SkPDFDocument** %463, align 8, !noalias !68
  %467 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14, !noalias !68
  call void @_ZN11SkPDFDeviceC2E7SkISizeP13SkPDFDocumentRK8SkMatrix(%class.SkPDFDevice* nonnull %465, i64 %462, %class.SkPDFDocument* %466, %class.SkMatrix* dereferenceable(40) %467) #14, !noalias !68
  %468 = bitcast %class.SkCanvas* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %468) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %468, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.119, [384 x i64], %class.sk_sp.120, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.121", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.127" }* @__const._ZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS2_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrix.canvas to i8*), i64 3232, i1 false)
  %469 = getelementptr inbounds %class.sk_sp.120, %class.sk_sp.120* %43, i64 0, i32 0
  %470 = getelementptr inbounds i8, i8* %464, i64 8
  %471 = bitcast i8* %470 to i32*
  %472 = atomicrmw add i32* %471, i32 1 monotonic
  %473 = bitcast %class.sk_sp.120* %43 to i8**
  store i8* %464, i8** %473, align 8
  call void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas* nonnull %42, %class.sk_sp.120* nonnull %43) #14
  %474 = load %class.SkBaseDevice*, %class.SkBaseDevice** %469, align 8
  %475 = icmp eq %class.SkBaseDevice* %474, null
  br i1 %475, label %486, label %476

476:                                              ; preds = %459
  %477 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %474, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = atomicrmw add i32* %477, i32 -1 acq_rel
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %480, label %486

480:                                              ; preds = %476
  %481 = bitcast %class.SkBaseDevice* %474 to %class.SkRefCntBase*
  %482 = bitcast %class.SkBaseDevice* %474 to void (%class.SkRefCntBase*)***
  %483 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %482, align 8
  %484 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %483, i64 2
  %485 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %484, align 8
  call void %485(%class.SkRefCntBase* nonnull %481) #14
  br label %486

486:                                              ; preds = %459, %476, %480
  %487 = bitcast { <2 x float>, <2 x float> }* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %487) #14
  %488 = bitcast { i64, i64 }* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %488) #14
  %489 = load i32, i32* %88, align 4
  %490 = load i32, i32* %90, align 4
  %491 = zext i32 %490 to i64
  %492 = shl nuw i64 %491, 32
  %493 = zext i32 %489 to i64
  %494 = or i64 %492, %493
  %495 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %46, i64 0, i32 0
  store i64 0, i64* %495, align 8
  %496 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %46, i64 0, i32 1
  store i64 %494, i64* %496, align 8
  %497 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* %86, %struct.SkIRect* nonnull dereferenceable(16) %47) #14
  %498 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %44, i64 0, i32 0
  %499 = extractvalue { <2 x float>, <2 x float> } %497, 0
  store <2 x float> %499, <2 x float>* %498, align 8
  %500 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %44, i64 0, i32 1
  %501 = extractvalue { <2 x float>, <2 x float> } %497, 1
  store <2 x float> %501, <2 x float>* %500, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* nonnull %42, %struct.SkRect* nonnull dereferenceable(16) %45, i32 1, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %488) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %487) #14
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* nonnull %42, %class.SkMatrix* dereferenceable(40) %6) #14
  %502 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %503 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %502, i64 0, i32 2, i32 0
  %504 = load %class.SkMaskFilter*, %class.SkMaskFilter** %503, align 8
  %505 = icmp eq %class.SkMaskFilter* %504, null
  br i1 %505, label %546, label %506

506:                                              ; preds = %486
  %507 = bitcast %class.SkPaint* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %507) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %507, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %48) #14
  %508 = load %class.SkImage*, %class.SkImage** %455, align 8
  %509 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %50, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %509) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %509, i8 0, i64 20, i1 false)
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.230* nonnull sret %49, %class.SkImage* %508, i32 0, i32 0, %struct.SkSamplingOptions* nonnull dereferenceable(20) %50, %class.SkMatrix* nonnull %26) #14
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %48, %class.sk_sp.230* nonnull %49) #14
  %510 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %49, i64 0, i32 0
  %511 = load %class.SkShader*, %class.SkShader** %510, align 8
  %512 = icmp eq %class.SkShader* %511, null
  br i1 %512, label %523, label %513

513:                                              ; preds = %506
  %514 = getelementptr inbounds %class.SkShader, %class.SkShader* %511, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = atomicrmw add i32* %514, i32 -1 acq_rel
  %516 = icmp eq i32 %515, 1
  br i1 %516, label %517, label %523

517:                                              ; preds = %513
  %518 = bitcast %class.SkShader* %511 to %class.SkRefCntBase*
  %519 = bitcast %class.SkShader* %511 to void (%class.SkRefCntBase*)***
  %520 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %519, align 8
  %521 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %520, i64 2
  %522 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %521, align 8
  call void %522(%class.SkRefCntBase* nonnull %518) #14
  br label %523

523:                                              ; preds = %506, %513, %517
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %509) #14
  %524 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %525 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %524, i64 0, i32 2, i32 0
  %526 = load %class.SkMaskFilter*, %class.SkMaskFilter** %525, align 8
  %527 = icmp eq %class.SkMaskFilter* %526, null
  br i1 %527, label %531, label %528

528:                                              ; preds = %523
  %529 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %526, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = atomicrmw add i32* %529, i32 1 monotonic, !noalias !71
  br label %531

531:                                              ; preds = %523, %528
  %532 = getelementptr inbounds %class.sk_sp.231, %class.sk_sp.231* %51, i64 0, i32 0
  store %class.SkMaskFilter* %526, %class.SkMaskFilter** %532, align 8, !alias.scope !71
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %48, %class.sk_sp.231* nonnull %51) #14
  %533 = load %class.SkMaskFilter*, %class.SkMaskFilter** %532, align 8
  %534 = icmp eq %class.SkMaskFilter* %533, null
  br i1 %534, label %545, label %535

535:                                              ; preds = %531
  %536 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %533, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = atomicrmw add i32* %536, i32 -1 acq_rel
  %538 = icmp eq i32 %537, 1
  br i1 %538, label %539, label %545

539:                                              ; preds = %535
  %540 = bitcast %class.SkMaskFilter* %533 to %class.SkRefCntBase*
  %541 = bitcast %class.SkMaskFilter* %533 to void (%class.SkRefCntBase*)***
  %542 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %541, align 8
  %543 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %542, i64 2
  %544 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %543, align 8
  call void %544(%class.SkRefCntBase* nonnull %540) #14
  br label %545

545:                                              ; preds = %531, %535, %539
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* nonnull %42, %struct.SkRect* dereferenceable(16) %3, %class.SkPaint* nonnull dereferenceable(72) %48) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %48) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %507) #14
  br label %571

546:                                              ; preds = %486
  br i1 %120, label %547, label %568

547:                                              ; preds = %546
  %548 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %549 = load float, float* %548, align 4
  %550 = call float @llvm.trunc.f32(float %549) #14
  %551 = fcmp oeq float %550, %549
  br i1 %551, label %552, label %567

552:                                              ; preds = %547
  %553 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %554 = load float, float* %553, align 4
  %555 = call float @llvm.trunc.f32(float %554) #14
  %556 = fcmp oeq float %555, %554
  br i1 %556, label %557, label %567

557:                                              ; preds = %552
  %558 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %559 = load float, float* %558, align 4
  %560 = call float @llvm.trunc.f32(float %559) #14
  %561 = fcmp oeq float %560, %559
  br i1 %561, label %562, label %567

562:                                              ; preds = %557
  %563 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %564 = load float, float* %563, align 4
  %565 = call float @llvm.trunc.f32(float %564) #14
  %566 = fcmp oeq float %565, %564
  br i1 %566, label %568, label %567

567:                                              ; preds = %547, %552, %557, %562
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* nonnull %42, %struct.SkRect* dereferenceable(16) %3, i32 1, i1 zeroext false) #14
  br label %568

568:                                              ; preds = %567, %562, %546
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* nonnull %42, %class.SkMatrix* nonnull dereferenceable(40) %26) #14
  %569 = load %class.SkImage*, %class.SkImage** %455, align 8
  %570 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %570) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %570, i8 0, i64 20, i1 false) #14
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %42, %class.SkImage* %569, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %8, %class.SkPaint* null) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %570) #14
  br label %571

571:                                              ; preds = %568, %545
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %468) #14
  %572 = getelementptr inbounds i8, i8* %464, i64 2856
  %573 = bitcast i8* %572 to %class.SkClipStack*
  %574 = bitcast { i64, i64 }* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %574) #14
  %575 = getelementptr inbounds i8, i8* %464, i64 152
  %576 = bitcast i8* %575 to i32*
  %577 = load i32, i32* %576, align 4
  %578 = getelementptr inbounds i8, i8* %464, i64 156
  %579 = bitcast i8* %578 to i32*
  %580 = load i32, i32* %579, align 4
  %581 = zext i32 %580 to i64
  %582 = shl nuw i64 %581, 32
  %583 = zext i32 %577 to i64
  %584 = or i64 %582, %583
  %585 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %52, i64 0, i32 0
  store i64 0, i64* %585, align 8
  %586 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %52, i64 0, i32 1
  store i64 %584, i64* %586, align 8
  %587 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* %573, %struct.SkIRect* nonnull dereferenceable(16) %53) #14
  %588 = extractvalue { <2 x float>, <2 x float> } %587, 0
  %589 = extractvalue { <2 x float>, <2 x float> } %587, 1
  %590 = extractelement <2 x float> %588, i32 0
  %591 = call float @llvm.floor.f32(float %590) #14
  %592 = fcmp olt float %591, 0x41DFFFFFE0000000
  %593 = select i1 %592, float %591, float 0x41DFFFFFE0000000
  %594 = fcmp ogt float %593, 0xC1DFFFFFE0000000
  %595 = select i1 %594, float %593, float 0xC1DFFFFFE0000000
  %596 = fptosi float %595 to i32
  %597 = extractelement <2 x float> %588, i32 1
  %598 = call float @llvm.floor.f32(float %597) #14
  %599 = fcmp olt float %598, 0x41DFFFFFE0000000
  %600 = select i1 %599, float %598, float 0x41DFFFFFE0000000
  %601 = fcmp ogt float %600, 0xC1DFFFFFE0000000
  %602 = select i1 %601, float %600, float 0xC1DFFFFFE0000000
  %603 = fptosi float %602 to i32
  %604 = extractelement <2 x float> %589, i32 0
  %605 = call float @llvm.ceil.f32(float %604) #14
  %606 = fcmp olt float %605, 0x41DFFFFFE0000000
  %607 = select i1 %606, float %605, float 0x41DFFFFFE0000000
  %608 = fcmp ogt float %607, 0xC1DFFFFFE0000000
  %609 = select i1 %608, float %607, float 0xC1DFFFFFE0000000
  %610 = fptosi float %609 to i32
  %611 = extractelement <2 x float> %589, i32 1
  %612 = call float @llvm.ceil.f32(float %611) #14
  %613 = fcmp olt float %612, 0x41DFFFFFE0000000
  %614 = select i1 %613, float %612, float 0x41DFFFFFE0000000
  %615 = fcmp ogt float %614, 0xC1DFFFFFE0000000
  %616 = select i1 %615, float %614, float 0xC1DFFFFFE0000000
  %617 = fptosi float %616 to i32
  %618 = zext i32 %603 to i64
  %619 = shl nuw i64 %618, 32
  %620 = zext i32 %596 to i64
  %621 = or i64 %619, %620
  %622 = zext i32 %617 to i64
  %623 = shl nuw i64 %622, 32
  %624 = zext i32 %610 to i64
  %625 = or i64 %623, %624
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %574) #14
  %626 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %627 = load i32, i32* %626, align 4
  %628 = trunc i32 %627 to i8
  %629 = icmp slt i8 %628, 0
  br i1 %629, label %630, label %633

630:                                              ; preds = %571
  %631 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %6) #14
  %632 = zext i8 %631 to i32
  store i32 %632, i32* %626, align 4
  br label %633

633:                                              ; preds = %571, %630
  %634 = phi i32 [ %632, %630 ], [ %627, %571 ]
  %635 = and i32 %634, 15
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %653, label %637

637:                                              ; preds = %633
  %638 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %639 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %638, i64 0, i32 1, i32 0
  %640 = load %class.SkShader*, %class.SkShader** %639, align 8
  %641 = icmp eq %class.SkShader* %640, null
  br i1 %641, label %653, label %642

642:                                              ; preds = %637
  %643 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %31, i64 0, i32 1
  %644 = load %class.SkPaint*, %class.SkPaint** %252, align 8
  %645 = icmp eq %class.SkPaint* %644, null
  br i1 %645, label %646, label %651

646:                                              ; preds = %642
  %647 = bitcast %class.SkTLazy* %643 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %647, %class.SkPaint* dereferenceable(72) %638) #14
  %648 = bitcast %class.SkPaint** %252 to %class.SkTLazy**
  store %class.SkTLazy* %643, %class.SkTLazy** %648, align 8
  %649 = ptrtoint %class.SkTLazy* %643 to i64
  %650 = bitcast %class.SkTCopyOnFirstWrite* %31 to i64*
  store i64 %649, i64* %650, align 8
  br label %651

651:                                              ; preds = %642, %646
  %652 = phi %class.SkPaint* [ %647, %646 ], [ %638, %642 ]
  call fastcc void @_ZL16transform_shaderP7SkPaintRK8SkMatrix(%class.SkPaint* %652, %class.SkMatrix* dereferenceable(40) %6)
  br label %653

653:                                              ; preds = %637, %651, %633
  %654 = bitcast %class.ScopedContentEntry* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %654) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %654, i8 -86, i64 48, i1 false)
  %655 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %656 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %54, %class.SkPDFDevice* %0, %class.SkClipStack* %86, %class.SkMatrix* dereferenceable(40) %655, %class.SkPaint* dereferenceable(72) %656, float 0.000000e+00)
  %657 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %54, i64 0, i32 1
  %658 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %657, align 8
  %659 = icmp eq %class.SkDynamicMemoryWStream* %658, null
  br i1 %659, label %713, label %660

660:                                              ; preds = %653
  %661 = call i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice* nonnull %465, i64 %621, i64 %625, i1 zeroext true)
  %662 = load %class.SkPDFDocument*, %class.SkPDFDocument** %463, align 8
  %663 = call i32 @_ZN17SkPDFGraphicState20GetSMaskGraphicStateE22SkPDFIndirectReferencebNS_14SkPDFSMaskModeEP13SkPDFDocument(i32 %661, i1 zeroext false, i32 1, %class.SkPDFDocument* %662) #14
  %664 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %657, align 8
  call void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %663, %class.SkDynamicMemoryWStream* %664)
  %665 = bitcast { <2 x float>, <2 x float> }* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %665) #14
  %666 = load i64, i64* %461, align 8
  %667 = trunc i64 %666 to i32
  %668 = lshr i64 %666, 32
  %669 = trunc i64 %668 to i32
  %670 = sitofp i32 %667 to float
  %671 = insertelement <2 x float> undef, float %670, i32 0
  %672 = sitofp i32 %669 to float
  %673 = insertelement <2 x float> %671, float %672, i32 1
  %674 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %55, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %674, align 8
  %675 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %55, i64 0, i32 1
  store <2 x float> %673, <2 x float>* %675, align 8
  %676 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %657, align 8
  %677 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %676, i64 0, i32 0
  call void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* nonnull dereferenceable(16) %56, %class.SkWStream* %677) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %665) #14
  %678 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %657, align 8
  %679 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %678, i64 0, i32 0
  call void @_ZN10SkPDFUtils9PaintPathEN7SkPaint5StyleE14SkPathFillTypeP9SkWStream(i8 zeroext 0, i32 0, %class.SkWStream* %679) #14
  %680 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %657, align 8
  %681 = load %class.SkPDFDocument*, %class.SkPDFDocument** %463, align 8
  %682 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %681, i64 0, i32 13, i32 0
  %683 = load i32, i32* %682, align 4
  %684 = icmp eq i32 %683, -1
  br i1 %684, label %685, label %693

685:                                              ; preds = %660
  %686 = bitcast %class.SkPDFDict* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %686) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %686, i8 -86, i64 32, i1 false) #14
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #14
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14
  %687 = load %class.SkPDFDocument*, %class.SkPDFDocument** %463, align 8
  %688 = getelementptr inbounds %class.SkPDFDict, %class.SkPDFDict* %9, i64 0, i32 0
  %689 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %687, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = atomicrmw add i32* %689, i32 1 seq_cst
  %691 = call i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument* %687, %class.SkPDFObject* nonnull dereferenceable(8) %688, i32 %690) #14
  store i32 %691, i32* %682, align 4
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %686) #14
  %692 = load i32, i32* %682, align 4
  br label %693

693:                                              ; preds = %685, %660
  %694 = phi i32 [ %683, %660 ], [ %692, %685 ]
  call void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %694, %class.SkDynamicMemoryWStream* %680) #14
  %695 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %657, align 8
  %696 = icmp eq %class.SkDynamicMemoryWStream* %695, null
  br i1 %696, label %713, label %697

697:                                              ; preds = %693
  %698 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %54, i64 0, i32 4
  %699 = getelementptr inbounds %class.SkPath, %class.SkPath* %698, i64 0, i32 0, i32 0
  %700 = load %class.SkPathRef*, %class.SkPathRef** %699, align 8
  %701 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %700, i64 0, i32 4, i32 2
  %702 = load i32, i32* %701, align 4
  %703 = icmp eq i32 %702, 0
  %704 = select i1 %703, %class.SkPath* null, %class.SkPath* %698
  %705 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %54, i64 0, i32 0
  %706 = load %class.SkPDFDevice*, %class.SkPDFDevice** %705, align 8
  %707 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %54, i64 0, i32 5
  %708 = load %class.SkClipStack*, %class.SkClipStack** %707, align 8
  %709 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %54, i64 0, i32 2
  %710 = load i32, i32* %709, align 8
  %711 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %54, i64 0, i32 3, i32 0
  %712 = load i32, i32* %711, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %706, %class.SkClipStack* %708, i32 %710, i32 %712, %class.SkPath* %704) #14
  br label %713

713:                                              ; preds = %653, %697, %693
  %714 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %54, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %714) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %654) #14
  %715 = atomicrmw add i32* %471, i32 -1 acq_rel
  %716 = icmp eq i32 %715, 1
  br i1 %716, label %717, label %723

717:                                              ; preds = %713
  %718 = bitcast i8* %464 to %class.SkRefCntBase*
  %719 = bitcast i8* %464 to void (%class.SkRefCntBase*)***
  %720 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %719, align 8
  %721 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %720, i64 2
  %722 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %721, align 8
  call void %722(%class.SkRefCntBase* nonnull %718) #14
  br label %723

723:                                              ; preds = %717, %713
  %724 = load %class.SkImage*, %class.SkImage** %455, align 8
  %725 = icmp eq %class.SkImage* %724, null
  br i1 %725, label %736, label %726

726:                                              ; preds = %723
  %727 = getelementptr inbounds %class.SkImage, %class.SkImage* %724, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %728 = atomicrmw add i32* %727, i32 -1 acq_rel
  %729 = icmp eq i32 %728, 1
  br i1 %729, label %730, label %736

730:                                              ; preds = %726
  %731 = bitcast %class.SkImage* %724 to %class.SkRefCntBase*
  %732 = bitcast %class.SkImage* %724 to void (%class.SkRefCntBase*)***
  %733 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %732, align 8
  %734 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %733, i64 2
  %735 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %734, align 8
  call void %735(%class.SkRefCntBase* nonnull %731) #14
  br label %736

736:                                              ; preds = %453, %723, %726, %730
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #14
  br label %1339

737:                                              ; preds = %450
  %738 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %739 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %738, i64 0, i32 2, i32 0
  %740 = load %class.SkMaskFilter*, %class.SkMaskFilter** %739, align 8
  %741 = icmp eq %class.SkMaskFilter* %740, null
  br i1 %741, label %773, label %742

742:                                              ; preds = %737
  %743 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %31, i64 0, i32 1
  %744 = load %class.SkPaint*, %class.SkPaint** %252, align 8
  %745 = icmp eq %class.SkPaint* %744, null
  br i1 %745, label %746, label %751

746:                                              ; preds = %742
  %747 = bitcast %class.SkTLazy* %743 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %747, %class.SkPaint* dereferenceable(72) %738) #14
  %748 = bitcast %class.SkPaint** %252 to %class.SkTLazy**
  store %class.SkTLazy* %743, %class.SkTLazy** %748, align 8
  %749 = ptrtoint %class.SkTLazy* %743 to i64
  %750 = bitcast %class.SkTCopyOnFirstWrite* %31 to i64*
  store i64 %749, i64* %750, align 8
  br label %751

751:                                              ; preds = %742, %746
  %752 = phi %class.SkPaint* [ %747, %746 ], [ %738, %742 ]
  %753 = load %class.SkImage*, %class.SkImage** %100, align 8
  %754 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %58, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %754) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %754, i8 0, i64 20, i1 false)
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.230* nonnull sret %57, %class.SkImage* %753, i32 0, i32 0, %struct.SkSamplingOptions* nonnull dereferenceable(20) %58, %class.SkMatrix* nonnull %26) #14
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %752, %class.sk_sp.230* nonnull %57) #14
  %755 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %57, i64 0, i32 0
  %756 = load %class.SkShader*, %class.SkShader** %755, align 8
  %757 = icmp eq %class.SkShader* %756, null
  br i1 %757, label %768, label %758

758:                                              ; preds = %751
  %759 = getelementptr inbounds %class.SkShader, %class.SkShader* %756, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = atomicrmw add i32* %759, i32 -1 acq_rel
  %761 = icmp eq i32 %760, 1
  br i1 %761, label %762, label %768

762:                                              ; preds = %758
  %763 = bitcast %class.SkShader* %756 to %class.SkRefCntBase*
  %764 = bitcast %class.SkShader* %756 to void (%class.SkRefCntBase*)***
  %765 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %764, align 8
  %766 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %765, i64 2
  %767 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %766, align 8
  call void %767(%class.SkRefCntBase* nonnull %763) #14
  br label %768

768:                                              ; preds = %751, %758, %762
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %754) #14
  %769 = bitcast %class.SkPath* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %769) #14
  %770 = bitcast %class.SkPath* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %770, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %59, %struct.SkRect* dereferenceable(16) %3, i32 0, i32 0) #14
  %771 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %772 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %86, %class.SkMatrix* dereferenceable(40) %771, %class.SkPath* nonnull dereferenceable(16) %59, %class.SkPaint* dereferenceable(72) %772, i1 zeroext true)
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %769) #14
  br label %1339

773:                                              ; preds = %737
  %774 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %26, %class.SkMatrix* dereferenceable(40) %6) #14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %60) #14
  store i8 0, i8* %60, align 1
  br i1 %120, label %775, label %796

775:                                              ; preds = %773
  %776 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %777 = load float, float* %776, align 4
  %778 = call float @llvm.trunc.f32(float %777) #14
  %779 = fcmp oeq float %778, %777
  br i1 %779, label %780, label %795

780:                                              ; preds = %775
  %781 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %782 = load float, float* %781, align 4
  %783 = call float @llvm.trunc.f32(float %782) #14
  %784 = fcmp oeq float %783, %782
  br i1 %784, label %785, label %795

785:                                              ; preds = %780
  %786 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %787 = load float, float* %786, align 4
  %788 = call float @llvm.trunc.f32(float %787) #14
  %789 = fcmp oeq float %788, %787
  br i1 %789, label %790, label %795

790:                                              ; preds = %785
  %791 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %792 = load float, float* %791, align 4
  %793 = call float @llvm.trunc.f32(float %792) #14
  %794 = fcmp oeq float %793, %792
  br i1 %794, label %796, label %795

795:                                              ; preds = %775, %780, %785, %790
  call void @_ZN11SkClipStack4saveEv(%class.SkClipStack* %86) #14
  call void @_ZN11SkClipStack8clipRectERK6SkRectRK8SkMatrix8SkClipOpb(%class.SkClipStack* %86, %struct.SkRect* dereferenceable(16) %3, %class.SkMatrix* dereferenceable(40) %6, i32 1, i1 zeroext true) #14
  store i8 1, i8* %60, align 1
  br label %796

796:                                              ; preds = %773, %790, %795
  %797 = bitcast %class.SkScopeExit* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %797) #14
  %798 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %799 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %61, i64 0, i32 0, i32 0, i32 1, i32 0
  %800 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %61, i64 0, i32 0, i32 0, i32 2
  store i8* %60, i8** %798, align 8
  %801 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %61, i64 0, i32 0, i32 0, i32 0, i32 1
  %802 = bitcast [8 x i8]* %801 to %class.SkPDFDevice**
  store %class.SkPDFDevice* %0, %class.SkPDFDevice** %802, align 8
  %803 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %61, i64 0, i32 0, i32 0, i32 1
  %804 = bitcast %"struct.std::__1::__function::__policy_invoker"* %803 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS9_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrixE3$_5S2_EEEEvPKNS0_16__policy_storageE" to i64), i64* %804, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS7_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrixE3$_5FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %800, align 8
  %805 = bitcast %class.SkMatrix* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %805) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %805, i8* nonnull align 16 %132, i64 40, i1 false)
  %806 = load i32, i32* %133, align 4
  %807 = and i32 %806, 192
  %808 = icmp eq i32 %807, 128
  br i1 %808, label %809, label %812

809:                                              ; preds = %796
  %810 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* nonnull %26) #14
  %811 = zext i8 %810 to i32
  store i32 %811, i32* %133, align 4
  br label %812

812:                                              ; preds = %796, %809
  %813 = phi i32 [ %811, %809 ], [ %806, %796 ]
  %814 = and i32 %813, 8
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %1036, label %816

816:                                              ; preds = %812
  %817 = bitcast { <2 x float>, <2 x float> }* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %817) #14
  %818 = load %class.SkImage*, %class.SkImage** %100, align 8
  %819 = getelementptr inbounds %class.SkImage, %class.SkImage* %818, i64 0, i32 2, i32 1, i32 0
  %820 = load i32, i32* %819, align 4
  %821 = getelementptr inbounds %class.SkImage, %class.SkImage* %818, i64 0, i32 2, i32 1, i32 1
  %822 = load i32, i32* %821, align 4
  %823 = sitofp i32 %820 to float
  %824 = insertelement <2 x float> undef, float %823, i32 0
  %825 = sitofp i32 %822 to float
  %826 = insertelement <2 x float> %824, float %825, i32 1
  %827 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %63, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %827, align 8
  %828 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %63, i64 0, i32 1
  store <2 x float> %826, <2 x float>* %828, align 8
  %829 = bitcast %class.SkPath* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %829) #14
  %830 = getelementptr inbounds %class.SkPath, %class.SkPath* %65, i64 0, i32 0, i32 0
  %831 = bitcast %class.SkPath* %66 to i8*
  %832 = bitcast %class.SkPath* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %832, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %831) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %66, %struct.SkRect* nonnull dereferenceable(16) %64, i32 0, i32 0) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %829, i8 -86, i64 16, i1 false) #14, !alias.scope !74
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %65) #14
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %66, %class.SkMatrix* nonnull dereferenceable(40) %26, %class.SkPath* nonnull %65, i32 1) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %66) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %831) #14
  %833 = bitcast %struct.SkRect* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %833) #14
  %834 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %67, i64 0, i32 0
  %835 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %67, i64 0, i32 1
  %836 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %67, i64 0, i32 2
  %837 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %67, i64 0, i32 3
  %838 = bitcast %struct.SkRect* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %838, i8 -1, i64 16, i1 false)
  %839 = load %class.SkPathRef*, %class.SkPathRef** %830, align 8
  %840 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %839, i64 0, i32 9
  %841 = load i8, i8* %840, align 8
  %842 = icmp eq i8 %841, 0
  br i1 %842, label %852, label %843

843:                                              ; preds = %816
  %844 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %839, i64 0, i32 1
  %845 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %839, i64 0, i32 3, i32 0
  %846 = load %struct.SkPoint*, %struct.SkPoint** %845, align 8
  %847 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %839, i64 0, i32 3, i32 2
  %848 = load i32, i32* %847, align 4
  %849 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %844, %struct.SkPoint* %846, i32 %848) #14
  %850 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %839, i64 0, i32 10
  %851 = zext i1 %849 to i8
  store i8 %851, i8* %850, align 1
  store i8 0, i8* %840, align 8
  br label %852

852:                                              ; preds = %816, %843
  %853 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %839, i64 0, i32 1
  %854 = bitcast %struct.SkRect* %853 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %833, i8* align 4 %854, i64 16, i1 false)
  %855 = bitcast { <2 x float>, <2 x float> }* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %855) #14
  %856 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0
  %857 = bitcast %class.SkPDFDevice* %0 to { i64, i64 } (%class.SkBaseDevice*)***
  %858 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %857, align 8
  %859 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %858, i64 23
  %860 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %859, align 8
  %861 = call { i64, i64 } %860(%class.SkBaseDevice* %856) #14
  %862 = extractvalue { i64, i64 } %861, 0
  %863 = trunc i64 %862 to i32
  %864 = lshr i64 %862, 32
  %865 = trunc i64 %864 to i32
  %866 = extractvalue { i64, i64 } %861, 1
  %867 = sitofp i32 %863 to float
  %868 = insertelement <2 x float> undef, float %867, i32 0
  %869 = sitofp i32 %865 to float
  %870 = insertelement <2 x float> %868, float %869, i32 1
  %871 = trunc i64 %866 to i32
  %872 = sitofp i32 %871 to float
  %873 = insertelement <2 x float> undef, float %872, i32 0
  %874 = lshr i64 %866, 32
  %875 = trunc i64 %874 to i32
  %876 = sitofp i32 %875 to float
  %877 = insertelement <2 x float> %873, float %876, i32 1
  %878 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %68, i64 0, i32 0
  store <2 x float> %870, <2 x float>* %878, align 8
  %879 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %68, i64 0, i32 1
  store <2 x float> %877, <2 x float>* %879, align 8
  %880 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %67, %struct.SkRect* nonnull dereferenceable(16) %69) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %855) #14
  br i1 %880, label %881, label %1033

881:                                              ; preds = %852
  %882 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1
  %883 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %883)
  %884 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %883, i8 -1, i64 16, i1 false) #14
  %885 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %882, %struct.SkRect* nonnull %884, %struct.SkRect* nonnull dereferenceable(16) %67, i32 1) #14
  %886 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  %887 = load <2 x float>, <2 x float>* %886, align 8
  %888 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  %889 = load <2 x float>, <2 x float>* %888, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %883)
  %890 = extractelement <2 x float> %889, i32 0
  %891 = extractelement <2 x float> %887, i32 0
  %892 = fsub float %890, %891
  %893 = load float, float* %836, align 4
  %894 = load float, float* %834, align 4
  %895 = fsub float %893, %894
  %896 = fdiv float %892, %895
  %897 = extractelement <2 x float> %889, i32 1
  %898 = extractelement <2 x float> %887, i32 1
  %899 = fsub float %897, %898
  %900 = load float, float* %837, align 4
  %901 = load float, float* %835, align 4
  %902 = fsub float %900, %901
  %903 = fdiv float %899, %902
  %904 = call float @llvm.ceil.f32(float %892) #14
  %905 = fcmp olt float %904, 0x41DFFFFFE0000000
  %906 = select i1 %905, float %904, float 0x41DFFFFFE0000000
  %907 = fcmp ogt float %906, 0xC1DFFFFFE0000000
  %908 = select i1 %907, float %906, float 0xC1DFFFFFE0000000
  %909 = fptosi float %908 to i32
  %910 = call float @llvm.ceil.f32(float %899) #14
  %911 = fcmp olt float %910, 0x41DFFFFFE0000000
  %912 = select i1 %911, float %910, float 0x41DFFFFFE0000000
  %913 = fcmp ogt float %912, 0xC1DFFFFFE0000000
  %914 = select i1 %913, float %912, float 0xC1DFFFFFE0000000
  %915 = fptosi float %914 to i32
  %916 = zext i32 %915 to i64
  %917 = shl nuw i64 %916, 32
  %918 = zext i32 %909 to i64
  %919 = or i64 %917, %918
  %920 = bitcast %class.sk_sp.324* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %920) #14
  %921 = getelementptr inbounds %class.sk_sp.324, %class.sk_sp.324* %70, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %921, align 8
  %922 = bitcast %struct.SkImageInfo* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %922) #14
  %923 = bitcast %struct.SkImageInfo* %71 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %923, align 16, !alias.scope !77
  %924 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %71, i64 0, i32 1
  %925 = bitcast %struct.SkISize* %924 to i64*
  store i64 %919, i64* %925, align 16, !alias.scope !77
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.324* nonnull sret %70, %struct.SkImageInfo* nonnull dereferenceable(24) %71, i64 0, %class.SkSurfaceProps* null) #14
  %926 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %71, i64 0, i32 0, i32 0, i32 0
  %927 = load %class.SkColorSpace*, %class.SkColorSpace** %926, align 16
  %928 = icmp eq %class.SkColorSpace* %927, null
  br i1 %928, label %935, label %929

929:                                              ; preds = %881
  %930 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %927, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %931 = atomicrmw add i32* %930, i32 -1 acq_rel
  %932 = icmp eq i32 %931, 1
  br i1 %932, label %933, label %935

933:                                              ; preds = %929
  %934 = bitcast %class.SkColorSpace* %927 to i8*
  call void @_ZdlPv(i8* %934) #15
  br label %935

935:                                              ; preds = %933, %929, %881
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %922) #14
  %936 = load %class.SkSurface*, %class.SkSurface** %921, align 8
  %937 = icmp eq %class.SkSurface* %936, null
  br i1 %937, label %1031, label %938

938:                                              ; preds = %935
  %939 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %936) #14
  %940 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRGBA4f*
  %941 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %941) #14
  %942 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #14
  %943 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  %944 = extractvalue { <2 x float>, <2 x float> } %942, 0
  store <2 x float> %944, <2 x float>* %943, align 8
  %945 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %946 = extractvalue { <2 x float>, <2 x float> } %942, 1
  store <2 x float> %946, <2 x float>* %945, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %939, %struct.SkRGBA4f* nonnull dereferenceable(16) %940, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %941) #14
  %947 = load float, float* %834, align 4
  %948 = load float, float* %835, align 4
  %949 = bitcast %class.SkMatrix* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %949) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %949, i8* nonnull align 16 %132, i64 40, i1 false)
  %950 = fsub float -0.000000e+00, %947
  %951 = fsub float -0.000000e+00, %948
  %952 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %72, float %950, float %951) #14
  %953 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %72, float %896, float %903) #14
  call void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas* %939, %class.SkMatrix* nonnull dereferenceable(40) %72) #14
  %954 = load %class.SkImage*, %class.SkImage** %100, align 8
  %955 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %955) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %955, i8 0, i64 20, i1 false) #14
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %939, %class.SkImage* %954, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %13, %class.SkPaint* null) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %955) #14
  %956 = load %class.SkSurface*, %class.SkSurface** %921, align 8
  call void @_ZN9SkSurface14flushAndSubmitEb(%class.SkSurface* %956, i1 zeroext false) #14
  %957 = fdiv float 1.000000e+00, %896
  %958 = fdiv float 1.000000e+00, %903
  %959 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %62, float %957, float %958) #14
  %960 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %62, float %947, float %948) #14
  %961 = bitcast %class.SkKeyedImage* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %961) #14
  %962 = load %class.SkSurface*, %class.SkSurface** %921, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp* nonnull sret %74, %class.SkSurface* %962) #14
  call void @_ZN12SkKeyedImageC1E5sk_spI7SkImageE(%class.SkKeyedImage* nonnull %73, %class.sk_sp* nonnull %74) #14
  %963 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %73, i64 0, i32 0, i32 0
  %964 = bitcast %class.SkKeyedImage* %73 to i64*
  %965 = load i64, i64* %964, align 8
  store %class.SkImage* null, %class.SkImage** %963, align 8
  %966 = load %class.SkImage*, %class.SkImage** %100, align 8
  %967 = bitcast %class.SkKeyedImage* %1 to i64*
  store i64 %965, i64* %967, align 8
  %968 = icmp eq %class.SkImage* %966, null
  br i1 %968, label %969, label %974

969:                                              ; preds = %938
  %970 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %971 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %73, i64 0, i32 1
  %972 = bitcast %struct.SkBitmapKey* %970 to i8*
  %973 = bitcast %struct.SkBitmapKey* %971 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %972, i8* align 8 %973, i64 20, i1 false) #14
  br label %1001

974:                                              ; preds = %938
  %975 = getelementptr inbounds %class.SkImage, %class.SkImage* %966, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %976 = atomicrmw add i32* %975, i32 -1 acq_rel
  %977 = icmp eq i32 %976, 1
  br i1 %977, label %978, label %984

978:                                              ; preds = %974
  %979 = bitcast %class.SkImage* %966 to %class.SkRefCntBase*
  %980 = bitcast %class.SkImage* %966 to void (%class.SkRefCntBase*)***
  %981 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %980, align 8
  %982 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %981, i64 2
  %983 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %982, align 8
  call void %983(%class.SkRefCntBase* nonnull %979) #14
  br label %984

984:                                              ; preds = %974, %978
  %985 = load %class.SkImage*, %class.SkImage** %963, align 8
  %986 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %987 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %73, i64 0, i32 1
  %988 = bitcast %struct.SkBitmapKey* %986 to i8*
  %989 = bitcast %struct.SkBitmapKey* %987 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %988, i8* align 8 %989, i64 20, i1 false) #14
  %990 = icmp eq %class.SkImage* %985, null
  br i1 %990, label %1001, label %991

991:                                              ; preds = %984
  %992 = getelementptr inbounds %class.SkImage, %class.SkImage* %985, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %993 = atomicrmw add i32* %992, i32 -1 acq_rel
  %994 = icmp eq i32 %993, 1
  br i1 %994, label %995, label %1001

995:                                              ; preds = %991
  %996 = bitcast %class.SkImage* %985 to %class.SkRefCntBase*
  %997 = bitcast %class.SkImage* %985 to void (%class.SkRefCntBase*)***
  %998 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %997, align 8
  %999 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %998, i64 2
  %1000 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %999, align 8
  call void %1000(%class.SkRefCntBase* nonnull %996) #14
  br label %1001

1001:                                             ; preds = %969, %984, %991, %995
  %1002 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %74, i64 0, i32 0
  %1003 = load %class.SkImage*, %class.SkImage** %1002, align 8
  %1004 = icmp eq %class.SkImage* %1003, null
  br i1 %1004, label %1015, label %1005

1005:                                             ; preds = %1001
  %1006 = getelementptr inbounds %class.SkImage, %class.SkImage* %1003, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1007 = atomicrmw add i32* %1006, i32 -1 acq_rel
  %1008 = icmp eq i32 %1007, 1
  br i1 %1008, label %1009, label %1015

1009:                                             ; preds = %1005
  %1010 = bitcast %class.SkImage* %1003 to %class.SkRefCntBase*
  %1011 = bitcast %class.SkImage* %1003 to void (%class.SkRefCntBase*)***
  %1012 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1011, align 8
  %1013 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1012, i64 2
  %1014 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1013, align 8
  call void %1014(%class.SkRefCntBase* nonnull %1010) #14
  br label %1015

1015:                                             ; preds = %1009, %1005, %1001
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %961) #14
  %1016 = load %class.SkImage*, %class.SkImage** %100, align 8
  %1017 = icmp eq %class.SkImage* %1016, null
  %1018 = zext i1 %1017 to i32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %949) #14
  %1019 = load %class.SkSurface*, %class.SkSurface** %921, align 8
  %1020 = icmp eq %class.SkSurface* %1019, null
  br i1 %1020, label %1031, label %1021

1021:                                             ; preds = %1015
  %1022 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1019, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1023 = atomicrmw add i32* %1022, i32 -1 acq_rel
  %1024 = icmp eq i32 %1023, 1
  br i1 %1024, label %1025, label %1031

1025:                                             ; preds = %1021
  %1026 = bitcast %class.SkSurface* %1019 to %class.SkRefCntBase*
  %1027 = bitcast %class.SkSurface* %1019 to void (%class.SkRefCntBase*)***
  %1028 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1027, align 8
  %1029 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1028, i64 2
  %1030 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1029, align 8
  call void %1030(%class.SkRefCntBase* nonnull %1026) #14
  br label %1031

1031:                                             ; preds = %935, %1015, %1021, %1025
  %1032 = phi i32 [ %1018, %1015 ], [ %1018, %1021 ], [ %1018, %1025 ], [ 1, %935 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %920) #14
  br label %1033

1033:                                             ; preds = %852, %1031
  %1034 = phi i32 [ %1032, %1031 ], [ 1, %852 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %833) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %829) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %817) #14
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1036, label %1322

1036:                                             ; preds = %812, %1033
  %1037 = bitcast %class.SkMatrix* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1037) #14
  %1038 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %75, i64 0, i32 1
  %1039 = bitcast %class.SkMatrix* %75 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1039, align 16
  %1040 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %75, i64 0, i32 0, i64 4
  %1041 = bitcast float* %1040 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %1041, align 16
  %1042 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %75, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %1042, align 16
  store i32 16, i32* %1038, align 4
  %1043 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %75, float 1.000000e+00, float -1.000000e+00) #14
  %1044 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %75, float 0.000000e+00, float 1.000000e+00) #14
  %1045 = load %class.SkImage*, %class.SkImage** %100, align 8
  %1046 = getelementptr inbounds %class.SkImage, %class.SkImage* %1045, i64 0, i32 2, i32 1, i32 0
  %1047 = load i32, i32* %1046, align 4
  %1048 = getelementptr inbounds %class.SkImage, %class.SkImage* %1045, i64 0, i32 2, i32 1, i32 1
  %1049 = load i32, i32* %1048, align 4
  %1050 = sitofp i32 %1047 to float
  %1051 = sitofp i32 %1049 to float
  %1052 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %75, float %1050, float %1051) #14
  %1053 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %75, %class.SkMatrix* nonnull dereferenceable(40) %62) #14
  %1054 = bitcast %class.ScopedContentEntry* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1054) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1054, i8 -86, i64 48, i1 false)
  %1055 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %76, %class.SkPDFDevice* %0, %class.SkClipStack* %86, %class.SkMatrix* nonnull dereferenceable(40) %75, %class.SkPaint* dereferenceable(72) %1055, float 0.000000e+00)
  %1056 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 1
  %1057 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %1056, align 8
  %1058 = icmp eq %class.SkDynamicMemoryWStream* %1057, null
  br i1 %1058, label %1320, label %1059

1059:                                             ; preds = %1036
  %1060 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 2
  %1061 = load i32, i32* %1060, align 8
  switch i32 %1061, label %1075 [
    i32 0, label %1062
    i32 1, label %1062
    i32 5, label %1062
    i32 7, label %1062
    i32 6, label %1062
    i32 8, label %1062
    i32 9, label %1062
    i32 10, label %1062
    i32 13, label %1062
  ]

1062:                                             ; preds = %1059, %1059, %1059, %1059, %1059, %1059, %1059, %1059, %1059
  %1063 = bitcast %class.SkPath* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1063) #14
  %1064 = bitcast %class.SkPath* %78 to i8*
  %1065 = bitcast %class.SkPath* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1065, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1064) #14
  %1066 = bitcast { <2 x float>, <2 x float> }* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1066) #14
  %1067 = insertelement <2 x float> undef, float %1050, i32 0
  %1068 = insertelement <2 x float> %1067, float %1051, i32 1
  %1069 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %79, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %1069, align 8
  %1070 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %79, i64 0, i32 1
  store <2 x float> %1068, <2 x float>* %1070, align 8
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %78, %struct.SkRect* nonnull dereferenceable(16) %80, i32 0, i32 0) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1063, i8 -86, i64 16, i1 false) #14, !alias.scope !82
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %77) #14
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %78, %class.SkMatrix* nonnull dereferenceable(40) %62, %class.SkPath* nonnull %77, i32 1) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %78) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1066) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1064) #14
  %1071 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 4
  %1072 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1071, %class.SkPath* nonnull dereferenceable(16) %77) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %77) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1063) #14
  %1073 = load i32, i32* %1060, align 8
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1302, label %1075

1075:                                             ; preds = %1062, %1059
  %1076 = load %class.SkPaint*, %class.SkPaint** %251, align 8
  %1077 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1076, i64 0, i32 3, i32 0
  %1078 = load %class.SkColorFilter*, %class.SkColorFilter** %1077, align 8
  %1079 = icmp eq %class.SkColorFilter* %1078, null
  br i1 %1079, label %1222, label %1080

1080:                                             ; preds = %1075
  %1081 = bitcast %class.sk_sp* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1081) #14
  %1082 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %81, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %1082, align 8
  %1083 = load %class.SkImage*, %class.SkImage** %100, align 8
  %1084 = bitcast %class.sk_sp.232* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1084)
  %1085 = bitcast %class.sk_sp.324* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1085) #14, !noalias !85
  %1086 = getelementptr inbounds %class.sk_sp.324, %class.sk_sp.324* %15, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %1086, align 8, !noalias !85
  %1087 = bitcast %struct.SkImageInfo* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1087) #14, !noalias !85
  %1088 = getelementptr inbounds %class.SkImage, %class.SkImage* %1083, i64 0, i32 2, i32 1, i32 0
  %1089 = load i32, i32* %1088, align 4, !noalias !85
  %1090 = getelementptr inbounds %class.SkImage, %class.SkImage* %1083, i64 0, i32 2, i32 1, i32 1
  %1091 = load i32, i32* %1090, align 4, !noalias !85
  %1092 = zext i32 %1091 to i64
  %1093 = shl nuw i64 %1092, 32
  %1094 = zext i32 %1089 to i64
  %1095 = or i64 %1093, %1094
  %1096 = bitcast %struct.SkImageInfo* %16 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %1096, align 16, !alias.scope !88, !noalias !85
  %1097 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %16, i64 0, i32 1
  %1098 = bitcast %struct.SkISize* %1097 to i64*
  store i64 %1095, i64* %1098, align 16, !alias.scope !88, !noalias !85
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.324* nonnull sret %15, %struct.SkImageInfo* nonnull dereferenceable(24) %16, i64 0, %class.SkSurfaceProps* null) #14, !noalias !85
  %1099 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %16, i64 0, i32 0, i32 0, i32 0
  %1100 = load %class.SkColorSpace*, %class.SkColorSpace** %1099, align 16, !noalias !85
  %1101 = icmp eq %class.SkColorSpace* %1100, null
  br i1 %1101, label %1108, label %1102

1102:                                             ; preds = %1080
  %1103 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1104 = atomicrmw add i32* %1103, i32 -1 acq_rel
  %1105 = icmp eq i32 %1104, 1
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1102
  %1107 = bitcast %class.SkColorSpace* %1100 to i8*
  call void @_ZdlPv(i8* %1107) #15
  br label %1108

1108:                                             ; preds = %1106, %1102, %1080
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1087) #14, !noalias !85
  %1109 = load %class.SkSurface*, %class.SkSurface** %1086, align 8, !noalias !85
  %1110 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %1109) #14, !noalias !85
  %1111 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRGBA4f*
  %1112 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1112) #14, !noalias !85
  %1113 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #14, !noalias !85
  %1114 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %1115 = extractvalue { <2 x float>, <2 x float> } %1113, 0
  store <2 x float> %1115, <2 x float>* %1114, align 8, !noalias !85
  %1116 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %1117 = extractvalue { <2 x float>, <2 x float> } %1113, 1
  store <2 x float> %1117, <2 x float>* %1116, align 8, !noalias !85
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %1110, %struct.SkRGBA4f* nonnull dereferenceable(16) %1111, i32 1) #14, !noalias !85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1112) #14, !noalias !85
  %1118 = bitcast %class.SkPaint* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1118) #14, !noalias !85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1118, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false) #14, !noalias !85
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %17) #14, !noalias !85
  %1119 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %1078, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1120 = atomicrmw add i32* %1119, i32 1 monotonic, !noalias !93
  %1121 = getelementptr inbounds %class.sk_sp.232, %class.sk_sp.232* %18, i64 0, i32 0
  store %class.SkColorFilter* %1078, %class.SkColorFilter** %1121, align 8, !alias.scope !96, !noalias !85
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %17, %class.sk_sp.232* nonnull %18) #14, !noalias !85
  %1122 = load %class.SkColorFilter*, %class.SkColorFilter** %1121, align 8, !noalias !85
  %1123 = icmp eq %class.SkColorFilter* %1122, null
  br i1 %1123, label %1134, label %1124

1124:                                             ; preds = %1108
  %1125 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %1122, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1126 = atomicrmw add i32* %1125, i32 -1 acq_rel
  %1127 = icmp eq i32 %1126, 1
  br i1 %1127, label %1128, label %1134

1128:                                             ; preds = %1124
  %1129 = bitcast %class.SkColorFilter* %1122 to %class.SkRefCntBase*
  %1130 = bitcast %class.SkColorFilter* %1122 to void (%class.SkRefCntBase*)***
  %1131 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1130, align 8
  %1132 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1131, i64 2
  %1133 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1132, align 8
  call void %1133(%class.SkRefCntBase* nonnull %1129) #14
  br label %1134

1134:                                             ; preds = %1128, %1124, %1108
  %1135 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1135) #14, !noalias !85
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1135, i8 0, i64 20, i1 false) #14, !noalias !85
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %1110, %class.SkImage* %1083, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %19, %class.SkPaint* nonnull %17) #14, !noalias !85
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1135) #14, !noalias !85
  %1136 = load %class.SkSurface*, %class.SkSurface** %1086, align 8, !noalias !85
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp* nonnull sret %81, %class.SkSurface* %1136) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1118) #14, !noalias !85
  %1137 = load %class.SkSurface*, %class.SkSurface** %1086, align 8, !noalias !85
  %1138 = icmp eq %class.SkSurface* %1137, null
  br i1 %1138, label %1149, label %1139

1139:                                             ; preds = %1134
  %1140 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %1137, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1141 = atomicrmw add i32* %1140, i32 -1 acq_rel
  %1142 = icmp eq i32 %1141, 1
  br i1 %1142, label %1143, label %1149

1143:                                             ; preds = %1139
  %1144 = bitcast %class.SkSurface* %1137 to %class.SkRefCntBase*
  %1145 = bitcast %class.SkSurface* %1137 to void (%class.SkRefCntBase*)***
  %1146 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1145, align 8
  %1147 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1146, i64 2
  %1148 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1147, align 8
  call void %1148(%class.SkRefCntBase* nonnull %1144) #14
  br label %1149

1149:                                             ; preds = %1134, %1139, %1143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1085) #14, !noalias !85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1084)
  %1150 = bitcast %class.SkKeyedImage* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1150) #14
  %1151 = bitcast %class.sk_sp* %81 to i64*
  %1152 = load i64, i64* %1151, align 8
  store %class.SkImage* null, %class.SkImage** %1082, align 8
  %1153 = bitcast %class.sk_sp* %83 to i64*
  store i64 %1152, i64* %1153, align 8
  call void @_ZN12SkKeyedImageC1E5sk_spI7SkImageE(%class.SkKeyedImage* nonnull %82, %class.sk_sp* nonnull %83) #14
  %1154 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %82, i64 0, i32 0, i32 0
  %1155 = bitcast %class.SkKeyedImage* %82 to i64*
  %1156 = load i64, i64* %1155, align 8
  store %class.SkImage* null, %class.SkImage** %1154, align 8
  %1157 = load %class.SkImage*, %class.SkImage** %100, align 8
  %1158 = bitcast %class.SkKeyedImage* %1 to i64*
  store i64 %1156, i64* %1158, align 8
  %1159 = icmp eq %class.SkImage* %1157, null
  br i1 %1159, label %1160, label %1165

1160:                                             ; preds = %1149
  %1161 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %1162 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %82, i64 0, i32 1
  %1163 = bitcast %struct.SkBitmapKey* %1161 to i8*
  %1164 = bitcast %struct.SkBitmapKey* %1162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1163, i8* align 8 %1164, i64 20, i1 false) #14
  br label %1192

1165:                                             ; preds = %1149
  %1166 = getelementptr inbounds %class.SkImage, %class.SkImage* %1157, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1167 = atomicrmw add i32* %1166, i32 -1 acq_rel
  %1168 = icmp eq i32 %1167, 1
  br i1 %1168, label %1169, label %1175

1169:                                             ; preds = %1165
  %1170 = bitcast %class.SkImage* %1157 to %class.SkRefCntBase*
  %1171 = bitcast %class.SkImage* %1157 to void (%class.SkRefCntBase*)***
  %1172 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1171, align 8
  %1173 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1172, i64 2
  %1174 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1173, align 8
  call void %1174(%class.SkRefCntBase* nonnull %1170) #14
  br label %1175

1175:                                             ; preds = %1165, %1169
  %1176 = load %class.SkImage*, %class.SkImage** %1154, align 8
  %1177 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %1178 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %82, i64 0, i32 1
  %1179 = bitcast %struct.SkBitmapKey* %1177 to i8*
  %1180 = bitcast %struct.SkBitmapKey* %1178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1179, i8* align 8 %1180, i64 20, i1 false) #14
  %1181 = icmp eq %class.SkImage* %1176, null
  br i1 %1181, label %1192, label %1182

1182:                                             ; preds = %1175
  %1183 = getelementptr inbounds %class.SkImage, %class.SkImage* %1176, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1184 = atomicrmw add i32* %1183, i32 -1 acq_rel
  %1185 = icmp eq i32 %1184, 1
  br i1 %1185, label %1186, label %1192

1186:                                             ; preds = %1182
  %1187 = bitcast %class.SkImage* %1176 to %class.SkRefCntBase*
  %1188 = bitcast %class.SkImage* %1176 to void (%class.SkRefCntBase*)***
  %1189 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1188, align 8
  %1190 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1189, i64 2
  %1191 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1190, align 8
  call void %1191(%class.SkRefCntBase* nonnull %1187) #14
  br label %1192

1192:                                             ; preds = %1160, %1175, %1182, %1186
  %1193 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %83, i64 0, i32 0
  %1194 = load %class.SkImage*, %class.SkImage** %1193, align 8
  %1195 = icmp eq %class.SkImage* %1194, null
  br i1 %1195, label %1206, label %1196

1196:                                             ; preds = %1192
  %1197 = getelementptr inbounds %class.SkImage, %class.SkImage* %1194, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1198 = atomicrmw add i32* %1197, i32 -1 acq_rel
  %1199 = icmp eq i32 %1198, 1
  br i1 %1199, label %1200, label %1206

1200:                                             ; preds = %1196
  %1201 = bitcast %class.SkImage* %1194 to %class.SkRefCntBase*
  %1202 = bitcast %class.SkImage* %1194 to void (%class.SkRefCntBase*)***
  %1203 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1202, align 8
  %1204 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1203, i64 2
  %1205 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1204, align 8
  call void %1205(%class.SkRefCntBase* nonnull %1201) #14
  br label %1206

1206:                                             ; preds = %1192, %1196, %1200
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1150) #14
  %1207 = load %class.SkImage*, %class.SkImage** %100, align 8
  %1208 = icmp eq %class.SkImage* %1207, null
  %1209 = load %class.SkImage*, %class.SkImage** %1082, align 8
  %1210 = icmp eq %class.SkImage* %1209, null
  br i1 %1210, label %1221, label %1211

1211:                                             ; preds = %1206
  %1212 = getelementptr inbounds %class.SkImage, %class.SkImage* %1209, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1213 = atomicrmw add i32* %1212, i32 -1 acq_rel
  %1214 = icmp eq i32 %1213, 1
  br i1 %1214, label %1215, label %1221

1215:                                             ; preds = %1211
  %1216 = bitcast %class.SkImage* %1209 to %class.SkRefCntBase*
  %1217 = bitcast %class.SkImage* %1209 to void (%class.SkRefCntBase*)***
  %1218 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1217, align 8
  %1219 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1218, i64 2
  %1220 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1219, align 8
  call void %1220(%class.SkRefCntBase* nonnull %1216) #14
  br label %1221

1221:                                             ; preds = %1206, %1211, %1215
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1081) #14
  br i1 %1208, label %1302, label %1222

1222:                                             ; preds = %1221, %1075
  %1223 = bitcast %struct.SkBitmapKey* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1223) #14
  %1224 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %1, i64 0, i32 1
  %1225 = bitcast %struct.SkBitmapKey* %1224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1223, i8* align 4 %1225, i64 20, i1 false)
  %1226 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %1227 = load %class.SkPDFDocument*, %class.SkPDFDocument** %1226, align 8
  %1228 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %1229 = call i32 %1228(i8* nonnull %1223, i64 20, i32 0) #14
  %1230 = icmp eq i32 %1229, 0
  %1231 = select i1 %1230, i32 1, i32 %1229
  %1232 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1227, i64 0, i32 3, i32 0, i32 1
  %1233 = load i32, i32* %1232, align 4
  %1234 = icmp sgt i32 %1233, 0
  br i1 %1234, label %1235, label %1275

1235:                                             ; preds = %1222
  %1236 = getelementptr inbounds %struct.SkBitmapKey, %struct.SkBitmapKey* %84, i64 0, i32 1
  %1237 = add nsw i32 %1233, -1
  %1238 = and i32 %1231, %1237
  %1239 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1227, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1240 = load %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %1239, align 8
  %1241 = load i32, i32* %1236, align 4
  br label %1242

1242:                                             ; preds = %1260, %1235
  %1243 = phi i32 [ 0, %1235 ], [ %1265, %1260 ]
  %1244 = phi i32 [ %1238, %1235 ], [ %1264, %1260 ]
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %1240, i64 %1245, i32 1
  %1247 = load i32, i32* %1246, align 4
  %1248 = icmp eq i32 %1247, 0
  br i1 %1248, label %1275, label %1249

1249:                                             ; preds = %1242
  %1250 = icmp eq i32 %1231, %1247
  br i1 %1250, label %1251, label %1260

1251:                                             ; preds = %1249
  %1252 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %1240, i64 %1245, i32 0
  %1253 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %1240, i64 %1245, i32 0, i32 0, i32 0, i32 1
  %1254 = load i32, i32* %1253, align 4
  %1255 = icmp eq i32 %1241, %1254
  br i1 %1255, label %1256, label %1260

1256:                                             ; preds = %1251
  %1257 = bitcast %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1252 to i8*
  %1258 = call i32 @bcmp(i8* nonnull %1223, i8* %1257, i64 16) #14
  %1259 = icmp eq i32 %1258, 0
  br i1 %1259, label %1267, label %1260

1260:                                             ; preds = %1256, %1251, %1249
  %1261 = add nsw i32 %1244, -1
  %1262 = icmp slt i32 %1244, 1
  %1263 = select i1 %1262, i32 %1233, i32 0
  %1264 = add nsw i32 %1261, %1263
  %1265 = add nuw nsw i32 %1243, 1
  %1266 = icmp eq i32 %1265, %1233
  br i1 %1266, label %1275, label %1242

1267:                                             ; preds = %1256
  %1268 = icmp eq %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1252, null
  %1269 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %1240, i64 %1245, i32 0, i32 0, i32 1
  %1270 = icmp eq %struct.SkPDFIndirectReference* %1269, null
  %1271 = or i1 %1268, %1270
  br i1 %1271, label %1275, label %1272

1272:                                             ; preds = %1267
  %1273 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %1269, i64 0, i32 0
  %1274 = load i32, i32* %1273, align 4
  br label %1299

1275:                                             ; preds = %1242, %1260, %1222, %1267
  %1276 = load %class.SkImage*, %class.SkImage** %100, align 8
  %1277 = load %class.SkPDFDocument*, %class.SkPDFDocument** %1226, align 8
  %1278 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1277, i64 0, i32 26, i32 11
  %1279 = load i32, i32* %1278, align 4
  %1280 = call i32 @_Z19SkPDFSerializeImagePK7SkImageP13SkPDFDocumenti(%class.SkImage* %1276, %class.SkPDFDocument* %1277, i32 %1279) #14
  %1281 = load %class.SkPDFDocument*, %class.SkPDFDocument** %1226, align 8
  %1282 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1281, i64 0, i32 3
  %1283 = getelementptr inbounds %class.SkTHashMap.29, %class.SkTHashMap.29* %1282, i64 0, i32 0
  %1284 = bitcast %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1284) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1284, i8* nonnull align 4 %1223, i64 20, i1 false)
  %1285 = getelementptr inbounds %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %20, i64 0, i32 0, i32 1, i32 0
  store i32 %1280, i32* %1285, align 4
  %1286 = getelementptr inbounds %class.SkTHashMap.29, %class.SkTHashMap.29* %1282, i64 0, i32 0, i32 0
  %1287 = load i32, i32* %1286, align 8
  %1288 = shl nsw i32 %1287, 2
  %1289 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %1281, i64 0, i32 3, i32 0, i32 1
  %1290 = load i32, i32* %1289, align 4
  %1291 = mul nsw i32 %1290, 3
  %1292 = icmp slt i32 %1288, %1291
  br i1 %1292, label %1297, label %1293

1293:                                             ; preds = %1275
  %1294 = icmp sgt i32 %1290, 0
  %1295 = shl nsw i32 %1290, 1
  %1296 = select i1 %1294, i32 %1295, i32 4
  call void @_ZN12SkTHashTableIN10SkTHashMapI11SkBitmapKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E6resizeEi(%class.SkTHashTable.30* %1283, i32 %1296) #14
  br label %1297

1297:                                             ; preds = %1275, %1293
  %1298 = call %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapI11SkBitmapKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_(%class.SkTHashTable.30* %1283, %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* nonnull dereferenceable(24) %20) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1284) #14
  br label %1299

1299:                                             ; preds = %1272, %1297
  %1300 = phi i32 [ %1280, %1297 ], [ %1274, %1272 ]
  %1301 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %1056, align 8
  call void @_ZN11SkPDFDevice15drawFormXObjectE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %1300, %class.SkDynamicMemoryWStream* %1301)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1223) #14
  br label %1302

1302:                                             ; preds = %1221, %1062, %1299
  %1303 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %1056, align 8
  %1304 = icmp eq %class.SkDynamicMemoryWStream* %1303, null
  br i1 %1304, label %1320, label %1305

1305:                                             ; preds = %1302
  %1306 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 4
  %1307 = getelementptr inbounds %class.SkPath, %class.SkPath* %1306, i64 0, i32 0, i32 0
  %1308 = load %class.SkPathRef*, %class.SkPathRef** %1307, align 8
  %1309 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1308, i64 0, i32 4, i32 2
  %1310 = load i32, i32* %1309, align 4
  %1311 = icmp eq i32 %1310, 0
  %1312 = select i1 %1311, %class.SkPath* null, %class.SkPath* %1306
  %1313 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 0
  %1314 = load %class.SkPDFDevice*, %class.SkPDFDevice** %1313, align 8
  %1315 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 5
  %1316 = load %class.SkClipStack*, %class.SkClipStack** %1315, align 8
  %1317 = load i32, i32* %1060, align 8
  %1318 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 3, i32 0
  %1319 = load i32, i32* %1318, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %1314, %class.SkClipStack* %1316, i32 %1317, i32 %1319, %class.SkPath* %1312) #14
  br label %1320

1320:                                             ; preds = %1036, %1302, %1305
  %1321 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %76, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %1321) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1054) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1037) #14
  br label %1322

1322:                                             ; preds = %1033, %1320
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %805) #14
  %1323 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %800, align 8
  %1324 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1323, i64 0, i32 2
  %1325 = load i8, i8* %1324, align 8, !range !97
  %1326 = icmp eq i8 %1325, 0
  br i1 %1326, label %1327, label %1331

1327:                                             ; preds = %1322
  %1328 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %799, align 8
  %1329 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %61, i64 0, i32 0, i32 0, i32 0
  call void %1328(%"union.std::__1::__function::__policy_storage"* nonnull %1329) #14
  %1330 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %800, align 8
  br label %1331

1331:                                             ; preds = %1327, %1322
  %1332 = phi %"struct.std::__1::__function::__policy"* [ %1330, %1327 ], [ %1323, %1322 ]
  %1333 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1332, i64 0, i32 1
  %1334 = load void (i8*)*, void (i8*)** %1333, align 8
  %1335 = icmp eq void (i8*)* %1334, null
  br i1 %1335, label %1338, label %1336

1336:                                             ; preds = %1331
  %1337 = load i8*, i8** %798, align 8
  call void %1334(i8* %1337) #14
  br label %1338

1338:                                             ; preds = %1331, %1336
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %797) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #14
  br label %1339

1339:                                             ; preds = %1338, %768, %736
  %1340 = load %class.SkPaint*, %class.SkPaint** %252, align 8
  %1341 = icmp eq %class.SkPaint* %1340, null
  br i1 %1341, label %1343, label %1342

1342:                                             ; preds = %1339
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %1340) #14
  store %class.SkPaint* null, %class.SkPaint** %252, align 8
  br label %1343

1343:                                             ; preds = %1339, %1342
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %249) #14
  br label %1344

1344:                                             ; preds = %245, %159, %1343
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %132) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #14
  br label %1345

1345:                                             ; preds = %99, %7, %1344
  ret void
}

declare void @_ZN12SkKeyedImageC1E5sk_spI7SkImageE(%class.SkKeyedImage*, %class.sk_sp*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice10drawSpriteERK8SkBitmapiiRK7SkPaint(%class.SkPDFDevice*, %class.SkBitmap* dereferenceable(56), i32, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = alloca %class.SkKeyedImage, align 8
  %9 = alloca %struct.SkSamplingOptions, align 4
  %10 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = sitofp i32 %2 to float
  %12 = sitofp i32 %3 to float
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = insertelement <2 x float> undef, float %11, i32 0
  %20 = insertelement <2 x float> %19, float %12, i32 1
  %21 = fadd float %11, %15
  %22 = insertelement <2 x float> undef, float %21, i32 0
  %23 = fadd float %12, %18
  %24 = insertelement <2 x float> %22, float %23, i32 1
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %20, <2 x float>* %25, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %24, <2 x float>* %26, align 8
  call void @_ZN12SkKeyedImageC1ERK8SkBitmap(%class.SkKeyedImage* nonnull %8, %class.SkBitmap* dereferenceable(56) %1) #14
  %27 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 0, i64 20, i1 false)
  %28 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS2_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrix(%class.SkPDFDevice* %0, %class.SkKeyedImage* nonnull %8, %struct.SkRect* null, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkSamplingOptions* nonnull dereferenceable(20) %9, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrix* dereferenceable(40) %28)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %27) #14
  %29 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %8, i64 0, i32 0, i32 0
  %30 = load %class.SkImage*, %class.SkImage** %29, align 8
  %31 = icmp eq %class.SkImage* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %5
  %33 = getelementptr inbounds %class.SkImage, %class.SkImage* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %class.SkImage* %30 to %class.SkRefCntBase*
  %38 = bitcast %class.SkImage* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #14
  br label %42

42:                                               ; preds = %5, %32, %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret void
}

declare void @_ZN12SkKeyedImageC1ERK8SkBitmap(%class.SkKeyedImage*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice18drawGlyphRunAsPathERK10SkGlyphRun7SkPointRK7SkPaint(%class.SkPDFDevice*, %class.SkGlyphRun* dereferenceable(96), <2 x float>, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #6 align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = alloca %struct.Rec, align 8
  %7 = alloca %class.SkFont, align 8
  %8 = alloca %class.SkGlyphRun, align 8
  %9 = alloca %class.SkPaint, align 8
  %10 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4
  %11 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %5) #14
  %13 = bitcast %struct.Rec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %struct.Rec, %struct.Rec* %6, i64 0, i32 0
  %15 = getelementptr inbounds %struct.Rec, %struct.Rec* %6, i64 0, i32 2
  store %class.SkPath* %5, %class.SkPath** %14, align 8
  %16 = getelementptr inbounds %struct.Rec, %struct.Rec* %6, i64 0, i32 1
  %17 = bitcast %struct.SkPoint* %16 to <2 x float>*
  store <2 x float> %2, <2 x float>* %17, align 8
  %18 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %struct.SkPoint** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %struct.SkPoint** %15 to i64*
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = trunc i64 %22 to i32
  call void @_ZNK6SkFont8getPathsEPKtiPFvPK6SkPathRK8SkMatrixPvES8_(%class.SkFont* %10, i16* %25, i32 %26, void (%class.SkPath*, %class.SkMatrix*, i8*)* nonnull @"_ZZN11SkPDFDevice18drawGlyphRunAsPathERK10SkGlyphRun7SkPointRK7SkPaintEN3$_18__invokeEPK6SkPathRK8SkMatrixPv", i8* nonnull %13) #14
  %27 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %28 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* %0, %class.SkClipStack* dereferenceable(80) %27, %class.SkMatrix* dereferenceable(40) %28, %class.SkPath* nonnull dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %3, i1 zeroext true)
  %29 = bitcast %class.SkFont* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %30, align 8
  %31 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %31, align 8
  %32 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %32, align 4
  %33 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %33, align 8
  %34 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 4
  %35 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 0, i32 0
  %36 = bitcast i8* %34 to i32*
  store i32 -1431655766, i32* %36, align 4
  %37 = load %class.SkTypeface*, %class.SkTypeface** %35, align 8
  %38 = icmp eq %class.SkTypeface* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %4
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %4, %39
  store %class.SkTypeface* %37, %class.SkTypeface** %30, align 8
  %43 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4, i32 1
  %44 = bitcast float* %31 to i8*
  %45 = bitcast float* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 15, i1 false) #14
  call void @_ZN6SkFont11setEmboldenEb(%class.SkFont* nonnull %7, i1 zeroext false) #14
  %46 = bitcast %class.SkGlyphRun* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %46) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 bitcast (%class.SkGlyphRun* @__const._ZN11SkPDFDevice18drawGlyphRunAsPathERK10SkGlyphRun7SkPointRK7SkPaint.tmpGlyphRun to i8*), i64 96, i1 false)
  call void @_ZN10SkGlyphRunC1ERKS_RK6SkFont(%class.SkGlyphRun* nonnull %8, %class.SkGlyphRun* dereferenceable(96) %1, %class.SkFont* nonnull dereferenceable(24) %7) #14
  %47 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %47) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %9) #14
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %9, i32 0) #14
  %48 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 192
  %51 = icmp eq i32 %50, 128
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %28) #14
  %54 = zext i8 %53 to i32
  store i32 %54, i32* %48, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %54, %52 ], [ %49, %42 ]
  %57 = and i32 %56, 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %125, label %59

59:                                               ; preds = %55
  %60 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %61 = bitcast %class.SkMatrix* %28 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i64 4
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i64 5
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i64 6
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i64 7
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i64 8
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = bitcast %class.SkMatrix* %60 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 4
  %80 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %60, i64 0, i32 0, i64 4
  %81 = bitcast float* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %60, i64 0, i32 0, i64 8
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %87 = bitcast %class.SkM44* %86 to i32*
  %88 = extractelement <4 x i32> %79, i32 0
  store i32 %88, i32* %87, align 8
  %89 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 1
  %90 = bitcast float* %89 to i32*
  %91 = extractelement <4 x i32> %79, i32 3
  store i32 %91, i32* %90, align 4
  %92 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %92, align 8
  %93 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 3
  %94 = bitcast float* %93 to i32*
  %95 = extractelement <4 x i32> %82, i32 2
  store i32 %95, i32* %94, align 4
  %96 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 4
  %97 = bitcast float* %96 to i32*
  %98 = extractelement <4 x i32> %79, i32 1
  store i32 %98, i32* %97, align 8
  %99 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 5
  %100 = bitcast float* %99 to i32*
  %101 = extractelement <4 x i32> %82, i32 0
  store i32 %101, i32* %100, align 4
  %102 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %102, align 8
  %103 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 7
  %104 = bitcast float* %103 to i32*
  %105 = extractelement <4 x i32> %82, i32 3
  store i32 %105, i32* %104, align 4
  %106 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 8
  %107 = bitcast float* %106 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %107, align 8
  %108 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 12
  %109 = bitcast float* %108 to i32*
  %110 = extractelement <4 x i32> %79, i32 2
  store i32 %110, i32* %109, align 8
  %111 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 13
  %112 = bitcast float* %111 to i32*
  %113 = extractelement <4 x i32> %82, i32 1
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %114, align 8
  %115 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i64 15
  %116 = bitcast float* %115 to i32*
  store i32 %85, i32* %116, align 4
  %117 = bitcast %class.SkMatrix* %28 to <4 x i32>*
  store <4 x i32> %79, <4 x i32>* %117, align 8
  %118 = bitcast float* %63 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %118, align 8
  store i32 %85, i32* %76, align 8
  store i32 128, i32* %48, align 4
  call void @_ZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaint(%class.SkPDFDevice* %0, %class.SkGlyphRun* nonnull dereferenceable(96) %8, <2 x float> %2, %class.SkPaint* nonnull dereferenceable(72) %9)
  %119 = extractelement <4 x i32> %62, i32 0
  store i32 %119, i32* %87, align 8
  %120 = extractelement <4 x i32> %62, i32 3
  store i32 %120, i32* %90, align 4
  store float 0.000000e+00, float* %92, align 8
  store i32 %71, i32* %94, align 4
  %121 = extractelement <4 x i32> %62, i32 1
  store i32 %121, i32* %97, align 8
  store i32 %65, i32* %100, align 4
  store float 0.000000e+00, float* %102, align 8
  store i32 %74, i32* %104, align 4
  %122 = bitcast float* %106 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %122, align 8
  %123 = extractelement <4 x i32> %62, i32 2
  store i32 %123, i32* %109, align 8
  store i32 %68, i32* %112, align 4
  store float 0.000000e+00, float* %114, align 8
  store i32 %77, i32* %116, align 4
  %124 = bitcast %class.SkMatrix* %28 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %124, align 8
  store i32 %65, i32* %64, align 8
  store i32 %68, i32* %67, align 4
  store i32 %71, i32* %70, align 8
  store i32 %74, i32* %73, align 4
  store i32 %77, i32* %76, align 8
  store i32 128, i32* %48, align 4
  br label %126

125:                                              ; preds = %55
  call void @_ZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaint(%class.SkPDFDevice* %0, %class.SkGlyphRun* nonnull dereferenceable(96) %8, <2 x float> %2, %class.SkPaint* nonnull dereferenceable(72) %9)
  br label %126

126:                                              ; preds = %125, %59
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %47) #14
  %127 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %8, i64 0, i32 4, i32 0, i32 0
  %128 = load %class.SkTypeface*, %class.SkTypeface** %127, align 8
  %129 = icmp eq %class.SkTypeface* %128, null
  br i1 %129, label %140, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %128, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = atomicrmw add i32* %131, i32 -1 acq_rel
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = bitcast %class.SkTypeface* %128 to %class.SkRefCntBase*
  %136 = bitcast %class.SkTypeface* %128 to void (%class.SkRefCntBase*)***
  %137 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %136, align 8
  %138 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, i64 2
  %139 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, align 8
  call void %139(%class.SkRefCntBase* nonnull %135) #14
  br label %140

140:                                              ; preds = %126, %130, %134
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %46) #14
  %141 = load %class.SkTypeface*, %class.SkTypeface** %30, align 8
  %142 = icmp eq %class.SkTypeface* %141, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %141, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkTypeface* %141 to %class.SkRefCntBase*
  %149 = bitcast %class.SkTypeface* %141 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #14
  br label %153

153:                                              ; preds = %140, %143, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  ret void
}

declare void @_ZNK6SkFont8getPathsEPKtiPFvPK6SkPathRK8SkMatrixPvES8_(%class.SkFont*, i16*, i32, void (%class.SkPath*, %class.SkMatrix*, i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN6SkFont11setEmboldenEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN10SkGlyphRunC1ERKS_RK6SkFont(%class.SkGlyphRun*, %class.SkGlyphRun* dereferenceable(96), %class.SkFont* dereferenceable(24)) unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaint(%class.SkPDFDevice*, %class.SkGlyphRun* dereferenceable(96), <2 x float>, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #6 align 2 {
  %5 = alloca [2 x i8], align 1
  %6 = alloca i32, align 4
  %7 = alloca [49 x i8], align 16
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to { <2 x float>, <2 x float> }*
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca { i64, i64 }, align 8
  %23 = alloca %class.SkClusterator, align 8
  %24 = alloca i32, align 4
  %25 = alloca %class.SkStrikeSpec, align 8
  %26 = alloca { i64, i64 }, align 8
  %27 = bitcast { i64, i64 }* %26 to %struct.SkIRect*
  %28 = alloca %class.SkTCopyOnFirstWrite, align 8
  %29 = alloca %class.ScopedContentEntry, align 8
  %30 = alloca %class.SkDynamicMemoryWStream*, align 8
  %31 = alloca %class.SkScopeExit, align 8
  %32 = alloca %class.SkScopeExit, align 8
  %33 = alloca %"class.(anonymous namespace)::GlyphPositioner", align 8
  %34 = alloca %class.SkBulkGlyphMetricsAndPaths, align 8
  %35 = alloca %"struct.SkClusterator::Cluster", align 8
  %36 = alloca i8, align 1
  %37 = alloca %class.SkScopeExit, align 8
  %38 = alloca i8*, align 8
  %39 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4
  %45 = icmp ne i32 %43, 0
  %46 = icmp ne i16* %40, null
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %1165

48:                                               ; preds = %4
  %49 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4, i32 1
  %50 = load float, float* %49, align 8
  %51 = fcmp ugt float %50, 0.000000e+00
  br i1 %51, label %52, label %1165

52:                                               ; preds = %48
  %53 = bitcast { i64, i64 }* %22 to %struct.SkIRect*
  %54 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %55 = bitcast { i64, i64 }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #14
  %56 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %57 to i64
  %63 = or i64 %61, %62
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 0
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  store i64 %63, i64* %65, align 8
  %66 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %54, %struct.SkIRect* nonnull dereferenceable(16) %53) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #14
  br i1 %66, label %1165, label %67

67:                                               ; preds = %52
  %68 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 0, i32 0
  %69 = load %class.SkPathEffect*, %class.SkPathEffect** %68, align 8
  %70 = icmp eq %class.SkPathEffect* %69, null
  br i1 %70, label %71, label %98

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 2, i32 0
  %73 = load %class.SkMaskFilter*, %class.SkMaskFilter** %72, align 8
  %74 = icmp eq %class.SkMaskFilter* %73, null
  br i1 %74, label %75, label %98

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4, i32 4
  %77 = load i8, i8* %76, align 4
  %78 = and i8 %77, 16
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %98

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %82 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 192
  %85 = icmp eq i32 %84, 128
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %81) #14
  %88 = zext i8 %87 to i32
  store i32 %88, i32* %82, align 4
  br label %89

89:                                               ; preds = %80, %86
  %90 = phi i32 [ %88, %86 ], [ %83, %80 ]
  %91 = and i32 %90, 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %89
  %94 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 8, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 192
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %89, %75, %93, %71, %67
  call void @_ZN11SkPDFDevice18drawGlyphRunAsPathERK10SkGlyphRun7SkPointRK7SkPaint(%class.SkPDFDevice* %0, %class.SkGlyphRun* dereferenceable(96) %1, <2 x float> %2, %class.SkPaint* dereferenceable(72) %3)
  br label %1165

99:                                               ; preds = %93
  %100 = call %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont* %44) #14
  %101 = icmp eq %class.SkTypeface* %100, null
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i32 824, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %1165

103:                                              ; preds = %99
  %104 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %105 = load %class.SkPDFDocument*, %class.SkPDFDocument** %104, align 8
  %106 = call %struct.SkAdvancedTypefaceMetrics* @_ZN9SkPDFFont10GetMetricsEPK10SkTypefaceP13SkPDFDocument(%class.SkTypeface* nonnull %100, %class.SkPDFDocument* %105) #14
  %107 = icmp eq %struct.SkAdvancedTypefaceMetrics* %106, null
  br i1 %107, label %1165, label %108

108:                                              ; preds = %103
  %109 = call zeroext i8 @_ZN9SkPDFFont8FontTypeERK25SkAdvancedTypefaceMetrics(%struct.SkAdvancedTypefaceMetrics* nonnull dereferenceable(48) %106) #14
  %110 = load %class.SkPDFDocument*, %class.SkPDFDocument** %104, align 8
  %111 = call dereferenceable(24) %"class.std::__1::vector.112"* @_ZN9SkPDFFont13GetUnicodeMapEPK10SkTypefaceP13SkPDFDocument(%class.SkTypeface* nonnull %100, %class.SkPDFDocument* %110) #14
  %112 = bitcast %class.SkClusterator* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  call void @_ZN13SkClusteratorC1ERK10SkGlyphRun(%class.SkClusterator* nonnull %23, %class.SkGlyphRun* dereferenceable(96) %1) #14
  %113 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #14
  store i32 -1431655766, i32* %24, align 4
  %114 = bitcast %class.SkStrikeSpec* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %114) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaint.strikeSpec to i8*), i64 160, i1 false)
  call void @_ZN12SkStrikeSpec13MakePDFVectorERK10SkTypefacePi(%class.SkStrikeSpec* nonnull sret %25, %class.SkTypeface* nonnull dereferenceable(48) %100, i32* nonnull %24) #14
  %115 = load float, float* %49, align 8
  %116 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4, i32 2
  %117 = load float, float* %116, align 4
  %118 = fmul float %115, %117
  %119 = load i32, i32* %24, align 4
  %120 = sitofp i32 %119 to float
  %121 = fdiv float %118, %120
  %122 = fdiv float %115, %120
  %123 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 4, i32 3
  %124 = load float, float* %123, align 8
  %125 = fmul float %124, %122
  %126 = fadd float %121, %125
  %127 = bitcast { i64, i64 }* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #14
  %128 = load i32, i32* %56, align 4
  %129 = load i32, i32* %58, align 4
  %130 = zext i32 %129 to i64
  %131 = shl nuw i64 %130, 32
  %132 = zext i32 %128 to i64
  %133 = or i64 %131, %132
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 0
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 1
  store i64 %133, i64* %135, align 8
  %136 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* %54, %struct.SkIRect* nonnull dereferenceable(16) %27) #14
  %137 = extractvalue { <2 x float>, <2 x float> } %136, 0
  %138 = extractvalue { <2 x float>, <2 x float> } %136, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #14
  %139 = bitcast %class.SkTCopyOnFirstWrite* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %139) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 88, i1 false)
  call fastcc void @_ZL11clean_paintRK7SkPaint(%class.SkTCopyOnFirstWrite* nonnull sret %28, %class.SkPaint* dereferenceable(72) %3)
  %140 = bitcast %class.ScopedContentEntry* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %140) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 48, i1 false)
  %141 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %28, i64 0, i32 0
  %142 = load %class.SkPaint*, %class.SkPaint** %141, align 8
  %143 = load float, float* %116, align 4
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %29, %class.SkPDFDevice* %0, %class.SkClipStack* %54, %class.SkMatrix* dereferenceable(40) %81, %class.SkPaint* dereferenceable(72) %142, float %143) #14
  %144 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %29, i64 0, i32 1
  %145 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %144, align 8
  %146 = icmp eq %class.SkDynamicMemoryWStream* %145, null
  br i1 %146, label %1115, label %147

147:                                              ; preds = %108
  %148 = bitcast %class.SkDynamicMemoryWStream** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #14
  store %class.SkDynamicMemoryWStream* %145, %class.SkDynamicMemoryWStream** %30, align 8
  %149 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %145, i64 0, i32 0
  %150 = bitcast %class.SkDynamicMemoryWStream* %145 to i1 (%class.SkWStream*, i8*, i64)***
  %151 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %150, align 8
  %152 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %151, i64 2
  %153 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %152, align 8
  %154 = call zeroext i1 %153(%class.SkWStream* %149, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #14
  %155 = bitcast %class.SkScopeExit* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %155) #14
  %156 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %31, i64 0, i32 0, i32 0, i32 1, i32 0
  %158 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %31, i64 0, i32 0, i32 0, i32 2
  %159 = ptrtoint %class.SkDynamicMemoryWStream** %30 to i64
  %160 = bitcast %class.SkScopeExit* %31 to i64*
  %161 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  store i64 %159, i64* %160, align 8
  %162 = bitcast i8* %161 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_2S2_EEEEvPKNS0_16__policy_storageE" to i64)>, <2 x i64>* %162, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %158, align 8
  %163 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 6
  %164 = load i32, i32* %163, align 8
  %165 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %30, align 8
  %166 = icmp eq i32 %164, 0
  br i1 %166, label %183, label %167

167:                                              ; preds = %147
  %168 = load %class.SkPDFDocument*, %class.SkPDFDocument** %104, align 8
  %169 = call i32 @_ZN13SkPDFDocument21createMarkIdForNodeIdEi(%class.SkPDFDocument* %168, i32 %164) #14
  %170 = icmp eq i32 %169, -1
  br i1 %170, label %183, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %165, i64 0, i32 0
  %173 = bitcast %class.SkDynamicMemoryWStream* %165 to i1 (%class.SkWStream*, i8*, i64)***
  %174 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %173, align 8
  %175 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %174, i64 2
  %176 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %175, align 8
  %177 = call zeroext i1 %176(%class.SkWStream* %172, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11) #14
  %178 = call zeroext i1 @_ZN9SkWStream14writeDecAsTextEi(%class.SkWStream* %172, i32 %169) #14
  %179 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %173, align 8
  %180 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %179, i64 2
  %181 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %180, align 8
  %182 = call zeroext i1 %181(%class.SkWStream* %172, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #14
  br label %183

183:                                              ; preds = %147, %167, %171
  %184 = phi i32 [ -1, %147 ], [ -1, %167 ], [ %169, %171 ]
  %185 = call i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface* nonnull %100) #14
  %186 = getelementptr inbounds %class.SkClusterator, %class.SkClusterator* %23, i64 0, i32 4
  %187 = load i8, i8* %186, align 8, !range !97
  %188 = icmp eq i8 %187, 0
  %189 = bitcast %class.SkDynamicMemoryWStream** %30 to %class.SkWStream**
  br i1 %188, label %197, label %190

190:                                              ; preds = %183
  %191 = load %class.SkWStream*, %class.SkWStream** %189, align 8
  %192 = bitcast %class.SkWStream* %191 to i1 (%class.SkWStream*, i8*, i64)***
  %193 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %192, align 8
  %194 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %193, i64 2
  %195 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %194, align 8
  %196 = call zeroext i1 %195(%class.SkWStream* %191, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i64 19) #14
  br label %197

197:                                              ; preds = %183, %190
  %198 = bitcast %class.SkScopeExit* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %198) #14
  %199 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %200 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %32, i64 0, i32 0, i32 0, i32 1, i32 0
  %201 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %32, i64 0, i32 0, i32 0, i32 2
  %202 = bitcast %class.SkScopeExit* %32 to %class.SkClusterator**
  store %class.SkClusterator* %23, %class.SkClusterator** %202, align 8
  %203 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %204 = bitcast [8 x i8]* %203 to %class.SkDynamicMemoryWStream***
  store %class.SkDynamicMemoryWStream** %30, %class.SkDynamicMemoryWStream*** %204, align 8
  %205 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %32, i64 0, i32 0, i32 0, i32 1
  %206 = bitcast %"struct.std::__1::__function::__policy_invoker"* %205 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_3S2_EEEEvPKNS0_16__policy_storageE" to i64), i64* %206, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_3FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %201, align 8
  %207 = bitcast %"class.(anonymous namespace)::GlyphPositioner"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %207) #14
  %208 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 0
  %209 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 1, i32 1
  %211 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 2
  %212 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 3
  %213 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 4
  %214 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 5
  %215 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 6
  %216 = bitcast %class.SkDynamicMemoryWStream** %30 to i64*
  %217 = bitcast i8* %213 to i64*
  store i64 -6148914691247702015, i64* %217, align 8
  %218 = load i64, i64* %216, align 8
  %219 = bitcast float* %123 to i32*
  %220 = load i32, i32* %219, align 8
  %221 = bitcast %"class.(anonymous namespace)::GlyphPositioner"* %33 to i64*
  store i64 %218, i64* %221, align 8
  %222 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %33, i64 0, i32 1
  %223 = bitcast %struct.SkPoint* %222 to <2 x float>*
  store <2 x float> %2, <2 x float>* %223, align 8
  store float 0.000000e+00, float* %211, align 8
  %224 = bitcast float* %212 to i32*
  store i32 %220, i32* %224, align 4
  %225 = bitcast %class.SkBulkGlyphMetricsAndPaths* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %225) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 -86, i64 184, i1 false)
  call void @_ZN26SkBulkGlyphMetricsAndPathsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndPaths* nonnull %34, %class.SkStrikeSpec* nonnull dereferenceable(160) %25) #14
  %226 = load i16*, i16** %39, align 8
  %227 = load i64, i64* %41, align 8
  %228 = call { %class.SkGlyph**, i64 } @_ZN26SkBulkGlyphMetricsAndPaths6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetricsAndPaths* nonnull %34, i16* %226, i64 %227) #14
  %229 = extractvalue { %class.SkGlyph**, i64 } %228, 0
  %230 = bitcast %"struct.SkClusterator::Cluster"* %35 to i8*
  %231 = getelementptr inbounds %"struct.SkClusterator::Cluster", %"struct.SkClusterator::Cluster"* %35, i64 0, i32 3
  %232 = getelementptr inbounds %"struct.SkClusterator::Cluster", %"struct.SkClusterator::Cluster"* %35, i64 0, i32 2
  %233 = bitcast %class.SkScopeExit* %37 to i8*
  %234 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %235 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %37, i64 0, i32 0, i32 0, i32 1, i32 0
  %236 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %37, i64 0, i32 0, i32 0, i32 2
  %237 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %37, i64 0, i32 0, i32 0, i32 1
  %238 = bitcast %"struct.std::__1::__function::__policy_invoker"* %237 to i64*
  %239 = getelementptr inbounds %"struct.SkClusterator::Cluster", %"struct.SkClusterator::Cluster"* %35, i64 0, i32 0
  %240 = bitcast i8** %38 to i8*
  %241 = bitcast i8** %38 to i64*
  %242 = getelementptr inbounds %"struct.SkClusterator::Cluster", %"struct.SkClusterator::Cluster"* %35, i64 0, i32 1
  %243 = getelementptr inbounds %"class.std::__1::vector.112", %"class.std::__1::vector.112"* %111, i64 0, i32 0, i32 1
  %244 = bitcast i32** %243 to i64*
  %245 = bitcast %"class.std::__1::vector.112"* %111 to i64*
  %246 = bitcast %"class.(anonymous namespace)::GlyphPositioner"* %33 to %class.SkWStream**
  %247 = bitcast i32* %21 to i8*
  %248 = bitcast i32* %21 to i16*
  %249 = bitcast i32* %20 to [4 x i8]*
  %250 = bitcast i32* %20 to i8*
  %251 = getelementptr inbounds [4 x i8], [4 x i8]* %249, i64 0, i64 1
  %252 = getelementptr inbounds [4 x i8], [4 x i8]* %249, i64 0, i64 2
  %253 = getelementptr inbounds [4 x i8], [4 x i8]* %249, i64 0, i64 3
  %254 = bitcast i32* %21 to [2 x i16]*
  %255 = getelementptr inbounds [2 x i16], [2 x i16]* %254, i64 0, i64 1
  %256 = bitcast i32* %19 to [4 x i8]*
  %257 = bitcast i32* %19 to i8*
  %258 = getelementptr inbounds [4 x i8], [4 x i8]* %256, i64 0, i64 1
  %259 = getelementptr inbounds [4 x i8], [4 x i8]* %256, i64 0, i64 2
  %260 = getelementptr inbounds [4 x i8], [4 x i8]* %256, i64 0, i64 3
  %261 = bitcast i32* %18 to i8*
  %262 = bitcast i32* %18 to i16*
  %263 = bitcast i32* %17 to [4 x i8]*
  %264 = bitcast i32* %17 to i8*
  %265 = getelementptr inbounds [4 x i8], [4 x i8]* %263, i64 0, i64 1
  %266 = getelementptr inbounds [4 x i8], [4 x i8]* %263, i64 0, i64 2
  %267 = getelementptr inbounds [4 x i8], [4 x i8]* %263, i64 0, i64 3
  %268 = bitcast i32* %18 to [2 x i16]*
  %269 = getelementptr inbounds [2 x i16], [2 x i16]* %268, i64 0, i64 1
  %270 = bitcast i32* %16 to [4 x i8]*
  %271 = bitcast i32* %16 to i8*
  %272 = getelementptr inbounds [4 x i8], [4 x i8]* %270, i64 0, i64 1
  %273 = getelementptr inbounds [4 x i8], [4 x i8]* %270, i64 0, i64 2
  %274 = getelementptr inbounds [4 x i8], [4 x i8]* %270, i64 0, i64 3
  %275 = bitcast i32* %15 to i8*
  %276 = bitcast i32* %15 to i16*
  %277 = bitcast i32* %14 to [4 x i8]*
  %278 = bitcast i32* %14 to i8*
  %279 = getelementptr inbounds [4 x i8], [4 x i8]* %277, i64 0, i64 1
  %280 = getelementptr inbounds [4 x i8], [4 x i8]* %277, i64 0, i64 2
  %281 = getelementptr inbounds [4 x i8], [4 x i8]* %277, i64 0, i64 3
  %282 = bitcast i32* %15 to [2 x i16]*
  %283 = getelementptr inbounds [2 x i16], [2 x i16]* %282, i64 0, i64 1
  %284 = bitcast i32* %13 to [4 x i8]*
  %285 = bitcast i32* %13 to i8*
  %286 = getelementptr inbounds [4 x i8], [4 x i8]* %284, i64 0, i64 1
  %287 = getelementptr inbounds [4 x i8], [4 x i8]* %284, i64 0, i64 2
  %288 = getelementptr inbounds [4 x i8], [4 x i8]* %284, i64 0, i64 3
  %289 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %290 = bitcast <4 x float>* %9 to i8*
  %291 = bitcast <4 x float>* %9 to %struct.SkRect*
  %292 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %293 = bitcast %class.SkMatrix* %11 to i8*
  %294 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %295 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %296 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  %297 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  %298 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  %299 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %300 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  %301 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %302 = bitcast { <2 x float>, <2 x float> }* %8 to i64*
  %303 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %304 = bitcast <2 x float>* %303 to i64*
  %305 = bitcast <4 x float>* %9 to <2 x float>*
  %306 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  %307 = extractelement <2 x float> %137, i32 0
  %308 = extractelement <2 x float> %137, i32 1
  %309 = extractelement <2 x float> %138, i32 0
  %310 = extractelement <2 x float> %138, i32 1
  %311 = icmp eq i8 %109, 4
  %312 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5
  %313 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %312, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5, i32 0, i32 1
  %315 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %312, i64 0, i32 0
  %316 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %317 = getelementptr inbounds [49 x i8], [49 x i8]* %7, i64 0, i64 0
  %318 = bitcast i32* %6 to [4 x i8]*
  %319 = bitcast i32* %6 to i8*
  %320 = getelementptr inbounds [4 x i8], [4 x i8]* %318, i64 0, i64 1
  %321 = getelementptr inbounds [4 x i8], [4 x i8]* %318, i64 0, i64 2
  %322 = getelementptr inbounds [4 x i8], [4 x i8]* %318, i64 0, i64 3
  %323 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0
  %324 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1
  %325 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %37, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %327 = bitcast i8* %326 to i64*
  %328 = bitcast %class.SkMatrix* %11 to <4 x float>*
  %329 = bitcast float* %295 to <4 x float>*
  br label %330

330:                                              ; preds = %1011, %197
  %331 = phi %class.SkPDFFont* [ null, %197 ], [ %995, %1011 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %230) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %230, i8 -86, i64 24, i1 false)
  call void @_ZN13SkClusterator4nextEv(%"struct.SkClusterator::Cluster"* nonnull sret %35, %class.SkClusterator* nonnull %23) #14
  %332 = load i32, i32* %231, align 8
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %230) #14
  br label %1013

335:                                              ; preds = %330
  %336 = load i32, i32* %232, align 4
  %337 = add i32 %336, %332
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #14
  store i8 0, i8* %36, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %233) #14
  store i64 -6148914691236517206, i64* %327, align 8
  %338 = call i8* @_Znwm(i64 24) #15, !noalias !98
  %339 = bitcast i8* %338 to i8**
  store i8* %36, i8** %339, align 8
  %340 = getelementptr inbounds i8, i8* %338, i64 8
  %341 = bitcast i8* %340 to %"class.(anonymous namespace)::GlyphPositioner"**
  store %"class.(anonymous namespace)::GlyphPositioner"* %33, %"class.(anonymous namespace)::GlyphPositioner"** %341, align 8
  %342 = getelementptr inbounds i8, i8* %338, i64 16
  %343 = bitcast i8* %342 to %class.SkDynamicMemoryWStream***
  store %class.SkDynamicMemoryWStream** %30, %class.SkDynamicMemoryWStream*** %343, align 8
  store i8* %338, i8** %234, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4S2_EEEEvPKNS0_16__policy_storageE" to i64), i64* %238, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %236, align 8
  %344 = load i8*, i8** %239, align 8
  %345 = icmp eq i8* %344, null
  br i1 %345, label %570, label %346

346:                                              ; preds = %335
  %347 = ptrtoint i8* %344 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #14
  store i64 %347, i64* %241, align 8
  %348 = load i32, i32* %242, align 8
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds i8, i8* %344, i64 %349
  %351 = call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** nonnull %38, i8* %350) #14
  %352 = icmp slt i32 %351, 0
  br i1 %352, label %569, label %353

353:                                              ; preds = %346
  %354 = load i8*, i8** %38, align 8
  %355 = icmp ult i8* %354, %350
  %356 = add nsw i32 %336, 1
  %357 = icmp sgt i32 %337, %356
  %358 = or i1 %357, %355
  br i1 %358, label %374, label %359

359:                                              ; preds = %353
  %360 = sext i32 %336 to i64
  %361 = getelementptr inbounds i16, i16* %40, i64 %360
  %362 = load i16, i16* %361, align 2
  %363 = zext i16 %362 to i64
  %364 = load i64, i64* %244, align 8
  %365 = load i64, i64* %245, align 8
  %366 = sub i64 %364, %365
  %367 = ashr exact i64 %366, 2
  %368 = icmp ugt i64 %367, %363
  br i1 %368, label %369, label %374

369:                                              ; preds = %359
  %370 = inttoptr i64 %365 to i32*
  %371 = getelementptr inbounds i32, i32* %370, i64 %363
  %372 = load i32, i32* %371, align 4
  %373 = icmp eq i32 %351, %372
  br i1 %373, label %568, label %374

374:                                              ; preds = %359, %369, %353
  %375 = load i8, i8* %214, align 1, !range !97
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %384, label %377

377:                                              ; preds = %374
  %378 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %379 = bitcast %class.SkWStream* %378 to i1 (%class.SkWStream*, i8*, i64)***
  %380 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %379, align 8
  %381 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %380, i64 2
  %382 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %381, align 8
  %383 = call zeroext i1 %382(%class.SkWStream* %378, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5) #14
  store i8 0, i8* %214, align 1
  br label %384

384:                                              ; preds = %374, %377
  %385 = load %class.SkWStream*, %class.SkWStream** %189, align 8
  %386 = bitcast %class.SkWStream* %385 to i1 (%class.SkWStream*, i8*, i64)***
  %387 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %386, align 8
  %388 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %387, i64 2
  %389 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %388, align 8
  %390 = call zeroext i1 %389(%class.SkWStream* %385, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 20) #14
  %391 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247) #14
  store i32 0, i32* %21, align 4
  %392 = call i64 @_ZN5SkUTF7ToUTF16EiPt(i32 65279, i16* nonnull %248) #14
  %393 = load i16, i16* %248, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %250) #14
  %394 = zext i16 %393 to i32
  %395 = lshr i32 %394, 12
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %396
  %398 = load i8, i8* %397, align 1
  store i8 %398, i8* %250, align 4
  %399 = lshr i32 %394, 8
  %400 = and i32 %399, 15
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %401
  %403 = load i8, i8* %402, align 1
  store i8 %403, i8* %251, align 1
  %404 = lshr i32 %394, 4
  %405 = and i32 %404, 15
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %406
  %408 = load i8, i8* %407, align 1
  store i8 %408, i8* %252, align 2
  %409 = and i32 %394, 15
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %410
  %412 = load i8, i8* %411, align 1
  store i8 %412, i8* %253, align 1
  %413 = bitcast %class.SkDynamicMemoryWStream* %391 to i1 (%class.SkDynamicMemoryWStream*, i8*, i64)***
  %414 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %413, align 8
  %415 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %414, i64 2
  %416 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %415, align 8
  %417 = call zeroext i1 %416(%class.SkDynamicMemoryWStream* %391, i8* nonnull %250, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %250) #14
  %418 = icmp eq i64 %392, 2
  br i1 %418, label %419, label %444

419:                                              ; preds = %384
  %420 = load i16, i16* %255, align 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %257) #14
  %421 = zext i16 %420 to i32
  %422 = lshr i32 %421, 12
  %423 = zext i32 %422 to i64
  %424 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %423
  %425 = load i8, i8* %424, align 1
  store i8 %425, i8* %257, align 4
  %426 = lshr i32 %421, 8
  %427 = and i32 %426, 15
  %428 = zext i32 %427 to i64
  %429 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %428
  %430 = load i8, i8* %429, align 1
  store i8 %430, i8* %258, align 1
  %431 = lshr i32 %421, 4
  %432 = and i32 %431, 15
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %433
  %435 = load i8, i8* %434, align 1
  store i8 %435, i8* %259, align 2
  %436 = and i32 %421, 15
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %437
  %439 = load i8, i8* %438, align 1
  store i8 %439, i8* %260, align 1
  %440 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %413, align 8
  %441 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %440, i64 2
  %442 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %441, align 8
  %443 = call zeroext i1 %442(%class.SkDynamicMemoryWStream* %391, i8* nonnull %257, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %257) #14
  br label %444

444:                                              ; preds = %384, %419
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247) #14
  %445 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261) #14
  store i32 0, i32* %18, align 4
  %446 = call i64 @_ZN5SkUTF7ToUTF16EiPt(i32 %351, i16* nonnull %262) #14
  %447 = load i16, i16* %262, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %264) #14
  %448 = zext i16 %447 to i32
  %449 = lshr i32 %448, 12
  %450 = zext i32 %449 to i64
  %451 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %450
  %452 = load i8, i8* %451, align 1
  store i8 %452, i8* %264, align 4
  %453 = lshr i32 %448, 8
  %454 = and i32 %453, 15
  %455 = zext i32 %454 to i64
  %456 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %455
  %457 = load i8, i8* %456, align 1
  store i8 %457, i8* %265, align 1
  %458 = lshr i32 %448, 4
  %459 = and i32 %458, 15
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %460
  %462 = load i8, i8* %461, align 1
  store i8 %462, i8* %266, align 2
  %463 = and i32 %448, 15
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %464
  %466 = load i8, i8* %465, align 1
  store i8 %466, i8* %267, align 1
  %467 = bitcast %class.SkDynamicMemoryWStream* %445 to i1 (%class.SkDynamicMemoryWStream*, i8*, i64)***
  %468 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %467, align 8
  %469 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %468, i64 2
  %470 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %469, align 8
  %471 = call zeroext i1 %470(%class.SkDynamicMemoryWStream* %445, i8* nonnull %264, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %264) #14
  %472 = icmp eq i64 %446, 2
  br i1 %472, label %473, label %498

473:                                              ; preds = %444
  %474 = load i16, i16* %269, align 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %271) #14
  %475 = zext i16 %474 to i32
  %476 = lshr i32 %475, 12
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %477
  %479 = load i8, i8* %478, align 1
  store i8 %479, i8* %271, align 4
  %480 = lshr i32 %475, 8
  %481 = and i32 %480, 15
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %482
  %484 = load i8, i8* %483, align 1
  store i8 %484, i8* %272, align 1
  %485 = lshr i32 %475, 4
  %486 = and i32 %485, 15
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %487
  %489 = load i8, i8* %488, align 1
  store i8 %489, i8* %273, align 2
  %490 = and i32 %475, 15
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %491
  %493 = load i8, i8* %492, align 1
  store i8 %493, i8* %274, align 1
  %494 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %467, align 8
  %495 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %494, i64 2
  %496 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %495, align 8
  %497 = call zeroext i1 %496(%class.SkDynamicMemoryWStream* %445, i8* nonnull %271, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %271) #14
  br label %498

498:                                              ; preds = %444, %473
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #14
  %499 = load i8*, i8** %38, align 8
  %500 = icmp ult i8* %499, %350
  br i1 %500, label %501, label %561

501:                                              ; preds = %498, %558
  %502 = call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** nonnull %38, i8* %350) #14
  %503 = icmp slt i32 %502, 0
  br i1 %503, label %561, label %504

504:                                              ; preds = %501
  %505 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %275) #14
  store i32 0, i32* %15, align 4
  %506 = call i64 @_ZN5SkUTF7ToUTF16EiPt(i32 %502, i16* nonnull %276) #14
  %507 = load i16, i16* %276, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %278) #14
  %508 = zext i16 %507 to i32
  %509 = lshr i32 %508, 12
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %510
  %512 = load i8, i8* %511, align 1
  store i8 %512, i8* %278, align 4
  %513 = lshr i32 %508, 8
  %514 = and i32 %513, 15
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %515
  %517 = load i8, i8* %516, align 1
  store i8 %517, i8* %279, align 1
  %518 = lshr i32 %508, 4
  %519 = and i32 %518, 15
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %520
  %522 = load i8, i8* %521, align 1
  store i8 %522, i8* %280, align 2
  %523 = and i32 %508, 15
  %524 = zext i32 %523 to i64
  %525 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %524
  %526 = load i8, i8* %525, align 1
  store i8 %526, i8* %281, align 1
  %527 = bitcast %class.SkDynamicMemoryWStream* %505 to i1 (%class.SkDynamicMemoryWStream*, i8*, i64)***
  %528 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %527, align 8
  %529 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %528, i64 2
  %530 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %529, align 8
  %531 = call zeroext i1 %530(%class.SkDynamicMemoryWStream* %505, i8* nonnull %278, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %278) #14
  %532 = icmp eq i64 %506, 2
  br i1 %532, label %533, label %558

533:                                              ; preds = %504
  %534 = load i16, i16* %283, align 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285) #14
  %535 = zext i16 %534 to i32
  %536 = lshr i32 %535, 12
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %537
  %539 = load i8, i8* %538, align 1
  store i8 %539, i8* %285, align 4
  %540 = lshr i32 %535, 8
  %541 = and i32 %540, 15
  %542 = zext i32 %541 to i64
  %543 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %542
  %544 = load i8, i8* %543, align 1
  store i8 %544, i8* %286, align 1
  %545 = lshr i32 %535, 4
  %546 = and i32 %545, 15
  %547 = zext i32 %546 to i64
  %548 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %547
  %549 = load i8, i8* %548, align 1
  store i8 %549, i8* %287, align 2
  %550 = and i32 %535, 15
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %551
  %553 = load i8, i8* %552, align 1
  store i8 %553, i8* %288, align 1
  %554 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %527, align 8
  %555 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %554, i64 2
  %556 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %555, align 8
  %557 = call zeroext i1 %556(%class.SkDynamicMemoryWStream* %505, i8* nonnull %285, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %285) #14
  br label %558

558:                                              ; preds = %504, %533
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %275) #14
  %559 = load i8*, i8** %38, align 8
  %560 = icmp ult i8* %559, %350
  br i1 %560, label %501, label %561

561:                                              ; preds = %558, %501, %498
  %562 = load %class.SkWStream*, %class.SkWStream** %189, align 8
  %563 = bitcast %class.SkWStream* %562 to i1 (%class.SkWStream*, i8*, i64)***
  %564 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %563, align 8
  %565 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %564, i64 2
  %566 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %565, align 8
  %567 = call zeroext i1 %566(%class.SkWStream* %562, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i64 9) #14
  store i8 1, i8* %36, align 1
  br label %568

568:                                              ; preds = %369, %561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #14
  br label %570

569:                                              ; preds = %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #14
  br label %994

570:                                              ; preds = %568, %335
  %571 = icmp slt i32 %336, %337
  br i1 %571, label %572, label %994

572:                                              ; preds = %570
  %573 = sext i32 %336 to i64
  br label %574

574:                                              ; preds = %989, %572
  %575 = phi i64 [ %573, %572 ], [ %991, %989 ]
  %576 = phi %class.SkPDFFont* [ %331, %572 ], [ %990, %989 ]
  %577 = getelementptr inbounds i16, i16* %40, i64 %575
  %578 = load i16, i16* %577, align 2
  %579 = zext i16 %578 to i32
  %580 = icmp sgt i32 %185, %579
  br i1 %580, label %581, label %989

581:                                              ; preds = %574
  %582 = load %struct.SkPoint*, %struct.SkPoint** %289, align 8
  %583 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %582, i64 %575
  %584 = bitcast %struct.SkPoint* %583 to <2 x float>*
  %585 = load <2 x float>, <2 x float>* %584, align 4
  %586 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %229, i64 %575
  %587 = load %class.SkGlyph*, %class.SkGlyph** %586, align 8
  %588 = fadd <2 x float> %585, %2
  %589 = shufflevector <2 x float> %588, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %290)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %293) #14
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %328, align 16, !alias.scope !103
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %329, align 16, !alias.scope !103
  store float 1.000000e+00, float* %296, align 16, !alias.scope !103
  store i32 16, i32* %294, align 4, !alias.scope !103
  %590 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %11, float %126, float %122) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %297) #14
  %591 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %587, i64 0, i32 3
  %592 = load i16, i16* %591, align 2
  %593 = sitofp i16 %592 to float
  %594 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %587, i64 0, i32 2
  %595 = load i16, i16* %594, align 4
  %596 = sitofp i16 %595 to float
  %597 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %587, i64 0, i32 0
  %598 = load i16, i16* %597, align 8
  %599 = uitofp i16 %598 to float
  %600 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %587, i64 0, i32 1
  %601 = load i16, i16* %600, align 2
  %602 = uitofp i16 %601 to float
  %603 = insertelement <2 x float> undef, float %593, i32 0
  %604 = insertelement <2 x float> %603, float %596, i32 1
  %605 = fadd float %593, %599
  %606 = insertelement <2 x float> undef, float %605, i32 0
  %607 = fadd float %596, %602
  %608 = insertelement <2 x float> %606, float %607, i32 1
  store <2 x float> %604, <2 x float>* %298, align 8
  store <2 x float> %608, <2 x float>* %299, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %300) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %300, i8 -1, i64 16, i1 false) #14
  %609 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %11, %struct.SkRect* nonnull %301, %struct.SkRect* nonnull dereferenceable(16) %292, i32 1) #14
  %610 = load i64, i64* %302, align 8
  %611 = load i64, i64* %304, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %300) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %297) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %293) #14
  %612 = lshr i64 %610, 32
  %613 = lshr i64 %611, 32
  %614 = insertelement <4 x i64> undef, i64 %610, i32 0
  %615 = insertelement <4 x i64> %614, i64 %612, i32 1
  %616 = insertelement <4 x i64> %615, i64 %611, i32 2
  %617 = insertelement <4 x i64> %616, i64 %613, i32 3
  %618 = trunc <4 x i64> %617 to <4 x i32>
  %619 = bitcast <4 x i32> %618 to <4 x float>
  %620 = fadd <4 x float> %589, %619
  store <4 x float> %620, <4 x float>* %9, align 16
  %621 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %81, %struct.SkRect* nonnull %291, %struct.SkRect* nonnull dereferenceable(16) %291, i32 1) #14
  %622 = load <2 x float>, <2 x float>* %305, align 16
  %623 = load <2 x float>, <2 x float>* %306, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %290)
  %624 = extractelement <2 x float> %622, i32 0
  %625 = extractelement <2 x float> %623, i32 0
  %626 = fcmp olt float %624, %625
  %627 = extractelement <2 x float> %622, i32 1
  br i1 %626, label %628, label %631

628:                                              ; preds = %581
  %629 = extractelement <2 x float> %623, i32 1
  %630 = fcmp uge float %627, %629
  br i1 %630, label %631, label %640

631:                                              ; preds = %581, %628
  %632 = fcmp ugt float %307, %624
  %633 = fcmp ugt float %624, %309
  %634 = or i1 %632, %633
  %635 = fcmp ugt float %308, %627
  %636 = or i1 %635, %634
  %637 = xor i1 %636, true
  %638 = fcmp ole float %627, %310
  %639 = and i1 %638, %637
  br i1 %639, label %652, label %989

640:                                              ; preds = %628
  %641 = fcmp olt float %307, %624
  %642 = select i1 %641, float %624, float %307
  %643 = fcmp olt float %625, %309
  %644 = select i1 %643, float %625, float %309
  %645 = fcmp olt float %308, %627
  %646 = select i1 %645, float %627, float %308
  %647 = fcmp olt float %629, %310
  %648 = fcmp olt float %642, %644
  %649 = select i1 %647, float %629, float %310
  %650 = fcmp olt float %646, %649
  %651 = and i1 %648, %650
  br i1 %651, label %652, label %989

652:                                              ; preds = %631, %640
  %653 = load %class.SkGlyph*, %class.SkGlyph** %586, align 8
  %654 = icmp eq %class.SkPDFFont* %576, null
  br i1 %654, label %683, label %655

655:                                              ; preds = %652
  %656 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %653, i64 0, i32 10, i32 0
  %657 = load i32, i32* %656, align 4
  %658 = lshr i32 %657, 2
  %659 = trunc i32 %658 to i16
  %660 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %576, i64 0, i32 1, i32 1
  %661 = load i16, i16* %660, align 8
  %662 = icmp ugt i16 %661, %659
  br i1 %662, label %667, label %663

663:                                              ; preds = %655
  %664 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %576, i64 0, i32 1, i32 2
  %665 = load i16, i16* %664, align 2
  %666 = icmp ult i16 %665, %659
  br i1 %666, label %683, label %669

667:                                              ; preds = %655
  %668 = icmp eq i16 %659, 0
  br i1 %668, label %669, label %683

669:                                              ; preds = %667, %663
  br i1 %311, label %781, label %670

670:                                              ; preds = %669
  %671 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %653, i64 0, i32 0
  %672 = load i16, i16* %671, align 8
  %673 = icmp eq i16 %672, 0
  br i1 %673, label %781, label %674

674:                                              ; preds = %670
  %675 = call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %653) #14
  %676 = icmp eq %class.SkPath* %675, null
  %677 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %576, i64 0, i32 3
  %678 = load i8, i8* %677, align 4
  %679 = icmp eq i8 %678, 4
  %680 = xor i1 %676, %679
  br i1 %680, label %681, label %781

681:                                              ; preds = %674
  %682 = load %class.SkGlyph*, %class.SkGlyph** %586, align 8
  br label %683

683:                                              ; preds = %681, %663, %667, %652
  %684 = phi %class.SkGlyph* [ %682, %681 ], [ %653, %663 ], [ %653, %667 ], [ %653, %652 ]
  %685 = load %class.SkPDFDocument*, %class.SkPDFDocument** %104, align 8
  %686 = call %class.SkPDFFont* @_ZN9SkPDFFont15GetFontResourceEP13SkPDFDocumentPK7SkGlyphP10SkTypeface(%class.SkPDFDocument* %685, %class.SkGlyph* %684, %class.SkTypeface* nonnull %100) #14
  %687 = load i8, i8* %214, align 1, !range !97
  %688 = icmp eq i8 %687, 0
  br i1 %688, label %696, label %689

689:                                              ; preds = %683
  %690 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %691 = bitcast %class.SkWStream* %690 to i1 (%class.SkWStream*, i8*, i64)***
  %692 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %691, align 8
  %693 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %692, i64 2
  %694 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %693, align 8
  %695 = call zeroext i1 %694(%class.SkWStream* %690, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5) #14
  store i8 0, i8* %214, align 1
  br label %696

696:                                              ; preds = %689, %683
  %697 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %686, i64 0, i32 3
  %698 = load i8, i8* %697, align 4
  %699 = or i8 %698, 2
  %700 = icmp eq i8 %699, 3
  %701 = zext i1 %700 to i8
  store i8 %701, i8* %213, align 8
  %702 = load %class.SkWStream*, %class.SkWStream** %189, align 8
  %703 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %686, i64 0, i32 2, i32 0
  %704 = load i32, i32* %703, align 8
  %705 = load i32, i32* %313, align 8
  %706 = shl nsw i32 %705, 2
  %707 = load i32, i32* %314, align 4
  %708 = mul nsw i32 %707, 3
  %709 = icmp slt i32 %706, %708
  br i1 %709, label %715, label %710

710:                                              ; preds = %696
  %711 = icmp sgt i32 %707, 0
  %712 = shl nsw i32 %707, 1
  %713 = select i1 %711, i32 %712, i32 4
  call void @_ZN12SkTHashTableI22SkPDFIndirectReferenceS0_N10SkTHashSetIS0_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable* %315, i32 %713) #14
  %714 = load i32, i32* %314, align 4
  br label %715

715:                                              ; preds = %696, %710
  %716 = phi i32 [ %707, %696 ], [ %714, %710 ]
  %717 = lshr i32 %704, 16
  %718 = xor i32 %717, %704
  %719 = mul i32 %718, -2048144789
  %720 = lshr i32 %719, 13
  %721 = xor i32 %720, %719
  %722 = mul i32 %721, -1028477387
  %723 = lshr i32 %722, 16
  %724 = xor i32 %723, %722
  %725 = icmp eq i32 %724, 0
  %726 = select i1 %725, i32 1, i32 %724
  %727 = icmp sgt i32 %716, 0
  br i1 %727, label %728, label %760

728:                                              ; preds = %715
  %729 = add nsw i32 %716, -1
  %730 = and i32 %729, %726
  %731 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %316, align 8
  br label %732

732:                                              ; preds = %753, %728
  %733 = phi i32 [ 0, %728 ], [ %758, %753 ]
  %734 = phi i32 [ %730, %728 ], [ %757, %753 ]
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %731, i64 %735
  %737 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %731, i64 %735, i32 1
  %738 = load i32, i32* %737, align 4
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %745

740:                                              ; preds = %732
  %741 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %731, i64 %735, i32 1
  %742 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %736, i64 0, i32 0, i32 0
  store i32 %704, i32* %742, align 4
  store i32 %726, i32* %741, align 4
  %743 = load i32, i32* %313, align 8
  %744 = add nsw i32 %743, 1
  store i32 %744, i32* %313, align 8
  br label %760

745:                                              ; preds = %732
  %746 = icmp eq i32 %726, %738
  br i1 %746, label %747, label %753

747:                                              ; preds = %745
  %748 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %736, i64 0, i32 0, i32 0
  %749 = load i32, i32* %748, align 4
  %750 = icmp eq i32 %704, %749
  br i1 %750, label %751, label %753

751:                                              ; preds = %747
  %752 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %736, i64 0, i32 0, i32 0
  store i32 %704, i32* %752, align 4
  br label %760

753:                                              ; preds = %747, %745
  %754 = add nsw i32 %734, -1
  %755 = icmp slt i32 %734, 1
  %756 = select i1 %755, i32 %716, i32 0
  %757 = add nsw i32 %754, %756
  %758 = add nuw nsw i32 %733, 1
  %759 = icmp eq i32 %758, %716
  br i1 %759, label %760, label %732

760:                                              ; preds = %753, %715, %740, %751
  call void @_Z22SkPDFWriteResourceNameP9SkWStream17SkPDFResourceTypei(%class.SkWStream* %702, i32 3, i32 %704) #14
  %761 = load %class.SkWStream*, %class.SkWStream** %189, align 8
  %762 = bitcast %class.SkWStream* %761 to i1 (%class.SkWStream*, i8*, i64)***
  %763 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %762, align 8
  %764 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %763, i64 2
  %765 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %764, align 8
  %766 = call zeroext i1 %765(%class.SkWStream* %761, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #14
  %767 = load %class.SkWStream*, %class.SkWStream** %189, align 8
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %317) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %317, i8 -86, i64 49, i1 false) #14
  %768 = call i32 @_Z16SkFloatToDecimalfPc(float %115, i8* nonnull %317) #14
  %769 = zext i32 %768 to i64
  %770 = bitcast %class.SkWStream* %767 to i1 (%class.SkWStream*, i8*, i64)***
  %771 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %770, align 8
  %772 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %771, i64 2
  %773 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %772, align 8
  %774 = call zeroext i1 %773(%class.SkWStream* %767, i8* nonnull %317, i64 %769) #14
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %317) #14
  %775 = load %class.SkWStream*, %class.SkWStream** %189, align 8
  %776 = bitcast %class.SkWStream* %775 to i1 (%class.SkWStream*, i8*, i64)***
  %777 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %776, align 8
  %778 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %777, i64 2
  %779 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %778, align 8
  %780 = call zeroext i1 %779(%class.SkWStream* %775, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #14
  br label %781

781:                                              ; preds = %670, %669, %760, %674
  %782 = phi %class.SkPDFFont* [ %686, %760 ], [ %576, %674 ], [ %576, %669 ], [ %576, %670 ]
  %783 = icmp eq i16 %578, 0
  br i1 %783, label %791, label %784

784:                                              ; preds = %781
  %785 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %782, i64 0, i32 1, i32 1
  %786 = load i16, i16* %785, align 8
  %787 = icmp eq i16 %786, 1
  br i1 %787, label %791, label %788

788:                                              ; preds = %784
  %789 = add i16 %578, 1
  %790 = sub i16 %789, %786
  br label %791

791:                                              ; preds = %781, %784, %788
  %792 = phi i16 [ %790, %788 ], [ %578, %784 ], [ 0, %781 ]
  %793 = and i16 %792, 31
  %794 = zext i16 %793 to i32
  %795 = shl i32 1, %794
  %796 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %782, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %797 = load i32*, i32** %796, align 8
  %798 = lshr i16 %792, 5
  %799 = zext i16 %798 to i64
  %800 = getelementptr inbounds i32, i32* %797, i64 %799
  %801 = load i32, i32* %800, align 4
  %802 = or i32 %795, %801
  store i32 %802, i32* %800, align 4
  %803 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %782, i64 0, i32 3
  %804 = load i8, i8* %803, align 4
  %805 = or i8 %804, 2
  %806 = icmp eq i8 %805, 3
  %807 = or i1 %783, %806
  %808 = select i1 %806, i16 %578, i16 0
  br i1 %807, label %814, label %809

809:                                              ; preds = %791
  %810 = getelementptr inbounds %class.SkPDFFont, %class.SkPDFFont* %782, i64 0, i32 1, i32 1
  %811 = load i16, i16* %810, align 8
  %812 = add i16 %578, 1
  %813 = sub i16 %812, %811
  br label %814

814:                                              ; preds = %791, %809
  %815 = phi i16 [ %808, %791 ], [ %813, %809 ]
  %816 = load %class.SkGlyph*, %class.SkGlyph** %586, align 8
  %817 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %816, i64 0, i32 6
  %818 = load float, float* %817, align 8
  %819 = fmul float %121, %818
  %820 = load i8, i8* %215, align 2, !range !97
  %821 = icmp eq i8 %820, 0
  br i1 %821, label %825, label %822

822:                                              ; preds = %814
  %823 = load float, float* %209, align 8
  %824 = load float, float* %210, align 4
  br label %878

825:                                              ; preds = %814
  %826 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %827 = bitcast %class.SkWStream* %826 to i1 (%class.SkWStream*, i8*, i64)***
  %828 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %827, align 8
  %829 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %828, i64 2
  %830 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %829, align 8
  %831 = call zeroext i1 %830(%class.SkWStream* %826, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i64 4) #14
  %832 = load float, float* %212, align 4
  %833 = fsub float -0.000000e+00, %832
  %834 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %317) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %317, i8 -86, i64 49, i1 false) #14
  %835 = call i32 @_Z16SkFloatToDecimalfPc(float %833, i8* nonnull %317) #14
  %836 = zext i32 %835 to i64
  %837 = bitcast %class.SkWStream* %834 to i1 (%class.SkWStream*, i8*, i64)***
  %838 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %837, align 8
  %839 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %838, i64 2
  %840 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %839, align 8
  %841 = call zeroext i1 %840(%class.SkWStream* %834, i8* nonnull %317, i64 %836) #14
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %317) #14
  %842 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %843 = bitcast %class.SkWStream* %842 to i1 (%class.SkWStream*, i8*, i64)***
  %844 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %843, align 8
  %845 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %844, i64 2
  %846 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %845, align 8
  %847 = call zeroext i1 %846(%class.SkWStream* %842, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i64 4) #14
  %848 = load float, float* %209, align 8
  %849 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %317) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %317, i8 -86, i64 49, i1 false) #14
  %850 = call i32 @_Z16SkFloatToDecimalfPc(float %848, i8* nonnull %317) #14
  %851 = zext i32 %850 to i64
  %852 = bitcast %class.SkWStream* %849 to i1 (%class.SkWStream*, i8*, i64)***
  %853 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %852, align 8
  %854 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %853, i64 2
  %855 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %854, align 8
  %856 = call zeroext i1 %855(%class.SkWStream* %849, i8* nonnull %317, i64 %851) #14
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %317) #14
  %857 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %858 = bitcast %class.SkWStream* %857 to i1 (%class.SkWStream*, i8*, i64)***
  %859 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %858, align 8
  %860 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %859, i64 2
  %861 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %860, align 8
  %862 = call zeroext i1 %861(%class.SkWStream* %857, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #14
  %863 = load float, float* %210, align 4
  %864 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %317) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %317, i8 -86, i64 49, i1 false) #14
  %865 = call i32 @_Z16SkFloatToDecimalfPc(float %863, i8* nonnull %317) #14
  %866 = zext i32 %865 to i64
  %867 = bitcast %class.SkWStream* %864 to i1 (%class.SkWStream*, i8*, i64)***
  %868 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %867, align 8
  %869 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %868, i64 2
  %870 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %869, align 8
  %871 = call zeroext i1 %870(%class.SkWStream* %864, i8* nonnull %317, i64 %866) #14
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %317) #14
  %872 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %873 = bitcast %class.SkWStream* %872 to i1 (%class.SkWStream*, i8*, i64)***
  %874 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %873, align 8
  %875 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %874, i64 2
  %876 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %875, align 8
  %877 = call zeroext i1 %876(%class.SkWStream* %872, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i64 4) #14
  store float 0.000000e+00, float* %209, align 8
  store float 0.000000e+00, float* %210, align 4
  store i8 1, i8* %215, align 2
  br label %878

878:                                              ; preds = %825, %822
  %879 = phi float [ %824, %822 ], [ 0.000000e+00, %825 ]
  %880 = phi float [ %823, %822 ], [ 0.000000e+00, %825 ]
  %881 = extractelement <2 x float> %585, i32 0
  %882 = fsub float %881, %880
  %883 = extractelement <2 x float> %585, i32 1
  %884 = fsub float %883, %879
  %885 = load float, float* %211, align 8
  %886 = fcmp une float %882, %885
  %887 = fcmp une float %884, 0.000000e+00
  %888 = or i1 %887, %886
  br i1 %888, label %889, label %932

889:                                              ; preds = %878
  %890 = load i8, i8* %214, align 1, !range !97
  %891 = icmp eq i8 %890, 0
  br i1 %891, label %899, label %892

892:                                              ; preds = %889
  %893 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %894 = bitcast %class.SkWStream* %893 to i1 (%class.SkWStream*, i8*, i64)***
  %895 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %894, align 8
  %896 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %895, i64 2
  %897 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %896, align 8
  %898 = call zeroext i1 %897(%class.SkWStream* %893, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5) #14
  store i8 0, i8* %214, align 1
  br label %899

899:                                              ; preds = %892, %889
  %900 = load float, float* %212, align 4
  %901 = fmul float %884, %900
  %902 = fsub float %882, %901
  %903 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %317) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %317, i8 -86, i64 49, i1 false) #14
  %904 = call i32 @_Z16SkFloatToDecimalfPc(float %902, i8* nonnull %317) #14
  %905 = zext i32 %904 to i64
  %906 = bitcast %class.SkWStream* %903 to i1 (%class.SkWStream*, i8*, i64)***
  %907 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %906, align 8
  %908 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %907, i64 2
  %909 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %908, align 8
  %910 = call zeroext i1 %909(%class.SkWStream* %903, i8* nonnull %317, i64 %905) #14
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %317) #14
  %911 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %912 = bitcast %class.SkWStream* %911 to i1 (%class.SkWStream*, i8*, i64)***
  %913 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %912, align 8
  %914 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %913, i64 2
  %915 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %914, align 8
  %916 = call zeroext i1 %915(%class.SkWStream* %911, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #14
  %917 = fsub float -0.000000e+00, %884
  %918 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %317) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %317, i8 -86, i64 49, i1 false) #14
  %919 = call i32 @_Z16SkFloatToDecimalfPc(float %917, i8* nonnull %317) #14
  %920 = zext i32 %919 to i64
  %921 = bitcast %class.SkWStream* %918 to i1 (%class.SkWStream*, i8*, i64)***
  %922 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %921, align 8
  %923 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %922, i64 2
  %924 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %923, align 8
  %925 = call zeroext i1 %924(%class.SkWStream* %918, i8* nonnull %317, i64 %920) #14
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %317) #14
  %926 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %927 = bitcast %class.SkWStream* %926 to i1 (%class.SkWStream*, i8*, i64)***
  %928 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %927, align 8
  %929 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %928, i64 2
  %930 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %929, align 8
  %931 = call zeroext i1 %930(%class.SkWStream* %926, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i64 4) #14
  store <2 x float> %585, <2 x float>* %223, align 8
  store float 0.000000e+00, float* %211, align 8
  br label %932

932:                                              ; preds = %899, %878
  %933 = phi float [ %885, %878 ], [ 0.000000e+00, %899 ]
  %934 = fadd float %819, %933
  store float %934, float* %211, align 8
  %935 = load i8, i8* %214, align 1, !range !97
  %936 = icmp eq i8 %935, 0
  br i1 %936, label %937, label %944

937:                                              ; preds = %932
  %938 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %939 = bitcast %class.SkWStream* %938 to i1 (%class.SkWStream*, i8*, i64)***
  %940 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %939, align 8
  %941 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %940, i64 2
  %942 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %941, align 8
  %943 = call zeroext i1 %942(%class.SkWStream* %938, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i64 1) #14
  store i8 1, i8* %214, align 1
  br label %944

944:                                              ; preds = %937, %932
  %945 = load i8, i8* %213, align 8, !range !97
  %946 = icmp eq i8 %945, 0
  %947 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %208, align 8
  br i1 %946, label %973, label %948

948:                                              ; preds = %944
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %319) #14
  %949 = zext i16 %815 to i32
  %950 = lshr i32 %949, 12
  %951 = zext i32 %950 to i64
  %952 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %951
  %953 = load i8, i8* %952, align 1
  store i8 %953, i8* %319, align 4
  %954 = lshr i32 %949, 8
  %955 = and i32 %954, 15
  %956 = zext i32 %955 to i64
  %957 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %956
  %958 = load i8, i8* %957, align 1
  store i8 %958, i8* %320, align 1
  %959 = lshr i32 %949, 4
  %960 = and i32 %959, 15
  %961 = zext i32 %960 to i64
  %962 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %961
  %963 = load i8, i8* %962, align 1
  store i8 %963, i8* %321, align 2
  %964 = and i32 %949, 15
  %965 = zext i32 %964 to i64
  %966 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %965
  %967 = load i8, i8* %966, align 1
  store i8 %967, i8* %322, align 1
  %968 = bitcast %class.SkDynamicMemoryWStream* %947 to i1 (%class.SkDynamicMemoryWStream*, i8*, i64)***
  %969 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %968, align 8
  %970 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %969, i64 2
  %971 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %970, align 8
  %972 = call zeroext i1 %971(%class.SkDynamicMemoryWStream* %947, i8* nonnull %319, i64 4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %319) #14
  br label %989

973:                                              ; preds = %944
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %323) #14
  %974 = and i16 %815, 255
  %975 = zext i16 %974 to i32
  %976 = lshr i32 %975, 4
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %977
  %979 = load i8, i8* %978, align 1
  store i8 %979, i8* %323, align 1
  %980 = and i32 %975, 15
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %981
  %983 = load i8, i8* %982, align 1
  store i8 %983, i8* %324, align 1
  %984 = bitcast %class.SkDynamicMemoryWStream* %947 to i1 (%class.SkDynamicMemoryWStream*, i8*, i64)***
  %985 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)**, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*** %984, align 8
  %986 = getelementptr inbounds i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %985, i64 2
  %987 = load i1 (%class.SkDynamicMemoryWStream*, i8*, i64)*, i1 (%class.SkDynamicMemoryWStream*, i8*, i64)** %986, align 8
  %988 = call zeroext i1 %987(%class.SkDynamicMemoryWStream* %947, i8* nonnull %323, i64 2) #14
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %323) #14
  br label %989

989:                                              ; preds = %631, %640, %948, %973, %574
  %990 = phi %class.SkPDFFont* [ %576, %574 ], [ %782, %973 ], [ %782, %948 ], [ %576, %640 ], [ %576, %631 ]
  %991 = add nsw i64 %575, 1
  %992 = trunc i64 %991 to i32
  %993 = icmp eq i32 %337, %992
  br i1 %993, label %994, label %574

994:                                              ; preds = %989, %570, %569
  %995 = phi %class.SkPDFFont* [ %331, %569 ], [ %331, %570 ], [ %990, %989 ]
  %996 = phi i32 [ 1, %569 ], [ 0, %570 ], [ 0, %989 ]
  %997 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %236, align 8
  %998 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %997, i64 0, i32 2
  %999 = load i8, i8* %998, align 8, !range !97
  %1000 = icmp eq i8 %999, 0
  br i1 %1000, label %1001, label %1004

1001:                                             ; preds = %994
  %1002 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %235, align 8
  call void %1002(%"union.std::__1::__function::__policy_storage"* nonnull %325) #14
  %1003 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %236, align 8
  br label %1004

1004:                                             ; preds = %1001, %994
  %1005 = phi %"struct.std::__1::__function::__policy"* [ %1003, %1001 ], [ %997, %994 ]
  %1006 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1005, i64 0, i32 1
  %1007 = load void (i8*)*, void (i8*)** %1006, align 8
  %1008 = icmp eq void (i8*)* %1007, null
  br i1 %1008, label %1011, label %1009

1009:                                             ; preds = %1004
  %1010 = load i8*, i8** %234, align 8
  call void %1007(i8* %1010) #14
  br label %1011

1011:                                             ; preds = %1009, %1004
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %233) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %230) #14
  %1012 = icmp eq i32 %996, 0
  br i1 %1012, label %330, label %1013

1013:                                             ; preds = %1011, %334
  %1014 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %34, i64 0, i32 1, i32 0
  %1015 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %1014, align 8
  %1016 = icmp eq %"class.SkStrikeCache::Strike"* %1015, null
  br i1 %1016, label %1027, label %1017

1017:                                             ; preds = %1013
  %1018 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %1015, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1019 = atomicrmw add i32* %1018, i32 -1 acq_rel
  %1020 = icmp eq i32 %1019, 1
  br i1 %1020, label %1021, label %1027

1021:                                             ; preds = %1017
  %1022 = bitcast %"class.SkStrikeCache::Strike"* %1015 to %class.SkRefCntBase*
  %1023 = bitcast %"class.SkStrikeCache::Strike"* %1015 to void (%class.SkRefCntBase*)***
  %1024 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1023, align 8
  %1025 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1024, i64 2
  %1026 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1025, align 8
  call void %1026(%class.SkRefCntBase* nonnull %1022) #14
  br label %1027

1027:                                             ; preds = %1021, %1017, %1013
  %1028 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %34, i64 0, i32 0, i32 1
  %1029 = load %class.SkGlyph**, %class.SkGlyph*** %1028, align 8
  %1030 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %34, i64 0, i32 0, i32 0
  %1031 = load i32, i32* %1030, align 8
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %1029, i64 %1032
  br label %1034

1034:                                             ; preds = %1034, %1027
  %1035 = phi %class.SkGlyph** [ %1033, %1027 ], [ %1037, %1034 ]
  %1036 = icmp ugt %class.SkGlyph** %1035, %1029
  %1037 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %1035, i64 -1
  br i1 %1036, label %1034, label %1038

1038:                                             ; preds = %1034
  %1039 = bitcast %class.SkGlyph** %1029 to i8*
  %1040 = icmp eq i32 %1031, 0
  br i1 %1040, label %1045, label %1041

1041:                                             ; preds = %1038
  %1042 = icmp sgt i32 %1031, 20
  br i1 %1042, label %1043, label %1044

1043:                                             ; preds = %1041
  call void @_Z7sk_freePv(i8* %1039) #14
  br label %1044

1044:                                             ; preds = %1043, %1041
  store %class.SkGlyph** null, %class.SkGlyph*** %1028, align 8
  store i32 0, i32* %1030, align 8
  br label %1045

1045:                                             ; preds = %1038, %1044
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %225) #14
  %1046 = load i8, i8* %214, align 1, !range !97
  %1047 = icmp eq i8 %1046, 0
  br i1 %1047, label %1055, label %1048

1048:                                             ; preds = %1045
  %1049 = load %class.SkWStream*, %class.SkWStream** %246, align 8
  %1050 = bitcast %class.SkWStream* %1049 to i1 (%class.SkWStream*, i8*, i64)***
  %1051 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %1050, align 8
  %1052 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %1051, i64 2
  %1053 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %1052, align 8
  %1054 = call zeroext i1 %1053(%class.SkWStream* %1049, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5) #14
  store i8 0, i8* %214, align 1
  br label %1055

1055:                                             ; preds = %1045, %1048
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %207) #14
  %1056 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %201, align 8
  %1057 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1056, i64 0, i32 2
  %1058 = load i8, i8* %1057, align 8, !range !97
  %1059 = icmp eq i8 %1058, 0
  br i1 %1059, label %1060, label %1064

1060:                                             ; preds = %1055
  %1061 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %200, align 8
  %1062 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %32, i64 0, i32 0, i32 0, i32 0
  call void %1061(%"union.std::__1::__function::__policy_storage"* nonnull %1062) #14
  %1063 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %201, align 8
  br label %1064

1064:                                             ; preds = %1060, %1055
  %1065 = phi %"struct.std::__1::__function::__policy"* [ %1063, %1060 ], [ %1056, %1055 ]
  %1066 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1065, i64 0, i32 1
  %1067 = load void (i8*)*, void (i8*)** %1066, align 8
  %1068 = icmp eq void (i8*)* %1067, null
  br i1 %1068, label %1071, label %1069

1069:                                             ; preds = %1064
  %1070 = load i8*, i8** %199, align 8
  call void %1067(i8* %1070) #14
  br label %1071

1071:                                             ; preds = %1064, %1069
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %198) #14
  %1072 = icmp eq i32 %184, -1
  br i1 %1072, label %1080, label %1073

1073:                                             ; preds = %1071
  %1074 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %165, i64 0, i32 0
  %1075 = bitcast %class.SkDynamicMemoryWStream* %165 to i1 (%class.SkWStream*, i8*, i64)***
  %1076 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %1075, align 8
  %1077 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %1076, i64 2
  %1078 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %1077, align 8
  %1079 = call zeroext i1 %1078(%class.SkWStream* %1074, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 4) #14
  br label %1080

1080:                                             ; preds = %1071, %1073
  %1081 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %158, align 8
  %1082 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1081, i64 0, i32 2
  %1083 = load i8, i8* %1082, align 8, !range !97
  %1084 = icmp eq i8 %1083, 0
  br i1 %1084, label %1085, label %1089

1085:                                             ; preds = %1080
  %1086 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %157, align 8
  %1087 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %31, i64 0, i32 0, i32 0, i32 0
  call void %1086(%"union.std::__1::__function::__policy_storage"* nonnull %1087) #14
  %1088 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %158, align 8
  br label %1089

1089:                                             ; preds = %1085, %1080
  %1090 = phi %"struct.std::__1::__function::__policy"* [ %1088, %1085 ], [ %1081, %1080 ]
  %1091 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1090, i64 0, i32 1
  %1092 = load void (i8*)*, void (i8*)** %1091, align 8
  %1093 = icmp eq void (i8*)* %1092, null
  br i1 %1093, label %1096, label %1094

1094:                                             ; preds = %1089
  %1095 = load i8*, i8** %156, align 8
  call void %1092(i8* %1095) #14
  br label %1096

1096:                                             ; preds = %1094, %1089
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #14
  %1097 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %144, align 8
  %1098 = icmp eq %class.SkDynamicMemoryWStream* %1097, null
  br i1 %1098, label %1115, label %1099

1099:                                             ; preds = %1096
  %1100 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %29, i64 0, i32 4
  %1101 = getelementptr inbounds %class.SkPath, %class.SkPath* %1100, i64 0, i32 0, i32 0
  %1102 = load %class.SkPathRef*, %class.SkPathRef** %1101, align 8
  %1103 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1102, i64 0, i32 4, i32 2
  %1104 = load i32, i32* %1103, align 4
  %1105 = icmp eq i32 %1104, 0
  %1106 = select i1 %1105, %class.SkPath* null, %class.SkPath* %1100
  %1107 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %29, i64 0, i32 0
  %1108 = load %class.SkPDFDevice*, %class.SkPDFDevice** %1107, align 8
  %1109 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %29, i64 0, i32 5
  %1110 = load %class.SkClipStack*, %class.SkClipStack** %1109, align 8
  %1111 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %29, i64 0, i32 2
  %1112 = load i32, i32* %1111, align 8
  %1113 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %29, i64 0, i32 3, i32 0
  %1114 = load i32, i32* %1113, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %1108, %class.SkClipStack* %1110, i32 %1112, i32 %1114, %class.SkPath* %1106) #14
  br label %1115

1115:                                             ; preds = %108, %1096, %1099
  %1116 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %29, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %1116) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %140) #14
  %1117 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %28, i64 0, i32 1, i32 1
  %1118 = load %class.SkPaint*, %class.SkPaint** %1117, align 8
  %1119 = icmp eq %class.SkPaint* %1118, null
  br i1 %1119, label %1121, label %1120

1120:                                             ; preds = %1115
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %1118) #14
  store %class.SkPaint* null, %class.SkPaint** %1117, align 8
  br label %1121

1121:                                             ; preds = %1115, %1120
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %139) #14
  %1122 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %25, i64 0, i32 3, i32 0
  %1123 = load %class.SkTypeface*, %class.SkTypeface** %1122, align 8
  %1124 = icmp eq %class.SkTypeface* %1123, null
  br i1 %1124, label %1135, label %1125

1125:                                             ; preds = %1121
  %1126 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %1123, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1127 = atomicrmw add i32* %1126, i32 -1 acq_rel
  %1128 = icmp eq i32 %1127, 1
  br i1 %1128, label %1129, label %1135

1129:                                             ; preds = %1125
  %1130 = bitcast %class.SkTypeface* %1123 to %class.SkRefCntBase*
  %1131 = bitcast %class.SkTypeface* %1123 to void (%class.SkRefCntBase*)***
  %1132 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1131, align 8
  %1133 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1132, i64 2
  %1134 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1133, align 8
  call void %1134(%class.SkRefCntBase* nonnull %1130) #14
  br label %1135

1135:                                             ; preds = %1129, %1125, %1121
  %1136 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %25, i64 0, i32 2, i32 0
  %1137 = load %class.SkPathEffect*, %class.SkPathEffect** %1136, align 8
  %1138 = icmp eq %class.SkPathEffect* %1137, null
  br i1 %1138, label %1149, label %1139

1139:                                             ; preds = %1135
  %1140 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %1137, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1141 = atomicrmw add i32* %1140, i32 -1 acq_rel
  %1142 = icmp eq i32 %1141, 1
  br i1 %1142, label %1143, label %1149

1143:                                             ; preds = %1139
  %1144 = bitcast %class.SkPathEffect* %1137 to %class.SkRefCntBase*
  %1145 = bitcast %class.SkPathEffect* %1137 to void (%class.SkRefCntBase*)***
  %1146 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1145, align 8
  %1147 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1146, i64 2
  %1148 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1147, align 8
  call void %1148(%class.SkRefCntBase* nonnull %1144) #14
  br label %1149

1149:                                             ; preds = %1143, %1139, %1135
  %1150 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %25, i64 0, i32 1, i32 0
  %1151 = load %class.SkMaskFilter*, %class.SkMaskFilter** %1150, align 8
  %1152 = icmp eq %class.SkMaskFilter* %1151, null
  br i1 %1152, label %1163, label %1153

1153:                                             ; preds = %1149
  %1154 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %1151, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1155 = atomicrmw add i32* %1154, i32 -1 acq_rel
  %1156 = icmp eq i32 %1155, 1
  br i1 %1156, label %1157, label %1163

1157:                                             ; preds = %1153
  %1158 = bitcast %class.SkMaskFilter* %1151 to %class.SkRefCntBase*
  %1159 = bitcast %class.SkMaskFilter* %1151 to void (%class.SkRefCntBase*)***
  %1160 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %1159, align 8
  %1161 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1160, i64 2
  %1162 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %1161, align 8
  call void %1162(%class.SkRefCntBase* nonnull %1158) #14
  br label %1163

1163:                                             ; preds = %1149, %1153, %1157
  %1164 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %25, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %1164) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %114) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #14
  br label %1165

1165:                                             ; preds = %102, %103, %1163, %4, %52, %48, %98
  ret void
}

declare %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont*) local_unnamed_addr #2

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare %struct.SkAdvancedTypefaceMetrics* @_ZN9SkPDFFont10GetMetricsEPK10SkTypefaceP13SkPDFDocument(%class.SkTypeface*, %class.SkPDFDocument*) local_unnamed_addr #2

declare zeroext i8 @_ZN9SkPDFFont8FontTypeERK25SkAdvancedTypefaceMetrics(%struct.SkAdvancedTypefaceMetrics* dereferenceable(48)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.112"* @_ZN9SkPDFFont13GetUnicodeMapEPK10SkTypefaceP13SkPDFDocument(%class.SkTypeface*, %class.SkPDFDocument*) local_unnamed_addr #2

declare void @_ZN13SkClusteratorC1ERK10SkGlyphRun(%class.SkClusterator*, %class.SkGlyphRun* dereferenceable(96)) unnamed_addr #2

declare void @_ZN12SkStrikeSpec13MakePDFVectorERK10SkTypefacePi(%class.SkStrikeSpec* sret, %class.SkTypeface* dereferenceable(48), i32*) local_unnamed_addr #2

declare i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface*) local_unnamed_addr #2

declare void @_ZN26SkBulkGlyphMetricsAndPathsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndPaths*, %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #2

declare { %class.SkGlyph**, i64 } @_ZN26SkBulkGlyphMetricsAndPaths6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetricsAndPaths*, i16*, i64) local_unnamed_addr #2

declare void @_ZN13SkClusterator4nextEv(%"struct.SkClusterator::Cluster"* sret, %class.SkClusterator*) local_unnamed_addr #2

declare i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8**, i8*) local_unnamed_addr #2

declare %class.SkPDFFont* @_ZN9SkPDFFont15GetFontResourceEP13SkPDFDocumentPK7SkGlyphP10SkTypeface(%class.SkPDFDocument*, %class.SkGlyph*, %class.SkTypeface*) local_unnamed_addr #2

declare void @_Z22SkPDFWriteResourceNameP9SkWStream17SkPDFResourceTypei(%class.SkWStream*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkPDFDevice*, %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkGlyphRun*, %class.SkGlyphRun** %4, align 8
  %6 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %5, i64 %7
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 3
  %12 = bitcast %struct.SkPoint* %11 to <2 x float>*
  br label %14

13:                                               ; preds = %14, %3
  ret void

14:                                               ; preds = %10, %14
  %15 = phi %class.SkGlyphRun* [ %5, %10 ], [ %17, %14 ]
  %16 = load <2 x float>, <2 x float>* %12, align 8
  tail call void @_ZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaint(%class.SkPDFDevice* %0, %class.SkGlyphRun* dereferenceable(96) %15, <2 x float> %16, %class.SkPaint* dereferenceable(72) %2)
  %17 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %15, i64 1
  %18 = icmp eq %class.SkGlyphRun* %17, %8
  br i1 %18, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkPDFDevice*, %class.SkVertices* nocapture readnone, i32, %class.SkPaint* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %7 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %8 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = shl nuw i64 %13, 32
  %15 = zext i32 %10 to i64
  %16 = or i64 %14, %15
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %16, i64* %18, align 8
  %19 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %7, %struct.SkIRect* nonnull dereferenceable(16) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice15drawFormXObjectE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice*, i32, %class.SkDynamicMemoryWStream*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %9 = load %class.SkPDFDocument*, %class.SkPDFDocument** %8, align 8
  %10 = tail call i32 @_ZN13SkPDFDocument21createMarkIdForNodeIdEi(%class.SkPDFDocument* %9, i32 %5) #14
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %24, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %2, i64 0, i32 0
  %14 = bitcast %class.SkDynamicMemoryWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %15 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %15, i64 2
  %17 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.SkWStream* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11) #14
  %19 = tail call zeroext i1 @_ZN9SkWStream14writeDecAsTextEi(%class.SkWStream* %13, i32 %10) #14
  %20 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %14, align 8
  %21 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %20, i64 2
  %22 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %21, align 8
  %23 = tail call zeroext i1 %22(%class.SkWStream* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #14
  br label %24

24:                                               ; preds = %3, %7, %12
  %25 = phi i32 [ -1, %3 ], [ -1, %7 ], [ %10, %12 ]
  %26 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %2, i64 0, i32 0
  %27 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3
  %28 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %27, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = shl nsw i32 %29, 2
  %31 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = mul nsw i32 %32, 3
  %34 = icmp slt i32 %30, %33
  br i1 %34, label %41, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %27, i64 0, i32 0
  %37 = icmp sgt i32 %32, 0
  %38 = shl nsw i32 %32, 1
  %39 = select i1 %37, i32 %38, i32 4
  tail call void @_ZN12SkTHashTableI22SkPDFIndirectReferenceS0_N10SkTHashSetIS0_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable* %36, i32 %39) #14
  %40 = load i32, i32* %31, align 4
  br label %41

41:                                               ; preds = %24, %35
  %42 = phi i32 [ %32, %24 ], [ %40, %35 ]
  %43 = lshr i32 %1, 16
  %44 = xor i32 %43, %1
  %45 = mul i32 %44, -2048144789
  %46 = lshr i32 %45, 13
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, -1028477387
  %49 = lshr i32 %48, 16
  %50 = xor i32 %49, %48
  %51 = icmp eq i32 %50, 0
  %52 = select i1 %51, i32 1, i32 %50
  %53 = icmp sgt i32 %42, 0
  br i1 %53, label %54, label %87

54:                                               ; preds = %41
  %55 = add nsw i32 %42, -1
  %56 = and i32 %55, %52
  %57 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %57, align 8
  br label %59

59:                                               ; preds = %80, %54
  %60 = phi i32 [ 0, %54 ], [ %85, %80 ]
  %61 = phi i32 [ %56, %54 ], [ %84, %80 ]
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %58, i64 %62
  %64 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %58, i64 %62, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %58, i64 %62, i32 1
  %69 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %63, i64 0, i32 0, i32 0
  store i32 %1, i32* %69, align 4
  store i32 %52, i32* %68, align 4
  %70 = load i32, i32* %28, align 8
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %28, align 8
  br label %87

72:                                               ; preds = %59
  %73 = icmp eq i32 %52, %65
  br i1 %73, label %74, label %80

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %63, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, %1
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %63, i64 0, i32 0, i32 0
  store i32 %1, i32* %79, align 4
  br label %87

80:                                               ; preds = %74, %72
  %81 = add nsw i32 %61, -1
  %82 = icmp slt i32 %61, 1
  %83 = select i1 %82, i32 %42, i32 0
  %84 = add nsw i32 %81, %83
  %85 = add nuw nsw i32 %60, 1
  %86 = icmp eq i32 %85, %42
  br i1 %86, label %87, label %59

87:                                               ; preds = %80, %41, %67, %78
  tail call void @_Z22SkPDFWriteResourceNameP9SkWStream17SkPDFResourceTypei(%class.SkWStream* %26, i32 2, i32 %1) #14
  %88 = bitcast %class.SkDynamicMemoryWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %89 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %88, align 8
  %90 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %89, i64 2
  %91 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %90, align 8
  %92 = tail call zeroext i1 %91(%class.SkWStream* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #14
  %93 = icmp eq i32 %25, -1
  br i1 %93, label %99, label %94

94:                                               ; preds = %87
  %95 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %88, align 8
  %96 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %95, i64 2
  %97 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %96, align 8
  %98 = tail call zeroext i1 %97(%class.SkWStream* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 4) #14
  br label %99

99:                                               ; preds = %87, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.324* noalias sret, %class.SkPDFDevice* nocapture readnone, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 align 2 {
  tail call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.324* sret %0, %struct.SkImageInfo* dereferenceable(24) %2, i64 0, %class.SkSurfaceProps* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPDFDict* @_ZN11SkPDFDevice16makeResourceDictEv(%class.SkPDFDevice*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.182", align 8
  %3 = alloca %"class.std::__1::vector.182", align 8
  %4 = alloca %"class.std::__1::vector.182", align 8
  %5 = alloca %"class.std::__1::vector.182", align 8
  %6 = bitcast %"class.std::__1::vector.182"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2
  call fastcc void @_ZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashE(%"class.std::__1::vector.182"* nonnull sret %2, %class.SkTHashSet* dereferenceable(16) %7)
  %8 = bitcast %"class.std::__1::vector.182"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4
  call fastcc void @_ZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashE(%"class.std::__1::vector.182"* nonnull sret %3, %class.SkTHashSet* dereferenceable(16) %9)
  %10 = bitcast %"class.std::__1::vector.182"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 3
  call fastcc void @_ZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashE(%"class.std::__1::vector.182"* nonnull sret %4, %class.SkTHashSet* dereferenceable(16) %11)
  %12 = bitcast %"class.std::__1::vector.182"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #14
  %13 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 5
  call fastcc void @_ZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashE(%"class.std::__1::vector.182"* nonnull sret %5, %class.SkTHashSet* dereferenceable(16) %13)
  %14 = call %class.SkPDFDict* @_Z21SkPDFMakeResourceDictRKNSt3__16vectorI22SkPDFIndirectReferenceNS_9allocatorIS1_EEEES6_S6_S6_(%"class.std::__1::vector.182"* nonnull dereferenceable(24) %2, %"class.std::__1::vector.182"* nonnull dereferenceable(24) %3, %"class.std::__1::vector.182"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.182"* nonnull dereferenceable(24) %5) #14
  %15 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %5, i64 0, i32 0, i32 0
  %16 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %15, align 8
  %17 = icmp eq %struct.SkPDFIndirectReference* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %1
  %19 = ptrtoint %struct.SkPDFIndirectReference* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %5, i64 0, i32 0, i32 1
  %21 = bitcast %struct.SkPDFIndirectReference** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %struct.SkPDFIndirectReference* %16 to i8*
  call void @_ZdlPv(i8* %22) #15
  br label %23

23:                                               ; preds = %1, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #14
  %24 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %4, i64 0, i32 0, i32 0
  %25 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %24, align 8
  %26 = icmp eq %struct.SkPDFIndirectReference* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %struct.SkPDFIndirectReference* %25 to i64
  %29 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %4, i64 0, i32 0, i32 1
  %30 = bitcast %struct.SkPDFIndirectReference** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %struct.SkPDFIndirectReference* %25 to i8*
  call void @_ZdlPv(i8* %31) #15
  br label %32

32:                                               ; preds = %23, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  %33 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %3, i64 0, i32 0, i32 0
  %34 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %33, align 8
  %35 = icmp eq %struct.SkPDFIndirectReference* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %struct.SkPDFIndirectReference* %34 to i64
  %38 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %3, i64 0, i32 0, i32 1
  %39 = bitcast %struct.SkPDFIndirectReference** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %struct.SkPDFIndirectReference* %34 to i8*
  call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %32, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  %42 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %2, i64 0, i32 0, i32 0
  %43 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %42, align 8
  %44 = icmp eq %struct.SkPDFIndirectReference* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint %struct.SkPDFIndirectReference* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %2, i64 0, i32 0, i32 1
  %48 = bitcast %struct.SkPDFIndirectReference** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast %struct.SkPDFIndirectReference* %43 to i8*
  call void @_ZdlPv(i8* %49) #15
  br label %50

50:                                               ; preds = %41, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %class.SkPDFDict* %14
}

declare %class.SkPDFDict* @_Z21SkPDFMakeResourceDictRKNSt3__16vectorI22SkPDFIndirectReferenceNS_9allocatorIS1_EEEES6_S6_S6_(%"class.std::__1::vector.182"* dereferenceable(24), %"class.std::__1::vector.182"* dereferenceable(24), %"class.std::__1::vector.182"* dereferenceable(24), %"class.std::__1::vector.182"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashE(%"class.std::__1::vector.182"* noalias sret, %class.SkTHashSet* dereferenceable(16)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.182"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #14
  %7 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = bitcast %struct.SkPDFIndirectReference** %5 to i64*
  %11 = bitcast %"class.std::__1::vector.182"* %0 to i64*
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %2
  %14 = icmp slt i32 %8, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @abort() #17
  unreachable

16:                                               ; preds = %13
  %17 = bitcast %struct.SkPDFIndirectReference** %4 to i64*
  %18 = shl nsw i64 %9, 2
  %19 = tail call i8* @_Znwm(i64 %18) #15
  %20 = bitcast i8* %19 to %struct.SkPDFIndirectReference*
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %20, i64 %9
  %23 = ptrtoint %struct.SkPDFIndirectReference* %22 to i64
  %24 = ptrtoint i8* %19 to i64
  store i64 %24, i64* %11, align 8
  store i64 %21, i64* %17, align 8
  store i64 %23, i64* %10, align 8
  %25 = bitcast i8* %19 to %struct.SkPDFIndirectReference*
  br label %26

26:                                               ; preds = %16, %2
  %27 = phi %struct.SkPDFIndirectReference* [ null, %2 ], [ %20, %16 ]
  %28 = phi %struct.SkPDFIndirectReference* [ null, %2 ], [ %25, %16 ]
  %29 = phi i64 [ 0, %2 ], [ %21, %16 ]
  %30 = phi %struct.SkPDFIndirectReference* [ null, %2 ], [ %22, %16 ]
  %31 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %1, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %56

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %35, align 8
  %37 = sext i32 %32 to i64
  br label %38

38:                                               ; preds = %43, %34
  %39 = phi i64 [ 0, %34 ], [ %44, %43 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %36, i64 %39, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = add nuw nsw i64 %39, 1
  %45 = icmp eq i64 %44, %37
  br i1 %45, label %56, label %38

46:                                               ; preds = %38
  %47 = trunc i64 %39 to i32
  %48 = icmp eq i32 %32, %47
  br i1 %48, label %56, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %struct.SkPDFIndirectReference** %4 to i64*
  %52 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %50, align 8
  br label %59

53:                                               ; preds = %133
  %54 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %3, align 8
  %55 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %4, align 8
  br label %56

56:                                               ; preds = %43, %26, %53, %46
  %57 = phi %struct.SkPDFIndirectReference* [ %55, %53 ], [ %27, %46 ], [ %27, %26 ], [ %27, %43 ]
  %58 = phi %struct.SkPDFIndirectReference* [ %54, %53 ], [ %28, %46 ], [ %28, %26 ], [ %28, %43 ]
  tail call fastcc void @"_ZNSt3__16__sortIRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEvT0_SA_T_"(%struct.SkPDFIndirectReference* %58, %struct.SkPDFIndirectReference* %57) #14
  ret void

59:                                               ; preds = %136, %49
  %60 = phi i64 [ %29, %49 ], [ %139, %136 ]
  %61 = phi %struct.SkPDFIndirectReference* [ %30, %49 ], [ %138, %136 ]
  %62 = phi %struct.SkPDFIndirectReference* [ %27, %49 ], [ %137, %136 ]
  %63 = phi %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* [ %52, %49 ], [ %122, %136 ]
  %64 = phi i32 [ %47, %49 ], [ %134, %136 ]
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %63, i64 %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq %struct.SkPDFIndirectReference* %62, %61
  br i1 %68, label %73, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %62, i64 0, i32 0
  store i32 %67, i32* %70, align 4
  %71 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %62, i64 1
  %72 = ptrtoint %struct.SkPDFIndirectReference* %71 to i64
  store i64 %72, i64* %51, align 8
  br label %119

73:                                               ; preds = %59
  %74 = ptrtoint %struct.SkPDFIndirectReference* %61 to i64
  %75 = load i64, i64* %11, align 8
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 2
  %78 = add nsw i64 %77, 1
  %79 = icmp ugt i64 %78, 4611686018427387903
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = bitcast %"class.std::__1::vector.182"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %81) #17
  unreachable

82:                                               ; preds = %73
  %83 = icmp ult i64 %77, 2305843009213693951
  br i1 %83, label %84, label %92

84:                                               ; preds = %82
  %85 = ashr exact i64 %76, 1
  %86 = icmp ult i64 %85, %78
  %87 = select i1 %86, i64 %78, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 4611686018427387903
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call void @abort() #17
  unreachable

92:                                               ; preds = %89, %82
  %93 = phi i64 [ %87, %89 ], [ 4611686018427387903, %82 ]
  %94 = shl i64 %93, 2
  %95 = tail call i8* @_Znwm(i64 %94) #15
  %96 = bitcast i8* %95 to %struct.SkPDFIndirectReference*
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi %struct.SkPDFIndirectReference* [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 %77
  %101 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 %98
  %102 = ptrtoint %struct.SkPDFIndirectReference* %101 to i64
  %103 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %100, i64 0, i32 0
  store i32 %67, i32* %103, align 4
  %104 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %100, i64 1
  %105 = ptrtoint %struct.SkPDFIndirectReference* %104 to i64
  %106 = sub i64 %60, %75
  %107 = ashr exact i64 %106, 2
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %100, i64 %108
  %110 = ptrtoint %struct.SkPDFIndirectReference* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %97
  %113 = bitcast %struct.SkPDFIndirectReference* %109 to i8*
  %114 = inttoptr i64 %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 %106, i1 false) #14
  br label %115

115:                                              ; preds = %112, %97
  store i64 %110, i64* %11, align 8
  store i64 %105, i64* %51, align 8
  store i64 %102, i64* %10, align 8
  %116 = icmp eq i64 %75, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %115
  %118 = inttoptr i64 %75 to i8*
  tail call void @_ZdlPv(i8* %118) #15
  br label %119

119:                                              ; preds = %69, %115, %117
  %120 = load i32, i32* %31, align 4
  %121 = sext i32 %120 to i64
  %122 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %50, align 8
  br label %123

123:                                              ; preds = %127, %119
  %124 = phi i64 [ %125, %127 ], [ %65, %119 ]
  %125 = add nsw i64 %124, 1
  %126 = icmp slt i64 %125, %121
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %122, i64 %125, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %123, label %131

131:                                              ; preds = %127
  %132 = trunc i64 %125 to i32
  br label %133

133:                                              ; preds = %123, %131
  %134 = phi i32 [ %132, %131 ], [ %120, %123 ]
  %135 = icmp eq i32 %134, %32
  br i1 %135, label %53, label %136

136:                                              ; preds = %133
  %137 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %4, align 8
  %138 = load %struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference** %5, align 8
  %139 = ptrtoint %struct.SkPDFIndirectReference* %137 to i64
  br label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStreamAsset* @_ZN11SkPDFDevice7contentEv(%class.SkPDFDevice*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkMatrix, align 8
  %3 = alloca %class.SkMatrix, align 8
  %4 = alloca %class.SkMatrix, align 8
  %5 = alloca %class.SkDynamicMemoryWStream, align 8
  %6 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10
  %7 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 2
  %8 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %7, align 8
  %9 = icmp eq %class.SkDynamicMemoryWStream* %8, null
  br i1 %9, label %44, label %10

10:                                               ; preds = %1
  tail call void @_ZN22SkPDFGraphicStackState10drainStackEv(%struct.SkPDFGraphicStackState* %6) #14
  %11 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11)
  %12 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12)
  %13 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13)
  %14 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %15 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %15, i64 40, i1 false)
  %16 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %17 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 4 %17, i64 40, i1 false)
  %18 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %19 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 %19, i64 40, i1 false)
  %20 = bitcast %struct.SkPDFGraphicStackState* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %11, i64 40, i1 false)
  %21 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 1
  store i32 2, i32* %21, align 8
  %22 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 2, i32 0
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 3
  store float 1.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 4
  store i32 -1, i32* %25, align 8
  %26 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 5
  store i32 -1, i32* %26, align 4
  %27 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1
  %28 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %12, i64 40, i1 false)
  %29 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 1
  store i32 2, i32* %29, align 8
  %30 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 0
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %31, align 4
  %32 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 3
  store float 1.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 4
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 5
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2
  %36 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %13, i64 40, i1 false)
  %37 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 1
  store i32 2, i32* %37, align 8
  %38 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 2, i32 0
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %39, align 4
  %40 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 3
  store float 1.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 4
  store i32 -1, i32* %41, align 8
  %42 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 5
  store i32 -1, i32* %42, align 4
  %43 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 1
  store i32 0, i32* %43, align 8
  store %class.SkDynamicMemoryWStream* null, %class.SkDynamicMemoryWStream** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13)
  br label %44

44:                                               ; preds = %1, %10
  %45 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  %46 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %45) #14
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = tail call i8* @_Znwm(i64 24) #15
  %50 = bitcast i8* %49 to %class.SkMemoryStream*
  tail call void @_ZN14SkMemoryStreamC1Ev(%class.SkMemoryStream* nonnull %50) #14
  %51 = ptrtoint i8* %49 to i64
  br label %96

52:                                               ; preds = %44
  %53 = bitcast %class.SkDynamicMemoryWStream* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #14
  %54 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %5, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %56 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #14
  %57 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1
  %58 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = trunc i32 %59 to i8
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %52
  %63 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %57) #14
  %64 = zext i8 %63 to i32
  store i32 %64, i32* %58, align 4
  br label %65

65:                                               ; preds = %52, %62
  %66 = phi i32 [ %64, %62 ], [ %59, %52 ]
  %67 = and i32 %66, 15
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %5, i64 0, i32 0
  call void @_ZN10SkPDFUtils15AppendTransformERK8SkMatrixP9SkWStream(%class.SkMatrix* dereferenceable(40) %57, %class.SkWStream* nonnull %70) #14
  br label %71

71:                                               ; preds = %65, %69
  %72 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 9
  %73 = load i8, i8* %72, align 8, !range !97
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %5, i64 0, i32 0
  %77 = bitcast %class.SkDynamicMemoryWStream* %5 to i1 (%class.SkWStream*, i8*, i64)***
  %78 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %77, align 8
  %79 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %78, i64 2
  %80 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %79, align 8
  %81 = call zeroext i1 %80(%class.SkWStream* nonnull %76, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #14
  br label %82

82:                                               ; preds = %71, %75
  %83 = call zeroext i1 @_ZN22SkDynamicMemoryWStream15writeToAndResetEPS_(%class.SkDynamicMemoryWStream* %45, %class.SkDynamicMemoryWStream* nonnull %5) #14
  %84 = load i8, i8* %72, align 8, !range !97
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %5, i64 0, i32 0
  %88 = bitcast %class.SkDynamicMemoryWStream* %5 to i1 (%class.SkWStream*, i8*, i64)***
  %89 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %88, align 8
  %90 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %89, i64 2
  %91 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %90, align 8
  %92 = call zeroext i1 %91(%class.SkWStream* nonnull %87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2) #14
  br label %93

93:                                               ; preds = %82, %86
  store i8 0, i8* %72, align 8
  %94 = call %class.SkStreamAsset* @_ZN22SkDynamicMemoryWStream14detachAsStreamEv(%class.SkDynamicMemoryWStream* nonnull %5) #14
  %95 = ptrtoint %class.SkStreamAsset* %94 to i64
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #14
  br label %96

96:                                               ; preds = %93, %48
  %97 = phi i64 [ %51, %48 ], [ %95, %93 ]
  %98 = inttoptr i64 %97 to %class.SkStreamAsset*
  ret %class.SkStreamAsset* %98
}

declare void @_ZN22SkPDFGraphicStackState10drainStackEv(%struct.SkPDFGraphicStackState*) local_unnamed_addr #2

declare i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream*) unnamed_addr #2

declare void @_ZN10SkPDFUtils15AppendTransformERK8SkMatrixP9SkWStream(%class.SkMatrix* dereferenceable(40), %class.SkWStream*) local_unnamed_addr #2

declare zeroext i1 @_ZN22SkDynamicMemoryWStream15writeToAndResetEPS_(%class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream*) local_unnamed_addr #2

declare %class.SkStreamAsset* @_ZN22SkDynamicMemoryWStream14detachAsStreamEv(%class.SkDynamicMemoryWStream*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare i32 @_Z20SkPDFMakeFormXObjectP13SkPDFDocumentNSt3__110unique_ptrI13SkStreamAssetNS1_14default_deleteIS3_EEEENS2_I10SkPDFArrayNS4_IS7_EEEENS2_I9SkPDFDictNS4_ISA_EEEERK8SkMatrixPKc(%class.SkPDFDocument*, %class.SkStreamAsset*, %class.SkPDFArray*, %class.SkPDFDict*, %class.SkMatrix* dereferenceable(40), i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceEb(%class.SkPDFDevice*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  %11 = tail call i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice* %0, i64 0, i64 %10, i1 zeroext %1)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice23drawFormXObjectWithMaskE22SkPDFIndirectReferenceS0_11SkBlendModeb(%class.SkPDFDevice*, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPDFDict, align 8
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.ScopedContentEntry, align 8
  %9 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #14
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = shl i32 %3, 10
  %13 = and i32 %12, 261120
  %14 = and i32 %11, -261121
  %15 = or i32 %14, %13
  store i32 %15, i32* %10, align 8
  %16 = bitcast %class.ScopedContentEntry* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false)
  %17 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %8, %class.SkPDFDevice* %0, %class.SkClipStack* null, %class.SkMatrix* dereferenceable(40) %17, %class.SkPaint* nonnull dereferenceable(72) %7, float 0.000000e+00)
  %18 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %8, i64 0, i32 1
  %19 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %18, align 8
  %20 = icmp eq %class.SkDynamicMemoryWStream* %19, null
  br i1 %20, label %60, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %23 = load %class.SkPDFDocument*, %class.SkPDFDocument** %22, align 8
  %24 = call i32 @_ZN17SkPDFGraphicState20GetSMaskGraphicStateE22SkPDFIndirectReferencebNS_14SkPDFSMaskModeEP13SkPDFDocument(i32 %2, i1 zeroext %4, i32 0, %class.SkPDFDocument* %23) #14
  %25 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %18, align 8
  call void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %24, %class.SkDynamicMemoryWStream* %25)
  %26 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %18, align 8
  call void @_ZN11SkPDFDevice15drawFormXObjectE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %1, %class.SkDynamicMemoryWStream* %26)
  %27 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %18, align 8
  %28 = load %class.SkPDFDocument*, %class.SkPDFDocument** %22, align 8
  %29 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %28, i64 0, i32 13, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %40

32:                                               ; preds = %21
  %33 = bitcast %class.SkPDFDict* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false) #14
  call void @_ZN9SkPDFDictC1EPKc(%class.SkPDFDict* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #14
  call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #14
  %34 = load %class.SkPDFDocument*, %class.SkPDFDocument** %22, align 8
  %35 = getelementptr inbounds %class.SkPDFDict, %class.SkPDFDict* %6, i64 0, i32 0
  %36 = getelementptr inbounds %class.SkPDFDocument, %class.SkPDFDocument* %34, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 seq_cst
  %38 = call i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument* %34, %class.SkPDFObject* nonnull dereferenceable(8) %35, i32 %37) #14
  store i32 %38, i32* %29, align 4
  call void @_ZN9SkPDFDictD1Ev(%class.SkPDFDict* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #14
  %39 = load i32, i32* %29, align 4
  br label %40

40:                                               ; preds = %32, %21
  %41 = phi i32 [ %30, %21 ], [ %39, %32 ]
  call void @_ZN11SkPDFDevice15setGraphicStateE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %41, %class.SkDynamicMemoryWStream* %27) #14
  %42 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %18, align 8
  %43 = icmp eq %class.SkDynamicMemoryWStream* %42, null
  br i1 %43, label %60, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %8, i64 0, i32 4
  %46 = getelementptr inbounds %class.SkPath, %class.SkPath* %45, i64 0, i32 0, i32 0
  %47 = load %class.SkPathRef*, %class.SkPathRef** %46, align 8
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %47, i64 0, i32 4, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, %class.SkPath* null, %class.SkPath* %45
  %52 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %8, i64 0, i32 0
  %53 = load %class.SkPDFDevice*, %class.SkPDFDevice** %52, align 8
  %54 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %8, i64 0, i32 5
  %55 = load %class.SkClipStack*, %class.SkClipStack** %54, align 8
  %56 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %8, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %8, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %53, %class.SkClipStack* %55, i32 %57, i32 %59, %class.SkPath* %51) #14
  br label %60

60:                                               ; preds = %5, %40, %44
  %61 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %8, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %61) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkDynamicMemoryWStream* @_ZN11SkPDFDevice17setUpContentEntryEPK11SkClipStackRK8SkMatrixRK7SkPaintfP22SkPDFIndirectReference(%class.SkPDFDevice*, %class.SkClipStack*, %class.SkMatrix* nocapture readonly dereferenceable(40), %class.SkPaint* dereferenceable(72), float, %struct.SkPDFIndirectReference* nocapture) local_unnamed_addr #6 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"struct.SkShader::GradientInfo", align 8
  %10 = alloca i32, align 4
  %11 = alloca %class.SkMatrix, align 4
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = alloca <4 x i32>, align 16
  %14 = bitcast <4 x i32>* %13 to %struct.SkIRect*
  %15 = alloca %class.SkPaint, align 8
  %16 = alloca %class.SkMatrix, align 8
  %17 = alloca %class.SkMatrix, align 8
  %18 = alloca %class.SkMatrix, align 8
  %19 = alloca %class.SkMatrix, align 8
  %20 = alloca %class.SkMatrix, align 8
  %21 = alloca %class.SkMatrix, align 8
  %22 = alloca %"struct.SkPDFGraphicStackState::Entry", align 4
  %23 = alloca { i64, i64 }, align 8
  %24 = bitcast { i64, i64 }* %23 to %struct.SkIRect*
  %25 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 8, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = lshr i32 %26, 10
  %28 = and i32 %27, 255
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %463, label %30

30:                                               ; preds = %6
  %31 = tail call i8* @_ZN10SkPDFUtils13BlendModeNameE11SkBlendMode(i32 %28) #14
  %32 = icmp eq i8* %31, null
  %33 = icmp ne i32 %28, 4
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %56

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  %37 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %36) #14
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 8
  %41 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %40) #14
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %54, label %43

43:                                               ; preds = %35, %39
  %44 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %45 to i64
  %51 = or i64 %49, %50
  %52 = tail call i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice* %0, i64 0, i64 %51, i1 zeroext false) #14
  %53 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %5, i64 0, i32 0
  store i32 %52, i32* %53, align 4
  br label %56

54:                                               ; preds = %39
  %55 = trunc i32 %27 to i8
  switch i8 %55, label %463 [
    i8 7, label %56
    i8 1, label %56
  ]

56:                                               ; preds = %54, %54, %43, %30
  %57 = tail call i8* @_ZN10SkPDFUtils13BlendModeNameE11SkBlendMode(i32 %28) #14
  %58 = icmp eq i8* %57, null
  %59 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10
  br i1 %58, label %110, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 2
  %62 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %61, align 8
  %63 = icmp eq %class.SkDynamicMemoryWStream* %62, null
  br i1 %63, label %64, label %150

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  %66 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %65) #14
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %65, i64 0, i32 0
  %70 = bitcast %class.SkDynamicMemoryWStream* %65 to i1 (%class.SkWStream*, i8*, i64)***
  %71 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %70, align 8
  %72 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %71, i64 2
  %73 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %72, align 8
  %74 = tail call zeroext i1 %73(%class.SkWStream* %69, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #14
  %75 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 9
  store i8 1, i8* %75, align 8
  br label %76

76:                                               ; preds = %64, %68
  %77 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77)
  %78 = bitcast %class.SkMatrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78)
  %79 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79)
  %80 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %81 = bitcast %class.SkMatrix* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 4 %81, i64 40, i1 false)
  %82 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %83 = bitcast %class.SkMatrix* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 4 %83, i64 40, i1 false)
  %84 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %85 = bitcast %class.SkMatrix* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %79, i8* align 4 %85, i64 40, i1 false)
  %86 = bitcast %struct.SkPDFGraphicStackState* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %77, i64 40, i1 false)
  %87 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 1
  store i32 2, i32* %87, align 8
  %88 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 2, i32 0
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %89, align 4
  %90 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 3
  store float 1.000000e+00, float* %90, align 4
  %91 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 4
  store i32 -1, i32* %91, align 8
  %92 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 5
  store i32 -1, i32* %92, align 4
  %93 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1
  %94 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 8 %78, i64 40, i1 false)
  %95 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 1
  store i32 2, i32* %95, align 8
  %96 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 0
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %97, align 4
  %98 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 3
  store float 1.000000e+00, float* %98, align 4
  %99 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 4
  store i32 -1, i32* %99, align 8
  %100 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 5
  store i32 -1, i32* %100, align 4
  %101 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2
  %102 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %79, i64 40, i1 false)
  %103 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 1
  store i32 2, i32* %103, align 8
  %104 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 2, i32 0
  %105 = bitcast float* %104 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %105, align 4
  %106 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 3
  store float 1.000000e+00, float* %106, align 4
  %107 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 4
  store i32 -1, i32* %107, align 8
  %108 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 5
  store i32 -1, i32* %108, align 4
  %109 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 1
  store i32 0, i32* %109, align 8
  store %class.SkDynamicMemoryWStream* %65, %class.SkDynamicMemoryWStream** %61, align 8
  br label %146

110:                                              ; preds = %56
  tail call void @_ZN22SkPDFGraphicStackState10drainStackEv(%struct.SkPDFGraphicStackState* %59) #14
  %111 = bitcast %class.SkMatrix* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %111)
  %112 = bitcast %class.SkMatrix* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %112)
  %113 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113)
  %114 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 8
  %115 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %116 = bitcast %class.SkMatrix* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %111, i8* align 4 %116, i64 40, i1 false)
  %117 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %118 = bitcast %class.SkMatrix* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 4 %118, i64 40, i1 false)
  %119 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %120 = bitcast %class.SkMatrix* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 4 %120, i64 40, i1 false)
  %121 = bitcast %struct.SkPDFGraphicStackState* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* nonnull align 8 %111, i64 40, i1 false)
  %122 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 1
  store i32 2, i32* %122, align 8
  %123 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 2, i32 0
  %124 = bitcast float* %123 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %124, align 4
  %125 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 3
  store float 1.000000e+00, float* %125, align 4
  %126 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 4
  store i32 -1, i32* %126, align 8
  %127 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 5
  store i32 -1, i32* %127, align 4
  %128 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1
  %129 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* nonnull align 8 %112, i64 40, i1 false)
  %130 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 1
  store i32 2, i32* %130, align 8
  %131 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 0
  %132 = bitcast float* %131 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %132, align 4
  %133 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 3
  store float 1.000000e+00, float* %133, align 4
  %134 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 4
  store i32 -1, i32* %134, align 8
  %135 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 5
  store i32 -1, i32* %135, align 4
  %136 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2
  %137 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 8 %113, i64 40, i1 false)
  %138 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 1
  store i32 2, i32* %138, align 8
  %139 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 2, i32 0
  %140 = bitcast float* %139 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %140, align 4
  %141 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 3
  store float 1.000000e+00, float* %141, align 4
  %142 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 4
  store i32 -1, i32* %142, align 8
  %143 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 5
  store i32 -1, i32* %143, align 4
  %144 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 1
  store i32 0, i32* %144, align 8
  %145 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 2
  store %class.SkDynamicMemoryWStream* %114, %class.SkDynamicMemoryWStream** %145, align 8
  br label %146

146:                                              ; preds = %110, %76
  %147 = phi i8* [ %77, %76 ], [ %111, %110 ]
  %148 = phi i8* [ %78, %76 ], [ %112, %110 ]
  %149 = phi i8* [ %79, %76 ], [ %113, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %148)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %149)
  br label %150

150:                                              ; preds = %146, %60
  %151 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %151) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %151, i8* align 4 bitcast (%"struct.SkPDFGraphicStackState::Entry"* @__const._ZN11SkPDFDevice17setUpContentEntryEPK11SkClipStackRK8SkMatrixRK7SkPaintfP22SkPDFIndirectReference.entry to i8*), i64 72, i1 false)
  %152 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %153 = bitcast %class.SkMatrix* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %151, i8* align 4 %153, i64 40, i1 false) #14
  %154 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 1
  store i32 2, i32* %154, align 4
  %155 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 2, i32 0
  %156 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 2, i32 1
  %157 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 2, i32 2
  %158 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 2, i32 3
  %159 = bitcast float* %155 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %159, align 4
  %160 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 3
  store float 1.000000e+00, float* %160, align 4
  %161 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 4
  store i32 -1, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 5
  store i32 -1, i32* %162, align 4
  %163 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %164 = load %class.SkPDFDocument*, %class.SkPDFDocument** %163, align 8
  %165 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = shl nuw i64 %169, 32
  %171 = zext i32 %166 to i64
  %172 = or i64 %170, %171
  %173 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1
  %174 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4
  %175 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2
  %176 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176)
  %177 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %178 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRGBA4f*
  %179 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %180 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 0, i64* %180, align 8
  %181 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %172, i64* %181, align 8
  %182 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %151, i8* align 4 %182, i64 40, i1 false) #14
  %183 = icmp ne %class.SkClipStack* %1, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %150
  %185 = tail call i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack* nonnull %1) #14
  br label %186

186:                                              ; preds = %184, %150
  %187 = phi i32 [ %185, %184 ], [ 2, %150 ]
  store i32 %187, i32* %154, align 4
  %188 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #14
  %189 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0, i64 0
  %190 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %178, i64 0, i32 1
  %191 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1, i64 0
  %192 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %178, i64 0, i32 3
  %193 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 5
  %194 = bitcast %struct.SkRGBA4f* %193 to <2 x float>*
  %195 = bitcast %struct.SkRGBA4f* %193 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 5, i32 2
  %198 = bitcast float* %197 to <2 x float>*
  %199 = bitcast float* %197 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %202 = bitcast { <2 x float>, <2 x float> }* %8 to i64*
  store i64 %196, i64* %202, align 8
  %203 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %204 = bitcast <2 x float>* %203 to i64*
  store i64 %200, i64* %204, align 8
  %205 = trunc i64 %196 to i32
  %206 = lshr i64 %196, 32
  %207 = trunc i64 %206 to i32
  %208 = trunc i64 %200 to i32
  %209 = bitcast float* %155 to i32*
  store i32 %205, i32* %209, align 4
  %210 = bitcast float* %156 to i32*
  store i32 %207, i32* %210, align 4
  %211 = bitcast float* %157 to i32*
  store i32 %208, i32* %211, align 4
  store float 1.000000e+00, float* %158, align 4
  store i32 -1, i32* %161, align 4
  %212 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 1, i32 0
  %213 = load %class.SkShader*, %class.SkShader** %212, align 8
  %214 = icmp eq %class.SkShader* %213, null
  %215 = lshr i64 %200, 32
  %216 = trunc i64 %215 to i32
  %217 = bitcast i32 %216 to float
  br i1 %214, label %366, label %218

218:                                              ; preds = %186
  %219 = bitcast %class.SkShader* %213 to i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)***
  %220 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)**, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*** %219, align 8
  %221 = getelementptr inbounds i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %220, i64 8
  %222 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %221, align 8
  %223 = tail call i32 %222(%class.SkShader* nonnull %213, %"struct.SkShader::GradientInfo"* null) #14
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %246

225:                                              ; preds = %218
  %226 = bitcast %"struct.SkShader::GradientInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %226) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %226, i8* align 8 bitcast ({ i32, [4 x i8], i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }* @__const._ZL39populate_graphic_state_entry_from_paintP13SkPDFDocumentRK8SkMatrixPK11SkClipStack7SkIRectRK7SkPaintS3_fPN22SkPDFGraphicStackState5EntryEP10SkTHashSetI22SkPDFIndirectReference10SkGoodHashESI_.gradientInfo to i8*), i64 56, i1 false) #14
  %227 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %227) #14
  store i32 -16777216, i32* %10, align 4
  %228 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %9, i64 0, i32 1
  store i32* %10, i32** %228, align 8
  %229 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %9, i64 0, i32 2
  store float* null, float** %229, align 8
  %230 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %9, i64 0, i32 0
  store i32 1, i32* %230, align 8
  %231 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)**, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*** %219, align 8
  %232 = getelementptr inbounds i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %231, i64 8
  %233 = load i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)*, i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)** %232, align 8
  %234 = call i32 %233(%class.SkShader* nonnull %213, %"struct.SkShader::GradientInfo"* nonnull %9) #14
  %235 = load i32, i32* %10, align 4
  %236 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %235) #14
  %237 = extractvalue { <2 x float>, <2 x float> } %236, 0
  %238 = extractvalue { <2 x float>, <2 x float> } %236, 1
  store <2 x float> %237, <2 x float>* %201, align 8
  %239 = bitcast float* %191 to <2 x float>*
  store <2 x float> %238, <2 x float>* %239, align 8
  %240 = bitcast <2 x float> %237 to <2 x i32>
  %241 = extractelement <2 x i32> %240, i32 0
  %242 = extractelement <2 x i32> %240, i32 1
  %243 = bitcast <2 x float> %238 to <2 x i32>
  %244 = extractelement <2 x i32> %243, i32 0
  store i32 %241, i32* %209, align 4
  store i32 %242, i32* %210, align 4
  store i32 %244, i32* %211, align 4
  store float 1.000000e+00, float* %158, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %227) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %226) #14
  %245 = extractelement <2 x float> %238, i32 1
  br label %366

246:                                              ; preds = %218
  %247 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %247) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %247, i8* align 4 %182, i64 40, i1 false) #14
  %248 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %11, %class.SkMatrix* dereferenceable(40) %173) #14
  %249 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #14
  %250 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0, i64 0
  %251 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %179, i64 0, i32 1
  %252 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1, i64 0
  %253 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %179, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 -1, i64 16, i1 false) #14
  br i1 %183, label %254, label %258

254:                                              ; preds = %246
  %255 = call { <2 x float>, <2 x float> } @_ZNK11SkClipStack6boundsERK7SkIRect(%class.SkClipStack* nonnull %1, %struct.SkIRect* nonnull dereferenceable(16) %177) #14
  %256 = extractvalue { <2 x float>, <2 x float> } %255, 0
  %257 = extractvalue { <2 x float>, <2 x float> } %255, 1
  br label %275

258:                                              ; preds = %246
  %259 = bitcast { i64, i64 }* %7 to i32*
  %260 = load i32, i32* %259, align 8
  %261 = sitofp i32 %260 to float
  %262 = insertelement <2 x float> undef, float %261, i32 0
  %263 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %177, i64 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = sitofp i32 %264 to float
  %266 = insertelement <2 x float> %262, float %265, i32 1
  %267 = bitcast i64* %181 to i32*
  %268 = load i32, i32* %267, align 8
  %269 = sitofp i32 %268 to float
  %270 = insertelement <2 x float> undef, float %269, i32 0
  %271 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %177, i64 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = sitofp i32 %272 to float
  %274 = insertelement <2 x float> %270, float %273, i32 1
  br label %275

275:                                              ; preds = %258, %254
  %276 = phi <2 x float> [ %266, %258 ], [ %256, %254 ]
  %277 = phi <2 x float> [ %274, %258 ], [ %257, %254 ]
  %278 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %276, <2 x float>* %278, align 8
  %279 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %277, <2 x float>* %279, align 8
  %280 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %173, %struct.SkRect* nonnull %179, %struct.SkRect* nonnull dereferenceable(16) %179, i32 1) #14
  %281 = bitcast <4 x i32>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %281) #14
  %282 = load float, float* %250, align 8
  %283 = call float @llvm.floor.f32(float %282) #14
  %284 = load float, float* %251, align 4
  %285 = call float @llvm.floor.f32(float %284) #14
  %286 = load float, float* %252, align 8
  %287 = call float @llvm.ceil.f32(float %286) #14
  %288 = load float, float* %253, align 4
  %289 = call float @llvm.ceil.f32(float %288) #14
  %290 = insertelement <4 x float> undef, float %283, i32 0
  %291 = insertelement <4 x float> %290, float %285, i32 1
  %292 = insertelement <4 x float> %291, float %287, i32 2
  %293 = insertelement <4 x float> %292, float %289, i32 3
  %294 = fcmp olt <4 x float> %293, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %295 = select <4 x i1> %294, <4 x float> %293, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %296 = fcmp ogt <4 x float> %295, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %297 = select <4 x i1> %296, <4 x float> %295, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %298 = fptosi <4 x float> %297 to <4 x i32>
  store <4 x i32> %298, <4 x i32>* %13, align 16
  %299 = load <2 x float>, <2 x float>* %194, align 8
  %300 = load <2 x float>, <2 x float>* %198, align 8
  %301 = call i32 @_Z15SkPDFMakeShaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE(%class.SkPDFDocument* %164, %class.SkShader* nonnull %213, %class.SkMatrix* nonnull dereferenceable(40) %11, %struct.SkIRect* nonnull dereferenceable(16) %14, <2 x float> %299, <2 x float> %300) #14
  %302 = icmp eq i32 %301, -1
  br i1 %302, label %364, label %303

303:                                              ; preds = %275
  %304 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %174, i64 0, i32 0, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = shl nsw i32 %305, 2
  %307 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = mul nsw i32 %308, 3
  %310 = icmp slt i32 %306, %309
  br i1 %310, label %317, label %311

311:                                              ; preds = %303
  %312 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %174, i64 0, i32 0
  %313 = icmp sgt i32 %308, 0
  %314 = shl nsw i32 %308, 1
  %315 = select i1 %313, i32 %314, i32 4
  call void @_ZN12SkTHashTableI22SkPDFIndirectReferenceS0_N10SkTHashSetIS0_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable* %312, i32 %315) #14
  %316 = load i32, i32* %307, align 4
  br label %317

317:                                              ; preds = %311, %303
  %318 = phi i32 [ %308, %303 ], [ %316, %311 ]
  %319 = lshr i32 %301, 16
  %320 = xor i32 %319, %301
  %321 = mul i32 %320, -2048144789
  %322 = lshr i32 %321, 13
  %323 = xor i32 %322, %321
  %324 = mul i32 %323, -1028477387
  %325 = lshr i32 %324, 16
  %326 = xor i32 %325, %324
  %327 = icmp eq i32 %326, 0
  %328 = select i1 %327, i32 1, i32 %326
  %329 = icmp sgt i32 %318, 0
  br i1 %329, label %330, label %363

330:                                              ; preds = %317
  %331 = add nsw i32 %318, -1
  %332 = and i32 %331, %328
  %333 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %334 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %333, align 8
  br label %335

335:                                              ; preds = %356, %330
  %336 = phi i32 [ 0, %330 ], [ %361, %356 ]
  %337 = phi i32 [ %332, %330 ], [ %360, %356 ]
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %334, i64 %338
  %340 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %334, i64 %338, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %348

343:                                              ; preds = %335
  %344 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %334, i64 %338, i32 1
  %345 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %339, i64 0, i32 0, i32 0
  store i32 %301, i32* %345, align 4
  store i32 %328, i32* %344, align 4
  %346 = load i32, i32* %304, align 8
  %347 = add nsw i32 %346, 1
  store i32 %347, i32* %304, align 8
  br label %363

348:                                              ; preds = %335
  %349 = icmp eq i32 %328, %341
  br i1 %349, label %350, label %356

350:                                              ; preds = %348
  %351 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %339, i64 0, i32 0, i32 0
  %352 = load i32, i32* %351, align 4
  %353 = icmp eq i32 %301, %352
  br i1 %353, label %354, label %356

354:                                              ; preds = %350
  %355 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %339, i64 0, i32 0, i32 0
  store i32 %301, i32* %355, align 4
  br label %363

356:                                              ; preds = %350, %348
  %357 = add nsw i32 %337, -1
  %358 = icmp slt i32 %337, 1
  %359 = select i1 %358, i32 %318, i32 0
  %360 = add nsw i32 %357, %359
  %361 = add nuw nsw i32 %336, 1
  %362 = icmp eq i32 %361, %318
  br i1 %362, label %363, label %335

363:                                              ; preds = %356, %354, %343, %317
  store i32 %301, i32* %161, align 4
  br label %364

364:                                              ; preds = %363, %275
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %281) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %247) #14
  %365 = load float, float* %192, align 4
  br label %366

366:                                              ; preds = %364, %225, %186
  %367 = phi float [ %217, %186 ], [ %245, %225 ], [ %365, %364 ]
  %368 = load <2 x float>, <2 x float>* %194, align 8
  %369 = load <2 x float>, <2 x float>* %198, align 8
  %370 = extractelement <2 x float> %369, i32 1
  %371 = fcmp oeq float %367, %370
  br i1 %371, label %372, label %386

372:                                              ; preds = %366
  %373 = load float, float* %189, align 8
  %374 = extractelement <2 x float> %368, i32 0
  %375 = fcmp oeq float %373, %374
  br i1 %375, label %376, label %386

376:                                              ; preds = %372
  %377 = load float, float* %190, align 4
  %378 = extractelement <2 x float> %368, i32 1
  %379 = fcmp oeq float %377, %378
  br i1 %379, label %380, label %386

380:                                              ; preds = %376
  %381 = load float, float* %191, align 8
  %382 = extractelement <2 x float> %369, i32 0
  %383 = fcmp oeq float %381, %382
  br i1 %383, label %384, label %386

384:                                              ; preds = %380
  %385 = call i32 @_ZN17SkPDFGraphicState23GetGraphicStateForPaintEP13SkPDFDocumentRK7SkPaint(%class.SkPDFDocument* %164, %class.SkPaint* dereferenceable(72) %3) #14
  br label %389

386:                                              ; preds = %380, %376, %372, %366
  %387 = bitcast %class.SkPaint* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %387) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %387, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false) #14
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %15, %class.SkPaint* dereferenceable(72) %3) #14
  call void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %15, %struct.SkRGBA4f* nonnull dereferenceable(16) %178, %class.SkColorSpace* null) #14
  %388 = call i32 @_ZN17SkPDFGraphicState23GetGraphicStateForPaintEP13SkPDFDocumentRK7SkPaint(%class.SkPDFDocument* %164, %class.SkPaint* nonnull dereferenceable(72) %15) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %387) #14
  br label %389

389:                                              ; preds = %386, %384
  %390 = phi i32 [ %385, %384 ], [ %388, %386 ]
  %391 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %175, i64 0, i32 0, i32 0
  %392 = load i32, i32* %391, align 8
  %393 = shl nsw i32 %392, 2
  %394 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 1
  %395 = load i32, i32* %394, align 4
  %396 = mul nsw i32 %395, 3
  %397 = icmp slt i32 %393, %396
  br i1 %397, label %404, label %398

398:                                              ; preds = %389
  %399 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %175, i64 0, i32 0
  %400 = icmp sgt i32 %395, 0
  %401 = shl nsw i32 %395, 1
  %402 = select i1 %400, i32 %401, i32 4
  call void @_ZN12SkTHashTableI22SkPDFIndirectReferenceS0_N10SkTHashSetIS0_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable* %399, i32 %402) #14
  %403 = load i32, i32* %394, align 4
  br label %404

404:                                              ; preds = %398, %389
  %405 = phi i32 [ %395, %389 ], [ %403, %398 ]
  %406 = lshr i32 %390, 16
  %407 = xor i32 %406, %390
  %408 = mul i32 %407, -2048144789
  %409 = lshr i32 %408, 13
  %410 = xor i32 %409, %408
  %411 = mul i32 %410, -1028477387
  %412 = lshr i32 %411, 16
  %413 = xor i32 %412, %411
  %414 = icmp eq i32 %413, 0
  %415 = select i1 %414, i32 1, i32 %413
  %416 = icmp sgt i32 %405, 0
  br i1 %416, label %417, label %450

417:                                              ; preds = %404
  %418 = add nsw i32 %405, -1
  %419 = and i32 %418, %415
  %420 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %421 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %420, align 8
  br label %422

422:                                              ; preds = %443, %417
  %423 = phi i32 [ 0, %417 ], [ %448, %443 ]
  %424 = phi i32 [ %419, %417 ], [ %447, %443 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %421, i64 %425
  %427 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %421, i64 %425, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %435

430:                                              ; preds = %422
  %431 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %421, i64 %425, i32 1
  %432 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %426, i64 0, i32 0, i32 0
  store i32 %390, i32* %432, align 4
  store i32 %415, i32* %431, align 4
  %433 = load i32, i32* %391, align 8
  %434 = add nsw i32 %433, 1
  store i32 %434, i32* %391, align 8
  br label %450

435:                                              ; preds = %422
  %436 = icmp eq i32 %415, %428
  br i1 %436, label %437, label %443

437:                                              ; preds = %435
  %438 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %426, i64 0, i32 0, i32 0
  %439 = load i32, i32* %438, align 4
  %440 = icmp eq i32 %390, %439
  br i1 %440, label %441, label %443

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %426, i64 0, i32 0, i32 0
  store i32 %390, i32* %442, align 4
  br label %450

443:                                              ; preds = %437, %435
  %444 = add nsw i32 %424, -1
  %445 = icmp slt i32 %424, 1
  %446 = select i1 %445, i32 %405, i32 0
  %447 = add nsw i32 %444, %446
  %448 = add nuw nsw i32 %423, 1
  %449 = icmp eq i32 %448, %405
  br i1 %449, label %450, label %422

450:                                              ; preds = %443, %404, %430, %441
  store i32 %390, i32* %162, align 4
  store float %4, float* %160, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176)
  %451 = bitcast { i64, i64 }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %451) #14
  %452 = load i32, i32* %165, align 4
  %453 = load i32, i32* %167, align 4
  %454 = zext i32 %453 to i64
  %455 = shl nuw i64 %454, 32
  %456 = zext i32 %452 to i64
  %457 = or i64 %455, %456
  %458 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  store i64 0, i64* %458, align 8
  %459 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  store i64 %457, i64* %459, align 8
  call void @_ZN22SkPDFGraphicStackState10updateClipEPK11SkClipStackRK7SkIRect(%struct.SkPDFGraphicStackState* %59, %class.SkClipStack* %1, %struct.SkIRect* nonnull dereferenceable(16) %24) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %451) #14
  %460 = getelementptr inbounds %"struct.SkPDFGraphicStackState::Entry", %"struct.SkPDFGraphicStackState::Entry"* %22, i64 0, i32 0
  call void @_ZN22SkPDFGraphicStackState12updateMatrixERK8SkMatrix(%struct.SkPDFGraphicStackState* %59, %class.SkMatrix* nonnull dereferenceable(40) %460) #14
  call void @_ZN22SkPDFGraphicStackState18updateDrawingStateERKNS_5EntryE(%struct.SkPDFGraphicStackState* %59, %"struct.SkPDFGraphicStackState::Entry"* nonnull dereferenceable(72) %22) #14
  %461 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 2
  %462 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %461, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %151) #14
  br label %463

463:                                              ; preds = %54, %6, %450
  %464 = phi %class.SkDynamicMemoryWStream* [ %462, %450 ], [ null, %6 ], [ null, %54 ]
  ret %class.SkDynamicMemoryWStream* %464
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkPDFDevice14isContentEmptyEv(%class.SkPDFDevice*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  %3 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %2) #14
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 8
  %7 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %6) #14
  %8 = icmp eq i64 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare void @_ZN22SkPDFGraphicStackState10updateClipEPK11SkClipStackRK7SkIRect(%struct.SkPDFGraphicStackState*, %class.SkClipStack*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN22SkPDFGraphicStackState12updateMatrixERK8SkMatrix(%struct.SkPDFGraphicStackState*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN22SkPDFGraphicStackState18updateDrawingStateERKNS_5EntryE(%struct.SkPDFGraphicStackState*, %"struct.SkPDFGraphicStackState::Entry"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice*, %class.SkClipStack*, i32, i32, %class.SkPath*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 8
  %7 = alloca %class.SkMatrix, align 8
  %8 = alloca %class.SkMatrix, align 8
  %9 = alloca %class.SkPaint, align 8
  %10 = alloca %class.ScopedContentEntry, align 8
  %11 = alloca %class.SkPaint, align 8
  %12 = alloca %class.SkClipStack, align 8
  %13 = alloca %class.SkPDFDevice, align 8
  %14 = alloca %class.ScopedContentEntry, align 8
  %15 = alloca %class.ScopedContentEntry, align 8
  %16 = tail call i8* @_ZN10SkPDFUtils13BlendModeNameE11SkBlendMode(i32 %2) #14
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %239

18:                                               ; preds = %5
  %19 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10
  tail call void @_ZN22SkPDFGraphicStackState10drainStackEv(%struct.SkPDFGraphicStackState* %19) #14
  %20 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20)
  %21 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21)
  %22 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22)
  %23 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %24 = bitcast %class.SkMatrix* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 4 %24, i64 40, i1 false)
  %25 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %26 = bitcast %class.SkMatrix* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 4 %26, i64 40, i1 false)
  %27 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %28 = bitcast %class.SkMatrix* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 4 %28, i64 40, i1 false)
  %29 = bitcast %struct.SkPDFGraphicStackState* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %20, i64 40, i1 false)
  %30 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 1
  store i32 2, i32* %30, align 8
  %31 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 2, i32 0
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %32, align 4
  %33 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 3
  store float 1.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 4
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 0, i32 5
  store i32 -1, i32* %35, align 4
  %36 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1
  %37 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %21, i64 40, i1 false)
  %38 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 1
  store i32 2, i32* %38, align 8
  %39 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 2, i32 0
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %40, align 4
  %41 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 3
  store float 1.000000e+00, float* %41, align 4
  %42 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 4
  store i32 -1, i32* %42, align 8
  %43 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 1, i32 5
  store i32 -1, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2
  %45 = bitcast %"struct.SkPDFGraphicStackState::Entry"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %22, i64 40, i1 false)
  %46 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 1
  store i32 2, i32* %46, align 8
  %47 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 2, i32 0
  %48 = bitcast float* %47 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %48, align 4
  %49 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 3
  store float 1.000000e+00, float* %49, align 4
  %50 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 4
  store i32 -1, i32* %50, align 8
  %51 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 0, i64 2, i32 5
  store i32 -1, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 1
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 10, i32 2
  store %class.SkDynamicMemoryWStream* null, %class.SkDynamicMemoryWStream** %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22)
  %54 = icmp eq i32 %2, 4
  %55 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 8
  %56 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %55) #14
  %57 = icmp ne i64 %56, 0
  br i1 %54, label %58, label %72

58:                                               ; preds = %18
  br i1 %57, label %59, label %239

59:                                               ; preds = %58
  %60 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  %61 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %60) #14
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %55, i64 0, i32 0
  %65 = bitcast %class.SkDynamicMemoryWStream* %55 to i1 (%class.SkWStream*, i8*, i64)***
  %66 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %65, align 8
  %67 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %66, i64 2
  %68 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %67, align 8
  %69 = tail call zeroext i1 %68(%class.SkWStream* %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #14
  %70 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 9
  store i8 1, i8* %70, align 8
  br label %71

71:                                               ; preds = %59, %63
  tail call void @_ZN22SkDynamicMemoryWStream17prependToAndResetEPS_(%class.SkDynamicMemoryWStream* %55, %class.SkDynamicMemoryWStream* %60) #14
  br label %239

72:                                               ; preds = %18
  br i1 %57, label %73, label %87

73:                                               ; preds = %72
  %74 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  %75 = tail call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %74) #14
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %74, i64 0, i32 0
  %79 = bitcast %class.SkDynamicMemoryWStream* %74 to i1 (%class.SkWStream*, i8*, i64)***
  %80 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %79, align 8
  %81 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %80, i64 2
  %82 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %81, align 8
  %83 = tail call zeroext i1 %82(%class.SkWStream* %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #14
  %84 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 9
  store i8 1, i8* %84, align 8
  br label %85

85:                                               ; preds = %73, %77
  %86 = tail call zeroext i1 @_ZN22SkDynamicMemoryWStream15writeToAndResetEPS_(%class.SkDynamicMemoryWStream* %55, %class.SkDynamicMemoryWStream* %74) #14
  br label %87

87:                                               ; preds = %85, %72
  %88 = icmp eq i32 %3, -1
  br i1 %88, label %239, label %89

89:                                               ; preds = %87
  %90 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %90) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %9) #14
  %91 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 7
  %92 = call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %91) #14
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %127

94:                                               ; preds = %89
  %95 = call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %55) #14
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %127

97:                                               ; preds = %94
  %98 = icmp eq %class.SkPath* %4, null
  %99 = or i32 %2, 1
  %100 = icmp eq i32 %99, 9
  %101 = or i1 %100, %98
  br i1 %101, label %102, label %140

102:                                              ; preds = %97
  %103 = bitcast %class.ScopedContentEntry* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %103) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 48, i1 false)
  %104 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %10, %class.SkPDFDevice* %0, %class.SkClipStack* null, %class.SkMatrix* dereferenceable(40) %104, %class.SkPaint* nonnull dereferenceable(72) %9, float 0.000000e+00)
  %105 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %10, i64 0, i32 1
  %106 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %105, align 8
  call void @_ZN11SkPDFDevice15drawFormXObjectE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %3, %class.SkDynamicMemoryWStream* %106)
  %107 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %105, align 8
  %108 = icmp eq %class.SkDynamicMemoryWStream* %107, null
  br i1 %108, label %125, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %10, i64 0, i32 4
  %111 = getelementptr inbounds %class.SkPath, %class.SkPath* %110, i64 0, i32 0, i32 0
  %112 = load %class.SkPathRef*, %class.SkPathRef** %111, align 8
  %113 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %112, i64 0, i32 4, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %115, %class.SkPath* null, %class.SkPath* %110
  %117 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %10, i64 0, i32 0
  %118 = load %class.SkPDFDevice*, %class.SkPDFDevice** %117, align 8
  %119 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %10, i64 0, i32 5
  %120 = load %class.SkClipStack*, %class.SkClipStack** %119, align 8
  %121 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %10, i64 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %10, i64 0, i32 3, i32 0
  %124 = load i32, i32* %123, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %118, %class.SkClipStack* %120, i32 %122, i32 %124, %class.SkPath* %116) #14
  br label %125

125:                                              ; preds = %102, %109
  %126 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %10, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %126) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %103) #14
  br label %238

127:                                              ; preds = %89, %94
  %128 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i64
  %133 = shl nuw i64 %132, 32
  %134 = zext i32 %129 to i64
  %135 = or i64 %133, %134
  %136 = call i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice* %0, i64 0, i64 %135, i1 zeroext false) #14
  %137 = icmp eq i32 %2, 9
  br i1 %137, label %202, label %138

138:                                              ; preds = %127
  %139 = icmp eq %class.SkPath* %4, null
  br i1 %139, label %164, label %140

140:                                              ; preds = %97, %138
  %141 = phi i32 [ %136, %138 ], [ -1, %97 ]
  %142 = phi i32 [ %2, %138 ], [ 0, %97 ]
  %143 = bitcast %class.SkPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %143) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %143, i8* align 8 bitcast (%class.SkPaint* @__const._ZL12color_filterPK7SkImageP13SkColorFilter.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %11) #14
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %11, i32 -16777216) #14
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %11, i8 zeroext 0) #14
  %144 = bitcast %class.SkClipStack* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %144) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %144, i8* align 8 bitcast (%class.SkClipStack* @__const._ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath.empty to i8*), i64 80, i1 false)
  call void @_ZN11SkClipStackC1Ev(%class.SkClipStack* nonnull %12) #14
  %145 = bitcast %class.SkPDFDevice* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3360, i8* nonnull %145) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %145, i8* align 8 bitcast ({ { { %class.SkRefCnt.base, [4 x i8], %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }, [320 x i64], %class.SkClipStack }, %class.SkMatrix, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, %class.SkTHashSet, i32, [4 x i8], %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream, i8, [7 x i8], { [3 x %"struct.SkPDFGraphicStackState::Entry"], i32, [4 x i8], %class.SkDynamicMemoryWStream* }, %class.SkPDFDocument* }* @__const._ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath.shapeDev to i8*), i64 3360, i1 false)
  %146 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  %147 = bitcast %struct.SkISize* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 11
  %150 = load %class.SkPDFDocument*, %class.SkPDFDocument** %149, align 8
  %151 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 1
  call void @_ZN11SkPDFDeviceC2E7SkISizeP13SkPDFDocumentRK8SkMatrix(%class.SkPDFDevice* nonnull %13, i64 %148, %class.SkPDFDocument* %150, %class.SkMatrix* dereferenceable(40) %151)
  %152 = icmp eq %class.SkClipStack* %1, null
  %153 = select i1 %152, %class.SkClipStack* %12, %class.SkClipStack* %1
  %154 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN11SkPDFDevice16internalDrawPathERK11SkClipStackRK8SkMatrixRK6SkPathRK7SkPaintb(%class.SkPDFDevice* nonnull %13, %class.SkClipStack* dereferenceable(80) %153, %class.SkMatrix* dereferenceable(40) %154, %class.SkPath* nonnull dereferenceable(16) %4, %class.SkPaint* nonnull dereferenceable(72) %11, i1 zeroext true)
  %155 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %13, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %13, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  %160 = shl nuw i64 %159, 32
  %161 = zext i32 %156 to i64
  %162 = or i64 %160, %161
  %163 = call i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice* nonnull %13, i64 0, i64 %162, i1 zeroext false) #14
  call void @_ZN11SkPDFDevice23drawFormXObjectWithMaskE22SkPDFIndirectReferenceS0_11SkBlendModeb(%class.SkPDFDevice* %0, i32 %3, i32 %163, i32 3, i1 zeroext true)
  call void @_ZN11SkPDFDeviceD2Ev(%class.SkPDFDevice* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 3360, i8* nonnull %145) #14
  call void @_ZN11SkClipStackD1Ev(%class.SkClipStack* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %144) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %143) #14
  br label %165

164:                                              ; preds = %138
  call void @_ZN11SkPDFDevice23drawFormXObjectWithMaskE22SkPDFIndirectReferenceS0_11SkBlendModeb(%class.SkPDFDevice* %0, i32 %3, i32 %136, i32 3, i1 zeroext true)
  br label %165

165:                                              ; preds = %140, %164
  %166 = phi i32 [ %142, %140 ], [ %2, %164 ]
  %167 = phi i32 [ %141, %140 ], [ %136, %164 ]
  %168 = icmp eq i32 %166, 0
  br i1 %168, label %238, label %169

169:                                              ; preds = %165
  %170 = icmp eq i32 %166, 1
  switch i32 %166, label %235 [
    i32 10, label %171
    i32 1, label %171
    i32 9, label %230
    i32 7, label %230
    i32 5, label %230
    i32 13, label %234
  ]

171:                                              ; preds = %169, %169
  %172 = bitcast %class.ScopedContentEntry* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %172) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 48, i1 false)
  %173 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %14, %class.SkPDFDevice* %0, %class.SkClipStack* null, %class.SkMatrix* dereferenceable(40) %173, %class.SkPaint* nonnull dereferenceable(72) %9, float 0.000000e+00)
  %174 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 1
  %175 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %174, align 8
  %176 = icmp eq %class.SkDynamicMemoryWStream* %175, null
  br i1 %176, label %177, label %179

177:                                              ; preds = %171
  %178 = xor i1 %170, true
  br label %199

179:                                              ; preds = %171
  call void @_ZN11SkPDFDevice15drawFormXObjectE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %167, %class.SkDynamicMemoryWStream* nonnull %175)
  %180 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %174, align 8
  %181 = xor i1 %170, true
  %182 = icmp eq %class.SkDynamicMemoryWStream* %180, null
  br i1 %182, label %199, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 4
  %185 = getelementptr inbounds %class.SkPath, %class.SkPath* %184, i64 0, i32 0, i32 0
  %186 = load %class.SkPathRef*, %class.SkPathRef** %185, align 8
  %187 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %186, i64 0, i32 4, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 0
  %190 = select i1 %189, %class.SkPath* null, %class.SkPath* %184
  %191 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 0
  %192 = load %class.SkPDFDevice*, %class.SkPDFDevice** %191, align 8
  %193 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 5
  %194 = load %class.SkClipStack*, %class.SkClipStack** %193, align 8
  %195 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 2
  %196 = load i32, i32* %195, align 8
  %197 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 3, i32 0
  %198 = load i32, i32* %197, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %192, %class.SkClipStack* %194, i32 %196, i32 %198, %class.SkPath* %190) #14
  br label %199

199:                                              ; preds = %177, %179, %183
  %200 = phi i1 [ %178, %177 ], [ %181, %179 ], [ %181, %183 ]
  %201 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %14, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %201) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %172) #14
  br i1 %200, label %229, label %238

202:                                              ; preds = %127
  call void @_ZN11SkPDFDevice23drawFormXObjectWithMaskE22SkPDFIndirectReferenceS0_11SkBlendModeb(%class.SkPDFDevice* %0, i32 %136, i32 %3, i32 3, i1 zeroext true)
  %203 = bitcast %class.ScopedContentEntry* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %203) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 48, i1 false)
  %204 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %15, %class.SkPDFDevice* %0, %class.SkClipStack* null, %class.SkMatrix* dereferenceable(40) %204, %class.SkPaint* nonnull dereferenceable(72) %9, float 0.000000e+00)
  %205 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 1
  %206 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %205, align 8
  %207 = icmp eq %class.SkDynamicMemoryWStream* %206, null
  br i1 %207, label %227, label %208

208:                                              ; preds = %202
  call void @_ZN11SkPDFDevice15drawFormXObjectE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %3, %class.SkDynamicMemoryWStream* nonnull %206)
  %209 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %205, align 8
  %210 = icmp eq %class.SkDynamicMemoryWStream* %209, null
  br i1 %210, label %227, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 4
  %213 = getelementptr inbounds %class.SkPath, %class.SkPath* %212, i64 0, i32 0, i32 0
  %214 = load %class.SkPathRef*, %class.SkPathRef** %213, align 8
  %215 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %214, i64 0, i32 4, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, 0
  %218 = select i1 %217, %class.SkPath* null, %class.SkPath* %212
  %219 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 0
  %220 = load %class.SkPDFDevice*, %class.SkPDFDevice** %219, align 8
  %221 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 5
  %222 = load %class.SkClipStack*, %class.SkClipStack** %221, align 8
  %223 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 2
  %224 = load i32, i32* %223, align 8
  %225 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 3, i32 0
  %226 = load i32, i32* %225, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %220, %class.SkClipStack* %222, i32 %224, i32 %226, %class.SkPath* %218) #14
  br label %227

227:                                              ; preds = %202, %211, %208
  %228 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %15, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %228) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %203) #14
  br label %230

229:                                              ; preds = %199
  switch i32 %166, label %235 [
    i32 9, label %230
    i32 7, label %230
    i32 5, label %230
  ]

230:                                              ; preds = %169, %169, %169, %227, %229, %229, %229
  %231 = phi i32 [ %136, %227 ], [ %167, %229 ], [ %167, %229 ], [ %167, %229 ], [ %167, %169 ], [ %167, %169 ], [ %167, %169 ]
  %232 = phi i32 [ 9, %227 ], [ %166, %229 ], [ %166, %229 ], [ %166, %229 ], [ %166, %169 ], [ %166, %169 ], [ %166, %169 ]
  %233 = icmp eq i32 %232, 7
  call void @_ZN11SkPDFDevice23drawFormXObjectWithMaskE22SkPDFIndirectReferenceS0_11SkBlendModeb(%class.SkPDFDevice* %0, i32 %231, i32 %3, i32 3, i1 zeroext %233)
  br label %238

234:                                              ; preds = %169
  call void @_ZN11SkPDFDevice23drawFormXObjectWithMaskE22SkPDFIndirectReferenceS0_11SkBlendModeb(%class.SkPDFDevice* %0, i32 %167, i32 %3, i32 3, i1 zeroext false)
  br label %235

235:                                              ; preds = %169, %229, %234
  %236 = phi i32 [ 24, %234 ], [ 3, %229 ], [ 3, %169 ]
  %237 = icmp eq i32 %166, 8
  call void @_ZN11SkPDFDevice23drawFormXObjectWithMaskE22SkPDFIndirectReferenceS0_11SkBlendModeb(%class.SkPDFDevice* %0, i32 %3, i32 %167, i32 %236, i1 zeroext %237)
  br label %238

238:                                              ; preds = %165, %199, %235, %230, %125
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %90) #14
  br label %239

239:                                              ; preds = %87, %5, %58, %71, %238
  ret void
}

declare void @_ZN22SkDynamicMemoryWStream17prependToAndResetEPS_(%class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream*) local_unnamed_addr #2

declare void @_ZN11SkClipStackC1Ev(%class.SkClipStack*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11SkClipStackD1Ev(%class.SkClipStack*) unnamed_addr #3

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZNK12SkKeyedImage6subsetE7SkIRect(%class.SkKeyedImage* sret, %class.SkKeyedImage*, i64, i64) local_unnamed_addr #2

declare i32 @_Z19SkInterpretXfermodeRK7SkPaintb(%class.SkPaint* dereferenceable(72), i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage11isAlphaOnlyEv(%class.SkImage*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.230*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp* sret, %class.SkSurface*) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.231*) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN11SkClipStack4saveEv(%class.SkClipStack*) local_unnamed_addr #2

declare void @_ZN11SkClipStack8clipRectERK6SkRectRK8SkMatrix8SkClipOpb(%class.SkClipStack*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN9SkSurface14flushAndSubmitEb(%class.SkSurface*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare i32 @_Z19SkPDFSerializeImagePK7SkImageP13SkPDFDocumenti(%class.SkImage*, %class.SkPDFDocument*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint(%class.SkPDFDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca %class.ScopedContentEntry, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 40, i1 false) #14
  %12 = call zeroext i1 @_ZN12SkBaseDevice10peekPixelsEP8SkPixmap(%class.SkBaseDevice* %1, %class.SkPixmap* nonnull %5) #14
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0
  call void @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice* %14, %class.SkBaseDevice* %1, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkPaint* dereferenceable(72) %3) #14
  br label %89

15:                                               ; preds = %4
  %16 = bitcast %class.SkBaseDevice* %1 to %class.SkPDFDevice*
  %17 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 10, i32 1, i32 2
  %18 = bitcast %class.SkMatrix* %17 to %class.SkDynamicMemoryWStream*
  %19 = call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %18) #14
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 10, i32 1, i32 2, i32 0, i64 8
  %23 = bitcast float* %22 to %class.SkDynamicMemoryWStream*
  %24 = call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* %23) #14
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %89, label %26

26:                                               ; preds = %15, %21
  %27 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 -1, i64 36, i1 false)
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  store i32 -1431655766, i32* %28, align 4
  %29 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0
  call void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* nonnull sret %6, %class.SkBaseDevice* %1, %class.SkBaseDevice* dereferenceable(296) %29) #14
  %30 = bitcast %class.ScopedContentEntry* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  %31 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  call void @_ZN18ScopedContentEntryC2EP11SkPDFDevicePK11SkClipStackRK8SkMatrixRK7SkPaintf(%class.ScopedContentEntry* nonnull %7, %class.SkPDFDevice* %0, %class.SkClipStack* %31, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkPaint* dereferenceable(72) %3, float 0.000000e+00)
  %32 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 1
  %33 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %32, align 8
  %34 = icmp eq %class.SkDynamicMemoryWStream* %33, null
  br i1 %34, label %87, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %58 [
    i32 0, label %38
    i32 1, label %38
    i32 5, label %38
    i32 7, label %38
    i32 6, label %38
    i32 8, label %38
    i32 9, label %38
    i32 10, label %38
    i32 13, label %38
  ]

38:                                               ; preds = %35, %35, %35, %35, %35, %35, %35, %35, %35
  %39 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %40 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %41 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #14
  %42 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 3, i32 1
  %43 = bitcast %struct.SkISize* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = lshr i64 %44, 32
  %47 = trunc i64 %46 to i32
  %48 = sitofp i32 %45 to float
  %49 = insertelement <2 x float> undef, float %48, i32 0
  %50 = sitofp i32 %47 to float
  %51 = insertelement <2 x float> %49, float %50, i32 1
  %52 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %52, align 8
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %51, <2 x float>* %53, align 8
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %8, %struct.SkRect* nonnull dereferenceable(16) %10, i32 0, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #14
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %8, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkPath* nonnull %8, i32 1) #14
  %54 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 4
  %55 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %54, %class.SkPath* nonnull dereferenceable(16) %8) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  %56 = load i32, i32* %36, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %38, %35
  %59 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 3, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 3, i32 1, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %60 to i64
  %66 = or i64 %64, %65
  %67 = call i32 @_ZN11SkPDFDevice25makeFormXObjectFromDeviceE7SkIRectb(%class.SkPDFDevice* %16, i64 0, i64 %66, i1 zeroext false) #14
  %68 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %32, align 8
  call void @_ZN11SkPDFDevice15drawFormXObjectE22SkPDFIndirectReferenceP22SkDynamicMemoryWStream(%class.SkPDFDevice* %0, i32 %67, %class.SkDynamicMemoryWStream* %68)
  br label %69

69:                                               ; preds = %38, %58
  %70 = load %class.SkDynamicMemoryWStream*, %class.SkDynamicMemoryWStream** %32, align 8
  %71 = icmp eq %class.SkDynamicMemoryWStream* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 4
  %74 = getelementptr inbounds %class.SkPath, %class.SkPath* %73, i64 0, i32 0, i32 0
  %75 = load %class.SkPathRef*, %class.SkPathRef** %74, align 8
  %76 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %75, i64 0, i32 4, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, %class.SkPath* null, %class.SkPath* %73
  %80 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 0
  %81 = load %class.SkPDFDevice*, %class.SkPDFDevice** %80, align 8
  %82 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 5
  %83 = load %class.SkClipStack*, %class.SkClipStack** %82, align 8
  %84 = load i32, i32* %36, align 8
  %85 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 3, i32 0
  %86 = load i32, i32* %85, align 4
  call void @_ZN11SkPDFDevice18finishContentEntryEPK11SkClipStack11SkBlendMode22SkPDFIndirectReferenceP6SkPath(%class.SkPDFDevice* %81, %class.SkClipStack* %83, i32 %84, i32 %86, %class.SkPath* %79) #14
  br label %87

87:                                               ; preds = %26, %69, %72
  %88 = getelementptr inbounds %class.ScopedContentEntry, %class.ScopedContentEntry* %7, i64 0, i32 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* %88) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #14
  br label %89

89:                                               ; preds = %87, %21, %13
  %90 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %91 = load %class.SkColorSpace*, %class.SkColorSpace** %90, align 8
  %92 = icmp eq %class.SkColorSpace* %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = bitcast %class.SkColorSpace* %91 to i8*
  call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %89, %93, %97
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #14
  ret void
}

declare zeroext i1 @_ZN12SkBaseDevice10peekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) local_unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* sret, %class.SkBaseDevice*, %class.SkBaseDevice* dereferenceable(296)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint(%class.SkPDFDevice*, %class.SkSpecialImage*, %class.SkMatrix* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %10 = alloca %class.SkKeyedImage, align 8
  %11 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %12 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 2
  %13 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i32 %15 to i64
  %21 = or i64 %19, %20
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %21, i64* %23, align 8
  %24 = call zeroext i1 @_ZNK11SkClipStack7isEmptyERK7SkIRect(%class.SkClipStack* %12, %struct.SkIRect* nonnull dereferenceable(16) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br i1 %24, label %55, label %25

25:                                               ; preds = %5
  %26 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %26) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #14
  %27 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* %1, %class.SkBitmap* nonnull %7) #14
  br i1 %27, label %28, label %54

28:                                               ; preds = %25
  %29 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #14
  %30 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 2, i32 1, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = sitofp i32 %31 to float
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 2, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  %36 = insertelement <2 x float> undef, float %32, i32 0
  %37 = insertelement <2 x float> %36, float %35, i32 1
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %38, align 8
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %37, <2 x float>* %39, align 8
  call void @_ZN12SkKeyedImageC1ERK8SkBitmap(%class.SkKeyedImage* nonnull %10, %class.SkBitmap* nonnull dereferenceable(56) %7) #14
  call void @_ZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS2_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrix(%class.SkPDFDevice* %0, %class.SkKeyedImage* nonnull %10, %struct.SkRect* null, %struct.SkRect* nonnull dereferenceable(16) %9, %struct.SkSamplingOptions* dereferenceable(20) %3, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrix* dereferenceable(40) %2)
  %40 = getelementptr inbounds %class.SkKeyedImage, %class.SkKeyedImage* %10, i64 0, i32 0, i32 0
  %41 = load %class.SkImage*, %class.SkImage** %40, align 8
  %42 = icmp eq %class.SkImage* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %28
  %44 = getelementptr inbounds %class.SkImage, %class.SkImage* %41, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkImage* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkImage* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #14
  br label %53

53:                                               ; preds = %28, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #14
  br label %54

54:                                               ; preds = %53, %25
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %26) #14
  br label %55

55:                                               ; preds = %5, %54
  ret void
}

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice11makeSpecialERK8SkBitmap(%class.sk_sp.338* noalias sret, %class.SkPDFDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i32 %8 to i64
  %14 = or i64 %12, %13
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %1, i64 0, i32 0, i32 0, i32 4
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.338* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.SkBitmap* dereferenceable(56) %2, %class.SkSurfaceProps* dereferenceable(8) %17) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.338* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPDFDevice11makeSpecialEPK7SkImage(%class.sk_sp.338* noalias sret, %class.SkPDFDevice*, %class.SkImage*) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %class.sk_sp, align 8
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 2, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 2, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i32 %9 to i64
  %15 = or i64 %13, %14
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %15, i64* %17, align 8
  call void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp* nonnull sret %6, %class.SkImage* %2) #14
  %18 = getelementptr inbounds %class.SkPDFDevice, %class.SkPDFDevice* %1, i64 0, i32 0, i32 0, i32 4
  call void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.338* sret %0, %class.GrRecordingContext* null, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.sk_sp* nonnull %6, %class.SkSurfaceProps* dereferenceable(8) %18) #14
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %20 = load %class.SkImage*, %class.SkImage** %19, align 8
  %21 = icmp eq %class.SkImage* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkImage, %class.SkImage* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %class.SkImage* %20 to %class.SkRefCntBase*
  %28 = bitcast %class.SkImage* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #14
  br label %32

32:                                               ; preds = %3, %22, %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.338* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), %class.sk_sp*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp* sret, %class.SkImage*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImageFilterCache* @_ZN11SkPDFDevice19getImageFilterCacheEv(%class.SkPDFDevice* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %class.SkImageFilterCache* @_ZN18SkImageFilterCache6CreateEm(i64 33554432) #14
  ret %class.SkImageFilterCache* %2
}

declare %class.SkImageFilterCache* @_ZN18SkImageFilterCache6CreateEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK12SkBaseDevice15getRasterHandleEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

declare zeroext i1 @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect(%class.SkBaseDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice29android_utils_clipWithStencilEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK12SkBaseDevice16recordingContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrSurfaceDrawContext* @_ZN12SkBaseDevice18surfaceDrawContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrSurfaceDrawContext* null
}

declare void @_ZN17SkClipStackDevice6onSaveEv(%class.SkClipStackDevice*) unnamed_addr #2

declare void @_ZN17SkClipStackDevice9onRestoreEv(%class.SkClipStackDevice*) unnamed_addr #2

declare void @_ZN17SkClipStackDevice10onClipRectERK6SkRect8SkClipOpb(%class.SkClipStackDevice*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #2

declare void @_ZN17SkClipStackDevice11onClipRRectERK7SkRRect8SkClipOpb(%class.SkClipStackDevice*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #2

declare void @_ZN17SkClipStackDevice10onClipPathERK6SkPath8SkClipOpb(%class.SkClipStackDevice*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #2

declare void @_ZN17SkClipStackDevice12onClipShaderE5sk_spI8SkShaderE(%class.SkClipStackDevice*, %class.sk_sp.230*) unnamed_addr #2

declare void @_ZN17SkClipStackDevice12onClipRegionERK8SkRegion8SkClipOp(%class.SkClipStackDevice*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #2

declare void @_ZN17SkClipStackDevice13onReplaceClipERK7SkIRect(%class.SkClipStackDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

declare void @_ZN17SkClipStackDevice26onSetDeviceClipRestrictionEP7SkIRect(%class.SkClipStackDevice*, %struct.SkIRect*) unnamed_addr #2

declare zeroext i1 @_ZNK17SkClipStackDevice10onClipIsAAEv(%class.SkClipStackDevice*) unnamed_addr #2

declare zeroext i1 @_ZNK17SkClipStackDevice16onClipIsWideOpenEv(%class.SkClipStackDevice*) unnamed_addr #2

declare void @_ZNK17SkClipStackDevice11onAsRgnClipEP8SkRegion(%class.SkClipStackDevice*, %class.SkRegion*) unnamed_addr #2

declare i32 @_ZNK17SkClipStackDevice13onGetClipTypeEv(%class.SkClipStackDevice*) unnamed_addr #2

declare { i64, i64 } @_ZNK17SkClipStackDevice15onDevClipBoundsEv(%class.SkClipStackDevice*) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint(%class.SkBaseDevice*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkBaseDevice*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) unnamed_addr #2

declare void @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE(%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas(%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*) unnamed_addr #2

declare void @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %"class.skif::Mapping"* dereferenceable(80), %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb(%class.sk_sp.338* sret, %class.SkBaseDevice*, %struct.SkIRect* dereferenceable(16), i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice12setImmutableEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice16isNoPixelsDeviceEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap(%class.SkBaseDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice27forceConservativeRasterClipEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZ23mask_to_greyscale_imageP6SkMaskEN3$_08__invokeEPKvPv"(i8*, i8* nocapture readnone) #8 align 2 {
  tail call void @_ZN6SkMask9FreeImageEPv(i8* %0) #14
  ret void
}

declare %class.SkBitmapDevice* @_ZN14SkBitmapDevice6CreateERK11SkImageInfoRK14SkSurfacePropsbP23SkRasterHandleAllocator(%struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8), i1 zeroext, %class.SkRasterHandleAllocator*) local_unnamed_addr #2

declare void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

declare void @_ZN11SkClipStackC1EPvm(%class.SkClipStack*, i8*, i64) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

declare void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix*, float, float, %struct.SkPoint*) local_unnamed_addr #2

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare void @_ZN11SkPaintPriv17RemoveColorFilterEP7SkPaintP12SkColorSpace(%class.SkPaint*, %class.SkColorSpace*) local_unnamed_addr #2

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #2

declare void @_ZN12SkRasterClipC1ERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

declare void @_ZN6SkDrawC1Ev(%class.SkDraw*) unnamed_addr #2

declare void @_ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice(%class.SkDraw*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72), %class.SkBaseDevice*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip*) unnamed_addr #3

declare zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint*, %class.SkPath* dereferenceable(16), %class.SkPath*, %struct.SkRect*, float) local_unnamed_addr #2

declare void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.230* sret, %class.SkShader*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableI22SkPDFIndirectReferenceS0_N10SkTHashSetIS0_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkAutoTArray, align 8
  %4 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  store i32 %1, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %class.SkAutoTArray* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %8, align 8
  %11 = bitcast %class.SkAutoTArray* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = bitcast %class.SkAutoTArray* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %68, label %14

14:                                               ; preds = %2
  %15 = sext i32 %1 to i64
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %15, i64 8) #14
  %17 = extractvalue { i64, i1 } %16, 1
  %18 = extractvalue { i64, i1 } %16, 0
  %19 = select i1 %17, i64 -1, i64 %18
  %20 = tail call i8* @_Znam(i64 %19) #15
  %21 = bitcast i8* %20 to %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*
  %22 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %21, i64 %15
  %23 = shl nsw i64 %15, 3
  %24 = add nsw i64 %23, -8
  %25 = lshr exact i64 %24, 3
  %26 = add nuw nsw i64 %25, 1
  %27 = and i64 %26, 7
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %14, %29
  %30 = phi %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* [ %34, %29 ], [ %21, %14 ]
  %31 = phi i64 [ %35, %29 ], [ %27, %14 ]
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %30, i64 0, i32 0, i32 0
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %30, i64 0, i32 1
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %30, i64 1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !106

37:                                               ; preds = %29, %14
  %38 = phi %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* [ %21, %14 ], [ %34, %29 ]
  %39 = icmp ult i64 %24, 56
  br i1 %39, label %60, label %40

40:                                               ; preds = %37, %40
  %41 = phi %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* [ %58, %40 ], [ %38, %37 ]
  %42 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 0, i32 0, i32 0
  store i32 -1, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 0, i32 1
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 1, i32 0, i32 0
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 1, i32 1
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 2, i32 0, i32 0
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 2, i32 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 3, i32 0, i32 0
  store i32 -1, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 3, i32 1
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 4, i32 0, i32 0
  store i32 -1, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 4, i32 1
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 5, i32 0, i32 0
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 5, i32 1
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 6, i32 0, i32 0
  store i32 -1, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 6, i32 1
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 7, i32 0, i32 0
  store i32 -1, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 7, i32 1
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %41, i64 8
  %59 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %58, %22
  br i1 %59, label %60, label %40

60:                                               ; preds = %40, %37
  %61 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %61, align 8
  %63 = bitcast %class.SkAutoTArray* %3 to i8**
  store i8* %20, i8** %63, align 8
  %64 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %62, null
  %65 = ptrtoint i8* %20 to i64
  br i1 %64, label %68, label %66

66:                                               ; preds = %60
  %67 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %62 to i8*
  tail call void @_ZdaPv(i8* %67) #15
  br label %68

68:                                               ; preds = %66, %60, %2
  %69 = phi i64 [ %65, %66 ], [ %65, %60 ], [ 0, %2 ]
  %70 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %70, align 8
  %71 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %8, align 8
  store i64 %69, i64* %9, align 8
  %72 = icmp eq %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = bitcast %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %71 to i8*
  tail call void @_ZdaPv(i8* %74) #15
  br label %75

75:                                               ; preds = %73, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %76 = icmp sgt i32 %5, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %75
  %78 = inttoptr i64 %10 to %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*
  %79 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %80 = zext i32 %5 to i64
  br label %86

81:                                               ; preds = %138, %75
  %82 = icmp eq i64 %10, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %10 to i8*
  tail call void @_ZdaPv(i8* %84) #15
  br label %85

85:                                               ; preds = %81, %83
  ret void

86:                                               ; preds = %138, %77
  %87 = phi i64 [ 0, %77 ], [ %139, %138 ]
  %88 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %78, i64 %87, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %138, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %78, i64 %87, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = lshr i32 %93, 16
  %95 = xor i32 %94, %93
  %96 = mul i32 %95, -2048144789
  %97 = lshr i32 %96, 13
  %98 = xor i32 %97, %96
  %99 = mul i32 %98, -1028477387
  %100 = lshr i32 %99, 16
  %101 = xor i32 %100, %99
  %102 = icmp eq i32 %101, 0
  %103 = select i1 %102, i32 1, i32 %101
  %104 = load i32, i32* %4, align 4
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %138

106:                                              ; preds = %91
  %107 = add nsw i32 %104, -1
  %108 = and i32 %103, %107
  %109 = load %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"** %79, align 8
  br label %110

110:                                              ; preds = %131, %106
  %111 = phi i32 [ 0, %106 ], [ %136, %131 ]
  %112 = phi i32 [ %108, %106 ], [ %135, %131 ]
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %109, i64 %113
  %115 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %109, i64 %113, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %109, i64 %113, i32 1
  %120 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %114, i64 0, i32 0, i32 0
  store i32 %93, i32* %120, align 4
  store i32 %103, i32* %119, align 4
  %121 = load i32, i32* %6, align 8
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %6, align 8
  br label %138

123:                                              ; preds = %110
  %124 = icmp eq i32 %103, %116
  br i1 %124, label %125, label %131

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %114, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %93, %127
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkPDFIndirectReference, SkPDFIndirectReference, SkTHashSet<SkPDFIndirectReference, SkGoodHash>::Traits>::Slot"* %114, i64 0, i32 0, i32 0
  store i32 %93, i32* %130, align 4
  br label %138

131:                                              ; preds = %125, %123
  %132 = add nsw i32 %112, -1
  %133 = icmp slt i32 %112, 1
  %134 = select i1 %133, i32 %104, i32 0
  %135 = add nsw i32 %132, %134
  %136 = add nuw nsw i32 %111, 1
  %137 = icmp eq i32 %136, %104
  br i1 %137, label %138, label %110

138:                                              ; preds = %131, %129, %118, %91, %86
  %139 = add nuw nsw i64 %87, 1
  %140 = icmp eq i64 %139, %80
  br i1 %140, label %81, label %86
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

declare i32 @_ZN13SkPDFDocument4emitERK11SkPDFObject22SkPDFIndirectReference(%class.SkPDFDocument*, %class.SkPDFObject* dereferenceable(8), i32) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN11SkPDFDevice18drawGlyphRunAsPathERK10SkGlyphRun7SkPointRK7SkPaintEN3$_18__invokeEPK6SkPathRK8SkMatrixPv"(%class.SkPath*, %class.SkMatrix* nocapture readonly dereferenceable(40), i8* nocapture) #8 align 2 {
  %4 = alloca %class.SkMatrix, align 4
  %5 = icmp eq %class.SkPath* %0, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #14
  %8 = bitcast %class.SkMatrix* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %8, i64 40, i1 false) #14
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = bitcast i8* %9 to %struct.SkPoint**
  %11 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds i8, i8* %2, i64 8
  %15 = bitcast i8* %14 to float*
  %16 = load float, float* %15, align 8
  %17 = fadd float %13, %16
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to float*
  %22 = load float, float* %21, align 4
  %23 = fadd float %19, %22
  %24 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %4, float %17, float %23) #14
  %25 = bitcast i8* %2 to %class.SkPath**
  %26 = load %class.SkPath*, %class.SkPath** %25, align 8
  %27 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %26, %class.SkPath* nonnull dereferenceable(16) %0, %class.SkMatrix* nonnull dereferenceable(40) %4, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #14
  br label %28

28:                                               ; preds = %3, %6
  %29 = getelementptr inbounds i8, i8* %2, i64 16
  %30 = bitcast i8* %29 to %struct.SkPoint**
  %31 = load %struct.SkPoint*, %struct.SkPoint** %30, align 8
  %32 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %31, i64 1
  store %struct.SkPoint* %32, %struct.SkPoint** %30, align 8
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare i32 @_ZN13SkPDFDocument21createMarkIdForNodeIdEi(%class.SkPDFDocument*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN9SkWStream14writeDecAsTextEi(%class.SkWStream*, i32) local_unnamed_addr #2

declare i64 @_ZN5SkUTF7ToUTF16EiPt(i32, i16*) local_unnamed_addr #2

declare %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph*) local_unnamed_addr #2

declare i32 @_Z16SkFloatToDecimalfPc(float, i8*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #3

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.324* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEvT0_SA_T_"(%struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %279, %2
  %4 = phi %struct.SkPDFIndirectReference* [ %1, %2 ], [ %259, %279 ]
  %5 = phi %struct.SkPDFIndirectReference* [ %0, %2 ], [ %15, %279 ]
  %6 = ptrtoint %struct.SkPDFIndirectReference* %4 to i64
  %7 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %4, i64 -1
  %8 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %7, i64 0, i32 0
  %9 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %4, i64 -1, i32 0
  %10 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %7, i64 0, i32 0
  %11 = ptrtoint %struct.SkPDFIndirectReference* %4 to i64
  br label %12

12:                                               ; preds = %288, %3
  %13 = phi %struct.SkPDFIndirectReference* [ %5, %3 ], [ %289, %288 ]
  br label %14

14:                                               ; preds = %213, %12
  %15 = phi %struct.SkPDFIndirectReference* [ %13, %12 ], [ %200, %213 ]
  %16 = ptrtoint %struct.SkPDFIndirectReference* %15 to i64
  %17 = sub i64 %6, %16
  %18 = ashr exact i64 %17, 2
  switch i64 %18, label %84 [
    i64 0, label %292
    i64 1, label %292
    i64 2, label %19
    i64 3, label %26
    i64 4, label %47
    i64 5, label %78
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %4, i64 -1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %25, label %292

25:                                               ; preds = %19
  store i32 %21, i32* %22, align 4
  store i32 %23, i32* %20, align 4
  br label %292

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %28, %30
  %32 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %4, i64 -1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, %28
  br i1 %31, label %41, label %35

35:                                               ; preds = %26
  br i1 %34, label %36, label %292

36:                                               ; preds = %35
  store i32 %33, i32* %27, align 4
  store i32 %28, i32* %32, align 4
  %37 = load i32, i32* %27, align 4
  %38 = load i32, i32* %29, align 4
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %40, label %292

40:                                               ; preds = %36
  store i32 %37, i32* %29, align 4
  store i32 %38, i32* %27, align 4
  br label %292

41:                                               ; preds = %26
  br i1 %34, label %42, label %43

42:                                               ; preds = %41
  store i32 %33, i32* %29, align 4
  store i32 %30, i32* %32, align 4
  br label %292

43:                                               ; preds = %41
  store i32 %28, i32* %29, align 4
  store i32 %30, i32* %27, align 4
  %44 = load i32, i32* %32, align 4
  %45 = icmp slt i32 %44, %30
  br i1 %45, label %46, label %292

46:                                               ; preds = %43
  store i32 %44, i32* %27, align 4
  store i32 %30, i32* %32, align 4
  br label %292

47:                                               ; preds = %14
  %48 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %49, %51
  %53 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 2, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, %49
  br i1 %52, label %60, label %56

56:                                               ; preds = %47
  br i1 %55, label %57, label %65

57:                                               ; preds = %56
  store i32 %54, i32* %48, align 4
  store i32 %49, i32* %53, align 4
  %58 = icmp slt i32 %54, %51
  br i1 %58, label %59, label %65

59:                                               ; preds = %57
  store i32 %54, i32* %50, align 4
  store i32 %51, i32* %48, align 4
  br label %65

60:                                               ; preds = %47
  br i1 %55, label %61, label %62

61:                                               ; preds = %60
  store i32 %54, i32* %50, align 4
  store i32 %51, i32* %53, align 4
  br label %65

62:                                               ; preds = %60
  store i32 %49, i32* %50, align 4
  store i32 %51, i32* %48, align 4
  %63 = icmp slt i32 %54, %51
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  store i32 %54, i32* %48, align 4
  store i32 %51, i32* %53, align 4
  br label %65

65:                                               ; preds = %64, %62, %61, %59, %57, %56
  %66 = phi i32 [ %51, %61 ], [ %54, %56 ], [ %49, %59 ], [ %49, %57 ], [ %51, %64 ], [ %54, %62 ]
  %67 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %4, i64 -1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, %66
  br i1 %69, label %70, label %292

70:                                               ; preds = %65
  store i32 %68, i32* %53, align 4
  store i32 %66, i32* %67, align 4
  %71 = load i32, i32* %53, align 4
  %72 = load i32, i32* %48, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %292

74:                                               ; preds = %70
  store i32 %71, i32* %48, align 4
  store i32 %72, i32* %53, align 4
  %75 = load i32, i32* %50, align 4
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %292

77:                                               ; preds = %74
  store i32 %71, i32* %50, align 4
  store i32 %75, i32* %48, align 4
  br label %292

78:                                               ; preds = %14
  %79 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 1
  %80 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 2
  %81 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 3
  %82 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %4, i64 -1
  %83 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEjT0_SA_SA_SA_SA_T_"(%struct.SkPDFIndirectReference* %15, %struct.SkPDFIndirectReference* %79, %struct.SkPDFIndirectReference* %80, %struct.SkPDFIndirectReference* %81, %struct.SkPDFIndirectReference* %82)
  br label %292

84:                                               ; preds = %14
  %85 = icmp slt i64 %17, 124
  br i1 %85, label %86, label %135

86:                                               ; preds = %84
  %87 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 2
  %88 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %89, %91
  %93 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %87, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, %89
  br i1 %92, label %100, label %96

96:                                               ; preds = %86
  br i1 %95, label %97, label %105

97:                                               ; preds = %96
  store i32 %94, i32* %88, align 4
  store i32 %89, i32* %93, align 4
  %98 = icmp slt i32 %94, %91
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  store i32 %94, i32* %90, align 4
  store i32 %91, i32* %88, align 4
  br label %105

100:                                              ; preds = %86
  br i1 %95, label %101, label %102

101:                                              ; preds = %100
  store i32 %94, i32* %90, align 4
  store i32 %91, i32* %93, align 4
  br label %105

102:                                              ; preds = %100
  store i32 %89, i32* %90, align 4
  store i32 %91, i32* %88, align 4
  %103 = icmp slt i32 %94, %91
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  store i32 %94, i32* %88, align 4
  store i32 %91, i32* %93, align 4
  br label %105

105:                                              ; preds = %104, %102, %101, %99, %97, %96
  %106 = phi i32 [ %94, %96 ], [ %89, %97 ], [ %89, %99 ], [ %91, %101 ], [ %94, %102 ], [ %91, %104 ]
  %107 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 3
  %108 = icmp eq %struct.SkPDFIndirectReference* %107, %4
  br i1 %108, label %292, label %109

109:                                              ; preds = %105, %133
  %110 = phi i32 [ %134, %133 ], [ %106, %105 ]
  %111 = phi %struct.SkPDFIndirectReference* [ %112, %133 ], [ %87, %105 ]
  %112 = phi %struct.SkPDFIndirectReference* [ %131, %133 ], [ %107, %105 ]
  %113 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %112, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp slt i32 %114, %110
  br i1 %115, label %116, label %130

116:                                              ; preds = %109
  store i32 %110, i32* %113, align 4
  %117 = icmp eq %struct.SkPDFIndirectReference* %111, %15
  br i1 %117, label %127, label %118

118:                                              ; preds = %116, %123
  %119 = phi %struct.SkPDFIndirectReference* [ %124, %123 ], [ %111, %116 ]
  %120 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %119, i64 -1, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %114, %121
  br i1 %122, label %123, label %127

123:                                              ; preds = %118
  %124 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %119, i64 -1
  %125 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %119, i64 0, i32 0
  store i32 %121, i32* %125, align 4
  %126 = icmp eq %struct.SkPDFIndirectReference* %124, %15
  br i1 %126, label %127, label %118

127:                                              ; preds = %123, %118, %116
  %128 = phi %struct.SkPDFIndirectReference* [ %15, %116 ], [ %119, %118 ], [ %15, %123 ]
  %129 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %128, i64 0, i32 0
  store i32 %114, i32* %129, align 4
  br label %130

130:                                              ; preds = %127, %109
  %131 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %112, i64 1
  %132 = icmp eq %struct.SkPDFIndirectReference* %131, %4
  br i1 %132, label %292, label %133

133:                                              ; preds = %130
  %134 = load i32, i32* %113, align 4
  br label %109

135:                                              ; preds = %84
  %136 = icmp sgt i64 %17, 3996
  %137 = sdiv i64 %18, 2
  %138 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 %137
  br i1 %136, label %139, label %144

139:                                              ; preds = %135
  %140 = sdiv i64 %18, 4
  %141 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 %140
  %142 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %138, i64 %140
  %143 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEjT0_SA_SA_SA_SA_T_"(%struct.SkPDFIndirectReference* %15, %struct.SkPDFIndirectReference* %141, %struct.SkPDFIndirectReference* %138, %struct.SkPDFIndirectReference* %142, %struct.SkPDFIndirectReference* %7)
  br label %164

144:                                              ; preds = %135
  %145 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp slt i32 %146, %148
  %150 = load i32, i32* %8, align 4
  %151 = icmp slt i32 %150, %146
  br i1 %149, label %158, label %152

152:                                              ; preds = %144
  br i1 %151, label %153, label %164

153:                                              ; preds = %152
  store i32 %150, i32* %145, align 4
  store i32 %146, i32* %8, align 4
  %154 = load i32, i32* %145, align 4
  %155 = load i32, i32* %147, align 4
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %157, label %164

157:                                              ; preds = %153
  store i32 %154, i32* %147, align 4
  store i32 %155, i32* %145, align 4
  br label %164

158:                                              ; preds = %144
  br i1 %151, label %159, label %160

159:                                              ; preds = %158
  store i32 %150, i32* %147, align 4
  store i32 %148, i32* %8, align 4
  br label %164

160:                                              ; preds = %158
  store i32 %146, i32* %147, align 4
  store i32 %148, i32* %145, align 4
  %161 = load i32, i32* %8, align 4
  %162 = icmp slt i32 %161, %148
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  store i32 %161, i32* %145, align 4
  store i32 %148, i32* %8, align 4
  br label %164

164:                                              ; preds = %163, %160, %159, %157, %153, %152, %139
  %165 = phi i32 [ %143, %139 ], [ 1, %159 ], [ 0, %152 ], [ 2, %157 ], [ 1, %153 ], [ 2, %163 ], [ 1, %160 ]
  %166 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %138, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %167, %169
  br i1 %170, label %224, label %171

171:                                              ; preds = %164, %217
  %172 = phi %struct.SkPDFIndirectReference* [ %173, %217 ], [ %7, %164 ]
  %173 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %172, i64 -1
  %174 = icmp eq %struct.SkPDFIndirectReference* %15, %173
  br i1 %174, label %175, label %217

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 1
  %177 = load i32, i32* %9, align 4
  %178 = icmp slt i32 %167, %177
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = icmp eq %struct.SkPDFIndirectReference* %176, %7
  br i1 %180, label %292, label %181

181:                                              ; preds = %179, %189
  %182 = phi %struct.SkPDFIndirectReference* [ %190, %189 ], [ %176, %179 ]
  %183 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %182, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = icmp slt i32 %167, %184
  br i1 %185, label %186, label %189

186:                                              ; preds = %181
  %187 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %182, i64 0, i32 0
  store i32 %177, i32* %187, align 4
  store i32 %184, i32* %10, align 4
  %188 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %182, i64 1
  br label %192

189:                                              ; preds = %181
  %190 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %182, i64 1
  %191 = icmp eq %struct.SkPDFIndirectReference* %190, %7
  br i1 %191, label %292, label %181

192:                                              ; preds = %186, %175
  %193 = phi %struct.SkPDFIndirectReference* [ %176, %175 ], [ %188, %186 ]
  %194 = icmp eq %struct.SkPDFIndirectReference* %193, %7
  br i1 %194, label %292, label %195

195:                                              ; preds = %192, %215
  %196 = phi %struct.SkPDFIndirectReference* [ %209, %215 ], [ %7, %192 ]
  %197 = phi %struct.SkPDFIndirectReference* [ %204, %215 ], [ %193, %192 ]
  %198 = load i32, i32* %166, align 4
  br label %199

199:                                              ; preds = %199, %195
  %200 = phi %struct.SkPDFIndirectReference* [ %197, %195 ], [ %204, %199 ]
  %201 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %200, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp slt i32 %198, %202
  %204 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %200, i64 1
  br i1 %203, label %205, label %199

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %200, i64 0, i32 0
  br label %207

207:                                              ; preds = %205, %207
  %208 = phi %struct.SkPDFIndirectReference* [ %209, %207 ], [ %196, %205 ]
  %209 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %208, i64 -1
  %210 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %208, i64 -1, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp slt i32 %198, %211
  br i1 %212, label %207, label %213

213:                                              ; preds = %207
  %214 = icmp ult %struct.SkPDFIndirectReference* %200, %209
  br i1 %214, label %215, label %14

215:                                              ; preds = %213
  %216 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %209, i64 0, i32 0
  store i32 %211, i32* %206, align 4
  store i32 %202, i32* %216, align 4
  br label %195

217:                                              ; preds = %171
  %218 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %173, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp slt i32 %219, %169
  br i1 %220, label %221, label %171

221:                                              ; preds = %217
  %222 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %173, i64 0, i32 0
  store i32 %219, i32* %166, align 4
  store i32 %167, i32* %222, align 4
  %223 = add i32 %165, 1
  br label %224

224:                                              ; preds = %164, %221
  %225 = phi %struct.SkPDFIndirectReference* [ %173, %221 ], [ %7, %164 ]
  %226 = phi i32 [ %223, %221 ], [ %165, %164 ]
  %227 = ptrtoint %struct.SkPDFIndirectReference* %15 to i64
  %228 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %15, i64 1
  %229 = icmp ult %struct.SkPDFIndirectReference* %228, %225
  br i1 %229, label %230, label %258

230:                                              ; preds = %224, %253
  %231 = phi %struct.SkPDFIndirectReference* [ %247, %253 ], [ %225, %224 ]
  %232 = phi %struct.SkPDFIndirectReference* [ %242, %253 ], [ %228, %224 ]
  %233 = phi i32 [ %255, %253 ], [ %226, %224 ]
  %234 = phi %struct.SkPDFIndirectReference* [ %257, %253 ], [ %138, %224 ]
  %235 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %234, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %237, %230
  %238 = phi %struct.SkPDFIndirectReference* [ %232, %230 ], [ %242, %237 ]
  %239 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %238, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp slt i32 %240, %236
  %242 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %238, i64 1
  br i1 %241, label %237, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %238, i64 0, i32 0
  br label %245

245:                                              ; preds = %243, %245
  %246 = phi %struct.SkPDFIndirectReference* [ %247, %245 ], [ %231, %243 ]
  %247 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %246, i64 -1
  %248 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %246, i64 -1, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp slt i32 %249, %236
  br i1 %250, label %251, label %245

251:                                              ; preds = %245
  %252 = icmp ugt %struct.SkPDFIndirectReference* %238, %247
  br i1 %252, label %258, label %253

253:                                              ; preds = %251
  %254 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %247, i64 0, i32 0
  store i32 %249, i32* %244, align 4
  store i32 %240, i32* %254, align 4
  %255 = add i32 %233, 1
  %256 = icmp eq %struct.SkPDFIndirectReference* %234, %238
  %257 = select i1 %256, %struct.SkPDFIndirectReference* %247, %struct.SkPDFIndirectReference* %234
  br label %230

258:                                              ; preds = %251, %224
  %259 = phi %struct.SkPDFIndirectReference* [ %228, %224 ], [ %238, %251 ]
  %260 = phi i32 [ %226, %224 ], [ %233, %251 ]
  %261 = phi %struct.SkPDFIndirectReference* [ %138, %224 ], [ %234, %251 ]
  %262 = icmp eq %struct.SkPDFIndirectReference* %259, %261
  br i1 %262, label %271, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %261, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = icmp slt i32 %265, %267
  br i1 %268, label %269, label %271

269:                                              ; preds = %263
  store i32 %265, i32* %266, align 4
  store i32 %267, i32* %264, align 4
  %270 = add i32 %260, 1
  br label %271

271:                                              ; preds = %258, %269, %263
  %272 = phi i32 [ %270, %269 ], [ %260, %263 ], [ %260, %258 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %271
  %275 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEbT0_SA_T_"(%struct.SkPDFIndirectReference* %15, %struct.SkPDFIndirectReference* %259)
  %276 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %259, i64 1
  %277 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEbT0_SA_T_"(%struct.SkPDFIndirectReference* %276, %struct.SkPDFIndirectReference* %4)
  br i1 %277, label %278, label %280

278:                                              ; preds = %274
  br i1 %275, label %292, label %279

279:                                              ; preds = %278, %290
  br label %3

280:                                              ; preds = %274
  br i1 %275, label %288, label %281

281:                                              ; preds = %280, %271
  %282 = ptrtoint %struct.SkPDFIndirectReference* %259 to i64
  %283 = sub i64 %282, %227
  %284 = sub i64 %11, %282
  %285 = icmp slt i64 %283, %284
  br i1 %285, label %286, label %290

286:                                              ; preds = %281
  tail call fastcc void @"_ZNSt3__16__sortIRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEvT0_SA_T_"(%struct.SkPDFIndirectReference* %15, %struct.SkPDFIndirectReference* %259)
  %287 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %259, i64 1
  br label %288

288:                                              ; preds = %286, %280
  %289 = phi %struct.SkPDFIndirectReference* [ %276, %280 ], [ %287, %286 ]
  br label %12

290:                                              ; preds = %281
  %291 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %259, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEvT0_SA_T_"(%struct.SkPDFIndirectReference* %291, %struct.SkPDFIndirectReference* %4)
  br label %279

292:                                              ; preds = %278, %192, %14, %14, %179, %189, %130, %105, %77, %74, %70, %65, %46, %43, %42, %40, %36, %35, %19, %25, %78
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEjT0_SA_SA_SA_SA_T_"(%struct.SkPDFIndirectReference* nocapture, %struct.SkPDFIndirectReference* nocapture, %struct.SkPDFIndirectReference* nocapture, %struct.SkPDFIndirectReference* nocapture, %struct.SkPDFIndirectReference* nocapture) unnamed_addr #12 {
  %6 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  %11 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %2, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %7
  br i1 %10, label %21, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %27

15:                                               ; preds = %14
  store i32 %12, i32* %6, align 4
  store i32 %7, i32* %11, align 4
  %16 = load i32, i32* %6, align 4
  %17 = load i32, i32* %8, align 4
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %27

19:                                               ; preds = %15
  store i32 %16, i32* %8, align 4
  store i32 %17, i32* %6, align 4
  %20 = load i32, i32* %11, align 4
  br label %27

21:                                               ; preds = %5
  br i1 %13, label %22, label %23

22:                                               ; preds = %21
  store i32 %12, i32* %8, align 4
  store i32 %9, i32* %11, align 4
  br label %27

23:                                               ; preds = %21
  store i32 %7, i32* %8, align 4
  store i32 %9, i32* %6, align 4
  %24 = load i32, i32* %11, align 4
  %25 = icmp slt i32 %24, %9
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  store i32 %24, i32* %6, align 4
  store i32 %9, i32* %11, align 4
  br label %27

27:                                               ; preds = %26, %23, %22, %19, %15, %14
  %28 = phi i32 [ %9, %22 ], [ %12, %14 ], [ %20, %19 ], [ %7, %15 ], [ %9, %26 ], [ %24, %23 ]
  %29 = phi i32 [ 1, %22 ], [ 0, %14 ], [ 2, %19 ], [ 1, %15 ], [ 2, %26 ], [ 1, %23 ]
  %30 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %3, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, %28
  br i1 %32, label %33, label %45

33:                                               ; preds = %27
  store i32 %31, i32* %11, align 4
  store i32 %28, i32* %30, align 4
  %34 = add nuw nsw i32 %29, 1
  %35 = load i32, i32* %11, align 4
  %36 = load i32, i32* %6, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %45

38:                                               ; preds = %33
  store i32 %35, i32* %6, align 4
  store i32 %36, i32* %11, align 4
  %39 = add nuw nsw i32 %29, 2
  %40 = load i32, i32* %6, align 4
  %41 = load i32, i32* %8, align 4
  %42 = icmp slt i32 %40, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  store i32 %40, i32* %8, align 4
  store i32 %41, i32* %6, align 4
  %44 = add nuw nsw i32 %29, 3
  br label %45

45:                                               ; preds = %27, %33, %38, %43
  %46 = phi i32 [ %44, %43 ], [ %39, %38 ], [ %34, %33 ], [ %29, %27 ]
  %47 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %4, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %30, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %51, label %68

51:                                               ; preds = %45
  store i32 %48, i32* %30, align 4
  store i32 %49, i32* %47, align 4
  %52 = add nuw nsw i32 %46, 1
  %53 = load i32, i32* %30, align 4
  %54 = load i32, i32* %11, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  store i32 %53, i32* %11, align 4
  store i32 %54, i32* %30, align 4
  %57 = add nuw nsw i32 %46, 2
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %6, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  store i32 %58, i32* %6, align 4
  store i32 %59, i32* %11, align 4
  %62 = add nuw nsw i32 %46, 3
  %63 = load i32, i32* %6, align 4
  %64 = load i32, i32* %8, align 4
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  store i32 %63, i32* %8, align 4
  store i32 %64, i32* %6, align 4
  %67 = add nuw nsw i32 %46, 4
  br label %68

68:                                               ; preds = %51, %61, %66, %56, %45
  %69 = phi i32 [ %67, %66 ], [ %62, %61 ], [ %57, %56 ], [ %52, %51 ], [ %46, %45 ]
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEbT0_SA_T_"(%struct.SkPDFIndirectReference*, %struct.SkPDFIndirectReference*) unnamed_addr #0 {
  %3 = ptrtoint %struct.SkPDFIndirectReference* %1 to i64
  %4 = ptrtoint %struct.SkPDFIndirectReference* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 2
  switch i64 %6, label %72 [
    i64 0, label %130
    i64 1, label %130
    i64 2, label %7
    i64 3, label %14
    i64 4, label %35
    i64 5, label %66
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %1, i64 -1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %13, label %130

13:                                               ; preds = %7
  store i32 %9, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  br label %130

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  %20 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %1, i64 -1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %16
  br i1 %19, label %29, label %23

23:                                               ; preds = %14
  br i1 %22, label %24, label %130

24:                                               ; preds = %23
  store i32 %21, i32* %15, align 4
  store i32 %16, i32* %20, align 4
  %25 = load i32, i32* %15, align 4
  %26 = load i32, i32* %17, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %28, label %130

28:                                               ; preds = %24
  store i32 %25, i32* %17, align 4
  store i32 %26, i32* %15, align 4
  br label %130

29:                                               ; preds = %14
  br i1 %22, label %30, label %31

30:                                               ; preds = %29
  store i32 %21, i32* %17, align 4
  store i32 %18, i32* %20, align 4
  br label %130

31:                                               ; preds = %29
  store i32 %16, i32* %17, align 4
  store i32 %18, i32* %15, align 4
  %32 = load i32, i32* %20, align 4
  %33 = icmp slt i32 %32, %18
  br i1 %33, label %34, label %130

34:                                               ; preds = %31
  store i32 %32, i32* %15, align 4
  store i32 %18, i32* %20, align 4
  br label %130

35:                                               ; preds = %2
  %36 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %37, %39
  %41 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 2, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, %37
  br i1 %40, label %48, label %44

44:                                               ; preds = %35
  br i1 %43, label %45, label %53

45:                                               ; preds = %44
  store i32 %42, i32* %36, align 4
  store i32 %37, i32* %41, align 4
  %46 = icmp slt i32 %42, %39
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  store i32 %42, i32* %38, align 4
  store i32 %39, i32* %36, align 4
  br label %53

48:                                               ; preds = %35
  br i1 %43, label %49, label %50

49:                                               ; preds = %48
  store i32 %42, i32* %38, align 4
  store i32 %39, i32* %41, align 4
  br label %53

50:                                               ; preds = %48
  store i32 %37, i32* %38, align 4
  store i32 %39, i32* %36, align 4
  %51 = icmp slt i32 %42, %39
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  store i32 %42, i32* %36, align 4
  store i32 %39, i32* %41, align 4
  br label %53

53:                                               ; preds = %52, %50, %49, %47, %45, %44
  %54 = phi i32 [ %39, %49 ], [ %42, %44 ], [ %37, %47 ], [ %37, %45 ], [ %39, %52 ], [ %42, %50 ]
  %55 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %1, i64 -1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, %54
  br i1 %57, label %58, label %130

58:                                               ; preds = %53
  store i32 %56, i32* %41, align 4
  store i32 %54, i32* %55, align 4
  %59 = load i32, i32* %41, align 4
  %60 = load i32, i32* %36, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %130

62:                                               ; preds = %58
  store i32 %59, i32* %36, align 4
  store i32 %60, i32* %41, align 4
  %63 = load i32, i32* %38, align 4
  %64 = icmp slt i32 %59, %63
  br i1 %64, label %65, label %130

65:                                               ; preds = %62
  store i32 %59, i32* %38, align 4
  store i32 %63, i32* %36, align 4
  br label %130

66:                                               ; preds = %2
  %67 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 1
  %68 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 2
  %69 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 3
  %70 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %1, i64 -1
  %71 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZL4sortRK10SkTHashSetI22SkPDFIndirectReference10SkGoodHashEE3$_6PS2_EEjT0_SA_SA_SA_SA_T_"(%struct.SkPDFIndirectReference* %0, %struct.SkPDFIndirectReference* %67, %struct.SkPDFIndirectReference* %68, %struct.SkPDFIndirectReference* %69, %struct.SkPDFIndirectReference* %70)
  br label %130

72:                                               ; preds = %2
  %73 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 2
  %74 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %75, %77
  %79 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %73, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %80, %75
  br i1 %78, label %86, label %82

82:                                               ; preds = %72
  br i1 %81, label %83, label %91

83:                                               ; preds = %82
  store i32 %80, i32* %74, align 4
  store i32 %75, i32* %79, align 4
  %84 = icmp slt i32 %80, %77
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  store i32 %80, i32* %76, align 4
  store i32 %77, i32* %74, align 4
  br label %91

86:                                               ; preds = %72
  br i1 %81, label %87, label %88

87:                                               ; preds = %86
  store i32 %80, i32* %76, align 4
  store i32 %77, i32* %79, align 4
  br label %91

88:                                               ; preds = %86
  store i32 %75, i32* %76, align 4
  store i32 %77, i32* %74, align 4
  %89 = icmp slt i32 %80, %77
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  store i32 %80, i32* %74, align 4
  store i32 %77, i32* %79, align 4
  br label %91

91:                                               ; preds = %82, %83, %85, %87, %88, %90
  %92 = phi i32 [ %80, %82 ], [ %75, %83 ], [ %75, %85 ], [ %77, %87 ], [ %80, %88 ], [ %77, %90 ]
  %93 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %0, i64 3
  %94 = icmp eq %struct.SkPDFIndirectReference* %93, %1
  br i1 %94, label %130, label %95

95:                                               ; preds = %91, %124
  %96 = phi i32 [ %126, %124 ], [ %92, %91 ]
  %97 = phi %struct.SkPDFIndirectReference* [ %99, %124 ], [ %73, %91 ]
  %98 = phi i32 [ %121, %124 ], [ 0, %91 ]
  %99 = phi %struct.SkPDFIndirectReference* [ %122, %124 ], [ %93, %91 ]
  %100 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, %96
  br i1 %102, label %103, label %120

103:                                              ; preds = %95
  %104 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 0, i32 0
  store i32 %96, i32* %104, align 4
  %105 = icmp eq %struct.SkPDFIndirectReference* %97, %0
  br i1 %105, label %115, label %106

106:                                              ; preds = %103, %111
  %107 = phi %struct.SkPDFIndirectReference* [ %112, %111 ], [ %97, %103 ]
  %108 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %107, i64 -1, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp slt i32 %101, %109
  br i1 %110, label %111, label %115

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %107, i64 -1
  %113 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %107, i64 0, i32 0
  store i32 %109, i32* %113, align 4
  %114 = icmp eq %struct.SkPDFIndirectReference* %112, %0
  br i1 %114, label %115, label %106

115:                                              ; preds = %106, %111, %103
  %116 = phi %struct.SkPDFIndirectReference* [ %0, %103 ], [ %107, %106 ], [ %0, %111 ]
  %117 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %116, i64 0, i32 0
  store i32 %101, i32* %117, align 4
  %118 = add i32 %98, 1
  %119 = icmp eq i32 %118, 8
  br i1 %119, label %127, label %120

120:                                              ; preds = %115, %95
  %121 = phi i32 [ %118, %115 ], [ %98, %95 ]
  %122 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 1
  %123 = icmp eq %struct.SkPDFIndirectReference* %122, %1
  br i1 %123, label %130, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br label %95

127:                                              ; preds = %115
  %128 = getelementptr inbounds %struct.SkPDFIndirectReference, %struct.SkPDFIndirectReference* %99, i64 1
  %129 = icmp eq %struct.SkPDFIndirectReference* %128, %1
  br label %130

130:                                              ; preds = %120, %127, %91, %65, %62, %58, %53, %34, %31, %30, %28, %24, %23, %7, %13, %2, %2, %66
  %131 = phi i1 [ true, %66 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %7 ], [ true, %23 ], [ true, %24 ], [ true, %28 ], [ true, %30 ], [ true, %31 ], [ true, %34 ], [ true, %53 ], [ true, %58 ], [ true, %62 ], [ true, %65 ], [ true, %91 ], [ %129, %127 ], [ true, %120 ]
  ret i1 %131
}

declare i8* @_ZN10SkPDFUtils13BlendModeNameE11SkBlendMode(i32) local_unnamed_addr #2

declare i32 @_ZNK11SkClipStack15getTopmostGenIDEv(%class.SkClipStack*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare i32 @_Z15SkPDFMakeShaderP13SkPDFDocumentP8SkShaderRK8SkMatrixRK7SkIRect8SkRGBA4fIL11SkAlphaType3EE(%class.SkPDFDocument*, %class.SkShader*, %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), <2 x float>, <2 x float>) local_unnamed_addr #2

declare i32 @_ZN17SkPDFGraphicState23GetGraphicStateForPaintEP13SkPDFDocumentRK7SkPaint(%class.SkPDFDocument*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #2

declare void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.230* sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.trunc.f32(float) #9

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.232*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI21SkPDFNamedDestinationNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.105"*, %struct.SkPDFNamedDestination* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.SkPDFNamedDestination** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.105"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.105"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.SkPDFNamedDestination** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %struct.SkPDFNamedDestination*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.SkPDFNamedDestination* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %33, i64 %9
  %35 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %33, i64 %32
  %36 = ptrtoint %struct.SkPDFNamedDestination* %35 to i64
  %37 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %1, i64 0, i32 0, i32 0
  %38 = bitcast %struct.SkPDFNamedDestination* %1 to i64*
  %39 = load i64, i64* %38, align 8
  store %class.SkData* null, %class.SkData** %37, align 8
  %40 = bitcast %struct.SkPDFNamedDestination* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %33, i64 %9, i32 1
  %42 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %1, i64 0, i32 1
  %43 = bitcast %struct.SkPoint* %41 to i8*
  %44 = bitcast %struct.SkPoint* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 12, i1 false) #14
  %45 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %34, i64 1
  %46 = ptrtoint %struct.SkPDFNamedDestination* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %0, i64 0, i32 0, i32 0
  %48 = load %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination** %47, align 8
  %49 = load %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination** %3, align 8
  %50 = icmp eq %struct.SkPDFNamedDestination* %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %31
  %52 = ptrtoint %struct.SkPDFNamedDestination* %48 to i64
  br label %70

53:                                               ; preds = %31, %53
  %54 = phi %struct.SkPDFNamedDestination* [ %56, %53 ], [ %34, %31 ]
  %55 = phi %struct.SkPDFNamedDestination* [ %57, %53 ], [ %49, %31 ]
  %56 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %54, i64 -1
  %57 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %55, i64 -1
  %58 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %57, i64 0, i32 0, i32 0
  %59 = bitcast %struct.SkPDFNamedDestination* %57 to i64*
  %60 = load i64, i64* %59, align 8
  store %class.SkData* null, %class.SkData** %58, align 8
  %61 = bitcast %struct.SkPDFNamedDestination* %56 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %54, i64 -1, i32 1
  %63 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %55, i64 -1, i32 1
  %64 = bitcast %struct.SkPoint* %62 to i8*
  %65 = bitcast %struct.SkPoint* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 12, i1 false) #14
  %66 = icmp eq %struct.SkPDFNamedDestination* %57, %48
  br i1 %66, label %67, label %53

67:                                               ; preds = %53
  %68 = load i64, i64* %6, align 8
  %69 = load %struct.SkPDFNamedDestination*, %struct.SkPDFNamedDestination** %3, align 8
  br label %70

70:                                               ; preds = %51, %67
  %71 = phi %struct.SkPDFNamedDestination* [ %48, %51 ], [ %69, %67 ]
  %72 = phi %struct.SkPDFNamedDestination* [ %34, %51 ], [ %56, %67 ]
  %73 = phi i64 [ %52, %51 ], [ %68, %67 ]
  %74 = ptrtoint %struct.SkPDFNamedDestination* %72 to i64
  store i64 %74, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %75 = inttoptr i64 %73 to %struct.SkPDFNamedDestination*
  %76 = icmp eq %struct.SkPDFNamedDestination* %71, %75
  br i1 %76, label %91, label %77

77:                                               ; preds = %70, %89
  %78 = phi %struct.SkPDFNamedDestination* [ %79, %89 ], [ %71, %70 ]
  %79 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %78, i64 -1
  %80 = getelementptr inbounds %struct.SkPDFNamedDestination, %struct.SkPDFNamedDestination* %79, i64 0, i32 0, i32 0
  %81 = load %class.SkData*, %class.SkData** %80, align 8
  %82 = icmp eq %class.SkData* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %class.SkData, %class.SkData* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %81) #14
  %88 = bitcast %class.SkData* %81 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %88) #14
  br label %89

89:                                               ; preds = %87, %83, %77
  %90 = icmp eq %struct.SkPDFNamedDestination* %79, %75
  br i1 %90, label %91, label %77

91:                                               ; preds = %89, %70
  %92 = icmp eq i64 %73, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %94) #15
  br label %95

95:                                               ; preds = %91, %93
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI9SkPDFLinkNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.101"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.101"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.101"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.101"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.101"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.101"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.101"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.101"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.101"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.101"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.101"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %struct.SkPDFLink** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.101"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.101"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.101"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.101"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !108

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.101"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.101"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.101"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.101"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.101"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.101"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.101"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.101"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.101"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.101"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.101"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.101"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.101"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.101"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.101"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.101"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.101"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.101"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.101"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.101"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.101"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.101"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.101"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.101"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.101"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.101"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.101"*
  %138 = icmp eq %"class.std::__1::unique_ptr.101"* %133, %137
  br i1 %138, label %159, label %139

139:                                              ; preds = %132, %157
  %140 = phi %"class.std::__1::unique_ptr.101"* [ %141, %157 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %struct.SkPDFLink*, %struct.SkPDFLink** %142, align 8
  store %struct.SkPDFLink* null, %struct.SkPDFLink** %142, align 8
  %144 = icmp eq %struct.SkPDFLink* %143, null
  br i1 %144, label %157, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %struct.SkPDFLink, %struct.SkPDFLink* %143, i64 0, i32 2, i32 0
  %147 = load %class.SkData*, %class.SkData** %146, align 8
  %148 = icmp eq %class.SkData* %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %class.SkData, %class.SkData* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw add i32* %150, i32 -1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %147) #14
  %154 = bitcast %class.SkData* %147 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %154) #14
  br label %155

155:                                              ; preds = %153, %149, %145
  %156 = bitcast %struct.SkPDFLink* %143 to i8*
  tail call void @_ZdlPv(i8* %156) #15
  br label %157

157:                                              ; preds = %155, %139
  %158 = icmp eq %"class.std::__1::unique_ptr.101"* %141, %137
  br i1 %158, label %159, label %139

159:                                              ; preds = %157, %132
  %160 = icmp eq i64 %135, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %162) #15
  br label %163

163:                                              ; preds = %159, %161
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_2S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkWStream***
  %3 = load %class.SkWStream**, %class.SkWStream*** %2, align 8
  %4 = load %class.SkWStream*, %class.SkWStream** %3, align 8
  %5 = bitcast %class.SkWStream* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i64 3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_3S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkClusterator**
  %3 = load %class.SkClusterator*, %class.SkClusterator** %2, align 8
  %4 = getelementptr inbounds %class.SkClusterator, %class.SkClusterator* %3, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !97
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %9 = bitcast [8 x i8]* %8 to %class.SkWStream***
  %10 = load %class.SkWStream**, %class.SkWStream*** %9, align 8
  %11 = load %class.SkWStream*, %class.SkWStream** %10, align 8
  %12 = bitcast %class.SkWStream* %11 to i1 (%class.SkWStream*, i8*, i64)***
  %13 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %13, i64 2
  %15 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.SkWStream* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 4) #14
  br label %17

17:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.360"**
  %3 = load %"class.std::__1::__function::__default_alloc_func.360"*, %"class.std::__1::__function::__default_alloc_func.360"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.360", %"class.std::__1::__function::__default_alloc_func.360"* %3, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %5, align 1, !range !97
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.360", %"class.std::__1::__function::__default_alloc_func.360"* %3, i64 0, i32 0, i32 1
  %10 = load %"class.(anonymous namespace)::GlyphPositioner"*, %"class.(anonymous namespace)::GlyphPositioner"** %9, align 8
  %11 = getelementptr inbounds %"class.(anonymous namespace)::GlyphPositioner", %"class.(anonymous namespace)::GlyphPositioner"* %10, i64 0, i32 5
  %12 = load i8, i8* %11, align 1, !range !97
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.(anonymous namespace)::GlyphPositioner"* %10 to %class.SkWStream**
  %16 = load %class.SkWStream*, %class.SkWStream** %15, align 8
  %17 = bitcast %class.SkWStream* %16 to i1 (%class.SkWStream*, i8*, i64)***
  %18 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %19 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %18, i64 2
  %20 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %19, align 8
  %21 = tail call zeroext i1 %20(%class.SkWStream* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5) #14
  store i8 0, i8* %11, align 1
  br label %22

22:                                               ; preds = %14, %8
  %23 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.360", %"class.std::__1::__function::__default_alloc_func.360"* %3, i64 0, i32 0, i32 2
  %24 = bitcast %class.SkDynamicMemoryWStream*** %23 to %class.SkWStream***
  %25 = load %class.SkWStream**, %class.SkWStream*** %24, align 8
  %26 = load %class.SkWStream*, %class.SkWStream** %25, align 8
  %27 = bitcast %class.SkWStream* %26 to i1 (%class.SkWStream*, i8*, i64)***
  %28 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %27, align 8
  %29 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %28, i64 2
  %30 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %29, align 8
  %31 = tail call zeroext i1 %30(%class.SkWStream* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i64 4) #14
  br label %32

32:                                               ; preds = %1, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #15, !noalias !109
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #15
  ret void
}

declare void @_ZN14SkMemoryStreamC1Ev(%class.SkMemoryStream*) unnamed_addr #2

declare void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray*) unnamed_addr #2

declare void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray*, i32) local_unnamed_addr #2

declare void @_ZN10SkPDFArray9appendIntEi(%class.SkPDFArray*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkPDFDevice21internalDrawImageRectE12SkKeyedImagePK6SkRectRS9_RK17SkSamplingOptionsRK7SkPaintRK8SkMatrixE3$_5S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1, !range !97
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %8 = bitcast [8 x i8]* %7 to %class.SkClipStackDevice**
  %9 = load %class.SkClipStackDevice*, %class.SkClipStackDevice** %8, align 8
  %10 = getelementptr inbounds %class.SkClipStackDevice, %class.SkClipStackDevice* %9, i64 0, i32 2
  tail call void @_ZN11SkClipStack7restoreEv(%class.SkClipStack* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

declare void @_ZN11SkClipStack7restoreEv(%class.SkClipStack*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapI11SkBitmapKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E6resizeEi(%class.SkTHashTable.30*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.30, %class.SkTHashTable.30* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.30, %class.SkTHashTable.30* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.30, %class.SkTHashTable.30* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.31, %class.SkAutoTArray.31* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.31* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %34

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 28) #14
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #15
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %19, i64 %13
  br label %21

21:                                               ; preds = %21, %12
  %22 = phi %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* [ %19, %12 ], [ %26, %21 ]
  %23 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22, i64 0, i32 0, i32 0, i32 1, i32 0
  %24 = bitcast %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 20, i1 false) #14
  store i32 -1, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22, i64 0, i32 1
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22, i64 1
  %27 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %26, %20
  br i1 %27, label %28, label %21

28:                                               ; preds = %21
  %29 = ptrtoint i8* %18 to i64
  %30 = load %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %7, align 8
  %31 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %30, null
  store i64 %29, i64* %8, align 8
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %30 to i8*
  tail call void @_ZdaPv(i8* %33) #15
  br label %34

34:                                               ; preds = %32, %28, %11
  %35 = icmp sgt i32 %4, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  %37 = inttoptr i64 %9 to %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*
  %38 = zext i32 %4 to i64
  br label %44

39:                                               ; preds = %52, %34
  %40 = icmp eq i64 %9, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %42) #15
  br label %43

43:                                               ; preds = %39, %41
  ret void

44:                                               ; preds = %52, %36
  %45 = phi i64 [ 0, %36 ], [ %53, %52 ]
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %37, i64 %45, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %37, i64 %45, i32 0
  %51 = tail call %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapI11SkBitmapKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_(%class.SkTHashTable.30* %0, %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* dereferenceable(24) %50)
  br label %52

52:                                               ; preds = %49, %44
  %53 = add nuw nsw i64 %45, 1
  %54 = icmp eq i64 %53, %38
  br i1 %54, label %39, label %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapI11SkBitmapKey22SkPDFIndirectReference10SkGoodHashE4PairES1_S5_E12uncheckedSetEOS5_(%class.SkTHashTable.30*, %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %4 = bitcast %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1 to i8*
  %5 = tail call i32 %3(i8* %4, i64 20, i32 0) #14
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 1, i32 %5
  %8 = getelementptr inbounds %class.SkTHashTable.30, %class.SkTHashTable.30* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %58

11:                                               ; preds = %2
  %12 = add nsw i32 %9, -1
  %13 = and i32 %7, %12
  %14 = getelementptr inbounds %class.SkTHashTable.30, %class.SkTHashTable.30* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %11, %51
  %19 = phi i32 [ 0, %11 ], [ %56, %51 ]
  %20 = phi i32 [ %13, %11 ], [ %55, %51 ]
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %15, i64 %21
  %23 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %15, i64 %21, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22, i64 0, i32 0
  %28 = bitcast %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %4, i64 20, i1 false) #14
  %29 = getelementptr inbounds %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %15, i64 %21, i32 0, i32 0, i32 1, i32 0
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %30, align 4
  store i32 %7, i32* %23, align 4
  %32 = getelementptr inbounds %class.SkTHashTable.30, %class.SkTHashTable.30* %0, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 8
  br label %58

35:                                               ; preds = %18
  %36 = icmp eq i32 %7, %24
  br i1 %36, label %37, label %51

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %15, i64 %21, i32 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %17, %39
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = bitcast %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22 to i8*
  %43 = tail call i32 @bcmp(i8* %4, i8* %42, i64 16) #14
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22 to i8*
  %47 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %22, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %4, i64 20, i1 false) #14
  %48 = getelementptr inbounds %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair", %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair, SkBitmapKey, SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair>::Slot"* %15, i64 %21, i32 0, i32 0, i32 1, i32 0
  %50 = load i32, i32* %48, align 4
  store i32 %50, i32* %49, align 4
  br label %58

51:                                               ; preds = %37, %41, %35
  %52 = add nsw i32 %20, -1
  %53 = icmp slt i32 %20, 1
  %54 = select i1 %53, i32 %9, i32 0
  %55 = add nsw i32 %52, %54
  %56 = add nuw nsw i32 %19, 1
  %57 = icmp slt i32 %56, %9
  br i1 %57, label %18, label %58

58:                                               ; preds = %51, %2, %45, %26
  %59 = phi %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* [ %47, %45 ], [ %27, %26 ], [ null, %2 ], [ null, %51 ]
  ret %"struct.SkTHashMap<SkBitmapKey, SkPDFIndirectReference, SkGoodHash>::Pair"* %59
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!8 = distinct !{!8, !9, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!9 = distinct !{!9, !"_ZN11SkImageInfo6MakeA8Eii"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN11SkImageInfo11MakeUnknownEii: argument 0"}
!12 = distinct !{!12, !"_ZN11SkImageInfo11MakeUnknownEii"}
!13 = !{!14, !11}
!14 = distinct !{!14, !15, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!15 = distinct !{!15, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5SkM445asM33Ev: argument 0"}
!18 = distinct !{!18, !"_ZNK5SkM445asM33Ev"}
!19 = !{!20, !17}
!20 = distinct !{!20, !21, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!21 = distinct !{!21, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!24 = distinct !{!24, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip: argument 0"}
!27 = distinct !{!27, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!30 = distinct !{!30, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN11SkPDFDevice19makeCongruentDeviceEv: argument 0"}
!33 = distinct !{!33, !"_ZN11SkPDFDevice19makeCongruentDeviceEv"}
!34 = !{!35, !32}
!35 = distinct !{!35, !36, !"_Z10sk_make_spI11SkPDFDeviceJ7SkISizeRP13SkPDFDocumentEE5sk_spIT_EDpOT0_: argument 0"}
!36 = distinct !{!36, !"_Z10sk_make_spI11SkPDFDeviceJ7SkISizeRP13SkPDFDocumentEE5sk_spIT_EDpOT0_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN10SkPDFUtils20GetShaderLocalMatrixEPK8SkShader: argument 0"}
!39 = distinct !{!39, !"_ZN10SkPDFUtils20GetShaderLocalMatrixEPK8SkShader"}
!40 = !{!41, !38}
!41 = distinct !{!41, !42, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!42 = distinct !{!42, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!45 = distinct !{!45, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!48 = distinct !{!48, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!51 = distinct !{!51, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!54 = distinct !{!54, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!55 = distinct !{!55, !56, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!56 = distinct !{!56, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!57 = !{!58, !60}
!58 = distinct !{!58, !59, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!59 = distinct !{!59, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!60 = distinct !{!60, !61, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE: argument 0"}
!61 = distinct !{!61, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_: argument 0"}
!64 = distinct !{!64, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN11SkPDFDevice19makeCongruentDeviceEv: argument 0"}
!67 = distinct !{!67, !"_ZN11SkPDFDevice19makeCongruentDeviceEv"}
!68 = !{!69, !66}
!69 = distinct !{!69, !70, !"_Z10sk_make_spI11SkPDFDeviceJ7SkISizeRP13SkPDFDocumentEE5sk_spIT_EDpOT0_: argument 0"}
!70 = distinct !{!70, !"_Z10sk_make_spI11SkPDFDeviceJ7SkISizeRP13SkPDFDocumentEE5sk_spIT_EDpOT0_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_Z9sk_ref_spI12SkMaskFilterE5sk_spIT_EPS2_: argument 0"}
!73 = distinct !{!73, !"_Z9sk_ref_spI12SkMaskFilterE5sk_spIT_EPS2_"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip: argument 0"}
!76 = distinct !{!76, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip"}
!77 = !{!78, !80}
!78 = distinct !{!78, !79, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!79 = distinct !{!79, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!80 = distinct !{!80, !81, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE: argument 0"}
!81 = distinct !{!81, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip: argument 0"}
!84 = distinct !{!84, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZL12color_filterPK7SkImageP13SkColorFilter: argument 0"}
!87 = distinct !{!87, !"_ZL12color_filterPK7SkImageP13SkColorFilter"}
!88 = !{!89, !91}
!89 = distinct !{!89, !90, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!90 = distinct !{!90, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!91 = distinct !{!91, !92, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE: argument 0"}
!92 = distinct !{!92, !"_ZN11SkImageInfo13MakeN32PremulE7SkISize5sk_spI12SkColorSpaceE"}
!93 = !{!94, !86}
!94 = distinct !{!94, !95, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_: argument 0"}
!95 = distinct !{!95, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_"}
!96 = !{!94}
!97 = !{i8 0, i8 2}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!101 = distinct !{!101, !102, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!105 = distinct !{!105, !"_ZN8SkMatrix5ScaleEff"}
!106 = distinct !{!106, !107}
!107 = !{!"llvm.loop.unroll.disable"}
!108 = distinct !{!108, !107}
!109 = !{!110, !112}
!110 = distinct !{!110, !111, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!112 = distinct !{!112, !113, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!113 = distinct !{!113, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkPDFDevice20internalDrawGlyphRunERK10SkGlyphRun7SkPointRK7SkPaintE3$_4FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
