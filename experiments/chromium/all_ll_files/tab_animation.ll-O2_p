; ModuleID = '../../chrome/browser/ui/views/tabs/tab_animation.cc'
source_filename = "../../chrome/browser/ui/views/tabs/tab_animation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%class.TabAnimation = type { %class.TabAnimationState, %class.TabAnimationState, %"class.base::TimeTicks", %"class.base::TimeDelta" }
%class.TabAnimationState = type { float, float, float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%class.TabWidthConstraints = type { %class.TabAnimationState, %struct.TabLayoutConstants, %struct.TabSizeInfo }
%struct.TabLayoutConstants = type { i32, i32 }
%struct.TabSizeInfo = type { i32, i32, i32, i32 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

@_ZN12TabAnimation18kAnimationDurationE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 200000 }, align 8
@_ZN12_GLOBAL__N_113kZeroDurationE = internal unnamed_addr constant %"class.base::TimeDelta" zeroinitializer, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN12TabAnimationC1E17TabAnimationState = hidden unnamed_addr alias void (%class.TabAnimation*, <2 x float>, <2 x float>), void (%class.TabAnimation*, <2 x float>, <2 x float>)* @_ZN12TabAnimationC2E17TabAnimationState
@_ZN12TabAnimationD1Ev = hidden unnamed_addr alias void (%class.TabAnimation*), void (%class.TabAnimation*)* @_ZN12TabAnimationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12TabAnimationC2E17TabAnimationState(%class.TabAnimation* nocapture, <2 x float>, <2 x float>) unnamed_addr #0 align 2 {
  %4 = bitcast %class.TabAnimation* %0 to <2 x float>*
  store <2 x float> %1, <2 x float>* %4, align 8
  %5 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 0, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  store <2 x float> %2, <2 x float>* %6, align 8
  %7 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %8 = bitcast %class.TabAnimationState* %7 to <2 x float>*
  store <2 x float> %1, <2 x float>* %8, align 8
  %9 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1, i32 2
  %10 = bitcast float* %9 to <2 x float>*
  store <2 x float> %2, <2 x float>* %10, align 8
  %11 = tail call i64 @_ZN4base9TimeTicks3NowEv() #7
  %12 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 3, i32 0
  store i64 0, i64* %13, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12TabAnimationD2Ev(%class.TabAnimation* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12TabAnimation9IsClosingEv(%class.TabAnimation*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK17TabAnimationState13IsFullyClosedEv(%class.TabAnimationState* %2) #7
  ret i1 %3
}

declare zeroext i1 @_ZNK17TabAnimationState13IsFullyClosedEv(%class.TabAnimationState*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12TabAnimation8IsClosedEv(%class.TabAnimation*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK17TabAnimationState13IsFullyClosedEv(%class.TabAnimationState* %2) #7
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i64 @_ZNK12TabAnimation16GetTimeRemainingEv(%class.TabAnimation* %0)
  %6 = icmp eq i64 %5, 0
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ false, %1 ], [ %6, %4 ]
  ret i1 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK12TabAnimation16GetTimeRemainingEv(%class.TabAnimation* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 3, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = icmp slt i64 %6, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %8, i64 %6) #7
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !2
  br label %26

18:                                               ; preds = %1
  %19 = add i64 %8, -9223372036854775807
  %20 = icmp ugt i64 %19, 1
  %21 = icmp eq i64 %8, %6
  %22 = or i1 %21, %20
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #7
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %26

26:                                               ; preds = %11, %18, %23
  %27 = phi i64 [ %17, %11 ], [ %6, %18 ], [ %6, %23 ]
  %28 = call i64 @_ZN4base9TimeTicks3NowEv() #7
  %29 = sub nsw i64 %27, %28
  store i64 %29, i64* %3, align 8
  %30 = icmp slt i64 %29, 0
  %31 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %32 = select i1 %30, %"class.base::TimeDelta"* @_ZN12_GLOBAL__N_113kZeroDurationE, %"class.base::TimeDelta"* %31
  %33 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %32, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret i64 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12TabAnimation9AnimateToE17TabAnimationState(%class.TabAnimation* nocapture, <2 x float>, <2 x float>) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 3, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %10 = bitcast %class.TabAnimationState* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 8
  %12 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1, i32 2
  %13 = bitcast float* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 8
  %15 = bitcast %class.TabAnimation* %0 to <2 x float>*
  br label %45

16:                                               ; preds = %3
  %17 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %19 = tail call i64 @_ZN4base9TimeTicks3NowEv() #7
  %20 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = sub nsw i64 %19, %21
  store i64 %22, i64* %18, align 8
  %23 = load i64, i64* %5, align 8
  %24 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %4, i64 %23) #7
  %25 = fcmp olt double %24, 0.000000e+00
  %26 = select i1 %25, double 0.000000e+00, double %24
  %27 = fcmp ogt double %26, 1.000000e+00
  %28 = select i1 %27, double 1.000000e+00, double %26
  %29 = call double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32 1, double %28) #7
  %30 = fptrunc double %29 to float
  %31 = bitcast %class.TabAnimation* %0 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 8
  %33 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 0, i32 2
  %34 = bitcast float* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 8
  %36 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %37 = bitcast %class.TabAnimationState* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 8
  %39 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1, i32 2
  %40 = bitcast float* %39 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 8
  %42 = call { <2 x float>, <2 x float> } @_ZN17TabAnimationState11InterpolateEfS_S_(float %30, <2 x float> %32, <2 x float> %35, <2 x float> %38, <2 x float> %41) #7
  %43 = extractvalue { <2 x float>, <2 x float> } %42, 0
  %44 = extractvalue { <2 x float>, <2 x float> } %42, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %45

45:                                               ; preds = %8, %16
  %46 = phi <2 x float>* [ %13, %8 ], [ %40, %16 ]
  %47 = phi <2 x float>* [ %10, %8 ], [ %37, %16 ]
  %48 = phi <2 x float>* [ %15, %8 ], [ %31, %16 ]
  %49 = phi <2 x float> [ %11, %8 ], [ %43, %16 ]
  %50 = phi <2 x float> [ %14, %8 ], [ %44, %16 ]
  store <2 x float> %49, <2 x float>* %48, align 8
  %51 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 0, i32 2
  %52 = bitcast float* %51 to <2 x float>*
  store <2 x float> %50, <2 x float>* %52, align 8
  store <2 x float> %1, <2 x float>* %47, align 8
  store <2 x float> %2, <2 x float>* %46, align 8
  %53 = call i64 @_ZN4base9TimeTicks3NowEv() #7
  %54 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %53, i64* %54, align 8
  store i64 200000, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK12TabAnimation15GetCurrentStateEv(%class.TabAnimation* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 3, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %8 = bitcast %class.TabAnimationState* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 8
  %10 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1, i32 2
  %11 = bitcast float* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 8
  br label %42

13:                                               ; preds = %1
  %14 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %16 = tail call i64 @_ZN4base9TimeTicks3NowEv() #7
  %17 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = sub nsw i64 %16, %18
  store i64 %19, i64* %15, align 8
  %20 = load i64, i64* %3, align 8
  %21 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %2, i64 %20)
  %22 = fcmp olt double %21, 0.000000e+00
  %23 = select i1 %22, double 0.000000e+00, double %21
  %24 = fcmp ogt double %23, 1.000000e+00
  %25 = select i1 %24, double 1.000000e+00, double %23
  %26 = call double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32 1, double %25) #7
  %27 = fptrunc double %26 to float
  %28 = bitcast %class.TabAnimation* %0 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 8
  %30 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 0, i32 2
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 8
  %33 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %34 = bitcast %class.TabAnimationState* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 8
  %36 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1, i32 2
  %37 = bitcast float* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 8
  %39 = call { <2 x float>, <2 x float> } @_ZN17TabAnimationState11InterpolateEfS_S_(float %27, <2 x float> %29, <2 x float> %32, <2 x float> %35, <2 x float> %38) #7
  %40 = extractvalue { <2 x float>, <2 x float> } %39, 0
  %41 = extractvalue { <2 x float>, <2 x float> } %39, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  br label %42

42:                                               ; preds = %13, %6
  %43 = phi <2 x float> [ %9, %6 ], [ %40, %13 ]
  %44 = phi <2 x float> [ %12, %6 ], [ %41, %13 ]
  %45 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %43, 0
  %46 = insertvalue { <2 x float>, <2 x float> } %45, <2 x float> %44, 1
  ret { <2 x float>, <2 x float> } %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12TabAnimation10RetargetToE17TabAnimationState(%class.TabAnimation* nocapture, <2 x float>, <2 x float>) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = tail call i64 @_ZNK12TabAnimation16GetTimeRemainingEv(%class.TabAnimation* %0)
  %6 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 3, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %11 = bitcast %class.TabAnimationState* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 8
  %13 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1, i32 2
  %14 = bitcast float* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 8
  %16 = bitcast %class.TabAnimation* %0 to <2 x float>*
  br label %46

17:                                               ; preds = %3
  %18 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %20 = tail call i64 @_ZN4base9TimeTicks3NowEv() #7
  %21 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = sub nsw i64 %20, %22
  store i64 %23, i64* %19, align 8
  %24 = load i64, i64* %6, align 8
  %25 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %4, i64 %24) #7
  %26 = fcmp olt double %25, 0.000000e+00
  %27 = select i1 %26, double 0.000000e+00, double %25
  %28 = fcmp ogt double %27, 1.000000e+00
  %29 = select i1 %28, double 1.000000e+00, double %27
  %30 = call double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32 1, double %29) #7
  %31 = fptrunc double %30 to float
  %32 = bitcast %class.TabAnimation* %0 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 8
  %34 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 0, i32 2
  %35 = bitcast float* %34 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 8
  %37 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %38 = bitcast %class.TabAnimationState* %37 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 8
  %40 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1, i32 2
  %41 = bitcast float* %40 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 8
  %43 = call { <2 x float>, <2 x float> } @_ZN17TabAnimationState11InterpolateEfS_S_(float %31, <2 x float> %33, <2 x float> %36, <2 x float> %39, <2 x float> %42) #7
  %44 = extractvalue { <2 x float>, <2 x float> } %43, 0
  %45 = extractvalue { <2 x float>, <2 x float> } %43, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %46

46:                                               ; preds = %9, %17
  %47 = phi <2 x float>* [ %14, %9 ], [ %41, %17 ]
  %48 = phi <2 x float>* [ %11, %9 ], [ %38, %17 ]
  %49 = phi <2 x float>* [ %16, %9 ], [ %32, %17 ]
  %50 = phi <2 x float> [ %12, %9 ], [ %44, %17 ]
  %51 = phi <2 x float> [ %15, %9 ], [ %45, %17 ]
  store <2 x float> %50, <2 x float>* %49, align 8
  %52 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 0, i32 2
  %53 = bitcast float* %52 to <2 x float>*
  store <2 x float> %51, <2 x float>* %53, align 8
  store <2 x float> %1, <2 x float>* %48, align 8
  store <2 x float> %2, <2 x float>* %47, align 8
  %54 = call i64 @_ZN4base9TimeTicks3NowEv() #7
  %55 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  store i64 %5, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12TabAnimation17CompleteAnimationEv(%class.TabAnimation* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 1
  %3 = bitcast %class.TabAnimation* %0 to i8*
  %4 = bitcast %class.TabAnimationState* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 4 %4, i64 16, i1 false)
  %5 = tail call i64 @_ZN4base9TimeTicks3NowEv() #7
  %6 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %0, i64 0, i32 3, i32 0
  store i64 0, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12TabAnimation29GetCurrentTabWidthConstraintsERK18TabLayoutConstantsRK11TabSizeInfo(%class.TabWidthConstraints* noalias sret, %class.TabAnimation* nocapture readonly, %struct.TabLayoutConstants* dereferenceable(8), %struct.TabSizeInfo* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %class.TabAnimationState*
  %8 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %1, i64 0, i32 3, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %1, i64 0, i32 1
  %14 = bitcast %class.TabAnimationState* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 8
  %16 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %1, i64 0, i32 1, i32 2
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 8
  br label %48

19:                                               ; preds = %4
  %20 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  %22 = tail call i64 @_ZN4base9TimeTicks3NowEv() #7
  %23 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %1, i64 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = sub nsw i64 %22, %24
  store i64 %25, i64* %21, align 8
  %26 = load i64, i64* %9, align 8
  %27 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %5, i64 %26) #7
  %28 = fcmp olt double %27, 0.000000e+00
  %29 = select i1 %28, double 0.000000e+00, double %27
  %30 = fcmp ogt double %29, 1.000000e+00
  %31 = select i1 %30, double 1.000000e+00, double %29
  %32 = call double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32 1, double %31) #7
  %33 = fptrunc double %32 to float
  %34 = bitcast %class.TabAnimation* %1 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 8
  %36 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %1, i64 0, i32 0, i32 2
  %37 = bitcast float* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 8
  %39 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %1, i64 0, i32 1
  %40 = bitcast %class.TabAnimationState* %39 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 8
  %42 = getelementptr inbounds %class.TabAnimation, %class.TabAnimation* %1, i64 0, i32 1, i32 2
  %43 = bitcast float* %42 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 8
  %45 = call { <2 x float>, <2 x float> } @_ZN17TabAnimationState11InterpolateEfS_S_(float %33, <2 x float> %35, <2 x float> %38, <2 x float> %41, <2 x float> %44) #7
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %48

48:                                               ; preds = %12, %19
  %49 = phi <2 x float> [ %15, %12 ], [ %46, %19 ]
  %50 = phi <2 x float> [ %18, %12 ], [ %47, %19 ]
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %49, <2 x float>* %51, align 8
  %52 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %50, <2 x float>* %52, align 8
  call void @_ZN19TabWidthConstraintsC1ERK17TabAnimationStateRK18TabLayoutConstantsRK11TabSizeInfo(%class.TabWidthConstraints* %0, %class.TabAnimationState* nonnull dereferenceable(16) %7, %struct.TabLayoutConstants* dereferenceable(8) %2, %struct.TabSizeInfo* dereferenceable(16) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret void
}

declare void @_ZN19TabWidthConstraintsC1ERK17TabAnimationStateRK18TabLayoutConstantsRK11TabSizeInfo(%class.TabWidthConstraints*, %class.TabAnimationState* dereferenceable(16), %struct.TabLayoutConstants* dereferenceable(8), %struct.TabSizeInfo* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #7
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32, double) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN17TabAnimationState11InterpolateEfS_S_(float, <2 x float>, <2 x float>, <2 x float>, <2 x float>) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
