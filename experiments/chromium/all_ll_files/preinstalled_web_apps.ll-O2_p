; ModuleID = '../../chrome/browser/web_applications/preinstalled_web_apps/preinstalled_web_apps.cc'
source_filename = "../../chrome/browser/web_applications/preinstalled_web_apps/preinstalled_web_apps.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.web_app::ExternalInstallOptions"*, %"struct.web_app::ExternalInstallOptions"*, %"class.std::__1::__compressed_pair.28" }
%"struct.web_app::ExternalInstallOptions" = type <{ %class.GURL, i32, i32, %"class.absl::optional", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.std::__1::vector.5", %"class.absl::optional", i8, i8, i8, i8, i8, [3 x i8], %"class.absl::optional.12", i8, i8, i8, [5 x i8], %"class.absl::optional", i8, [7 x i8], %"class.absl::optional.17", %"class.std::__1::vector.5", %"class.std::__1::vector.5", i8, [7 x i8], %"class.base::RepeatingCallback", %"class.absl::optional.23", i8, [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { %class.GURL }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::basic_string"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.web_app::ExternalInstallOptions"* }
%"struct.web_app::ScopedTestingPreinstalledAppData" = type { %"class.std::__1::vector" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.5", %"class.std::__1::map", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }

@_ZN7web_app12_GLOBAL__N_135g_preinstalled_app_data_for_testingE = internal unnamed_addr global %"class.std::__1::vector"* null, align 8
@_ZN7web_app12_GLOBAL__N_145g_force_use_preinstalled_web_apps_for_testingE = internal unnamed_addr global i1 false, align 1
@_ZN8switches24kDisablePreinstalledAppsE = external constant [0 x i8], align 1

@_ZN7web_app32ScopedTestingPreinstalledAppDataC1Ev = hidden unnamed_addr alias void (%"struct.web_app::ScopedTestingPreinstalledAppData"*), void (%"struct.web_app::ScopedTestingPreinstalledAppData"*)* @_ZN7web_app32ScopedTestingPreinstalledAppDataC2Ev
@_ZN7web_app32ScopedTestingPreinstalledAppDataD1Ev = hidden unnamed_addr alias void (%"struct.web_app::ScopedTestingPreinstalledAppData"*), void (%"struct.web_app::ScopedTestingPreinstalledAppData"*)* @_ZN7web_app32ScopedTestingPreinstalledAppDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7web_app22GetPreinstalledWebAppsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 {
  %2 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN7web_app12_GLOBAL__N_135g_preinstalled_app_data_for_testingE, align 8
  %3 = icmp eq %"class.std::__1::vector"* %2, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.web_app::ExternalInstallOptions"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 504
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %51, label %14

14:                                               ; preds = %4
  %15 = icmp ugt i64 %12, 36600682685931650
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %17) #9
  unreachable

18:                                               ; preds = %14
  %19 = tail call i8* @_Znwm(i64 %11) #10
  %20 = bitcast i8* %19 to %"struct.web_app::ExternalInstallOptions"*
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.web_app::ExternalInstallOptions"** %21 to i8**
  store i8* %19, i8** %22, align 8
  %23 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %19, i8** %23, align 8
  %24 = getelementptr inbounds %"struct.web_app::ExternalInstallOptions", %"struct.web_app::ExternalInstallOptions"* %20, i64 %12
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.web_app::ExternalInstallOptions"* %24, %"struct.web_app::ExternalInstallOptions"** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %27 = load %"struct.web_app::ExternalInstallOptions"*, %"struct.web_app::ExternalInstallOptions"** %26, align 8
  %28 = load %"struct.web_app::ExternalInstallOptions"*, %"struct.web_app::ExternalInstallOptions"** %6, align 8
  %29 = bitcast %"struct.web_app::ExternalInstallOptions"** %21 to i64*
  %30 = ptrtoint i8* %19 to i64
  %31 = icmp eq %"struct.web_app::ExternalInstallOptions"* %27, %28
  br i1 %31, label %40, label %32

32:                                               ; preds = %18, %32
  %33 = phi %"struct.web_app::ExternalInstallOptions"* [ %36, %32 ], [ %20, %18 ]
  %34 = phi %"struct.web_app::ExternalInstallOptions"* [ %35, %32 ], [ %27, %18 ]
  tail call void @_ZN7web_app22ExternalInstallOptionsC1ERKS0_(%"struct.web_app::ExternalInstallOptions"* %33, %"struct.web_app::ExternalInstallOptions"* dereferenceable(504) %34) #8
  %35 = getelementptr inbounds %"struct.web_app::ExternalInstallOptions", %"struct.web_app::ExternalInstallOptions"* %34, i64 1
  %36 = getelementptr inbounds %"struct.web_app::ExternalInstallOptions", %"struct.web_app::ExternalInstallOptions"* %33, i64 1
  %37 = icmp eq %"struct.web_app::ExternalInstallOptions"* %35, %28
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"struct.web_app::ExternalInstallOptions"* %36 to i64
  br label %40

40:                                               ; preds = %38, %18
  %41 = phi i64 [ %30, %18 ], [ %39, %38 ]
  store i64 %41, i64* %29, align 8
  br label %51

42:                                               ; preds = %1
  %43 = load i1, i1* @_ZN7web_app12_GLOBAL__N_145g_force_use_preinstalled_web_apps_for_testingE, align 1
  br i1 %43, label %49, label %44

44:                                               ; preds = %42
  %45 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %46 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %45, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kDisablePreinstalledAppsE, i64 0, i64 0)) #8
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #8
  br label %51

49:                                               ; preds = %44, %42
  %50 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #8
  br label %51

51:                                               ; preds = %40, %4, %49, %47
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7web_app37ForceUsePreinstalledWebAppsForTestingEv() local_unnamed_addr #2 {
  store i1 true, i1* @_ZN7web_app12_GLOBAL__N_145g_force_use_preinstalled_web_apps_for_testingE, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7web_app32ScopedTestingPreinstalledAppDataC2Ev(%"struct.web_app::ScopedTestingPreinstalledAppData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.web_app::ScopedTestingPreinstalledAppData", %"struct.web_app::ScopedTestingPreinstalledAppData"* %0, i64 0, i32 0
  %3 = bitcast %"struct.web_app::ScopedTestingPreinstalledAppData"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #8
  store %"class.std::__1::vector"* %2, %"class.std::__1::vector"** @_ZN7web_app12_GLOBAL__N_135g_preinstalled_app_data_for_testingE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7web_app32ScopedTestingPreinstalledAppDataD2Ev(%"struct.web_app::ScopedTestingPreinstalledAppData"* nocapture) unnamed_addr #0 align 2 {
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** @_ZN7web_app12_GLOBAL__N_135g_preinstalled_app_data_for_testingE, align 8
  %2 = getelementptr inbounds %"struct.web_app::ScopedTestingPreinstalledAppData", %"struct.web_app::ScopedTestingPreinstalledAppData"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.web_app::ExternalInstallOptions"*, %"struct.web_app::ExternalInstallOptions"** %2, align 8
  %4 = icmp eq %"struct.web_app::ExternalInstallOptions"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.web_app::ExternalInstallOptions"* %3 to i8*
  %7 = getelementptr inbounds %"struct.web_app::ScopedTestingPreinstalledAppData", %"struct.web_app::ScopedTestingPreinstalledAppData"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.web_app::ExternalInstallOptions"*, %"struct.web_app::ExternalInstallOptions"** %7, align 8
  %9 = icmp eq %"struct.web_app::ExternalInstallOptions"* %8, %3
  br i1 %9, label %17, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"struct.web_app::ExternalInstallOptions"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.web_app::ExternalInstallOptions", %"struct.web_app::ExternalInstallOptions"* %11, i64 -1
  tail call void @_ZN7web_app22ExternalInstallOptionsD1Ev(%"struct.web_app::ExternalInstallOptions"* %12) #8
  %13 = icmp eq %"struct.web_app::ExternalInstallOptions"* %12, %3
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = bitcast %"struct.web_app::ScopedTestingPreinstalledAppData"* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i8* [ %16, %14 ], [ %6, %5 ]
  store %"struct.web_app::ExternalInstallOptions"* %3, %"struct.web_app::ExternalInstallOptions"** %7, align 8
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7web_app22ExternalInstallOptionsC1ERKS0_(%"struct.web_app::ExternalInstallOptions"*, %"struct.web_app::ExternalInstallOptions"* dereferenceable(504)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7web_app22ExternalInstallOptionsD1Ev(%"struct.web_app::ExternalInstallOptions"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
