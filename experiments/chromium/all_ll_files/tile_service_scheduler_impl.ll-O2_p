; ModuleID = '../../components/query_tiles/internal/tile_service_scheduler_impl.cc'
source_filename = "../../components/query_tiles/internal/tile_service_scheduler_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.query_tiles::TileServiceSchedulerImpl" = type { %"class.query_tiles::TileServiceScheduler", %"class.query_tiles::LogSource", %"class.background_task::BackgroundTaskScheduler"*, %class.PrefService*, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.42", i8, %"class.query_tiles::TileServiceScheduler::Delegate"*, i32, i32, %"class.query_tiles::LogSink"* }
%"class.query_tiles::TileServiceScheduler" = type { i32 (...)** }
%"class.query_tiles::LogSource" = type { i32 (...)** }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.net::BackoffEntry::Policy"* }
%"class.query_tiles::TileServiceScheduler::Delegate" = type { i32 (...)** }
%"class.background_task::BackgroundTaskScheduler" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %class.scoped_refptr.21, %"class.base::RepeatingCallback.22", %class.scoped_refptr.23, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.12" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.21 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.22" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.23 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.base::Clock" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.query_tiles::LogSink" = type { i32 (...)** }
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.71" }
%"class.base::time_internal::TimeBase.71" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.115", %"class.std::__1::map.122", i64 }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.122" = type { %"class.std::__1::__tree.123" }
%"class.std::__1::__tree.123" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.base::TimeDelta" = type { i64 }
%"struct.background_task::OneOffInfo" = type <{ i64, i64, i8, [7 x i8] }>
%"struct.background_task::TaskInfo" = type { i32, i32, i8, i8, i8, %"class.std::__1::basic_string", %"class.absl::optional", %"class.absl::optional.105", %"class.absl::optional.110" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.104 }
%union.anon.104 = type { %"struct.background_task::PeriodicInfo" }
%"struct.background_task::PeriodicInfo" = type <{ i64, i64, i8, [7 x i8] }>
%"class.absl::optional.105" = type { %"class.absl::optional_internal::optional_data.106" }
%"class.absl::optional_internal::optional_data.106" = type { %"class.absl::optional_internal::optional_data_base.107" }
%"class.absl::optional_internal::optional_data_base.107" = type { %"class.absl::optional_internal::optional_data_dtor_base.108" }
%"class.absl::optional_internal::optional_data_dtor_base.108" = type { i8, [7 x i8], %union.anon.109 }
%union.anon.109 = type { %"struct.background_task::OneOffInfo" }
%"class.absl::optional.110" = type { %"class.absl::optional_internal::optional_data.111" }
%"class.absl::optional_internal::optional_data.111" = type { %"class.absl::optional_internal::optional_data_base.112" }
%"class.absl::optional_internal::optional_data_base.112" = type { %"class.absl::optional_internal::optional_data_dtor_base.113" }
%"class.absl::optional_internal::optional_data_dtor_base.113" = type { i8, %union.anon.114 }
%union.anon.114 = type { %"struct.background_task::ExactInfo" }
%"struct.background_task::ExactInfo" = type { i64 }
%"struct.query_tiles::TileGroup" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::vector", %"class.std::__1::map.59" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.53" = type opaque
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.53"* }
%"class.std::__1::map.59" = type { %"class.std::__1::__tree.60" }
%"class.std::__1::__tree.60" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.75" }
%"union.absl::variant_internal::DestructibleUnionImpl.75" = type { %"union.absl::variant_internal::DestructibleUnionImpl.76" }
%"union.absl::variant_internal::DestructibleUnionImpl.76" = type { %"union.absl::variant_internal::DestructibleUnionImpl.77" }
%"union.absl::variant_internal::DestructibleUnionImpl.77" = type { %"union.absl::variant_internal::DestructibleUnionImpl.78" }
%"union.absl::variant_internal::DestructibleUnionImpl.78" = type { %"class.std::__1::basic_string" }

@_ZTVN11query_tiles24TileServiceSchedulerImplE = hidden unnamed_addr constant { [14 x i8*], [7 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*, %"class.query_tiles::TileServiceScheduler::Delegate"*)* @_ZN11query_tiles24TileServiceSchedulerImpl11SetDelegateEPNS_20TileServiceScheduler8DelegateE to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImpl14OnFetchStartedEv to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*, i32)* @_ZN11query_tiles24TileServiceSchedulerImpl16OnFetchCompletedE21TileInfoRequestStatus to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*, i32)* @_ZN11query_tiles24TileServiceSchedulerImpl24OnTileManagerInitializedE15TileGroupStatus to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*, i32)* @_ZN11query_tiles24TileServiceSchedulerImpl10OnDbPurgedE15TileGroupStatus to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*, i32)* @_ZN11query_tiles24TileServiceSchedulerImpl16OnGroupDataSavedE15TileGroupStatus to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImpl10CancelTaskEv to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImplD2Ev to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImplD0Ev to i8*), i8* bitcast (i32 (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImpl16GetFetcherStatusEv to i8*), i8* bitcast (i32 (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImpl14GetGroupStatusEv to i8*), i8* bitcast (%"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImpl12GetTileGroupEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZThn8_N11query_tiles24TileServiceSchedulerImplD1Ev to i8*), i8* bitcast (void (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZThn8_N11query_tiles24TileServiceSchedulerImplD0Ev to i8*), i8* bitcast (i32 (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZThn8_N11query_tiles24TileServiceSchedulerImpl16GetFetcherStatusEv to i8*), i8* bitcast (i32 (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZThn8_N11query_tiles24TileServiceSchedulerImpl14GetGroupStatusEv to i8*), i8* bitcast (%"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZThn8_N11query_tiles24TileServiceSchedulerImpl12GetTileGroupEv to i8*)] }, align 8
@_ZN11query_tiles21kFirstScheduleTimeKeyE = external constant [0 x i8], align 1
@_ZN11query_tiles16kBackoffEntryKeyE = external constant [0 x i8], align 1
@_ZN11query_tiles8switches32kQueryTilesInstantBackgroundTaskE = external constant [0 x i8], align 1

@_ZN11query_tiles24TileServiceSchedulerImplC1EPN15background_task23BackgroundTaskSchedulerEP11PrefServicePN4base5ClockEPKNS6_9TickClockENSt3__110unique_ptrIN3net12BackoffEntry6PolicyENSC_14default_deleteISG_EEEEPNS_7LogSinkE = hidden unnamed_addr alias void (%"class.query_tiles::TileServiceSchedulerImpl"*, %"class.background_task::BackgroundTaskScheduler"*, %class.PrefService*, %"class.base::Clock"*, %"class.base::TickClock"*, %"struct.net::BackoffEntry::Policy"*, %"class.query_tiles::LogSink"*), void (%"class.query_tiles::TileServiceSchedulerImpl"*, %"class.background_task::BackgroundTaskScheduler"*, %class.PrefService*, %"class.base::Clock"*, %"class.base::TickClock"*, %"struct.net::BackoffEntry::Policy"*, %"class.query_tiles::LogSink"*)* @_ZN11query_tiles24TileServiceSchedulerImplC2EPN15background_task23BackgroundTaskSchedulerEP11PrefServicePN4base5ClockEPKNS6_9TickClockENSt3__110unique_ptrIN3net12BackoffEntry6PolicyENSC_14default_deleteISG_EEEEPNS_7LogSinkE
@_ZN11query_tiles24TileServiceSchedulerImplD1Ev = hidden unnamed_addr alias void (%"class.query_tiles::TileServiceSchedulerImpl"*), void (%"class.query_tiles::TileServiceSchedulerImpl"*)* @_ZN11query_tiles24TileServiceSchedulerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImplC2EPN15background_task23BackgroundTaskSchedulerEP11PrefServicePN4base5ClockEPKNS6_9TickClockENSt3__110unique_ptrIN3net12BackoffEntry6PolicyENSC_14default_deleteISG_EEEEPNS_7LogSinkE(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture, %"class.background_task::BackgroundTaskScheduler"*, %class.PrefService*, %"class.base::Clock"*, %"class.base::TickClock"*, %"struct.net::BackoffEntry::Policy"*, %"class.query_tiles::LogSink"*) unnamed_addr #0 align 2 {
  %8 = ptrtoint %"struct.net::BackoffEntry::Policy"* %5 to i64
  %9 = bitcast %"class.query_tiles::TileServiceSchedulerImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 2
  store %"class.background_task::BackgroundTaskScheduler"* %1, %"class.background_task::BackgroundTaskScheduler"** %10, align 8
  %11 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 3
  store %class.PrefService* %2, %class.PrefService** %11, align 8
  %12 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 4
  store %"class.base::Clock"* %3, %"class.base::Clock"** %12, align 8
  %13 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 5
  store %"class.base::TickClock"* %4, %"class.base::TickClock"** %13, align 8
  %14 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 6
  %15 = bitcast %"class.std::__1::unique_ptr.42"* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 7
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 8
  store %"class.query_tiles::TileServiceScheduler::Delegate"* null, %"class.query_tiles::TileServiceScheduler::Delegate"** %17, align 8
  %18 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 9
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 10
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 11
  store %"class.query_tiles::LogSink"* %6, %"class.query_tiles::LogSink"** %20, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImplD2Ev(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.query_tiles::TileServiceSchedulerImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"struct.net::BackoffEntry::Policy"*, %"struct.net::BackoffEntry::Policy"** %3, align 8
  store %"struct.net::BackoffEntry::Policy"* null, %"struct.net::BackoffEntry::Policy"** %3, align 8
  %5 = icmp eq %"struct.net::BackoffEntry::Policy"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.net::BackoffEntry::Policy"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11query_tiles24TileServiceSchedulerImplD1Ev(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 -1, i32 11
  %3 = bitcast %"class.query_tiles::LogSink"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %2, i64 6
  %5 = bitcast %"class.query_tiles::LogSink"** %4 to %"struct.net::BackoffEntry::Policy"**
  %6 = load %"struct.net::BackoffEntry::Policy"*, %"struct.net::BackoffEntry::Policy"** %5, align 8
  store %"struct.net::BackoffEntry::Policy"* null, %"struct.net::BackoffEntry::Policy"** %5, align 8
  %7 = icmp eq %"struct.net::BackoffEntry::Policy"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.net::BackoffEntry::Policy"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImplD0Ev(%"class.query_tiles::TileServiceSchedulerImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.query_tiles::TileServiceSchedulerImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"struct.net::BackoffEntry::Policy"*, %"struct.net::BackoffEntry::Policy"** %3, align 8
  store %"struct.net::BackoffEntry::Policy"* null, %"struct.net::BackoffEntry::Policy"** %3, align 8
  %5 = icmp eq %"struct.net::BackoffEntry::Policy"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.net::BackoffEntry::Policy"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.query_tiles::TileServiceSchedulerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N11query_tiles24TileServiceSchedulerImplD0Ev(%"class.query_tiles::TileServiceSchedulerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 -1, i32 11
  %3 = bitcast %"class.query_tiles::LogSink"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [7 x i8*] }, { [14 x i8*], [7 x i8*] }* @_ZTVN11query_tiles24TileServiceSchedulerImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %2, i64 6
  %5 = bitcast %"class.query_tiles::LogSink"** %4 to %"struct.net::BackoffEntry::Policy"**
  %6 = load %"struct.net::BackoffEntry::Policy"*, %"struct.net::BackoffEntry::Policy"** %5, align 8
  store %"struct.net::BackoffEntry::Policy"* null, %"struct.net::BackoffEntry::Policy"** %5, align 8
  %7 = icmp eq %"struct.net::BackoffEntry::Policy"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.net::BackoffEntry::Policy"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.query_tiles::LogSink"** %2 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl10CancelTaskEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 2
  %3 = load %"class.background_task::BackgroundTaskScheduler"*, %"class.background_task::BackgroundTaskScheduler"** %2, align 8
  %4 = bitcast %"class.background_task::BackgroundTaskScheduler"* %3 to void (%"class.background_task::BackgroundTaskScheduler"*, i32)***
  %5 = load void (%"class.background_task::BackgroundTaskScheduler"*, i32)**, void (%"class.background_task::BackgroundTaskScheduler"*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.background_task::BackgroundTaskScheduler"*, i32)*, void (%"class.background_task::BackgroundTaskScheduler"*, i32)** %5, i64 4
  %7 = load void (%"class.background_task::BackgroundTaskScheduler"*, i32)*, void (%"class.background_task::BackgroundTaskScheduler"*, i32)** %6, align 8
  tail call void %7(%"class.background_task::BackgroundTaskScheduler"* %3, i32 106) #12
  %8 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  tail call void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"* %8) #12
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %8) #12
  %9 = icmp eq %"class.net::BackoffEntry"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.net::BackoffEntry"* %8 to void (%"class.net::BackoffEntry"*)***
  %12 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %12, i64 1
  %14 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %13, align 8
  tail call void %14(%"class.net::BackoffEntry"* nonnull %8) #12
  br label %15

15:                                               ; preds = %1, %10
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl20MarkFirstRunFinishedEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl12ResetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0)
  tail call void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"* %2) #12
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %2)
  %3 = icmp eq %"class.net::BackoffEntry"* %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.net::BackoffEntry"* %2 to void (%"class.net::BackoffEntry"*)***
  %6 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %6, i64 1
  %8 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %7, align 8
  tail call void %8(%"class.net::BackoffEntry"* nonnull %2) #12
  br label %9

9:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl20MarkFirstRunFinishedEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 3
  %4 = load %class.PrefService*, %class.PrefService** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0)) #12
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #13
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #11
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0), i64 %6, i1 false) #12
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  call void @_ZN11PrefService7SetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base4TimeE(%class.PrefService* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i64 0) #12
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %29, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl14OnFetchStartedEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::Time::Exploded", align 4
  %3 = alloca %"class.base::Time", align 8
  %4 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 9
  store i32 0, i32* %4, align 8
  %5 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %6 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles8switches32kQueryTilesInstantBackgroundTaskE, i64 0, i64 0)) #12
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.base::Time::Exploded"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 4
  %10 = bitcast %"class.base::Time"* %3 to i8*
  %11 = bitcast %"struct.base::Time::Exploded"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %12 = tail call i64 @_ZN4base4Time3NowEv() #12
  %13 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  call void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"* nonnull %3, i1 zeroext true, %"struct.base::Time::Exploded"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %14 = load i32, i32* %9, align 4
  call void @_ZN11query_tiles5stats27RecordExplodeOnFetchStartedEi(i32 %14) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #12
  br label %15

15:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN11query_tiles5stats27RecordExplodeOnFetchStartedEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl16OnFetchCompletedE21TileInfoRequestStatus(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 3
  %5 = load %class.PrefService*, %class.PrefService** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0)) #12
  %8 = icmp ugt i64 %7, -17
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %10) #13
  unreachable

11:                                               ; preds = %2
  %12 = icmp ult i64 %7, 23
  br i1 %12, label %22, label %13

13:                                               ; preds = %11
  %14 = add nuw i64 %7, 16
  %15 = and i64 %14, -16
  %16 = tail call i8* @_Znwm(i64 %15) #11
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = or i64 %15, -9223372036854775808
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %7, i64* %20, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %27

22:                                               ; preds = %11
  %23 = trunc i64 %7 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 %23, i8* %25, align 1
  %26 = icmp eq i64 %7, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %22, %13
  %28 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %24, %22 ], [ %21, %13 ]
  %29 = phi i8* [ %6, %22 ], [ %16, %13 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0), i64 %7, i1 false) #12
  br label %30

30:                                               ; preds = %22, %27
  %31 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %24, %22 ], [ %28, %27 ]
  %32 = phi i8* [ %6, %22 ], [ %29, %27 ]
  %33 = getelementptr inbounds i8, i8* %32, i64 %7
  store i8 0, i8* %33, align 1
  %34 = call i64 @_ZNK11PrefService7GetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %30, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  call void @_ZN11query_tiles24TileServiceSchedulerImpl20MarkFirstRunFinishedEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0)
  %42 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 9
  store i32 %1, i32* %42, align 8
  %43 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %44 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %43, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles8switches32kQueryTilesInstantBackgroundTaskE, i64 0, i64 0)) #12
  br i1 %44, label %121, label %45

45:                                               ; preds = %41
  %46 = icmp eq i64 %34, 0
  br i1 %46, label %76, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 4
  %49 = load %"class.base::Clock"*, %"class.base::Clock"** %48, align 8
  %50 = bitcast %"class.base::Clock"* %49 to i64 (%"class.base::Clock"*)***
  %51 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %51, i64 2
  %53 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %52, align 8
  %54 = call i64 %53(%"class.base::Clock"* %49) #12
  %55 = sub nsw i64 %54, %34
  %56 = sdiv i64 %55, 3600000000
  %57 = call i1 @llvm.is.constant.i64(i64 %56) #12
  br i1 %57, label %65, label %58

58:                                               ; preds = %47
  %59 = icmp slt i64 %55, -3599999999
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = add nsw i64 %56, 2147483648
  %62 = icmp ult i64 %61, 4294967296
  %63 = trunc i64 %56 to i32
  %64 = select i1 %62, i32 %63, i32 %60, !prof !2
  br label %71

65:                                               ; preds = %47
  %66 = icmp sgt i64 %55, 7730941132799999999
  br i1 %66, label %74, label %67

67:                                               ; preds = %65
  %68 = icmp sgt i64 %56, -2147483648
  %69 = select i1 %68, i64 %56, i64 -2147483648
  %70 = trunc i64 %69 to i32
  br label %71

71:                                               ; preds = %58, %67
  %72 = phi i32 [ %64, %58 ], [ %70, %67 ]
  %73 = icmp sgt i32 %72, -1
  br i1 %73, label %74, label %76

74:                                               ; preds = %65, %71
  %75 = phi i32 [ %72, %71 ], [ 2147483647, %65 ]
  call void @_ZN11query_tiles5stats28RecordFirstFetchFlowDurationEi(i32 %75) #12
  br label %76

76:                                               ; preds = %45, %71, %74
  switch i32 %1, label %109 [
    i32 3, label %77
    i32 2, label %87
    i32 1, label %96
  ]

77:                                               ; preds = %76
  %78 = call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  call void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"* %78) #12
  call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %78) #12
  %79 = icmp eq %"class.net::BackoffEntry"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.net::BackoffEntry"* %78 to void (%"class.net::BackoffEntry"*)***
  %82 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %82, i64 1
  %84 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %83, align 8
  call void %84(%"class.net::BackoffEntry"* nonnull %78) #12
  br label %85

85:                                               ; preds = %77, %80
  %86 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 7
  store i8 1, i8* %86, align 8
  br label %109

87:                                               ; preds = %76
  %88 = call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %88, i1 zeroext false) #12
  call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %88) #12
  %89 = icmp eq %"class.net::BackoffEntry"* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.net::BackoffEntry"* %88 to void (%"class.net::BackoffEntry"*)***
  %92 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %92, i64 1
  %94 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %93, align 8
  call void %94(%"class.net::BackoffEntry"* nonnull %88) #12
  br label %95

95:                                               ; preds = %87, %90
  call void @_ZN11query_tiles24TileServiceSchedulerImpl12ScheduleTaskEb(%"class.query_tiles::TileServiceSchedulerImpl"* %0, i1 zeroext false)
  br label %109

96:                                               ; preds = %76
  %97 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 7
  %98 = load i8, i8* %97, align 8, !range !3
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %109

100:                                              ; preds = %96
  %101 = call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  call void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"* %101) #12
  call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %101) #12
  %102 = icmp eq %"class.net::BackoffEntry"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.net::BackoffEntry"* %101 to void (%"class.net::BackoffEntry"*)***
  %105 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %105, i64 1
  %107 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %106, align 8
  call void %107(%"class.net::BackoffEntry"* nonnull %101) #12
  br label %108

108:                                              ; preds = %100, %103
  call void @_ZN11query_tiles24TileServiceSchedulerImpl12ScheduleTaskEb(%"class.query_tiles::TileServiceSchedulerImpl"* %0, i1 zeroext true)
  br label %109

109:                                              ; preds = %76, %96, %95, %108, %85
  call void @_ZN11query_tiles5stats23RecordTileRequestStatusE21TileInfoRequestStatus(i32 %1) #12
  %110 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 11
  %111 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %110, align 8
  %112 = bitcast %"class.query_tiles::LogSink"* %111 to void (%"class.query_tiles::LogSink"*)***
  %113 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %113, i64 2
  %115 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %114, align 8
  call void %115(%"class.query_tiles::LogSink"* %111) #12
  %116 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %110, align 8
  %117 = bitcast %"class.query_tiles::LogSink"* %116 to void (%"class.query_tiles::LogSink"*)***
  %118 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %118, i64 3
  %120 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %119, align 8
  call void %120(%"class.query_tiles::LogSink"* %116) #12
  br label %121

121:                                              ; preds = %41, %109
  ret void
}

declare i64 @_ZNK11PrefService7GetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN11query_tiles5stats28RecordFirstFetchFlowDurationEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl10AddBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0)
  tail call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %2, i1 zeroext false) #12
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %2)
  %3 = icmp eq %"class.net::BackoffEntry"* %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.net::BackoffEntry"* %2 to void (%"class.net::BackoffEntry"*)***
  %6 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %6, i64 1
  %8 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %7, align 8
  tail call void %8(%"class.net::BackoffEntry"* nonnull %2) #12
  br label %9

9:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl12ScheduleTaskEb(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"struct.background_task::OneOffInfo", align 8
  %5 = alloca %"struct.background_task::TaskInfo", align 8
  %6 = bitcast %"struct.background_task::OneOffInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"struct.background_task::OneOffInfo", %"struct.background_task::OneOffInfo"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.background_task::OneOffInfo", %"struct.background_task::OneOffInfo"* %4, i64 0, i32 1
  %9 = bitcast %"struct.background_task::OneOffInfo"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN15background_task10OneOffInfoC1Ev(%"struct.background_task::OneOffInfo"* nonnull %4) #12
  %10 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %11 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles8switches32kQueryTilesInstantBackgroundTaskE, i64 0, i64 0)) #12
  br i1 %11, label %12, label %28

12:                                               ; preds = %2
  br i1 %1, label %26, label %13

13:                                               ; preds = %12
  %14 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  %16 = call i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"* %15) #12
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #12
  %19 = icmp eq %"class.net::BackoffEntry"* %15, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.net::BackoffEntry"* %15 to void (%"class.net::BackoffEntry"*)***
  %22 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %22, i64 1
  %24 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %23, align 8
  call void %24(%"class.net::BackoffEntry"* nonnull %15) #12
  br label %25

25:                                               ; preds = %20, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %26

26:                                               ; preds = %12, %25
  %27 = phi i64 [ %18, %25 ], [ 10000, %12 ]
  store i64 %27, i64* %7, align 8
  store i64 20000, i64* %8, align 8
  br label %29

28:                                               ; preds = %2
  call void @_ZN11query_tiles24TileServiceSchedulerImpl13GetTaskWindowEPlS1_b(%"class.query_tiles::TileServiceSchedulerImpl"* %0, i64* nonnull %7, i64* %8, i1 zeroext %1)
  br label %29

29:                                               ; preds = %28, %26
  %30 = bitcast %"struct.background_task::TaskInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 120, i1 false)
  call void @_ZN15background_task8TaskInfoC1EiRKNS_10OneOffInfoE(%"struct.background_task::TaskInfo"* nonnull %5, i32 106, %"struct.background_task::OneOffInfo"* nonnull dereferenceable(24) %4) #12
  %31 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %5, i64 0, i32 3
  store i8 1, i8* %31, align 1
  %32 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %5, i64 0, i32 4
  store i8 1, i8* %32, align 2
  %33 = call zeroext i1 @_ZN11query_tiles10TileConfig29GetIsUnMeteredNetworkRequiredEv() #12
  %34 = select i1 %33, i32 2, i32 1
  %35 = getelementptr inbounds %"struct.background_task::TaskInfo", %"struct.background_task::TaskInfo"* %5, i64 0, i32 1
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 2
  %37 = load %"class.background_task::BackgroundTaskScheduler"*, %"class.background_task::BackgroundTaskScheduler"** %36, align 8
  %38 = bitcast %"class.background_task::BackgroundTaskScheduler"* %37 to i1 (%"class.background_task::BackgroundTaskScheduler"*, %"struct.background_task::TaskInfo"*)***
  %39 = load i1 (%"class.background_task::BackgroundTaskScheduler"*, %"struct.background_task::TaskInfo"*)**, i1 (%"class.background_task::BackgroundTaskScheduler"*, %"struct.background_task::TaskInfo"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.background_task::BackgroundTaskScheduler"*, %"struct.background_task::TaskInfo"*)*, i1 (%"class.background_task::BackgroundTaskScheduler"*, %"struct.background_task::TaskInfo"*)** %39, i64 3
  %41 = load i1 (%"class.background_task::BackgroundTaskScheduler"*, %"struct.background_task::TaskInfo"*)*, i1 (%"class.background_task::BackgroundTaskScheduler"*, %"struct.background_task::TaskInfo"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.background_task::BackgroundTaskScheduler"* %37, %"struct.background_task::TaskInfo"* nonnull dereferenceable(120) %5) #12
  call void @_ZN15background_task8TaskInfoD1Ev(%"struct.background_task::TaskInfo"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %30) #12
  call void @_ZN15background_task10OneOffInfoD1Ev(%"struct.background_task::OneOffInfo"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

declare void @_ZN11query_tiles5stats23RecordTileRequestStatusE21TileInfoRequestStatus(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl11PingLogSinkEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 11
  %3 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %2, align 8
  %4 = bitcast %"class.query_tiles::LogSink"* %3 to void (%"class.query_tiles::LogSink"*)***
  %5 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %5, i64 2
  %7 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %6, align 8
  tail call void %7(%"class.query_tiles::LogSink"* %3) #12
  %8 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %2, align 8
  %9 = bitcast %"class.query_tiles::LogSink"* %8 to void (%"class.query_tiles::LogSink"*)***
  %10 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %10, i64 3
  %12 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %11, align 8
  tail call void %12(%"class.query_tiles::LogSink"* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl10OnDbPurgedE15TileGroupStatus(%"class.query_tiles::TileServiceSchedulerImpl"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.query_tiles::TileServiceSchedulerImpl"* %0 to void (%"class.query_tiles::TileServiceSchedulerImpl"*)***
  %4 = load void (%"class.query_tiles::TileServiceSchedulerImpl"*)**, void (%"class.query_tiles::TileServiceSchedulerImpl"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.query_tiles::TileServiceSchedulerImpl"*)*, void (%"class.query_tiles::TileServiceSchedulerImpl"*)** %4, i64 6
  %6 = load void (%"class.query_tiles::TileServiceSchedulerImpl"*)*, void (%"class.query_tiles::TileServiceSchedulerImpl"*)** %5, align 8
  tail call void %6(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  %7 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 10
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 11
  %9 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %8, align 8
  %10 = bitcast %"class.query_tiles::LogSink"* %9 to void (%"class.query_tiles::LogSink"*)***
  %11 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %11, i64 2
  %13 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %12, align 8
  tail call void %13(%"class.query_tiles::LogSink"* %9) #12
  %14 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %8, align 8
  %15 = bitcast %"class.query_tiles::LogSink"* %14 to void (%"class.query_tiles::LogSink"*)***
  %16 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %16, i64 3
  %18 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %17, align 8
  tail call void %18(%"class.query_tiles::LogSink"* %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl16OnGroupDataSavedE15TileGroupStatus(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 10
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 11
  %5 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %4, align 8
  %6 = bitcast %"class.query_tiles::LogSink"* %5 to void (%"class.query_tiles::LogSink"*)***
  %7 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %7, i64 2
  %9 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %8, align 8
  tail call void %9(%"class.query_tiles::LogSink"* %5) #12
  %10 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %4, align 8
  %11 = bitcast %"class.query_tiles::LogSink"* %10 to void (%"class.query_tiles::LogSink"*)***
  %12 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %12, i64 3
  %14 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %13, align 8
  tail call void %14(%"class.query_tiles::LogSink"* %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl24OnTileManagerInitializedE15TileGroupStatus(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 10
  store i32 %1, i32* %3, align 4
  %4 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %5 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles8switches32kQueryTilesInstantBackgroundTaskE, i64 0, i64 0)) #12
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  tail call void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"* %7) #12
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %7) #12
  %8 = icmp eq %"class.net::BackoffEntry"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.net::BackoffEntry"* %7 to void (%"class.net::BackoffEntry"*)***
  %11 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %11, i64 1
  %13 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %12, align 8
  tail call void %13(%"class.net::BackoffEntry"* nonnull %7) #12
  br label %14

14:                                               ; preds = %6, %9
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl12ScheduleTaskEb(%"class.query_tiles::TileServiceSchedulerImpl"* %0, i1 zeroext true)
  br label %53

15:                                               ; preds = %2
  switch i32 %1, label %41 [
    i32 3, label %16
    i32 2, label %31
  ]

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %41

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZN11query_tiles24TileServiceSchedulerImpl17IsDuringFirstFlowEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0)
  br i1 %21, label %41, label %22

22:                                               ; preds = %20
  %23 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  tail call void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"* %23) #12
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %23) #12
  %24 = icmp eq %"class.net::BackoffEntry"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.net::BackoffEntry"* %23 to void (%"class.net::BackoffEntry"*)***
  %27 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %27, i64 1
  %29 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %28, align 8
  tail call void %29(%"class.net::BackoffEntry"* nonnull %23) #12
  br label %30

30:                                               ; preds = %22, %25
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl12ScheduleTaskEb(%"class.query_tiles::TileServiceSchedulerImpl"* %0, i1 zeroext true)
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl21MarkFirstRunScheduledEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0)
  br label %41

31:                                               ; preds = %15
  %32 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  tail call void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"* %32) #12
  tail call void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* %0, %"class.net::BackoffEntry"* %32) #12
  %33 = icmp eq %"class.net::BackoffEntry"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.net::BackoffEntry"* %32 to void (%"class.net::BackoffEntry"*)***
  %36 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %36, i64 1
  %38 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %37, align 8
  tail call void %38(%"class.net::BackoffEntry"* nonnull %32) #12
  br label %39

39:                                               ; preds = %31, %34
  %40 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 7
  store i8 1, i8* %40, align 8
  br label %41

41:                                               ; preds = %20, %16, %15, %39, %30
  tail call void @_ZN11query_tiles5stats21RecordTileGroupStatusE15TileGroupStatus(i32 %1) #12
  %42 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 11
  %43 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %42, align 8
  %44 = bitcast %"class.query_tiles::LogSink"* %43 to void (%"class.query_tiles::LogSink"*)***
  %45 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %45, i64 2
  %47 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %46, align 8
  tail call void %47(%"class.query_tiles::LogSink"* %43) #12
  %48 = load %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %42, align 8
  %49 = bitcast %"class.query_tiles::LogSink"* %48 to void (%"class.query_tiles::LogSink"*)***
  %50 = load void (%"class.query_tiles::LogSink"*)**, void (%"class.query_tiles::LogSink"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %50, i64 3
  %52 = load void (%"class.query_tiles::LogSink"*)*, void (%"class.query_tiles::LogSink"*)** %51, align 8
  tail call void %52(%"class.query_tiles::LogSink"* %48) #12
  br label %53

53:                                               ; preds = %41, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11query_tiles24TileServiceSchedulerImpl17IsDuringFirstFlowEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 3
  %4 = load %class.PrefService*, %class.PrefService** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0)) #12
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #13
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #11
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0), i64 %6, i1 false) #12
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = call i64 @_ZNK11PrefService7GetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  %34 = icmp ne i64 %33, 0
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl21MarkFirstRunScheduledEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 3
  %4 = load %class.PrefService*, %class.PrefService** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0)) #12
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #13
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #11
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles21kFirstScheduleTimeKeyE, i64 0, i64 0), i64 %6, i1 false) #12
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 4
  %34 = load %"class.base::Clock"*, %"class.base::Clock"** %33, align 8
  %35 = bitcast %"class.base::Clock"* %34 to i64 (%"class.base::Clock"*)***
  %36 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %36, i64 2
  %38 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %37, align 8
  %39 = tail call i64 %38(%"class.base::Clock"* %34) #12
  call void @_ZN11PrefService7SetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base4TimeE(%class.PrefService* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i64 %39) #12
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %29
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %29, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

declare void @_ZN11query_tiles5stats21RecordTileGroupStatusE15TileGroupStatus(i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN11query_tiles24TileServiceSchedulerImpl16GetFetcherStatusEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZThn8_N11query_tiles24TileServiceSchedulerImpl16GetFetcherStatusEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 -1, i32 11
  %3 = getelementptr inbounds %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %2, i64 9
  %4 = bitcast %"class.query_tiles::LogSink"** %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN11query_tiles24TileServiceSchedulerImpl14GetGroupStatusEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZThn8_N11query_tiles24TileServiceSchedulerImpl14GetGroupStatusEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 -1, i32 11
  %3 = bitcast %"class.query_tiles::LogSink"** %2 to %"class.query_tiles::TileServiceSchedulerImpl"*
  %4 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %3, i64 0, i32 10
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.query_tiles::TileGroup"* @_ZN11query_tiles24TileServiceSchedulerImpl12GetTileGroupEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 8
  %3 = load %"class.query_tiles::TileServiceScheduler::Delegate"*, %"class.query_tiles::TileServiceScheduler::Delegate"** %2, align 8
  %4 = icmp eq %"class.query_tiles::TileServiceScheduler::Delegate"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.query_tiles::TileServiceScheduler::Delegate"* %3 to %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)***
  %7 = load %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)**, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)*, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)** %7, i64 2
  %9 = load %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)*, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)** %8, align 8
  %10 = tail call %"struct.query_tiles::TileGroup"* %9(%"class.query_tiles::TileServiceScheduler::Delegate"* nonnull %3) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"struct.query_tiles::TileGroup"* [ %10, %5 ], [ null, %1 ]
  ret %"struct.query_tiles::TileGroup"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.query_tiles::TileGroup"* @_ZThn8_N11query_tiles24TileServiceSchedulerImpl12GetTileGroupEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 -1, i32 11
  %3 = getelementptr inbounds %"class.query_tiles::LogSink"*, %"class.query_tiles::LogSink"** %2, i64 8
  %4 = bitcast %"class.query_tiles::LogSink"** %3 to %"class.query_tiles::TileServiceScheduler::Delegate"**
  %5 = load %"class.query_tiles::TileServiceScheduler::Delegate"*, %"class.query_tiles::TileServiceScheduler::Delegate"** %4, align 8
  %6 = icmp eq %"class.query_tiles::TileServiceScheduler::Delegate"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.query_tiles::TileServiceScheduler::Delegate"* %5 to %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)***
  %9 = load %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)**, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)*** %8, align 8
  %10 = getelementptr inbounds %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)*, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)** %9, i64 2
  %11 = load %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)*, %"struct.query_tiles::TileGroup"* (%"class.query_tiles::TileServiceScheduler::Delegate"*)** %10, align 8
  %12 = tail call %"struct.query_tiles::TileGroup"* %11(%"class.query_tiles::TileServiceScheduler::Delegate"* nonnull %5) #12
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi %"struct.query_tiles::TileGroup"* [ %12, %7 ], [ null, %1 ]
  ret %"struct.query_tiles::TileGroup"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 3
  %4 = load %class.PrefService*, %class.PrefService** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles16kBackoffEntryKeyE, i64 0, i64 0)) #12
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #13
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #11
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %5, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles16kBackoffEntryKeyE, i64 0, i64 0), i64 %6, i1 false) #12
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %5, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = call %"class.base::ListValue"* @_ZNK11PrefService7GetListERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %29, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  %41 = icmp eq %"class.base::ListValue"* %33, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %33, i64 0, i32 0
  %44 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %45 = load %"struct.net::BackoffEntry::Policy"*, %"struct.net::BackoffEntry::Policy"** %44, align 8
  %46 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 5
  %47 = load %"class.base::TickClock"*, %"class.base::TickClock"** %46, align 8
  %48 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 4
  %49 = load %"class.base::Clock"*, %"class.base::Clock"** %48, align 8
  %50 = bitcast %"class.base::Clock"* %49 to i64 (%"class.base::Clock"*)***
  %51 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %51, i64 2
  %53 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %52, align 8
  %54 = call i64 %53(%"class.base::Clock"* %49) #12
  %55 = call %"class.net::BackoffEntry"* @_ZN3net22BackoffEntrySerializer20DeserializeFromValueERKN4base5ValueEPKNS_12BackoffEntry6PolicyEPKNS1_9TickClockENS1_4TimeE(%"class.base::Value"* dereferenceable(32) %43, %"struct.net::BackoffEntry::Policy"* %45, %"class.base::TickClock"* %47, i64 %54) #12
  %56 = ptrtoint %"class.net::BackoffEntry"* %55 to i64
  %57 = icmp eq %"class.net::BackoffEntry"* %55, null
  br i1 %57, label %58, label %74

58:                                               ; preds = %42, %40
  %59 = phi i64 [ %56, %42 ], [ 0, %40 ]
  %60 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %61 = load %"struct.net::BackoffEntry::Policy"*, %"struct.net::BackoffEntry::Policy"** %60, align 8
  %62 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 5
  %63 = call i8* @_Znwm(i64 40) #11
  %64 = bitcast i8* %63 to %"class.net::BackoffEntry"*
  %65 = load %"class.base::TickClock"*, %"class.base::TickClock"** %62, align 8
  call void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyEPKN4base9TickClockE(%"class.net::BackoffEntry"* nonnull %64, %"struct.net::BackoffEntry::Policy"* %61, %"class.base::TickClock"* %65) #12
  %66 = ptrtoint i8* %63 to i64
  %67 = icmp eq i64 %59, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %58
  %69 = inttoptr i64 %59 to %"class.net::BackoffEntry"*
  %70 = inttoptr i64 %59 to void (%"class.net::BackoffEntry"*)***
  %71 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %71, i64 1
  %73 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %72, align 8
  call void %73(%"class.net::BackoffEntry"* nonnull %69) #12
  br label %74

74:                                               ; preds = %42, %58, %68
  %75 = phi i64 [ %66, %58 ], [ %66, %68 ], [ %56, %42 ]
  %76 = inttoptr i64 %75 to %"class.net::BackoffEntry"*
  ret %"class.net::BackoffEntry"* %76
}

declare %"class.base::ListValue"* @_ZNK11PrefService7GetListERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare %"class.net::BackoffEntry"* @_ZN3net22BackoffEntrySerializer20DeserializeFromValueERKN4base5ValueEPKNS_12BackoffEntry6PolicyEPKNS1_9TickClockENS1_4TimeE(%"class.base::Value"* dereferenceable(32), %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"*, i64) local_unnamed_addr #3

declare void @_ZN15background_task10OneOffInfoC1Ev(%"struct.background_task::OneOffInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl20GetInstantTaskWindowEPlS1_b(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly, i64* nocapture, i64* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  br i1 %3, label %19, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  %9 = tail call i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"* %8) #12
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %5) #12
  %12 = icmp eq %"class.net::BackoffEntry"* %8, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.net::BackoffEntry"* %8 to void (%"class.net::BackoffEntry"*)***
  %15 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %15, i64 1
  %17 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %16, align 8
  call void %17(%"class.net::BackoffEntry"* nonnull %8) #12
  br label %18

18:                                               ; preds = %6, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %19

19:                                               ; preds = %4, %18
  %20 = phi i64 [ %11, %18 ], [ 10000, %4 ]
  store i64 %20, i64* %1, align 8
  store i64 20000, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl13GetTaskWindowEPlS1_b(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly, i64* nocapture, i64* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  br i1 %3, label %6, label %13

6:                                                ; preds = %4
  %7 = tail call i32 @_ZN11query_tiles10TileConfig23GetScheduleIntervalInMsEv() #12
  %8 = sext i32 %7 to i64
  %9 = tail call i32 @_ZN11query_tiles10TileConfig22GetMaxRandomWindowInMsEv() #12
  %10 = sext i32 %9 to i64
  %11 = tail call i64 @_ZN4base13RandGeneratorEm(i64 %10) #12
  %12 = add i64 %11, %8
  br label %26

13:                                               ; preds = %4
  %14 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0) #12
  %16 = tail call i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"* %15) #12
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %5) #12
  %19 = icmp eq %"class.net::BackoffEntry"* %15, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.net::BackoffEntry"* %15 to void (%"class.net::BackoffEntry"*)***
  %22 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %22, i64 1
  %24 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %23, align 8
  call void %24(%"class.net::BackoffEntry"* nonnull %15) #12
  br label %25

25:                                               ; preds = %13, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %26

26:                                               ; preds = %25, %6
  %27 = phi i64 [ %18, %25 ], [ %12, %6 ]
  store i64 %27, i64* %1, align 8
  %28 = call i32 @_ZN11query_tiles10TileConfig23GetOneoffTaskWindowInMsEv() #12
  %29 = sext i32 %28 to i64
  %30 = add nsw i64 %27, %29
  store i64 %30, i64* %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN15background_task8TaskInfoC1EiRKNS_10OneOffInfoE(%"struct.background_task::TaskInfo"*, i32, %"struct.background_task::OneOffInfo"* dereferenceable(24)) unnamed_addr #3

declare zeroext i1 @_ZN11query_tiles10TileConfig29GetIsUnMeteredNetworkRequiredEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN15background_task8TaskInfoD1Ev(%"struct.background_task::TaskInfo"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN15background_task10OneOffInfoD1Ev(%"struct.background_task::OneOffInfo"*) unnamed_addr #5

declare void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl13UpdateBackoffEPN3net12BackoffEntryE(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly, %"class.net::BackoffEntry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 4
  %7 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = load %"class.base::Clock"*, %"class.base::Clock"** %6, align 8
  %9 = bitcast %"class.base::Clock"* %8 to i64 (%"class.base::Clock"*)***
  %10 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %10, i64 2
  %12 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::Clock"* %8) #12
  call void @_ZN3net22BackoffEntrySerializer16SerializeToValueERKNS_12BackoffEntryEN4base4TimeE(%"class.base::Value"* nonnull sret %3, %"class.net::BackoffEntry"* dereferenceable(40) %1, i64 %13) #12
  %14 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 3
  %15 = load %class.PrefService*, %class.PrefService** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles16kBackoffEntryKeyE, i64 0, i64 0)) #12
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %20) #13
  unreachable

21:                                               ; preds = %2
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = call i8* @_Znwm(i64 %25) #11
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %30, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %37

32:                                               ; preds = %21
  %33 = trunc i64 %17 to i8
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 %33, i8* %35, align 1
  %36 = icmp eq i64 %17, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32, %23
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %34, %32 ], [ %31, %23 ]
  %39 = phi i8* [ %16, %32 ], [ %26, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11query_tiles16kBackoffEntryKeyE, i64 0, i64 0), i64 %17, i1 false) #12
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %34, %32 ], [ %38, %37 ]
  %42 = phi i8* [ %16, %32 ], [ %39, %37 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %17
  store i8 0, i8* %43, align 1
  call void @_ZN11PrefService3SetERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base5ValueE(%class.PrefService* %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.base::Value"* nonnull dereferenceable(32) %3) #12
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %40, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret void
}

declare void @_ZN3net12BackoffEntry5ResetEv(%"class.net::BackoffEntry"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN11query_tiles24TileServiceSchedulerImpl20GetDelaysFromBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = tail call %"class.net::BackoffEntry"* @_ZN11query_tiles24TileServiceSchedulerImpl10GetBackoffEv(%"class.query_tiles::TileServiceSchedulerImpl"* %0)
  %5 = tail call i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"* %4) #12
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %2) #12
  %8 = icmp eq %"class.net::BackoffEntry"* %4, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.net::BackoffEntry"* %4 to void (%"class.net::BackoffEntry"*)***
  %11 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %11, i64 1
  %13 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %12, align 8
  call void %13(%"class.net::BackoffEntry"* nonnull %4) #12
  br label %14

14:                                               ; preds = %1, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret i64 %7
}

declare i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"*) local_unnamed_addr #3

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

declare i32 @_ZN11query_tiles10TileConfig23GetScheduleIntervalInMsEv() local_unnamed_addr #3

declare i64 @_ZN4base13RandGeneratorEm(i64) local_unnamed_addr #3

declare i32 @_ZN11query_tiles10TileConfig22GetMaxRandomWindowInMsEv() local_unnamed_addr #3

declare i32 @_ZN11query_tiles10TileConfig23GetOneoffTaskWindowInMsEv() local_unnamed_addr #3

declare void @_ZN3net22BackoffEntrySerializer16SerializeToValueERKNS_12BackoffEntryEN4base4TimeE(%"class.base::Value"* sret, %"class.net::BackoffEntry"* dereferenceable(40), i64) local_unnamed_addr #3

declare void @_ZN11PrefService3SetERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base5ValueE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #5

declare void @_ZN11PrefService7SetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN4base4TimeE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11query_tiles24TileServiceSchedulerImpl11SetDelegateEPNS_20TileServiceScheduler8DelegateE(%"class.query_tiles::TileServiceSchedulerImpl"* nocapture, %"class.query_tiles::TileServiceScheduler::Delegate"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.query_tiles::TileServiceSchedulerImpl", %"class.query_tiles::TileServiceSchedulerImpl"* %0, i64 0, i32 8
  store %"class.query_tiles::TileServiceScheduler::Delegate"* %1, %"class.query_tiles::TileServiceScheduler::Delegate"** %3, align 8
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #3

declare void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"*, i1 zeroext, %"struct.base::Time::Exploded"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyEPKN4base9TickClockE(%"class.net::BackoffEntry"*, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
