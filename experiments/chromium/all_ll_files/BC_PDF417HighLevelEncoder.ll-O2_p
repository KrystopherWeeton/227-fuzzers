; ModuleID = '../../third_party/pdfium/fxbarcode/pdf417/BC_PDF417HighLevelEncoder.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/pdf417/BC_PDF417HighLevelEncoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.1" }
%"class.fxcrt::RetainPtr.1" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.fxcrt::StringDataTemplate.5"* }
%"class.fxcrt::StringDataTemplate.5" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.pdfium::span.14" = type { %"class.fxcrt::UnownedPtr.15", i64 }
%"class.fxcrt::UnownedPtr.15" = type { i8* }
%class.BigInteger = type { i32, %class.BigUnsigned }
%class.BigUnsigned = type { %class.NumberlikeArray }
%class.NumberlikeArray = type { i32, i32, i64* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN12_GLOBAL__N_112kPunctuationE = internal unnamed_addr constant [128 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\0C\0F\FF\FF\0B\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\0A\14\FF\12\FF\FF\1C\17\18\16\FF\0D\10\11\13\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\0E\00\01\FF\02\19\03\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\04\05\06\FF\07\08\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\1A\15\1B\09\FF", align 16
@_ZN12_GLOBAL__N_16kMixedE = internal unnamed_addr constant [128 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\0C\FF\FF\FF\0B\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\1A\FF\FF\0F\12\15\0A\FF\FF\FF\16\14\0D\10\11\13\00\01\02\03\04\05\06\07\08\09\0E\FF\FF\17\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\18\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", align 16
@.str = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26CBC_PDF417HighLevelEncoder15EncodeHighLevelEN5fxcrt18StringViewTemplateIwEE(%"class.pdfium::Optional"* noalias sret, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %"class.pdfium::span.14", align 8
  %11 = alloca %"class.pdfium::span.14", align 8
  %12 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.5"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.5"*), %"class.fxcrt::StringDataTemplate.5"** %13, align 8
  %14 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %15 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 16, i1 false)
  call void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* nonnull sret %3, %"class.fxcrt::StringViewTemplate"* nonnull %4) #9
  %16 = load %"class.fxcrt::StringDataTemplate.5"*, %"class.fxcrt::StringDataTemplate.5"** %13, align 8
  %17 = icmp eq %"class.fxcrt::StringDataTemplate.5"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %16, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %21

21:                                               ; preds = %2, %18
  %22 = phi i64 [ %20, %18 ], [ 0, %2 ]
  %23 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %24, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %5) #9
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %5, i64 %22) #9
  %25 = icmp eq i64 %22, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %21, %35
  %27 = phi i64 [ %40, %35 ], [ 0, %21 ]
  %28 = load %"class.fxcrt::StringDataTemplate.5"*, %"class.fxcrt::StringDataTemplate.5"** %13, align 8
  %29 = icmp eq %"class.fxcrt::StringDataTemplate.5"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %28, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, %27
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %30, %26
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !3
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !4
  unreachable

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %28, i64 0, i32 3, i64 %27
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %5, i32 signext %38) #9
  %40 = add nuw i64 %27, 1
  %41 = icmp eq i64 %40, %22
  br i1 %41, label %42, label %26

42:                                               ; preds = %35, %21
  %43 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8
  %44 = icmp eq %"class.fxcrt::StringDataTemplate"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %43, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %42, %45
  %49 = phi i64 [ %47, %45 ], [ 0, %42 ]
  %50 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %51, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %6) #9
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %6, i64 %49) #9
  %52 = icmp eq i64 %49, 0
  br i1 %52, label %173, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %10, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %10, i64 0, i32 1
  %57 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %11, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %11, i64 0, i32 1
  br label %59

59:                                               ; preds = %53, %167
  %60 = phi i32 [ 0, %53 ], [ %170, %167 ]
  %61 = phi i32 [ 0, %53 ], [ %169, %167 ]
  %62 = phi i64 [ 0, %53 ], [ %171, %167 ]
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %7, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #9
  %63 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %54, align 8
  %64 = icmp eq %"class.fxcrt::StringDataTemplate"* %63, null
  br i1 %64, label %99, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, %62
  br i1 %68, label %69, label %99

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %63, i64 0, i32 3, i64 %62
  %71 = load i32, i32* %70, align 4
  %72 = icmp ugt i32 %71, 127
  br i1 %72, label %99, label %73

73:                                               ; preds = %69, %96
  %74 = phi i32 [ %97, %96 ], [ %71, %69 ]
  %75 = phi i64 [ %83, %96 ], [ %62, %69 ]
  %76 = phi i64 [ %82, %96 ], [ 0, %69 ]
  %77 = call i32 @iswdigit(i32 %74) #9
  %78 = icmp ne i32 %77, 0
  %79 = icmp ult i64 %75, %67
  %80 = and i1 %79, %78
  br i1 %80, label %81, label %100

81:                                               ; preds = %73
  %82 = add i64 %76, 1
  %83 = add nuw i64 %75, 1
  %84 = icmp ult i64 %83, %67
  br i1 %84, label %85, label %96

85:                                               ; preds = %81
  %86 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %54, align 8
  %87 = icmp eq %"class.fxcrt::StringDataTemplate"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %86, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp ugt i64 %90, %83
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %88, %85
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %86, i64 0, i32 3, i64 %83
  %95 = load i32, i32* %94, align 4
  br label %96

96:                                               ; preds = %93, %81
  %97 = phi i32 [ %95, %93 ], [ %74, %81 ]
  %98 = icmp ugt i32 %97, 127
  br i1 %98, label %100, label %73

99:                                               ; preds = %65, %59, %69
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #9
  br label %105

100:                                              ; preds = %73, %96
  %101 = phi i64 [ %76, %73 ], [ %82, %96 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #9
  %102 = icmp ugt i64 %101, 12
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 902) #9
  call void @_ZN26CBC_PDF417HighLevelEncoder13EncodeNumericERKN5fxcrt10WideStringEmmPS1_(%"class.fxcrt::WideString"* nonnull dereferenceable(8) %5, i64 %62, i64 %101, %"class.fxcrt::WideString"* nonnull %6)
  br label %167

105:                                              ; preds = %99, %100
  %106 = phi i64 [ 0, %99 ], [ %101, %100 ]
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %8, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #9
  %107 = call i64 @_ZN26CBC_PDF417HighLevelEncoder29DetermineConsecutiveTextCountEN5fxcrt10WideStringEm(%"class.fxcrt::WideString"* nonnull %8, i64 %62)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #9
  %108 = icmp ugt i64 %107, 4
  %109 = icmp eq i64 %106, %49
  %110 = or i1 %109, %108
  br i1 %110, label %111, label %118

111:                                              ; preds = %105
  %112 = icmp eq i32 %60, 1
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 900) #9
  br label %115

115:                                              ; preds = %111, %113
  %116 = phi i32 [ 0, %113 ], [ %61, %111 ]
  %117 = call i32 @_ZN26CBC_PDF417HighLevelEncoder10EncodeTextERKN5fxcrt10WideStringEmmNS_7SubModeEPS1_(%"class.fxcrt::WideString"* nonnull dereferenceable(8) %5, i64 %62, i64 %107, i32 %116, %"class.fxcrt::WideString"* nonnull %6)
  br label %167

118:                                              ; preds = %105
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %9, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #9
  %119 = load %"class.fxcrt::StringDataTemplate.5"*, %"class.fxcrt::StringDataTemplate.5"** %13, align 8, !noalias !7
  %120 = icmp eq %"class.fxcrt::StringDataTemplate.5"* %119, null
  %121 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %119, i64 0, i32 3, i64 0
  %122 = select i1 %120, i8* null, i8* %121
  br i1 %120, label %126, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %119, i64 0, i32 1
  %125 = load i64, i64* %124, align 8, !noalias !7
  br label %126

126:                                              ; preds = %118, %123
  %127 = phi i64 [ %125, %123 ], [ 0, %118 ]
  store i8* %122, i8** %55, align 8, !alias.scope !10
  store i64 %127, i64* %56, align 8, !alias.scope !10
  %128 = call { i8, i64 } @_ZN26CBC_PDF417HighLevelEncoder31DetermineConsecutiveBinaryCountEN5fxcrt10WideStringEN6pdfium4spanIKhEEm(%"class.fxcrt::WideString"* nonnull %9, %"class.pdfium::span.14"* nonnull %10, i64 %62)
  %129 = extractvalue { i8, i64 } %128, 0
  %130 = extractvalue { i8, i64 } %128, 1
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #9
  switch i8 %129, label %131 [
    i8 0, label %165
    i8 1, label %132
  ], !prof !13

131:                                              ; preds = %126
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !14
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !15
  unreachable

132:                                              ; preds = %126
  %133 = icmp eq i64 %130, 0
  %134 = select i1 %133, i64 1, i64 %130
  %135 = icmp eq i64 %134, 1
  %136 = icmp eq i32 %60, 1
  %137 = and i1 %136, %135
  %138 = load %"class.fxcrt::StringDataTemplate.5"*, %"class.fxcrt::StringDataTemplate.5"** %13, align 8
  %139 = icmp eq %"class.fxcrt::StringDataTemplate.5"* %138, null
  %140 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %138, i64 0, i32 3, i64 0
  %141 = select i1 %139, i8* null, i8* %140
  br i1 %137, label %142, label %159

142:                                              ; preds = %132
  br i1 %139, label %146, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %138, i64 0, i32 1
  %145 = load i64, i64* %144, align 8, !noalias !16
  br label %146

146:                                              ; preds = %142, %143
  %147 = phi i64 [ %145, %143 ], [ 0, %142 ]
  %148 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 913) #9
  %149 = icmp eq i64 %62, -1
  br i1 %149, label %167, label %150

150:                                              ; preds = %146
  %151 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 901) #9
  %152 = icmp ult i64 %62, %147
  br i1 %152, label %154, label %153, !prof !2

153:                                              ; preds = %150
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !19
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !20
  unreachable

154:                                              ; preds = %150
  %155 = getelementptr inbounds i8, i8* %141, i64 %62
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %157) #9
  br label %167

159:                                              ; preds = %132
  br i1 %139, label %163, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %138, i64 0, i32 1
  %162 = load i64, i64* %161, align 8, !noalias !21
  br label %163

163:                                              ; preds = %159, %160
  %164 = phi i64 [ %162, %160 ], [ 0, %159 ]
  store i8* %141, i8** %57, align 8, !alias.scope !24
  store i64 %164, i64* %58, align 8, !alias.scope !24
  call void @_ZN26CBC_PDF417HighLevelEncoder12EncodeBinaryEN6pdfium4spanIKhEEmmNS_12EncodingModeEPN5fxcrt10WideStringE(%"class.pdfium::span.14"* nonnull %11, i64 %62, i64 %134, i32 %60, %"class.fxcrt::WideString"* nonnull %6)
  br label %167

165:                                              ; preds = %126
  %166 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %166, align 8
  br label %176

167:                                              ; preds = %154, %163, %146, %115, %103
  %168 = phi i64 [ %101, %103 ], [ %107, %115 ], [ 1, %146 ], [ %134, %163 ], [ 1, %154 ]
  %169 = phi i32 [ 0, %103 ], [ %117, %115 ], [ %61, %146 ], [ 0, %163 ], [ %61, %154 ]
  %170 = phi i32 [ 3, %103 ], [ 1, %115 ], [ 1, %146 ], [ 2, %163 ], [ 1, %154 ]
  %171 = add i64 %168, %62
  %172 = icmp ult i64 %171, %49
  br i1 %172, label %59, label %173

173:                                              ; preds = %167, %48
  %174 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %174, align 8
  %175 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %175, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6) #9
  br label %176

176:                                              ; preds = %173, %165
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"*, i64) local_unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN26CBC_PDF417HighLevelEncoder30DetermineConsecutiveDigitCountEN5fxcrt10WideStringEm(%"class.fxcrt::WideString"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %3, align 8
  %5 = icmp eq %"class.fxcrt::StringDataTemplate"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %1
  br i1 %9, label %10, label %40

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %4, i64 0, i32 3, i64 %1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, 127
  br i1 %13, label %40, label %14

14:                                               ; preds = %10, %37
  %15 = phi i32 [ %38, %37 ], [ %12, %10 ]
  %16 = phi i64 [ %24, %37 ], [ %1, %10 ]
  %17 = phi i64 [ %23, %37 ], [ 0, %10 ]
  %18 = tail call i32 @iswdigit(i32 %15) #9
  %19 = icmp ne i32 %18, 0
  %20 = icmp ult i64 %16, %8
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %40

22:                                               ; preds = %14
  %23 = add i64 %17, 1
  %24 = add nuw i64 %16, 1
  %25 = icmp ult i64 %24, %8
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %3, align 8
  %28 = icmp eq %"class.fxcrt::StringDataTemplate"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %27, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, %24
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %29, %26
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %27, i64 0, i32 3, i64 %24
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %34, %22
  %38 = phi i32 [ %36, %34 ], [ %15, %22 ]
  %39 = icmp ugt i32 %38, 127
  br i1 %39, label %40, label %14

40:                                               ; preds = %14, %37, %10, %2, %6
  %41 = phi i64 [ 0, %6 ], [ 0, %2 ], [ 0, %10 ], [ %17, %14 ], [ %23, %37 ]
  ret i64 %41
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26CBC_PDF417HighLevelEncoder13EncodeNumericERKN5fxcrt10WideStringEmmPS1_(%"class.fxcrt::WideString"* dereferenceable(8), i64, i64, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.BigInteger, align 8
  %6 = alloca %class.BigInteger, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %class.BigInteger, align 8
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::WideString", align 8
  %14 = alloca %"class.fxcrt::WideString", align 8
  %15 = alloca %class.BigInteger, align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %class.BigInteger, align 8
  %18 = alloca %class.BigInteger, align 8
  %19 = bitcast %class.BigInteger* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN10BigIntegerC1Ei(%class.BigInteger* nonnull %10, i32 900) #9
  %20 = icmp eq i64 %2, 0
  br i1 %20, label %178, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  %23 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  %25 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.fxcrt::WideString"* %13 to i8*
  %27 = bitcast %"class.fxcrt::WideString"* %14 to i8*
  %28 = bitcast i32* %7 to i8*
  %29 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %30 = bitcast %"class.fxcrt::StringViewTemplate"* %9 to i8*
  %31 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %8, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 1
  %36 = bitcast %class.BigInteger* %15 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = bitcast %class.BigInteger* %17 to i8*
  %44 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %10, i64 0, i32 0
  %45 = bitcast %class.BigInteger* %6 to i8*
  %46 = bitcast %class.BigInteger* %6 to i64*
  %47 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %6, i64 0, i32 1
  %48 = bitcast %class.BigUnsigned* %47 to i8*
  %49 = bitcast %class.BigInteger* %17 to i64*
  %50 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %17, i64 0, i32 1
  %51 = bitcast %class.BigUnsigned* %50 to i8*
  %52 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %6, i64 0, i32 1, i32 0, i32 2
  %53 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %17, i64 0, i32 1, i32 0, i32 2
  %54 = bitcast %class.BigInteger* %18 to i8*
  %55 = bitcast %class.BigInteger* %18 to i64*
  %56 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %18, i64 0, i32 1
  %57 = bitcast %class.BigUnsigned* %56 to i8*
  %58 = bitcast %class.BigInteger* %5 to i8*
  %59 = bitcast %class.BigInteger* %5 to i64*
  %60 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %5, i64 0, i32 1
  %61 = bitcast %class.BigUnsigned* %60 to i8*
  %62 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %5, i64 0, i32 1, i32 0, i32 2
  %63 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %18, i64 0, i32 1, i32 0, i32 2
  %64 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %15, i64 0, i32 0
  %65 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %15, i64 0, i32 1, i32 0, i32 2
  br label %66

66:                                               ; preds = %21, %160
  %67 = phi i64 [ 0, %21 ], [ %155, %160 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %23, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %11) #9
  %68 = sub i64 %2, %67
  %69 = icmp ult i64 %68, 44
  %70 = select i1 %69, i64 %68, i64 44
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  store %"class.fxcrt::StringDataTemplate.5"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.5"*), %"class.fxcrt::StringDataTemplate.5"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %71 = add i64 %67, %1
  call void @_ZNK5fxcrt10WideString6SubstrEmm(%"class.fxcrt::WideString"* nonnull sret %14, %"class.fxcrt::WideString"* %0, i64 %71, i64 %70) #9
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  store i32 49, i32* %7, align 4, !noalias !27
  store i32* %7, i32** %31, align 8, !noalias !27
  store i64 1, i64* %32, align 8, !noalias !27
  %72 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %33, align 8, !noalias !30
  %73 = icmp eq %"class.fxcrt::StringDataTemplate"* %72, null
  %74 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %72, i64 0, i32 3
  %75 = select i1 %73, [1 x i32]* @.str, [1 x i32]* %74
  %76 = getelementptr inbounds [1 x i32], [1 x i32]* %75, i64 0, i64 0
  br i1 %73, label %80, label %77

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %72, i64 0, i32 1
  %79 = load i64, i64* %78, align 8, !noalias !33
  br label %80

80:                                               ; preds = %66, %77
  %81 = phi i64 [ %79, %77 ], [ 0, %66 ]
  store i32* %76, i32** %34, align 8, !alias.scope !33, !noalias !27
  store i64 %81, i64* %35, align 8, !alias.scope !33, !noalias !27
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %13, %"class.fxcrt::StringViewTemplate"* nonnull %8, %"class.fxcrt::StringViewTemplate"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  call void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* nonnull sret %12, %"class.fxcrt::WideString"* nonnull %13) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %13) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  %82 = load %"class.fxcrt::StringDataTemplate.5"*, %"class.fxcrt::StringDataTemplate.5"** %25, align 8
  %83 = icmp eq %"class.fxcrt::StringDataTemplate.5"* %82, null
  %84 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %82, i64 0, i32 3
  %85 = select i1 %83, [1 x i8]* @.str.1, [1 x i8]* %84
  %86 = getelementptr inbounds [1 x i8], [1 x i8]* %85, i64 0, i64 0
  %87 = call i64 @strlen(i8* %86) #9
  %88 = icmp ugt i64 %87, -17
  br i1 %88, label %89, label %91

89:                                               ; preds = %80
  %90 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %90) #10
  unreachable

91:                                               ; preds = %80
  %92 = icmp ult i64 %87, 23
  br i1 %92, label %98, label %93

93:                                               ; preds = %91
  %94 = add nuw i64 %87, 16
  %95 = and i64 %94, -16
  %96 = call i8* @_Znwm(i64 %95) #11
  store i8* %96, i8** %38, align 8
  %97 = or i64 %95, -9223372036854775808
  store i64 %97, i64* %39, align 8
  store i64 %87, i64* %40, align 8
  br label %101

98:                                               ; preds = %91
  %99 = trunc i64 %87 to i8
  store i8 %99, i8* %42, align 1
  %100 = icmp eq i64 %87, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %98, %93
  %102 = phi i8* [ %96, %93 ], [ %37, %98 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %102, i8* align 1 %86, i64 %87, i1 false) #9
  br label %103

103:                                              ; preds = %98, %101
  %104 = phi i8* [ %37, %98 ], [ %102, %101 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %87
  store i8 0, i8* %105, align 1
  call void @_Z18stringToBigIntegerRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(%class.BigInteger* nonnull sret %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #9
  %106 = load i8, i8* %42, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  %109 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %109) #11
  br label %110

110:                                              ; preds = %103, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  br label %111

111:                                              ; preds = %144, %110
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #9
  %112 = load i32, i32* %44, align 8, !noalias !34
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @abort() #10
  unreachable

115:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9, !noalias !34
  store i64 -6148914694099828736, i64* %46, align 8, !noalias !34
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #9, !noalias !34
  store i64 -6148914694099828736, i64* %49, align 8, !alias.scope !34
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #9, !alias.scope !34
  %116 = call dereferenceable(24) %class.BigInteger* @_ZN10BigIntegeraSERKS_(%class.BigInteger* nonnull %17, %class.BigInteger* nonnull dereferenceable(24) %15) #9
  call void @_ZN10BigInteger19divideWithRemainderERKS_RS_(%class.BigInteger* nonnull %17, %class.BigInteger* nonnull dereferenceable(24) %10, %class.BigInteger* nonnull dereferenceable(24) %6) #9
  %117 = load i64*, i64** %52, align 8, !noalias !34
  %118 = icmp eq i64* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast i64* %117 to i8*
  call void @_ZdaPv(i8* %120) #11
  br label %121

121:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9, !noalias !34
  %122 = call i32 @_ZNK10BigInteger5toIntEv(%class.BigInteger* nonnull %17) #9
  %123 = load i64*, i64** %53, align 8
  %124 = icmp eq i64* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = bitcast i64* %123 to i8*
  call void @_ZdaPv(i8* %126) #11
  br label %127

127:                                              ; preds = %121, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #9
  %128 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %11, i32 signext %122) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #9
  %129 = load i32, i32* %44, align 8, !noalias !37
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  call void @abort() #10
  unreachable

132:                                              ; preds = %127
  store i64 -6148914694099828736, i64* %55, align 8, !alias.scope !37
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #9, !alias.scope !37
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #9, !noalias !37
  store i64 -6148914694099828736, i64* %59, align 8, !noalias !37
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #9, !noalias !37
  %133 = call dereferenceable(24) %class.BigInteger* @_ZN10BigIntegeraSERKS_(%class.BigInteger* nonnull %5, %class.BigInteger* nonnull dereferenceable(24) %15) #9, !noalias !37
  call void @_ZN10BigInteger19divideWithRemainderERKS_RS_(%class.BigInteger* nonnull %5, %class.BigInteger* nonnull dereferenceable(24) %10, %class.BigInteger* nonnull dereferenceable(24) %18) #9
  %134 = load i64*, i64** %62, align 8, !noalias !37
  %135 = icmp eq i64* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  %137 = bitcast i64* %134 to i8*
  call void @_ZdaPv(i8* %137) #11
  br label %138

138:                                              ; preds = %132, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #9, !noalias !37
  %139 = call dereferenceable(24) %class.BigInteger* @_ZN10BigIntegeraSERKS_(%class.BigInteger* nonnull %15, %class.BigInteger* nonnull dereferenceable(24) %18) #9
  %140 = load i64*, i64** %63, align 8
  %141 = icmp eq i64* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i64* %140 to i8*
  call void @_ZdaPv(i8* %143) #11
  br label %144

144:                                              ; preds = %138, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  %145 = load i32, i32* %64, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %111

147:                                              ; preds = %144
  %148 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %23, align 8
  %149 = icmp eq %"class.fxcrt::StringDataTemplate"* %148, null
  br i1 %149, label %154, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %148, i64 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %162

154:                                              ; preds = %170, %147, %150
  %155 = add i64 %70, %67
  %156 = load i64*, i64** %65, align 8
  %157 = icmp eq i64* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  %159 = bitcast i64* %156 to i8*
  call void @_ZdaPv(i8* %159) #11
  br label %160

160:                                              ; preds = %154, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %161 = icmp ult i64 %155, %2
  br i1 %161, label %66, label %178

162:                                              ; preds = %150, %175
  %163 = phi i64 [ %165, %175 ], [ %152, %150 ]
  %164 = phi %"class.fxcrt::StringDataTemplate"* [ %176, %175 ], [ %148, %150 ]
  %165 = add i64 %163, -1
  %166 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %164, i64 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = icmp ugt i64 %167, %165
  br i1 %168, label %170, label %169, !prof !2

169:                                              ; preds = %175, %162
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %164, i64 0, i32 3, i64 %165
  %172 = load i32, i32* %171, align 4
  %173 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %172) #9
  %174 = icmp eq i64 %165, 0
  br i1 %174, label %154, label %175

175:                                              ; preds = %170
  %176 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %23, align 8
  %177 = icmp eq %"class.fxcrt::StringDataTemplate"* %176, null
  br i1 %177, label %169, label %162

178:                                              ; preds = %160, %4
  %179 = getelementptr inbounds %class.BigInteger, %class.BigInteger* %10, i64 0, i32 1, i32 0, i32 2
  %180 = load i64*, i64** %179, align 8
  %181 = icmp eq i64* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = bitcast i64* %180 to i8*
  call void @_ZdaPv(i8* %183) #11
  br label %184

184:                                              ; preds = %178, %182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN26CBC_PDF417HighLevelEncoder29DetermineConsecutiveTextCountEN5fxcrt10WideStringEm(%"class.fxcrt::WideString"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %3, align 8
  %5 = icmp eq %"class.fxcrt::StringDataTemplate"* %4, null
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %1
  br i1 %9, label %10, label %75

10:                                               ; preds = %6, %72
  %11 = phi i64 [ %70, %72 ], [ %1, %6 ]
  %12 = phi %"class.fxcrt::StringDataTemplate"* [ %73, %72 ], [ %4, %6 ]
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %12, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, %11
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %72, %10
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %12, i64 0, i32 3, i64 %11
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %45, %17
  %21 = phi i64 [ 0, %17 ], [ %31, %45 ]
  %22 = phi i32 [ %19, %17 ], [ %46, %45 ]
  %23 = phi i64 [ %11, %17 ], [ %32, %45 ]
  %24 = icmp ugt i32 %22, 127
  br i1 %24, label %52, label %25

25:                                               ; preds = %20
  %26 = tail call i32 @iswdigit(i32 %22) #9
  %27 = icmp eq i32 %26, 0
  %28 = icmp uge i64 %23, %8
  %29 = or i1 %28, %27
  br i1 %29, label %52, label %30

30:                                               ; preds = %25
  %31 = add nuw nsw i64 %21, 1
  %32 = add nuw i64 %23, 1
  %33 = icmp ult i64 %32, %8
  br i1 %33, label %34, label %45

34:                                               ; preds = %30
  %35 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %3, align 8
  %36 = icmp eq %"class.fxcrt::StringDataTemplate"* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %35, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, %32
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37, %34
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %35, i64 0, i32 3, i64 %32
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %42, %30
  %46 = phi i32 [ %44, %42 ], [ %22, %30 ]
  %47 = icmp eq i64 %31, 13
  br i1 %47, label %48, label %20

48:                                               ; preds = %45
  %49 = sub i64 %32, %1
  %50 = xor i64 %21, -1
  %51 = add i64 %49, %50
  br label %78

52:                                               ; preds = %25, %20
  %53 = icmp eq i64 %21, 0
  br i1 %53, label %54, label %69

54:                                               ; preds = %52
  %55 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %3, align 8
  %56 = icmp eq %"class.fxcrt::StringDataTemplate"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %55, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %59, %23
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %57, %54
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %55, i64 0, i32 3, i64 %23
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, -32
  %66 = icmp ult i32 %65, 95
  %67 = add nuw i64 %23, 1
  br i1 %66, label %69, label %68

68:                                               ; preds = %62
  switch i32 %64, label %75 [
    i32 13, label %69
    i32 10, label %69
    i32 9, label %69
  ]

69:                                               ; preds = %68, %68, %68, %62, %52
  %70 = phi i64 [ %23, %52 ], [ %67, %68 ], [ %67, %62 ], [ %67, %68 ], [ %67, %68 ]
  %71 = icmp ult i64 %70, %8
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %3, align 8
  %74 = icmp eq %"class.fxcrt::StringDataTemplate"* %73, null
  br i1 %74, label %16, label %10

75:                                               ; preds = %69, %68, %2, %6
  %76 = phi i64 [ %1, %6 ], [ %1, %2 ], [ %23, %68 ], [ %70, %69 ]
  %77 = sub i64 %76, %1
  br label %78

78:                                               ; preds = %48, %75
  %79 = phi i64 [ %77, %75 ], [ %51, %48 ]
  ret i64 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN26CBC_PDF417HighLevelEncoder10EncodeTextERKN5fxcrt10WideStringEmmNS_7SubModeEPS1_(%"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), i64, i64, i32, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %8, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %6) #9
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %6, i64 %2) #9
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %158, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %10, %154
  %13 = phi i32 [ %3, %10 ], [ %156, %154 ]
  %14 = phi i64 [ 0, %10 ], [ %155, %154 ]
  %15 = add i64 %14, %1
  %16 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %11, align 8
  %17 = icmp eq %"class.fxcrt::StringDataTemplate"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, %15
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %18, %12
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 3, i64 %15
  %25 = load i32, i32* %24, align 4
  switch i32 %13, label %140 [
    i32 0, label %26
    i32 1, label %58
    i32 2, label %91
  ]

26:                                               ; preds = %23
  %27 = icmp eq i32 %25, 32
  %28 = add i32 %25, -65
  %29 = icmp ult i32 %28, 26
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  br i1 %27, label %32, label %34

32:                                               ; preds = %31
  %33 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 26) #9
  br label %152

34:                                               ; preds = %31
  %35 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %28) #9
  br label %152

36:                                               ; preds = %26
  %37 = add i32 %25, -97
  %38 = icmp ult i32 %37, 26
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 27) #9
  br label %154

41:                                               ; preds = %36
  %42 = icmp ugt i32 %25, 127
  br i1 %42, label %152, label %43

43:                                               ; preds = %41
  %44 = sext i32 %25 to i64
  %45 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_16kMixedE, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, -1
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  %49 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 28) #9
  br label %154

50:                                               ; preds = %43
  %51 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_112kPunctuationE, i64 0, i64 %44
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, -1
  br i1 %53, label %152, label %54

54:                                               ; preds = %50
  %55 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 29) #9
  %56 = sext i8 %52 to i32
  %57 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %56) #9
  br label %152

58:                                               ; preds = %23
  %59 = icmp eq i32 %25, 32
  %60 = add i32 %25, -97
  %61 = icmp ult i32 %60, 26
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %58
  br i1 %59, label %64, label %66

64:                                               ; preds = %63
  %65 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 26) #9
  br label %152

66:                                               ; preds = %63
  %67 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %60) #9
  br label %152

68:                                               ; preds = %58
  %69 = add i32 %25, -65
  %70 = icmp ult i32 %69, 26
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 27) #9
  %73 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %69) #9
  br label %152

74:                                               ; preds = %68
  %75 = icmp ugt i32 %25, 127
  br i1 %75, label %152, label %76

76:                                               ; preds = %74
  %77 = sext i32 %25 to i64
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_16kMixedE, i64 0, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, -1
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 28) #9
  br label %154

83:                                               ; preds = %76
  %84 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_112kPunctuationE, i64 0, i64 %77
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -1
  br i1 %86, label %152, label %87

87:                                               ; preds = %83
  %88 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 29) #9
  %89 = sext i8 %85 to i32
  %90 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %89) #9
  br label %152

91:                                               ; preds = %23
  %92 = icmp ugt i32 %25, 127
  br i1 %92, label %101, label %93

93:                                               ; preds = %91
  %94 = sext i32 %25 to i64
  %95 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_16kMixedE, i64 0, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, -1
  br i1 %97, label %101, label %98

98:                                               ; preds = %93
  %99 = sext i8 %96 to i32
  %100 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %99) #9
  br label %152

101:                                              ; preds = %93, %91
  %102 = icmp eq i32 %25, 32
  %103 = add i32 %25, -65
  %104 = icmp ult i32 %103, 26
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  %107 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 28) #9
  br label %154

108:                                              ; preds = %101
  %109 = add i32 %25, -97
  %110 = icmp ult i32 %109, 26
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 27) #9
  br label %154

113:                                              ; preds = %108
  %114 = add nuw i64 %15, 1
  %115 = icmp ult i64 %114, %2
  br i1 %115, label %116, label %130

116:                                              ; preds = %113
  %117 = icmp ugt i64 %20, %114
  br i1 %117, label %119, label %118, !prof !2

118:                                              ; preds = %116
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %16, i64 0, i32 3, i64 %114
  %121 = load i32, i32* %120, align 4
  %122 = icmp ugt i32 %121, 127
  br i1 %122, label %130, label %123

123:                                              ; preds = %119
  %124 = sext i32 %121 to i64
  %125 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_112kPunctuationE, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, -1
  br i1 %127, label %130, label %128

128:                                              ; preds = %123
  %129 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 25) #9
  br label %154

130:                                              ; preds = %123, %119, %113
  br i1 %92, label %152, label %131

131:                                              ; preds = %130
  %132 = sext i32 %25 to i64
  %133 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_112kPunctuationE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, -1
  br i1 %135, label %152, label %136

136:                                              ; preds = %131
  %137 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 29) #9
  %138 = sext i8 %134 to i32
  %139 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %138) #9
  br label %152

140:                                              ; preds = %23
  %141 = icmp ugt i32 %25, 127
  br i1 %141, label %150, label %142

142:                                              ; preds = %140
  %143 = sext i32 %25 to i64
  %144 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN12_GLOBAL__N_112kPunctuationE, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, -1
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = sext i8 %145 to i32
  %149 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext %148) #9
  br label %152

150:                                              ; preds = %142, %140
  %151 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %6, i32 signext 29) #9
  br label %154

152:                                              ; preds = %50, %83, %131, %130, %74, %41, %136, %87, %64, %66, %54, %32, %34, %147, %98, %71
  %153 = add nuw i64 %14, 1
  br label %154

154:                                              ; preds = %128, %152, %150, %111, %106, %81, %48, %39
  %155 = phi i64 [ %153, %152 ], [ %14, %150 ], [ %14, %106 ], [ %14, %111 ], [ %14, %128 ], [ %14, %81 ], [ %14, %39 ], [ %14, %48 ]
  %156 = phi i32 [ %13, %152 ], [ 0, %150 ], [ 0, %106 ], [ 1, %111 ], [ 3, %128 ], [ 2, %81 ], [ 1, %39 ], [ 2, %48 ]
  %157 = icmp ult i64 %155, %2
  br i1 %157, label %12, label %158

158:                                              ; preds = %154, %5
  %159 = phi i32 [ %3, %5 ], [ %156, %154 ]
  %160 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %8, align 8
  %161 = icmp eq %"class.fxcrt::StringDataTemplate"* %160, null
  br i1 %161, label %207, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %160, i64 0, i32 1
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %207, label %169

166:                                              ; preds = %199
  %167 = and i64 %164, 1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %207, label %203

169:                                              ; preds = %162, %199
  %170 = phi i64 [ %201, %199 ], [ 0, %162 ]
  %171 = phi i32 [ %200, %199 ], [ 0, %162 ]
  %172 = and i64 %170, 1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %188, label %174

174:                                              ; preds = %169
  %175 = mul nsw i32 %171, 30
  %176 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %8, align 8
  %177 = icmp eq %"class.fxcrt::StringDataTemplate"* %176, null
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %176, i64 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = icmp ugt i64 %180, %170
  br i1 %181, label %183, label %182, !prof !2

182:                                              ; preds = %178, %174
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %176, i64 0, i32 3, i64 %170
  %185 = load i32, i32* %184, align 4
  %186 = add nsw i32 %185, %175
  %187 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %186) #9
  br label %199

188:                                              ; preds = %169
  %189 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %8, align 8
  %190 = icmp eq %"class.fxcrt::StringDataTemplate"* %189, null
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %189, i64 0, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = icmp ugt i64 %193, %170
  br i1 %194, label %196, label %195, !prof !2

195:                                              ; preds = %191, %188
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %189, i64 0, i32 3, i64 %170
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %196, %183
  %200 = phi i32 [ %186, %183 ], [ %198, %196 ]
  %201 = add nuw i64 %170, 1
  %202 = icmp eq i64 %201, %164
  br i1 %202, label %166, label %169

203:                                              ; preds = %166
  %204 = mul nsw i32 %200, 30
  %205 = add nsw i32 %204, 29
  %206 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %205) #9
  br label %207

207:                                              ; preds = %158, %162, %166, %203
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret i32 %159
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN26CBC_PDF417HighLevelEncoder31DetermineConsecutiveBinaryCountEN5fxcrt10WideStringEN6pdfium4spanIKhEEm(%"class.fxcrt::WideString"* nocapture readonly, %"class.pdfium::span.14"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  br i1 %6, label %97, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %2
  br i1 %10, label %11, label %97

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %1, i64 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %11, %94
  %15 = phi %"class.fxcrt::StringDataTemplate"* [ %5, %11 ], [ %74, %94 ]
  %16 = phi i64 [ %2, %11 ], [ %95, %94 ]
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, %16
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %14
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 3, i64 %16
  br label %23

23:                                               ; preds = %43, %21
  %24 = phi i32* [ %22, %21 ], [ %44, %43 ]
  %25 = phi i64 [ 0, %21 ], [ %32, %43 ]
  %26 = load i32, i32* %24, align 4
  %27 = icmp ugt i32 %26, 127
  br i1 %27, label %46, label %28

28:                                               ; preds = %23
  %29 = tail call i32 @iswdigit(i32 %26) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %28
  %32 = add nuw nsw i64 %25, 1
  %33 = add nuw i64 %32, %16
  %34 = icmp ult i64 %33, %9
  br i1 %34, label %35, label %46

35:                                               ; preds = %31
  %36 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %37 = icmp eq %"class.fxcrt::StringDataTemplate"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %36, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 %40, %33
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %38, %35
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %36, i64 0, i32 3, i64 %33
  %45 = icmp eq i64 %32, 13
  br i1 %45, label %52, label %23

46:                                               ; preds = %28, %31, %23
  %47 = phi i64 [ %25, %28 ], [ %25, %23 ], [ %32, %31 ]
  %48 = icmp ugt i64 %47, 12
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = add i32 %26, -32
  %51 = icmp ult i32 %50, 95
  br i1 %51, label %55, label %54

52:                                               ; preds = %46, %43
  %53 = sub i64 %16, %2
  br label %100

54:                                               ; preds = %49
  switch i32 %26, label %73 [
    i32 13, label %55
    i32 10, label %55
    i32 9, label %55
  ]

55:                                               ; preds = %54, %54, %54, %49
  %56 = add nuw i64 %16, 1
  %57 = icmp ult i64 %56, %9
  br i1 %57, label %58, label %73

58:                                               ; preds = %55
  %59 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %60 = icmp eq %"class.fxcrt::StringDataTemplate"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp ugt i64 %63, %56
  br i1 %64, label %66, label %65, !prof !2

65:                                               ; preds = %131, %120, %109, %61, %58, %139
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 3, i64 %56
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, -32
  %70 = icmp ult i32 %69, 95
  br i1 %70, label %106, label %105

71:                                               ; preds = %139
  %72 = sub i64 %16, %2
  br label %100

73:                                               ; preds = %128, %117, %106, %55, %54, %105, %116, %127, %138
  %74 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %75 = icmp eq %"class.fxcrt::StringDataTemplate"* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %74, i64 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = icmp ugt i64 %78, %16
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %76, %73
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !6
  unreachable

81:                                               ; preds = %76
  %82 = load i64, i64* %12, align 8
  %83 = icmp ugt i64 %82, %16
  br i1 %83, label %85, label %84, !prof !2

84:                                               ; preds = %81
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !19
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !20
  unreachable

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %74, i64 0, i32 3, i64 %16
  %87 = load i32, i32* %86, align 4
  %88 = load i8*, i8** %13, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 %16
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 63
  %92 = icmp ne i32 %87, 63
  %93 = and i1 %92, %91
  br i1 %93, label %100, label %94

94:                                               ; preds = %85
  %95 = add nuw i64 %16, 1
  %96 = icmp eq i64 %95, %9
  br i1 %96, label %97, label %14

97:                                               ; preds = %94, %3, %7
  %98 = phi i64 [ %2, %7 ], [ %2, %3 ], [ %9, %94 ]
  %99 = sub i64 %98, %2
  br label %100

100:                                              ; preds = %85, %71, %52, %97
  %101 = phi i64 [ %99, %97 ], [ %72, %71 ], [ %53, %52 ], [ 0, %85 ]
  %102 = phi i8 [ 1, %97 ], [ 1, %71 ], [ 1, %52 ], [ 0, %85 ]
  %103 = insertvalue { i8, i64 } undef, i8 %102, 0
  %104 = insertvalue { i8, i64 } %103, i64 %101, 1
  ret { i8, i64 } %104

105:                                              ; preds = %66
  switch i32 %68, label %73 [
    i32 13, label %106
    i32 10, label %106
    i32 9, label %106
  ]

106:                                              ; preds = %105, %105, %105, %66
  %107 = add nuw i64 %16, 2
  %108 = icmp ult i64 %107, %9
  br i1 %108, label %109, label %73

109:                                              ; preds = %106
  %110 = icmp ugt i64 %63, %107
  br i1 %110, label %111, label %65, !prof !2

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 3, i64 %107
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, -32
  %115 = icmp ult i32 %114, 95
  br i1 %115, label %117, label %116

116:                                              ; preds = %111
  switch i32 %113, label %73 [
    i32 13, label %117
    i32 10, label %117
    i32 9, label %117
  ]

117:                                              ; preds = %116, %116, %116, %111
  %118 = add nuw i64 %16, 3
  %119 = icmp ult i64 %118, %9
  br i1 %119, label %120, label %73

120:                                              ; preds = %117
  %121 = icmp ugt i64 %63, %118
  br i1 %121, label %122, label %65, !prof !2

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 3, i64 %118
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %124, -32
  %126 = icmp ult i32 %125, 95
  br i1 %126, label %128, label %127

127:                                              ; preds = %122
  switch i32 %124, label %73 [
    i32 13, label %128
    i32 10, label %128
    i32 9, label %128
  ]

128:                                              ; preds = %127, %127, %127, %122
  %129 = add nuw i64 %16, 4
  %130 = icmp ult i64 %129, %9
  br i1 %130, label %131, label %73

131:                                              ; preds = %128
  %132 = icmp ugt i64 %63, %129
  br i1 %132, label %133, label %65, !prof !2

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %59, i64 0, i32 3, i64 %129
  %135 = load i32, i32* %134, align 4
  %136 = add i32 %135, -32
  %137 = icmp ult i32 %136, 95
  br i1 %137, label %139, label %138

138:                                              ; preds = %133
  switch i32 %135, label %73 [
    i32 13, label %139
    i32 10, label %139
    i32 9, label %139
  ]

139:                                              ; preds = %138, %138, %138, %133
  %140 = add nuw i64 %16, 5
  %141 = icmp uge i64 %140, %9
  %142 = icmp ugt i64 %63, %140
  %143 = or i1 %141, %142
  br i1 %143, label %71, label %65, !prof !40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26CBC_PDF417HighLevelEncoder12EncodeBinaryEN6pdfium4spanIKhEEmmNS_12EncodingModeEPN5fxcrt10WideStringE(%"class.pdfium::span.14"* nocapture readonly, i64, i64, i32, %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i64 %2, 1
  %7 = icmp eq i32 %3, 1
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext 913) #9
  br label %27

11:                                               ; preds = %5
  %12 = icmp ugt i64 %2, 5
  br i1 %12, label %13, label %27

13:                                               ; preds = %11
  %14 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext 924) #9
  %15 = add i64 %2, %1
  %16 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %0, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %13, %61
  %19 = phi i64 [ %1, %13 ], [ %109, %61 ]
  %20 = load i64, i64* %16, align 8
  %21 = icmp ugt i64 %20, %19
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %58, %55, %52, %49, %23, %18
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !19
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !20
  unreachable

23:                                               ; preds = %18
  %24 = load i8*, i8** %17, align 8
  %25 = add nuw i64 %19, 1
  %26 = icmp ugt i64 %20, %25
  br i1 %26, label %49, label %22, !prof !2

27:                                               ; preds = %61, %9, %11
  %28 = phi i64 [ %1, %11 ], [ %1, %9 ], [ %109, %61 ]
  %29 = add i64 %2, %1
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext 901) #9
  %33 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.pdfium::span.14", %"class.pdfium::span.14"* %0, i64 0, i32 0, i32 0
  br label %36

35:                                               ; preds = %41, %27
  ret void

36:                                               ; preds = %41, %31
  %37 = phi i64 [ %28, %31 ], [ %47, %41 ]
  %38 = load i64, i64* %33, align 8
  %39 = icmp ugt i64 %38, %37
  br i1 %39, label %41, label %40, !prof !2

40:                                               ; preds = %36
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !19
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !20
  unreachable

41:                                               ; preds = %36
  %42 = load i8*, i8** %34, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %37
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %45) #9
  %47 = add nuw i64 %37, 1
  %48 = icmp eq i64 %47, %29
  br i1 %48, label %35, label %36

49:                                               ; preds = %23
  %50 = add nuw i64 %19, 2
  %51 = icmp ugt i64 %20, %50
  br i1 %51, label %52, label %22, !prof !2

52:                                               ; preds = %49
  %53 = add nuw i64 %19, 3
  %54 = icmp ugt i64 %20, %53
  br i1 %54, label %55, label %22, !prof !2

55:                                               ; preds = %52
  %56 = add nuw i64 %19, 4
  %57 = icmp ugt i64 %20, %56
  br i1 %57, label %58, label %22, !prof !2

58:                                               ; preds = %55
  %59 = add nuw i64 %19, 5
  %60 = icmp ugt i64 %20, %59
  br i1 %60, label %61, label %22, !prof !2

61:                                               ; preds = %58
  %62 = getelementptr inbounds i8, i8* %24, i64 %19
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i64
  %65 = shl nuw nsw i64 %64, 8
  %66 = getelementptr inbounds i8, i8* %24, i64 %25
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %65, %68
  %70 = shl nuw nsw i64 %69, 8
  %71 = getelementptr inbounds i8, i8* %24, i64 %50
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = or i64 %70, %73
  %75 = shl nuw nsw i64 %74, 8
  %76 = getelementptr inbounds i8, i8* %24, i64 %53
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = or i64 %75, %78
  %80 = shl i64 %79, 8
  %81 = getelementptr inbounds i8, i8* %24, i64 %56
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i64
  %84 = or i64 %80, %83
  %85 = shl i64 %84, 8
  %86 = getelementptr inbounds i8, i8* %24, i64 %59
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = or i64 %85, %88
  %90 = srem i64 %89, 900
  %91 = trunc i64 %90 to i32
  %92 = sdiv i64 %89, 900
  %93 = srem i64 %92, 900
  %94 = trunc i64 %93 to i32
  %95 = sdiv i64 %89, 810000
  %96 = srem i64 %95, 900
  %97 = trunc i64 %96 to i32
  %98 = sdiv i64 %89, 729000000
  %99 = srem i64 %98, 900
  %100 = trunc i64 %99 to i32
  %101 = sdiv i64 %89, 656100000000
  %102 = srem i64 %101, 900
  %103 = trunc i64 %102 to i32
  %104 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %103) #9
  %105 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %100) #9
  %106 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %97) #9
  %107 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %94) #9
  %108 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %4, i32 signext %91) #9
  %109 = add nuw i64 %19, 6
  %110 = sub nuw i64 -6, %19
  %111 = add i64 %15, %110
  %112 = icmp ugt i64 %111, 5
  br i1 %112, label %18, label %27
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare void @_ZN10BigIntegerC1Ei(%class.BigInteger*, i32) unnamed_addr #2

declare void @_ZNK5fxcrt10WideString6SubstrEmm(%"class.fxcrt::WideString"* sret, %"class.fxcrt::WideString"*, i64, i64) local_unnamed_addr #2

declare void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::WideString"*) local_unnamed_addr #2

declare void @_Z18stringToBigIntegerRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(%class.BigInteger* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZNK10BigInteger5toIntEv(%class.BigInteger*) local_unnamed_addr #2

declare dereferenceable(24) %class.BigInteger* @_ZN10BigIntegeraSERKS_(%class.BigInteger*, %class.BigInteger* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

declare void @_ZN10BigInteger19divideWithRemainderERKS_RS_(%class.BigInteger*, %class.BigInteger* dereferenceable(24), %class.BigInteger* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143836605}
!4 = !{i32 -2143836584}
!5 = !{i32 -2143824877}
!6 = !{i32 -2143824856}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5fxcrt10ByteString8raw_spanEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5fxcrt10ByteString8raw_spanEv"}
!10 = !{!11, !8}
!11 = distinct !{!11, !12, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m: argument 0"}
!12 = distinct !{!12, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m"}
!13 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!14 = !{i32 -2143889689}
!15 = !{i32 -2143889668}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5fxcrt10ByteString8raw_spanEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5fxcrt10ByteString8raw_spanEv"}
!19 = !{i32 -2143838364}
!20 = !{i32 -2143838343}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5fxcrt10ByteString8raw_spanEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5fxcrt10ByteString8raw_spanEv"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m: argument 0"}
!26 = distinct !{!26, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN5fxcrtplEwRKNS_10WideStringE: argument 0"}
!29 = distinct !{!29, !"_ZN5fxcrtplEwRKNS_10WideStringE"}
!30 = !{!31, !28}
!31 = distinct !{!31, !32, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!32 = distinct !{!32, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!33 = !{!31}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK10BigIntegerrmERKS_: argument 0"}
!36 = distinct !{!36, !"_ZNK10BigIntegerrmERKS_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK10BigIntegerdvERKS_: argument 0"}
!39 = distinct !{!39, !"_ZNK10BigIntegerdvERKS_"}
!40 = !{!"branch_weights", i32 4001, i32 1}
