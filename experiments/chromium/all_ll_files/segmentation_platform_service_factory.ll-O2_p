; ModuleID = '../../chrome/browser/segmentation_platform/segmentation_platform_service_factory.cc'
source_filename = "../../chrome/browser/segmentation_platform/segmentation_platform_service_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.segmentation_platform::SegmentationPlatformServiceFactory" = type { %class.SimpleKeyedServiceFactory }
%class.SimpleKeyedServiceFactory = type { %class.KeyedServiceFactory }
%class.KeyedServiceFactory = type { %class.KeyedServiceBaseFactory.base, %"class.std::__1::map", %"class.std::__1::map.26" }
%class.KeyedServiceBaseFactory.base = type <{ i32 (...)**, %class.DependencyManager*, i8*, i32 }>
%class.DependencyManager = type { i32 (...)**, %class.DependencyGraph, %"class.std::__1::set" }
%class.DependencyGraph = type { %"class.std::__1::vector", %"class.std::__1::multimap", %"class.std::__1::vector" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.DependencyNode**, %class.DependencyNode**, %"class.std::__1::__compressed_pair" }
%class.DependencyNode = type { i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.DependencyNode** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.9" }
%"class.std::__1::__tree.9" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%class.SimpleDependencyManager = type { %class.DependencyManager }
%"class.segmentation_platform::SegmentationPlatformService" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%class.SimpleFactoryKey = type opaque
%class.KeyedServiceBaseFactory = type <{ i32 (...)**, %class.DependencyManager*, i8*, i32, [4 x i8] }>
%"class.user_prefs::PrefRegistrySyncable" = type opaque

$_ZN25SimpleKeyedServiceFactory20RegisterProfilePrefsEPN10user_prefs20PrefRegistrySyncableE = comdat any

$_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv = comdat any

$_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = comdat any

@.str = private unnamed_addr constant [28 x i8] c"SegmentationPlatformService\00", align 1
@_ZTVN21segmentation_platform34SegmentationPlatformServiceFactoryE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)* @_ZN21segmentation_platform34SegmentationPlatformServiceFactoryD2Ev to i8*), i8* bitcast (void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)* @_ZN21segmentation_platform34SegmentationPlatformServiceFactoryD0Ev to i8*), i8* bitcast (i8* (%class.SimpleKeyedServiceFactory*, i8*)* @_ZNK25SimpleKeyedServiceFactory15GetContextToUseEPv to i8*), i8* bitcast (i1 (%class.SimpleKeyedServiceFactory*)* @_ZNK25SimpleKeyedServiceFactory27ServiceIsCreatedWithContextEv to i8*), i8* bitcast (i1 (%class.KeyedServiceBaseFactory*)* @_ZNK23KeyedServiceBaseFactory25ServiceIsNULLWhileTestingEv to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, i8*)* @_ZN25SimpleKeyedServiceFactory15ContextShutdownEPv to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, i8*)* @_ZN25SimpleKeyedServiceFactory16ContextDestroyedEPv to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*)* @_ZN25SimpleKeyedServiceFactory13RegisterPrefsEPN10user_prefs20PrefRegistrySyncableE to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, i8*)* @_ZN25SimpleKeyedServiceFactory22SetEmptyTestingFactoryEPv to i8*), i8* bitcast (i1 (%class.SimpleKeyedServiceFactory*, i8*)* @_ZN25SimpleKeyedServiceFactory17HasTestingFactoryEPv to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, i8*)* @_ZN25SimpleKeyedServiceFactory16CreateServiceNowEPv to i8*), i8* bitcast (%class.KeyedService* (%class.SimpleKeyedServiceFactory*, i8*)* @_ZNK25SimpleKeyedServiceFactory23BuildServiceInstanceForEPv to i8*), i8* bitcast (i1 (%class.SimpleKeyedServiceFactory*, i8*)* @_ZNK25SimpleKeyedServiceFactory14IsOffTheRecordEPv to i8*), i8* bitcast (%class.SimpleFactoryKey* (%class.SimpleKeyedServiceFactory*, %class.SimpleFactoryKey*)* @_ZNK25SimpleKeyedServiceFactory11GetKeyToUseEP16SimpleFactoryKey to i8*), i8* bitcast (%class.KeyedService* (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*, %class.SimpleFactoryKey*)* @_ZNK21segmentation_platform34SegmentationPlatformServiceFactory23BuildServiceInstanceForEP16SimpleFactoryKey to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, %class.SimpleFactoryKey*)* @_ZN25SimpleKeyedServiceFactory21SimpleContextShutdownEP16SimpleFactoryKey to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, %class.SimpleFactoryKey*)* @_ZN25SimpleKeyedServiceFactory22SimpleContextDestroyedEP16SimpleFactoryKey to i8*), i8* bitcast (void (%class.SimpleKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*)* @_ZN25SimpleKeyedServiceFactory20RegisterProfilePrefsEPN10user_prefs20PrefRegistrySyncableE to i8*)] }, align 8
@_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN21segmentation_platform34SegmentationPlatformServiceFactoryC1Ev = hidden unnamed_addr alias void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*), void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)* @_ZN21segmentation_platform34SegmentationPlatformServiceFactoryC2Ev
@_ZN21segmentation_platform34SegmentationPlatformServiceFactoryD1Ev = hidden unnamed_addr alias void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*), void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)* @_ZN21segmentation_platform34SegmentationPlatformServiceFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.segmentation_platform::SegmentationPlatformServiceFactory"* @_ZN21segmentation_platform34SegmentationPlatformServiceFactory11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %13, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #6
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 80) #7
  %7 = bitcast i8* %6 to %class.SimpleKeyedServiceFactory*
  %8 = tail call %class.SimpleDependencyManager* @_ZN23SimpleDependencyManager11GetInstanceEv() #6
  tail call void @_ZN25SimpleKeyedServiceFactoryC2EPKcP23SimpleDependencyManager(%class.SimpleKeyedServiceFactory* nonnull %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), %class.SimpleDependencyManager* %8) #6
  %9 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN21segmentation_platform34SegmentationPlatformServiceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %10, void (i8*)* nonnull @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #6
  br label %13

11:                                               ; preds = %3
  %12 = load atomic i64, i64* @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %13

13:                                               ; preds = %0, %5, %11
  %14 = phi i64 [ %1, %0 ], [ %10, %5 ], [ %12, %11 ]
  %15 = inttoptr i64 %14 to %"class.segmentation_platform::SegmentationPlatformServiceFactory"*
  ret %"class.segmentation_platform::SegmentationPlatformServiceFactory"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.segmentation_platform::SegmentationPlatformService"* @_ZN21segmentation_platform34SegmentationPlatformServiceFactory9GetForKeyEP16SimpleFactoryKey(%class.SimpleFactoryKey*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #6
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = tail call i8* @_Znwm(i64 80) #7
  %8 = bitcast i8* %7 to %class.SimpleKeyedServiceFactory*
  %9 = tail call %class.SimpleDependencyManager* @_ZN23SimpleDependencyManager11GetInstanceEv() #6
  tail call void @_ZN25SimpleKeyedServiceFactoryC2EPKcP23SimpleDependencyManager(%class.SimpleKeyedServiceFactory* nonnull %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), %class.SimpleDependencyManager* %9) #6
  %10 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN21segmentation_platform34SegmentationPlatformServiceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = ptrtoint i8* %7 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %11, void (i8*)* nonnull @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #6
  br label %14

12:                                               ; preds = %4
  %13 = load atomic i64, i64* @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %14

14:                                               ; preds = %1, %6, %12
  %15 = phi i64 [ %2, %1 ], [ %11, %6 ], [ %13, %12 ]
  %16 = inttoptr i64 %15 to %"class.segmentation_platform::SegmentationPlatformServiceFactory"*
  %17 = getelementptr inbounds %"class.segmentation_platform::SegmentationPlatformServiceFactory", %"class.segmentation_platform::SegmentationPlatformServiceFactory"* %16, i64 0, i32 0
  %18 = tail call %class.KeyedService* @_ZN25SimpleKeyedServiceFactory16GetServiceForKeyEP16SimpleFactoryKeyb(%class.SimpleKeyedServiceFactory* %17, %class.SimpleFactoryKey* %0, i1 zeroext true) #6
  %19 = bitcast %class.KeyedService* %18 to %"class.segmentation_platform::SegmentationPlatformService"*
  ret %"class.segmentation_platform::SegmentationPlatformService"* %19
}

declare %class.KeyedService* @_ZN25SimpleKeyedServiceFactory16GetServiceForKeyEP16SimpleFactoryKeyb(%class.SimpleKeyedServiceFactory*, %class.SimpleFactoryKey*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21segmentation_platform34SegmentationPlatformServiceFactoryC2Ev(%"class.segmentation_platform::SegmentationPlatformServiceFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.segmentation_platform::SegmentationPlatformServiceFactory", %"class.segmentation_platform::SegmentationPlatformServiceFactory"* %0, i64 0, i32 0
  %3 = tail call %class.SimpleDependencyManager* @_ZN23SimpleDependencyManager11GetInstanceEv() #6
  tail call void @_ZN25SimpleKeyedServiceFactoryC2EPKcP23SimpleDependencyManager(%class.SimpleKeyedServiceFactory* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), %class.SimpleDependencyManager* %3) #6
  %4 = getelementptr inbounds %"class.segmentation_platform::SegmentationPlatformServiceFactory", %"class.segmentation_platform::SegmentationPlatformServiceFactory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN21segmentation_platform34SegmentationPlatformServiceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare %class.SimpleDependencyManager* @_ZN23SimpleDependencyManager11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactoryC2EPKcP23SimpleDependencyManager(%class.SimpleKeyedServiceFactory*, i8*, %class.SimpleDependencyManager*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN25SimpleKeyedServiceFactoryD2Ev(%class.SimpleKeyedServiceFactory*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21segmentation_platform34SegmentationPlatformServiceFactoryD2Ev(%"class.segmentation_platform::SegmentationPlatformServiceFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.segmentation_platform::SegmentationPlatformServiceFactory", %"class.segmentation_platform::SegmentationPlatformServiceFactory"* %0, i64 0, i32 0
  tail call void @_ZN25SimpleKeyedServiceFactoryD2Ev(%class.SimpleKeyedServiceFactory* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21segmentation_platform34SegmentationPlatformServiceFactoryD0Ev(%"class.segmentation_platform::SegmentationPlatformServiceFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.segmentation_platform::SegmentationPlatformServiceFactory", %"class.segmentation_platform::SegmentationPlatformServiceFactory"* %0, i64 0, i32 0
  tail call void @_ZN25SimpleKeyedServiceFactoryD2Ev(%class.SimpleKeyedServiceFactory* %2) #6
  %3 = bitcast %"class.segmentation_platform::SegmentationPlatformServiceFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.KeyedService* @_ZNK21segmentation_platform34SegmentationPlatformServiceFactory23BuildServiceInstanceForEP16SimpleFactoryKey(%"class.segmentation_platform::SegmentationPlatformServiceFactory"* nocapture readnone, %class.SimpleFactoryKey* nocapture readnone) unnamed_addr #4 align 2 {
  ret %class.KeyedService* null
}

declare i8* @_ZNK25SimpleKeyedServiceFactory15GetContextToUseEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare zeroext i1 @_ZNK25SimpleKeyedServiceFactory27ServiceIsCreatedWithContextEv(%class.SimpleKeyedServiceFactory*) unnamed_addr #1

declare zeroext i1 @_ZNK23KeyedServiceBaseFactory25ServiceIsNULLWhileTestingEv(%class.KeyedServiceBaseFactory*) unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactory15ContextShutdownEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactory16ContextDestroyedEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactory13RegisterPrefsEPN10user_prefs20PrefRegistrySyncableE(%class.SimpleKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*) unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactory22SetEmptyTestingFactoryEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare zeroext i1 @_ZN25SimpleKeyedServiceFactory17HasTestingFactoryEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactory16CreateServiceNowEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare %class.KeyedService* @_ZNK25SimpleKeyedServiceFactory23BuildServiceInstanceForEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare zeroext i1 @_ZNK25SimpleKeyedServiceFactory14IsOffTheRecordEPv(%class.SimpleKeyedServiceFactory*, i8*) unnamed_addr #1

declare %class.SimpleFactoryKey* @_ZNK25SimpleKeyedServiceFactory11GetKeyToUseEP16SimpleFactoryKey(%class.SimpleKeyedServiceFactory*, %class.SimpleFactoryKey*) unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactory21SimpleContextShutdownEP16SimpleFactoryKey(%class.SimpleKeyedServiceFactory*, %class.SimpleFactoryKey*) unnamed_addr #1

declare void @_ZN25SimpleKeyedServiceFactory22SimpleContextDestroyedEP16SimpleFactoryKey(%class.SimpleKeyedServiceFactory*, %class.SimpleFactoryKey*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SimpleKeyedServiceFactory20RegisterProfilePrefsEPN10user_prefs20PrefRegistrySyncableE(%class.SimpleKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to %"class.segmentation_platform::SegmentationPlatformServiceFactory"*
  %6 = inttoptr i64 %2 to void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)***
  %7 = load void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)**, void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)*, void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)** %7, i64 1
  %9 = load void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)*, void (%"class.segmentation_platform::SegmentationPlatformServiceFactory"*)** %8, align 8
  tail call void %9(%"class.segmentation_platform::SegmentationPlatformServiceFactory"* nonnull %5) #6
  br label %10

10:                                               ; preds = %1, %4
  store i64 0, i64* @_ZN4base9SingletonIN21segmentation_platform34SegmentationPlatformServiceFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
