; ModuleID = '../../device/gamepad/dualshock4_controller.cc'
source_filename = "../../device/gamepad/dualshock4_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::Dualshock4Controller" = type { %"class.device::AbstractHapticGamepad", i32, i32, %"class.std::__1::unique_ptr", %"class.base::WeakPtrFactory" }
%"class.device::AbstractHapticGamepad" = type { i32 (...)**, i8, i8, i32, %"class.base::OnceCallback", %class.scoped_refptr.1 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.device::HidWriter"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.5", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.device::HidWriter" = type { i32 (...)** }
%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%"struct.std::__1::array" = type { [32 x i8] }
%"struct.std::__1::array.11" = type { [78 x i8] }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.14" = type { %"class.base::internal::WeakPtrBase" }

@_ZTVN6device20Dualshock4ControllerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::Dualshock4Controller"*)* @_ZN6device20Dualshock4ControllerD2Ev to i8*), i8* bitcast (void (%"class.device::Dualshock4Controller"*)* @_ZN6device20Dualshock4ControllerD0Ev to i8*), i8* bitcast (void (%"class.device::Dualshock4Controller"*, double, double)* @_ZN6device20Dualshock4Controller12SetVibrationEdd to i8*), i8* bitcast (void (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv to i8*), i8* bitcast (double (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepad26GetMaxEffectDurationMillisEv to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.device::Dualshock4Controller"*)* @_ZN6device20Dualshock4Controller10GetWeakPtrEv to i8*), i8* bitcast (void (%"class.device::Dualshock4Controller"*)* @_ZN6device20Dualshock4Controller10DoShutdownEv to i8*)] }, align 8

@_ZN6device20Dualshock4ControllerC1ENS_9GamepadIdENS_14GamepadBusTypeENSt3__110unique_ptrINS_9HidWriterENS3_14default_deleteIS5_EEEE = hidden unnamed_addr alias void (%"class.device::Dualshock4Controller"*, i32, i32, %"class.device::HidWriter"*), void (%"class.device::Dualshock4Controller"*, i32, i32, %"class.device::HidWriter"*)* @_ZN6device20Dualshock4ControllerC2ENS_9GamepadIdENS_14GamepadBusTypeENSt3__110unique_ptrINS_9HidWriterENS3_14default_deleteIS5_EEEE
@_ZN6device20Dualshock4ControllerD1Ev = hidden unnamed_addr alias void (%"class.device::Dualshock4Controller"*), void (%"class.device::Dualshock4Controller"*)* @_ZN6device20Dualshock4ControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4ControllerC2ENS_9GamepadIdENS_14GamepadBusTypeENSt3__110unique_ptrINS_9HidWriterENS3_14default_deleteIS5_EEEE(%"class.device::Dualshock4Controller"*, i32, i32, %"class.device::HidWriter"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.device::HidWriter"* %3 to i64
  %6 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepadC2Ev(%"class.device::AbstractHapticGamepad"* %6) #6
  %7 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device20Dualshock4ControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %5, i64* %11, align 8
  %12 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 4, i32 0
  %13 = ptrtoint %"class.device::Dualshock4Controller"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %12, i64 %13) #6
  ret void
}

declare void @_ZN6device21AbstractHapticGamepadC2Ev(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4ControllerD2Ev(%"class.device::Dualshock4Controller"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device20Dualshock4ControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #6
  %4 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.device::HidWriter"*, %"class.device::HidWriter"** %4, align 8
  store %"class.device::HidWriter"* null, %"class.device::HidWriter"** %4, align 8
  %6 = icmp eq %"class.device::HidWriter"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.device::HidWriter"* %5 to void (%"class.device::HidWriter"*)***
  %9 = load void (%"class.device::HidWriter"*)**, void (%"class.device::HidWriter"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.device::HidWriter"*)*, void (%"class.device::HidWriter"*)** %9, i64 1
  %11 = load void (%"class.device::HidWriter"*)*, void (%"class.device::HidWriter"*)** %10, align 8
  tail call void %11(%"class.device::HidWriter"* nonnull %5) #6
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepadD2Ev(%"class.device::AbstractHapticGamepad"* %13) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6device21AbstractHapticGamepadD2Ev(%"class.device::AbstractHapticGamepad"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4ControllerD0Ev(%"class.device::Dualshock4Controller"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device20Dualshock4ControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #6
  %4 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.device::HidWriter"*, %"class.device::HidWriter"** %4, align 8
  store %"class.device::HidWriter"* null, %"class.device::HidWriter"** %4, align 8
  %6 = icmp eq %"class.device::HidWriter"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.device::HidWriter"* %5 to void (%"class.device::HidWriter"*)***
  %9 = load void (%"class.device::HidWriter"*)**, void (%"class.device::HidWriter"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.device::HidWriter"*)*, void (%"class.device::HidWriter"*)** %9, i64 1
  %11 = load void (%"class.device::HidWriter"*)*, void (%"class.device::HidWriter"*)** %10, align 8
  tail call void %11(%"class.device::HidWriter"* nonnull %5) #6
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepadD2Ev(%"class.device::AbstractHapticGamepad"* %13) #6
  %14 = bitcast %"class.device::Dualshock4Controller"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6device20Dualshock4Controller12IsDualshock4ENS_9GamepadIdE(i32) local_unnamed_addr #4 align 2 {
  switch i32 %0, label %2 [
    i32 88869324, label %3
    i32 88868292, label %3
    i32 781547301, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %2
  %4 = phi i1 [ true, %1 ], [ false, %2 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6device20Dualshock4Controller24BusTypeFromVersionNumberEj(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp eq i32 %0, 0
  %3 = select i1 %2, i32 2, i32 0
  %4 = icmp eq i32 %0, 256
  %5 = select i1 %4, i32 1, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4Controller10DoShutdownEv(%"class.device::Dualshock4Controller"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.device::HidWriter"*, %"class.device::HidWriter"** %2, align 8
  store %"class.device::HidWriter"* null, %"class.device::HidWriter"** %2, align 8
  %4 = icmp eq %"class.device::HidWriter"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.device::HidWriter"* %3 to void (%"class.device::HidWriter"*)***
  %7 = load void (%"class.device::HidWriter"*)**, void (%"class.device::HidWriter"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.device::HidWriter"*)*, void (%"class.device::HidWriter"*)** %7, i64 1
  %9 = load void (%"class.device::HidWriter"*)*, void (%"class.device::HidWriter"*)** %8, align 8
  tail call void %9(%"class.device::HidWriter"* nonnull %3) #6
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device20Dualshock4Controller18ProcessInputReportEhN4base4spanIKhLm18446744073709551615EEEPNS_7GamepadE(%"class.device::Dualshock4Controller"* nocapture readnone, i8 zeroext, i64, i8*, %"class.device::Gamepad"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca [14 x i8], align 1
  %7 = icmp ne i8 %1, 17
  %8 = icmp ult i64 %2, 77
  %9 = or i1 %7, %8
  br i1 %9, label %145, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %3, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = uitofp i8 %12 to float
  %14 = fmul float %13, 2.000000e+00
  %15 = fdiv float %14, 2.550000e+02
  %16 = fadd float %15, -1.000000e+00
  %17 = fpext float %16 to double
  %18 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 7, i64 0
  store double %17, double* %18, align 4
  %19 = getelementptr inbounds i8, i8* %3, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = uitofp i8 %20 to float
  %22 = fmul float %21, 2.000000e+00
  %23 = fdiv float %22, 2.550000e+02
  %24 = fadd float %23, -1.000000e+00
  %25 = fpext float %24 to double
  %26 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 7, i64 1
  store double %25, double* %26, align 4
  %27 = getelementptr inbounds i8, i8* %3, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = uitofp i8 %28 to float
  %30 = fmul float %29, 2.000000e+00
  %31 = fdiv float %30, 2.550000e+02
  %32 = fadd float %31, -1.000000e+00
  %33 = fpext float %32 to double
  %34 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 7, i64 2
  store double %33, double* %34, align 4
  %35 = getelementptr inbounds i8, i8* %3, i64 9
  %36 = load i8, i8* %35, align 1
  %37 = uitofp i8 %36 to float
  %38 = fmul float %37, 2.000000e+00
  %39 = fdiv float %38, 2.550000e+02
  %40 = fadd float %39, -1.000000e+00
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 7, i64 3
  store double %41, double* %42, align 4
  %43 = getelementptr inbounds i8, i8* %3, i64 10
  %44 = load i8, i8* %43, align 1
  %45 = uitofp i8 %44 to float
  %46 = fmul float %45, 2.000000e+00
  %47 = fdiv float %46, 2.550000e+02
  %48 = fadd float %47, -1.000000e+00
  %49 = fpext float %48 to double
  %50 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 7, i64 4
  store double %49, double* %50, align 4
  %51 = getelementptr inbounds i8, i8* %3, i64 5
  %52 = load i8, i8* %51, align 1
  %53 = uitofp i8 %52 to float
  %54 = fmul float %53, 2.000000e+00
  %55 = fdiv float %54, 2.550000e+02
  %56 = fadd float %55, -1.000000e+00
  %57 = fpext float %56 to double
  %58 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 7, i64 5
  store double %57, double* %58, align 4
  %59 = getelementptr inbounds i8, i8* %3, i64 6
  %60 = bitcast i8* %59 to i24*
  %61 = load i24, i24* %60, align 1
  %62 = trunc i24 %61 to i8
  %63 = and i8 %62, 15
  %64 = uitofp i8 %63 to float
  %65 = fmul float %64, 2.000000e+00
  %66 = fdiv float %65, 7.000000e+00
  %67 = fadd float %66, -1.000000e+00
  %68 = fpext float %67 to double
  %69 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 7, i64 9
  store double %68, double* %69, align 4
  %70 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %70) #6
  %71 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 1
  %72 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 2
  %73 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 3
  %74 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 4
  %75 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 5
  %76 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 6
  %77 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 7
  %78 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 8
  %79 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 9
  %80 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 10
  %81 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 11
  %82 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 12
  %83 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 13
  %84 = load i24, i24* %60, align 1
  %85 = lshr i24 %84, 4
  %86 = trunc i24 %85 to i8
  %87 = and i8 %86, 1
  store i8 %87, i8* %70, align 1
  %88 = lshr i24 %84, 5
  %89 = trunc i24 %88 to i8
  %90 = and i8 %89, 1
  store i8 %90, i8* %71, align 1
  %91 = lshr i24 %84, 6
  %92 = trunc i24 %91 to i8
  %93 = and i8 %92, 1
  store i8 %93, i8* %72, align 1
  %94 = trunc i24 %84 to i8
  %95 = lshr i8 %94, 7
  store i8 %95, i8* %73, align 1
  %96 = lshr i24 %84, 8
  %97 = trunc i24 %96 to i8
  %98 = and i8 %97, 1
  store i8 %98, i8* %74, align 1
  %99 = lshr i24 %84, 9
  %100 = trunc i24 %99 to i8
  %101 = and i8 %100, 1
  store i8 %101, i8* %75, align 1
  %102 = lshr i24 %84, 10
  %103 = trunc i24 %102 to i8
  %104 = and i8 %103, 1
  store i8 %104, i8* %76, align 1
  %105 = lshr i24 %84, 11
  %106 = trunc i24 %105 to i8
  %107 = and i8 %106, 1
  store i8 %107, i8* %77, align 1
  %108 = lshr i24 %84, 12
  %109 = trunc i24 %108 to i8
  %110 = and i8 %109, 1
  store i8 %110, i8* %78, align 1
  %111 = lshr i24 %84, 13
  %112 = trunc i24 %111 to i8
  %113 = and i8 %112, 1
  store i8 %113, i8* %79, align 1
  %114 = lshr i24 %84, 14
  %115 = trunc i24 %114 to i8
  %116 = and i8 %115, 1
  store i8 %116, i8* %80, align 1
  %117 = trunc i24 %84 to i16
  %118 = lshr i16 %117, 15
  %119 = trunc i16 %118 to i8
  store i8 %119, i8* %81, align 1
  %120 = lshr i24 %84, 16
  %121 = trunc i24 %120 to i8
  %122 = and i8 %121, 1
  store i8 %122, i8* %82, align 1
  %123 = lshr i24 %84, 17
  %124 = trunc i24 %123 to i8
  %125 = and i8 %124, 1
  store i8 %125, i8* %83, align 1
  %126 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 0, i32 1
  store i8 %87, i8* %126, align 1
  %127 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 0, i32 2
  store i8 %87, i8* %127, align 2
  %128 = icmp eq i8 %87, 0
  %129 = select i1 %128, double 0.000000e+00, double 1.000000e+00
  %130 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 0, i32 4
  store double %129, double* %130, align 4
  br label %134

131:                                              ; preds = %134
  %132 = tail call i64 @_ZN6device18GamepadDataFetcher25CurrentTimeInMicrosecondsEv() #6
  %133 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 4
  store i64 %132, i64* %133, align 4
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %70) #6
  br label %145

134:                                              ; preds = %147, %10
  %135 = phi i64 [ 1, %10 ], [ %155, %147 ]
  %136 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1, !range !2
  %138 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 %135, i32 1
  store i8 %137, i8* %138, align 1
  %139 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 %135, i32 2
  store i8 %137, i8* %139, align 2
  %140 = icmp eq i8 %137, 0
  %141 = select i1 %140, double 0.000000e+00, double 1.000000e+00
  %142 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 %135, i32 4
  store double %141, double* %142, align 4
  %143 = add nuw nsw i64 %135, 1
  %144 = icmp eq i64 %143, 14
  br i1 %144, label %131, label %147

145:                                              ; preds = %5, %131
  %146 = phi i1 [ true, %131 ], [ false, %5 ]
  ret i1 %146

147:                                              ; preds = %134
  %148 = getelementptr inbounds [14 x i8], [14 x i8]* %6, i64 0, i64 %143
  %149 = load i8, i8* %148, align 1, !range !2
  %150 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 %143, i32 1
  store i8 %149, i8* %150, align 1
  %151 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 %143, i32 2
  store i8 %149, i8* %151, align 2
  %152 = icmp eq i8 %149, 0
  %153 = select i1 %152, double 0.000000e+00, double 1.000000e+00
  %154 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %4, i64 0, i32 9, i64 %143, i32 4
  store double %153, double* %154, align 4
  %155 = add nuw nsw i64 %135, 2
  br label %134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare i64 @_ZN6device18GamepadDataFetcher25CurrentTimeInMicrosecondsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4Controller12SetVibrationEdd(%"class.device::Dualshock4Controller"* nocapture readonly, double, double) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array", align 1
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::__1::array.11", align 1
  %7 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %52

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 781547301
  br i1 %13, label %52, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 78, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %16, i8 0, i64 73, i1 false) #6
  store i8 17, i8* %15, align 1
  %17 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 1
  store i8 -64, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 2
  store i8 32, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 3
  store i8 -15, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 4
  store i8 4, i8* %20, align 1
  %21 = fmul double %2, 2.550000e+02
  %22 = fptoui double %21 to i8
  %23 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 6
  store i8 %22, i8* %23, align 1
  %24 = fmul double %1, 2.550000e+02
  %25 = fptoui double %24 to i8
  %26 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 21
  store i8 67, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 22
  store i8 67, i8* %28, align 1
  %29 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 24
  store i8 77, i8* %29, align 1
  %30 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 25
  store i8 -123, i8* %30, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #6
  store i8 -94, i8* %5, align 1
  %31 = call i32 @_ZN4base5Crc32EjPKvm(i32 -1, i8* nonnull %5, i64 1) #6
  %32 = call i32 @_ZN4base5Crc32EjPKvm(i32 %31, i8* nonnull %15, i64 74) #6
  %33 = xor i32 %32, -1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 74
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %33, 8
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 75
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %33, 16
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 76
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %33, 24
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %6, i64 0, i32 0, i64 77
  store i8 %43, i8* %44, align 1
  %45 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.device::HidWriter"*, %"class.device::HidWriter"** %45, align 8
  %47 = bitcast %"class.device::HidWriter"* %46 to i64 (%"class.device::HidWriter"*, i64, i8*)***
  %48 = load i64 (%"class.device::HidWriter"*, i64, i8*)**, i64 (%"class.device::HidWriter"*, i64, i8*)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %48, i64 2
  %50 = load i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %49, align 8
  %51 = call i64 %50(%"class.device::HidWriter"* %46, i64 78, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 78, i8* nonnull %15) #6
  br label %69

52:                                               ; preds = %10, %3
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #6
  %54 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 1
  %55 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 4
  %56 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 5
  %57 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %57, i8 0, i64 30, i1 false) #6
  store i8 5, i8* %53, align 1
  store i8 1, i8* %54, align 1
  %58 = fmul double %2, 2.550000e+02
  %59 = fptoui double %58 to i8
  store i8 %59, i8* %55, align 1
  %60 = fmul double %1, 2.550000e+02
  %61 = fptoui double %60 to i8
  store i8 %61, i8* %56, align 1
  %62 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.device::HidWriter"*, %"class.device::HidWriter"** %62, align 8
  %64 = bitcast %"class.device::HidWriter"* %63 to i64 (%"class.device::HidWriter"*, i64, i8*)***
  %65 = load i64 (%"class.device::HidWriter"*, i64, i8*)**, i64 (%"class.device::HidWriter"*, i64, i8*)*** %64, align 8
  %66 = getelementptr inbounds i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %65, i64 2
  %67 = load i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %66, align 8
  %68 = call i64 %67(%"class.device::HidWriter"* %63, i64 32, i8* nonnull %53) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #6
  br label %69

69:                                               ; preds = %52, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4Controller21SetVibrationBluetoothEdd(%"class.device::Dualshock4Controller"* nocapture readonly, double, double) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"struct.std::__1::array.11", align 1
  %6 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 78, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 0, i64 73, i1 false)
  store i8 17, i8* %6, align 1
  %8 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 1
  store i8 -64, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 2
  store i8 32, i8* %9, align 1
  %10 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 3
  store i8 -15, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 4
  store i8 4, i8* %11, align 1
  %12 = fmul double %2, 2.550000e+02
  %13 = fptoui double %12 to i8
  %14 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 6
  store i8 %13, i8* %14, align 1
  %15 = fmul double %1, 2.550000e+02
  %16 = fptoui double %15 to i8
  %17 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 7
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 21
  store i8 67, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 22
  store i8 67, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 24
  store i8 77, i8* %20, align 1
  %21 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 25
  store i8 -123, i8* %21, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -94, i8* %4, align 1
  %22 = call i32 @_ZN4base5Crc32EjPKvm(i32 -1, i8* nonnull %4, i64 1) #6
  %23 = call i32 @_ZN4base5Crc32EjPKvm(i32 %22, i8* nonnull %6, i64 74) #6
  %24 = xor i32 %23, -1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 74
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %24, 8
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 75
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %24, 16
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 76
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %24, 24
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %"struct.std::__1::array.11", %"struct.std::__1::array.11"* %5, i64 0, i32 0, i64 77
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.device::HidWriter"*, %"class.device::HidWriter"** %36, align 8
  %38 = bitcast %"class.device::HidWriter"* %37 to i64 (%"class.device::HidWriter"*, i64, i8*)***
  %39 = load i64 (%"class.device::HidWriter"*, i64, i8*)**, i64 (%"class.device::HidWriter"*, i64, i8*)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %39, i64 2
  %41 = load i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %40, align 8
  %42 = call i64 %41(%"class.device::HidWriter"* %37, i64 78, i8* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 78, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4Controller15SetVibrationUsbEdd(%"class.device::Dualshock4Controller"* nocapture readonly, double, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array", align 1
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 1
  %7 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 4
  %8 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 5
  %9 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %9, i8 0, i64 30, i1 false)
  store i8 5, i8* %5, align 1
  store i8 1, i8* %6, align 1
  %10 = fmul double %2, 2.550000e+02
  %11 = fptoui double %10 to i8
  store i8 %11, i8* %7, align 1
  %12 = fmul double %1, 2.550000e+02
  %13 = fptoui double %12 to i8
  store i8 %13, i8* %8, align 1
  %14 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.device::HidWriter"*, %"class.device::HidWriter"** %14, align 8
  %16 = bitcast %"class.device::HidWriter"* %15 to i64 (%"class.device::HidWriter"*, i64, i8*)***
  %17 = load i64 (%"class.device::HidWriter"*, i64, i8*)**, i64 (%"class.device::HidWriter"*, i64, i8*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %17, i64 2
  %19 = load i64 (%"class.device::HidWriter"*, i64, i8*)*, i64 (%"class.device::HidWriter"*, i64, i8*)** %18, align 8
  %20 = call i64 %19(%"class.device::HidWriter"* %15, i64 32, i8* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device20Dualshock4Controller10GetWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.device::Dualshock4Controller"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr.14", align 8
  %5 = bitcast %"class.base::WeakPtr.14"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #6
  %6 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !noalias !3
  %7 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %1, i64 0, i32 4, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %7) #6, !noalias !3
  %8 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %1, i64 0, i32 4, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !3
  %10 = getelementptr inbounds %"class.base::WeakPtr.14", %"class.base::WeakPtr.14"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %10, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %9) #6
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !noalias !3
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::WeakPtr.14", %"class.base::WeakPtr.14"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %11, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %12) #6
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::WeakPtr.14", %"class.base::WeakPtr.14"* %4, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %13, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1

declare double @_ZN6device21AbstractHapticGamepad26GetMaxEffectDurationMillisEv(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1

declare i32 @_ZN4base5Crc32EjPKvm(i32, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN6device20Dualshock4ControllerEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN6device20Dualshock4ControllerEE10GetWeakPtrEv"}
