; ModuleID = '../../chrome/browser/sessions/session_common_utils.cc'
source_filename = "../../chrome/browser/sessions/session_common_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.sessions::SessionTab" = type { %class.SessionID, %class.SessionID, i32, i32, %"class.absl::optional", i8, %"class.std::__1::basic_string", %"struct.sessions::SerializedUserAgentOverride", %"class.base::Time", %"class.base::TimeTicks", %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::map" }
%class.SessionID = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.tab_groups::TabGroupId" }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.sessions::SerializedUserAgentOverride" = type { %"class.std::__1::basic_string", %"class.absl::optional.5" }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.10" }
%"class.base::time_internal::TimeBase.10" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sessions::SerializedNavigationEntry"*, %"class.sessions::SerializedNavigationEntry"*, %"class.std::__1::__compressed_pair.46" }
%"class.sessions::SerializedNavigationEntry" = type { i32, i32, %class.GURL, i32, %class.GURL, %"class.std::__1::basic_string.11", %"class.std::__1::basic_string", i32, i8, i64, %class.GURL, i8, %"class.base::Time", %class.GURL, i32, i8, %"class.std::__1::vector.20", %"class.absl::optional.26", i32, i32, %"class.std::__1::set", %"class.std::__1::map", i64, i64, i64 }
%"class.std::__1::basic_string.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.14 }
%union.anon.14 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, [7 x i8], %union.anon.30 }
%union.anon.30 = type { %"struct.sessions::SerializedNavigationEntry::ReplacedNavigationEntryData" }
%"struct.sessions::SerializedNavigationEntry::ReplacedNavigationEntryData" = type <{ %class.GURL, %"class.base::Time", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.sessions::SerializedNavigationEntry"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN7content15kChromeUISchemeE = external constant [0 x i8], align 1
@_ZN6chrome17kChromeUIQuitHostE = external constant [0 x i8], align 1
@_ZN6chrome20kChromeUIRestartHostE = external constant [0 x i8], align 1
@_ZN6chrome20kChromeUISettingsURLE = external constant [0 x i8], align 1
@_ZN6chrome15kSignOutSubPageE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z24ShouldTrackURLForRestoreRK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %57, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content15kChromeUISchemeE, i64 0, i64 0)) #8
  %7 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content15kChromeUISchemeE, i64 0, i64 0), i64 %6) #8
  br i1 %7, label %8, label %57

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %class.GURL* %0 to i8*
  %23 = select i1 %19, i8* %21, i8* %22
  %24 = getelementptr inbounds i8, i8* %23, i64 %15
  %25 = sext i32 %10 to i64
  br label %26

26:                                               ; preds = %8, %12
  %27 = phi i8* [ %24, %12 ], [ null, %8 ]
  %28 = phi i64 [ %25, %12 ], [ 0, %8 ]
  %29 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome17kChromeUIQuitHostE, i64 0, i64 0)) #8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = tail call i32 @bcmp(i8* %27, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome17kChromeUIQuitHostE, i64 0, i64 0), i64 %28) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %57, label %34

34:                                               ; preds = %26, %31
  br i1 %11, label %49, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %class.GURL* %0 to i8*
  %46 = select i1 %42, i8* %44, i8* %45
  %47 = getelementptr inbounds i8, i8* %46, i64 %38
  %48 = sext i32 %10 to i64
  br label %49

49:                                               ; preds = %34, %35
  %50 = phi i8* [ %47, %35 ], [ null, %34 ]
  %51 = phi i64 [ %48, %35 ], [ 0, %34 ]
  %52 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome20kChromeUIRestartHostE, i64 0, i64 0)) #8
  %53 = icmp eq i64 %51, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = tail call i32 @bcmp(i8* %50, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome20kChromeUIRestartHostE, i64 0, i64 0), i64 %51) #8
  %56 = icmp ne i32 %55, 0
  br label %57

57:                                               ; preds = %54, %49, %1, %5, %31
  %58 = phi i1 [ false, %1 ], [ true, %5 ], [ false, %31 ], [ true, %49 ], [ %56, %54 ]
  ret i1 %58
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z26GetNavigationIndexToSelectRKN8sessions10SessionTabE(%"struct.sessions::SessionTab"* nocapture readonly dereferenceable(240)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 10
  %7 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 10, i32 0, i32 1
  %8 = bitcast %"class.sessions::SerializedNavigationEntry"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 832
  %14 = trunc i64 %13 to i32
  %15 = add i32 %14, -1
  %16 = load i32, i32* %5, align 4
  %17 = icmp slt i32 %15, %16
  %18 = select i1 %17, i32 %15, i32 %16
  %19 = icmp sgt i32 %18, 0
  %20 = select i1 %19, i32 %18, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome20kChromeUISettingsURLE, i64 0, i64 0)) #8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %1
  %29 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #9
  unreachable

30:                                               ; preds = %1
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #10
  store i8* %35, i8** %22, align 8
  %36 = or i64 %34, -9223372036854775808
  store i64 %36, i64* %24, align 8
  store i64 %26, i64* %23, align 8
  br label %42

37:                                               ; preds = %30
  %38 = trunc i64 %26 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 %38, i8* %40, align 1
  %41 = icmp eq i64 %26, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37, %32
  %43 = phi i8* [ %35, %32 ], [ %21, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome20kChromeUISettingsURLE, i64 0, i64 0), i64 %26, i1 false) #8
  br label %44

44:                                               ; preds = %37, %42
  %45 = phi i8* [ %21, %37 ], [ %43, %42 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %26
  store i8 0, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  %52 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome15kSignOutSubPageE, i64 0, i64 0)) #8
  %53 = icmp ugt i64 %52, -17
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %55) #9
  unreachable

56:                                               ; preds = %44
  %57 = icmp ult i64 %52, 23
  br i1 %57, label %67, label %58

58:                                               ; preds = %56
  %59 = add nuw i64 %52, 16
  %60 = and i64 %59, -16
  %61 = tail call i8* @_Znwm(i64 %60) #10
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = or i64 %60, -9223372036854775808
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %65, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %72

67:                                               ; preds = %56
  %68 = trunc i64 %52 to i8
  %69 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  store i8 %68, i8* %70, align 1
  %71 = icmp eq i64 %52, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %58
  %73 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %69, %67 ], [ %66, %58 ]
  %74 = phi i8* [ %50, %67 ], [ %61, %58 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome15kSignOutSubPageE, i64 0, i64 0), i64 %52, i1 false) #8
  br label %75

75:                                               ; preds = %67, %72
  %76 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %69, %67 ], [ %73, %72 ]
  %77 = phi i8* [ %50, %67 ], [ %74, %72 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 %52
  store i8 0, i8* %78, align 1
  %79 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1, !noalias !3
  %82 = icmp slt i8 %81, 0
  %83 = load i8*, i8** %22, align 8, !noalias !3
  %84 = load i64, i64* %23, align 8, !noalias !3
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i8* %83, i8* %21
  %87 = select i1 %82, i64 %84, i64 %85
  %88 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i8* %86, i64 %87) #8, !noalias !3
  %89 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %89, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #8, !noalias !3
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %75
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #10
  br label %96

96:                                               ; preds = %75, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  br i1 %19, label %101, label %97

97:                                               ; preds = %96
  %98 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  br label %203

101:                                              ; preds = %96
  %102 = zext i32 %20 to i64
  %103 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %104 = load %"class.sessions::SerializedNavigationEntry"*, %"class.sessions::SerializedNavigationEntry"** %103, align 8
  %105 = getelementptr inbounds %"class.sessions::SerializedNavigationEntry", %"class.sessions::SerializedNavigationEntry"* %104, i64 %102, i32 4
  %106 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %105) #8
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %109 to i64
  %114 = select i1 %110, i64 %112, i64 %113
  %115 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  %119 = load i64, i64* %49, align 8
  %120 = zext i8 %117 to i64
  %121 = select i1 %118, i64 %119, i64 %120
  %122 = icmp eq i64 %114, %121
  br i1 %122, label %123, label %203

123:                                              ; preds = %101
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  %127 = select i1 %110, i8* %125, i8* %126
  %128 = load i8*, i8** %48, align 8
  %129 = select i1 %118, i8* %128, i8* %47
  %130 = icmp eq i64 %114, 0
  br i1 %110, label %137, label %131

131:                                              ; preds = %123
  br i1 %130, label %153, label %132

132:                                              ; preds = %131
  %133 = ptrtoint i8* %125 to i64
  %134 = trunc i64 %133 to i8
  %135 = load i8, i8* %129, align 1
  %136 = icmp eq i8 %135, %134
  br i1 %136, label %138, label %203

137:                                              ; preds = %123
  br i1 %130, label %153, label %150

138:                                              ; preds = %132, %145
  %139 = phi i64 [ %142, %145 ], [ %113, %132 ]
  %140 = phi i8* [ %143, %145 ], [ %126, %132 ]
  %141 = phi i8* [ %146, %145 ], [ %129, %132 ]
  %142 = add i64 %139, -1
  %143 = getelementptr inbounds i8, i8* %140, i64 1
  %144 = icmp eq i64 %142, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds i8, i8* %141, i64 1
  %147 = load i8, i8* %143, align 1
  %148 = load i8, i8* %146, align 1
  %149 = icmp eq i8 %147, %148
  br i1 %149, label %138, label %203

150:                                              ; preds = %137
  %151 = call i32 @bcmp(i8* %127, i8* %129, i64 %114) #8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %203

153:                                              ; preds = %138, %131, %137, %150
  %154 = add nsw i32 %20, -1
  %155 = sext i32 %154 to i64
  %156 = load %"class.sessions::SerializedNavigationEntry"*, %"class.sessions::SerializedNavigationEntry"** %103, align 8
  %157 = getelementptr inbounds %"class.sessions::SerializedNavigationEntry", %"class.sessions::SerializedNavigationEntry"* %156, i64 %155, i32 4
  %158 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %157) #8
  %159 = bitcast %"class.std::__1::basic_string"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  %165 = zext i8 %161 to i64
  %166 = select i1 %162, i64 %164, i64 %165
  %167 = load i8, i8* %80, align 1
  %168 = icmp slt i8 %167, 0
  %169 = load i64, i64* %23, align 8
  %170 = zext i8 %167 to i64
  %171 = select i1 %168, i64 %169, i64 %170
  %172 = icmp eq i64 %166, %171
  br i1 %172, label %173, label %203

173:                                              ; preds = %153
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = bitcast %"class.std::__1::basic_string"* %158 to i8*
  %177 = select i1 %162, i8* %175, i8* %176
  %178 = load i8*, i8** %22, align 8
  %179 = select i1 %168, i8* %178, i8* %21
  %180 = icmp eq i64 %166, 0
  br i1 %162, label %187, label %181

181:                                              ; preds = %173
  br i1 %180, label %205, label %182

182:                                              ; preds = %181
  %183 = ptrtoint i8* %175 to i64
  %184 = trunc i64 %183 to i8
  %185 = load i8, i8* %179, align 1
  %186 = icmp eq i8 %185, %184
  br i1 %186, label %188, label %203

187:                                              ; preds = %173
  br i1 %180, label %205, label %200

188:                                              ; preds = %182, %195
  %189 = phi i64 [ %192, %195 ], [ %165, %182 ]
  %190 = phi i8* [ %193, %195 ], [ %176, %182 ]
  %191 = phi i8* [ %196, %195 ], [ %179, %182 ]
  %192 = add i64 %189, -1
  %193 = getelementptr inbounds i8, i8* %190, i64 1
  %194 = icmp eq i64 %192, 0
  br i1 %194, label %205, label %195

195:                                              ; preds = %188
  %196 = getelementptr inbounds i8, i8* %191, i64 1
  %197 = load i8, i8* %193, align 1
  %198 = load i8, i8* %196, align 1
  %199 = icmp eq i8 %197, %198
  br i1 %199, label %188, label %203

200:                                              ; preds = %187
  %201 = call i32 @bcmp(i8* %177, i8* %179, i64 %166) #8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %145, %195, %132, %182, %97, %153, %101, %200, %150
  %204 = phi i8 [ %100, %97 ], [ %117, %153 ], [ %117, %101 ], [ %117, %200 ], [ %117, %150 ], [ %117, %182 ], [ %117, %132 ], [ %117, %195 ], [ %117, %145 ]
  br label %205

205:                                              ; preds = %188, %181, %187, %200, %203
  %206 = phi i8 [ %204, %203 ], [ %117, %200 ], [ %117, %187 ], [ %117, %181 ], [ %117, %188 ]
  %207 = phi i32 [ %20, %203 ], [ %154, %200 ], [ %154, %187 ], [ %154, %181 ], [ %154, %188 ]
  %208 = icmp slt i8 %206, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %205
  %210 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %210) #10
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #8
  %212 = load i8, i8* %80, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %211
  %215 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %215) #10
  br label %216

216:                                              ; preds = %211, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  ret i32 %207
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
