; ModuleID = '../../chrome/browser/net/secure_dns_util.cc'
source_filename = "../../chrome/browser/net/secure_dns_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i8* }
%"struct.base::Feature" = type { i8*, i32 }
%class.PrefRegistrySimple = type { %class.PrefRegistry }
%class.PrefRegistry = type { i32 (...)**, %"class.base::RefCounted", %class.scoped_refptr, %"class.std::__1::unordered_map", %"class.std::__1::set" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %class.DefaultPrefStore* }
%class.DefaultPrefStore = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.30", %class.scoped_refptr.53, %"class.base::RepeatingCallback.54", %class.scoped_refptr.55, %"class.std::__1::unordered_map.56" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.44" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.33, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.33 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted.34", [4 x i8] }>
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.53 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted.34" }>
%"class.base::RepeatingCallback.54" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.55 = type { %class.PrefRegistry* }
%"class.std::__1::unordered_map.56" = type { %"class.std::__1::__hash_table.57" }
%"class.std::__1::__hash_table.57" = type <{ %"class.std::__1::unique_ptr.58", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.76", [4 x i8] }>
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60", %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base.61"** }
%"struct.std::__1::__hash_node_base.61" = type { %"struct.std::__1::__hash_node_base.61"* }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::__bucket_list_deallocator.63" }
%"class.std::__1::__bucket_list_deallocator.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base.61" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.PrefService::Preference" = type { %"class.std::__1::basic_string", i8, i32, %class.PrefService* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.80" }
%"union.absl::variant_internal::DestructibleUnionImpl.80" = type { %"union.absl::variant_internal::DestructibleUnionImpl.81" }
%"union.absl::variant_internal::DestructibleUnionImpl.81" = type { %"union.absl::variant_internal::DestructibleUnionImpl.82" }
%"union.absl::variant_internal::DestructibleUnionImpl.82" = type { %"union.absl::variant_internal::DestructibleUnionImpl.83" }
%"union.absl::variant_internal::DestructibleUnionImpl.83" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"**, %"class.std::__1::__compressed_pair.120" }
%"struct.net::DohProviderEntry" = type <{ %"class.std::__1::basic_string", %"class.absl::optional", %"class.std::__1::set.110", %"class.std::__1::set", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::set", i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.109 }
%union.anon.109 = type { i32 }
%"class.std::__1::set.110" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.net::DohProviderEntry"** }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.107"* }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.135" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.base::BasicStringPiece"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.147", [4 x i8] }>
%"struct.std::__1::atomic.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__cxx_atomic_impl.150" }
%"struct.std::__1::__cxx_atomic_impl.150" = type { %"struct.std::__1::__cxx_atomic_base_impl.151" }
%"struct.std::__1::__cxx_atomic_base_impl.151" = type { i32 }
%"struct.net::DnsConfigOverrides" = type <{ %"class.absl::optional.152", %"class.absl::optional.164", %"class.absl::optional.169", [2 x i8], %"class.absl::optional.174", [4 x i8], %"class.absl::optional.179", %"class.absl::optional.174", %"class.absl::optional.174", %"class.absl::optional.169", %"class.absl::optional.169", [4 x i8], %"class.absl::optional.184", %"class.absl::optional.196", %"class.absl::optional.169", [6 x i8], %"class.absl::optional.164", i8, [7 x i8] }>
%"class.absl::optional.152" = type { %"class.absl::optional_internal::optional_data.153" }
%"class.absl::optional_internal::optional_data.153" = type { %"class.absl::optional_internal::optional_data_base.154" }
%"class.absl::optional_internal::optional_data_base.154" = type { %"class.absl::optional_internal::optional_data_dtor_base.155" }
%"class.absl::optional_internal::optional_data_dtor_base.155" = type { i8, %union.anon.156 }
%union.anon.156 = type { %"class.std::__1::vector.157" }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.159" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.net::IPEndPoint"* }
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { i32 }
%"class.absl::optional.184" = type { %"class.absl::optional_internal::optional_data.185" }
%"class.absl::optional_internal::optional_data.185" = type { %"class.absl::optional_internal::optional_data_base.186" }
%"class.absl::optional_internal::optional_data_base.186" = type { %"class.absl::optional_internal::optional_data_dtor_base.187" }
%"class.absl::optional_internal::optional_data_dtor_base.187" = type { i8, %union.anon.188 }
%union.anon.188 = type { %"class.std::__1::vector.189" }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.191" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.absl::optional.196" = type { %"class.absl::optional_internal::optional_data.197" }
%"class.absl::optional_internal::optional_data.197" = type { %"class.absl::optional_internal::optional_data_base.198" }
%"class.absl::optional_internal::optional_data_base.198" = type { %"class.absl::optional_internal::optional_data_dtor_base.199" }
%"class.absl::optional_internal::optional_data_dtor_base.199" = type { i8, %union.anon.200 }
%union.anon.200 = type { i32 }
%"class.absl::optional.169" = type { %"class.absl::optional_internal::optional_data.170" }
%"class.absl::optional_internal::optional_data.170" = type { %"class.absl::optional_internal::optional_data_base.171" }
%"class.absl::optional_internal::optional_data_base.171" = type { %"class.absl::optional_internal::optional_data_dtor_base.172" }
%"class.absl::optional_internal::optional_data_dtor_base.172" = type { i8, %union.anon.173 }
%union.anon.173 = type { i8 }
%"class.absl::optional.164" = type { %"class.absl::optional_internal::optional_data.165" }
%"class.absl::optional_internal::optional_data.165" = type { %"class.absl::optional_internal::optional_data_base.166" }
%"class.absl::optional_internal::optional_data_base.166" = type { %"class.absl::optional_internal::optional_data_dtor_base.167" }
%"class.absl::optional_internal::optional_data_dtor_base.167" = type { i8, %union.anon.168 }
%union.anon.168 = type { %"class.std::__1::vector.125" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4absl8optionalINSt3__16vectorIN3net24DnsOverHttpsServerConfigENS1_9allocatorIS4_EEEEE7emplaceIS4_JEvEERS7_St16initializer_listIT_EDpOT0_ = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIPKN3net16DohProviderEntryENS_9allocatorIS5_EEEEEaSERKS5_ = comdat any

@_ZN18chrome_browser_net10secure_dns12_GLOBAL__N_126kAlternateErrorPagesBackupE = internal unnamed_addr constant [29 x i8] c"alternate_error_pages.backup\00", align 16
@_ZN16embedder_support27kAlternateErrorPagesEnabledE = external constant [0 x i8], align 1
@_ZN8features35kDnsOverHttpsDisabledProvidersParamE = external global %"struct.base::FeatureParam", align 8
@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"Net.DNS.UI.ValidationAttemptSuccess\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Net.DNS.UI.ProbeAttemptSuccess\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"../../chrome/browser/net/secure_dns_util.cc\00", align 1
@.str.5 = private unnamed_addr constant [67 x i8] c"net::dns_util::IsValidDohTemplate(server_template, &server_method)\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"Net.DNS.UI.DropdownSelectionEvent.Unselected\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"Net.DNS.UI.DropdownSelectionEvent.Selected\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"Net.DNS.UI.DropdownSelectionEvent.Ignored\00", align 1
@_ZZN18chrome_browser_net10secure_dns25UpdateValidationHistogramEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN18chrome_browser_net10secure_dns20UpdateProbeHistogramEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns31RegisterProbesSettingBackupPrefEP18PrefRegistrySimple(%class.PrefRegistrySimple*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10
  %4 = tail call i8* @_Znwm(i64 32) #11
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 16 getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN18chrome_browser_net10secure_dns12_GLOBAL__N_126kAlternateErrorPagesBackupE, i64 0, i64 0), i64 28, i1 false) #10
  %8 = getelementptr inbounds i8, i8* %4, i64 28
  store i8 0, i8* %8, align 1
  call void @_ZN18PrefRegistrySimple19RegisterBooleanPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbj(%class.PrefRegistrySimple* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i1 zeroext true, i32 0) #10
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %1
  %14 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %1, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10
  ret void
}

declare void @_ZN18PrefRegistrySimple19RegisterBooleanPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbj(%class.PrefRegistrySimple*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns34MigrateProbesSettingToOrFromBackupEP11PrefService(%class.PrefService*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = tail call i8* @_Znwm(i64 32) #11
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 16 getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN18chrome_browser_net10secure_dns12_GLOBAL__N_126kAlternateErrorPagesBackupE, i64 0, i64 0), i64 28, i1 false) #10
  %13 = getelementptr inbounds i8, i8* %9, i64 28
  store i8 0, i8* %13, align 1
  %14 = call zeroext i1 @_ZNK11PrefService11HasPrefPathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #10
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %1
  %20 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %1, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  br i1 %14, label %182, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0)) #10
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #12
  unreachable

28:                                               ; preds = %22
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %24, 16
  %32 = and i64 %31, -16
  %33 = call i8* @_Znwm(i64 %32) #11
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = or i64 %32, -9223372036854775808
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %37, align 8
  br label %43

38:                                               ; preds = %28
  %39 = trunc i64 %24 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  %42 = icmp eq i64 %24, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %30
  %44 = phi i8* [ %33, %30 ], [ %23, %38 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0), i64 %24, i1 false) #10
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i8* [ %23, %38 ], [ %44, %43 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %24
  store i8 0, i8* %47, align 1
  %48 = call %"class.PrefService::Preference"* @_ZNK11PrefService14FindPreferenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #10
  %49 = call zeroext i1 @_ZNK11PrefService10Preference14HasUserSettingEv(%"class.PrefService::Preference"* %48) #10
  br i1 %49, label %50, label %75

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #10
  %52 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0)) #10
  %53 = icmp ugt i64 %52, -17
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %55) #12
  unreachable

56:                                               ; preds = %50
  %57 = icmp ult i64 %52, 23
  br i1 %57, label %67, label %58

58:                                               ; preds = %56
  %59 = add nuw i64 %52, 16
  %60 = and i64 %59, -16
  %61 = call i8* @_Znwm(i64 %60) #11
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = or i64 %60, -9223372036854775808
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %65, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %72

67:                                               ; preds = %56
  %68 = trunc i64 %52 to i8
  %69 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  store i8 %68, i8* %70, align 1
  %71 = icmp eq i64 %52, 0
  br i1 %71, label %111, label %72

72:                                               ; preds = %67, %58
  %73 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %69, %67 ], [ %66, %58 ]
  %74 = phi i8* [ %51, %67 ], [ %61, %58 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0), i64 %52, i1 false) #10
  br label %111

75:                                               ; preds = %45
  %76 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #10
  %77 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0)) #10
  %78 = icmp ugt i64 %77, -17
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %80) #12
  unreachable

81:                                               ; preds = %75
  %82 = icmp ult i64 %77, 23
  br i1 %82, label %92, label %83

83:                                               ; preds = %81
  %84 = add nuw i64 %77, 16
  %85 = and i64 %84, -16
  %86 = call i8* @_Znwm(i64 %85) #11
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %86, i8** %87, align 8
  %88 = or i64 %85, -9223372036854775808
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %77, i64* %90, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %97

92:                                               ; preds = %81
  %93 = trunc i64 %77 to i8
  %94 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  store i8 %93, i8* %95, align 1
  %96 = icmp eq i64 %77, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %92, %83
  %98 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %94, %92 ], [ %91, %83 ]
  %99 = phi i8* [ %76, %92 ], [ %86, %83 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0), i64 %77, i1 false) #10
  br label %100

100:                                              ; preds = %97, %92
  %101 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %98, %97 ], [ %94, %92 ]
  %102 = phi i8* [ %99, %97 ], [ %76, %92 ]
  %103 = getelementptr inbounds i8, i8* %102, i64 %77
  store i8 0, i8* %103, align 1
  %104 = call %"class.base::Value"* @_ZNK11PrefService19GetDefaultPrefValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %122

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %110) #11
  br label %122

111:                                              ; preds = %67, %72
  %112 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %69, %67 ], [ %73, %72 ]
  %113 = phi i8* [ %51, %67 ], [ %74, %72 ]
  %114 = getelementptr inbounds i8, i8* %113, i64 %52
  store i8 0, i8* %114, align 1
  %115 = call %"class.base::Value"* @_ZNK11PrefService16GetUserPrefValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #11
  br label %122

122:                                              ; preds = %119, %111, %100, %108
  %123 = phi i8* [ %76, %108 ], [ %76, %100 ], [ %51, %111 ], [ %51, %119 ]
  %124 = phi %"class.base::Value"* [ %104, %108 ], [ %104, %100 ], [ %115, %111 ], [ %115, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #10
  %125 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %122, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  %133 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #10
  %134 = call i8* @_Znwm(i64 32) #11
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %134, i8** %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %137, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %134, i8* align 16 getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN18chrome_browser_net10secure_dns12_GLOBAL__N_126kAlternateErrorPagesBackupE, i64 0, i64 0), i64 28, i1 false) #10
  %138 = getelementptr inbounds i8, i8* %134, i64 28
  store i8 0, i8* %138, align 1
  %139 = call zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"* %124) #10
  call void @_ZN11PrefService10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i1 zeroext %139) #10
  %140 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %132
  %145 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %145) #11
  br label %146

146:                                              ; preds = %132, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #10
  %147 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #10
  %148 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0)) #10
  %149 = icmp ugt i64 %148, -17
  br i1 %149, label %150, label %152

150:                                              ; preds = %146
  %151 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %151) #12
  unreachable

152:                                              ; preds = %146
  %153 = icmp ult i64 %148, 23
  br i1 %153, label %163, label %154

154:                                              ; preds = %152
  %155 = add nuw i64 %148, 16
  %156 = and i64 %155, -16
  %157 = call i8* @_Znwm(i64 %156) #11
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %157, i8** %158, align 8
  %159 = or i64 %156, -9223372036854775808
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %148, i64* %161, align 8
  %162 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %168

163:                                              ; preds = %152
  %164 = trunc i64 %148 to i8
  %165 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  store i8 %164, i8* %166, align 1
  %167 = icmp eq i64 %148, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %163, %154
  %169 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %165, %163 ], [ %162, %154 ]
  %170 = phi i8* [ %147, %163 ], [ %157, %154 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %170, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN16embedder_support27kAlternateErrorPagesEnabledE, i64 0, i64 0), i64 %148, i1 false) #10
  br label %171

171:                                              ; preds = %163, %168
  %172 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %165, %163 ], [ %169, %168 ]
  %173 = phi i8* [ %147, %163 ], [ %170, %168 ]
  %174 = getelementptr inbounds i8, i8* %173, i64 %148
  store i8 0, i8* %174, align 1
  call void @_ZN11PrefService9ClearPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #10
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %176 = load i8, i8* %175, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  call void @_ZdlPv(i8* %180) #11
  br label %181

181:                                              ; preds = %171, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #10
  br label %182

182:                                              ; preds = %21, %181
  ret void
}

declare zeroext i1 @_ZNK11PrefService11HasPrefPathERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.PrefService::Preference"* @_ZNK11PrefService14FindPreferenceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK11PrefService10Preference14HasUserSettingEv(%"class.PrefService::Preference"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK11PrefService16GetUserPrefValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK11PrefService19GetDefaultPrefValueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN11PrefService10SetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base5Value7GetBoolEv(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN11PrefService9ClearPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns19ProvidersForCountryERKNSt3__16vectorIPKN3net16DohProviderEntryENS1_9allocatorIS6_EEEEi(%"class.std::__1::vector.107"* noalias sret, %"class.std::__1::vector.107"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = bitcast %"class.std::__1::vector.107"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %1, i64 0, i32 0, i32 1
  %9 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %8, align 8
  %10 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.107"* %0, %"class.std::__1::vector.107"** %11, align 8
  %12 = icmp eq %"struct.net::DohProviderEntry"** %7, %9
  br i1 %12, label %66, label %13

13:                                               ; preds = %3, %63
  %14 = phi %"struct.net::DohProviderEntry"** [ %64, %63 ], [ %7, %3 ]
  %15 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %14, align 8
  %16 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %15, i64 0, i32 7
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %61

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %15, i64 0, i32 9, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %15, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %21, %22
  br i1 %23, label %63, label %24

24:                                               ; preds = %19, %58
  %25 = phi %"class.std::__1::__tree_end_node"* [ %59, %58 ], [ %21, %19 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::basic_string"*
  %28 = call i32 @_ZN13country_codes24CountryStringToCountryIDERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %27) #10
  %29 = icmp eq i32 %28, %2
  br i1 %29, label %61, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %30, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %34
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %59, %22
  br i1 %60, label %63, label %24

61:                                               ; preds = %24, %13
  %62 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPKN3net16DohProviderEntryENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"* nonnull %4, %"struct.net::DohProviderEntry"** dereferenceable(8) %14) #10
  br label %63

63:                                               ; preds = %58, %61, %19
  %64 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %14, i64 1
  %65 = icmp eq %"struct.net::DohProviderEntry"** %64, %9
  br i1 %65, label %66, label %13

66:                                               ; preds = %63, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns20GetDisabledProvidersEv(%"class.std::__1::vector.125"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10
  call void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::FeatureParam"* nonnull @_ZN8features35kDnsOverHttpsDisabledProvidersParamE) #10
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = select i1 %7, i8* %9, i8* %3
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i64 %12, i64 %13
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.125"* sret %0, i8* %10, i64 %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 1) #10
  %15 = load i8, i8* %5, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %1, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10
  ret void
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.125"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* sret, %"struct.base::FeatureParam"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns23RemoveDisabledProvidersERKNSt3__16vectorIPKN3net16DohProviderEntryENS1_9allocatorIS6_EEEERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS7_IcEEEENS7_ISG_EEEE(%"class.std::__1::vector.107"* noalias sret, %"class.std::__1::vector.107"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.125"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = bitcast %"class.std::__1::vector.107"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %1, i64 0, i32 0, i32 1
  %9 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %8, align 8
  %10 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.107"* %0, %"class.std::__1::vector.107"** %11, align 8
  %12 = icmp eq %"struct.net::DohProviderEntry"** %7, %9
  br i1 %12, label %85, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %2, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %2, i64 0, i32 0, i32 1
  br label %16

16:                                               ; preds = %82, %13
  %17 = phi %"struct.net::DohProviderEntry"** [ %7, %13 ], [ %83, %82 ]
  %18 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %17, align 8
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %19, %20
  br i1 %21, label %77, label %22

22:                                               ; preds = %16
  %23 = bitcast %"struct.net::DohProviderEntry"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"struct.net::DohProviderEntry"* %18 to i8*
  %34 = select i1 %26, i8* %32, i8* %33
  %35 = icmp eq i64 %30, 0
  br label %36

36:                                               ; preds = %74, %22
  %37 = phi %"class.std::__1::basic_string"* [ %19, %22 ], [ %75, %74 ]
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = icmp eq i64 %45, %30
  br i1 %46, label %47, label %74

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %51 = select i1 %41, i8* %49, i8* %50
  br i1 %41, label %58, label %52

52:                                               ; preds = %47
  br i1 %35, label %77, label %53

53:                                               ; preds = %52
  %54 = ptrtoint i8* %49 to i64
  %55 = trunc i64 %54 to i8
  %56 = load i8, i8* %34, align 1
  %57 = icmp eq i8 %56, %55
  br i1 %57, label %59, label %74

58:                                               ; preds = %47
  br i1 %35, label %77, label %71

59:                                               ; preds = %53, %66
  %60 = phi i64 [ %63, %66 ], [ %44, %53 ]
  %61 = phi i8* [ %64, %66 ], [ %50, %53 ]
  %62 = phi i8* [ %67, %66 ], [ %34, %53 ]
  %63 = add i64 %60, -1
  %64 = getelementptr inbounds i8, i8* %61, i64 1
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds i8, i8* %62, i64 1
  %68 = load i8, i8* %64, align 1
  %69 = load i8, i8* %67, align 1
  %70 = icmp eq i8 %68, %69
  br i1 %70, label %59, label %74

71:                                               ; preds = %58
  %72 = call i32 @bcmp(i8* %51, i8* %34, i64 %30) #10
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %66, %71, %53, %36
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %76 = icmp eq %"class.std::__1::basic_string"* %75, %20
  br i1 %76, label %80, label %36

77:                                               ; preds = %71, %58, %52, %59, %16
  %78 = phi %"class.std::__1::basic_string"* [ %19, %16 ], [ %37, %59 ], [ %37, %52 ], [ %37, %58 ], [ %37, %71 ]
  %79 = icmp eq %"class.std::__1::basic_string"* %78, %20
  br i1 %79, label %80, label %82

80:                                               ; preds = %74, %77
  %81 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPKN3net16DohProviderEntryENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"* nonnull %4, %"struct.net::DohProviderEntry"** dereferenceable(8) %17) #10
  br label %82

82:                                               ; preds = %80, %77
  %83 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %17, i64 1
  %84 = icmp eq %"struct.net::DohProviderEntry"** %83, %9
  br i1 %84, label %85, label %16

85:                                               ; preds = %82, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns10SplitGroupEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::vector.133"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  tail call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.133"* sret %0, i8* %1, i64 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 1, i32 1) #10
  ret void
}

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.133"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18chrome_browser_net10secure_dns12IsValidGroupEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::vector.133", align 8
  %5 = bitcast %"class.std::__1::vector.133"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %4, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.133"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.133"* nonnull sret %4, i8* %0, i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 1, i32 1) #10
  %9 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %10 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %11 = icmp eq %"class.base::BasicStringPiece"* %9, %10
  br i1 %11, label %35, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %19

17:                                               ; preds = %30
  %18 = icmp eq %"class.base::BasicStringPiece"* %31, %10
  br i1 %18, label %32, label %19

19:                                               ; preds = %17, %12
  %20 = phi %"class.base::BasicStringPiece"* [ %9, %12 ], [ %31, %17 ]
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #10
  %25 = call zeroext i1 @_ZN3net8dns_util18IsValidDohTemplateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %22, i64 %24, %"class.std::__1::basic_string"* nonnull %3) #10
  %26 = load i8, i8* %15, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 1
  br i1 %25, label %17, label %32

32:                                               ; preds = %30, %17
  %33 = phi i1 [ false, %30 ], [ true, %17 ]
  %34 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  br label %35

35:                                               ; preds = %32, %2
  %36 = phi %"class.base::BasicStringPiece"* [ %34, %32 ], [ %9, %2 ]
  %37 = phi i1 [ %33, %32 ], [ true, %2 ]
  %38 = icmp eq %"class.base::BasicStringPiece"* %36, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = ptrtoint %"class.base::BasicStringPiece"* %36 to i64
  %41 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.base::BasicStringPiece"* %36 to i8*
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %35, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns24UpdateDropdownHistogramsERKNSt3__16vectorIPKN3net16DohProviderEntryENS1_9allocatorIS6_EEEEN4base16BasicStringPieceIcNS1_11char_traitsIcEEEESG_(%"class.std::__1::vector.107"* nocapture readonly dereferenceable(24), i8* nocapture readonly, i64, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %0, i64 0, i32 0, i32 0
  %8 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %9, align 8
  %11 = icmp eq %"struct.net::DohProviderEntry"** %8, %10
  br i1 %11, label %12, label %22

12:                                               ; preds = %29, %5
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #10
  call fastcc void @_ZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_(i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i8* %1, i64 %2, i8* %3, i64 %4)
  %14 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  ret void

22:                                               ; preds = %5, %29
  %23 = phi %"struct.net::DohProviderEntry"** [ %33, %29 ], [ %8, %5 ]
  %24 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %24, i64 0, i32 4
  tail call fastcc void @_ZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_(i32 %31, %"class.std::__1::basic_string"* dereferenceable(24) %32, i8* %1, i64 %2, i8* %3, i64 %4)
  %33 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %23, i64 1
  %34 = icmp eq %"struct.net::DohProviderEntry"** %33, %10
  br i1 %34, label %12, label %22
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_(i32, %"class.std::__1::basic_string"* dereferenceable(24), i8* nocapture readonly, i64, i8* nocapture readonly, i64) unnamed_addr #0 {
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  %19 = icmp eq i64 %18, %3
  br i1 %19, label %20, label %36

20:                                               ; preds = %6
  %21 = tail call i32 @bcmp(i8* %14, i8* %2, i64 %3) #10
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %20
  %24 = load atomic i64, i64* @_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %25 = inttoptr i64 %24 to %"class.base::HistogramBase"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1) #10
  %29 = ptrtoint %"class.base::HistogramBase"* %28 to i64
  store atomic i64 %29, i64* @_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi %"class.base::HistogramBase"* [ %25, %23 ], [ %28, %27 ]
  %32 = bitcast %"class.base::HistogramBase"* %31 to void (%"class.base::HistogramBase"*, i32)***
  %33 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %33, i64 6
  %35 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %34, align 8
  tail call void %35(%"class.base::HistogramBase"* %31, i32 %0) #10
  br label %67

36:                                               ; preds = %6, %20
  %37 = icmp eq i64 %18, %5
  br i1 %37, label %38, label %54

38:                                               ; preds = %36
  %39 = tail call i32 @bcmp(i8* %14, i8* %4, i64 %5) #10
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %38
  %42 = load atomic i64, i64* @_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %43 = inttoptr i64 %42 to %"class.base::HistogramBase"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1) #10
  %47 = ptrtoint %"class.base::HistogramBase"* %46 to i64
  store atomic i64 %47, i64* @_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi %"class.base::HistogramBase"* [ %43, %41 ], [ %46, %45 ]
  %50 = bitcast %"class.base::HistogramBase"* %49 to void (%"class.base::HistogramBase"*, i32)***
  %51 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %51, i64 6
  %53 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %52, align 8
  tail call void %53(%"class.base::HistogramBase"* %49, i32 %0) #10
  br label %67

54:                                               ; preds = %36, %38
  %55 = load atomic i64, i64* @_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %56 = inttoptr i64 %55 to %"class.base::HistogramBase"*
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1) #10
  %60 = ptrtoint %"class.base::HistogramBase"* %59 to i64
  store atomic i64 %60, i64* @_ZZN18chrome_browser_net10secure_dns12_GLOBAL__N_126IncrementDropdownHistogramEN3net25DohProviderIdForHistogramERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN4base16BasicStringPieceIcS7_EESF_E24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %61

61:                                               ; preds = %54, %58
  %62 = phi %"class.base::HistogramBase"* [ %56, %54 ], [ %59, %58 ]
  %63 = bitcast %"class.base::HistogramBase"* %62 to void (%"class.base::HistogramBase"*, i32)***
  %64 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %64, i64 6
  %66 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %65, align 8
  tail call void %66(%"class.base::HistogramBase"* %62, i32 %0) #10
  br label %67

67:                                               ; preds = %48, %61, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns25UpdateValidationHistogramEb(i1 zeroext) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZZN18chrome_browser_net10secure_dns25UpdateValidationHistogramEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 1) #10
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN18chrome_browser_net10secure_dns25UpdateValidationHistogramEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %9, i1 zeroext %0) #10
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns20UpdateProbeHistogramEb(i1 zeroext) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZZN18chrome_browser_net10secure_dns20UpdateProbeHistogramEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i32 1) #10
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN18chrome_browser_net10secure_dns20UpdateProbeHistogramEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %9, i1 zeroext %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18chrome_browser_net10secure_dns13ApplyTemplateEPN3net18DnsConfigOverridesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"struct.net::DnsConfigOverrides"*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca [1 x %"struct.net::DnsOverHttpsServerConfig"], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #10
  %11 = call zeroext i1 @_ZN3net8dns_util18IsValidDohTemplateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %1, i64 %2, %"class.std::__1::basic_string"* nonnull %4) #10
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i32 194, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.5, i64 0, i64 0)) #10
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %15

15:                                               ; preds = %3, %12
  %16 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12
  %17 = bitcast [1 x %"struct.net::DnsOverHttpsServerConfig"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %18 = getelementptr inbounds [1 x %"struct.net::DnsOverHttpsServerConfig"], [1 x %"struct.net::DnsOverHttpsServerConfig"]* %6, i64 0, i64 0
  %19 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = icmp ugt i64 %2, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #12
  unreachable

23:                                               ; preds = %15
  %24 = icmp ult i64 %2, 23
  br i1 %24, label %33, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %2, 16
  %27 = and i64 %26, -16
  %28 = call i8* @_Znwm(i64 %27) #11
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8, !alias.scope !3
  %30 = or i64 %27, -9223372036854775808
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %30, i64* %31, align 8, !alias.scope !3
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %32, align 8, !alias.scope !3
  br label %38

33:                                               ; preds = %23
  %34 = trunc i64 %2 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1, !alias.scope !3
  %37 = icmp eq i64 %2, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33, %25
  %39 = phi i8* [ %28, %25 ], [ %19, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %1, i64 %2, i1 false) #10
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i8* [ %19, %33 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %2
  store i8 0, i8* %42, align 1
  %43 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %10, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = icmp eq i64 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %40
  %52 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #10
  %53 = icmp eq i32 %52, 0
  br label %54

54:                                               ; preds = %40, %51
  %55 = phi i1 [ %53, %51 ], [ false, %40 ]
  call void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"* nonnull %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i1 zeroext %55) #10
  %56 = call dereferenceable(24) %"class.std::__1::vector.189"* @_ZN4absl8optionalINSt3__16vectorIN3net24DnsOverHttpsServerConfigENS1_9allocatorIS4_EEEEE7emplaceIS4_JEvEERS7_St16initializer_listIT_EDpOT0_(%"class.absl::optional.184"* %16, %"struct.net::DnsOverHttpsServerConfig"* nonnull %18, i64 1)
  %57 = bitcast [1 x %"struct.net::DnsOverHttpsServerConfig"]* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = getelementptr inbounds [1 x %"struct.net::DnsOverHttpsServerConfig"], [1 x %"struct.net::DnsOverHttpsServerConfig"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %54, %61
  %65 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  %73 = load i8, i8* %44, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret void
}

declare zeroext i1 @_ZN3net8dns_util18IsValidDohTemplateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.189"* @_ZN4absl8optionalINSt3__16vectorIN3net24DnsOverHttpsServerConfigENS1_9allocatorIS4_EEEEE7emplaceIS4_JEvEERS7_St16initializer_listIT_EDpOT0_(%"class.absl::optional.184"*, %"struct.net::DnsOverHttpsServerConfig"*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::optional.184", %"class.absl::optional.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %35, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.absl::optional.184", %"class.absl::optional.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.189", %"class.std::__1::vector.189"* %8, i64 0, i32 0, i32 0
  %10 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %9, align 8
  %11 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %7
  %13 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %10 to i8*
  %14 = getelementptr inbounds %"class.absl::optional.184", %"class.absl::optional.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %15 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %14, align 8
  %16 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %15, %10
  br i1 %16, label %32, label %17

17:                                               ; preds = %12, %27
  %18 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %19, %27 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %18, i64 -1
  %20 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %24, %17
  %28 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %19, %10
  br i1 %28, label %29, label %17

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.189"* %8 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %12
  %33 = phi i8* [ %31, %29 ], [ %13, %12 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %10, %"struct.net::DnsOverHttpsServerConfig"** %14, align 8
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %32, %7
  store i8 0, i8* %4, align 8
  br label %35

35:                                               ; preds = %3, %34
  %36 = getelementptr inbounds %"class.absl::optional.184", %"class.absl::optional.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = bitcast %"class.std::__1::vector.189"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %79, label %39

39:                                               ; preds = %35
  %40 = icmp ugt i64 %2, 576460752303423487
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.189"* %36 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #12
  unreachable

43:                                               ; preds = %39
  %44 = shl i64 %2, 5
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to %"struct.net::DnsOverHttpsServerConfig"*
  %47 = getelementptr inbounds %"class.absl::optional.184", %"class.absl::optional.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %48 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %47 to i8**
  store i8* %45, i8** %48, align 8
  %49 = bitcast %"class.std::__1::vector.189"* %36 to i8**
  store i8* %45, i8** %49, align 8
  %50 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %46, i64 %2
  %51 = getelementptr inbounds %"class.absl::optional.184", %"class.absl::optional.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::DnsOverHttpsServerConfig"* %50, %"struct.net::DnsOverHttpsServerConfig"** %51, align 8
  %52 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %1, i64 %2
  br label %53

53:                                               ; preds = %69, %43
  %54 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %74, %69 ], [ %46, %43 ]
  %55 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %73, %69 ], [ %1, %43 ]
  %56 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %53
  %61 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %54 to i8*
  %62 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #10
  br label %69

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %54, i64 0, i32 0
  %65 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %64, i8* %66, i64 %68) #10
  br label %69

69:                                               ; preds = %63, %60
  %70 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %54, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %55, i64 0, i32 1
  %72 = load i8, i8* %71, align 8, !range !2
  store i8 %72, i8* %70, align 8
  %73 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %55, i64 1
  %74 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %54, i64 1
  %75 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %73, %52
  br i1 %75, label %76, label %53

76:                                               ; preds = %69
  %77 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %47 to i64*
  %78 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %74 to i64
  store i64 %78, i64* %77, align 8
  br label %79

79:                                               ; preds = %35, %76
  store i8 1, i8* %4, align 8
  ret %"class.std::__1::vector.189"* %36
}

declare void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPKN3net16DohProviderEntryENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"*, %"struct.net::DohProviderEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.107"*, %"class.std::__1::vector.107"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %4, i64 0, i32 0, i32 1
  %6 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %7, align 8
  %9 = icmp eq %"struct.net::DohProviderEntry"** %6, %8
  %10 = ptrtoint %"struct.net::DohProviderEntry"** %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.net::DohProviderEntry"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"struct.net::DohProviderEntry"** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %6, i64 1
  %16 = ptrtoint %"struct.net::DohProviderEntry"** %15 to i64
  %17 = bitcast %"struct.net::DohProviderEntry"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %77

18:                                               ; preds = %2
  %19 = ptrtoint %"struct.net::DohProviderEntry"** %6 to i64
  %20 = bitcast %"struct.net::DohProviderEntry"*** %5 to i64*
  %21 = bitcast %"class.std::__1::vector.107"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.107"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #12
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"struct.net::DohProviderEntry"*** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #12
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to %"struct.net::DohProviderEntry"**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"struct.net::DohProviderEntry"** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %49, i64 %24
  %51 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %49, i64 %48
  %52 = ptrtoint %"struct.net::DohProviderEntry"** %51 to i64
  %53 = bitcast %"struct.net::DohProviderEntry"** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.net::DohProviderEntry"** %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %50, i64 1
  %57 = ptrtoint %"struct.net::DohProviderEntry"** %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.107", %"class.std::__1::vector.107"* %4, i64 0, i32 0, i32 0
  %59 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %58, align 8
  %60 = load i64, i64* %20, align 8
  %61 = ptrtoint %"struct.net::DohProviderEntry"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %50, i64 %64
  %66 = ptrtoint %"struct.net::DohProviderEntry"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %47
  %69 = bitcast %"struct.net::DohProviderEntry"** %65 to i8*
  %70 = bitcast %"struct.net::DohProviderEntry"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #10
  %71 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %47
  %73 = phi %"struct.net::DohProviderEntry"** [ %59, %47 ], [ %71, %68 ]
  store i64 %66, i64* %21, align 8
  store i64 %57, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %74 = icmp eq %"struct.net::DohProviderEntry"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"struct.net::DohProviderEntry"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #11
  br label %77

77:                                               ; preds = %11, %72, %75
  ret %"class.std::__1::back_insert_iterator"* %0
}

declare i32 @_ZN13country_codes24CountryStringToCountryIDERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
