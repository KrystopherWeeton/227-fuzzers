; ModuleID = '../../third_party/skia/src/gpu/GrDefaultGeoProcFactory.cpp'
source_filename = "../../third_party/skia/src/gpu/GrDefaultGeoProcFactory.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.GrDefaultGeoProcFactory::Color" = type { i32, %struct.SkRGBA4f }
%"struct.GrDefaultGeoProcFactory::Coverage" = type <{ i32, i8, [3 x i8] }>
%"struct.GrDefaultGeoProcFactory::LocalCoords" = type { i32, %class.SkMatrix* }
%class.SkMatrix = type { [9 x float], i32 }
%class.DefaultGeoProc = type <{ %class.GrGeometryProcessor.base, [4 x i8], %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %"class.GrGeometryProcessor::Attribute", %struct.SkRGBA4f, %class.SkMatrix, %class.SkMatrix, i8, [3 x i8], i32, i8, [7 x i8] }>
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray*, i32, i32 }
%class.SkTArray = type { i32*, i64 }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.2 }
%class.SkTArray.2 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.3 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.3 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.DefaultGeoProc::GLSLProcessor" = type <{ %class.GrGLSLGeometryProcessor, %class.SkMatrix, %class.SkMatrix, %struct.SkRGBA4f, i8, [3 x i8], %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLProgramBuilder = type opaque
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.27*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.11, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.14, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.23], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [120 x i8] }
%class.SkTArray.13 = type { %class.SkString*, i64 }
%class.SkSTArray.14 = type { %class.SkAlignedSTStorage.15, %class.SkTArray.16 }
%class.SkAlignedSTStorage.15 = type { [16 x i8] }
%class.SkTArray.16 = type { %"class.std::__1::unique_ptr.17"*, i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.23 = type { %class.SkAlignedSTStorage.24, %class.SkTArray.13 }
%class.SkAlignedSTStorage.24 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.25, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.25 = type { %class.GrSBlockAllocator.26 }
%class.GrSBlockAllocator.26 = type { [80 x i8] }
%class.GrResourceHandle.27 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.31* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.28 }
%class.SkSTArray.28 = type { %class.SkAlignedSTStorage.29, %class.SkTArray.30 }
%class.SkAlignedSTStorage.29 = type { [32 x i8] }
%class.SkTArray.30 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.31 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }
%class.GrGLSLVarying = type { i32, i32, i8*, i8*, i8*, i8* }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.11, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.14, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.23], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZZN12SkArenaAlloc4makeIZN14DefaultGeoProc4MakeEPS_jRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixSA_bhEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESG_ = comdat any

$_ZN14DefaultGeoProcC2EjRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixS7_hb = comdat any

$_ZN11GrProcessorD2Ev = comdat any

$_ZN14DefaultGeoProcD0Ev = comdat any

$_ZNK14DefaultGeoProc4nameEv = comdat any

$_ZNK14DefaultGeoProc19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK14DefaultGeoProc18createGLSLInstanceERK12GrShaderCaps = comdat any

$_ZNK19GrGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN23GrGLSLGeometryProcessor17ComputeMatrixKeysERK12GrShaderCapsRK8SkMatrixS5_ = comdat any

$_ZN14DefaultGeoProc13GLSLProcessorD0Ev = comdat any

$_ZN14DefaultGeoProc13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZN14DefaultGeoProc13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV14DefaultGeoProc = comdat any

$_ZTVN14DefaultGeoProc13GLSLProcessorE = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

@_ZTV14DefaultGeoProc = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.DefaultGeoProc*)* @_ZN14DefaultGeoProcD0Ev to i8*), i8* bitcast (i8* (%class.DefaultGeoProc*)* @_ZNK14DefaultGeoProc4nameEv to i8*), i8* bitcast (void (%class.DefaultGeoProc*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK14DefaultGeoProc19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.DefaultGeoProc*, %class.GrShaderCaps*)* @_ZNK14DefaultGeoProc18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [11 x i8] c"inPosition\00", align 1
@.ref.tmp = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.1 = private unnamed_addr constant [8 x i8] c"inColor\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"inLocalCoord\00", align 1
@.ref.tmp.3 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), i32 1, i32 22 }, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"inCoverage\00", align 1
@.ref.tmp.5 = private unnamed_addr constant %"class.GrGeometryProcessor::Attribute" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 28 }, align 8
@.str.6 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Unsupported type conversion\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"DefaultGeometryProcessor\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTVN14DefaultGeoProc13GLSLProcessorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.DefaultGeoProc::GLSLProcessor"*)* @_ZN14DefaultGeoProc13GLSLProcessorD0Ev to i8*), i8* bitcast (void (%"class.DefaultGeoProc::GLSLProcessor"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN14DefaultGeoProc13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.DefaultGeoProc::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN14DefaultGeoProc13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE to i8*)] }, comdat, align 8
@_ZL19SK_PMColor4fILLEGAL = internal unnamed_addr constant %struct.SkRGBA4f { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000 }, align 4
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"half4 color = %s;\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Color\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"color = color * %s;\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"%s = color;\0A\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"half alpha = 1.0;\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"half4 %s = half4(alpha);\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"const half4 %s = half4(1);\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"Coverage\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"half4 %s = half4(%s);\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"Illegal texture sampler index\00", align 1
@switch.table._ZN14DefaultGeoProcC2EjRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixS7_hb = private unnamed_addr constant [18 x i64] [i64 12, i64 16, i64 20, i64 24, i64 12, i64 12, i64 16, i64 16, i64 20, i64 24, i64 12, i64 12, i64 12, i64 12, i64 12, i64 12, i64 12, i64 12], align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* nocapture readonly dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  %9 = select i1 %8, i32 3, i32 0
  %10 = icmp eq i32 %7, 1
  %11 = select i1 %10, i32 1, i32 %9
  %12 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %2, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %18 [
    i32 2, label %14
    i32 3, label %16
  ]

14:                                               ; preds = %5
  %15 = or i32 %11, 8
  br label %18

16:                                               ; preds = %5
  %17 = or i32 %11, 24
  br label %18

18:                                               ; preds = %5, %16, %14
  %19 = phi i32 [ %15, %14 ], [ %17, %16 ], [ %11, %5 ]
  %20 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %3, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 2
  %23 = select i1 %22, i32 4, i32 0
  %24 = or i32 %23, %19
  %25 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Coverage", %"struct.GrDefaultGeoProcFactory::Coverage"* %2, i64 0, i32 1
  %26 = load i8, i8* %25, align 4
  %27 = icmp ne i32 %21, 0
  %28 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::Color", %"struct.GrDefaultGeoProcFactory::Color"* %1, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %3, i64 0, i32 1
  %30 = load %class.SkMatrix*, %class.SkMatrix** %29, align 8
  %31 = icmp eq %class.SkMatrix* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %18
  %33 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  br label %34

34:                                               ; preds = %18, %32
  %35 = phi %class.SkMatrix* [ %33, %32 ], [ %30, %18 ]
  %36 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %0, i32 265, i32 8) #9
  %37 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %0, i64 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint i8* %36 to i64
  %41 = sub i64 %40, %39
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds i8, i8* %36, i64 256
  store i8* %43, i8** %37, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %0, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZN14DefaultGeoProc4MakeEPS_jRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixSA_bhEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESG_, i32 %42) #9
  %44 = bitcast i8* %36 to %class.DefaultGeoProc*
  tail call void @_ZN14DefaultGeoProcC2EjRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixS7_hb(%class.DefaultGeoProc* %44, i32 %24, %struct.SkRGBA4f* dereferenceable(16) %28, %class.SkMatrix* dereferenceable(40) %4, %class.SkMatrix* dereferenceable(40) %35, i8 zeroext %26, i1 zeroext %27) #9
  %45 = bitcast i8* %36 to %class.GrGeometryProcessor*
  ret %class.GrGeometryProcessor* %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory18MakeForDeviceSpaceEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc*, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20), %"struct.GrDefaultGeoProcFactory::Coverage"* nocapture readonly dereferenceable(8), %"struct.GrDefaultGeoProcFactory::LocalCoords"* nocapture readonly dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 {
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca %"struct.GrDefaultGeoProcFactory::LocalCoords", align 8
  %8 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -1, i64 36, i1 false)
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  store i32 -1431655766, i32* %9, align 4
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %11 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 %11, i64 40, i1 false)
  %12 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %47, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i8
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %4) #9
  %22 = zext i8 %21 to i32
  store i32 %22, i32* %16, align 4
  br label %23

23:                                               ; preds = %15, %20
  %24 = phi i32 [ %22, %20 ], [ %17, %15 ]
  %25 = and i32 %24, 15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = trunc i32 %24 to i8
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %4) #9
  %32 = zext i8 %31 to i32
  store i32 %32, i32* %16, align 4
  br label %33

33:                                               ; preds = %30, %27
  %34 = phi i32 [ %32, %30 ], [ %24, %27 ]
  %35 = and i32 %34, 15
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %6) #9
  br label %41

39:                                               ; preds = %33
  %40 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %4, %class.SkMatrix* nonnull %6) #9
  br i1 %40, label %41, label %54

41:                                               ; preds = %37, %39, %23
  %42 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %3, i64 0, i32 1
  %43 = load %class.SkMatrix*, %class.SkMatrix** %42, align 8
  %44 = icmp eq %class.SkMatrix* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* nonnull %6, %class.SkMatrix* nonnull dereferenceable(40) %43) #9
  br label %47

47:                                               ; preds = %41, %5, %45
  %48 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #9
  %49 = bitcast %"struct.GrDefaultGeoProcFactory::LocalCoords"* %7 to i64*
  store i64 -6148914691236517206, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %7, i64 0, i32 0
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.GrDefaultGeoProcFactory::LocalCoords", %"struct.GrDefaultGeoProcFactory::LocalCoords"* %7, i64 0, i32 1
  store %class.SkMatrix* %6, %class.SkMatrix** %51, align 8
  %52 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %53 = call %class.GrGeometryProcessor* @_ZN23GrDefaultGeoProcFactory4MakeEP12SkArenaAllocRKNS_5ColorERKNS_8CoverageERKNS_11LocalCoordsERK8SkMatrix(%class.SkArenaAlloc* %0, %"struct.GrDefaultGeoProcFactory::Color"* dereferenceable(20) %1, %"struct.GrDefaultGeoProcFactory::Coverage"* dereferenceable(8) %2, %"struct.GrDefaultGeoProcFactory::LocalCoords"* nonnull dereferenceable(16) %7, %class.SkMatrix* dereferenceable(40) %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #9
  br label %54

54:                                               ; preds = %39, %47
  %55 = phi %class.GrGeometryProcessor* [ %53, %47 ], [ null, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #9
  ret %class.GrGeometryProcessor* %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZN14DefaultGeoProc4MakeEPS_jRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixSA_bhEUlPvE_EEDTclfp_LDnEEEOT_ENUlPcE_8__invokeESG_(i8*) #3 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -265
  %3 = bitcast i8* %2 to %class.DefaultGeoProc*
  %4 = bitcast i8* %2 to void (%class.DefaultGeoProc*)***
  %5 = load void (%class.DefaultGeoProc*)**, void (%class.DefaultGeoProc*)*** %4, align 8
  %6 = load void (%class.DefaultGeoProc*)*, void (%class.DefaultGeoProc*)** %5, align 8
  tail call void %6(%class.DefaultGeoProc* %3) #9
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14DefaultGeoProcC2EjRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixS7_hb(%class.DefaultGeoProc*, i32, %struct.SkRGBA4f* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40), i8 zeroext, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %8 = zext i1 %6 to i8
  %9 = bitcast %class.DefaultGeoProc* %0 to %class.GrGeometryProcessor*
  tail call void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* %9, i32 14) #9
  %10 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14DefaultGeoProc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 2
  %12 = bitcast %"class.GrGeometryProcessor::Attribute"* %11 to i8*
  %13 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 4
  %14 = bitcast %"class.GrGeometryProcessor::Attribute"* %13 to i8*
  %15 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 5
  %16 = bitcast %"class.GrGeometryProcessor::Attribute"* %15 to i8*
  %17 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 6
  %18 = bitcast %struct.SkRGBA4f* %17 to i8*
  %19 = bitcast %struct.SkRGBA4f* %2 to i8*
  %20 = bitcast %"class.GrGeometryProcessor::Attribute"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 64, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 16, i1 false)
  %21 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 7
  %22 = bitcast %class.SkMatrix* %21 to i8*
  %23 = bitcast %class.SkMatrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 4 %23, i64 40, i1 false)
  %24 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 8
  %25 = bitcast %class.SkMatrix* %24 to i8*
  %26 = bitcast %class.SkMatrix* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %26, i64 40, i1 false)
  %27 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 9
  store i8 %5, i8* %27, align 8
  %28 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 11
  store i32 %1, i32* %28, align 4
  %29 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 12
  store i8 %8, i8* %29, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp to i8*), i64 16, i1 false)
  %30 = and i32 %1, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %7
  %33 = and i32 %1, 2
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i64 133143986193, i64 133143986179
  %36 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 3, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 3, i32 1
  %38 = bitcast i32* %37 to i64*
  store i64 %35, i64* %38, align 8
  %39 = trunc i64 %35 to i32
  br label %40

40:                                               ; preds = %7, %32
  %41 = phi i32 [ 0, %7 ], [ %39, %32 ]
  %42 = phi i32 [ 0, %7 ], [ 31, %32 ]
  %43 = and i32 %1, 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.3 to i8*), i64 16, i1 false)
  br label %46

46:                                               ; preds = %40, %45
  %47 = phi i32 [ 0, %40 ], [ 1, %45 ]
  %48 = phi i32 [ 0, %40 ], [ 22, %45 ]
  %49 = and i32 %1, 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%"class.GrGeometryProcessor::Attribute"* @.ref.tmp.5 to i8*), i64 16, i1 false)
  br label %53

52:                                               ; preds = %60
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

53:                                               ; preds = %46, %51
  %54 = phi i32 [ 0, %46 ], [ 28, %51 ]
  %55 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 0, i32 3, i32 0
  store %"class.GrGeometryProcessor::Attribute"* %11, %"class.GrGeometryProcessor::Attribute"** %55, align 8
  %56 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 0, i32 3, i32 1
  store i32 4, i32* %56, align 8
  %57 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 0, i32 3, i32 2
  %58 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 0, i32 3, i32 3
  store i32 1, i32* %57, align 4
  store i64 8, i64* %58, align 8
  %59 = icmp eq i32 %42, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  store i32 2, i32* %57, align 4
  %61 = icmp ult i32 %41, 18
  br i1 %61, label %62, label %52

62:                                               ; preds = %60
  %63 = sext i32 %41 to i64
  %64 = getelementptr inbounds [18 x i64], [18 x i64]* @switch.table._ZN14DefaultGeoProcC2EjRK8SkRGBA4fIL11SkAlphaType2EERK8SkMatrixS7_hb, i64 0, i64 %63
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %58, align 8
  br label %66

66:                                               ; preds = %62, %53
  %67 = phi i64 [ %65, %62 ], [ 8, %53 ]
  %68 = phi i32 [ 2, %62 ], [ 1, %53 ]
  %69 = icmp eq i32 %48, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = add nuw nsw i32 %68, 1
  store i32 %71, i32* %57, align 4
  %72 = icmp eq i32 %47, 1
  %73 = select i1 %72, i64 8, i64 4
  %74 = add nuw nsw i64 %67, %73
  store i64 %74, i64* %58, align 8
  br label %75

75:                                               ; preds = %70, %66
  %76 = phi i64 [ %74, %70 ], [ %67, %66 ]
  %77 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %78 = icmp eq i32 %54, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = add nuw nsw i32 %77, 1
  store i32 %80, i32* %57, align 4
  %81 = add nuw nsw i64 %76, 4
  store i64 %81, i64* %58, align 8
  br label %82

82:                                               ; preds = %79, %75
  ret void
}

declare void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrProcessorD2Ev(%class.GrProcessor*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14DefaultGeoProcD0Ev(%class.DefaultGeoProc*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.DefaultGeoProc* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK14DefaultGeoProc4nameEv(%class.DefaultGeoProc*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK14DefaultGeoProc19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.DefaultGeoProc*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, -1
  %9 = select i1 %8, i32 128, i32 0
  %10 = or i32 %9, %5
  %11 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 12
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = select i1 %13, i32 256, i32 0
  %15 = or i32 %10, %14
  br i1 %13, label %18, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 7
  br label %25

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 4, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 7
  br i1 %21, label %23, label %25

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %0, i64 0, i32 8
  br label %28

25:                                               ; preds = %18, %16
  %26 = phi %class.SkMatrix* [ %17, %16 ], [ %22, %18 ]
  %27 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  br label %28

28:                                               ; preds = %23, %25
  %29 = phi %class.SkMatrix* [ %22, %23 ], [ %26, %25 ]
  %30 = phi %class.SkMatrix* [ %24, %23 ], [ %27, %25 ]
  %31 = shl i32 %15, 4
  %32 = tail call i32 @_ZN23GrGLSLGeometryProcessor17ComputeMatrixKeysERK12GrShaderCapsRK8SkMatrixS5_(%class.GrShaderCaps* dereferenceable(144) %1, %class.SkMatrix* dereferenceable(40) %29, %class.SkMatrix* dereferenceable(40) %30) #9
  %33 = or i32 %32, %31
  %34 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %35 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %35, i64 2
  %37 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %36, align 8
  tail call void %37(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGLSLGeometryProcessor* @_ZNK14DefaultGeoProc18createGLSLInstanceERK12GrShaderCaps(%class.DefaultGeoProc*, %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 144) #11
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN14DefaultGeoProc13GLSLProcessorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #9
  %11 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %11, i64 40, i1 false) #9
  %12 = getelementptr inbounds i8, i8* %3, i64 64
  %13 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() #9
  %14 = bitcast %class.SkMatrix* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %14, i64 40, i1 false) #9
  %15 = getelementptr inbounds i8, i8* %3, i64 104
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL19SK_PMColor4fILLEGAL to i8*), i64 16, i1 false) #9
  %16 = getelementptr inbounds i8, i8* %3, i64 120
  store i8 -1, i8* %16, align 8
  %17 = getelementptr inbounds i8, i8* %3, i64 124
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 -1, i64 16, i1 false) #9
  %18 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor16onTextureSamplerEi(%class.GrGeometryProcessor*, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN23GrGLSLGeometryProcessor17ComputeMatrixKeysERK12GrShaderCapsRK8SkMatrixS5_(%class.GrShaderCaps* dereferenceable(144), %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %5 = bitcast i56* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1048576
  %8 = icmp eq i64 %7, 0
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  br i1 %8, label %11, label %31

11:                                               ; preds = %3
  %12 = trunc i32 %10 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %11
  %15 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #9
  %16 = zext i8 %15 to i32
  store i32 %16, i32* %9, align 4
  br label %17

17:                                               ; preds = %14, %11
  %18 = phi i32 [ %16, %14 ], [ %10, %11 ]
  %19 = and i32 %18, 15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %17
  %22 = trunc i32 %18 to i8
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #9
  %26 = zext i8 %25 to i32
  store i32 %26, i32* %9, align 4
  br label %27

27:                                               ; preds = %24, %21
  %28 = phi i32 [ %26, %24 ], [ %18, %21 ]
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %27, %3
  %32 = phi i32 [ %28, %27 ], [ %10, %3 ]
  %33 = and i32 %32, 192
  %34 = icmp eq i32 %33, 128
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #9
  %37 = zext i8 %36 to i32
  store i32 %37, i32* %9, align 4
  br label %38

38:                                               ; preds = %35, %31
  %39 = phi i32 [ %37, %35 ], [ %32, %31 ]
  %40 = and i32 %39, 8
  %41 = icmp eq i32 %40, 0
  %42 = select i1 %41, i32 8, i32 12
  br label %43

43:                                               ; preds = %17, %27, %38
  %44 = phi i32 [ 0, %17 ], [ 4, %27 ], [ %42, %38 ]
  %45 = load i64, i64* %5, align 8
  %46 = and i64 %45, 1048576
  %47 = icmp eq i64 %46, 0
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %70

50:                                               ; preds = %43
  %51 = trunc i32 %49 to i8
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #9
  %55 = zext i8 %54 to i32
  store i32 %55, i32* %48, align 4
  br label %56

56:                                               ; preds = %53, %50
  %57 = phi i32 [ %55, %53 ], [ %49, %50 ]
  %58 = and i32 %57, 15
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %82, label %60

60:                                               ; preds = %56
  %61 = trunc i32 %57 to i8
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #9
  %65 = zext i8 %64 to i32
  store i32 %65, i32* %48, align 4
  br label %66

66:                                               ; preds = %63, %60
  %67 = phi i32 [ %65, %63 ], [ %57, %60 ]
  %68 = and i32 %67, 12
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %82, label %70

70:                                               ; preds = %66, %43
  %71 = phi i32 [ %67, %66 ], [ %49, %43 ]
  %72 = and i32 %71, 192
  %73 = icmp eq i32 %72, 128
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  %75 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %2) #9
  %76 = zext i8 %75 to i32
  store i32 %76, i32* %48, align 4
  br label %77

77:                                               ; preds = %74, %70
  %78 = phi i32 [ %76, %74 ], [ %71, %70 ]
  %79 = and i32 %78, 8
  %80 = icmp eq i32 %79, 0
  %81 = select i1 %80, i32 2, i32 3
  br label %82

82:                                               ; preds = %56, %66, %77
  %83 = phi i32 [ 0, %56 ], [ 1, %66 ], [ %81, %77 ]
  %84 = or i32 %83, %44
  ret i32 %84
}

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13InvalidMatrixEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14DefaultGeoProc13GLSLProcessorD0Ev(%"class.DefaultGeoProc::GLSLProcessor"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #9
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #9
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #9
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #9
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #9
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #9
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray.2* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #9
  br label %31

31:                                               ; preds = %10, %28
  %32 = bitcast %"class.DefaultGeoProc::GLSLProcessor"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14DefaultGeoProc13GLSLProcessor7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.DefaultGeoProc::GLSLProcessor"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %class.GrGeometryProcessor* %3 to %class.DefaultGeoProc*
  %6 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 2
  %8 = bitcast %class.GrGeometryProcessor* %7 to %class.SkMatrix*
  %9 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 1
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %6, %class.SkMatrix* dereferenceable(40) %8, %class.SkMatrix* %9) #9
  %10 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 2, i32 3, i32 3
  %12 = bitcast i64* %11 to %class.SkMatrix*
  %13 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 2
  tail call void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrShaderCaps* dereferenceable(144) %2, %class.GrResourceHandle* dereferenceable(4) %10, %class.SkMatrix* dereferenceable(40) %12, %class.SkMatrix* %13) #9
  %14 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %5, i64 0, i32 3, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %54

17:                                               ; preds = %4
  %18 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4, i32 3
  %19 = bitcast i64* %18 to %struct.SkRGBA4f*
  %20 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %19, i64 0, i32 3
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 3, i32 3
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %22, %24
  %26 = bitcast i64* %18 to float*
  br i1 %25, label %27, label %45

27:                                               ; preds = %17
  %28 = load float, float* %26, align 4
  %29 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %20, i64 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = fcmp oeq float %28, %30
  br i1 %31, label %32, label %45

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %19, i64 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 3, i32 1
  %36 = load float, float* %35, align 4
  %37 = fcmp oeq float %34, %36
  br i1 %37, label %38, label %45

38:                                               ; preds = %32
  %39 = getelementptr inbounds i64, i64* %18, i64 1
  %40 = bitcast i64* %39 to float*
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 3, i32 2
  %43 = load float, float* %42, align 4
  %44 = fcmp une float %41, %43
  br i1 %44, label %45, label %54

45:                                               ; preds = %17, %27, %32, %38
  %46 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 8, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %49 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %49, i64 17
  %51 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %50, align 8
  tail call void %51(%class.GrGLSLProgramDataManager* %1, i32 %47, i32 1, float* %26) #9
  %52 = bitcast %struct.SkRGBA4f* %20 to i8*
  %53 = bitcast i64* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 4 %53, i64 16, i1 false)
  br label %54

54:                                               ; preds = %4, %45, %38
  %55 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 3
  %56 = bitcast %class.GrGeometryProcessor* %55 to i8*
  %57 = load i8, i8* %56, align 8
  %58 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 4
  %59 = load i8, i8* %58, align 8
  %60 = icmp eq i8 %57, %59
  br i1 %60, label %75, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 9, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = uitofp i8 %57 to float
  %69 = fmul float %68, 0x3F70101020000000
  %70 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float)***
  %71 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %70, align 8
  %72 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %71, i64 4
  %73 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %72, align 8
  tail call void %73(%class.GrGLSLProgramDataManager* %1, i32 %67, float %69) #9
  %74 = load i8, i8* %56, align 8
  store i8 %74, i8* %58, align 8
  br label %75

75:                                               ; preds = %61, %54, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14DefaultGeoProc13GLSLProcessor10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE(%"class.DefaultGeoProc::GLSLProcessor"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.GrGLSLVarying, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %class.GrShaderVar, align 8
  %9 = alloca %class.GrShaderVar, align 8
  %10 = alloca i8*, align 8
  %11 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %12 = bitcast %class.GrGeometryProcessor** %11 to %class.DefaultGeoProc**
  %13 = load %class.DefaultGeoProc*, %class.DefaultGeoProc** %12, align 8
  %14 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %15 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %14, align 8
  %16 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %17 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %16, align 8
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %19 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %18, align 8
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %21 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %20, align 8
  %22 = bitcast %class.DefaultGeoProc* %13 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %19, %class.GrGeometryProcessor* dereferenceable(80) %22) #9
  %23 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 11
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16
  %26 = icmp ne i32 %25, 0
  %27 = bitcast %class.GrGLSLFPFragmentBuilder* %17 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %class.GrGLSLFPFragmentBuilder* %17 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = bitcast i8* %33 to %class.GrGLSLShaderBuilder*
  %35 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %36 = load i8*, i8** %35, align 8
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* %36)
  %37 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 3, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = or i32 %38, %25
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %79, label %41

41:                                               ; preds = %3
  %42 = bitcast %class.GrGLSLVarying* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #9
  %43 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 0
  %44 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 1
  %45 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 2
  %46 = getelementptr inbounds %class.GrGLSLVarying, %class.GrGLSLVarying* %6, i64 0, i32 5
  store i32 31, i32* %43, align 8
  %47 = bitcast i32* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 36, i1 false)
  call void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler* %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), %class.GrGLSLVarying* nonnull %6, i32 0) #9
  %48 = load i32, i32* %37, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %41
  %51 = bitcast %class.GrGLSLVertexBuilder* %15 to %class.GrGLSLShaderBuilder*
  %52 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 3, i32 0
  %53 = load i8*, i8** %52, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %51, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %53)
  br label %64

54:                                               ; preds = %41
  %55 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %56 = bitcast %class.GrGLSLUniformHandler* %21 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %57 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %56, align 8
  %58 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %57, i64 13
  %59 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %58, align 8
  %60 = call i32 %59(%class.GrGLSLUniformHandler* %21, %class.GrFragmentProcessor* null, i32 1, i32 31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %7) #9
  %61 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 8, i32 0
  store i32 %60, i32* %61, align 4
  %62 = bitcast %class.GrGLSLVertexBuilder* %15 to %class.GrGLSLShaderBuilder*
  %63 = load i8*, i8** %7, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %62, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %63)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br label %64

64:                                               ; preds = %54, %50
  %65 = bitcast %class.GrGLSLVertexBuilder* %15 to %class.GrGLSLShaderBuilder*
  br i1 %26, label %66, label %69

66:                                               ; preds = %64
  %67 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 5, i32 0
  %68 = load i8*, i8** %67, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %65, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* %68)
  br label %69

69:                                               ; preds = %64, %66
  %70 = load i8*, i8** %45, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* %70)
  %71 = load i8*, i8** %27, align 8
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %32, i64 %74
  %76 = bitcast i8* %75 to %class.GrGLSLShaderBuilder*
  %77 = load i8*, i8** %35, align 8
  %78 = load i8*, i8** %46, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %76, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i8* %77, i8* %78)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #9
  br label %83

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 0
  %81 = load i8*, i8** %35, align 8
  %82 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 8
  tail call void @_ZN23GrGLSLGeometryProcessor17setupUniformColorEP23GrGLSLFPFragmentBuilderP20GrGLSLUniformHandlerPKcP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLGeometryProcessor* %80, %class.GrGLSLFPFragmentBuilder* %17, %class.GrGLSLUniformHandler* %21, i8* %81, %class.GrResourceHandle* %82) #9
  br label %83

83:                                               ; preds = %79, %69
  %84 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 5
  %85 = load %class.GrShaderCaps*, %class.GrShaderCaps** %84, align 8
  %86 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 2, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 7
  %89 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 6
  call void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsEPKcRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %15, %class.GrGLSLUniformHandler* %21, %class.GrShaderCaps* dereferenceable(144) %85, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i8* %87, %class.SkMatrix* dereferenceable(40) %88, %class.GrResourceHandle* %89) #9
  %90 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 4, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %112, label %93

93:                                               ; preds = %83
  %94 = bitcast %class.GrShaderVar* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %94) #9
  %95 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 4, i32 0
  %96 = load i8*, i8** %95, align 8, !noalias !3
  %97 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #9, !noalias !3
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %4, i8* %96) #9, !noalias !3
  %98 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 0
  store i32 %91, i32* %98, align 8, !alias.scope !3
  %99 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 1
  store i32 2, i32* %99, align 4, !alias.scope !3
  %100 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 2
  store i32 0, i32* %100, align 8, !alias.scope !3
  %101 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %101, %class.SkString* nonnull dereferenceable(8) %4) #9
  %102 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %102) #9
  %103 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %8, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %103) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #9, !noalias !3
  %104 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1
  %105 = bitcast %class.GrShaderVar* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %94, i64 12, i1 false) #9
  %106 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 3
  %107 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %106, %class.SkString* dereferenceable(8) %101) #9
  %108 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 4
  %109 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %108, %class.SkString* dereferenceable(8) %102) #9
  %110 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 5
  %111 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* %110, %class.SkString* dereferenceable(8) %103) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* %103) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* %102) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* %101) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %94) #9
  br label %130

112:                                              ; preds = %83
  %113 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 12
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %130, label %116

116:                                              ; preds = %112
  %117 = load %class.GrShaderCaps*, %class.GrShaderCaps** %84, align 8
  %118 = load i8*, i8** %86, align 8, !noalias !6
  %119 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 2, i32 2
  %120 = load i32, i32* %119, align 4, !noalias !6
  %121 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #9, !noalias !6
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %118) #9, !noalias !6
  %122 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 0
  store i32 %120, i32* %122, align 8, !alias.scope !6
  %123 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 1
  store i32 2, i32* %123, align 4, !alias.scope !6
  %124 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 2
  store i32 0, i32* %124, align 8, !alias.scope !6
  %125 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %125, %class.SkString* nonnull dereferenceable(8) %5) #9
  %126 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %126) #9
  %127 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %9, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %127) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #9, !noalias !6
  %128 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 8
  %129 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 7
  call void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder* %15, %class.GrGLSLUniformHandler* %21, %class.GrShaderCaps* dereferenceable(144) %117, %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, %class.GrShaderVar* nonnull %9, %class.SkMatrix* dereferenceable(40) %128, %class.GrResourceHandle* %129) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* %127) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* %126) #9
  call void @_ZN8SkStringD1Ev(%class.SkString* %125) #9
  br label %130

130:                                              ; preds = %112, %116, %93
  %131 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 5, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  %134 = or i1 %26, %133
  br i1 %134, label %151, label %135

135:                                              ; preds = %130
  %136 = load i8*, i8** %27, align 8
  %137 = getelementptr i8, i8* %136, i64 -24
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds i8, i8* %32, i64 %139
  %141 = bitcast i8* %140 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %141, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0))
  %142 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 5
  call void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler* %19, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16) %142, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 0) #9
  %143 = load i8*, i8** %27, align 8
  %144 = getelementptr i8, i8* %143, i64 -24
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds i8, i8* %32, i64 %146
  %148 = bitcast i8* %147 to %class.GrGLSLShaderBuilder*
  %149 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %150 = load i8*, i8** %149, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %148, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0), i8* %150)
  br label %181

151:                                              ; preds = %130
  %152 = getelementptr inbounds %class.DefaultGeoProc, %class.DefaultGeoProc* %13, i64 0, i32 9
  %153 = load i8, i8* %152, align 8
  %154 = icmp eq i8 %153, -1
  br i1 %154, label %155, label %164

155:                                              ; preds = %151
  %156 = load i8*, i8** %27, align 8
  %157 = getelementptr i8, i8* %156, i64 -24
  %158 = bitcast i8* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds i8, i8* %32, i64 %159
  %161 = bitcast i8* %160 to %class.GrGLSLShaderBuilder*
  %162 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %163 = load i8*, i8** %162, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %161, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %163)
  br label %181

164:                                              ; preds = %151
  %165 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %166 = bitcast %class.GrGLSLUniformHandler* %21 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %167 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %166, align 8
  %168 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %167, i64 13
  %169 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %168, align 8
  %170 = call i32 %169(%class.GrGLSLUniformHandler* %21, %class.GrFragmentProcessor* null, i32 16, i32 28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %10) #9
  %171 = getelementptr inbounds %"class.DefaultGeoProc::GLSLProcessor", %"class.DefaultGeoProc::GLSLProcessor"* %0, i64 0, i32 9, i32 0
  store i32 %170, i32* %171, align 8
  %172 = load i8*, i8** %27, align 8
  %173 = getelementptr i8, i8* %172, i64 -24
  %174 = bitcast i8* %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds i8, i8* %32, i64 %175
  %177 = bitcast i8* %176 to %class.GrGLSLShaderBuilder*
  %178 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %179 = load i8*, i8** %178, align 8
  %180 = load i8*, i8** %10, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %177, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i8* %179, i8* %180)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #9
  br label %181

181:                                              ; preds = %155, %164, %135
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15
  tail call void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"* %17) #9
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray.2* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #9
  br label %26

26:                                               ; preds = %10, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #9
  %3 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #9
  %4 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #9
  %5 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %5) #9
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %6) #9
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #9
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN23GrGLSLGeometryProcessor12SetTransformERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK16GrResourceHandleINS0_17UniformHandleKindEERK8SkMatrixPSB_(%class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrResourceHandle* dereferenceable(4), %class.SkMatrix* dereferenceable(40), %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #9
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret void
}

declare void @_ZN20GrGLSLVaryingHandler10addVaryingEPKcP13GrGLSLVaryingNS_13InterpolationE(%class.GrGLSLVaryingHandler*, i8*, %class.GrGLSLVarying*, i32) local_unnamed_addr #2

declare void @_ZN23GrGLSLGeometryProcessor17setupUniformColorEP23GrGLSLFPFragmentBuilderP20GrGLSLUniformHandlerPKcP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLGeometryProcessor*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, %class.GrResourceHandle*) local_unnamed_addr #2

declare void @_ZN23GrGLSLGeometryProcessor19WriteOutputPositionEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsEPKcRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps* dereferenceable(144), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, i8*, %class.SkMatrix* dereferenceable(40), %class.GrResourceHandle*) local_unnamed_addr #2

declare void @_ZN23GrGLSLGeometryProcessor15WriteLocalCoordEP19GrGLSLVertexBuilderP20GrGLSLUniformHandlerRK12GrShaderCapsPNS_8GrGPArgsE11GrShaderVarRK8SkMatrixP16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps* dereferenceable(144), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*, %class.GrShaderVar*, %class.SkMatrix* dereferenceable(40), %class.GrResourceHandle*) local_unnamed_addr #2

declare void @_ZN20GrGLSLVaryingHandler23addPassThroughAttributeERKN19GrGeometryProcessor9AttributeEPKcNS_13InterpolationE(%class.GrGLSLVaryingHandler*, %"class.GrGeometryProcessor::Attribute"* dereferenceable(16), i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!5 = distinct !{!5, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv: argument 0"}
!8 = distinct !{!8, !"_ZNK19GrGeometryProcessor9Attribute11asShaderVarEv"}
