; ModuleID = '../../third_party/blink/renderer/platform/fonts/opentype/open_type_caps_support_mpl.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/opentype/open_type_caps_support_mpl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::OpenTypeCapsSupport" = type { %"class.blink::HarfBuzzFace"*, i32, i32, i32, i32 }
%"class.blink::HarfBuzzFace" = type { %"class.WTF::RefCounted", %"class.blink::FontPlatformData"*, i64, %struct.hb_font_t*, %"struct.blink::HarfBuzzFontData"* }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontPlatformData" = type opaque
%struct.hb_font_t = type opaque
%"struct.blink::HarfBuzzFontData" = type opaque
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.0", %"class.WTF::Vector" }
%"class.WTF::RefCounted.0" = type { %"class.base::RefCounted.1" }
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%struct.hb_face_t = type opaque
%struct.hb_language_impl_t = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 0
  %8 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %7, align 8
  %9 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* %8, %"class.blink::UnicodeRangeSet"* null, i32 1) #3
  %10 = tail call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %9) #3
  %11 = tail call i32 @hb_ot_layout_has_substitution(%struct.hb_face_t* %10) #3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %3
  %14 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #3
  store i64 0, i64* %4, align 8
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #3
  store i32 2, i32* %5, align 4
  %16 = bitcast i64* %4 to i32*
  call void @hb_ot_tags_from_script_and_language(i32 %1, %struct.hb_language_impl_t* null, i32* nonnull %5, i32* nonnull %16, i32* null, i32* null) #3
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #3
  store i32 0, i32* %6, align 4
  %18 = load i32, i32* %5, align 4
  %19 = call i32 @hb_ot_layout_table_select_script(%struct.hb_face_t* %10, i32 1196643650, i32 %18, i32* nonnull %16, i32* nonnull %6, i32* null) #3
  %20 = load i32, i32* %6, align 4
  %21 = call i32 @hb_ot_layout_language_find_feature(%struct.hb_face_t* %10, i32 1196643650, i32 %20, i32 65535, i32 %2, i32* null) #3
  %22 = icmp ne i32 %21, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #3
  br label %23

23:                                               ; preds = %3, %13
  %24 = phi i1 [ %22, %13 ], [ false, %3 ]
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t*) local_unnamed_addr #2

declare %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"*, %"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #2

declare i32 @hb_ot_layout_has_substitution(%struct.hb_face_t*) local_unnamed_addr #2

declare void @hb_ot_tags_from_script_and_language(i32, %struct.hb_language_impl_t*, i32*, i32*, i32*, i32*) local_unnamed_addr #2

declare i32 @hb_ot_layout_table_select_script(%struct.hb_face_t*, i32, i32, i32*, i32*, i32*) local_unnamed_addr #2

declare i32 @hb_ot_layout_language_find_feature(%struct.hb_face_t*, i32, i32, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
