; ModuleID = '../../third_party/ots/src/src/gdef.cc'
source_filename = "../../third_party/ots/src/src/gdef.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeGDEF" = type <{ %"class.ots::Table.base", i8, i16, [4 x i8], i8*, i64, i16, [6 x i8] }>
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i16*, i16*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i16* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3ots5TableD2Ev = comdat any

$_ZN3ots12OpenTypeGDEFD0Ev = comdat any

$_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [27 x i8] c"Failed to read gdef header\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Bad glyph count in gdef\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Bad coverage offset %d\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"Bad glyph count %u\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Can't read attachment point %d\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Bad attachment point %d of %d\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"Bad coverage table\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"Can't read point count %d\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"zero point count %d\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"Can't read point index %d in point %d\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"bad contour indices: %u >= %u\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"Can't read caret structure\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"Bad caret structure\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"Bad caret coverate offset %d\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"bad ligature glyph count: %u\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"Can't read ligature glyph location %d\00", align 1
@.str.16 = private unnamed_addr constant [43 x i8] c"Bad ligature glyph location %d in glyph %d\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Can't parse caret coverage table\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"Can't read caret count for glyph %d\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"bad caret value count: %u\00", align 1
@.str.20 = private unnamed_addr constant [40 x i8] c"Can't read caret offset %d for glyph %d\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"Bad caret offset %d for caret %d glyph %d\00", align 1
@.str.22 = private unnamed_addr constant [45 x i8] c"Can't read caret values table %d in glyph %d\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"bad caret value format: %u\00", align 1
@.str.24 = private unnamed_addr constant [47 x i8] c"Bad caret value table structure %d in glyph %d\00", align 1
@.str.25 = private unnamed_addr constant [56 x i8] c"Can't read device offset for caret value %d in glyph %d\00", align 1
@.str.26 = private unnamed_addr constant [53 x i8] c"Bad device offset for caret value %d in glyph %d: %d\00", align 1
@.str.27 = private unnamed_addr constant [48 x i8] c"Bad device table for caret value %d in glyph %d\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"Can' read mark glyph table structure\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"bad mark glyph set table format: %u\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"Bad mark_set %d\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"Can't read covrage location for mark set %d\00", align 1
@.str.32 = private unnamed_addr constant [41 x i8] c"Bad coverage location %d for mark set %d\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"Failed to parse coverage table for mark set %d\00", align 1
@.str.34 = private unnamed_addr constant [38 x i8] c"No maxp table in font, needed by GDEF\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"Incomplete table\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"Bad version\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"Invalid offset to glyph classes\00", align 1
@.str.38 = private unnamed_addr constant [22 x i8] c"Invalid glyph classes\00", align 1
@.str.39 = private unnamed_addr constant [34 x i8] c"Invalid offset to attachment list\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"Invalid attachment list\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"Invalid offset to ligature caret list\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"Invalid ligature caret list\00", align 1
@.str.43 = private unnamed_addr constant [39 x i8] c"Invalid offset to mark attachment list\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"Invalid mark attachment list\00", align 1
@.str.45 = private unnamed_addr constant [34 x i8] c"invalid offset to mark glyph sets\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"Invalid mark glyph sets\00", align 1
@.str.47 = private unnamed_addr constant [39 x i8] c"invalid offset to item variation store\00", align 1
@.str.48 = private unnamed_addr constant [29 x i8] c"Invalid item variation store\00", align 1
@.str.49 = private unnamed_addr constant [22 x i8] c"Failed to write table\00", align 1
@_ZTVN3ots12OpenTypeGDEFE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::Table"*)* @_ZN3ots5TableD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeGDEF"*)* @_ZN3ots12OpenTypeGDEFD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGDEF"*, i8*, i64)* @_ZN3ots12OpenTypeGDEF5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeGDEF"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeGDEF9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGDEF20ParseAttachListTableEPKhm(%"class.ots::OpenTypeGDEF"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = icmp ult i64 %2, 2
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %1 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #9
  %10 = icmp ult i64 %2, 4
  br i1 %10, label %11, label %14

11:                                               ; preds = %6, %3
  %12 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %13 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0)) #9
  br label %162

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 2
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #9
  %19 = zext i16 %18 to i32
  %20 = shl nuw nsw i32 %19, 1
  %21 = add nuw nsw i32 %20, 4
  %22 = icmp ugt i32 %21, 65535
  br i1 %22, label %23, label %26

23:                                               ; preds = %14
  %24 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %25 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %162

26:                                               ; preds = %14
  %27 = zext i16 %9 to i32
  %28 = icmp eq i16 %8, 0
  %29 = zext i16 %9 to i64
  %30 = icmp uge i64 %29, %2
  %31 = or i1 %28, %30
  %32 = icmp ugt i32 %21, %27
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %26
  %35 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %36 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %35, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 %27) #9
  br label %162

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 6
  %39 = load i16, i16* %38, align 8
  %40 = icmp ugt i16 %18, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %43 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %42, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 %19) #9
  br label %162

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #9
  %48 = bitcast i16** %47 to i64*
  %49 = bitcast %"class.std::__1::vector"* %4 to i64*
  %50 = icmp eq i16 %17, 0
  br i1 %50, label %86, label %51

51:                                               ; preds = %44
  %52 = zext i16 %18 to i64
  call void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"* nonnull %4, i64 %52) #9
  %53 = zext i16 %18 to i64
  br label %54

54:                                               ; preds = %51, %83
  %55 = phi i64 [ 0, %51 ], [ %84, %83 ]
  %56 = phi i64 [ 4, %51 ], [ %57, %83 ]
  %57 = add nuw nsw i64 %56, 2
  %58 = icmp ugt i64 %57, %2
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = trunc i64 %55 to i32
  %61 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %62 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %61, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i32 %60) #9
  br label %151

63:                                               ; preds = %54
  %64 = load i16*, i16** %46, align 8
  %65 = getelementptr inbounds i16, i16* %64, i64 %55
  %66 = getelementptr inbounds i8, i8* %1, i64 %56
  %67 = bitcast i8* %66 to i16*
  %68 = load i16, i16* %67, align 1
  %69 = call i16 @llvm.bswap.i16(i16 %68) #9
  store i16 %69, i16* %65, align 2
  %70 = load i16*, i16** %46, align 8
  %71 = getelementptr inbounds i16, i16* %70, i64 %55
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i64
  %74 = icmp uge i64 %73, %2
  %75 = zext i16 %72 to i32
  %76 = icmp ugt i32 %21, %75
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %83

78:                                               ; preds = %63
  %79 = zext i16 %72 to i32
  %80 = trunc i64 %55 to i32
  %81 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %82 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %81, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i32 %80, i32 %79) #9
  br label %151

83:                                               ; preds = %63
  %84 = add nuw nsw i64 %55, 1
  %85 = icmp ult i64 %84, %53
  br i1 %85, label %54, label %86

86:                                               ; preds = %83, %44
  %87 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %88 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 0, i32 3
  %89 = load %"struct.ots::Font"*, %"struct.ots::Font"** %88, align 8
  %90 = getelementptr inbounds i8, i8* %1, i64 %29
  %91 = sub i64 %2, %29
  %92 = load i16, i16* %38, align 8
  %93 = call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %89, i8* %90, i64 %91, i16 zeroext %92, i16 zeroext 0) #9
  br i1 %93, label %94, label %102

94:                                               ; preds = %86
  %95 = load i64, i64* %48, align 8
  %96 = load i64, i64* %49, align 8
  %97 = icmp eq i64 %95, %96
  %98 = inttoptr i64 %96 to i16*
  br i1 %97, label %154, label %99

99:                                               ; preds = %94
  %100 = sub i64 %95, %96
  %101 = ashr exact i64 %100, 1
  br label %104

102:                                              ; preds = %86
  %103 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %87, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #9
  br label %151

104:                                              ; preds = %99, %147
  %105 = phi i64 [ 0, %99 ], [ %149, %147 ]
  %106 = phi i32 [ 0, %99 ], [ %148, %147 ]
  %107 = getelementptr inbounds i16, i16* %98, i64 %105
  %108 = load i16, i16* %107, align 2
  %109 = zext i16 %108 to i64
  %110 = add nuw nsw i64 %109, 2
  %111 = icmp ugt i64 %110, %2
  br i1 %111, label %112, label %114

112:                                              ; preds = %104
  %113 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %87, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i32 %106) #9
  br label %151

114:                                              ; preds = %104
  %115 = getelementptr inbounds i8, i8* %1, i64 %109
  %116 = bitcast i8* %115 to i16*
  %117 = load i16, i16* %116, align 1
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %114
  %120 = call i16 @llvm.bswap.i16(i16 %117) #9
  %121 = zext i16 %120 to i32
  br label %124

122:                                              ; preds = %114
  %123 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %87, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i32 %106) #9
  br label %151

124:                                              ; preds = %119, %144
  %125 = phi i32 [ %145, %144 ], [ 0, %119 ]
  %126 = phi i16 [ %136, %144 ], [ 0, %119 ]
  %127 = phi i64 [ %128, %144 ], [ %110, %119 ]
  %128 = add i64 %127, 2
  %129 = icmp ugt i64 %128, %2
  br i1 %129, label %130, label %132

130:                                              ; preds = %124
  %131 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %87, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 %125, i32 %106) #9
  br label %151

132:                                              ; preds = %124
  %133 = getelementptr inbounds i8, i8* %1, i64 %127
  %134 = bitcast i8* %133 to i16*
  %135 = load i16, i16* %134, align 1
  %136 = call i16 @llvm.bswap.i16(i16 %135) #9
  %137 = icmp eq i16 %126, 0
  %138 = icmp ult i16 %126, %136
  %139 = or i1 %137, %138
  br i1 %139, label %144, label %140

140:                                              ; preds = %132
  %141 = zext i16 %126 to i32
  %142 = zext i16 %136 to i32
  %143 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %87, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0), i32 %141, i32 %142) #9
  br label %151

144:                                              ; preds = %132
  %145 = add nuw nsw i32 %125, 1
  %146 = icmp ult i32 %145, %121
  br i1 %146, label %124, label %147

147:                                              ; preds = %144
  %148 = add i32 %106, 1
  %149 = zext i32 %148 to i64
  %150 = icmp ugt i64 %101, %149
  br i1 %150, label %104, label %154

151:                                              ; preds = %130, %140, %59, %78, %102, %112, %122
  %152 = phi i1 [ %123, %122 ], [ %113, %112 ], [ %103, %102 ], [ %62, %59 ], [ %82, %78 ], [ %131, %130 ], [ %143, %140 ]
  %153 = load i16*, i16** %46, align 8
  br label %154

154:                                              ; preds = %147, %94, %151
  %155 = phi i16* [ %153, %151 ], [ %98, %94 ], [ %98, %147 ]
  %156 = phi i1 [ %152, %151 ], [ true, %94 ], [ true, %147 ]
  %157 = icmp eq i16* %155, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = ptrtoint i16* %155 to i64
  store i64 %159, i64* %48, align 8
  %160 = bitcast i16* %155 to i8*
  call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %154, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  br label %162

162:                                              ; preds = %23, %34, %41, %161, %11
  %163 = phi i1 [ %13, %11 ], [ %25, %23 ], [ %36, %34 ], [ %43, %41 ], [ %156, %161 ]
  ret i1 %163
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"*, i8*, i64, i16 zeroext, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGDEF22ParseLigCaretListTableEPKhm(%"class.ots::OpenTypeGDEF"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = icmp ult i64 %2, 2
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = bitcast i8* %1 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #9
  %11 = icmp ult i64 %2, 4
  br i1 %11, label %12, label %15

12:                                               ; preds = %7, %3
  %13 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %14 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %268

15:                                               ; preds = %7
  %16 = getelementptr inbounds i8, i8* %1, i64 2
  %17 = bitcast i8* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #9
  %20 = zext i16 %19 to i32
  %21 = shl nuw nsw i32 %20, 1
  %22 = add nuw nsw i32 %21, 4
  %23 = icmp ugt i32 %22, 65535
  br i1 %23, label %24, label %27

24:                                               ; preds = %15
  %25 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %26 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %268

27:                                               ; preds = %15
  %28 = zext i16 %10 to i32
  %29 = icmp eq i16 %9, 0
  %30 = zext i16 %10 to i64
  %31 = icmp uge i64 %30, %2
  %32 = or i1 %29, %31
  %33 = icmp ugt i32 %22, %28
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %27
  %36 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %37 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %36, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i32 %28) #9
  br label %268

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 6
  %40 = load i16, i16* %39, align 8
  %41 = icmp ugt i16 %19, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %44 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %43, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 %20) #9
  br label %268

45:                                               ; preds = %38
  %46 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #9
  %49 = bitcast i16** %48 to i64*
  %50 = bitcast %"class.std::__1::vector"* %4 to i64*
  %51 = icmp eq i16 %18, 0
  br i1 %51, label %87, label %52

52:                                               ; preds = %45
  %53 = zext i16 %19 to i64
  call void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"* nonnull %4, i64 %53) #9
  %54 = zext i16 %19 to i64
  br label %55

55:                                               ; preds = %52, %84
  %56 = phi i64 [ 0, %52 ], [ %85, %84 ]
  %57 = phi i64 [ 4, %52 ], [ %58, %84 ]
  %58 = add nuw nsw i64 %57, 2
  %59 = icmp ugt i64 %58, %2
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = trunc i64 %56 to i32
  %62 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %63 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %62, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0), i32 %61) #9
  br label %255

64:                                               ; preds = %55
  %65 = load i16*, i16** %47, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 %56
  %67 = getelementptr inbounds i8, i8* %1, i64 %57
  %68 = bitcast i8* %67 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = call i16 @llvm.bswap.i16(i16 %69) #9
  store i16 %70, i16* %66, align 2
  %71 = load i16*, i16** %47, align 8
  %72 = getelementptr inbounds i16, i16* %71, i64 %56
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i64
  %75 = icmp uge i64 %74, %2
  %76 = zext i16 %73 to i32
  %77 = icmp ugt i32 %22, %76
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %64
  %80 = zext i16 %73 to i32
  %81 = trunc i64 %56 to i32
  %82 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %83 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %82, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16, i64 0, i64 0), i32 %80, i32 %81) #9
  br label %255

84:                                               ; preds = %64
  %85 = add nuw nsw i64 %56, 1
  %86 = icmp ult i64 %85, %54
  br i1 %86, label %55, label %87

87:                                               ; preds = %84, %45
  %88 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %89 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 0, i32 3
  %90 = load %"struct.ots::Font"*, %"struct.ots::Font"** %89, align 8
  %91 = getelementptr inbounds i8, i8* %1, i64 %30
  %92 = sub i64 %2, %30
  %93 = load i16, i16* %39, align 8
  %94 = call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %90, i8* %91, i64 %92, i16 zeroext %93, i16 zeroext 0) #9
  br i1 %94, label %95, label %106

95:                                               ; preds = %87
  %96 = load i64, i64* %49, align 8
  %97 = load i64, i64* %50, align 8
  %98 = icmp eq i64 %96, %97
  %99 = inttoptr i64 %97 to i16*
  br i1 %98, label %260, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.std::__1::vector"* %5 to i8*
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %104 = bitcast i16** %103 to i64*
  %105 = add i64 %2, -2
  br label %108

106:                                              ; preds = %87
  %107 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %255

108:                                              ; preds = %100, %246
  %109 = phi i16* [ %99, %100 ], [ %254, %246 ]
  %110 = phi i64 [ 0, %100 ], [ %248, %246 ]
  %111 = phi i32 [ 0, %100 ], [ %247, %246 ]
  %112 = phi i1 [ undef, %100 ], [ %237, %246 ]
  %113 = getelementptr inbounds i16, i16* %109, i64 %110
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i64
  %116 = add nuw nsw i64 %115, 2
  %117 = icmp ugt i64 %116, %2
  br i1 %117, label %118, label %120

118:                                              ; preds = %108
  %119 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 %111) #9
  br label %255

120:                                              ; preds = %108
  %121 = getelementptr inbounds i8, i8* %1, i64 %115
  %122 = bitcast i8* %121 to i16*
  %123 = load i16, i16* %122, align 1
  %124 = call i16 @llvm.bswap.i16(i16 %123) #9
  %125 = icmp eq i16 %123, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %120
  %127 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i32 0) #9
  br label %255

128:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 24, i1 false) #9
  %129 = zext i16 %124 to i64
  call void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"* nonnull %5, i64 %129) #9
  %130 = zext i16 %124 to i32
  %131 = shl nuw nsw i32 %130, 1
  %132 = add nuw nsw i32 %131, 2
  %133 = zext i16 %124 to i64
  br label %136

134:                                              ; preds = %163
  %135 = zext i16 %124 to i64
  br label %166

136:                                              ; preds = %128, %163
  %137 = phi i64 [ 0, %128 ], [ %164, %163 ]
  %138 = phi i64 [ %116, %128 ], [ %139, %163 ]
  %139 = add i64 %138, 2
  %140 = icmp ugt i64 %139, %2
  br i1 %140, label %141, label %144

141:                                              ; preds = %136
  %142 = trunc i64 %137 to i32
  %143 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20, i64 0, i64 0), i32 %142, i32 %111) #9
  br label %236

144:                                              ; preds = %136
  %145 = load i16*, i16** %102, align 8
  %146 = getelementptr inbounds i16, i16* %145, i64 %137
  %147 = getelementptr inbounds i8, i8* %1, i64 %138
  %148 = bitcast i8* %147 to i16*
  %149 = load i16, i16* %148, align 1
  %150 = call i16 @llvm.bswap.i16(i16 %149) #9
  store i16 %150, i16* %146, align 2
  %151 = load i16*, i16** %102, align 8
  %152 = getelementptr inbounds i16, i16* %151, i64 %137
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i64
  %155 = icmp uge i64 %154, %2
  %156 = zext i16 %153 to i32
  %157 = icmp ugt i32 %132, %156
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %144
  %160 = zext i16 %153 to i32
  %161 = trunc i64 %137 to i32
  %162 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0), i32 %160, i32 %161, i32 %111) #9
  br label %236

163:                                              ; preds = %144
  %164 = add nuw nsw i64 %137, 1
  %165 = icmp ult i64 %164, %133
  br i1 %165, label %136, label %134

166:                                              ; preds = %134, %233
  %167 = phi i64 [ 0, %134 ], [ %234, %233 ]
  %168 = load i16*, i16** %47, align 8
  %169 = getelementptr inbounds i16, i16* %168, i64 %110
  %170 = load i16, i16* %169, align 2
  %171 = zext i16 %170 to i64
  %172 = load i16*, i16** %102, align 8
  %173 = getelementptr inbounds i16, i16* %172, i64 %167
  %174 = load i16, i16* %173, align 2
  %175 = zext i16 %174 to i64
  %176 = add nuw nsw i64 %175, %171
  %177 = add nuw nsw i64 %176, 2
  %178 = icmp ugt i64 %177, %2
  br i1 %178, label %179, label %182

179:                                              ; preds = %166
  %180 = trunc i64 %167 to i32
  %181 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.22, i64 0, i64 0), i32 %180, i32 %111) #9
  br label %236

182:                                              ; preds = %166
  %183 = getelementptr inbounds i8, i8* %1, i64 %176
  %184 = bitcast i8* %183 to i16*
  %185 = load i16, i16* %184, align 1
  %186 = call i16 @llvm.bswap.i16(i16 %185) #9
  %187 = icmp eq i16 %185, 0
  %188 = icmp ugt i16 %186, 3
  %189 = or i1 %187, %188
  br i1 %189, label %190, label %193

190:                                              ; preds = %182
  %191 = zext i16 %186 to i32
  %192 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i32 %191) #9
  br label %236

193:                                              ; preds = %182
  %194 = add nuw nsw i64 %176, 4
  %195 = icmp ugt i64 %194, %2
  %196 = icmp ugt i64 %177, %105
  %197 = or i1 %195, %196
  br i1 %197, label %198, label %201

198:                                              ; preds = %193
  %199 = trunc i64 %167 to i32
  %200 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.24, i64 0, i64 0), i32 %199, i32 %111) #9
  br label %236

201:                                              ; preds = %193
  %202 = icmp eq i16 %185, 768
  br i1 %202, label %203, label %233

203:                                              ; preds = %201
  %204 = add nuw nsw i64 %176, 6
  %205 = icmp ugt i64 %204, %2
  br i1 %205, label %206, label %209

206:                                              ; preds = %203
  %207 = trunc i64 %167 to i32
  %208 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.25, i64 0, i64 0), i32 %207, i32 %111) #9
  br label %236

209:                                              ; preds = %203
  %210 = getelementptr inbounds i8, i8* %1, i64 %194
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 1
  %213 = call i16 @llvm.bswap.i16(i16 %212) #9
  %214 = icmp eq i16 %212, 0
  br i1 %214, label %220, label %215

215:                                              ; preds = %209
  %216 = add i16 %174, %170
  %217 = add i16 %216, %213
  %218 = zext i16 %217 to i64
  %219 = icmp ult i64 %218, %2
  br i1 %219, label %224, label %220

220:                                              ; preds = %215, %209
  %221 = trunc i64 %167 to i32
  %222 = zext i16 %213 to i32
  %223 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.26, i64 0, i64 0), i32 %221, i32 %111, i32 %222) #9
  br label %236

224:                                              ; preds = %215
  %225 = load %"struct.ots::Font"*, %"struct.ots::Font"** %89, align 8
  %226 = getelementptr inbounds i8, i8* %1, i64 %218
  %227 = sub i64 %2, %218
  %228 = call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %225, i8* %226, i64 %227) #9
  br i1 %228, label %233, label %229

229:                                              ; preds = %224
  %230 = trunc i64 %167 to i32
  %231 = zext i16 %213 to i32
  %232 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %88, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.27, i64 0, i64 0), i32 %230, i32 %111, i32 %231) #9
  br label %236

233:                                              ; preds = %224, %201
  %234 = add nuw nsw i64 %167, 1
  %235 = icmp ult i64 %234, %135
  br i1 %235, label %166, label %236

236:                                              ; preds = %233, %229, %220, %206, %141, %159, %190, %198, %179
  %237 = phi i1 [ %181, %179 ], [ %200, %198 ], [ %192, %190 ], [ %143, %141 ], [ %162, %159 ], [ %232, %229 ], [ %223, %220 ], [ %208, %206 ], [ %112, %233 ]
  %238 = phi i32 [ 1, %179 ], [ 1, %198 ], [ 1, %190 ], [ 1, %141 ], [ 1, %159 ], [ 1, %229 ], [ 1, %220 ], [ 1, %206 ], [ 0, %233 ]
  %239 = load i16*, i16** %102, align 8
  %240 = icmp eq i16* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %236
  %242 = ptrtoint i16* %239 to i64
  store i64 %242, i64* %104, align 8
  %243 = bitcast i16* %239 to i8*
  call void @_ZdlPv(i8* %243) #10
  br label %244

244:                                              ; preds = %241, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #9
  %245 = icmp eq i32 %238, 0
  br i1 %245, label %246, label %255

246:                                              ; preds = %244
  %247 = add i32 %111, 1
  %248 = zext i32 %247 to i64
  %249 = load i64, i64* %49, align 8
  %250 = load i64, i64* %50, align 8
  %251 = sub i64 %249, %250
  %252 = ashr exact i64 %251, 1
  %253 = icmp ugt i64 %252, %248
  %254 = inttoptr i64 %250 to i16*
  br i1 %253, label %108, label %258

255:                                              ; preds = %244, %118, %126, %60, %79, %106
  %256 = phi i1 [ %107, %106 ], [ %63, %60 ], [ %83, %79 ], [ %119, %118 ], [ %127, %126 ], [ %237, %244 ]
  %257 = load i16*, i16** %47, align 8
  br label %260

258:                                              ; preds = %246
  %259 = inttoptr i64 %250 to i16*
  br label %260

260:                                              ; preds = %258, %95, %255
  %261 = phi i16* [ %257, %255 ], [ %99, %95 ], [ %259, %258 ]
  %262 = phi i1 [ %256, %255 ], [ true, %95 ], [ true, %258 ]
  %263 = icmp eq i16* %261, null
  br i1 %263, label %267, label %264

264:                                              ; preds = %260
  %265 = ptrtoint i16* %261 to i64
  store i64 %265, i64* %49, align 8
  %266 = bitcast i16* %261 to i8*
  call void @_ZdlPv(i8* %266) #10
  br label %267

267:                                              ; preds = %260, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #9
  br label %268

268:                                              ; preds = %24, %35, %42, %267, %12
  %269 = phi i1 [ %14, %12 ], [ %26, %24 ], [ %37, %35 ], [ %44, %42 ], [ %262, %267 ]
  ret i1 %269
}

declare zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGDEF26ParseMarkGlyphSetsDefTableEPKhm(%"class.ots::OpenTypeGDEF"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 2
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %1 to i16*
  %7 = load i16, i16* %6, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7) #9
  %9 = icmp ult i64 %2, 4
  br i1 %9, label %10, label %13

10:                                               ; preds = %5, %3
  %11 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %12 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %11, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i64 0, i64 0)) #9
  br label %70

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, i8* %1, i64 2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #9
  %18 = icmp eq i16 %7, 256
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = zext i16 %8 to i32
  %21 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %21, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0), i32 %20) #9
  br label %70

23:                                               ; preds = %13
  %24 = zext i16 %17 to i32
  %25 = shl nuw nsw i32 %24, 1
  %26 = add nuw nsw i32 %25, 4
  %27 = icmp ugt i32 %26, 65535
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = icmp eq i16 %16, 0
  br i1 %29, label %68, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 0, i32 3
  %32 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 6
  br label %36

33:                                               ; preds = %23
  %34 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %35 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), i32 %26) #9
  br label %70

36:                                               ; preds = %30, %65
  %37 = phi i32 [ 0, %30 ], [ %66, %65 ]
  %38 = phi i64 [ 4, %30 ], [ %39, %65 ]
  %39 = add nuw nsw i64 %38, 4
  %40 = icmp ugt i64 %39, %2
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %43 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %42, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i32 %37) #9
  br label %70

44:                                               ; preds = %36
  %45 = getelementptr inbounds i8, i8* %1, i64 %38
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = tail call i32 @llvm.bswap.i32(i32 %47) #9
  %49 = zext i32 %48 to i64
  %50 = icmp uge i64 %49, %2
  %51 = icmp ult i32 %48, %26
  %52 = or i1 %51, %50
  br i1 %52, label %53, label %56

53:                                               ; preds = %44
  %54 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %55 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %54, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %48, i32 %37) #9
  br label %70

56:                                               ; preds = %44
  %57 = load %"struct.ots::Font"*, %"struct.ots::Font"** %31, align 8
  %58 = getelementptr inbounds i8, i8* %1, i64 %49
  %59 = sub i64 %2, %49
  %60 = load i16, i16* %32, align 8
  %61 = tail call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %57, i8* %58, i64 %59, i16 zeroext %60, i16 zeroext 0) #9
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %64 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %63, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.33, i64 0, i64 0), i32 %37) #9
  br label %70

65:                                               ; preds = %56
  %66 = add nuw nsw i32 %37, 1
  %67 = icmp ult i32 %66, %24
  br i1 %67, label %36, label %68

68:                                               ; preds = %65, %28
  %69 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 2
  store i16 %17, i16* %69, align 2
  br label %70

70:                                               ; preds = %41, %62, %53, %33, %68, %19, %10
  %71 = phi i1 [ %22, %19 ], [ %12, %10 ], [ %35, %33 ], [ true, %68 ], [ %43, %41 ], [ %64, %62 ], [ %55, %53 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGDEF5ParseEPKhm(%"class.ots::OpenTypeGDEF"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %5 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 0, i32 3
  %6 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %7 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %6, i32 1835104368) #9
  %8 = icmp eq %"class.ots::Table"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0)) #9
  br label %186

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %7, i64 0, i32 5, i64 1
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 2
  %15 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 6
  store i16 %14, i16* %15, align 8
  %16 = icmp ult i64 %2, 4
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #9
  br label %186

19:                                               ; preds = %11
  %20 = bitcast i8* %1 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = getelementptr inbounds i8, i8* %1, i64 2
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #9
  %26 = icmp ne i16 %21, 256
  %27 = icmp eq i16 %24, 256
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  %30 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0)) #9
  br label %186

31:                                               ; preds = %19
  %32 = icmp ult i64 %2, 6
  br i1 %32, label %51, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %1, i64 4
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #9
  %38 = icmp ult i64 %2, 8
  br i1 %38, label %51, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, i8* %1, i64 6
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 1
  %43 = tail call i16 @llvm.bswap.i16(i16 %42) #9
  %44 = icmp ult i64 %2, 10
  br i1 %44, label %51, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds i8, i8* %1, i64 8
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 1
  %49 = tail call i16 @llvm.bswap.i16(i16 %48) #9
  %50 = icmp ult i64 %2, 12
  br i1 %50, label %51, label %53

51:                                               ; preds = %45, %39, %33, %31
  %52 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #9
  br label %186

53:                                               ; preds = %45
  %54 = getelementptr inbounds i8, i8* %1, i64 10
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %55, align 1
  %57 = tail call i16 @llvm.bswap.i16(i16 %56) #9
  %58 = icmp ugt i16 %25, 1
  br i1 %58, label %59, label %73

59:                                               ; preds = %53
  %60 = icmp ult i64 %2, 14
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #9
  br label %186

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %1, i64 12
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 1
  %67 = tail call i16 @llvm.bswap.i16(i16 %66) #9
  %68 = icmp ugt i16 %25, 2
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = icmp ult i64 %2, 18
  br i1 %70, label %71, label %76

71:                                               ; preds = %69
  %72 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #9
  br label %186

73:                                               ; preds = %63, %53
  %74 = phi i16 [ 0, %53 ], [ %67, %63 ]
  %75 = select i1 %58, i32 14, i32 12
  br label %81

76:                                               ; preds = %69
  %77 = getelementptr inbounds i8, i8* %1, i64 14
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 1
  %80 = tail call i32 @llvm.bswap.i32(i32 %79) #9
  br label %81

81:                                               ; preds = %73, %76
  %82 = phi i32 [ %80, %76 ], [ 0, %73 ]
  %83 = phi i16 [ %67, %76 ], [ %74, %73 ]
  %84 = phi i32 [ 18, %76 ], [ %75, %73 ]
  %85 = icmp eq i16 %36, 0
  br i1 %85, label %101, label %86

86:                                               ; preds = %81
  %87 = zext i16 %37 to i64
  %88 = icmp uge i64 %87, %2
  %89 = zext i16 %37 to i32
  %90 = icmp ugt i32 %84, %89
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0)) #9
  br label %186

94:                                               ; preds = %86
  %95 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %96 = getelementptr inbounds i8, i8* %1, i64 %87
  %97 = sub i64 %2, %87
  %98 = tail call zeroext i1 @_ZN3ots18ParseClassDefTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %95, i8* %96, i64 %97, i16 zeroext %14, i16 zeroext 4) #9
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  %100 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38, i64 0, i64 0)) #9
  br label %186

101:                                              ; preds = %81, %94
  %102 = icmp eq i16 %42, 0
  br i1 %102, label %117, label %103

103:                                              ; preds = %101
  %104 = zext i16 %43 to i64
  %105 = icmp uge i64 %104, %2
  %106 = zext i16 %43 to i32
  %107 = icmp ugt i32 %84, %106
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %103
  %110 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i64 0, i64 0)) #9
  br label %186

111:                                              ; preds = %103
  %112 = getelementptr inbounds i8, i8* %1, i64 %104
  %113 = sub i64 %2, %104
  %114 = tail call zeroext i1 @_ZN3ots12OpenTypeGDEF20ParseAttachListTableEPKhm(%"class.ots::OpenTypeGDEF"* %0, i8* %112, i64 %113)
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)) #9
  br label %186

117:                                              ; preds = %101, %111
  %118 = icmp eq i16 %48, 0
  br i1 %118, label %133, label %119

119:                                              ; preds = %117
  %120 = zext i16 %49 to i64
  %121 = icmp uge i64 %120, %2
  %122 = zext i16 %49 to i32
  %123 = icmp ugt i32 %84, %122
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0)) #9
  br label %186

127:                                              ; preds = %119
  %128 = getelementptr inbounds i8, i8* %1, i64 %120
  %129 = sub i64 %2, %120
  %130 = tail call zeroext i1 @_ZN3ots12OpenTypeGDEF22ParseLigCaretListTableEPKhm(%"class.ots::OpenTypeGDEF"* %0, i8* %128, i64 %129)
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0)) #9
  br label %186

133:                                              ; preds = %117, %127
  %134 = icmp eq i16 %56, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %133
  %136 = zext i16 %57 to i64
  %137 = icmp uge i64 %136, %2
  %138 = zext i16 %57 to i32
  %139 = icmp ugt i32 %84, %138
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %135
  %142 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.43, i64 0, i64 0)) #9
  br label %186

143:                                              ; preds = %135
  %144 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %145 = getelementptr inbounds i8, i8* %1, i64 %136
  %146 = sub i64 %2, %136
  %147 = load i16, i16* %15, align 8
  %148 = tail call zeroext i1 @_ZN3ots18ParseClassDefTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %144, i8* %145, i64 %146, i16 zeroext %147, i16 zeroext -1) #9
  br i1 %148, label %151, label %149

149:                                              ; preds = %143
  %150 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0)) #9
  br label %186

151:                                              ; preds = %133, %143
  %152 = icmp eq i16 %83, 0
  br i1 %152, label %167, label %153

153:                                              ; preds = %151
  %154 = zext i16 %83 to i64
  %155 = icmp uge i64 %154, %2
  %156 = zext i16 %83 to i32
  %157 = icmp ugt i32 %84, %156
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %153
  %160 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.45, i64 0, i64 0)) #9
  br label %186

161:                                              ; preds = %153
  %162 = getelementptr inbounds i8, i8* %1, i64 %154
  %163 = sub i64 %2, %154
  %164 = tail call zeroext i1 @_ZN3ots12OpenTypeGDEF26ParseMarkGlyphSetsDefTableEPKhm(%"class.ots::OpenTypeGDEF"* %0, i8* %162, i64 %163)
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0)) #9
  br label %186

167:                                              ; preds = %151, %161
  %168 = icmp eq i32 %82, 0
  br i1 %168, label %183, label %169

169:                                              ; preds = %167
  %170 = zext i32 %82 to i64
  %171 = icmp uge i64 %170, %2
  %172 = icmp ult i32 %82, %84
  %173 = or i1 %172, %171
  br i1 %173, label %174, label %176

174:                                              ; preds = %169
  %175 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.47, i64 0, i64 0)) #9
  br label %186

176:                                              ; preds = %169
  %177 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %178 = getelementptr inbounds i8, i8* %1, i64 %170
  %179 = sub i64 %2, %170
  %180 = tail call zeroext i1 @_ZN3ots23ParseItemVariationStoreEPKNS_4FontEPKhmPNSt3__16vectorItNS5_9allocatorItEEEE(%"struct.ots::Font"* %177, i8* %178, i64 %179, %"class.std::__1::vector"* null) #9
  br i1 %180, label %183, label %181

181:                                              ; preds = %176
  %182 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.48, i64 0, i64 0)) #9
  br label %186

183:                                              ; preds = %167, %176
  %184 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 4
  store i8* %1, i8** %184, align 8
  %185 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 5
  store i64 %2, i64* %185, align 8
  br label %186

186:                                              ; preds = %17, %29, %61, %92, %99, %109, %115, %125, %131, %141, %149, %159, %165, %174, %181, %183, %71, %51, %9
  %187 = phi i1 [ %10, %9 ], [ %30, %29 ], [ %18, %17 ], [ %52, %51 ], [ %62, %61 ], [ %72, %71 ], [ %93, %92 ], [ %110, %109 ], [ %126, %125 ], [ %142, %141 ], [ %160, %159 ], [ %175, %174 ], [ true, %183 ], [ %182, %181 ], [ %166, %165 ], [ %150, %149 ], [ %132, %131 ], [ %116, %115 ], [ %100, %99 ]
  ret i1 %187
}

declare %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots18ParseClassDefTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"*, i8*, i64, i16 zeroext, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots23ParseItemVariationStoreEPKNS_4FontEPKhmPNSt3__16vectorItNS5_9allocatorItEEEE(%"struct.ots::Font"*, i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeGDEF9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeGDEF"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.ots::OpenTypeGDEF", %"class.ots::OpenTypeGDEF"* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %113, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %12 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %12, i64 4
  %14 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %13, align 8
  %15 = tail call i64 %14(%"class.ots::OTSStream"* %1) #9
  %16 = and i64 %15, 3
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %10
  %19 = sub nuw nsw i64 4, %16
  %20 = icmp ult i64 %19, %8
  %21 = select i1 %20, i64 %19, i64 %8
  %22 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #9
  store i32 0, i32* %3, align 4
  %23 = getelementptr inbounds i8, i8* %22, i64 %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %6, i64 %21, i1 false) #9
  %24 = load i32, i32* %3, align 4
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #9
  %26 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, %25
  store i32 %28, i32* %26, align 8
  %29 = sub i64 %8, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #9
  br label %30

30:                                               ; preds = %18, %10
  %31 = phi i64 [ %8, %10 ], [ %29, %18 ]
  %32 = phi i64 [ 0, %10 ], [ %21, %18 ]
  %33 = icmp ugt i64 %31, 3
  br i1 %33, label %34, label %95

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = add i64 %31, -4
  %38 = lshr i64 %37, 2
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 3
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %34, %42
  %43 = phi i32 [ %51, %42 ], [ %36, %34 ]
  %44 = phi i64 [ %53, %42 ], [ %32, %34 ]
  %45 = phi i64 [ %52, %42 ], [ %31, %34 ]
  %46 = phi i64 [ %54, %42 ], [ %40, %34 ]
  %47 = getelementptr inbounds i8, i8* %6, i64 %44
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  %50 = tail call i32 @llvm.bswap.i32(i32 %49) #9
  %51 = add i32 %50, %43
  store i32 %51, i32* %35, align 8
  %52 = add i64 %45, -4
  %53 = add i64 %44, 4
  %54 = add i64 %46, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %42, !llvm.loop !2

56:                                               ; preds = %42, %34
  %57 = phi i32 [ %36, %34 ], [ %51, %42 ]
  %58 = phi i64 [ %32, %34 ], [ %53, %42 ]
  %59 = phi i64 [ %31, %34 ], [ %52, %42 ]
  %60 = phi i64 [ undef, %34 ], [ %53, %42 ]
  %61 = icmp ult i64 %37, 12
  br i1 %61, label %92, label %62

62:                                               ; preds = %56, %62
  %63 = phi i32 [ %88, %62 ], [ %57, %56 ]
  %64 = phi i64 [ %90, %62 ], [ %58, %56 ]
  %65 = phi i64 [ %89, %62 ], [ %59, %56 ]
  %66 = getelementptr inbounds i8, i8* %6, i64 %64
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  %69 = tail call i32 @llvm.bswap.i32(i32 %68) #9
  %70 = add i32 %69, %63
  store i32 %70, i32* %35, align 8
  %71 = add i64 %64, 4
  %72 = getelementptr inbounds i8, i8* %6, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 1
  %75 = tail call i32 @llvm.bswap.i32(i32 %74) #9
  %76 = add i32 %75, %70
  store i32 %76, i32* %35, align 8
  %77 = add i64 %64, 8
  %78 = getelementptr inbounds i8, i8* %6, i64 %77
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 1
  %81 = tail call i32 @llvm.bswap.i32(i32 %80) #9
  %82 = add i32 %81, %76
  store i32 %82, i32* %35, align 8
  %83 = add i64 %64, 12
  %84 = getelementptr inbounds i8, i8* %6, i64 %83
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 1
  %87 = tail call i32 @llvm.bswap.i32(i32 %86) #9
  %88 = add i32 %87, %82
  store i32 %88, i32* %35, align 8
  %89 = add i64 %65, -16
  %90 = add i64 %64, 16
  %91 = icmp ugt i64 %89, 3
  br i1 %91, label %62, label %92

92:                                               ; preds = %62, %56
  %93 = phi i64 [ %60, %56 ], [ %90, %62 ]
  %94 = and i64 %31, 3
  br label %95

95:                                               ; preds = %92, %30
  %96 = phi i64 [ %31, %30 ], [ %94, %92 ]
  %97 = phi i64 [ %32, %30 ], [ %93, %92 ]
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %95
  %100 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100)
  store i32 0, i32* %4, align 4
  %101 = getelementptr inbounds i8, i8* %6, i64 %97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 1 %101, i64 %96, i1 false) #9
  %102 = load i32, i32* %4, align 4
  %103 = tail call i32 @llvm.bswap.i32(i32 %102) #9
  %104 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, %103
  store i32 %106, i32* %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  br label %107

107:                                              ; preds = %95, %99
  %108 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %109 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %109, i64 2
  %111 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.ots::OTSStream"* %1, i8* %6, i64 %8) #9
  br i1 %112, label %116, label %113

113:                                              ; preds = %2, %107
  %114 = bitcast %"class.ots::OpenTypeGDEF"* %0 to %"class.ots::Table"*
  %115 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %114, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i64 0, i64 0)) #9
  br label %116

116:                                              ; preds = %107, %113
  %117 = phi i1 [ %115, %113 ], [ true, %107 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots5TableD2Ev(%"class.ots::Table"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeGDEFD0Ev(%"class.ots::OpenTypeGDEF"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.ots::OpenTypeGDEF"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i16** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i16*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i16, i16* %13, i64 %18
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 2
  %25 = and i64 %24, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint i16* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %81

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 1
  %34 = add i64 %33, %1
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 1
  %41 = icmp ult i64 %40, 4611686018427387903
  %42 = icmp ult i64 %39, %34
  %43 = select i1 %42, i64 %34, i64 %39
  %44 = select i1 %41, i64 %43, i64 9223372036854775807
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = icmp slt i64 %44, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

49:                                               ; preds = %46
  %50 = shl i64 %44, 1
  %51 = tail call i8* @_Znwm(i64 %50) #10
  %52 = bitcast i8* %51 to i16*
  br label %53

53:                                               ; preds = %49, %38
  %54 = phi i16* [ %52, %49 ], [ null, %38 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 %33
  %56 = getelementptr inbounds i16, i16* %54, i64 %44
  %57 = getelementptr inbounds i16, i16* %55, i64 %1
  %58 = bitcast i16* %55 to i8*
  %59 = shl i64 %1, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %58, i8 0, i64 %59, i1 false) #9
  %60 = ptrtoint i16* %56 to i64
  %61 = ptrtoint i16* %57 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = load i64, i64* %7, align 8
  %65 = ptrtoint i16* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 1
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i16, i16* %55, i64 %68
  %70 = ptrtoint i16* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast i16* %69 to i8*
  %74 = bitcast i16* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %73, i8* align 2 %74, i64 %66, i1 false) #9
  %75 = load i16*, i16** %62, align 8
  br label %76

76:                                               ; preds = %53, %72
  %77 = phi i16* [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %30, align 8
  store i64 %61, i64* %7, align 8
  store i64 %60, i64* %4, align 8
  %78 = icmp eq i16* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i16* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %79, %76, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
