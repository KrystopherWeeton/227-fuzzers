; ModuleID = '../../components/database_utils/url_converter.cc'
source_filename = "../../components/database_utils/url_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr = comdat any

@_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr = linkonce_odr hidden constant i8 0, comdat, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14database_utils17GurlToDatabaseUrlERK4GURL(%"class.std::__1::basic_string"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = alloca %"class.url::StringPieceReplacements", align 8
  %4 = alloca %class.GURL, align 8
  %5 = bitcast %"class.url::StringPieceReplacements"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.url::Parsed"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 80, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 64, i1 false) #4
  %8 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %8) #4
  %9 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1, i32 1
  %12 = bitcast i8** %10 to <2 x i8*>*
  store <2 x i8*> <i8* @_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr, i8* @_ZZN3url12ReplacementsIcE11PlaceholderEvE10empty_cstr>, <2 x i8*>* %12, align 8
  %13 = bitcast %"struct.url::Component"* %11 to <2 x i64>*
  store <2 x i64> <i64 -4294967296, i64 -4294967296>, <2 x i64>* %13, align 8
  %14 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #4
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* nonnull sret %4, %class.GURL* %1, %"class.url::Replacements"* nonnull dereferenceable(144) %9) #4
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %4) #4
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #4
  br label %28

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %25, i64 %27) #4
  br label %28

28:                                               ; preds = %20, %23
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #4
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %8) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %5) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret, %class.GURL*, %"class.url::Replacements"* dereferenceable(144)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
