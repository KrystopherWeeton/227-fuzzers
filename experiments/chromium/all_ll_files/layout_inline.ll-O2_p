; ModuleID = '../../third_party/blink/renderer/core/layout/layout_inline.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_inline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2154 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2312 }
%class.scoped_refptr.2312 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2313", %"class.WTF::Vector.630", %"class.WTF::Vector.2315", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2313" = type { %"class.base::RefCounted.2314" }
%"class.base::RefCounted.2314" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2315" = type { %"class.WTF::VectorBuffer.2316" }
%"class.WTF::VectorBuffer.2316" = type { %"class.WTF::VectorBufferBase.2317" }
%"class.WTF::VectorBufferBase.2317" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2318 }
%union.anon.2318 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2303" }
%"class.blink::Member.2303" = type { %"class.blink::MemberBase.2304" }
%"class.blink::MemberBase.2304" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2305" }
%"class.blink::Member.2305" = type { %"class.blink::MemberBase.2306" }
%"class.blink::MemberBase.2306" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1987", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1989", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1994 }
%"class.WTF::RefCounted.1987" = type { %"class.base::RefCounted.1988" }
%"class.base::RefCounted.1988" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1989" = type { %"class.absl::optional_internal::optional_data.1990" }
%"class.absl::optional_internal::optional_data.1990" = type { %"class.absl::optional_internal::optional_data_base.1991" }
%"class.absl::optional_internal::optional_data_base.1991" = type { %"class.absl::optional_internal::optional_data_dtor_base.1992" }
%"class.absl::optional_internal::optional_data_dtor_base.1992" = type { i8, %union.anon.1993 }
%union.anon.1993 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1994 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2326 }
%class.scoped_refptr.2326 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2336" }
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2334" }
%"class.blink::MemberBase.2334" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2335" }
%"class.blink::MemberBase.2335" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2327", %"class.WTF::Vector.2327" }
%"class.WTF::Vector.2327" = type { %"class.WTF::VectorBuffer.2328" }
%"class.WTF::VectorBuffer.2328" = type { %"class.WTF::VectorBufferBase.2329" }
%"class.WTF::VectorBufferBase.2329" = type { %class.scoped_refptr.2326*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1708", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1928", %"class.std::__1::unique_ptr.1934", %"class.std::__1::unique_ptr.1940", %class.scoped_refptr.1704, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1946", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1995", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2142, %union.anon.2160, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1995" = type { %"class.base::RefCounted.1996" }
%"class.base::RefCounted.1996" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1997, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1997 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1998 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1998 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2032 }
%class.scoped_refptr.2032 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2033", [4 x i8], %"class.std::__1::unique_ptr.2035", i64, %"class.WTF::Vector.2039", %"class.WTF::Vector.2044", %"class.WTF::Vector.2050", %"class.WTF::Vector.2068", %class.scoped_refptr.1546, %"class.WTF::HashMap.2074", %"class.WTF::Vector.2079", %"class.WTF::Vector.2039", %"class.WTF::Vector.2084", %"class.WTF::HashMap.2089", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2033" = type { %"class.base::RefCountedThreadSafe.2034" }
%"class.base::RefCountedThreadSafe.2034" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2035" = type { %"class.std::__1::__compressed_pair.2036" }
%"class.std::__1::__compressed_pair.2036" = type { %"struct.std::__1::__compressed_pair_elem.2037" }
%"struct.std::__1::__compressed_pair_elem.2037" = type { i8* }
%"class.WTF::Vector.2044" = type { %"class.WTF::VectorBuffer.2045" }
%"class.WTF::VectorBuffer.2045" = type { %"class.WTF::VectorBufferBase.2046", [8 x i8] }
%"class.WTF::VectorBufferBase.2046" = type { %class.scoped_refptr.2047*, i32, i32 }
%class.scoped_refptr.2047 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2050" = type { %"class.WTF::VectorBuffer.2051" }
%"class.WTF::VectorBuffer.2051" = type { %"class.WTF::VectorBufferBase.2052" }
%"class.WTF::VectorBufferBase.2052" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2054", %"class.std::__1::unique_ptr.2060" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2053 }
%class.scoped_refptr.2053 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2054" = type { %"class.std::__1::__compressed_pair.2055" }
%"class.std::__1::__compressed_pair.2055" = type { %"struct.std::__1::__compressed_pair_elem.2056" }
%"struct.std::__1::__compressed_pair_elem.2056" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2060" = type { %"class.std::__1::__compressed_pair.2061" }
%"class.std::__1::__compressed_pair.2061" = type { %"struct.std::__1::__compressed_pair_elem.2062" }
%"struct.std::__1::__compressed_pair_elem.2062" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2068" = type { %"class.WTF::VectorBuffer.2069" }
%"class.WTF::VectorBuffer.2069" = type { %"class.WTF::VectorBufferBase.2070" }
%"class.WTF::VectorBufferBase.2070" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2071", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2071" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2074" = type { %"class.WTF::HashTable.2075" }
%"class.WTF::HashTable.2075" = type <{ %"struct.WTF::KeyValuePair.2078"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2078" = type opaque
%"class.WTF::Vector.2079" = type { %"class.WTF::VectorBuffer.2080" }
%"class.WTF::VectorBuffer.2080" = type { %"class.WTF::VectorBufferBase.2081" }
%"class.WTF::VectorBufferBase.2081" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.2039" = type { %"class.WTF::VectorBuffer.2040" }
%"class.WTF::VectorBuffer.2040" = type { %"class.WTF::VectorBufferBase.2041", [16 x i8] }
%"class.WTF::VectorBufferBase.2041" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2084" = type { %"class.WTF::VectorBuffer.2085" }
%"class.WTF::VectorBuffer.2085" = type { %"class.WTF::VectorBufferBase.2086" }
%"class.WTF::VectorBufferBase.2086" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.2089" = type { %"class.WTF::HashTable.2090" }
%"class.WTF::HashTable.2090" = type <{ %"struct.WTF::KeyValuePair.2093"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2093" = type { i8**, %"class.std::__1::unique_ptr.2338" }
%"class.std::__1::unique_ptr.2338" = type { %"class.std::__1::__compressed_pair.2339" }
%"class.std::__1::__compressed_pair.2339" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"struct.std::__1::__compressed_pair_elem.2340" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2094" }
%"class.std::__1::unique_ptr.2094" = type { %"class.std::__1::__compressed_pair.2095" }
%"class.std::__1::__compressed_pair.2095" = type { %"struct.std::__1::__compressed_pair_elem.2096" }
%"struct.std::__1::__compressed_pair_elem.2096" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2097, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2114" }
%class.scoped_refptr.2097 = type { %"class.base::RefCountedData.2098"* }
%"class.base::RefCountedData.2098" = type { %"class.base::RefCountedThreadSafe.2099", %"class.WTF::Vector.2100" }
%"class.base::RefCountedThreadSafe.2099" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2100" = type { %"class.WTF::VectorBuffer.2101" }
%"class.WTF::VectorBuffer.2101" = type { %"class.WTF::VectorBufferBase.2102" }
%"class.WTF::VectorBufferBase.2102" = type { %class.scoped_refptr.2103*, i32, i32 }
%class.scoped_refptr.2103 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2104", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2106" }
%"class.WTF::RefCounted.2104" = type { %"class.base::RefCounted.2105" }
%"class.base::RefCounted.2105" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2106" = type { %"class.std::__1::__compressed_pair.2107" }
%"class.std::__1::__compressed_pair.2107" = type { %"struct.std::__1::__compressed_pair_elem.2108" }
%"struct.std::__1::__compressed_pair_elem.2108" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2114" = type { %"class.std::__1::__compressed_pair.2115" }
%"class.std::__1::__compressed_pair.2115" = type { %"struct.std::__1::__compressed_pair_elem.2116" }
%"struct.std::__1::__compressed_pair_elem.2116" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2117", %"class.WTF::Vector.2130", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2117" = type { %"class.WTF::VectorBuffer.2118" }
%"class.WTF::VectorBuffer.2118" = type { %"class.WTF::VectorBufferBase.2119", [320 x i8] }
%"class.WTF::VectorBufferBase.2119" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2120", %"class.WTF::Vector.2120", %class.scoped_refptr.2125, i8, [7 x i8] }>
%"class.WTF::Vector.2120" = type { %"class.WTF::VectorBuffer.2121" }
%"class.WTF::VectorBuffer.2121" = type { %"class.WTF::VectorBufferBase.2122", [8 x i8] }
%"class.WTF::VectorBufferBase.2122" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2125 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2126", %"class.WTF::Vector.2100", %"class.WTF::Vector.2100" }
%"class.WTF::RefCounted.2126" = type { %"class.base::RefCounted.2127" }
%"class.base::RefCounted.2127" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132", [288 x i8] }
%"class.WTF::VectorBufferBase.2132" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2120", %"class.WTF::Vector.2120" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2133 }
%class.scoped_refptr.2133 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2142 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2143", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2145, %"class.std::__1::unique_ptr.2148" }
%"class.WTF::RefCounted.2143" = type { %"class.base::RefCounted.2144" }
%"class.base::RefCounted.2144" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2145 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2146", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2146" = type { %"class.base::RefCounted.2147" }
%"class.base::RefCounted.2147" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2148" = type { %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"class.WTF::Vector.2151"* }
%"class.WTF::Vector.2151" = type { %"class.WTF::VectorBuffer.2152" }
%"class.WTF::VectorBuffer.2152" = type { %"class.WTF::VectorBufferBase.2153" }
%"class.WTF::VectorBufferBase.2153" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%union.anon.2160 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1999", %class.scoped_refptr.2161, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2162, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2032, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2163", %"class.absl::optional.2179" }
%"class.absl::optional.1999" = type { %"class.absl::optional_internal::optional_data.2000" }
%"class.absl::optional_internal::optional_data.2000" = type { %"class.absl::optional_internal::optional_data_base.2001" }
%"class.absl::optional_internal::optional_data_base.2001" = type { %"class.absl::optional_internal::optional_data_dtor_base.2002" }
%"class.absl::optional_internal::optional_data_dtor_base.2002" = type { i8, %union.anon.2003 }
%union.anon.2003 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2161 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2184", [4 x i8], %union.anon.2186, %class.scoped_refptr.2161, i32, [4 x i8] }>
%"class.WTF::RefCounted.2184" = type { %"class.base::RefCounted.2185" }
%"class.base::RefCounted.2185" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2186 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2162 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2163" = type { %"class.std::__1::__compressed_pair.2164" }
%"class.std::__1::__compressed_pair.2164" = type { %"struct.std::__1::__compressed_pair_elem.2165" }
%"struct.std::__1::__compressed_pair_elem.2165" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2166", %"class.WTF::Vector.2171", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2166" = type { %"class.WTF::VectorBuffer.2167" }
%"class.WTF::VectorBuffer.2167" = type { %"class.WTF::VectorBufferBase.2168" }
%"class.WTF::VectorBufferBase.2168" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2171" = type { %"class.WTF::VectorBuffer.2172" }
%"class.WTF::VectorBuffer.2172" = type { %"class.WTF::VectorBufferBase.2173" }
%"class.WTF::VectorBufferBase.2173" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2179" = type { %"class.absl::optional_internal::optional_data.2180" }
%"class.absl::optional_internal::optional_data.2180" = type { %"class.absl::optional_internal::optional_data_base.2181" }
%"class.absl::optional_internal::optional_data_base.2181" = type { %"class.absl::optional_internal::optional_data_dtor_base.2182" }
%"class.absl::optional_internal::optional_data_dtor_base.2182" = type { i8, %union.anon.2183 }
%union.anon.2183 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1977", %"class.WTF::HashMap.1982", %"class.WTF::String" }
%"class.WTF::Vector.1977" = type { %"class.WTF::VectorBuffer.1978" }
%"class.WTF::VectorBuffer.1978" = type { %"class.WTF::VectorBufferBase.1979" }
%"class.WTF::VectorBufferBase.1979" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1982" = type { %"class.WTF::HashTable.1983" }
%"class.WTF::HashTable.1983" = type <{ %"struct.WTF::KeyValuePair.1986"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1986" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1975", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1975" = type { %"class.base::RefCountedThreadSafe.1976" }
%"class.base::RefCountedThreadSafe.1976" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1712", %"class.blink::Member.1717", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1719", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %class.scoped_refptr.1716*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1716 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1719" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1720", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1963", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1973", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1973" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1974", { i64, i64 } }
%"class.blink::WeakMember.1974" = type { %"class.blink::MemberBase.1758" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1814", %"class.WTF::Vector.1819", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1940" = type { %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1946" = type { %"class.blink::PersistentBase.1947" }
%"class.blink::PersistentBase.1947" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1950", i64 }
%"class.blink::HeapVector.1950" = type { %"class.WTF::Vector.1953" }
%"class.WTF::Vector.1953" = type { %"class.WTF::VectorBuffer.1954" }
%"class.WTF::VectorBuffer.1954" = type { %"class.WTF::VectorBufferBase.1955", [368 x i8] }
%"class.WTF::VectorBufferBase.1955" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1757", i8, %"class.blink::Member.1956", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::HeapLinkedHashSet.1958"* }
%"class.blink::HeapLinkedHashSet.1958" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2307" }
%"class.WTF::Vector.2307" = type { %"class.WTF::VectorBuffer.2308" }
%"class.WTF::VectorBuffer.2308" = type { %"class.WTF::VectorBufferBase.2309" }
%"class.WTF::VectorBufferBase.2309" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2004", %"class.absl::optional.2004", %"class.absl::optional.2004" }
%"class.absl::optional.2004" = type { %"class.absl::optional_internal::optional_data.2005" }
%"class.absl::optional_internal::optional_data.2005" = type { %"class.absl::optional_internal::optional_data_base.2006" }
%"class.absl::optional_internal::optional_data_base.2006" = type { %"class.absl::optional_internal::optional_data_dtor_base.2007" }
%"class.absl::optional_internal::optional_data_dtor_base.2007" = type { i8, %union.anon.2008 }
%union.anon.2008 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2322" }
%"class.WTF::VectorBuffer.2322" = type { %"class.WTF::VectorBufferBase.2323", [32 x i8] }
%"class.WTF::VectorBufferBase.2323" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2187", %"class.blink::Persistent.2193", %"class.std::__1::unique_ptr.2217", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2233" }
%"class.std::__1::unique_ptr.2187" = type { %"class.std::__1::__compressed_pair.2188" }
%"class.std::__1::__compressed_pair.2188" = type { %"struct.std::__1::__compressed_pair_elem.2189" }
%"struct.std::__1::__compressed_pair_elem.2189" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.2193" = type { %"class.blink::PersistentBase.2194" }
%"class.blink::PersistentBase.2194" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2199", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2212" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2197", %"class.blink::Member.1757", %"class.blink::Member.1757", i8, [7 x i8] }>
%"class.blink::Member.2197" = type { %"class.blink::MemberBase.2198" }
%"class.blink::MemberBase.2198" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1963", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.2199" = type { %"class.std::__1::__compressed_pair.2200" }
%"class.std::__1::__compressed_pair.2200" = type { %"struct.std::__1::__compressed_pair_elem.2201" }
%"struct.std::__1::__compressed_pair_elem.2201" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2202", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1819" }
%"class.WTF::HashMap.2202" = type { %"class.WTF::HashTable.2203" }
%"class.WTF::HashTable.2203" = type <{ %"struct.WTF::KeyValuePair.2206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2206" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2210" }
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2210" }
%"class.absl::optional.2212" = type { %"class.absl::optional_internal::optional_data.2213" }
%"class.absl::optional_internal::optional_data.2213" = type { %"class.absl::optional_internal::optional_data_base.2214" }
%"class.absl::optional_internal::optional_data_base.2214" = type { %"class.absl::optional_internal::optional_data_dtor_base.2215" }
%"class.absl::optional_internal::optional_data_dtor_base.2215" = type { i8, %union.anon.2216 }
%union.anon.2216 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2217" = type { %"class.std::__1::__compressed_pair.2218" }
%"class.std::__1::__compressed_pair.2218" = type { %"struct.std::__1::__compressed_pair_elem.2219" }
%"struct.std::__1::__compressed_pair_elem.2219" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2220", %"class.WTF::Vector.2220", %"class.WTF::HashMap.2225", %"class.WTF::Vector.2220", i8, [7 x i8] }>
%"class.WTF::HashMap.2225" = type { %"class.WTF::HashTable.2226" }
%"class.WTF::HashTable.2226" = type <{ %"struct.WTF::KeyValuePair.2229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2229" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2220" }
%"class.WTF::Vector.2220" = type { %"class.WTF::VectorBuffer.2221" }
%"class.WTF::VectorBuffer.2221" = type { %"class.WTF::VectorBufferBase.2222" }
%"class.WTF::VectorBufferBase.2222" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2236", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2242", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2248", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2242" = type { %"class.std::__1::__compressed_pair.2243" }
%"class.std::__1::__compressed_pair.2243" = type { %"struct.std::__1::__compressed_pair_elem.2244" }
%"struct.std::__1::__compressed_pair_elem.2244" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.2248" = type { %"class.blink::PersistentBase.2249" }
%"class.blink::PersistentBase.2249" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.2154 = type { %"class.blink::LineBoxList" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.2293" }
%"class.blink::InlineBoxList.2293" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2255, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2255 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2256, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2256 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2257", %class.scoped_refptr.2259, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2260] }
%"class.WTF::RefCounted.2257" = type { %"class.base::RefCounted.2258" }
%"class.base::RefCounted.2258" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2259 = type { %"class.blink::SimpleFontData"* }
%struct.anon.2260 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2269 }
%union.anon.2269 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.WTF::Vector.2270" = type { %"class.WTF::VectorBuffer.2271" }
%"class.WTF::VectorBuffer.2271" = type { %"class.WTF::VectorBufferBase.2272" }
%"class.WTF::VectorBufferBase.2272" = type { %"class.blink::LayoutInline"**, i32, i32 }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::InlinePainter" = type { %"class.blink::LayoutInline"* }
%"class.WTF::Vector.2276" = type { %"class.WTF::VectorBuffer.2277" }
%"class.WTF::VectorBuffer.2277" = type { %"class.WTF::VectorBufferBase.2278" }
%"class.WTF::VectorBufferBase.2278" = type { %"class.blink::FloatQuad"*, i32, i32 }
%class.anon.2414 = type { %"class.blink::LayoutInline"*, %"class.blink::LayoutBlock"*, %class.anon.2286* }
%class.anon.2286 = type { %class.anon*, i8*, %"class.WTF::Vector.2276"* }
%class.anon = type { i8*, i8*, %"class.absl::optional.2281"*, %"class.WTF::Vector.2276"*, i32, %"class.blink::LayoutInline"* }
%"class.absl::optional.2281" = type { %"class.absl::optional_internal::optional_data.2282" }
%"class.absl::optional_internal::optional_data.2282" = type { %"class.absl::optional_internal::optional_data_base.2283" }
%"class.absl::optional_internal::optional_data_base.2283" = type { %"class.absl::optional_internal::optional_data_dtor_base.2284" }
%"class.absl::optional_internal::optional_data_dtor_base.2284" = type { i8, %union.anon.2285 }
%union.anon.2285 = type { %"class.blink::TransformationMatrix" }
%"class.absl::optional_internal::optional_data_dtor_base.2290" = type { i8, %union.anon.2291 }
%union.anon.2291 = type { %"struct.blink::PhysicalOffset" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2292 }
%union.anon.2292 = type { %"class.blink::InlineTextBoxList" }
%"class.WTF::Vector.2294" = type { %"class.WTF::VectorBuffer.2295" }
%"class.WTF::VectorBuffer.2295" = type { %"class.WTF::VectorBufferBase.2296" }
%"class.WTF::VectorBufferBase.2296" = type { %"struct.blink::PhysicalRect"*, i32, i32 }
%"class.blink::NGBoxFragmentPainter" = type { %"class.blink::BoxPainterBase", %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::DisplayItemClient"*, %"class.blink::NGFragmentItems"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGInlineCursor"* }
%"class.blink::BoxPainterBase" = type { i32 (...)**, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::Node"* }
%class.anon.2415 = type { %"class.blink::LayoutInline"*, %"class.blink::LayoutBlock"*, %class.anon.2299* }
%class.anon.2299 = type { %"class.blink::HitTestLocation"*, %"class.blink::Region"*, i8* }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2376", %"class.blink::Member.2378", %"class.blink::Member.2380", %"class.blink::Member.2399", %"class.blink::Member.2401" }
%"class.blink::Member.2376" = type { %"class.blink::MemberBase.2377" }
%"class.blink::MemberBase.2377" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2380" = type { %"class.blink::MemberBase.2381" }
%"class.blink::MemberBase.2381" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2384", %"class.blink::HeapHashSet.2393" }
%"class.blink::HeapVector.2384" = type { %"class.WTF::Vector.2387" }
%"class.WTF::Vector.2387" = type { %"class.WTF::VectorBuffer.2388" }
%"class.WTF::VectorBuffer.2388" = type { %"class.WTF::VectorBufferBase.2389" }
%"class.WTF::VectorBufferBase.2389" = type { %"class.blink::Member.2390"*, i32, i32 }
%"class.blink::Member.2390" = type { %"class.blink::MemberBase.2391" }
%"class.blink::MemberBase.2391" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2393" = type { %"class.WTF::HashSet.2396" }
%"class.WTF::HashSet.2396" = type { %"class.WTF::HashTable.2397" }
%"class.WTF::HashTable.2397" = type <{ %"class.blink::Member.2390"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2401" = type { %"class.blink::MemberBase.2402" }
%"class.blink::MemberBase.2402" = type { %"class.blink::HeapHashSet.2403"* }
%"class.blink::HeapHashSet.2403" = type opaque
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%class.anon.2416 = type { %"class.blink::LayoutInline"*, %"class.blink::LayoutBlock"*, %class.anon.2300* }
%class.anon.2300 = type { %"struct.blink::PhysicalRect"* }
%class.anon.2417 = type { %"class.blink::LayoutInline"*, %"class.blink::LayoutBlock"*, %class.anon.2301* }
%class.anon.2301 = type { %"struct.blink::PhysicalRect"* }
%class.anon.2422 = type { %"class.blink::LayoutInline"*, %"class.blink::LayoutBlock"*, %class.anon.2302* }
%class.anon.2302 = type { %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"* }
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2236", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.blink::ObjectPaintInvalidator" = type { %"class.blink::LayoutObject"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.ui::Cursor" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%class.anon.2344 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2357" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2345", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2345" = type { %"class.std::__1::__vector_base.2346" }
%"class.std::__1::__vector_base.2346" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2352" }
%"class.std::__1::__compressed_pair.2352" = type { %"struct.std::__1::__compressed_pair_elem.2353" }
%"struct.std::__1::__compressed_pair_elem.2353" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2347", i64, i64 }
%"class.std::__1::unique_ptr.2347" = type { %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.2037" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK5blink12LayoutInline28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE = comdat any

$_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv = comdat any

$_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv = comdat any

$_ZNK5blink12LayoutInline7GetNameEv = comdat any

$_ZN5blink12LayoutInline15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutInline15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutInline14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutInline19VirtualContinuationEv = comdat any

$_ZNK5blink12LayoutObject18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZN5blink12LayoutInline12UpdateLayoutEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutInline36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink12LayoutInline11OffsetWidthEv = comdat any

$_ZNK5blink12LayoutInline12OffsetHeightEv = comdat any

$_ZNK5blink12LayoutInline17BorderBoundingBoxEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink20LayoutBoxModelObject33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33TextIsKnownToBeOnOpaqueBackgroundEv = comdat any

$_ZNK5blink20LayoutBoxModelObject35OverrideContainingBlockContentWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject36OverrideContainingBlockContentHeightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject38HasOverrideContainingBlockContentWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject39HasOverrideContainingBlockContentHeightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi = comdat any

$_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcEEN4base11trace_event16TraceEventHandleEcPKhS9_S9_yjyS9_OT_S9_OT0_ = comdat any

$_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF6VectorIPN5blink12LayoutInlineELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink12LayoutInlineEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink12LayoutInlineELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm = comdat any

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm = comdat any

$_ZN3WTF6VectorIN5blink20AnnotatedRegionValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20AnnotatedRegionValueEEEmm = comdat any

@_ZTVN5blink12LayoutInlineE = hidden unnamed_addr constant { [148 x i8*], [7 x i8*] } { [148 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInlineD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInlineD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, i8*, i32)* @_ZN5blink12LayoutInline12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::ImageResourceObserver"*)* @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInline15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutInline8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutInline28AddChildIgnoringContinuationEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInline33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, i32)* @_ZN5blink12LayoutInline31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink12LayoutInline5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*)* @_ZN5blink20LayoutBoxModelObject20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInline12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutInline19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutInline19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutInline"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink12LayoutInline11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutInline"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutInline16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutInline26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutInline"*, i32)* @_ZNK5blink12LayoutInline42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2276"*, i32)* @_ZNK5blink20LayoutBoxModelObject13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutInline"*, i32)* @_ZNK5blink12LayoutInline20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutInline"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutInline38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutInline"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink12LayoutInline14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutInline18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink12LayoutInline15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink12LayoutObject15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, i8)* @_ZNK5blink12LayoutInline28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink20LayoutBoxModelObject15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink12LayoutInline14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInline36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, i1)* @_ZN5blink12LayoutInline43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInline15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink12LayoutInline27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*, %"class.blink::Element"*)* @_ZNK5blink12LayoutInline10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*, %"class.blink::Element"*)* @_ZNK5blink12LayoutInline9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)* @_ZNK5blink20LayoutBoxModelObject23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)* @_ZNK5blink20LayoutBoxModelObject24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInline15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*)* @_ZNK5blink12LayoutInline11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutInline20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*, i1, i32, i32)* @_ZNK5blink12LayoutInline10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutInline"*, i32, i1, i32, i32)* @_ZNK5blink12LayoutInline16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink20LayoutBoxModelObject33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.WTF::Vector.2276"*, i32)* @_ZNK5blink12LayoutInline20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*, %"class.WTF::Vector.2276"*)* @_ZNK5blink12LayoutInline17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (%"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInline19CreateInlineFlowBoxEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZThn8_N5blink12LayoutInlineD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutInline"*)* @_ZThn8_N5blink12LayoutInlineD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/core/layout/layout_inline.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"IsInLayoutNGInlineFormattingContext()\00", align 1
@_ZN5blink26layout_invalidation_reason12kStyleChangeE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason13kChildChangedE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE = external constant [0 x i8], align 1
@__const._ZN5blink12LayoutInline19HitTestCulledInlineERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetEPKNS_14NGInlineCursorE.adjusted_location = private unnamed_addr constant %"class.blink::HitTestLocation" <{ %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalRect" { %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } } }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatQuad" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 4
@.str.2 = private unnamed_addr constant [61 x i8] c"../../third_party/blink/renderer/core/layout/layout_inline.h\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"!IsInLayoutNGInlineFormattingContext()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.4 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.7 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZTVN5blink20NGBoxFragmentPainterE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN5blink13InlineFlowBoxE = external unnamed_addr constant { [39 x i8*] }, align 8
@.str.9 = private unnamed_addr constant [28 x i8] c"InvalidateDisplayItemClient\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"LayoutInline\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink12LayoutInlineEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutInline *]\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FloatQuad]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PhysicalRect]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20AnnotatedRegionValueEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AnnotatedRegionValue]\00", align 1

@_ZN5blink12LayoutInlineC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::LayoutInline"*, %"class.blink::Element"*), void (%"class.blink::LayoutInline"*, %"class.blink::Element"*)* @_ZN5blink12LayoutInlineC2EPNS_7ElementE
@_ZN5blink12LayoutInlineD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutInline"*), void (%"class.blink::LayoutInline"*)* @_ZN5blink12LayoutInlineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInlineC2EPNS_7ElementE(%"class.blink::LayoutInline"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"* %3, %"class.blink::ContainerNode"* %4) #13
  %5 = bitcast %"class.blink::LayoutInline"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = bitcast %"class.blink::LayoutObjectChildList"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  %10 = load i96, i96* %8, align 4
  %11 = or i96 %10, 17592186044416
  store i96 %11, i96* %8, align 4
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN5blink20LayoutBoxModelObjectD2Ev(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInlineD2Ev(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutInline"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObjectD2Ev(%"class.blink::LayoutBoxModelObject"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink12LayoutInlineD1Ev(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 -1, i32 2, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::InlineFlowBox"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = bitcast %"class.blink::InlineFlowBox"** %2 to %"class.blink::LayoutBoxModelObject"*
  tail call void @_ZN5blink20LayoutBoxModelObjectD2Ev(%"class.blink::LayoutBoxModelObject"* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInlineD0Ev(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutInline"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObjectD2Ev(%"class.blink::LayoutBoxModelObject"* %3) #13
  %4 = bitcast %"class.blink::LayoutInline"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink12LayoutInlineD0Ev(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 -1, i32 2, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::InlineFlowBox"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = bitcast %"class.blink::InlineFlowBox"** %2 to %"class.blink::LayoutBoxModelObject"*
  tail call void @_ZN5blink20LayoutBoxModelObjectD2Ev(%"class.blink::LayoutBoxModelObject"* %4) #13
  %5 = bitcast %"class.blink::InlineFlowBox"** %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutInline"* @_ZN5blink12LayoutInline15CreateAnonymousEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 120) #13
  %3 = bitcast i8* %2 to %"class.blink::LayoutInline"*
  %4 = bitcast i8* %2 to %"class.blink::LayoutBoxModelObject"*
  tail call void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"* %4, %"class.blink::ContainerNode"* null) #13
  %5 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 88
  %7 = getelementptr inbounds i8, i8* %2, i64 20
  %8 = bitcast i8* %7 to i96*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #13
  %9 = load i96, i96* %8, align 4
  %10 = or i96 %9, 17592186044416
  store i96 %10, i96* %8, align 4
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  %13 = bitcast i8* %12 to %"class.blink::Node"**
  store %"class.blink::Node"* %11, %"class.blink::Node"** %13, align 8
  ret %"class.blink::LayoutInline"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline15WillBeDestroyedEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1
  tail call void @_ZN5blink21LayoutObjectChildList23DestroyLeftoverChildrenEv(%"class.blink::LayoutObjectChildList"* %4) #13
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %6 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %5) #13
  %7 = icmp eq %"class.blink::LayoutBoxModelObject"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %9) #13
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %5, %"class.blink::LayoutBoxModelObject"* null) #13
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %10, %14
  %15 = phi %"class.blink::LayoutObject"* [ %17, %14 ], [ %3, %10 ]
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 7
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %14, label %21

21:                                               ; preds = %14, %10
  %22 = phi %"class.blink::Node"* [ %12, %10 ], [ %19, %14 ]
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 5, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 19
  br i1 %29, label %106, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 268435456
  %35 = icmp eq i96 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %40

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %40

40:                                               ; preds = %36, %38
  %41 = phi %"class.blink::LineBoxList"* [ %37, %36 ], [ %39, %38 ]
  %42 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %42, align 8
  %44 = icmp eq %"class.blink::InlineFlowBox"* %43, null
  br i1 %44, label %79, label %45

45:                                               ; preds = %40
  %46 = load i96, i96* %32, align 4
  %47 = and i96 %46, 268435456
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %53

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %53

53:                                               ; preds = %49, %51
  %54 = phi %"class.blink::LineBoxList"* [ %50, %49 ], [ %52, %51 ]
  %55 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %56, i64 0, i32 0, i32 3
  %58 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %57, align 8
  %59 = icmp eq %"class.blink::InlineFlowBox"* %58, null
  br i1 %59, label %106, label %60

60:                                               ; preds = %53
  %61 = load i96, i96* %32, align 4
  %62 = and i96 %61, 268435456
  %63 = icmp eq i96 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %68

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %68

68:                                               ; preds = %64, %66
  %69 = phi %"class.blink::LineBoxList"* [ %65, %64 ], [ %67, %66 ]
  %70 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %70, align 8
  %72 = icmp eq %"class.blink::InlineFlowBox"* %71, null
  br i1 %72, label %106, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"class.blink::InlineFlowBox"* [ %77, %73 ], [ %71, %68 ]
  %75 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %74, i64 0, i32 0
  tail call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* %75, i32 0) #13
  %76 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %74, i64 0, i32 5
  %77 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %76, align 8
  %78 = icmp eq %"class.blink::InlineFlowBox"* %77, null
  br i1 %78, label %106, label %73

79:                                               ; preds = %40
  %80 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 7
  %81 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %80, align 8
  %82 = icmp eq %"class.blink::LayoutObject"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.blink::LayoutObject"* %81 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)***
  %85 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %85, i64 65
  %87 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %86, align 8
  tail call void %87(%"class.blink::LayoutObject"* nonnull %81, %"class.blink::LayoutObject"* %3, i32 1) #13
  br label %88

88:                                               ; preds = %79, %83
  %89 = load i96, i96* %32, align 4
  %90 = and i96 %89, 268435456
  %91 = icmp eq i96 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2
  %94 = bitcast %union.anon.2154* %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %92
  tail call void @_ZN5blink15NGFragmentItems27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %3) #13
  %98 = load i96, i96* %32, align 4
  %99 = and i96 %98, 268435456
  %100 = icmp eq i96 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %103, %"class.blink::LayoutObject"* dereferenceable(88) %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %105

105:                                              ; preds = %97, %101
  store i32 0, i32* %94, align 8
  br label %106

106:                                              ; preds = %73, %21, %68, %88, %53, %92, %105
  %107 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %108 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %107 to i96*
  %109 = load i96, i96* %108, align 4
  %110 = and i96 %109, 268435456
  %111 = icmp eq i96 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"* %113) #13
  br label %114

114:                                              ; preds = %106, %112
  call void @_ZN5blink20LayoutBoxModelObject15WillBeDestroyedEv(%"class.blink::LayoutBoxModelObject"* %5) #13
  ret void
}

declare void @_ZN5blink21LayoutObjectChildList23DestroyLeftoverChildrenEv(%"class.blink::LayoutObjectChildList"*) local_unnamed_addr #1

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutInline28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutInline"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2
  %9 = bitcast %union.anon.2154* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink15NGFragmentItems27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #13
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, %"class.blink::LayoutObject"* dereferenceable(88) %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2
  %15 = bitcast %union.anon.2154* %14 to i32*
  store i32 0, i32* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline15DeleteLineBoxesEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"* %8) #13
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject15WillBeDestroyedEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutInline"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 156, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #13
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, %"class.blink::LayoutObject"* dereferenceable(88) %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  br label %14

14:                                               ; preds = %2, %9
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2
  %16 = bitcast %union.anon.2154* %15 to i32*
  store i32 %1, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12LayoutInline18HasInlineFragmentsEv(%"class.blink::LayoutInline"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2
  %9 = bitcast %union.anon.2154* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %13, align 8
  %15 = icmp ne %"class.blink::InlineFlowBox"* %14, null
  br label %16

16:                                               ; preds = %12, %7
  %17 = phi i1 [ %11, %7 ], [ %15, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutInline"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2
  %10 = bitcast %union.anon.2154* %9 to i32*
  store i32 0, i32* %10, align 8
  br label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"* %12) #13
  br label %13

13:                                               ; preds = %11, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutInline"* @_ZNK5blink12LayoutInline25InlineElementContinuationEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #13
  %4 = icmp eq %"class.blink::LayoutBoxModelObject"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 134217728
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %5, %1
  %12 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutInline"*
  br label %16

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBlockFlow"*
  %15 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* nonnull %14) #13
  br label %16

16:                                               ; preds = %13, %11
  %17 = phi %"class.blink::LayoutInline"* [ %12, %11 ], [ %15, %13 ]
  ret %"class.blink::LayoutInline"* %17
}

declare %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline15UpdateFromStyleEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject15UpdateFromStyleEv(%"class.blink::LayoutBoxModelObject"* %2) #13
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, -51673825281
  %7 = or i96 %6, 134217728
  store i96 %7, i96* %4, align 4
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject15UpdateFromStyleEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutInline"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %5, i32 %1, %"class.blink::ComputedStyle"* %2) #13
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %5) #13
  %9 = icmp eq %"class.blink::LayoutBoxModelObject"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %8, i64 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 134217728
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %10, %3
  %17 = bitcast %"class.blink::LayoutBoxModelObject"* %8 to %"class.blink::LayoutInline"*
  br label %21

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::LayoutBoxModelObject"* %8 to %"class.blink::LayoutBlockFlow"*
  %20 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* nonnull %19) #13
  br label %21

21:                                               ; preds = %16, %18
  %22 = phi %"class.blink::LayoutInline"* [ %17, %16 ], [ %20, %18 ]
  %23 = icmp eq %"class.blink::LayoutInline"* %22, null
  br i1 %23, label %377, label %24

24:                                               ; preds = %21
  %25 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = lshr i160 %29, 80
  %31 = trunc i160 %30 to i32
  %32 = and i32 %31, 7
  %33 = icmp eq i32 %32, 4
  %34 = and i160 %29, 128849018880
  %35 = icmp eq i160 %34, 42949672960
  %36 = and i1 %35, %33
  %37 = select i1 %36, i32 3, i32 %32
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = lshr i160 %40, 80
  %42 = trunc i160 %41 to i32
  %43 = and i32 %42, 7
  %44 = icmp eq i32 %43, 4
  %45 = and i160 %40, 128849018880
  %46 = icmp eq i160 %45, 42949672960
  %47 = and i1 %46, %44
  %48 = select i1 %47, i32 3, i32 %43
  %49 = icmp eq i32 %37, %48
  br i1 %49, label %55, label %50

50:                                               ; preds = %26
  switch i32 %37, label %51 [
    i32 4, label %55
    i32 2, label %55
  ]

51:                                               ; preds = %50
  %52 = icmp eq i32 %48, 2
  %53 = icmp eq i32 %48, 4
  %54 = or i1 %52, %53
  br label %55

55:                                               ; preds = %50, %50, %26, %24, %51
  %56 = phi i1 [ false, %26 ], [ false, %24 ], [ true, %50 ], [ %54, %51 ], [ true, %50 ]
  %57 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %58 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %57, i64 0, i32 0, i32 0, i32 0, i32 4
  %60 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %59 to i96*
  %61 = load i96, i96* %60, align 4
  %62 = and i96 %61, 16777216
  %63 = icmp eq i96 %62, 0
  br i1 %63, label %95, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %57, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = lshr i160 %69, 32
  %71 = trunc i160 %70 to i32
  %72 = and i32 %71, 31
  switch i32 %72, label %95 [
    i32 1, label %73
    i32 14, label %73
  ]

73:                                               ; preds = %64, %64
  %74 = and i160 %69, 2113929216
  %75 = icmp eq i160 %74, 0
  br i1 %75, label %76, label %95

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::LayoutBlock"* %57 to i1 (%"class.blink::LayoutObject"*)***
  %78 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, i64 23
  %80 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::LayoutObject"* %58) #13
  br i1 %81, label %82, label %95

82:                                               ; preds = %76
  %83 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %77, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %83, i64 25
  %85 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* %58) #13
  br i1 %86, label %95, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.blink::LayoutBlock"* %57 to i1 (%"class.blink::LayoutObject"*, i32)***
  %89 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %88, align 8
  %90 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, i64 92
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.blink::LayoutObject"* %58, i32 20) #13
  br i1 %92, label %95, label %93

93:                                               ; preds = %87
  %94 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %58, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  br label %95

95:                                               ; preds = %93, %82, %76, %73, %55, %64, %87
  %96 = phi %"class.blink::LayoutBlock"* [ %94, %93 ], [ %57, %87 ], [ %57, %82 ], [ %57, %76 ], [ %57, %73 ], [ %57, %55 ], [ %57, %64 ]
  %97 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %96, i64 0, i32 0, i32 0, i32 0
  br label %99

98:                                               ; preds = %186
  br i1 %190, label %377, label %191

99:                                               ; preds = %95, %186
  %100 = phi i1 [ true, %95 ], [ %190, %186 ]
  %101 = phi %"class.blink::LayoutInline"* [ %22, %95 ], [ %187, %186 ]
  %102 = phi i8 [ 0, %95 ], [ %164, %186 ]
  %103 = phi %"class.blink::LayoutInline"* [ %0, %95 ], [ %101, %186 ]
  %104 = and i1 %56, %100
  br i1 %104, label %105, label %163

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %103, i64 0, i32 0, i32 0
  %107 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* %106, %"class.blink::LayoutObject"* %97) #13
  %108 = icmp eq %"class.blink::LayoutObject"* %107, null
  %109 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %101, i64 0, i32 0, i32 0
  %110 = icmp eq %"class.blink::LayoutObject"* %107, %109
  %111 = or i1 %108, %110
  br i1 %111, label %163, label %112

112:                                              ; preds = %105, %158
  %113 = phi %"class.blink::LayoutObject"* [ %159, %158 ], [ %107, %105 ]
  %114 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 4
  %115 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %114 to i96*
  %116 = load i96, i96* %115, align 4
  %117 = and i96 %116, 16777216
  %118 = icmp eq i96 %117, 0
  br i1 %118, label %148, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 5, i32 0
  %121 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %121, i64 0, i32 0, i32 9
  %123 = bitcast [20 x i8]* %122 to i160*
  %124 = load i160, i160* %123, align 8
  %125 = lshr i160 %124, 32
  %126 = trunc i160 %125 to i32
  %127 = and i32 %126, 31
  switch i32 %127, label %148 [
    i32 1, label %128
    i32 14, label %128
  ]

128:                                              ; preds = %119, %119
  %129 = and i160 %124, 2113929216
  %130 = icmp eq i160 %129, 0
  br i1 %130, label %131, label %148

131:                                              ; preds = %128
  %132 = bitcast %"class.blink::LayoutObject"* %113 to i1 (%"class.blink::LayoutObject"*)***
  %133 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %132, align 8
  %134 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %133, i64 23
  %135 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %134, align 8
  %136 = tail call zeroext i1 %135(%"class.blink::LayoutObject"* nonnull %113) #13
  br i1 %136, label %137, label %148

137:                                              ; preds = %131
  %138 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %132, align 8
  %139 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %138, i64 25
  %140 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %139, align 8
  %141 = tail call zeroext i1 %140(%"class.blink::LayoutObject"* nonnull %113) #13
  br i1 %141, label %148, label %142

142:                                              ; preds = %137
  %143 = bitcast %"class.blink::LayoutObject"* %113 to i1 (%"class.blink::LayoutObject"*, i32)***
  %144 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %144, i64 92
  %146 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, align 8
  %147 = tail call zeroext i1 %146(%"class.blink::LayoutObject"* nonnull %113, i32 20) #13
  br i1 %147, label %148, label %163

148:                                              ; preds = %142, %119, %112, %128, %131, %137
  %149 = bitcast %"class.blink::LayoutObject"* %113 to i1 (%"class.blink::LayoutObject"*)***
  %150 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %149, align 8
  %151 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %150, i64 26
  %152 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, align 8
  %153 = tail call zeroext i1 %152(%"class.blink::LayoutObject"* nonnull %113) #13
  br i1 %153, label %154, label %156

154:                                              ; preds = %148
  %155 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %113, %"class.blink::LayoutObject"* %97) #13
  br label %158

156:                                              ; preds = %148
  %157 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"* nonnull %113, %"class.blink::LayoutObject"* %97) #13
  br label %158

158:                                              ; preds = %156, %154
  %159 = phi %"class.blink::LayoutObject"* [ %155, %154 ], [ %157, %156 ]
  %160 = icmp eq %"class.blink::LayoutObject"* %159, null
  %161 = icmp eq %"class.blink::LayoutObject"* %159, %109
  %162 = or i1 %160, %161
  br i1 %162, label %163, label %112

163:                                              ; preds = %158, %142, %105, %99
  %164 = phi i8 [ %102, %99 ], [ %102, %105 ], [ %102, %158 ], [ 1, %142 ]
  %165 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %101, i64 0, i32 0
  %166 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %165) #13
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %165, %"class.blink::LayoutBoxModelObject"* null) #13
  %167 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %101, i64 0, i32 0, i32 0
  %168 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %169 = icmp eq %"class.blink::ComputedStyle"* %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %171) #13
  br label %172

172:                                              ; preds = %163, %170
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %167, %"class.blink::ComputedStyle"* %168, i32 1) #13
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %165, %"class.blink::LayoutBoxModelObject"* %166) #13
  %173 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %165) #13
  %174 = icmp eq %"class.blink::LayoutBoxModelObject"* %173, null
  br i1 %174, label %181, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %173, i64 0, i32 0, i32 4
  %177 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %176 to i96*
  %178 = load i96, i96* %177, align 4
  %179 = and i96 %178, 134217728
  %180 = icmp eq i96 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %175, %172
  %182 = bitcast %"class.blink::LayoutBoxModelObject"* %173 to %"class.blink::LayoutInline"*
  br label %186

183:                                              ; preds = %175
  %184 = bitcast %"class.blink::LayoutBoxModelObject"* %173 to %"class.blink::LayoutBlockFlow"*
  %185 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* nonnull %184) #13
  br label %186

186:                                              ; preds = %181, %183
  %187 = phi %"class.blink::LayoutInline"* [ %182, %181 ], [ %185, %183 ]
  %188 = icmp eq %"class.blink::LayoutInline"* %187, null
  %189 = and i8 %164, 1
  %190 = icmp eq i8 %189, 0
  br i1 %188, label %98, label %99

191:                                              ; preds = %98
  %192 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %193 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %192, i64 0, i32 0, i32 0, i32 0, i32 9
  %194 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %193, align 8
  %195 = icmp eq %"class.blink::LayoutObject"* %194, null
  br i1 %195, label %377, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %194, i64 0, i32 4
  %198 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %197 to i96*
  %199 = load i96, i96* %198, align 4
  %200 = and i96 %199, 16777216
  %201 = icmp eq i96 %200, 0
  br i1 %201, label %377, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %194, i64 0, i32 5, i32 0
  %204 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %204, i64 0, i32 0, i32 9
  %206 = bitcast [20 x i8]* %205 to i160*
  %207 = load i160, i160* %206, align 8
  %208 = lshr i160 %207, 32
  %209 = trunc i160 %208 to i32
  %210 = and i32 %209, 31
  switch i32 %210, label %377 [
    i32 1, label %211
    i32 14, label %211
  ]

211:                                              ; preds = %202, %202
  %212 = and i160 %207, 2113929216
  %213 = icmp eq i160 %212, 0
  br i1 %213, label %214, label %377

214:                                              ; preds = %211
  %215 = bitcast %"class.blink::LayoutObject"* %194 to i1 (%"class.blink::LayoutObject"*)***
  %216 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %215, align 8
  %217 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %216, i64 23
  %218 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %217, align 8
  %219 = tail call zeroext i1 %218(%"class.blink::LayoutObject"* nonnull %194) #13
  br i1 %219, label %220, label %377

220:                                              ; preds = %214
  %221 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %215, align 8
  %222 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %221, i64 25
  %223 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %222, align 8
  %224 = tail call zeroext i1 %223(%"class.blink::LayoutObject"* nonnull %194) #13
  br i1 %224, label %377, label %225

225:                                              ; preds = %220
  %226 = bitcast %"class.blink::LayoutObject"* %194 to i1 (%"class.blink::LayoutObject"*, i32)***
  %227 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %226, align 8
  %228 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %227, i64 92
  %229 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %228, align 8
  %230 = tail call zeroext i1 %229(%"class.blink::LayoutObject"* nonnull %194, i32 20) #13
  br i1 %230, label %377, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %101, i64 0, i32 0, i32 0
  %233 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %232, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %234 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %233, i64 0, i32 0, i32 0, i32 0
  %235 = icmp eq %"class.blink::LayoutObject"* %194, %234
  br i1 %235, label %377, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %238 = bitcast [20 x i8]* %237 to i160*
  %239 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %240 = bitcast [20 x i8]* %239 to i160*
  br label %241

241:                                              ; preds = %371, %236
  %242 = phi %"class.blink::LayoutObject"* [ %194, %236 ], [ %373, %371 ]
  %243 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %242, i64 0, i32 4
  %244 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %243 to i96*
  %245 = load i96, i96* %244, align 4
  %246 = and i96 %245, 16777216
  %247 = icmp eq i96 %246, 0
  br i1 %247, label %377, label %248

248:                                              ; preds = %241
  %249 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %242, i64 0, i32 5, i32 0
  %250 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %250, i64 0, i32 0, i32 9
  %252 = bitcast [20 x i8]* %251 to i160*
  %253 = load i160, i160* %252, align 8
  %254 = lshr i160 %253, 32
  %255 = trunc i160 %254 to i32
  %256 = and i32 %255, 31
  switch i32 %256, label %377 [
    i32 1, label %257
    i32 14, label %257
  ]

257:                                              ; preds = %248, %248
  %258 = and i160 %253, 2113929216
  %259 = icmp eq i160 %258, 0
  br i1 %259, label %260, label %377

260:                                              ; preds = %257
  %261 = bitcast %"class.blink::LayoutObject"* %242 to i1 (%"class.blink::LayoutObject"*)***
  %262 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %261, align 8
  %263 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %262, i64 23
  %264 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %263, align 8
  %265 = tail call zeroext i1 %264(%"class.blink::LayoutObject"* nonnull %242) #13
  br i1 %265, label %266, label %377

266:                                              ; preds = %260
  %267 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %261, align 8
  %268 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %267, i64 25
  %269 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %268, align 8
  %270 = tail call zeroext i1 %269(%"class.blink::LayoutObject"* nonnull %242) #13
  br i1 %270, label %377, label %271

271:                                              ; preds = %266
  %272 = bitcast %"class.blink::LayoutObject"* %242 to i1 (%"class.blink::LayoutObject"*, i32)***
  %273 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %272, align 8
  %274 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %273, i64 92
  %275 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %274, align 8
  %276 = tail call zeroext i1 %275(%"class.blink::LayoutObject"* nonnull %242, i32 20) #13
  br i1 %276, label %377, label %277

277:                                              ; preds = %271
  %278 = bitcast %"class.blink::LayoutObject"* %242 to %"class.blink::LayoutBlockFlow"*
  %279 = bitcast %"class.blink::LayoutObject"* %242 to %"class.blink::LayoutBoxModelObject"*
  %280 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %279) #13
  %281 = icmp eq %"class.blink::LayoutBoxModelObject"* %280, null
  br i1 %281, label %371, label %282

282:                                              ; preds = %277
  %283 = load i96, i96* %244, align 4
  %284 = and i96 %283, 16777216
  %285 = icmp eq i96 %284, 0
  br i1 %285, label %371, label %286

286:                                              ; preds = %282
  %287 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %249, align 8
  %288 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %287, i64 0, i32 0, i32 9
  %289 = bitcast [20 x i8]* %288 to i160*
  %290 = load i160, i160* %289, align 8
  %291 = lshr i160 %290, 32
  %292 = trunc i160 %291 to i32
  %293 = and i32 %292, 31
  switch i32 %293, label %371 [
    i32 1, label %294
    i32 14, label %294
  ]

294:                                              ; preds = %286, %286
  %295 = and i160 %290, 2113929216
  %296 = icmp eq i160 %295, 0
  br i1 %296, label %297, label %371

297:                                              ; preds = %294
  %298 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %261, align 8
  %299 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %298, i64 23
  %300 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %299, align 8
  %301 = tail call zeroext i1 %300(%"class.blink::LayoutObject"* nonnull %242) #13
  br i1 %301, label %302, label %371

302:                                              ; preds = %297
  %303 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %261, align 8
  %304 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %303, i64 25
  %305 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %304, align 8
  %306 = tail call zeroext i1 %305(%"class.blink::LayoutObject"* nonnull %242) #13
  br i1 %306, label %371, label %307

307:                                              ; preds = %302
  %308 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %272, align 8
  %309 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %308, i64 92
  %310 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %309, align 8
  %311 = tail call zeroext i1 %310(%"class.blink::LayoutObject"* nonnull %242, i32 20) #13
  br i1 %311, label %371, label %312

312:                                              ; preds = %307
  %313 = load i160, i160* %238, align 8
  %314 = lshr i160 %313, 80
  %315 = trunc i160 %314 to i32
  %316 = and i32 %315, 7
  %317 = icmp eq i32 %316, 4
  %318 = and i160 %313, 128849018880
  %319 = icmp eq i160 %318, 42949672960
  %320 = and i1 %319, %317
  %321 = select i1 %320, i32 3, i32 %316
  switch i32 %321, label %347 [
    i32 4, label %322
    i32 2, label %322
  ]

322:                                              ; preds = %312, %312
  %323 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* %278) #13
  %324 = icmp eq %"class.blink::LayoutInline"* %323, null
  br i1 %324, label %347, label %325

325:                                              ; preds = %322
  %326 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %323, i64 0, i32 0, i32 0
  br label %327

327:                                              ; preds = %343, %325
  %328 = phi %"class.blink::LayoutObject"* [ %345, %343 ], [ %326, %325 ]
  %329 = bitcast %"class.blink::LayoutObject"* %328 to i1 (%"class.blink::LayoutObject"*)***
  %330 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %329, align 8
  %331 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %330, i64 26
  %332 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %331, align 8
  %333 = tail call zeroext i1 %332(%"class.blink::LayoutObject"* nonnull %328) #13
  br i1 %333, label %334, label %347

334:                                              ; preds = %327
  %335 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %328, i64 0, i32 4
  %336 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %335 to i96*
  %337 = load i96, i96* %336, align 4
  %338 = lshr i96 %337, 75
  %339 = trunc i96 %338 to i32
  %340 = and i32 %339, 1
  %341 = or i32 %340, 2
  %342 = icmp eq i32 %341, 3
  br i1 %342, label %371, label %343

343:                                              ; preds = %334
  %344 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %328, i64 0, i32 7
  %345 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %344, align 8
  %346 = icmp eq %"class.blink::LayoutObject"* %345, null
  br i1 %346, label %347, label %327

347:                                              ; preds = %343, %327, %322, %312
  %348 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %249, align 8
  %349 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104) %348) #13
  %350 = load i160, i160* %240, align 8
  %351 = lshr i160 %350, 80
  %352 = trunc i160 %351 to i32
  %353 = and i32 %352, 7
  %354 = icmp eq i32 %353, 4
  %355 = and i160 %350, 128849018880
  %356 = icmp eq i160 %355, 42949672960
  %357 = and i1 %356, %354
  %358 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %349, i64 0, i32 0, i32 9
  %359 = bitcast [20 x i8]* %358 to i160*
  %360 = load i160, i160* %359, align 8
  %361 = zext i32 %353 to i160
  %362 = shl nuw nsw i160 %361, 80
  %363 = select i1 %357, i160 3626777458843887524118528, i160 %362
  %364 = and i160 %360, -8462480737302404222943233
  %365 = or i160 %363, %364
  store i160 %365, i160* %359, align 8
  %366 = icmp eq %"class.blink::ComputedStyle"* %349, null
  br i1 %366, label %367, label %368

367:                                              ; preds = %347
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* nonnull %242, %"class.blink::ComputedStyle"* null, i32 1) #13
  br label %371

368:                                              ; preds = %347
  %369 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %349, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %369) #13
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* nonnull %242, %"class.blink::ComputedStyle"* nonnull %349, i32 1) #13
  %370 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %349, i64 0, i32 1, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"* %370) #13
  br label %371

371:                                              ; preds = %334, %368, %367, %307, %302, %297, %294, %286, %282, %277
  %372 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %242, i64 0, i32 9
  %373 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %372, align 8
  %374 = icmp eq %"class.blink::LayoutObject"* %373, null
  %375 = icmp eq %"class.blink::LayoutObject"* %373, %234
  %376 = or i1 %374, %375
  br i1 %376, label %377, label %241

377:                                              ; preds = %371, %271, %266, %260, %257, %248, %241, %225, %202, %196, %211, %214, %220, %231, %98, %191, %21
  %378 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %379 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %378 to i96*
  %380 = load i96, i96* %379, align 4
  %381 = and i96 %380, 268435456
  %382 = icmp eq i96 %381, 0
  %383 = and i96 %380, 70369012613120
  br i1 %382, label %384, label %430

384:                                              ; preds = %377
  %385 = icmp eq i96 %383, 70368744177664
  br i1 %385, label %441, label %386

386:                                              ; preds = %384
  %387 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %5) #13
  br i1 %387, label %417, label %388

388:                                              ; preds = %386
  %389 = load i96, i96* %379, align 4
  %390 = and i96 %389, 2251799813685248
  %391 = icmp eq i96 %390, 0
  br i1 %391, label %392, label %417

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %394 = bitcast [20 x i8]* %393 to i160*
  %395 = load i160, i160* %394, align 8
  %396 = and i160 %395, 133804471191183738849214309635890169035882496
  %397 = icmp eq i160 %396, 0
  br i1 %397, label %398, label %417

398:                                              ; preds = %392
  %399 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %400 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %399, align 8
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %400, i64 0, i32 2, i32 0, i32 0
  %402 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %401, align 8
  %403 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %402, i64 0, i32 13
  %404 = bitcast [3 x i8]* %403 to i24*
  %405 = load i24, i24* %404, align 8
  %406 = and i24 %405, 1920
  %407 = icmp eq i24 %406, 0
  br i1 %407, label %423, label %408

408:                                              ; preds = %398
  %409 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %402, i64 0, i32 8, i32 0
  %410 = load i32, i32* %409, align 4
  %411 = sitofp i32 %410 to float
  %412 = fmul float %411, 1.562500e-02
  %413 = fcmp ogt float %412, 0.000000e+00
  br i1 %413, label %414, label %423

414:                                              ; preds = %408
  %415 = and i24 %405, 1792
  %416 = icmp ne i24 %415, 0
  br label %417

417:                                              ; preds = %392, %388, %414, %386
  %418 = phi i1 [ true, %392 ], [ true, %388 ], [ true, %386 ], [ %416, %414 ]
  %419 = icmp eq %"class.blink::ComputedStyle"* %2, null
  %420 = xor i1 %418, true
  %421 = or i1 %419, %420
  br i1 %421, label %423, label %422

422:                                              ; preds = %417
  tail call void @_ZN5blink12LayoutInline14DirtyLineBoxesEb(%"class.blink::LayoutInline"* %0, i1 zeroext false)
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kStyleChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %4, i8 zeroext 3) #13
  br label %423

423:                                              ; preds = %398, %408, %417, %422
  %424 = phi i1 [ %418, %417 ], [ %418, %422 ], [ false, %408 ], [ false, %398 ]
  %425 = zext i1 %424 to i96
  %426 = load i96, i96* %379, align 4
  %427 = shl nuw nsw i96 %425, 46
  %428 = and i96 %426, -70368744177665
  %429 = or i96 %428, %427
  store i96 %429, i96* %379, align 4
  br label %441

430:                                              ; preds = %377
  %431 = icmp eq i96 %383, 70369012613120
  br i1 %431, label %437, label %432

432:                                              ; preds = %430
  %433 = tail call zeroext i1 @_ZNK5blink12LayoutInline37ComputeInitialShouldCreateBoxFragmentEv(%"class.blink::LayoutInline"* %0) #13
  br i1 %433, label %434, label %437

434:                                              ; preds = %432
  %435 = load i96, i96* %379, align 4
  %436 = or i96 %435, 70368744177664
  store i96 %436, i96* %379, align 4
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kStyleChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %4, i8 zeroext 3) #13
  br label %437

437:                                              ; preds = %434, %432, %430
  %438 = and i32 %1, 8
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %441, label %440

440:                                              ; preds = %437
  tail call void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"* %4) #13
  br label %441

441:                                              ; preds = %437, %440, %384, %423
  tail call void @_ZN5blink12LayoutObject33PropagateStyleToAnonymousChildrenEv(%"class.blink::LayoutObject"* %4) #13
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject27NextInPreOrderAfterChildrenEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline14DirtyLineBoxesEb(%"class.blink::LayoutInline"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  br i1 %1, label %7, label %12

7:                                                ; preds = %2
  %8 = and i96 %6, 268435456
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %122

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"* %11) #13
  br label %122

12:                                               ; preds = %2
  %13 = and i96 %6, 70369012613120
  %14 = icmp eq i96 %13, 70368744177664
  br i1 %14, label %114, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %122, label %19

19:                                               ; preds = %15, %110
  %20 = phi %"class.blink::LayoutObject"* [ %112, %110 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 8388608
  %25 = icmp ne i96 %24, 0
  %26 = and i96 %23, 113336795588871485128704
  %27 = icmp eq i96 %26, 75557863725914323419136
  %28 = or i1 %27, %25
  br i1 %28, label %110, label %29

29:                                               ; preds = %19
  %30 = and i96 %23, 67108927
  %31 = icmp eq i96 %30, 67108864
  br i1 %31, label %32, label %47

32:                                               ; preds = %29
  %33 = and i96 %23, 268435456
  %34 = icmp eq i96 %33, 0
  br i1 %34, label %35, label %110

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 2, i32 1, i32 1
  %37 = bitcast i8* %36 to %"class.blink::InlineBox"**
  %38 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %37, align 8
  %39 = icmp eq %"class.blink::InlineBox"* %38, null
  br i1 %39, label %110, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %38) #13
  %42 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %41, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::RootInlineBox"* %41 to void (%"class.blink::InlineBox"*)***
  %44 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %44, i64 28
  %46 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %45, align 8
  tail call void %46(%"class.blink::InlineBox"* %42) #13
  br label %110

47:                                               ; preds = %29
  %48 = and i96 %23, 3
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %50, label %110

50:                                               ; preds = %47
  %51 = bitcast %"class.blink::LayoutObject"* %20 to i1 (%"class.blink::LayoutObject"*)***
  %52 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, i64 26
  %54 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* nonnull %20) #13
  %56 = load i96, i96* %22, align 4
  br i1 %55, label %57, label %82

57:                                               ; preds = %50
  %58 = and i96 %56, 268435456
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 1, i32 1, i32 1
  %64 = bitcast i8* %63 to %"class.blink::LineBoxList"*
  br label %65

65:                                               ; preds = %60, %62
  %66 = phi %"class.blink::LineBoxList"* [ %61, %60 ], [ %64, %62 ]
  %67 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %67, align 8
  %69 = icmp eq %"class.blink::InlineFlowBox"* %68, null
  br i1 %69, label %110, label %70

70:                                               ; preds = %65, %70
  %71 = phi %"class.blink::InlineFlowBox"* [ %80, %70 ], [ %68, %65 ]
  %72 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %71, i64 0, i32 0
  %73 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %72) #13
  %74 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 0, i32 0
  %75 = bitcast %"class.blink::RootInlineBox"* %73 to void (%"class.blink::InlineBox"*)***
  %76 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %76, i64 28
  %78 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %77, align 8
  tail call void %78(%"class.blink::InlineBox"* %74) #13
  %79 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %71, i64 0, i32 5
  %80 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %79, align 8
  %81 = icmp eq %"class.blink::InlineFlowBox"* %80, null
  br i1 %81, label %110, label %70

82:                                               ; preds = %50
  %83 = and i96 %56, 33554432
  %84 = icmp eq i96 %83, 0
  br i1 %84, label %110, label %85

85:                                               ; preds = %82
  %86 = and i96 %56, 268435456
  %87 = icmp eq i96 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 1, i32 6
  %92 = bitcast %"class.blink::UntracedMember"* %91 to %"class.blink::InlineTextBoxList"*
  br label %93

93:                                               ; preds = %88, %90
  %94 = phi %"class.blink::InlineTextBoxList"* [ %89, %88 ], [ %92, %90 ]
  %95 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %95, align 8
  %97 = icmp eq %"class.blink::InlineTextBox"* %96, null
  br i1 %97, label %110, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.blink::InlineTextBox"* [ %108, %98 ], [ %96, %93 ]
  %100 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %99, i64 0, i32 0
  %101 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %100) #13
  %102 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %101, i64 0, i32 0, i32 0
  %103 = bitcast %"class.blink::RootInlineBox"* %101 to void (%"class.blink::InlineBox"*)***
  %104 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %104, i64 28
  %106 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %105, align 8
  tail call void %106(%"class.blink::InlineBox"* %102) #13
  %107 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %99, i64 0, i32 2
  %108 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %107, align 8
  %109 = icmp eq %"class.blink::InlineTextBox"* %108, null
  br i1 %109, label %110, label %98

110:                                              ; preds = %98, %70, %93, %65, %82, %47, %32, %40, %35, %19
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 9
  %112 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %111, align 8
  %113 = icmp eq %"class.blink::LayoutObject"* %112, null
  br i1 %113, label %122, label %19

114:                                              ; preds = %12
  %115 = and i96 %6, 268435456
  %116 = icmp eq i96 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2, i64 0, i64 0), i32 469, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #13
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #13
  br label %120

120:                                              ; preds = %114, %117
  %121 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  call void @_ZN5blink11LineBoxList14DirtyLineBoxesEv(%"class.blink::LineBoxList"* %121) #13
  br label %122

122:                                              ; preds = %110, %15, %10, %7, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline29UpdateShouldCreateBoxFragmentEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = and i96 %5, 70369012613120
  %10 = icmp eq i96 %9, 70369012613120
  br i1 %10, label %24, label %19

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::LayoutInline"* %0 to void (%"class.blink::LayoutObject"*, i1)***
  %13 = load void (%"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutObject"*, i1)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutObject"*, i1)** %13, i64 97
  %15 = load void (%"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutObject"*, i1)** %14, align 8
  tail call void %15(%"class.blink::LayoutObject"* %2, i1 zeroext true) #13
  %16 = load i96, i96* %4, align 4
  %17 = and i96 %16, -70369012613121
  %18 = or i96 %17, 268435456
  store i96 %18, i96* %4, align 4
  br label %19

19:                                               ; preds = %8, %11
  %20 = tail call zeroext i1 @_ZNK5blink12LayoutInline37ComputeInitialShouldCreateBoxFragmentEv(%"class.blink::LayoutInline"* %0)
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = load i96, i96* %4, align 4
  %23 = or i96 %22, 70368744177664
  store i96 %23, i96* %4, align 4
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kStyleChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #13
  br label %24

24:                                               ; preds = %8, %21, %19
  ret void
}

declare void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject33PropagateStyleToAnonymousChildrenEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline27UpdateAlwaysCreateLineBoxesEb(%"class.blink::LayoutInline"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::Length", align 4
  %7 = alloca %"class.blink::Length", align 4
  %8 = alloca %"class.blink::Length", align 4
  %9 = alloca %"class.blink::Length", align 4
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 70369012613120
  %15 = icmp eq i96 %14, 70368744177664
  br i1 %15, label %303, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 7
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutObject"* %18 to i1 (%"class.blink::LayoutObject"*)***
  %24 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, i64 26
  %26 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* nonnull %18) #13
  %28 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutInline"*
  %29 = select i1 %27, %"class.blink::LayoutInline"* %28, %"class.blink::LayoutInline"* null
  br label %30

30:                                               ; preds = %16, %22
  %31 = phi %"class.blink::LayoutInline"* [ %29, %22 ], [ null, %16 ]
  %32 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %42

35:                                               ; preds = %30, %35
  %36 = phi %"class.blink::LayoutObject"* [ %38, %35 ], [ %10, %30 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 7
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 6, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %35, label %42

42:                                               ; preds = %35, %30
  %43 = phi %"class.blink::Node"* [ %33, %30 ], [ %40, %35 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 33
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 2
  %51 = icmp eq %"class.blink::LayoutInline"* %31, null
  br i1 %51, label %64, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %31, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 70369012613120
  %57 = icmp eq i96 %56, 70368744177664
  br i1 %57, label %298, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = and i160 %61, 276701161105643274240
  %63 = icmp eq i160 %62, 0
  br i1 %63, label %64, label %298

64:                                               ; preds = %42, %58
  %65 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = and i160 %69, 276701161105643274240
  %71 = icmp eq i160 %70, 0
  br i1 %71, label %72, label %298

72:                                               ; preds = %64
  %73 = tail call i32 @_ZNK5blink13ComputedStyle19GetTextEmphasisMarkEv(%"class.blink::ComputedStyle"* %66) #13
  %74 = icmp ne i32 %73, 0
  %75 = or i1 %74, %50
  br i1 %75, label %129, label %76

76:                                               ; preds = %72
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  %78 = tail call zeroext i1 @_ZNK5blink13ComputedStyle35HasIdenticalAscentDescentAndLineGapERKS0_(%"class.blink::ComputedStyle"* %77, %"class.blink::ComputedStyle"* dereferenceable(104) %20) #13
  br i1 %78, label %79, label %298

79:                                               ; preds = %76
  %80 = bitcast %"class.blink::Length"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #13
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %6, %"class.blink::ComputedStyle"* %20) #13
  %81 = bitcast %"class.blink::Length"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %7, %"class.blink::ComputedStyle"* %82) #13
  %83 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %84 = load i8, i8* %83, align 1
  %85 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %84, %86
  br i1 %87, label %88, label %118

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 1
  %90 = load i8, i8* %89, align 4, !range !2
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 1
  %92 = load i8, i8* %91, align 4, !range !2
  %93 = icmp eq i8 %90, %92
  br i1 %93, label %94, label %118

94:                                               ; preds = %88
  %95 = icmp eq i8 %84, 12
  br i1 %95, label %123, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  %98 = load i8, i8* %97, align 2, !range !2
  %99 = icmp eq i8 %98, 0
  %100 = bitcast %"class.blink::Length"* %6 to float*
  %101 = load float, float* %100, align 4
  %102 = bitcast float %101 to i32
  %103 = sitofp i32 %102 to float
  %104 = select i1 %99, float %103, float %101
  %105 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  %106 = load i8, i8* %105, align 2, !range !2
  %107 = icmp eq i8 %106, 0
  %108 = bitcast %"class.blink::Length"* %7 to float*
  %109 = load float, float* %108, align 4
  %110 = bitcast float %109 to i32
  %111 = sitofp i32 %110 to float
  %112 = select i1 %107, float %111, float %109
  %113 = fcmp oeq float %104, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %96
  %115 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* nonnull %6, %"class.blink::Length"* nonnull dereferenceable(8) %7) #13
  %116 = xor i1 %115, true
  %117 = load i8, i8* %85, align 1
  br label %118

118:                                              ; preds = %79, %88, %96, %114
  %119 = phi i8 [ %117, %114 ], [ %84, %96 ], [ %86, %79 ], [ %84, %88 ]
  %120 = phi i1 [ %116, %114 ], [ false, %96 ], [ true, %79 ], [ true, %88 ]
  %121 = icmp eq i8 %119, 8
  br i1 %121, label %122, label %123

122:                                              ; preds = %118
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #13
  br label %123

123:                                              ; preds = %94, %118, %122
  %124 = phi i1 [ %120, %118 ], [ %120, %122 ], [ false, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13
  %125 = load i8, i8* %83, align 1
  %126 = icmp eq i8 %125, 8
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #13
  br label %128

128:                                              ; preds = %123, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #13
  br label %129

129:                                              ; preds = %72, %128
  %130 = phi i1 [ %124, %128 ], [ %74, %72 ]
  %131 = or i1 %130, %50
  br i1 %131, label %297, label %132

132:                                              ; preds = %129
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %142

135:                                              ; preds = %132, %135
  %136 = phi %"class.blink::LayoutObject"* [ %138, %135 ], [ %10, %132 ]
  %137 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %136, i64 0, i32 7
  %138 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %138, i64 0, i32 6, i32 0, i32 0
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %139, align 8
  %141 = icmp eq %"class.blink::Node"* %140, null
  br i1 %141, label %135, label %142

142:                                              ; preds = %135, %132
  %143 = phi %"class.blink::Node"* [ %133, %132 ], [ %140, %135 ]
  %144 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %143, i64 0, i32 3, i32 0, i32 0
  %145 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %145, i64 0, i32 2, i32 0, i32 0
  %147 = load %"class.blink::Document"*, %"class.blink::Document"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %147, i64 0, i32 59, i32 0, i32 0
  %149 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %149, i64 0, i32 31, i32 0, i32 0
  %151 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %151, i64 0, i32 0, i32 11
  %153 = load i8, i8* %152, align 8
  %154 = and i8 %153, 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %142
  %157 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %158 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #13
  br label %159

159:                                              ; preds = %142, %156
  %160 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %151, i64 0, i32 0, i32 0, i32 0
  %161 = load i8, i8* %160, align 8, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %297, label %163

163:                                              ; preds = %159
  %164 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %165 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %164, i64 0, i32 6, i32 0, i32 0
  %166 = load %"class.blink::Node"*, %"class.blink::Node"** %165, align 8
  %167 = icmp eq %"class.blink::Node"* %166, null
  br i1 %167, label %168, label %175

168:                                              ; preds = %163, %168
  %169 = phi %"class.blink::LayoutObject"* [ %171, %168 ], [ %164, %163 ]
  %170 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %169, i64 0, i32 7
  %171 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %171, i64 0, i32 6, i32 0, i32 0
  %173 = load %"class.blink::Node"*, %"class.blink::Node"** %172, align 8
  %174 = icmp eq %"class.blink::Node"* %173, null
  br i1 %174, label %168, label %175

175:                                              ; preds = %168, %163
  %176 = phi %"class.blink::Node"* [ %166, %163 ], [ %173, %168 ]
  %177 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %176, i64 0, i32 3, i32 0, i32 0
  %178 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %178, i64 0, i32 2, i32 0, i32 0
  %180 = load %"class.blink::Document"*, %"class.blink::Document"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %180, i64 0, i32 59, i32 0, i32 0
  %182 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %182, i64 0, i32 31, i32 0, i32 0
  %184 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %184, i64 0, i32 0, i32 11
  %186 = load i8, i8* %185, align 8
  %187 = and i8 %186, 1
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %175
  %190 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %191 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #13
  br label %192

192:                                              ; preds = %189, %175
  %193 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %184, i64 0, i32 0, i32 0, i32 0
  %194 = load i8, i8* %193, align 8, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %192
  %197 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %164) #13
  %198 = icmp eq %"class.blink::ComputedStyle"* %197, null
  br i1 %198, label %199, label %202

199:                                              ; preds = %196, %192
  %200 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %164, i64 0, i32 5, i32 0
  %201 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %200, align 8
  br label %202

202:                                              ; preds = %196, %199
  %203 = phi %"class.blink::ComputedStyle"* [ %201, %199 ], [ %197, %196 ]
  %204 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %205 = icmp eq %"class.blink::Node"* %204, null
  br i1 %205, label %206, label %213

206:                                              ; preds = %202, %206
  %207 = phi %"class.blink::LayoutObject"* [ %209, %206 ], [ %10, %202 ]
  %208 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %207, i64 0, i32 7
  %209 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %209, i64 0, i32 6, i32 0, i32 0
  %211 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  %212 = icmp eq %"class.blink::Node"* %211, null
  br i1 %212, label %206, label %213

213:                                              ; preds = %206, %202
  %214 = phi %"class.blink::Node"* [ %204, %202 ], [ %211, %206 ]
  %215 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %214, i64 0, i32 3, i32 0, i32 0
  %216 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %216, i64 0, i32 2, i32 0, i32 0
  %218 = load %"class.blink::Document"*, %"class.blink::Document"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %218, i64 0, i32 59, i32 0, i32 0
  %220 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %220, i64 0, i32 31, i32 0, i32 0
  %222 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %222, i64 0, i32 0, i32 11
  %224 = load i8, i8* %223, align 8
  %225 = and i8 %224, 1
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %213
  %228 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %229 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #13
  br label %230

230:                                              ; preds = %227, %213
  %231 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %222, i64 0, i32 0, i32 0, i32 0
  %232 = load i8, i8* %231, align 8, !range !2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %237, label %234

234:                                              ; preds = %230
  %235 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %10) #13
  %236 = icmp eq %"class.blink::ComputedStyle"* %235, null
  br i1 %236, label %237, label %239

237:                                              ; preds = %234, %230
  %238 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  br label %239

239:                                              ; preds = %234, %237
  %240 = phi %"class.blink::ComputedStyle"* [ %238, %237 ], [ %235, %234 ]
  %241 = call zeroext i1 @_ZNK5blink13ComputedStyle35HasIdenticalAscentDescentAndLineGapERKS0_(%"class.blink::ComputedStyle"* %203, %"class.blink::ComputedStyle"* dereferenceable(104) %240) #13
  br i1 %241, label %242, label %298

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %240, i64 0, i32 0, i32 9
  %244 = bitcast [20 x i8]* %243 to i160*
  %245 = load i160, i160* %244, align 8
  %246 = and i160 %245, 276701161105643274240
  %247 = icmp eq i160 %246, 0
  br i1 %247, label %248, label %298

248:                                              ; preds = %242
  %249 = bitcast %"class.blink::Length"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #13
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %8, %"class.blink::ComputedStyle"* %203) #13
  %250 = bitcast %"class.blink::Length"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #13
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %9, %"class.blink::ComputedStyle"* %240) #13
  %251 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %252 = load i8, i8* %251, align 1
  %253 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %254 = load i8, i8* %253, align 1
  %255 = icmp eq i8 %252, %254
  br i1 %255, label %256, label %286

256:                                              ; preds = %248
  %257 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 1
  %258 = load i8, i8* %257, align 4, !range !2
  %259 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 1
  %260 = load i8, i8* %259, align 4, !range !2
  %261 = icmp eq i8 %258, %260
  br i1 %261, label %262, label %286

262:                                              ; preds = %256
  %263 = icmp eq i8 %252, 12
  br i1 %263, label %291, label %264

264:                                              ; preds = %262
  %265 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  %266 = load i8, i8* %265, align 2, !range !2
  %267 = icmp eq i8 %266, 0
  %268 = bitcast %"class.blink::Length"* %8 to float*
  %269 = load float, float* %268, align 4
  %270 = bitcast float %269 to i32
  %271 = sitofp i32 %270 to float
  %272 = select i1 %267, float %271, float %269
  %273 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 3
  %274 = load i8, i8* %273, align 2, !range !2
  %275 = icmp eq i8 %274, 0
  %276 = bitcast %"class.blink::Length"* %9 to float*
  %277 = load float, float* %276, align 4
  %278 = bitcast float %277 to i32
  %279 = sitofp i32 %278 to float
  %280 = select i1 %275, float %279, float %277
  %281 = fcmp oeq float %272, %280
  br i1 %281, label %286, label %282

282:                                              ; preds = %264
  %283 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* nonnull %8, %"class.blink::Length"* nonnull dereferenceable(8) %9) #13
  %284 = xor i1 %283, true
  %285 = load i8, i8* %253, align 1
  br label %286

286:                                              ; preds = %248, %256, %264, %282
  %287 = phi i8 [ %285, %282 ], [ %252, %264 ], [ %254, %248 ], [ %252, %256 ]
  %288 = phi i1 [ %284, %282 ], [ false, %264 ], [ true, %248 ], [ true, %256 ]
  %289 = icmp eq i8 %287, 8
  br i1 %289, label %290, label %291

290:                                              ; preds = %286
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #13
  br label %291

291:                                              ; preds = %262, %286, %290
  %292 = phi i1 [ %288, %286 ], [ %288, %290 ], [ false, %262 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #13
  %293 = load i8, i8* %251, align 1
  %294 = icmp eq i8 %293, 8
  br i1 %294, label %295, label %296

295:                                              ; preds = %291
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #13
  br label %296

296:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #13
  br i1 %292, label %298, label %303

297:                                              ; preds = %159, %129
  br i1 %130, label %298, label %303

298:                                              ; preds = %76, %64, %58, %52, %239, %242, %296, %297
  br i1 %1, label %300, label %299

299:                                              ; preds = %298
  call void @_ZN5blink12LayoutInline14DirtyLineBoxesEb(%"class.blink::LayoutInline"* %0, i1 zeroext false)
  br label %300

300:                                              ; preds = %299, %298
  %301 = load i96, i96* %12, align 4
  %302 = or i96 %301, 70368744177664
  store i96 %302, i96* %12, align 4
  br label %303

303:                                              ; preds = %296, %297, %300, %2
  ret void
}

declare i32 @_ZNK5blink13ComputedStyle19GetTextEmphasisMarkEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ComputedStyle35HasIdenticalAscentDescentAndLineGapERKS0_(%"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* sret, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12LayoutInline37ComputeInitialShouldCreateBoxFragmentERKNS_13ComputedStyleE(%"class.blink::LayoutInline"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %4 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #13
  %5 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %1, %"class.blink::CSSProperty"* dereferenceable(24) %4) #13
  %6 = icmp ult i32 %5, 16777216
  br i1 %6, label %7, label %127

7:                                                ; preds = %2
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %12, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %14, i64 0, i32 39
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 262144
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %127

19:                                               ; preds = %10, %7
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %21, i64 0, i32 2, i32 5
  %23 = bitcast [7 x i8]* %22 to i56*
  %24 = load i56, i56* %23, align 8
  %25 = and i56 %24, 281474976710656
  %26 = icmp eq i56 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %21, i64 0, i32 2
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %28) #13
  %29 = load i56, i56* %23, align 8
  br label %30

30:                                               ; preds = %19, %27
  %31 = phi i56 [ %24, %19 ], [ %29, %27 ]
  %32 = and i56 %31, 8796093022208
  %33 = icmp eq i56 %32, 0
  br i1 %33, label %34, label %127

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 7, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %36, i64 0, i32 27
  %38 = load i16, i16* %37, align 8
  %39 = and i16 %38, 224
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %36, i64 0, i32 24, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp ne i32 %43, 0
  %45 = and i16 %38, 240
  %46 = icmp ne i16 %45, 0
  %47 = and i1 %46, %44
  br i1 %47, label %127, label %48

48:                                               ; preds = %41, %34
  %49 = and i16 %38, 3584
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %36, i64 0, i32 25, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  %55 = and i16 %38, 3840
  %56 = icmp ne i16 %55, 0
  %57 = and i1 %56, %54
  br i1 %57, label %127, label %58

58:                                               ; preds = %51, %48
  %59 = icmp ult i16 %38, 8192
  br i1 %59, label %64, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %36, i64 0, i32 26, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %127

64:                                               ; preds = %60, %58
  %65 = and i16 %38, 14
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %36, i64 0, i32 23, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %69, 0
  %71 = and i16 %38, 15
  %72 = icmp ne i16 %71, 0
  %73 = and i1 %72, %70
  br i1 %73, label %127, label %74

74:                                               ; preds = %67, %64
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %36, i64 0, i32 2, i32 0, i32 0, i32 0
  %76 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %77, align 8
  %79 = icmp eq %"class.blink::StyleImage"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %76, i64 0, i32 1
  %82 = load i8, i8* %81, align 4
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %127

85:                                               ; preds = %80, %74
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %87, i64 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %89, i64 0, i32 39
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 31
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %127

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %87, i64 0, i32 5, i32 0
  %96 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %95, align 8
  %97 = icmp eq %"class.blink::ShadowList"* %96, null
  br i1 %97, label %98, label %127

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %100 = bitcast [20 x i8]* %99 to i160*
  %101 = load i160, i160* %100, align 8
  %102 = and i160 %101, 133804471191183738849214309635890169035882496
  %103 = icmp eq i160 %102, 0
  br i1 %103, label %104, label %127

104:                                              ; preds = %98
  %105 = tail call zeroext i1 @_ZNK5blink12LayoutObject26ComputeIsAbsoluteContainerEPKNS_13ComputedStyleE(%"class.blink::LayoutObject"* %3, %"class.blink::ComputedStyle"* %1) #13
  br i1 %105, label %127, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %108 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %107 to i96*
  %109 = load i96, i96* %108, align 4
  %110 = and i96 %109, 16777216
  %111 = icmp eq i96 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %114 = bitcast %"class.blink::Node"** %113 to %"class.blink::Element"**
  %115 = load %"class.blink::Element"*, %"class.blink::Element"** %114, align 8
  br label %116

116:                                              ; preds = %106, %112
  %117 = phi %"class.blink::Element"* [ %115, %112 ], [ null, %106 ]
  %118 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %117, i64 0, i32 0, i32 0
  %119 = tail call zeroext i1 @_ZN5blink14NGOutlineUtils17HasPaintedOutlineERKNS_13ComputedStyleEPKNS_4NodeE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, %"class.blink::Node"* %118) #13
  br i1 %119, label %127, label %120

120:                                              ; preds = %116
  %121 = load i160, i160* %100, align 8
  %122 = lshr i160 %121, 25
  %123 = trunc i160 %122 to i32
  %124 = and i32 %123, 63
  %125 = add nsw i32 %124, -2
  %126 = icmp ult i32 %125, 3
  br label %127

127:                                              ; preds = %98, %94, %80, %30, %67, %51, %41, %60, %10, %2, %85, %104, %116, %120
  %128 = phi i1 [ true, %98 ], [ true, %94 ], [ true, %116 ], [ true, %104 ], [ %126, %120 ], [ true, %85 ], [ true, %80 ], [ true, %30 ], [ true, %2 ], [ true, %10 ], [ true, %60 ], [ true, %41 ], [ true, %51 ], [ true, %67 ]
  ret i1 %128
}

declare zeroext i1 @_ZNK5blink12LayoutObject26ComputeIsAbsoluteContainerEPKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14NGOutlineUtils17HasPaintedOutlineERKNS_13ComputedStyleEPKNS_4NodeE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12LayoutInline37ComputeInitialShouldCreateBoxFragmentEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %6) #13
  br i1 %7, label %162, label %8

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZNK5blink12LayoutInline37ComputeInitialShouldCreateBoxFragmentERKNS_13ComputedStyleE(%"class.blink::LayoutInline"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %5)
  br i1 %9, label %162, label %10

10:                                               ; preds = %8
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %17, i64 0, i32 45
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %65, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 1207959552
  %27 = icmp eq i96 %26, 134217728
  br i1 %27, label %65, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.blink::LayoutInline"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, i64 92
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %3, i32 43) #13
  br i1 %33, label %65, label %34

34:                                               ; preds = %28
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %3, i32 46) #13
  br i1 %38, label %59, label %39

39:                                               ; preds = %34
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %3, i32 48) #13
  br i1 %43, label %59, label %44

44:                                               ; preds = %39
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %48, label %59, label %49

49:                                               ; preds = %44
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, i64 92
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LayoutObject"* %3, i32 49) #13
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %3, i32 50) #13
  br i1 %58, label %59, label %162

59:                                               ; preds = %34, %39, %44, %49, %54
  %60 = bitcast %"class.blink::LayoutInline"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %61 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %61, i64 24
  %63 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %3) #13
  br i1 %64, label %162, label %65

65:                                               ; preds = %22, %28, %10, %59
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %70, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %72, i64 0, i32 45
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %120, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  %80 = load i96, i96* %79, align 4
  %81 = and i96 %80, 1207959552
  %82 = icmp eq i96 %81, 134217728
  br i1 %82, label %120, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.blink::LayoutInline"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %85, i64 92
  %87 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::LayoutObject"* %3, i32 43) #13
  br i1 %88, label %120, label %89

89:                                               ; preds = %83
  %90 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %90, i64 92
  %92 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %91, align 8
  %93 = tail call zeroext i1 %92(%"class.blink::LayoutObject"* %3, i32 46) #13
  br i1 %93, label %114, label %94

94:                                               ; preds = %89
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, i64 92
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* %3, i32 48) #13
  br i1 %98, label %114, label %99

99:                                               ; preds = %94
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %101 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, i64 92
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %103, label %114, label %104

104:                                              ; preds = %99
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %106 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %105, i64 92
  %107 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.blink::LayoutObject"* %3, i32 49) #13
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %111 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, i64 92
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %111, align 8
  %113 = tail call zeroext i1 %112(%"class.blink::LayoutObject"* %3, i32 50) #13
  br i1 %113, label %114, label %162

114:                                              ; preds = %89, %94, %99, %104, %109
  %115 = bitcast %"class.blink::LayoutInline"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %116 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %116, i64 24
  %118 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.blink::LayoutObject"* %3) #13
  br i1 %119, label %162, label %120

120:                                              ; preds = %77, %83, %65, %114
  %121 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %122 = load %"class.blink::Node"*, %"class.blink::Node"** %121, align 8
  %123 = icmp eq %"class.blink::Node"* %122, null
  br i1 %123, label %124, label %131

124:                                              ; preds = %120, %124
  %125 = phi %"class.blink::LayoutObject"* [ %127, %124 ], [ %3, %120 ]
  %126 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %125, i64 0, i32 7
  %127 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %127, i64 0, i32 6, i32 0, i32 0
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %128, align 8
  %130 = icmp eq %"class.blink::Node"* %129, null
  br i1 %130, label %124, label %131

131:                                              ; preds = %124, %120
  %132 = phi %"class.blink::Node"* [ %122, %120 ], [ %129, %124 ]
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %136, i64 0, i32 59, i32 0, i32 0
  %138 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %138, i64 0, i32 31, i32 0, i32 0
  %140 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %140, i64 0, i32 0, i32 11
  %142 = load i8, i8* %141, align 8
  %143 = and i8 %142, 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %131
  %146 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #13
  br label %148

148:                                              ; preds = %145, %131
  %149 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %140, i64 0, i32 0, i32 0, i32 0
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %148
  %153 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %3) #13
  %154 = icmp eq %"class.blink::ComputedStyle"* %153, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %152, %148
  %156 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  br label %157

157:                                              ; preds = %152, %155
  %158 = phi %"class.blink::ComputedStyle"* [ %156, %155 ], [ %153, %152 ]
  %159 = icmp eq %"class.blink::ComputedStyle"* %5, %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = call zeroext i1 @_ZNK5blink12LayoutInline37ComputeInitialShouldCreateBoxFragmentERKNS_13ComputedStyleE(%"class.blink::LayoutInline"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %158)
  ret i1 %161

162:                                              ; preds = %157, %109, %54, %1, %8, %59, %114
  %163 = phi i1 [ true, %114 ], [ true, %59 ], [ true, %8 ], [ true, %1 ], [ true, %54 ], [ true, %109 ], [ false, %157 ]
  ret i1 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutInline"*, %"class.blink::InlineBox"* nocapture readnone, i32, %"class.blink::LayoutUnit"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::NGInlineCursor", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %10, label %128

10:                                               ; preds = %4
  %11 = icmp eq %"class.blink::LayoutUnit"* %3, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 0, i32* %13, align 4
  br label %14

14:                                               ; preds = %10, %12
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %16 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %17, i64 124
  %19 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %18, align 8
  %20 = tail call i32 %19(%"class.blink::LayoutBoxModelObject"* %15) #13
  %21 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %16, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %21, i64 125
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::LayoutBoxModelObject"* %15) #13
  %25 = icmp slt i32 %24, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %24) #13
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !3
  %31 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %16, align 8
  %32 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %31, i64 120
  %33 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %32, align 8
  %34 = tail call i32 %33(%"class.blink::LayoutBoxModelObject"* %15) #13
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %34) #13
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !3
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %16, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %41, i64 121
  %43 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %42, align 8
  %44 = tail call i32 %43(%"class.blink::LayoutBoxModelObject"* %15) #13
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %44) #13
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !3
  %51 = tail call { i64, i64 } @_ZNK5blink20LayoutBoxModelObject29LocalCaretRectForEmptyElementENS_10LayoutUnitES1_(%"class.blink::LayoutBoxModelObject"* %15, i32 %50, i32 0) #13
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %52, 32
  %55 = trunc i64 %54 to i32
  %56 = extractvalue { i64, i64 } %51, 1
  %57 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %58 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %57 to i96*
  %59 = load i96, i96* %58, align 4
  %60 = and i96 %59, 268435456
  %61 = icmp eq i96 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %14
  %63 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %66

64:                                               ; preds = %14
  %65 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi %"class.blink::LineBoxList"* [ %63, %62 ], [ %65, %64 ]
  %68 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %68, align 8
  %70 = icmp eq %"class.blink::InlineFlowBox"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %69, i64 0, i32 0, i32 5, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %69, i64 0, i32 0, i32 5, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %73, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %73) #13
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !3
  %82 = icmp slt i32 %75, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %75) #13
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !3
  br label %121

88:                                               ; preds = %66
  %89 = load i96, i96* %58, align 4
  %90 = and i96 %89, 268435456
  %91 = icmp eq i96 %90, 0
  br i1 %91, label %121, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.blink::NGInlineCursor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %93) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 112, i1 false)
  %94 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %5, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 81, i1 false) #13
  %95 = bitcast %"class.blink::LayoutBlockFlow"** %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %5, %"class.blink::LayoutObject"* dereferenceable(88) %6) #13
  %96 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %5, i64 0, i32 0, i32 0
  %97 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %96, align 8
  %98 = icmp eq %"class.blink::NGFragmentItem"* %97, null
  br i1 %98, label %118, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %97, i64 0, i32 2, i32 0
  %101 = bitcast %"struct.blink::PhysicalOffset"* %100 to i64*
  %102 = load i64, i64* %101, align 4
  %103 = lshr i64 %102, 32
  %104 = trunc i64 %103 to i32
  %105 = trunc i64 %102 to i32
  %106 = icmp slt i32 %105, 0
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %105) #13
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !3
  %112 = icmp slt i32 %104, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %104) #13
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !3
  br label %118

118:                                              ; preds = %92, %99
  %119 = phi i32 [ %111, %99 ], [ %53, %92 ]
  %120 = phi i32 [ %117, %99 ], [ %55, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %93) #13
  br label %121

121:                                              ; preds = %88, %118, %71
  %122 = phi i32 [ %119, %118 ], [ %53, %88 ], [ %81, %71 ]
  %123 = phi i32 [ %120, %118 ], [ %55, %88 ], [ %87, %71 ]
  %124 = zext i32 %123 to i64
  %125 = shl nuw i64 %124, 32
  %126 = zext i32 %122 to i64
  %127 = or i64 %125, %126
  br label %128

128:                                              ; preds = %4, %121
  %129 = phi i64 [ %56, %121 ], [ 0, %4 ]
  %130 = phi i64 [ %127, %121 ], [ 0, %4 ]
  %131 = insertvalue { i64, i64 } undef, i64 %130, 0
  %132 = insertvalue { i64, i64 } %131, i64 %129, 1
  ret { i64, i64 } %132
}

declare { i64, i64 } @_ZNK5blink20LayoutBoxModelObject29LocalCaretRectForEmptyElementENS_10LayoutUnitES1_(%"class.blink::LayoutBoxModelObject"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::LayoutObject"* %2, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %3, %32
  %6 = phi %"class.blink::LayoutObject"* [ %34, %32 ], [ %2, %3 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6, i32 46) #13
  br i1 %11, label %32, label %12

12:                                               ; preds = %5
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* nonnull %6, i32 48) #13
  br i1 %16, label %32, label %17

17:                                               ; preds = %12
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, i64 92
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::LayoutObject"* nonnull %6, i32 45) #13
  br i1 %21, label %32, label %22

22:                                               ; preds = %17
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* nonnull %6, i32 49) #13
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* nonnull %6, i32 50) #13
  br i1 %31, label %32, label %36

32:                                               ; preds = %5, %12, %17, %22, %27
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %36, label %5

36:                                               ; preds = %27, %32, %3
  %37 = phi %"class.blink::LayoutObject"* [ null, %3 ], [ null, %32 ], [ %6, %27 ]
  %38 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %39 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %38) #13
  %40 = icmp eq %"class.blink::LayoutBoxModelObject"* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  tail call void @_ZN5blink12LayoutInline22AddChildToContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %37)
  br label %43

42:                                               ; preds = %36
  tail call void @_ZN5blink12LayoutInline28AddChildIgnoringContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %37)
  br label %43

43:                                               ; preds = %42, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline22AddChildToContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::LayoutBoxModelObject"* @_ZN5blink12LayoutInline18ContinuationBeforeEPNS_12LayoutObjectE(%"class.blink::LayoutInline"* %0, %"class.blink::LayoutObject"* %2)
  %5 = icmp ne %"class.blink::LayoutObject"* %2, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %8 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutBoxModelObject"**
  %9 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %8, align 8
  br label %26

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 1207959552
  %15 = icmp eq i96 %14, 134217728
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %4) #13
  br label %22

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::LayoutBoxModelObject"* %4 to %"class.blink::LayoutBlockFlow"*
  %20 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* %19) #13
  %21 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %20, i64 0, i32 0
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi %"class.blink::LayoutBoxModelObject"* [ %21, %18 ], [ %17, %16 ]
  %24 = icmp eq %"class.blink::LayoutBoxModelObject"* %23, null
  %25 = select i1 %24, %"class.blink::LayoutBoxModelObject"* %4, %"class.blink::LayoutBoxModelObject"* %23
  br label %26

26:                                               ; preds = %22, %6
  %27 = phi %"class.blink::LayoutBoxModelObject"* [ %9, %6 ], [ %25, %22 ]
  %28 = icmp eq %"class.blink::LayoutBoxModelObject"* %4, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0
  %31 = bitcast %"class.blink::LayoutBoxModelObject"* %4 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %32 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %32, i64 17
  %34 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %33, align 8
  tail call void %34(%"class.blink::LayoutObject"* %30, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #13
  br label %117

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = and i96 %38, 134217728
  %40 = icmp eq i96 %39, 0
  br i1 %40, label %41, label %76

41:                                               ; preds = %35
  %42 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %1, i32 46) #13
  br i1 %46, label %76, label %47

47:                                               ; preds = %41
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %1, i32 48) #13
  br i1 %51, label %76, label %52

52:                                               ; preds = %47
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %1, i32 45) #13
  br i1 %56, label %76, label %57

57:                                               ; preds = %52
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %1, i32 49) #13
  br i1 %61, label %76, label %62

62:                                               ; preds = %57
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, i64 92
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* %1, i32 50) #13
  br i1 %66, label %76, label %67

67:                                               ; preds = %62
  %68 = load i96, i96* %37, align 4
  %69 = and i96 %68, 113336795588871485128704
  %70 = icmp eq i96 %69, 75557863725914323419136
  %71 = zext i1 %70 to i32
  %72 = lshr i96 %68, 23
  %73 = trunc i96 %72 to i32
  %74 = and i32 %73, 1
  %75 = or i32 %74, %71
  br label %76

76:                                               ; preds = %35, %41, %47, %52, %57, %67, %62
  %77 = phi i32 [ 1, %62 ], [ 1, %35 ], [ %75, %67 ], [ 1, %57 ], [ 1, %52 ], [ 1, %47 ], [ 1, %41 ]
  %78 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %27, i64 0, i32 0
  %79 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %27, i64 0, i32 0, i32 4
  %80 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %79 to i96*
  %81 = load i96, i96* %80, align 4
  %82 = lshr i96 %81, 27
  %83 = trunc i96 %82 to i32
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %77, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %76
  br i1 %5, label %87, label %98

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 4
  %89 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %88 to i96*
  %90 = load i96, i96* %89, align 4
  %91 = and i96 %90, 134217728
  %92 = icmp eq i96 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %87, %76
  %94 = bitcast %"class.blink::LayoutBoxModelObject"* %27 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %95 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %95, i64 17
  %97 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %96, align 8
  tail call void %97(%"class.blink::LayoutObject"* %78, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #13
  br label %117

98:                                               ; preds = %87, %86
  %99 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0, i32 4
  %100 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %99 to i96*
  %101 = load i96, i96* %100, align 4
  %102 = lshr i96 %101, 27
  %103 = trunc i96 %102 to i32
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %77, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %4, i64 0, i32 0
  %108 = bitcast %"class.blink::LayoutBoxModelObject"* %4 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %109 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %109, i64 17
  %111 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %110, align 8
  tail call void %111(%"class.blink::LayoutObject"* %107, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #13
  br label %117

112:                                              ; preds = %98
  %113 = bitcast %"class.blink::LayoutBoxModelObject"* %27 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %114 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %114, i64 17
  %116 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %115, align 8
  tail call void %116(%"class.blink::LayoutObject"* %78, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #13
  br label %117

117:                                              ; preds = %93, %106, %112, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline28AddChildIgnoringContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::LayoutObject"* %2, null
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 1
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 2113929216
  %16 = icmp eq i160 %15, 134217728
  br i1 %16, label %17, label %31

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 33554432
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, i64 92
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LayoutObject"* nonnull %7, i32 0) #13
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  br label %31

31:                                               ; preds = %17, %29, %23, %9, %5, %3
  %32 = phi %"class.blink::LayoutObject"* [ %2, %3 ], [ null, %5 ], [ null, %9 ], [ null, %23 ], [ %30, %29 ], [ %7, %17 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 134217728
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %38, label %75

38:                                               ; preds = %31
  %39 = and i96 %35, 8388608
  %40 = icmp ne i96 %39, 0
  %41 = and i96 %35, 113336795588871485128704
  %42 = icmp eq i96 %41, 75557863725914323419136
  %43 = or i1 %42, %40
  br i1 %43, label %75, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, i64 92
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::LayoutObject"* %1, i32 46) #13
  br i1 %49, label %75, label %50

50:                                               ; preds = %44
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %1, i32 48) #13
  br i1 %54, label %75, label %55

55:                                               ; preds = %50
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* %1, i32 45) #13
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, i64 92
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %1, i32 49) #13
  br i1 %64, label %75, label %65

65:                                               ; preds = %60
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %45, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, i64 92
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* %1, i32 50) #13
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink12LayoutInline40CreateAnonymousContainerForBlockChildrenEv(%"class.blink::LayoutInline"* %0)
  %72 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %73 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %72) #13
  %74 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %72, %"class.blink::LayoutBoxModelObject"* %74) #13
  tail call void @_ZN5blink12LayoutInline9SplitFlowEPNS_12LayoutObjectEPNS_15LayoutBlockFlowES2_PNS_20LayoutBoxModelObjectE(%"class.blink::LayoutInline"* %0, %"class.blink::LayoutObject"* %32, %"class.blink::LayoutBlockFlow"* %71, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutBoxModelObject"* %73)
  br label %77

75:                                               ; preds = %31, %44, %50, %55, %60, %65, %38
  %76 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"* %76, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %32) #13
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kChildChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %1, i8 zeroext 3) #13
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %1, i32 1) #13
  br label %77

77:                                               ; preds = %75, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBoxModelObject"* @_ZN5blink12LayoutInline18ContinuationBeforeEPNS_12LayoutObjectE(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp ne %"class.blink::LayoutObject"* %1, null
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutObject"* %7, %5
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  br label %82

11:                                               ; preds = %4, %2
  %12 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %13 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %12 to i96*
  %14 = load i96, i96* %13, align 4
  %15 = and i96 %14, 1207959552
  %16 = icmp eq i96 %15, 134217728
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %19 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %18) #13
  br label %24

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::LayoutInline"* %0 to %"class.blink::LayoutBlockFlow"*
  %22 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* %21) #13
  %23 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %22, i64 0, i32 0
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi %"class.blink::LayoutBoxModelObject"* [ %23, %20 ], [ %19, %17 ]
  %26 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %27 = icmp eq %"class.blink::LayoutBoxModelObject"* %25, null
  br i1 %27, label %66, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 7
  br label %30

30:                                               ; preds = %28, %63
  %31 = phi %"class.blink::LayoutBoxModelObject"* [ %26, %28 ], [ %32, %63 ]
  %32 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %28 ], [ %64, %63 ]
  br i1 %3, label %33, label %51

33:                                               ; preds = %30
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0
  %36 = icmp eq %"class.blink::LayoutObject"* %34, %35
  br i1 %36, label %37, label %51

37:                                               ; preds = %33
  %38 = bitcast %"class.blink::LayoutBoxModelObject"* %32 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %39 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %39, i64 13
  %41 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = tail call %"class.blink::LayoutObjectChildList"* %41(%"class.blink::LayoutObject"* %34) #13
  %43 = icmp eq %"class.blink::LayoutObjectChildList"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %42, i64 0, i32 0
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  br label %47

47:                                               ; preds = %37, %44
  %48 = phi %"class.blink::LayoutObject"* [ %46, %44 ], [ null, %37 ]
  %49 = icmp eq %"class.blink::LayoutObject"* %48, %1
  %50 = select i1 %49, %"class.blink::LayoutBoxModelObject"* %31, %"class.blink::LayoutBoxModelObject"* %32
  br label %82

51:                                               ; preds = %33, %30
  %52 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %32, i64 0, i32 0, i32 4
  %53 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %52 to i96*
  %54 = load i96, i96* %53, align 4
  %55 = and i96 %54, 1207959552
  %56 = icmp eq i96 %55, 134217728
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* nonnull %32) #13
  br label %63

59:                                               ; preds = %51
  %60 = bitcast %"class.blink::LayoutBoxModelObject"* %32 to %"class.blink::LayoutBlockFlow"*
  %61 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* nonnull %60) #13
  %62 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %61, i64 0, i32 0
  br label %63

63:                                               ; preds = %57, %59
  %64 = phi %"class.blink::LayoutBoxModelObject"* [ %62, %59 ], [ %58, %57 ]
  %65 = icmp eq %"class.blink::LayoutBoxModelObject"* %64, null
  br i1 %65, label %66, label %30

66:                                               ; preds = %63, %24
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %26, %24 ], [ %31, %63 ]
  %68 = phi %"class.blink::LayoutBoxModelObject"* [ %26, %24 ], [ %32, %63 ]
  br i1 %3, label %81, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %68, i64 0, i32 0
  %71 = bitcast %"class.blink::LayoutBoxModelObject"* %68 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %72 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %71, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %72, i64 13
  %74 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %73, align 8
  %75 = tail call %"class.blink::LayoutObjectChildList"* %74(%"class.blink::LayoutObject"* %70) #13
  %76 = icmp eq %"class.blink::LayoutObjectChildList"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %75, i64 0, i32 0
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = icmp eq %"class.blink::LayoutObject"* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %77, %66
  br label %82

82:                                               ; preds = %69, %81, %47, %77, %9
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %10, %9 ], [ %68, %81 ], [ %50, %47 ], [ %67, %77 ], [ %67, %69 ]
  ret %"class.blink::LayoutBoxModelObject"* %83
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlockFlow"* @_ZN5blink12LayoutInline40CreateAnonymousContainerForBlockChildrenEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %18) #13
  %20 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"* %19, %"class.blink::ComputedStyle"* dereferenceable(104) %21, i32 1) #13
  %23 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %24 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %25 = bitcast %"class.blink::ComputedStyle"** %24 to %"class.blink::ComputedStyleBase"**
  %26 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %26, i64 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %29, 41538374868278621028243970633760768
  %34 = and i160 %32, -41538374868278621028243970633760769
  %35 = or i160 %34, %33
  store i160 %35, i160* %31, align 8
  %36 = icmp eq %"class.blink::LayoutInline"* %0, null
  br i1 %36, label %76, label %37

37:                                               ; preds = %13, %53
  %38 = phi %"class.blink::LayoutObject"* [ %55, %53 ], [ %2, %13 ]
  %39 = bitcast %"class.blink::LayoutObject"* %38 to i1 (%"class.blink::LayoutObject"*)***
  %40 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, i64 26
  %42 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* nonnull %38) #13
  br i1 %43, label %44, label %76

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = load i96, i96* %46, align 4
  %48 = lshr i96 %47, 75
  %49 = trunc i96 %48 to i32
  %50 = and i32 %49, 1
  %51 = or i32 %50, 2
  %52 = icmp eq i32 %51, 3
  br i1 %52, label %57, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 7
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %76, label %37

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = lshr i160 %62, 80
  %64 = trunc i160 %63 to i32
  %65 = and i32 %64, 7
  %66 = icmp eq i32 %65, 4
  %67 = and i160 %62, 128849018880
  %68 = icmp eq i160 %67, 42949672960
  %69 = and i1 %68, %66
  %70 = load i160, i160* %31, align 8
  %71 = zext i32 %65 to i160
  %72 = shl nuw nsw i160 %71, 80
  %73 = select i1 %69, i160 3626777458843887524118528, i160 %72
  %74 = and i160 %70, -8462480737302404222943233
  %75 = or i160 %73, %74
  store i160 %75, i160* %31, align 8
  br label %76

76:                                               ; preds = %53, %37, %13, %57
  %77 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0, i32 0, i32 4
  %78 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %77 to i96*
  %79 = load i96, i96* %78, align 4
  %80 = lshr i96 %79, 29
  %81 = trunc i96 %80 to i32
  %82 = and i32 %81, 1
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %84 = icmp eq %"class.blink::Node"* %83, null
  br i1 %84, label %85, label %92

85:                                               ; preds = %76, %85
  %86 = phi %"class.blink::LayoutObject"* [ %88, %85 ], [ %2, %76 ]
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %86, i64 0, i32 7
  %88 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %88, i64 0, i32 6, i32 0, i32 0
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %89, align 8
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %85, label %92

92:                                               ; preds = %85, %76
  %93 = phi %"class.blink::Node"* [ %83, %76 ], [ %90, %85 ]
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %93, i64 0, i32 3, i32 0, i32 0
  %95 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %95, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::Document"*, %"class.blink::Document"** %96, align 8
  %98 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink15LayoutBlockFlow15CreateAnonymousEPNS_8DocumentE13scoped_refptrINS_13ComputedStyleEENS_12LegacyLayoutE(%"class.blink::Document"* %97, %"class.blink::ComputedStyle"* %22, i32 %82) #13
  ret %"class.blink::LayoutBlockFlow"* %98
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline9SplitFlowEPNS_12LayoutObjectEPNS_15LayoutBlockFlowES2_PNS_20LayoutBoxModelObjectE(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %7 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %8 = bitcast %"class.blink::LayoutBlock"* %7 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow17DeleteLineBoxTreeEv(%"class.blink::LayoutBlockFlow"* %8) #13
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %7, i64 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 16777216
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %64, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %7, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = lshr i160 %20, 32
  %22 = trunc i160 %21 to i32
  %23 = and i32 %22, 31
  switch i32 %23, label %64 [
    i32 1, label %24
    i32 14, label %24
  ]

24:                                               ; preds = %15, %15
  %25 = and i160 %20, 2113929216
  %26 = icmp eq i160 %25, 0
  br i1 %26, label %27, label %64

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::LayoutBlock"* %7 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 23
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %9) #13
  br i1 %32, label %33, label %64

33:                                               ; preds = %27
  %34 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %34, i64 25
  %36 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %9) #13
  br i1 %37, label %64, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::LayoutBlock"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %9, i32 20) #13
  br i1 %43, label %64, label %44

44:                                               ; preds = %38
  %45 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %46 = icmp eq %"class.blink::LayoutBlock"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %45, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.blink::LayoutBlock"* %45 to i1 (%"class.blink::LayoutObject"*)***
  %50 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %50, i64 24
  %52 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LayoutObject"* %48) #13
  br i1 %53, label %54, label %64

54:                                               ; preds = %47
  %55 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %49, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, i64 19
  %57 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %48) #13
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  tail call void @_ZN5blink11LayoutBlock23RemovePositionedObjectsEPNS_12LayoutObjectENS_20ContainingBlockStateE(%"class.blink::LayoutBlock"* %7, %"class.blink::LayoutObject"* null, i32 1) #13
  tail call void @_ZN5blink15LayoutBlockFlow21RemoveFloatingObjectsEv(%"class.blink::LayoutBlockFlow"* %8) #13
  %60 = bitcast %"class.blink::LayoutBlock"* %45 to %"class.blink::LayoutBlockFlow"*
  %61 = tail call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %9, i32 1) #13
  %62 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %7, i64 0, i32 0, i32 0, i32 0, i32 9
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  br label %72

64:                                               ; preds = %38, %15, %5, %24, %27, %33, %54, %47, %44
  %65 = tail call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %9, i32 1) #13
  %66 = bitcast %"class.blink::LayoutBlock"* %65 to %"class.blink::LayoutBlockFlow"*
  %67 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = tail call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %67, i32 1) #13
  %69 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %7, i64 0, i32 1, i32 0
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %7, i64 0, i32 1
  tail call void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"* %71, %"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject"* %67, %"class.blink::LayoutObject"* %70, i1 zeroext true) #13
  br label %72

72:                                               ; preds = %59, %64
  %73 = phi %"class.blink::LayoutObject"* [ %63, %59 ], [ %70, %64 ]
  %74 = phi %"class.blink::LayoutBlock"* [ %45, %59 ], [ %7, %64 ]
  %75 = phi %"class.blink::LayoutBlockFlow"* [ %60, %59 ], [ %8, %64 ]
  %76 = phi i1 [ true, %59 ], [ false, %64 ]
  %77 = phi %"class.blink::LayoutBlockFlow"* [ %8, %59 ], [ %66, %64 ]
  %78 = phi %"class.blink::LayoutBlock"* [ %7, %59 ], [ %65, %64 ]
  %79 = phi %"class.blink::LayoutBlock"* [ %61, %59 ], [ %68, %64 ]
  %80 = bitcast %"class.blink::LayoutBlock"* %79 to %"class.blink::LayoutBlockFlow"*
  %81 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %74, i64 0, i32 1
  %82 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"* %81, %"class.blink::LayoutObject"* %82, %"class.blink::LayoutObject"* %83, %"class.blink::LayoutObject"* %73, i1 zeroext true) #13
  %84 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %79, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"* %81, %"class.blink::LayoutObject"* %82, %"class.blink::LayoutObject"* %84, %"class.blink::LayoutObject"* %73, i1 zeroext true) #13
  %85 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %86 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %85 to i96*
  %87 = load i96, i96* %86, align 4
  %88 = and i96 %87, -17592186044417
  store i96 %88, i96* %86, align 4
  %89 = icmp eq %"class.blink::LayoutObject"* %73, null
  %90 = or i1 %76, %89
  br i1 %90, label %100, label %91

91:                                               ; preds = %72
  %92 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %78, i64 0, i32 1
  %93 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %94

94:                                               ; preds = %91, %94
  %95 = phi %"class.blink::LayoutObject"* [ %73, %91 ], [ %97, %94 ]
  %96 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %95, i64 0, i32 9
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %96, align 8
  %98 = tail call %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"* %81, %"class.blink::LayoutObject"* %82, %"class.blink::LayoutObject"* nonnull %95, i1 zeroext true) #13
  tail call void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"* %92, %"class.blink::LayoutObject"* %93, %"class.blink::LayoutObject"* %98, %"class.blink::LayoutObject"* null, i1 zeroext true) #13
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %95, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %95, i8 zeroext 3) #13
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* nonnull %95, i32 1) #13
  %99 = icmp eq %"class.blink::LayoutObject"* %97, null
  br i1 %99, label %100, label %94

100:                                              ; preds = %94, %72
  tail call void @_ZN5blink12LayoutInline12SplitInlinesEPNS_15LayoutBlockFlowES2_S2_PNS_12LayoutObjectEPNS_20LayoutBoxModelObjectE(%"class.blink::LayoutInline"* %0, %"class.blink::LayoutBlockFlow"* %77, %"class.blink::LayoutBlockFlow"* %80, %"class.blink::LayoutBlockFlow"* %2, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutBoxModelObject"* %4)
  %101 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %102 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %101 to i96*
  %103 = load i96, i96* %102, align 4
  %104 = and i96 %103, -17592186044417
  store i96 %104, i96* %102, align 4
  %105 = bitcast %"class.blink::LayoutBlockFlow"* %2 to void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %106 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %106, i64 16
  %108 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %107, align 8
  tail call void %108(%"class.blink::LayoutBlockFlow"* %2, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* null) #13
  %109 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %109, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %109, i8 zeroext 3) #13
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %109, i32 1) #13
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %82, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %82, i8 zeroext 3) #13
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %82, i32 1) #13
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %84, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %84, i8 zeroext 3) #13
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %84, i32 1) #13
  ret void
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutInline"* @_ZNK5blink12LayoutInline5CloneEv(%"class.blink::LayoutInline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 120) #13
  %3 = bitcast i8* %2 to %"class.blink::LayoutInline"*
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = bitcast %"class.blink::Node"** %10 to %"class.blink::Element"**
  %12 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi %"class.blink::Element"* [ %12, %9 ], [ null, %1 ]
  %15 = bitcast i8* %2 to %"class.blink::LayoutBoxModelObject"*
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %14, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"* %15, %"class.blink::ContainerNode"* %16) #13
  %17 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 88
  %19 = getelementptr inbounds i8, i8* %2, i64 20
  %20 = bitcast i8* %19 to i96*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #13
  %21 = load i96, i96* %20, align 4
  %22 = or i96 %21, 17592186044416
  store i96 %22, i96* %20, align 4
  %23 = bitcast i8* %2 to %"class.blink::LayoutObject"*
  %24 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = icmp eq %"class.blink::ComputedStyle"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %28) #13
  br label %29

29:                                               ; preds = %13, %27
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %23, %"class.blink::ComputedStyle"* %25, i32 1) #13
  %30 = load i96, i96* %5, align 4
  %31 = and i96 %30, 1099511627776
  %32 = load i96, i96* %20, align 4
  %33 = and i96 %32, -1099511627777
  %34 = or i96 %33, %31
  store i96 %34, i96* %20, align 4
  ret %"class.blink::LayoutInline"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline34MoveChildrenToIgnoringContinuationEPS0_PNS_12LayoutObjectE(%"class.blink::LayoutInline"*, %"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %5 = icmp eq %"class.blink::LayoutObject"* %2, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"class.blink::LayoutObject"* [ %2, %6 ], [ %11, %8 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 9
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = tail call %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"* %7, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* nonnull %9, i1 zeroext true) #13
  tail call void @_ZN5blink12LayoutInline28AddChildIgnoringContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"* %1, %"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject"* null)
  %13 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %13, label %14, label %8

14:                                               ; preds = %8, %3
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline12SplitInlinesEPNS_15LayoutBlockFlowES2_S2_PNS_12LayoutObjectEPNS_20LayoutBoxModelObjectE(%"class.blink::LayoutInline"*, %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::Vector.2270", align 8
  %8 = alloca %"class.blink::LayoutInline"*, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %10 = bitcast %"class.WTF::Vector.2270"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %7, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %7, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #13
  %14 = bitcast %"class.blink::LayoutInline"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %8, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = icmp eq %"class.blink::LayoutObject"* %9, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.blink::LayoutInline"** %8 to %"class.blink::LayoutObject"**
  br label %74

19:                                               ; preds = %96
  %20 = load i32, i32* %13, align 4
  %21 = add i32 %20, -1
  br label %22

22:                                               ; preds = %19, %6
  %23 = phi i32 [ %21, %19 ], [ -1, %6 ]
  %24 = call dereferenceable(8) %"class.blink::LayoutInline"** @_ZN3WTF6VectorIPN5blink12LayoutInlineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2270"* nonnull %7, i32 %23) #13
  %25 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %24, align 8
  %26 = call i8* @_ZN5blink12LayoutObjectnwEm(i64 120) #13
  %27 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %25, i64 0, i32 0, i32 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = and i96 %29, 16777216
  %31 = icmp eq i96 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %25, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %34 = bitcast %"class.blink::Node"** %33 to %"class.blink::Element"**
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %34, align 8
  br label %36

36:                                               ; preds = %32, %22
  %37 = phi %"class.blink::Element"* [ %35, %32 ], [ null, %22 ]
  %38 = bitcast i8* %26 to %"class.blink::LayoutBoxModelObject"*
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %37, i64 0, i32 0
  call void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"* %38, %"class.blink::ContainerNode"* %39) #13
  %40 = bitcast i8* %26 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %40, align 8
  %41 = getelementptr inbounds i8, i8* %26, i64 88
  %42 = getelementptr inbounds i8, i8* %26, i64 20
  %43 = bitcast i8* %42 to i96*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 32, i1 false) #13
  %44 = load i96, i96* %43, align 4
  %45 = or i96 %44, 17592186044416
  store i96 %45, i96* %43, align 4
  %46 = bitcast i8* %26 to %"class.blink::LayoutObject"*
  %47 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %25, i64 0, i32 0, i32 0, i32 5, i32 0
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %47, align 8
  %49 = icmp eq %"class.blink::ComputedStyle"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %51) #13
  br label %52

52:                                               ; preds = %36, %50
  call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %46, %"class.blink::ComputedStyle"* %48, i32 1) #13
  %53 = load i96, i96* %28, align 4
  %54 = and i96 %53, 1099511627776
  %55 = load i96, i96* %43, align 4
  %56 = and i96 %55, -1099511627777
  %57 = or i96 %56, %54
  store i96 %57, i96* %43, align 4
  %58 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"* %58, %"class.blink::LayoutObject"* %59, %"class.blink::LayoutObject"* %46, %"class.blink::LayoutObject"* null, i1 zeroext true) #13
  %60 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.blink::LayoutInline"** %8 to %"class.blink::LayoutObject"**
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 9
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = bitcast %"class.blink::LayoutBlockFlow"* %1 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  %67 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %67, i64 144
  %69 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %68, align 8
  call void %69(%"class.blink::LayoutBoxModelObject"* %60, %"class.blink::LayoutBoxModelObject"* %61, %"class.blink::LayoutObject"* %65, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* null, i1 zeroext true) #13
  %70 = load i32, i32* %13, align 4
  %71 = add nsw i32 %70, -2
  %72 = bitcast i8* %26 to %"class.blink::LayoutInline"*
  %73 = icmp sgt i32 %71, -1
  br i1 %73, label %126, label %103

74:                                               ; preds = %17, %96
  %75 = phi %"class.blink::LayoutObject"* [ %9, %17 ], [ %98, %96 ]
  %76 = bitcast %"class.blink::LayoutObject"* %75 to i1 (%"class.blink::LayoutObject"*, i32)***
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %77, i64 92
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, align 8
  %80 = call zeroext i1 %79(%"class.blink::LayoutObject"* %75, i32 28) #13
  br i1 %80, label %96, label %81

81:                                               ; preds = %74
  store %"class.blink::LayoutObject"* %75, %"class.blink::LayoutObject"** %18, align 8
  %82 = load i32, i32* %13, align 4
  %83 = icmp ult i32 %82, 200
  %84 = ptrtoint %"class.blink::LayoutObject"* %75 to i64
  br i1 %83, label %85, label %96

85:                                               ; preds = %81
  %86 = load i32, i32* %12, align 8
  %87 = icmp eq i32 %82, %86
  br i1 %87, label %95, label %88, !prof !3

88:                                               ; preds = %85
  %89 = load %"class.blink::LayoutInline"**, %"class.blink::LayoutInline"*** %11, align 8
  %90 = zext i32 %82 to i64
  %91 = getelementptr inbounds %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %89, i64 %90
  %92 = bitcast %"class.blink::LayoutInline"** %91 to i64*
  store i64 %84, i64* %92, align 8
  %93 = load i32, i32* %13, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %13, align 4
  br label %96

95:                                               ; preds = %85
  call void @_ZN3WTF6VectorIPN5blink12LayoutInlineELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2270"* nonnull %7, %"class.blink::LayoutInline"** nonnull dereferenceable(8) %8) #13
  br label %96

96:                                               ; preds = %95, %88, %81, %74
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 7
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = icmp eq %"class.blink::LayoutObject"* %98, %15
  br i1 %99, label %19, label %74

100:                                              ; preds = %180
  %101 = bitcast i8* %136 to %"class.blink::LayoutBoxModelObject"*
  %102 = bitcast i8* %136 to %"class.blink::LayoutInline"*
  br label %103

103:                                              ; preds = %100, %52
  %104 = phi %"class.blink::LayoutBoxModelObject"* [ %38, %52 ], [ %101, %100 ]
  %105 = phi %"class.blink::LayoutInline"* [ %72, %52 ], [ %102, %100 ]
  call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %104, %"class.blink::LayoutBoxModelObject"* %5) #13
  %106 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %106, %"class.blink::LayoutBoxModelObject"* %104) #13
  %107 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1
  br label %110

110:                                              ; preds = %108, %110
  %111 = phi %"class.blink::LayoutObject"* [ %4, %108 ], [ %113, %110 ]
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 9
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  %114 = call %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"* %109, %"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject"* nonnull %111, i1 zeroext true) #13
  call void @_ZN5blink12LayoutInline28AddChildIgnoringContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"* %105, %"class.blink::LayoutObject"* %114, %"class.blink::LayoutObject"* null) #13
  %115 = icmp eq %"class.blink::LayoutObject"* %113, null
  br i1 %115, label %116, label %110

116:                                              ; preds = %110, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %117 = load %"class.blink::LayoutInline"**, %"class.blink::LayoutInline"*** %11, align 8
  %118 = icmp eq %"class.blink::LayoutInline"** %117, null
  %119 = bitcast %"class.blink::LayoutInline"** %117 to i8*
  br i1 %118, label %125, label %120, !prof !4

120:                                              ; preds = %116
  %121 = load i32, i32* %13, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %124, label %123, !prof !3

123:                                              ; preds = %120
  store i32 0, i32* %13, align 4
  br label %124

124:                                              ; preds = %123, %120
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %119) #13
  store %"class.blink::LayoutInline"** null, %"class.blink::LayoutInline"*** %11, align 8
  br label %125

125:                                              ; preds = %116, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret void

126:                                              ; preds = %52, %180
  %127 = phi %"class.blink::LayoutInline"* [ %182, %180 ], [ %72, %52 ]
  %128 = phi i32 [ %181, %180 ], [ %71, %52 ]
  %129 = phi i8* [ %136, %180 ], [ %26, %52 ]
  %130 = phi %"class.blink::LayoutInline"* [ %135, %180 ], [ %25, %52 ]
  %131 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %130, i64 0, i32 0
  %132 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %131) #13
  %133 = bitcast i8* %129 to %"class.blink::LayoutBoxModelObject"*
  call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %131, %"class.blink::LayoutBoxModelObject"* %133) #13
  call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %133, %"class.blink::LayoutBoxModelObject"* %132) #13
  %134 = call dereferenceable(8) %"class.blink::LayoutInline"** @_ZN3WTF6VectorIPN5blink12LayoutInlineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2270"* nonnull %7, i32 %128) #13
  %135 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %134, align 8
  %136 = call i8* @_ZN5blink12LayoutObjectnwEm(i64 120) #13
  %137 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %135, i64 0, i32 0, i32 0, i32 4
  %138 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %137 to i96*
  %139 = load i96, i96* %138, align 4
  %140 = and i96 %139, 16777216
  %141 = icmp eq i96 %140, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %126
  %143 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %135, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %144 = bitcast %"class.blink::Node"** %143 to %"class.blink::Element"**
  %145 = load %"class.blink::Element"*, %"class.blink::Element"** %144, align 8
  br label %146

146:                                              ; preds = %142, %126
  %147 = phi %"class.blink::Element"* [ %145, %142 ], [ null, %126 ]
  %148 = bitcast i8* %136 to %"class.blink::LayoutBoxModelObject"*
  %149 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %147, i64 0, i32 0
  call void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"* %148, %"class.blink::ContainerNode"* %149) #13
  %150 = bitcast i8* %136 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [148 x i8*], [7 x i8*] }, { [148 x i8*], [7 x i8*] }* @_ZTVN5blink12LayoutInlineE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %150, align 8
  %151 = getelementptr inbounds i8, i8* %136, i64 88
  %152 = getelementptr inbounds i8, i8* %136, i64 20
  %153 = bitcast i8* %152 to i96*
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 32, i1 false) #13
  %154 = load i96, i96* %153, align 4
  %155 = or i96 %154, 17592186044416
  store i96 %155, i96* %153, align 4
  %156 = bitcast i8* %136 to %"class.blink::LayoutObject"*
  %157 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %135, i64 0, i32 0, i32 0, i32 5, i32 0
  %158 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %157, align 8
  %159 = icmp eq %"class.blink::ComputedStyle"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %146
  %161 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %158, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %161) #13
  br label %162

162:                                              ; preds = %146, %160
  call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %156, %"class.blink::ComputedStyle"* %158, i32 1) #13
  %163 = load i96, i96* %138, align 4
  %164 = and i96 %163, 1099511627776
  %165 = load i96, i96* %153, align 4
  %166 = and i96 %165, -1099511627777
  %167 = or i96 %166, %164
  store i96 %167, i96* %153, align 4
  call void @_ZN5blink12LayoutInline28AddChildIgnoringContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"* %127, %"class.blink::LayoutObject"* %156, %"class.blink::LayoutObject"* null)
  %168 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %135, i64 0, i32 0, i32 0, i32 9
  %169 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %130, i64 0, i32 0, i32 0
  %171 = icmp eq %"class.blink::LayoutObject"* %169, null
  br i1 %171, label %180, label %172

172:                                              ; preds = %162
  %173 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %130, i64 0, i32 1
  br label %174

174:                                              ; preds = %172, %174
  %175 = phi %"class.blink::LayoutObject"* [ %169, %172 ], [ %177, %174 ]
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %175, i64 0, i32 9
  %177 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %176, align 8
  %178 = call %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"* %173, %"class.blink::LayoutObject"* %170, %"class.blink::LayoutObject"* nonnull %175, i1 zeroext true) #13
  call void @_ZN5blink12LayoutInline28AddChildIgnoringContinuationEPNS_12LayoutObjectES2_(%"class.blink::LayoutInline"* %127, %"class.blink::LayoutObject"* %178, %"class.blink::LayoutObject"* null) #13
  %179 = icmp eq %"class.blink::LayoutObject"* %177, null
  br i1 %179, label %180, label %174

180:                                              ; preds = %174, %162
  %181 = add nsw i32 %128, -1
  %182 = bitcast i8* %136 to %"class.blink::LayoutInline"*
  %183 = icmp sgt i32 %128, 0
  br i1 %183, label %126, label %100
}

declare void @_ZN5blink15LayoutBlockFlow17DeleteLineBoxTreeEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23RemovePositionedObjectsEPNS_12LayoutObjectENS_20ContainingBlockStateE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow21RemoveFloatingObjectsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink15LayoutBlockFlow15CreateAnonymousEPNS_8DocumentE13scoped_refptrINS_13ComputedStyleEENS_12LegacyLayoutE(%"class.blink::Document"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline5PaintERKNS_9PaintInfoE(%"class.blink::LayoutInline"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::InlinePainter", align 8
  %4 = bitcast %"class.blink::InlinePainter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::InlinePainter", %"class.blink::InlinePainter"* %3, i64 0, i32 0
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %5, align 8
  call void @_ZN5blink13InlinePainter5PaintERKNS_9PaintInfoE(%"class.blink::InlinePainter"* nonnull %3, %"struct.blink::PaintInfo"* %1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

declare void @_ZN5blink13InlinePainter5PaintERKNS_9PaintInfoE(%"class.blink::InlinePainter"*, %"struct.blink::PaintInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12LayoutInline31AbsoluteTransformDependsOnPointERKNS_12LayoutObjectE(%"class.blink::LayoutInline"* nocapture readnone, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2, %9
  %6 = phi %"class.blink::LayoutObject"* [ %10, %9 ], [ %3, %2 ]
  %7 = phi %"class.blink::LayoutObject"* [ %6, %9 ], [ %1, %2 ]
  %8 = tail call zeroext i1 @_ZNK5blink12LayoutObject32OffsetForContainerDependsOnPointEPKS0_(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject"* nonnull %6) #13
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %9, %2
  %13 = phi i1 [ false, %2 ], [ false, %9 ], [ true, %5 ]
  ret i1 %13
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject32OffsetForContainerDependsOnPointEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutInline"*, %"class.WTF::Vector.2276"* dereferenceable(16)) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjb(%"class.blink::LayoutInline"* %0, %"class.WTF::Vector.2276"* dereferenceable(16) %1, i32 0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjb(%"class.blink::LayoutInline"*, %"class.WTF::Vector.2276"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #5 align 2 {
  %5 = alloca %class.anon.2414, align 8
  %6 = alloca %"class.blink::FloatQuad", align 8
  %7 = alloca %"class.blink::FloatQuad", align 8
  %8 = alloca %"class.blink::NGInlineCursor", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.absl::optional.2281", align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca %class.anon, align 8
  %16 = alloca %class.anon.2286, align 8
  %17 = alloca %"struct.blink::PhysicalRect", align 4
  %18 = alloca %"class.blink::FloatQuad", align 4
  %19 = zext i1 %3 to i8
  store i8 %19, i8* %11, align 1
  %20 = getelementptr inbounds %"class.absl::optional.2281", %"class.absl::optional.2281"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %20) #13
  %21 = bitcast %"class.absl::optional.2281"* %12 to i64*
  store i64 -6148914691236517206, i64* %21, align 8
  store i8 0, i8* %20, align 8
  %22 = getelementptr inbounds %"class.absl::optional.2281", %"class.absl::optional.2281"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %union.anon.2285* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 128, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #13
  store i8 0, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #13
  store i8 0, i8* %14, align 1
  %24 = bitcast %class.anon* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 40, i1 false)
  %25 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 0
  store i8* %13, i8** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 1
  store i8* %14, i8** %26, align 8
  %27 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 2
  store %"class.absl::optional.2281"* %12, %"class.absl::optional.2281"** %27, align 8
  %28 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 3
  store %"class.WTF::Vector.2276"* %1, %"class.WTF::Vector.2276"** %28, align 8
  %29 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 4
  store i32 %2, i32* %29, align 8
  %30 = getelementptr inbounds %class.anon, %class.anon* %15, i64 0, i32 5
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %30, align 8
  %31 = bitcast %class.anon.2286* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %16, i64 0, i32 0
  store %class.anon* %15, %class.anon** %32, align 8
  %33 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %16, i64 0, i32 1
  store i8* %11, i8** %33, align 8
  %34 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %16, i64 0, i32 2
  store %"class.WTF::Vector.2276"* %1, %"class.WTF::Vector.2276"** %34, align 8
  %35 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %36 = bitcast { i64, i64 }* %10 to %"struct.blink::PhysicalRect"*
  %37 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = load i96, i96* %39, align 4
  %41 = and i96 %40, 268435456
  %42 = icmp eq i96 %41, 0
  br i1 %42, label %110, label %43

43:                                               ; preds = %4
  %44 = bitcast %"class.blink::NGInlineCursor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 112, i1 false) #13
  %45 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %8, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 81, i1 false) #13
  %46 = bitcast %"class.blink::LayoutBlockFlow"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %8, %"class.blink::LayoutObject"* dereferenceable(88) %37) #13
  %47 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %8, i64 0, i32 0, i32 0
  %48 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %47, align 8
  %49 = icmp eq %"class.blink::NGFragmentItem"* %48, null
  br i1 %49, label %109, label %50

50:                                               ; preds = %43
  %51 = bitcast { i64, i64 }* %9 to i8*
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %54 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  %55 = bitcast %"class.blink::FloatQuad"* %6 to <2 x float>*
  %56 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 1
  %58 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 0
  %59 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 1
  %60 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 1
  br label %62

62:                                               ; preds = %106, %50
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %63 = call { i64, i64 } @_ZNK5blink14NGInlineCursor22CurrentRectInBlockFlowEv(%"class.blink::NGInlineCursor"* nonnull %8) #13
  %64 = extractvalue { i64, i64 } %63, 0
  store i64 %64, i64* %52, align 8
  %65 = extractvalue { i64, i64 } %63, 1
  store i64 %65, i64* %53, align 8
  %66 = load i8*, i8** %33, align 8
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %62
  %70 = load %class.anon*, %class.anon** %32, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %70, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %35) #13
  br label %106

71:                                               ; preds = %62
  %72 = lshr i64 %65, 32
  %73 = trunc i64 %72 to i32
  %74 = trunc i64 %65 to i32
  %75 = lshr i64 %64, 32
  %76 = trunc i64 %75 to i32
  %77 = trunc i64 %64 to i32
  %78 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #13
  %79 = sitofp i32 %77 to float
  %80 = fmul float %79, 1.562500e-02
  %81 = sitofp i32 %76 to float
  %82 = fmul float %81, 1.562500e-02
  %83 = sitofp i32 %74 to float
  %84 = fmul float %83, 1.562500e-02
  %85 = sitofp i32 %73 to float
  %86 = fmul float %85, 1.562500e-02
  %87 = insertelement <2 x float> undef, float %80, i32 0
  %88 = insertelement <2 x float> %87, float %82, i32 1
  store <2 x float> %88, <2 x float>* %55, align 8
  %89 = fadd float %80, %84
  store float %89, float* %56, align 8
  store float %82, float* %57, align 4
  %90 = fadd float %82, %86
  store float %89, float* %58, align 8
  store float %90, float* %59, align 4
  store float %80, float* %60, align 8
  store float %90, float* %61, align 4
  %91 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %78, i64 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %78, i64 0, i32 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %104, label %96, !prof !3

96:                                               ; preds = %71
  %97 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %78, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %97, align 8
  %99 = zext i32 %92 to i64
  %100 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %98, i64 %99
  %101 = bitcast %"class.blink::FloatQuad"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* nonnull align 8 %54, i64 32, i1 false) #13
  %102 = load i32, i32* %91, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %91, align 4
  br label %105

104:                                              ; preds = %71
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %78, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %6) #13
  br label %105

105:                                              ; preds = %104, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #13
  br label %106

106:                                              ; preds = %105, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %8) #13
  %107 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %47, align 8
  %108 = icmp eq %"class.blink::NGFragmentItem"* %107, null
  br i1 %108, label %109, label %62

109:                                              ; preds = %106, %43
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %44) #13
  br label %250

110:                                              ; preds = %4
  %111 = and i96 %40, 70369012613120
  %112 = icmp eq i96 %111, 70368744177664
  %113 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 9
  %116 = bitcast [20 x i8]* %115 to i160*
  %117 = load i160, i160* %116, align 8
  %118 = and i160 %117, 15211807202738752817960438464512
  %119 = icmp eq i160 %118, 5070602400912917605986812821504
  br i1 %112, label %129, label %120

120:                                              ; preds = %110
  br i1 %119, label %121, label %123, !prof !3

121:                                              ; preds = %120
  %122 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %37, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  br label %123

123:                                              ; preds = %121, %120
  %124 = phi %"class.blink::LayoutBlock"* [ %122, %121 ], [ null, %120 ]
  %125 = bitcast %class.anon.2414* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #13
  %126 = getelementptr inbounds %class.anon.2414, %class.anon.2414* %5, i64 0, i32 0
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %126, align 8
  %127 = getelementptr inbounds %class.anon.2414, %class.anon.2414* %5, i64 0, i32 1
  store %"class.blink::LayoutBlock"* %124, %"class.blink::LayoutBlock"** %127, align 8
  %128 = getelementptr inbounds %class.anon.2414, %class.anon.2414* %5, i64 0, i32 2
  store %class.anon.2286* %16, %class.anon.2286** %128, align 8
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEEjbE3$_0EEvRKT_EUlRKNS_10LayoutRectEE_EEvSC_PKS0_"(%"class.blink::LayoutInline"* %0, %class.anon.2414* nonnull dereferenceable(24) %5, %"class.blink::LayoutInline"* %0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  br label %250

129:                                              ; preds = %110
  br i1 %119, label %130, label %133, !prof !3

130:                                              ; preds = %129
  %131 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %37, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %132 = load i96, i96* %39, align 4
  br label %133

133:                                              ; preds = %130, %129
  %134 = phi i96 [ %132, %130 ], [ %40, %129 ]
  %135 = phi %"class.blink::LayoutBlock"* [ %131, %130 ], [ null, %129 ]
  %136 = and i96 %134, 268435456
  %137 = icmp eq i96 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %133
  %139 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %142

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %142

142:                                              ; preds = %140, %138
  %143 = phi %"class.blink::LineBoxList"* [ %139, %138 ], [ %141, %140 ]
  %144 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %144, align 8
  %146 = icmp eq %"class.blink::InlineFlowBox"* %145, null
  br i1 %146, label %250, label %147

147:                                              ; preds = %142
  %148 = bitcast { i64, i64 }* %10 to i8*
  %149 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %135, i64 0, i32 0
  %150 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %153 = bitcast %"class.blink::FloatQuad"* %7 to i8*
  %154 = bitcast %"class.blink::FloatQuad"* %7 to <2 x float>*
  %155 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 1, i32 0
  %156 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 1, i32 1
  %157 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 2, i32 0
  %158 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 2, i32 1
  %159 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 3, i32 0
  %160 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 3, i32 1
  br label %161

161:                                              ; preds = %246, %147
  %162 = phi %"class.blink::InlineFlowBox"* [ %145, %147 ], [ %248, %246 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #13
  %163 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %162, i64 0, i32 0
  %164 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %162, i64 0, i32 0, i32 5
  %165 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %162, i64 0, i32 0, i32 7, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, 2048
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %162, i64 0, i32 0, i32 6, i32 0
  %171 = load i32, i32* %170, align 8
  br label %175

172:                                              ; preds = %161
  %173 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %163) #13
  %174 = load i32, i32* %165, align 4
  br label %175

175:                                              ; preds = %172, %169
  %176 = phi i32 [ %166, %169 ], [ %174, %172 ]
  %177 = phi i32 [ %171, %169 ], [ %173, %172 ]
  %178 = and i32 %176, 2048
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %175
  %181 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %163) #13
  br label %185

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %162, i64 0, i32 0, i32 6, i32 0
  %184 = load i32, i32* %183, align 8
  br label %185

185:                                              ; preds = %182, %180
  %186 = phi i32 [ %181, %180 ], [ %184, %182 ]
  %187 = zext i32 %186 to i64
  %188 = shl nuw i64 %187, 32
  %189 = bitcast %"class.blink::LayoutPoint"* %164 to i64*
  %190 = load i64, i64* %189, align 4
  %191 = trunc i64 %190 to i32
  %192 = and i64 %190, -4294967296
  %193 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %113, align 8
  %194 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %193, i64 0, i32 0, i32 9
  %195 = bitcast [20 x i8]* %194 to i160*
  %196 = load i160, i160* %195, align 8
  %197 = and i160 %196, 15211807202738752817960438464512
  %198 = icmp eq i160 %197, 5070602400912917605986812821504
  br i1 %198, label %199, label %204, !prof !3

199:                                              ; preds = %185
  %200 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %150, align 8
  %201 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %200, i64 106
  %202 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %201, align 8
  %203 = call i32 %202(%"class.blink::LayoutObject"* %37, i32 %191, i32 %177, %"class.blink::LayoutBox"* %149) #13
  br label %204

204:                                              ; preds = %199, %185
  %205 = phi i32 [ %203, %199 ], [ %191, %185 ]
  %206 = zext i32 %205 to i64
  %207 = or i64 %192, %206
  %208 = zext i32 %177 to i64
  %209 = or i64 %188, %208
  store i64 %207, i64* %151, align 8
  store i64 %209, i64* %152, align 8
  %210 = load i8*, i8** %33, align 8
  %211 = load i8, i8* %210, align 1, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %204
  %214 = load %class.anon*, %class.anon** %32, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %214, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %36) #13
  br label %246

215:                                              ; preds = %204
  %216 = lshr i64 %190, 32
  %217 = trunc i64 %216 to i32
  %218 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #13
  %219 = sitofp i32 %205 to float
  %220 = fmul float %219, 1.562500e-02
  %221 = sitofp i32 %217 to float
  %222 = fmul float %221, 1.562500e-02
  %223 = sitofp i32 %177 to float
  %224 = fmul float %223, 1.562500e-02
  %225 = sitofp i32 %186 to float
  %226 = fmul float %225, 1.562500e-02
  %227 = insertelement <2 x float> undef, float %220, i32 0
  %228 = insertelement <2 x float> %227, float %222, i32 1
  store <2 x float> %228, <2 x float>* %154, align 8
  %229 = fadd float %224, %220
  store float %229, float* %155, align 8
  store float %222, float* %156, align 4
  %230 = fadd float %226, %222
  store float %229, float* %157, align 8
  store float %230, float* %158, align 4
  store float %220, float* %159, align 8
  store float %230, float* %160, align 4
  %231 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %218, i64 0, i32 0, i32 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %218, i64 0, i32 0, i32 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = icmp eq i32 %232, %234
  br i1 %235, label %244, label %236, !prof !3

236:                                              ; preds = %215
  %237 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %218, i64 0, i32 0, i32 0, i32 0
  %238 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %237, align 8
  %239 = zext i32 %232 to i64
  %240 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %238, i64 %239
  %241 = bitcast %"class.blink::FloatQuad"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %241, i8* nonnull align 8 %153, i64 32, i1 false) #13
  %242 = load i32, i32* %231, align 4
  %243 = add i32 %242, 1
  store i32 %243, i32* %231, align 4
  br label %245

244:                                              ; preds = %215
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %218, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %7) #13
  br label %245

245:                                              ; preds = %244, %236
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #13
  br label %246

246:                                              ; preds = %245, %213
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #13
  %247 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %162, i64 0, i32 5
  %248 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %247, align 8
  %249 = icmp eq %"class.blink::InlineFlowBox"* %248, null
  br i1 %249, label %250, label %161

250:                                              ; preds = %246, %109, %123, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  %251 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %1, i64 0, i32 0, i32 0, i32 2
  %252 = load i32, i32* %251, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %273

254:                                              ; preds = %250
  %255 = load i8, i8* %11, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %254
  %258 = bitcast %"struct.blink::PhysicalRect"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #13
  %259 = bitcast %"struct.blink::PhysicalRect"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %259, i8 0, i64 16, i1 false)
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* nonnull %15, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %17)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #13
  br label %273

260:                                              ; preds = %254
  %261 = bitcast %"class.blink::FloatQuad"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #13
  %262 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %1, i64 0, i32 0, i32 0, i32 1
  %263 = bitcast %"class.blink::FloatQuad"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %263, i8 0, i64 32, i1 false)
  %264 = load i32, i32* %262, align 8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %271, label %266, !prof !3

266:                                              ; preds = %260
  %267 = bitcast %"class.WTF::Vector.2276"* %1 to i8**
  %268 = load i8*, i8** %267, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* nonnull align 4 %261, i64 32, i1 false) #13
  %269 = load i32, i32* %251, align 4
  %270 = add i32 %269, 1
  store i32 %270, i32* %251, align 4
  br label %272

271:                                              ; preds = %260
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %18) #13
  br label %272

272:                                              ; preds = %266, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #13
  br label %273

273:                                              ; preds = %257, %272, %250
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %20) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutInline"*, %"class.WTF::Vector.2276"* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjb(%"class.blink::LayoutInline"* %0, %"class.WTF::Vector.2276"* dereferenceable(16) %1, i32 %2, i1 zeroext true)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* nocapture readonly, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 8
  %4 = alloca %"class.blink::FloatQuad", align 4
  %5 = alloca %"class.blink::FloatQuad", align 8
  %6 = alloca %"class.blink::FloatQuad", align 4
  %7 = alloca %"class.blink::FloatQuad", align 8
  %8 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %9 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %8, align 8
  %10 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %41

14:                                               ; preds = %2
  store i8 1, i8* %11, align 1
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %9, i64 0, i32 0, i32 0
  %16 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %14, %22
  %19 = phi %"class.blink::LayoutObject"* [ %23, %22 ], [ %16, %14 ]
  %20 = phi %"class.blink::LayoutObject"* [ %19, %22 ], [ %15, %14 ]
  %21 = tail call zeroext i1 @_ZNK5blink12LayoutObject32OffsetForContainerDependsOnPointEPKS0_(%"class.blink::LayoutObject"* %20, %"class.blink::LayoutObject"* nonnull %19) #13
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %19, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %24 = icmp eq %"class.blink::LayoutObject"* %23, null
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %22, %14
  %26 = phi i8 [ 0, %14 ], [ 1, %18 ], [ 0, %22 ]
  %27 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  store i8 %26, i8* %28, align 1
  %29 = load i8*, i8** %27, align 8
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %41

32:                                               ; preds = %25
  %33 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %34 = load %"class.absl::optional.2281"*, %"class.absl::optional.2281"** %33, align 8
  %35 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %35) #13
  %36 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %37 = load i32, i32* %36, align 8
  call void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* nonnull sret %3, %"class.blink::LayoutObject"* %15, %"class.blink::LayoutBoxModelObject"* null, i32 %37) #13
  %38 = getelementptr inbounds %"class.absl::optional.2281", %"class.absl::optional.2281"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional.2281", %"class.absl::optional.2281"* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = bitcast %"class.blink::TransformationMatrix"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %35, i64 128, i1 false) #13
  store i8 1, i8* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %35) #13
  br label %41

41:                                               ; preds = %25, %2, %32
  %42 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %47 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %46, align 8
  br i1 %45, label %95, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.blink::FloatQuad"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #13
  %50 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %9, i64 0, i32 0, i32 0
  %51 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = sitofp i32 %53 to float
  %55 = fmul float %54, 1.562500e-02
  %56 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sitofp i32 %57 to float
  %59 = fmul float %58, 1.562500e-02
  %60 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = sitofp i32 %61 to float
  %63 = fmul float %62, 1.562500e-02
  %64 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = sitofp i32 %65 to float
  %67 = fmul float %66, 1.562500e-02
  %68 = insertelement <2 x float> undef, float %55, i32 0
  %69 = insertelement <2 x float> %68, float %59, i32 1
  %70 = bitcast %"class.blink::FloatQuad"* %5 to <2 x float>*
  store <2 x float> %69, <2 x float>* %70, align 8
  %71 = fadd float %55, %63
  %72 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 1, i32 0
  store float %71, float* %72, align 8
  %73 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 1, i32 1
  store float %59, float* %73, align 4
  %74 = fadd float %59, %67
  %75 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 2, i32 0
  store float %71, float* %75, align 8
  %76 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 2, i32 1
  store float %74, float* %76, align 4
  %77 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 3, i32 0
  store float %55, float* %77, align 8
  %78 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 3, i32 1
  store float %74, float* %78, align 4
  %79 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %4, %"class.blink::LayoutObject"* %50, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %5, %"class.blink::LayoutBoxModelObject"* null, i32 %80) #13
  %81 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %47, i64 0, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %47, i64 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %94, label %86, !prof !3

86:                                               ; preds = %48
  %87 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %47, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %87, align 8
  %89 = zext i32 %82 to i64
  %90 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %88, i64 %89
  %91 = bitcast %"class.blink::FloatQuad"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* nonnull align 4 %49, i64 32, i1 false) #13
  %92 = load i32, i32* %81, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %81, align 4
  br label %147

94:                                               ; preds = %48
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %47, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %4) #13
  br label %147

95:                                               ; preds = %41
  %96 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #13
  %97 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %98 = load %"class.absl::optional.2281"*, %"class.absl::optional.2281"** %97, align 8
  %99 = getelementptr inbounds %"class.absl::optional.2281", %"class.absl::optional.2281"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %95
  call void @llvm.trap() #13
  unreachable

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.absl::optional.2281", %"class.absl::optional.2281"* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %105 = bitcast %"class.blink::FloatQuad"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #13
  %106 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = sitofp i32 %107 to float
  %109 = fmul float %108, 1.562500e-02
  %110 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = sitofp i32 %111 to float
  %113 = fmul float %112, 1.562500e-02
  %114 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = sitofp i32 %115 to float
  %117 = fmul float %116, 1.562500e-02
  %118 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = sitofp i32 %119 to float
  %121 = fmul float %120, 1.562500e-02
  %122 = insertelement <2 x float> undef, float %109, i32 0
  %123 = insertelement <2 x float> %122, float %113, i32 1
  %124 = bitcast %"class.blink::FloatQuad"* %7 to <2 x float>*
  store <2 x float> %123, <2 x float>* %124, align 8
  %125 = fadd float %109, %117
  %126 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 1, i32 0
  store float %125, float* %126, align 8
  %127 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 1, i32 1
  store float %113, float* %127, align 4
  %128 = fadd float %113, %121
  %129 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 2, i32 0
  store float %125, float* %129, align 8
  %130 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 2, i32 1
  store float %128, float* %130, align 4
  %131 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 3, i32 0
  store float %109, float* %131, align 8
  %132 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 3, i32 1
  store float %128, float* %132, align 4
  call void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %6, %"class.blink::TransformationMatrix"* %104, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %7) #13
  %133 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %47, i64 0, i32 0, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %47, i64 0, i32 0, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %146, label %138, !prof !3

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %47, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %139, align 8
  %141 = zext i32 %134 to i64
  %142 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %140, i64 %141
  %143 = bitcast %"class.blink::FloatQuad"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* nonnull align 4 %96, i64 32, i1 false) #13
  %144 = load i32, i32* %133, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %133, align 4
  br label %147

146:                                              ; preds = %103
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %47, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %6) #13
  br label %147

147:                                              ; preds = %146, %138, %94, %86
  %148 = phi i8* [ %51, %86 ], [ %51, %94 ], [ %105, %138 ], [ %105, %146 ]
  %149 = phi i8* [ %49, %86 ], [ %49, %94 ], [ %96, %138 ], [ %96, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %149) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK5blink12LayoutInline27FirstLineBoxTopLeftInternalEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.2290", align 8
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 268435456
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  %12 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 81, i1 false) #13
  %13 = bitcast %"class.blink::LayoutBlockFlow"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %4) #13
  %14 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %14, align 8
  %16 = icmp eq %"class.blink::NGFragmentItem"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %10
  %18 = call { i64, i64 } @_ZNK5blink14NGInlineCursor22CurrentRectInBlockFlowEv(%"class.blink::NGInlineCursor"* nonnull %3) #13
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 1
  %21 = bitcast %union.anon.2291* %20 to i64*
  store i64 %19, i64* %21, align 4
  %22 = lshr i64 %19, 32
  %23 = trunc i64 %22 to i32
  br label %24

24:                                               ; preds = %10, %17
  %25 = phi i32 [ %23, %17 ], [ undef, %10 ]
  %26 = phi i8 [ 1, %17 ], [ 0, %10 ]
  %27 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 0
  store i8 %26, i8* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #13
  br label %103

28:                                               ; preds = %1
  %29 = and i96 %7, 70369012613120
  %30 = icmp eq i96 %29, 70368744177664
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %33, i64 0, i32 0
  br label %37

35:                                               ; preds = %28
  %36 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %0) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi %"class.blink::InlineBox"* [ %34, %31 ], [ %36, %35 ]
  %39 = icmp eq %"class.blink::InlineBox"* %38, null
  br i1 %39, label %101, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %38, i64 0, i32 5
  %42 = bitcast %"class.blink::LayoutPoint"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = trunc i64 %43 to i32
  %45 = and i64 %43, -4294967296
  %46 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  %51 = and i160 %50, 15211807202738752817960438464512
  %52 = icmp eq i160 %51, 5070602400912917605986812821504
  br i1 %52, label %53, label %95, !prof !3

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %38, i64 0, i32 7, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 2048
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %38, i64 0, i32 6, i32 0
  %60 = load i32, i32* %59, align 8
  br label %63

61:                                               ; preds = %53
  %62 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* nonnull %38) #13
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i32 [ %60, %58 ], [ %62, %61 ]
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %64) #13
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !3
  %71 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %72 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %71, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 5070602400912917605986812821504
  br i1 %78, label %79, label %86, !prof !3

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %71, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.blink::LayoutBlock"* %71 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %82 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %81, align 8
  %83 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %82, i64 106
  %84 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %83, align 8
  %85 = tail call i32 %84(%"class.blink::LayoutObject"* %80, i32 %70, i32 0, %"class.blink::LayoutBox"* null) #13
  br label %86

86:                                               ; preds = %63, %79
  %87 = phi i32 [ %85, %79 ], [ %70, %63 ]
  %88 = zext i32 %87 to i64
  %89 = or i64 %45, %88
  %90 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 0
  store i8 1, i8* %90, align 8
  %91 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 1
  %92 = bitcast %union.anon.2291* %91 to i64*
  store i64 %89, i64* %92, align 4
  %93 = lshr i64 %43, 32
  %94 = trunc i64 %93 to i32
  br label %103

95:                                               ; preds = %40
  %96 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 0
  store i8 1, i8* %96, align 8
  %97 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 1
  %98 = bitcast %union.anon.2291* %97 to i64*
  store i64 %43, i64* %98, align 4
  %99 = lshr i64 %43, 32
  %100 = trunc i64 %99 to i32
  br label %103

101:                                              ; preds = %37
  %102 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 0
  store i8 0, i8* %102, align 8
  br label %103

103:                                              ; preds = %86, %95, %101, %24
  %104 = phi i32 [ %94, %86 ], [ %100, %95 ], [ undef, %101 ], [ %25, %24 ]
  %105 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = insertvalue { i64, i32 } undef, i64 %106, 0
  %108 = insertvalue { i64, i32 } %107, i32 %104, 1
  ret { i64, i32 } %108
}

declare void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink12LayoutInline22AnchorPhysicalLocationEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.2290", align 8
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3)
  %4 = tail call { i64, i32 } @_ZNK5blink12LayoutInline27FirstLineBoxTopLeftInternalEv(%"class.blink::LayoutInline"* %0)
  %5 = extractvalue { i64, i32 } %4, 0
  %6 = extractvalue { i64, i32 } %4, 1
  %7 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %6, i32* %8, align 8
  %9 = trunc i64 %5 to i8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %2, i64 0, i32 1
  %13 = bitcast %union.anon.2291* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = and i64 %14, -4294967296
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3)
  br label %108

16:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3)
  %17 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 9
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %95, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::LayoutObject"* %18 to i1 (%"class.blink::LayoutObject"*)***
  %22 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, i64 26
  %24 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* nonnull %18) #13
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutInline"*
  %28 = tail call i64 @_ZNK5blink12LayoutInline22AnchorPhysicalLocationEv(%"class.blink::LayoutInline"* nonnull %27)
  %29 = and i64 %28, -4294967296
  br label %108

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 33554432
  %35 = icmp eq i96 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutText"*
  %38 = tail call i64 @_ZNK5blink10LayoutText19FirstLineBoxTopLeftEv(%"class.blink::LayoutText"* nonnull %37) #13
  %39 = and i64 %38, -4294967296
  br label %108

40:                                               ; preds = %30
  %41 = and i96 %33, 67108864
  %42 = icmp eq i96 %41, 0
  br i1 %42, label %95, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutBox"*
  %45 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %46 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %46, i64 147
  %48 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %47, align 8
  %49 = tail call %"class.blink::LayoutBox"* %48(%"class.blink::LayoutBox"* nonnull %44) #13
  %50 = icmp eq %"class.blink::LayoutBox"* %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %49, i64 0, i32 0, i32 0, i32 5, i32 0
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = and i160 %56, 15211807202738752817960438464512
  %58 = icmp eq i160 %57, 5070602400912917605986812821504
  br i1 %58, label %64, label %59, !prof !3

59:                                               ; preds = %51, %43
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 1, i32 1, i32 1
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 4
  %63 = trunc i64 %62 to i32
  br label %89

64:                                               ; preds = %51
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %49, i64 0, i32 2, i32 1
  %66 = bitcast %"class.blink::LayoutSize"* %65 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = trunc i64 %67 to i32
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 1, i32 4, i32 0, i64 4
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  %73 = icmp sgt i32 %72, -1
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %68, i32 %72) #13
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !3
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 1, i32 1, i32 1
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = trunc i64 %81 to i32
  %83 = icmp sgt i32 %82, -1
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %78, i32 %82) #13
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !3
  br label %89

89:                                               ; preds = %59, %64
  %90 = phi i32 [ %63, %59 ], [ %88, %64 ]
  %91 = phi i64 [ %62, %59 ], [ %81, %64 ]
  %92 = and i64 %91, -4294967296
  %93 = zext i32 %90 to i64
  %94 = or i64 %92, %93
  br label %108

95:                                               ; preds = %40, %16
  %96 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 7
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %96, align 8
  %98 = bitcast %"class.blink::LayoutObject"* %97 to i1 (%"class.blink::LayoutObject"*)***
  %99 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %99, i64 26
  %101 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* %97) #13
  br i1 %102, label %103, label %108

103:                                              ; preds = %95
  %104 = bitcast %"class.blink::LayoutObject"** %96 to %"class.blink::LayoutInline"**
  %105 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %104, align 8
  %106 = tail call i64 @_ZNK5blink12LayoutInline22AnchorPhysicalLocationEv(%"class.blink::LayoutInline"* %105)
  %107 = and i64 %106, -4294967296
  br label %108

108:                                              ; preds = %95, %89, %36, %26, %11, %103
  %109 = phi i64 [ %15, %11 ], [ %107, %103 ], [ %29, %26 ], [ %39, %36 ], [ %92, %89 ], [ 0, %95 ]
  %110 = phi i64 [ %14, %11 ], [ %106, %103 ], [ %28, %26 ], [ %38, %36 ], [ %94, %89 ], [ 0, %95 ]
  %111 = and i64 %110, 4294967295
  %112 = or i64 %111, %109
  ret i64 %112
}

declare i64 @_ZNK5blink10LayoutText19FirstLineBoxTopLeftEv(%"class.blink::LayoutText"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutInline"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.2294", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.WTF::Vector.2294"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %3, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast i64* %4 to i8*
  %13 = bitcast %"class.WTF::Vector.2294"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  store i64 0, i64* %4, align 8
  call void @_ZNK5blink12LayoutObject12OutlineRectsERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.WTF::Vector.2294"* nonnull sret %3, %"class.blink::LayoutObject"* %8, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %14 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %16 = call { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2294"* nonnull dereferenceable(16) %3) #13
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %18 = extractvalue { i64, i64 } %16, 0
  store i64 %18, i64* %17, align 8
  %19 = extractvalue { i64, i64 } %16, 1
  store i64 %19, i64* %15, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  %22 = icmp ult i64 %19, 4294967296
  %23 = or i1 %21, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = call i64 @_ZNK5blink12LayoutInline22AnchorPhysicalLocationEv(%"class.blink::LayoutInline"* %0)
  store i64 %25, i64* %17, align 8
  br label %26

26:                                               ; preds = %2, %24
  %27 = call { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %8, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7, %"class.blink::LayoutBoxModelObject"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  %28 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %10, align 8
  %29 = icmp eq %"struct.blink::PhysicalRect"* %28, null
  %30 = bitcast %"struct.blink::PhysicalRect"* %28 to i8*
  br i1 %29, label %36, label %31, !prof !4

31:                                               ; preds = %26
  %32 = load i32, i32* %11, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %31
  store i32 0, i32* %11, align 4
  br label %35

35:                                               ; preds = %34, %31
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #13
  store %"struct.blink::PhysicalRect"* null, %"struct.blink::PhysicalRect"** %10, align 8
  br label %36

36:                                               ; preds = %26, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret { i64, i64 } %27
}

declare void @_ZNK5blink12LayoutObject12OutlineRectsERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.WTF::Vector.2294"* sret, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #1

declare { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2294"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutInline"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional_internal::optional_data_dtor_base.2290", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8)
  %9 = tail call { i64, i32 } @_ZNK5blink12LayoutInline27FirstLineBoxTopLeftInternalEv(%"class.blink::LayoutInline"* %0) #13
  %10 = extractvalue { i64, i32 } %9, 0
  %11 = extractvalue { i64, i32 } %9, 1
  %12 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %11, i32* %13, align 8
  %14 = trunc i64 %10 to i8
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3, i64 0, i32 1
  %17 = bitcast %union.anon.2291* %16 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = select i1 %15, i64 0, i64 %18
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8)
  store i64 %19, i64* %4, align 8
  %20 = call i64 @_ZNK5blink20LayoutBoxModelObject26AdjustedPositionRelativeToERKNS_14PhysicalOffsetEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"* %6, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5, %"class.blink::Element"* %1) #13
  %21 = trunc i64 %20 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret i32 %21
}

declare i64 @_ZNK5blink20LayoutBoxModelObject26AdjustedPositionRelativeToERKNS_14PhysicalOffsetEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutInline"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional_internal::optional_data_dtor_base.2290", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8)
  %9 = tail call { i64, i32 } @_ZNK5blink12LayoutInline27FirstLineBoxTopLeftInternalEv(%"class.blink::LayoutInline"* %0) #13
  %10 = extractvalue { i64, i32 } %9, 0
  %11 = extractvalue { i64, i32 } %9, 1
  %12 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %11, i32* %13, align 8
  %14 = trunc i64 %10 to i8
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.2290", %"class.absl::optional_internal::optional_data_dtor_base.2290"* %3, i64 0, i32 1
  %17 = bitcast %union.anon.2291* %16 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = select i1 %15, i64 0, i64 %18
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8)
  store i64 %19, i64* %4, align 8
  %20 = call i64 @_ZNK5blink20LayoutBoxModelObject26AdjustedPositionRelativeToERKNS_14PhysicalOffsetEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"* %6, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5, %"class.blink::Element"* %1) #13
  %21 = lshr i64 %20, 32
  %22 = trunc i64 %21 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline10MarginLeftEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 10
  %8 = tail call fastcc i32 @_ZN5blinkL13ComputeMarginEPKNS_12LayoutInlineERKNS_6LengthE(%"class.blink::LayoutInline"* %0, %"class.blink::Length"* dereferenceable(8) %7)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blinkL13ComputeMarginEPKNS_12LayoutInlineERKNS_6LengthE(%"class.blink::LayoutInline"*, %"class.blink::Length"* dereferenceable(8)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %58 [
    i8 2, label %5
    i8 8, label %26
    i8 1, label %26
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::Length"* %1 to float*
  %11 = load float, float* %10, align 4
  br label %16

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  br label %16

16:                                               ; preds = %9, %12
  %17 = phi float [ %11, %9 ], [ %15, %12 ]
  %18 = fmul float %17, 6.400000e+01
  %19 = fcmp ult float %18, 0xC1E0000000000000
  %20 = fcmp ugt float %18, 0x41DFFFFFE0000000
  %21 = fcmp ogt float %18, 0xC1E0000000000000
  %22 = select i1 %21, float %18, float 0xC1E0000000000000
  %23 = fptosi float %22 to i32
  %24 = select i1 %19, i32 0, i32 2147483647
  %25 = select i1 %20, i32 %24, i32 %23
  br label %58

26:                                               ; preds = %2, %2
  %27 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %28 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %27, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %28, i64 0, i32 0
  %30 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %29) #13
  %31 = load i8, i8* %3, align 1
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %54, !prof !4

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %35 = load i8, i8* %34, align 2, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.blink::Length"* %1 to float*
  %39 = load float, float* %38, align 4
  br label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi float [ %39, %37 ], [ %43, %40 ]
  %46 = fmul float %45, 6.400000e+01
  %47 = fcmp ult float %46, 0xC1E0000000000000
  %48 = fcmp ugt float %46, 0x41DFFFFFE0000000
  %49 = fcmp ogt float %46, 0xC1E0000000000000
  %50 = select i1 %49, float %46, float 0xC1E0000000000000
  %51 = fptosi float %50 to i32
  %52 = select i1 %47, i32 0, i32 2147483647
  %53 = select i1 %48, i32 %52, i32 %51
  br label %58

54:                                               ; preds = %26
  %55 = icmp sgt i32 %30, 0
  %56 = select i1 %55, i32 %30, i32 0
  %57 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %1, i32 %56) #13
  br label %58

58:                                               ; preds = %54, %44, %2, %16
  %59 = phi i32 [ %25, %16 ], [ 0, %2 ], [ %53, %44 ], [ %57, %54 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline11MarginRightEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 11
  %8 = tail call fastcc i32 @_ZN5blinkL13ComputeMarginEPKNS_12LayoutInlineERKNS_6LengthE(%"class.blink::LayoutInline"* %0, %"class.blink::Length"* dereferenceable(8) %7)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline9MarginTopEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 12
  %8 = tail call fastcc i32 @_ZN5blinkL13ComputeMarginEPKNS_12LayoutInlineERKNS_6LengthE(%"class.blink::LayoutInline"* %0, %"class.blink::Length"* dereferenceable(8) %7)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline12MarginBottomEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 9
  %8 = tail call fastcc i32 @_ZN5blinkL13ComputeMarginEPKNS_12LayoutInlineERKNS_6LengthE(%"class.blink::LayoutInline"* %0, %"class.blink::Length"* dereferenceable(8) %7)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12LayoutInline11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutInline"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::NGInlineCursor", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = alloca %"class.blink::NGBoxFragmentPainter", align 8
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %11 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %10) #13
  %12 = icmp eq %"class.blink::LayoutBlockFlow"* %11, null
  %13 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  br i1 %12, label %187, label %16

16:                                               ; preds = %5
  %17 = and i96 %15, 63
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %19, label %197, !prof !4

19:                                               ; preds = %16
  %20 = bitcast %"class.blink::NGInlineCursor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %20) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 112, i1 false)
  %21 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %6, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 81, i1 false) #13
  %22 = bitcast %"class.blink::LayoutBlockFlow"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %6, %"class.blink::LayoutObject"* dereferenceable(88) %10) #13
  %23 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %6, i64 0, i32 0, i32 0
  %24 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %23, align 8
  %25 = icmp eq %"class.blink::NGFragmentItem"* %24, null
  br i1 %25, label %185, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, -1
  %30 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %6, i64 0, i32 7
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, %28
  %33 = select i1 %29, i32 -1, i32 %32
  %34 = icmp eq i32 %33, -1
  %35 = bitcast i64* %7 to i8*
  %36 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %38 = bitcast %"class.blink::NGBoxFragmentPainter"* %9 to i8*
  %39 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 1
  %41 = bitcast %"class.blink::Document"** %40 to i64*
  %42 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 2
  %43 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 3
  %44 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 1
  %45 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 2
  %46 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 3
  %47 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 4
  %48 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 5
  br label %49

49:                                               ; preds = %183, %26
  %50 = phi %"class.blink::NGFragmentItem"* [ %181, %183 ], [ %24, %26 ]
  %51 = phi i32 [ %184, %183 ], [ %31, %26 ]
  %52 = icmp eq i32 %33, %51
  %53 = or i1 %34, %52
  br i1 %53, label %54, label %180

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %50, i64 0, i32 6
  %56 = load i16, i16* %55, align 8
  %57 = and i16 %56, 7
  %58 = icmp eq i16 %57, 4
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %50, i64 0, i32 1
  %61 = bitcast %union.anon.2255* %60 to %"class.blink::NGPhysicalBoxFragment"**
  %62 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %61, align 8
  br label %63

63:                                               ; preds = %54, %59
  %64 = phi %"class.blink::NGPhysicalBoxFragment"* [ %62, %59 ], [ null, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %65 = load i32, i32* %36, align 4
  %66 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %50, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %65, i32 %67) #13
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !3
  %74 = load i32, i32* %37, align 4
  %75 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %50, i64 0, i32 2, i32 0, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %76, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %76) #13
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !3
  %83 = zext i32 %82 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %73 to i64
  %86 = or i64 %84, %85
  store i64 %86, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %38) #13
  %87 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %50, i64 0, i32 0
  %88 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %87, align 8
  %89 = icmp eq %"class.blink::LayoutObject"* %88, null
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %88, i64 0, i32 1
  %91 = bitcast %"class.blink::DisplayItemClient.base"* %90 to %"class.blink::DisplayItemClient"*
  %92 = select i1 %89, %"class.blink::DisplayItemClient"* null, %"class.blink::DisplayItemClient"* %91
  %93 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %64, i64 0, i32 0, i32 1
  %94 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 6, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %98, label %105

98:                                               ; preds = %63, %98
  %99 = phi %"class.blink::LayoutObject"* [ %101, %98 ], [ %94, %63 ]
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %99, i64 0, i32 7
  %101 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %101, i64 0, i32 6, i32 0, i32 0
  %103 = load %"class.blink::Node"*, %"class.blink::Node"** %102, align 8
  %104 = icmp eq %"class.blink::Node"* %103, null
  br i1 %104, label %98, label %105

105:                                              ; preds = %98, %63
  %106 = phi %"class.blink::Node"* [ %96, %63 ], [ %103, %98 ]
  %107 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %106, i64 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = bitcast %"class.blink::Document"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %64, i64 0, i32 0, i32 3
  %113 = bitcast i24* %112 to i32*
  %114 = load i32, i32* %113, align 8
  %115 = lshr i32 %114, 10
  %116 = and i32 %115, 3
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %105
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 5, i32 0
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8
  br label %124

121:                                              ; preds = %105
  %122 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %94, i32 %116) #13
  %123 = load i32, i32* %113, align 8
  br label %124

124:                                              ; preds = %121, %118
  %125 = phi i32 [ %114, %118 ], [ %123, %121 ]
  %126 = phi %"class.blink::ComputedStyle"* [ %120, %118 ], [ %122, %121 ]
  %127 = and i32 %125, 64
  %128 = icmp eq i32 %127, 0
  %129 = and i32 %125, 960
  %130 = icmp ne i32 %129, 256
  %131 = and i1 %128, %130
  br i1 %131, label %132, label %166

132:                                              ; preds = %124
  %133 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %93, align 8
  %134 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %133, i64 0, i32 4
  %135 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %134 to i96*
  %136 = load i96, i96* %135, align 4
  %137 = and i96 %136, 16777216
  %138 = icmp eq i96 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %133, i64 0, i32 6, i32 0, i32 0
  %141 = load %"class.blink::Node"*, %"class.blink::Node"** %140, align 8
  %142 = icmp eq %"class.blink::Node"* %141, null
  br i1 %142, label %151, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.blink::Node"* %141 to i8 (%"class.blink::Node"*)***
  %145 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %144, align 8
  %146 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %145, i64 34
  %147 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %146, align 8
  %148 = call zeroext i8 %147(%"class.blink::Node"* nonnull %141) #13
  %149 = icmp ne i8 %148, 0
  %150 = load i96, i96* %135, align 4
  br label %151

151:                                              ; preds = %143, %139, %132
  %152 = phi i96 [ %136, %139 ], [ %150, %143 ], [ %136, %132 ]
  %153 = phi i1 [ false, %139 ], [ %149, %143 ], [ false, %132 ]
  %154 = and i96 %152, 16777216
  %155 = icmp eq i96 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %133, i64 0, i32 6, i32 0, i32 0
  %158 = load %"class.blink::Node"*, %"class.blink::Node"** %157, align 8
  br label %159

159:                                              ; preds = %156, %151
  %160 = phi %"class.blink::Node"* [ %158, %156 ], [ null, %151 ]
  br i1 %153, label %161, label %166

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %160, i64 0, i32 2, i32 0, i32 0
  %163 = bitcast %"class.blink::Node"** %162 to %"class.blink::ContainerNode"**
  %164 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %164, i64 0, i32 0
  br label %166

166:                                              ; preds = %124, %159, %161
  %167 = phi %"class.blink::Node"* [ null, %124 ], [ %165, %161 ], [ %160, %159 ]
  store i64 %111, i64* %41, align 8
  store %"class.blink::ComputedStyle"* %126, %"class.blink::ComputedStyle"** %42, align 8
  store %"class.blink::Node"* %167, %"class.blink::Node"** %43, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink20NGBoxFragmentPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  store %"class.blink::NGPhysicalBoxFragment"* %64, %"class.blink::NGPhysicalBoxFragment"** %44, align 8
  store %"class.blink::DisplayItemClient"* %92, %"class.blink::DisplayItemClient"** %45, align 8
  %168 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %64, i64 0, i32 1
  %169 = bitcast i24* %168 to i32*
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %64, i64 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %64, i64 0, i32 6, i64 %175
  %177 = bitcast %"struct.blink::NGLink"* %176 to %"class.blink::NGFragmentItems"*
  %178 = select i1 %172, %"class.blink::NGFragmentItems"* null, %"class.blink::NGFragmentItems"* %177
  store %"class.blink::NGFragmentItems"* %178, %"class.blink::NGFragmentItems"** %46, align 8
  store %"class.blink::NGFragmentItem"* %50, %"class.blink::NGFragmentItem"** %47, align 8
  store %"class.blink::NGInlineCursor"* %6, %"class.blink::NGInlineCursor"** %48, align 8
  %179 = call zeroext i1 @_ZN5blink20NGBoxFragmentPainter11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetES8_NS_13HitTestActionE(%"class.blink::NGBoxFragmentPainter"* nonnull %9, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 %4) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  br i1 %179, label %185, label %180

180:                                              ; preds = %49, %166
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %6) #13
  %181 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %23, align 8
  %182 = icmp eq %"class.blink::NGFragmentItem"* %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %180
  %184 = load i32, i32* %30, align 4
  br label %49

185:                                              ; preds = %180, %166, %19
  %186 = phi i1 [ false, %19 ], [ false, %180 ], [ true, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %20) #13
  br label %197

187:                                              ; preds = %5
  %188 = and i96 %15, 268435456
  %189 = icmp eq i96 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %194

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %194

194:                                              ; preds = %190, %192
  %195 = phi %"class.blink::LineBoxList"* [ %191, %190 ], [ %193, %192 ]
  %196 = tail call zeroext i1 @_ZNK5blink11LineBoxList7HitTestENS_18LineLayoutBoxModelERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LineBoxList"* %195, %"class.blink::LayoutObject"* %10, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 %4) #13
  br label %197

197:                                              ; preds = %16, %194, %185
  %198 = phi i1 [ %186, %185 ], [ %196, %194 ], [ false, %16 ]
  ret i1 %198
}

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink20NGBoxFragmentPainter11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetES8_NS_13HitTestActionE(%"class.blink::NGBoxFragmentPainter"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LineBoxList7HitTestENS_18LineLayoutBoxModelERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12LayoutInline19HitTestCulledInlineERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetEPKNS_14NGInlineCursorE(%"class.blink::LayoutInline"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::NGInlineCursor"* readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::Region", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %class.anon.2415, align 8
  %9 = alloca %"class.blink::HitTestLocation", align 4
  %10 = alloca i64, align 8
  %11 = alloca %"class.blink::Region", align 8
  %12 = alloca i8, align 1
  %13 = alloca %class.anon.2299, align 8
  %14 = alloca %"class.blink::NGInlineCursor", align 8
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to { i64, i64 }*
  %17 = bitcast <2 x i64>* %15 to %"struct.blink::PhysicalRect"*
  %18 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = bitcast %"class.blink::ComputedStyle"** %19 to %"class.blink::ComputedStyleBase"**
  %21 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %21, i64 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 3802951800684688204490109616128
  %26 = icmp eq i160 %25, 1267650600228229401496703205376
  br i1 %26, label %27, label %254

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 1024
  %31 = icmp ne i32 %30, 0
  %32 = and i160 %24, 16888498602639360
  %33 = icmp ne i160 %32, 0
  %34 = or i1 %33, %31
  br i1 %34, label %35, label %254

35:                                               ; preds = %27
  %36 = bitcast i64* %10 to %"struct.blink::PhysicalOffset"*
  %37 = bitcast %"class.blink::HitTestLocation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %37) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 bitcast (%"class.blink::HitTestLocation"* @__const._ZN5blink12LayoutInline19HitTestCulledInlineERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetEPKNS_14NGInlineCursorE.adjusted_location to i8*), i64 72, i1 false)
  %38 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %39 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = tail call i1 @llvm.is.constant.i32(i32 %40) #13
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = sub i32 0, %40
  %44 = icmp eq i32 %43, -2147483648
  %45 = select i1 %44, i32 2147483647, i32 %43
  br label %51

46:                                               ; preds = %35
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %40) #13
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 2147483647, i32 %49
  br label %51

51:                                               ; preds = %46, %42
  %52 = phi i32 [ %45, %42 ], [ %50, %46 ]
  %53 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = tail call i1 @llvm.is.constant.i32(i32 %54) #13
  br i1 %55, label %56, label %60

56:                                               ; preds = %51
  %57 = sub i32 0, %54
  %58 = icmp eq i32 %57, -2147483648
  %59 = select i1 %58, i32 2147483647, i32 %57
  br label %65

60:                                               ; preds = %51
  %61 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %54) #13
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 2147483647, i32 %63
  br label %65

65:                                               ; preds = %56, %60
  %66 = phi i32 [ %59, %56 ], [ %64, %60 ]
  %67 = zext i32 %66 to i64
  %68 = shl nuw i64 %67, 32
  %69 = zext i32 %52 to i64
  %70 = or i64 %68, %69
  store i64 %70, i64* %10, align 8
  call void @_ZN5blink15HitTestLocationC1ERKS0_RKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* nonnull %9, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  %71 = bitcast %"class.blink::Region"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %71) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 304, i1 false)
  call void @_ZN5blink6RegionC1Ev(%"class.blink::Region"* nonnull %11) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #13
  store i8 0, i8* %12, align 1
  %72 = bitcast %class.anon.2299* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13
  %73 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %13, i64 0, i32 0
  %74 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %13, i64 0, i32 1
  %75 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %13, i64 0, i32 2
  store %"class.blink::HitTestLocation"* %9, %"class.blink::HitTestLocation"** %73, align 8
  store %"class.blink::Region"* %11, %"class.blink::Region"** %74, align 8
  store i8* %12, i8** %75, align 8
  %76 = icmp eq %"class.blink::NGInlineCursor"* %4, null
  br i1 %76, label %189, label %77

77:                                               ; preds = %65
  %78 = bitcast %"class.blink::NGInlineCursor"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %78) #13
  %79 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %79, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %14, %"class.blink::LayoutObject"* dereferenceable(88) %18) #13
  %80 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %14, i64 0, i32 0, i32 0
  %81 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %80, align 8
  %82 = icmp eq %"class.blink::NGFragmentItem"* %81, null
  br i1 %82, label %188, label %83

83:                                               ; preds = %77
  %84 = bitcast <2 x i64>* %15 to i8*
  %85 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %86 = bitcast { i64, i64 }* %7 to %"class.blink::IntRect"*
  %87 = bitcast %"class.blink::Region"* %6 to i8*
  %88 = bitcast { i64, i64 }* %7 to i8*
  %89 = bitcast <2 x i64>* %15 to i32*
  %90 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %17, i64 0, i32 0, i32 1, i32 0
  %91 = bitcast i64* %85 to i32*
  %92 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %17, i64 0, i32 1, i32 1, i32 0
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %95 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1
  %96 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %96, i64 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %100 = bitcast i8* %99 to %"struct.blink::Region::Span"*
  %101 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %96, i64 0, i32 0
  %102 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %103 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %105 = bitcast i8* %104 to i32*
  %106 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %95, i64 0, i32 0, i32 0
  br label %107

107:                                              ; preds = %83, %185
  %108 = phi %"class.blink::NGFragmentItem"* [ %81, %83 ], [ %186, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #13
  %109 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %108, i64 0, i32 2
  %110 = bitcast %"struct.blink::PhysicalRect"* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 4
  store <2 x i64> %111, <2 x i64>* %15, align 16
  %112 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %73, align 8
  %113 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %112, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %17) #13
  br i1 %113, label %114, label %185

114:                                              ; preds = %107
  %115 = load i8*, i8** %75, align 8
  store i8 1, i8* %115, align 1
  %116 = load %"class.blink::Region"*, %"class.blink::Region"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %87) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #13
  %117 = load i32, i32* %89, align 16
  %118 = icmp slt i32 %117, -2147483584
  %119 = ashr i32 %117, 6
  %120 = select i1 %118, i32 -33554432, i32 %119, !prof !3
  %121 = load i32, i32* %90, align 4
  %122 = icmp slt i32 %121, -2147483584
  %123 = ashr i32 %121, 6
  %124 = select i1 %122, i32 -33554432, i32 %123, !prof !3
  %125 = zext i32 %124 to i64
  %126 = shl nuw i64 %125, 32
  %127 = load i32, i32* %91, align 8
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %127) #13
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !3
  %134 = load i32, i32* %92, align 4
  %135 = icmp slt i32 %134, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %121, i32 %134) #13
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !3
  %141 = icmp sgt i32 %133, 2147483583
  br i1 %141, label %149, label %142, !prof !3

142:                                              ; preds = %114
  %143 = icmp sgt i32 %133, -1
  br i1 %143, label %144, label %147

144:                                              ; preds = %142
  %145 = add nuw nsw i32 %133, 63
  %146 = sdiv i32 %145, 64
  br label %149

147:                                              ; preds = %142
  %148 = sdiv i32 %133, 64
  br label %149

149:                                              ; preds = %147, %144, %114
  %150 = phi i32 [ %146, %144 ], [ %148, %147 ], [ 33554431, %114 ]
  %151 = icmp sgt i32 %140, 2147483583
  br i1 %151, label %159, label %152, !prof !3

152:                                              ; preds = %149
  %153 = icmp sgt i32 %140, -1
  br i1 %153, label %154, label %157

154:                                              ; preds = %152
  %155 = add nuw nsw i32 %140, 63
  %156 = sdiv i32 %155, 64
  br label %159

157:                                              ; preds = %152
  %158 = sdiv i32 %140, 64
  br label %159

159:                                              ; preds = %149, %154, %157
  %160 = phi i32 [ %156, %154 ], [ %158, %157 ], [ 33554431, %149 ]
  %161 = sub nsw i32 %150, %120
  %162 = sub nsw i32 %160, %124
  %163 = zext i32 %162 to i64
  %164 = shl nuw i64 %163, 32
  %165 = zext i32 %161 to i64
  %166 = or i64 %164, %165
  %167 = zext i32 %120 to i64
  %168 = or i64 %126, %167
  store i64 %168, i64* %93, align 8
  store i64 %166, i64* %94, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %6, %"class.blink::IntRect"* nonnull dereferenceable(16) %86) #13
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %116, %"class.blink::Region"* nonnull dereferenceable(304) %6) #13
  %169 = load i32, i32* %97, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !3

171:                                              ; preds = %159
  store i32 0, i32* %97, align 4
  br label %172

172:                                              ; preds = %171, %159
  %173 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %98, align 8
  %174 = icmp eq %"struct.blink::Region::Span"* %173, %100
  br i1 %174, label %176, label %175, !prof !4

175:                                              ; preds = %172
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %101, %"struct.blink::Region::Span"* %173) #13
  br label %176

176:                                              ; preds = %175, %172
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %98, align 8
  %177 = load i32, i32* %102, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %180, label %179, !prof !3

179:                                              ; preds = %176
  store i32 0, i32* %102, align 4
  br label %180

180:                                              ; preds = %179, %176
  %181 = load i32*, i32** %103, align 8
  %182 = icmp eq i32* %181, %105
  br i1 %182, label %184, label %183, !prof !4

183:                                              ; preds = %180
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %106, i32* %181) #13
  br label %184

184:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %87) #13
  br label %185

185:                                              ; preds = %107, %184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #13
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %14) #13
  %186 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %80, align 8
  %187 = icmp eq %"class.blink::NGFragmentItem"* %186, null
  br i1 %187, label %188, label %107

188:                                              ; preds = %185, %77
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %78) #13
  br label %204

189:                                              ; preds = %65
  %190 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %191 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %190, i64 0, i32 0, i32 9
  %192 = bitcast [20 x i8]* %191 to i160*
  %193 = load i160, i160* %192, align 8
  %194 = and i160 %193, 15211807202738752817960438464512
  %195 = icmp eq i160 %194, 5070602400912917605986812821504
  br i1 %195, label %196, label %198, !prof !3

196:                                              ; preds = %189
  %197 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %18, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  br label %198

198:                                              ; preds = %189, %196
  %199 = phi %"class.blink::LayoutBlock"* [ %197, %196 ], [ null, %189 ]
  %200 = bitcast %class.anon.2415* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #13
  %201 = getelementptr inbounds %class.anon.2415, %class.anon.2415* %8, i64 0, i32 0
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %201, align 8
  %202 = getelementptr inbounds %class.anon.2415, %class.anon.2415* %8, i64 0, i32 1
  store %"class.blink::LayoutBlock"* %199, %"class.blink::LayoutBlock"** %202, align 8
  %203 = getelementptr inbounds %class.anon.2415, %class.anon.2415* %8, i64 0, i32 2
  store %class.anon.2299* %13, %class.anon.2299** %203, align 8
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNS0_19HitTestCulledInlineERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetEPKNS_14NGInlineCursorEE3$_2EEvRKT_EUlRKNS_10LayoutRectEE_EEvSH_PKS0_"(%"class.blink::LayoutInline"* %0, %class.anon.2415* nonnull dereferenceable(24) %8, %"class.blink::LayoutInline"* %0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #13
  br label %204

204:                                              ; preds = %198, %188
  %205 = load i8, i8* %12, align 1, !range !2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %223, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %9, i64 0, i32 0
  call void @_ZNK5blink12LayoutInline19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutInline"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %208)
  %209 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %210 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %209 to i96*
  %211 = load i96, i96* %210, align 4
  %212 = and i96 %211, 16777216
  %213 = icmp eq i96 %212, 0
  br i1 %213, label %214, label %218

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %216 = bitcast %"class.blink::Node"** %215 to %"class.blink::Element"**
  %217 = load %"class.blink::Element"*, %"class.blink::Element"** %216, align 8
  br label %218

218:                                              ; preds = %207, %214
  %219 = phi %"class.blink::Element"* [ %217, %214 ], [ null, %207 ]
  %220 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %219, i64 0, i32 0, i32 0
  %221 = call i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_6RegionE(%"class.blink::HitTestResult"* %1, %"class.blink::Node"* %220, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %9, %"class.blink::Region"* nonnull dereferenceable(304) %11) #13
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %224, label %223

223:                                              ; preds = %204, %218
  br label %224

224:                                              ; preds = %218, %223
  %225 = phi i1 [ false, %223 ], [ true, %218 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #13
  %226 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %11, i64 0, i32 1
  %227 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %11, i64 0, i32 1, i32 1
  %228 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %232, label %231, !prof !3

231:                                              ; preds = %224
  store i32 0, i32* %228, align 4
  br label %232

232:                                              ; preds = %231, %224
  %233 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %227, i64 0, i32 0, i32 0, i32 0
  %234 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %11, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %236 = bitcast i8* %235 to %"struct.blink::Region::Span"*
  %237 = icmp eq %"struct.blink::Region::Span"* %234, %236
  br i1 %237, label %240, label %238, !prof !4

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %227, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %239, %"struct.blink::Region::Span"* %234) #13
  br label %240

240:                                              ; preds = %238, %232
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %233, align 8
  %241 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %245, label %244, !prof !3

244:                                              ; preds = %240
  store i32 0, i32* %241, align 4
  br label %245

245:                                              ; preds = %244, %240
  %246 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %226, i64 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %11, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %249 = bitcast i8* %248 to i32*
  %250 = icmp eq i32* %247, %249
  br i1 %250, label %253, label %251, !prof !4

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %226, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %252, i32* %247) #13
  br label %253

253:                                              ; preds = %245, %251
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %37) #13
  br label %254

254:                                              ; preds = %27, %5, %253
  %255 = phi i1 [ %225, %253 ], [ false, %5 ], [ false, %27 ]
  ret i1 %255
}

declare void @_ZN5blink15HitTestLocationC1ERKS0_RKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink6RegionC1Ev(%"class.blink::Region"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutInline"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %195

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 16777216
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %14, label %195

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %16 = bitcast %"class.blink::Node"** %15 to %"class.blink::Element"**
  %17 = load %"class.blink::Element"*, %"class.blink::Element"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %17, i64 0, i32 0, i32 0
  %19 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = icmp eq %"class.blink::Element"* %17, null
  br i1 %24, label %195, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %17, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %17, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %29, label %35, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRareData"**
  %33 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %33, i64 0, i32 1, i32 0, i32 0
  br label %37

35:                                               ; preds = %25
  %36 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRenderingData"**
  br label %37

37:                                               ; preds = %35, %31
  %38 = phi %"class.blink::NodeRenderingData"** [ %34, %31 ], [ %36, %35 ]
  %39 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %39, i64 0, i32 1
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp ne %"class.blink::LayoutObject"* %41, %4
  %43 = and i96 %11, 134217728
  %44 = icmp ne i96 %43, 0
  %45 = and i1 %44, %42
  br i1 %45, label %46, label %186

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %17, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %29, label %52, label %48

48:                                               ; preds = %46
  %49 = bitcast %"class.blink::NodeData"** %47 to %"class.blink::NodeRareData"**
  %50 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %50, i64 0, i32 1, i32 0, i32 0
  br label %54

52:                                               ; preds = %46
  %53 = bitcast %"class.blink::NodeData"** %47 to %"class.blink::NodeRenderingData"**
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi %"class.blink::NodeRenderingData"** [ %51, %48 ], [ %53, %52 ]
  %56 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %56, i64 0, i32 1
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %58, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %60 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %61 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %60, i64 0, i32 0
  %62 = bitcast %"class.blink::LayoutBlock"* %60 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %63 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %63, i64 147
  %65 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %64, align 8
  %66 = tail call %"class.blink::LayoutBox"* %65(%"class.blink::LayoutBox"* %61) #13
  %67 = icmp eq %"class.blink::LayoutBox"* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %54
  %69 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 0, i32 0, i32 5, i32 0
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 5070602400912917605986812821504
  br i1 %75, label %81, label %76, !prof !3

76:                                               ; preds = %68, %54
  %77 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %60, i64 0, i32 0, i32 2
  %78 = bitcast %"class.blink::LayoutRect"* %77 to i64*
  %79 = load i64, i64* %78, align 4
  %80 = trunc i64 %79 to i32
  br label %106

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %66, i64 0, i32 2, i32 1
  %83 = bitcast %"class.blink::LayoutSize"* %82 to i64*
  %84 = load i64, i64* %83, align 4
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %60, i64 0, i32 0, i32 2, i32 1
  %87 = bitcast %"class.blink::LayoutSize"* %86 to i64*
  %88 = load i64, i64* %87, align 4
  %89 = trunc i64 %88 to i32
  %90 = icmp sgt i32 %89, -1
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %85, i32 %89) #13
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !3
  %96 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %60, i64 0, i32 0, i32 2
  %97 = bitcast %"class.blink::LayoutRect"* %96 to i64*
  %98 = load i64, i64* %97, align 4
  %99 = trunc i64 %98 to i32
  %100 = icmp sgt i32 %99, -1
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %95, i32 %99) #13
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !3
  br label %106

106:                                              ; preds = %76, %81
  %107 = phi i32 [ %80, %76 ], [ %105, %81 ]
  %108 = phi i64 [ %79, %76 ], [ %98, %81 ]
  %109 = lshr i64 %108, 32
  %110 = trunc i64 %109 to i32
  %111 = icmp slt i32 %107, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %107) #13
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !3
  %117 = icmp slt i32 %110, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %110) #13
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !3
  %123 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0
  %124 = bitcast %"class.blink::LayoutBlock"* %59 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %125 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %124, align 8
  %126 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %125, i64 147
  %127 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %126, align 8
  %128 = tail call %"class.blink::LayoutBox"* %127(%"class.blink::LayoutBox"* %123) #13
  %129 = icmp eq %"class.blink::LayoutBox"* %128, null
  br i1 %129, label %138, label %130

130:                                              ; preds = %106
  %131 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %128, i64 0, i32 0, i32 0, i32 5, i32 0
  %132 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %132, i64 0, i32 0, i32 9
  %134 = bitcast [20 x i8]* %133 to i160*
  %135 = load i160, i160* %134, align 8
  %136 = and i160 %135, 15211807202738752817960438464512
  %137 = icmp eq i160 %136, 5070602400912917605986812821504
  br i1 %137, label %143, label %138, !prof !3

138:                                              ; preds = %130, %106
  %139 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0, i32 2
  %140 = bitcast %"class.blink::LayoutRect"* %139 to i64*
  %141 = load i64, i64* %140, align 4
  %142 = trunc i64 %141 to i32
  br label %168

143:                                              ; preds = %130
  %144 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %128, i64 0, i32 2, i32 1
  %145 = bitcast %"class.blink::LayoutSize"* %144 to i64*
  %146 = load i64, i64* %145, align 4
  %147 = trunc i64 %146 to i32
  %148 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0, i32 2, i32 1
  %149 = bitcast %"class.blink::LayoutSize"* %148 to i64*
  %150 = load i64, i64* %149, align 4
  %151 = trunc i64 %150 to i32
  %152 = icmp sgt i32 %151, -1
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %147, i32 %151) #13
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  %158 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0, i32 2
  %159 = bitcast %"class.blink::LayoutRect"* %158 to i64*
  %160 = load i64, i64* %159, align 4
  %161 = trunc i64 %160 to i32
  %162 = icmp sgt i32 %161, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %161) #13
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !3
  br label %168

168:                                              ; preds = %138, %143
  %169 = phi i32 [ %142, %138 ], [ %167, %143 ]
  %170 = phi i64 [ %141, %138 ], [ %160, %143 ]
  %171 = lshr i64 %170, 32
  %172 = trunc i64 %171 to i32
  %173 = icmp sgt i32 %169, -1
  %174 = select i1 %173, i32 -2147483648, i32 2147483647
  %175 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %116, i32 %169) #13
  %176 = extractvalue { i32, i1 } %175, 1
  %177 = extractvalue { i32, i1 } %175, 0
  %178 = select i1 %176, i32 %174, i32 %177, !prof !3
  %179 = icmp sgt i32 %172, -1
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %122, i32 %172) #13
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !3
  %185 = zext i32 %178 to i64
  br label %186

186:                                              ; preds = %37, %168
  %187 = phi i64 [ %185, %168 ], [ %20, %37 ]
  %188 = phi i32 [ %184, %168 ], [ %23, %37 ]
  %189 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 7
  %190 = bitcast %"struct.blink::PhysicalOffset"* %189 to i64*
  %191 = zext i32 %188 to i64
  %192 = shl nuw i64 %191, 32
  %193 = and i64 %187, 4294967295
  %194 = or i64 %192, %193
  store i64 %194, i64* %190, align 8
  tail call void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"* %1, %"class.blink::Node"* %18) #13
  br label %195

195:                                              ; preds = %8, %186, %14, %3
  ret void
}

declare i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_6RegionE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"class.blink::Region"* dereferenceable(304)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutInline"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %1, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %1, i64 0, i32 0
  %6 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %5) #13
  %7 = icmp eq %"class.blink::LayoutBoxModelObject"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3, %32
  %9 = phi %"class.blink::LayoutBoxModelObject"* [ %35, %32 ], [ %6, %3 ]
  %10 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %9, i64 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 134217728
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %16, label %27

16:                                               ; preds = %8
  %17 = bitcast %"class.blink::LayoutBoxModelObject"* %9 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %18 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %18, i64 13
  %20 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %19, align 8
  %21 = tail call %"class.blink::LayoutObjectChildList"* %20(%"class.blink::LayoutObject"* %10) #13
  %22 = icmp eq %"class.blink::LayoutObjectChildList"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %21, i64 0, i32 0
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %8, %23
  %28 = bitcast %"class.blink::LayoutBoxModelObject"* %9 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)***
  %29 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %29, i64 64
  %31 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %30, align 8
  tail call void %31(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %10, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #13
  br label %75

32:                                               ; preds = %16, %23
  %33 = bitcast %"class.blink::LayoutBoxModelObject"* %9 to %"class.blink::LayoutBlockFlow"*
  %34 = tail call %"class.blink::LayoutInline"* @_ZNK5blink15LayoutBlockFlow25InlineElementContinuationEv(%"class.blink::LayoutBlockFlow"* nonnull %33) #13
  %35 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %34, i64 0, i32 0
  %36 = icmp eq %"class.blink::LayoutInline"* %34, null
  br i1 %36, label %37, label %8

37:                                               ; preds = %32, %3
  %38 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %4) #13
  %39 = icmp eq %"class.blink::LayoutBlockFlow"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.blink::LayoutBlockFlow"* %38 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)***
  %42 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)** %42, i64 64
  %44 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)** %43, align 8
  tail call void %44(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlockFlow"* nonnull %38, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #13
  br label %75

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %1, i64 0, i32 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 70369012613120
  %50 = icmp eq i96 %49, 70368744177664
  br i1 %50, label %51, label %63

51:                                               ; preds = %45
  %52 = and i96 %48, 268435456
  %53 = icmp eq i96 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %58

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %1, i64 0, i32 2, i32 0
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi %"class.blink::LineBoxList"* [ %55, %54 ], [ %57, %56 ]
  %60 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %61, i64 0, i32 0
  br label %65

63:                                               ; preds = %45
  %64 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %1) #13
  br label %65

65:                                               ; preds = %58, %63
  %66 = phi %"class.blink::InlineBox"* [ %62, %58 ], [ %64, %63 ]
  %67 = icmp eq %"class.blink::InlineBox"* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %65
  %69 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %70 = bitcast %"class.blink::LayoutBlock"* %69 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)***
  %71 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)** %71, i64 64
  %73 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)** %72, align 8
  tail call void %73(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlock"* %69, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #13
  br label %75

74:                                               ; preds = %65
  tail call void @_ZNK5blink12LayoutObject16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %4, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #13
  br label %75

75:                                               ; preds = %40, %74, %68, %27
  ret void
}

declare void @_ZNK5blink12LayoutObject16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.anon.2416, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca %"class.blink::NGInlineCursor", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.blink::PhysicalRect"*
  %8 = alloca %class.anon.2300, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 268435456
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::NGInlineCursor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 112, i1 false)
  %17 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %5, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 81, i1 false) #13
  %18 = bitcast %"class.blink::LayoutBlockFlow"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %5, %"class.blink::LayoutObject"* dereferenceable(88) %9) #13
  %19 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #13
  %20 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %5, i64 0, i32 0, i32 0
  %21 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %20, align 8
  %22 = icmp eq %"class.blink::NGFragmentItem"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15
  %24 = bitcast <2 x i64>* %6 to i8*
  br label %25

25:                                               ; preds = %23, %25
  %26 = phi %"class.blink::NGFragmentItem"* [ %21, %23 ], [ %30, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %27 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %26, i64 0, i32 2
  %28 = bitcast %"struct.blink::PhysicalRect"* %27 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 4
  store <2 x i64> %29, <2 x i64>* %6, align 16
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %5) #13
  %30 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %20, align 8
  %31 = icmp eq %"class.blink::NGFragmentItem"* %30, null
  br i1 %31, label %32, label %25

32:                                               ; preds = %25, %15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #13
  br label %291

33:                                               ; preds = %1
  %34 = and i96 %12, 70369012613120
  %35 = icmp eq i96 %34, 70368744177664
  br i1 %35, label %55, label %36

36:                                               ; preds = %33
  %37 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #13
  %38 = bitcast %class.anon.2300* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  %39 = bitcast %class.anon.2300* %8 to { i64, i64 }**
  store { i64, i64 }* %3, { i64, i64 }** %39, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = and i160 %44, 15211807202738752817960438464512
  %46 = icmp eq i160 %45, 5070602400912917605986812821504
  br i1 %46, label %47, label %49, !prof !3

47:                                               ; preds = %36
  %48 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi %"class.blink::LayoutBlock"* [ %48, %47 ], [ null, %36 ]
  %51 = bitcast %class.anon.2416* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #13
  %52 = getelementptr inbounds %class.anon.2416, %class.anon.2416* %2, i64 0, i32 0
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %52, align 8
  %53 = getelementptr inbounds %class.anon.2416, %class.anon.2416* %2, i64 0, i32 1
  store %"class.blink::LayoutBlock"* %50, %"class.blink::LayoutBlock"** %53, align 8
  %54 = getelementptr inbounds %class.anon.2416, %class.anon.2416* %2, i64 0, i32 2
  store %class.anon.2300* %8, %class.anon.2300** %54, align 8
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_24PhysicalLinesBoundingBoxEvE3$_3EEvRKT_EUlRKNS_10LayoutRectEE_EEvS6_PKS0_"(%"class.blink::LayoutInline"* %0, %class.anon.2416* nonnull dereferenceable(24) %2, %"class.blink::LayoutInline"* %0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %291

55:                                               ; preds = %33
  %56 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %57 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %56, align 8
  %58 = icmp eq %"class.blink::InlineFlowBox"* %57, null
  br i1 %58, label %261, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %61 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %60, align 8
  %62 = icmp eq %"class.blink::InlineFlowBox"* %61, null
  br i1 %62, label %261, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %75

65:                                               ; preds = %153
  %66 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 9
  %69 = bitcast [20 x i8]* %68 to i160*
  %70 = load i160, i160* %69, align 8
  %71 = and i160 %70, 15211807202738752817960438464512
  %72 = icmp eq i160 %71, 0
  %73 = and i96 %158, 268435456
  %74 = icmp eq i96 %73, 0
  br i1 %72, label %165, label %159

75:                                               ; preds = %153, %63
  %76 = phi i96 [ %12, %63 ], [ %158, %153 ]
  %77 = phi %"class.blink::InlineFlowBox"* [ %57, %63 ], [ %156, %153 ]
  %78 = phi i32 [ 0, %63 ], [ %106, %153 ]
  %79 = phi i32 [ 0, %63 ], [ %154, %153 ]
  %80 = and i96 %76, 268435456
  %81 = icmp eq i96 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %75
  %83 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %84

84:                                               ; preds = %75, %82
  %85 = phi %"class.blink::LineBoxList"* [ %83, %82 ], [ %64, %75 ]
  %86 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %86, align 8
  %88 = icmp eq %"class.blink::InlineFlowBox"* %77, %87
  %89 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 7, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 2048
  br i1 %88, label %99, label %92

92:                                               ; preds = %84
  %93 = icmp eq i32 %91, 0
  %94 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 0, i32 0
  %95 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 1, i32 0
  %96 = select i1 %93, i32* %95, i32* %94
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, %78
  br i1 %98, label %99, label %105

99:                                               ; preds = %84, %92
  %100 = icmp eq i32 %91, 0
  %101 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 0, i32 0
  %102 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 1, i32 0
  %103 = select i1 %100, i32* %102, i32* %101
  %104 = load i32, i32* %103, align 4
  br label %105

105:                                              ; preds = %99, %92
  %106 = phi i32 [ %104, %99 ], [ %78, %92 ]
  %107 = load i96, i96* %11, align 4
  %108 = and i96 %107, 268435456
  %109 = icmp eq i96 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %105
  %111 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %112

112:                                              ; preds = %105, %110
  %113 = phi %"class.blink::LineBoxList"* [ %111, %110 ], [ %64, %105 ]
  %114 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %114, align 8
  %116 = icmp eq %"class.blink::InlineFlowBox"* %77, %115
  %117 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 7, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %123

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 6, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = and i32 %118, 2048
  br label %139

123:                                              ; preds = %112
  %124 = and i32 %118, 2048
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 0, i32 0
  %127 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 1, i32 0
  %128 = select i1 %125, i32* %127, i32* %126
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 6, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = icmp slt i32 %131, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %131) #13
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !3
  %138 = icmp sgt i32 %137, %79
  br i1 %138, label %139, label %153

139:                                              ; preds = %119, %123
  %140 = phi i32 [ %122, %119 ], [ %124, %123 ]
  %141 = phi i32 [ %121, %119 ], [ %131, %123 ]
  %142 = icmp eq i32 %140, 0
  %143 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 0, i32 0
  %144 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 0, i32 5, i32 1, i32 0
  %145 = select i1 %142, i32* %144, i32* %143
  %146 = load i32, i32* %145, align 4
  %147 = icmp slt i32 %141, 0
  %148 = select i1 %147, i32 -2147483648, i32 2147483647
  %149 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %146, i32 %141) #13
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %148, i32 %151, !prof !3
  br label %153

153:                                              ; preds = %139, %123
  %154 = phi i32 [ %152, %139 ], [ %79, %123 ]
  %155 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %77, i64 0, i32 5
  %156 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %155, align 8
  %157 = icmp eq %"class.blink::InlineFlowBox"* %156, null
  %158 = load i96, i96* %11, align 4
  br i1 %157, label %65, label %75

159:                                              ; preds = %65
  br i1 %74, label %163, label %160

160:                                              ; preds = %159
  %161 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  %162 = load i96, i96* %11, align 4
  br label %171

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %171

165:                                              ; preds = %65
  br i1 %74, label %169, label %166

166:                                              ; preds = %165
  %167 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  %168 = load i96, i96* %11, align 4
  br label %184

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %184

171:                                              ; preds = %160, %163
  %172 = phi i96 [ %162, %160 ], [ %158, %163 ]
  %173 = phi %"class.blink::LineBoxList"* [ %161, %160 ], [ %164, %163 ]
  %174 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %175, i64 0, i32 0, i32 5, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = and i96 %172, 268435456
  %179 = icmp eq i96 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %171
  %181 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %229

182:                                              ; preds = %171
  %183 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %229

184:                                              ; preds = %166, %169
  %185 = phi i96 [ %168, %166 ], [ %158, %169 ]
  %186 = phi %"class.blink::LineBoxList"* [ %167, %166 ], [ %170, %169 ]
  %187 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %188, i64 0, i32 0, i32 5, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp sgt i32 %106, -1
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %106) #13
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !3
  %197 = and i96 %185, 268435456
  %198 = icmp eq i96 %197, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %184
  %200 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %203

201:                                              ; preds = %184
  %202 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %203

203:                                              ; preds = %199, %201
  %204 = phi %"class.blink::LineBoxList"* [ %200, %199 ], [ %202, %201 ]
  %205 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %204, i64 0, i32 0, i32 1
  %206 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %206, i64 0, i32 0
  %208 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %206, i64 0, i32 0, i32 7, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 2048
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %206, i64 0, i32 0, i32 5, i32 1, i32 0
  %213 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %206, i64 0, i32 0, i32 5, i32 0, i32 0
  %214 = select i1 %211, i32* %213, i32* %212
  %215 = load i32, i32* %214, align 4
  %216 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %207) #13
  %217 = icmp slt i32 %216, 0
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %215, i32 %216) #13
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !3
  %223 = icmp sgt i32 %190, -1
  %224 = select i1 %223, i32 -2147483648, i32 2147483647
  %225 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %222, i32 %190) #13
  %226 = extractvalue { i32, i1 } %225, 1
  %227 = extractvalue { i32, i1 } %225, 0
  %228 = select i1 %226, i32 %224, i32 %227, !prof !3
  br label %261

229:                                              ; preds = %180, %182
  %230 = phi %"class.blink::LineBoxList"* [ %181, %180 ], [ %183, %182 ]
  %231 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %230, i64 0, i32 0, i32 1
  %232 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %232, i64 0, i32 0
  %234 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %232, i64 0, i32 0, i32 7, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, 2048
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %232, i64 0, i32 0, i32 5, i32 1, i32 0
  %239 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %232, i64 0, i32 0, i32 5, i32 0, i32 0
  %240 = select i1 %237, i32* %239, i32* %238
  %241 = load i32, i32* %240, align 4
  %242 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %233) #13
  %243 = icmp slt i32 %242, 0
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %241, i32 %242) #13
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !3
  %249 = icmp sgt i32 %177, -1
  %250 = select i1 %249, i32 -2147483648, i32 2147483647
  %251 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %248, i32 %177) #13
  %252 = extractvalue { i32, i1 } %251, 1
  %253 = extractvalue { i32, i1 } %251, 0
  %254 = select i1 %252, i32 %250, i32 %253, !prof !3
  %255 = icmp sgt i32 %106, -1
  %256 = select i1 %255, i32 -2147483648, i32 2147483647
  %257 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %106) #13
  %258 = extractvalue { i32, i1 } %257, 1
  %259 = extractvalue { i32, i1 } %257, 0
  %260 = select i1 %258, i32 %256, i32 %259, !prof !3
  br label %261

261:                                              ; preds = %203, %229, %59, %55
  %262 = phi i32 [ 0, %55 ], [ 0, %59 ], [ %228, %203 ], [ %260, %229 ]
  %263 = phi i32 [ 0, %55 ], [ 0, %59 ], [ %196, %203 ], [ %254, %229 ]
  %264 = phi i32 [ 0, %55 ], [ 0, %59 ], [ %190, %203 ], [ %106, %229 ]
  %265 = phi i32 [ 0, %55 ], [ 0, %59 ], [ %106, %203 ], [ %177, %229 ]
  %266 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %267 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %267, i64 0, i32 0, i32 9
  %269 = bitcast [20 x i8]* %268 to i160*
  %270 = load i160, i160* %269, align 8
  %271 = and i160 %270, 15211807202738752817960438464512
  %272 = icmp eq i160 %271, 5070602400912917605986812821504
  br i1 %272, label %273, label %279, !prof !3

273:                                              ; preds = %261
  %274 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %275 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %274, align 8
  %276 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %275, i64 106
  %277 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %276, align 8
  %278 = tail call i32 %277(%"class.blink::LayoutObject"* %9, i32 %265, i32 %263, %"class.blink::LayoutBox"* null) #13
  br label %279

279:                                              ; preds = %261, %273
  %280 = phi i32 [ %278, %273 ], [ %265, %261 ]
  %281 = zext i32 %264 to i64
  %282 = shl nuw i64 %281, 32
  %283 = zext i32 %280 to i64
  %284 = or i64 %282, %283
  %285 = zext i32 %262 to i64
  %286 = shl nuw i64 %285, 32
  %287 = zext i32 %263 to i64
  %288 = or i64 %286, %287
  %289 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %284, i64* %289, align 8
  %290 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %288, i64* %290, align 8
  br label %291

291:                                              ; preds = %279, %49, %32
  %292 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %293 = load i64, i64* %292, align 8
  %294 = insertvalue { i64, i64 } undef, i64 %293, 0
  %295 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %296 = load i64, i64* %295, align 8
  %297 = insertvalue { i64, i64 } %294, i64 %296, 1
  ret { i64, i64 } %297
}

declare void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %89, label %5

5:                                                ; preds = %1, %85
  %6 = phi %"class.blink::LayoutObject"* [ %87, %85 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 8388608
  %11 = icmp ne i96 %10, 0
  %12 = and i96 %9, 113336795588871485128704
  %13 = icmp eq i96 %12, 75557863725914323419136
  %14 = or i1 %13, %11
  br i1 %14, label %85, label %15

15:                                               ; preds = %5
  %16 = and i96 %9, 67108864
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = and i96 %9, 268435456
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %21, label %89

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 2, i32 1, i32 1
  %23 = bitcast i8* %22 to %"class.blink::InlineBox"**
  %24 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %23, align 8
  br label %89

25:                                               ; preds = %15
  %26 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*)***
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 26
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* nonnull %6) #13
  %31 = load i96, i96* %8, align 4
  br i1 %30, label %32, label %54

32:                                               ; preds = %25
  %33 = and i96 %31, 70369012613120
  %34 = icmp eq i96 %33, 70368744177664
  br i1 %34, label %35, label %48

35:                                               ; preds = %32
  %36 = and i96 %31, 268435456
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 1, i32 1
  %42 = bitcast i8* %41 to %"class.blink::LineBoxList"*
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi %"class.blink::LineBoxList"* [ %39, %38 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %46, i64 0, i32 0
  br label %51

48:                                               ; preds = %32
  %49 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutInline"*
  %50 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* nonnull %49) #13
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi %"class.blink::InlineBox"* [ %47, %43 ], [ %50, %48 ]
  %53 = icmp eq %"class.blink::InlineBox"* %52, null
  br i1 %53, label %85, label %89

54:                                               ; preds = %25
  %55 = and i96 %31, 33554432
  %56 = icmp eq i96 %55, 0
  br i1 %56, label %85, label %57

57:                                               ; preds = %54
  %58 = and i96 %31, 268435456
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 6
  %64 = bitcast %"class.blink::UntracedMember"* %63 to %"class.blink::InlineTextBoxList"*
  br label %65

65:                                               ; preds = %60, %62
  %66 = phi %"class.blink::InlineTextBoxList"* [ %61, %60 ], [ %64, %62 ]
  %67 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %67, align 8
  %69 = icmp eq %"class.blink::InlineTextBox"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %72 = load i96, i96* %71, align 4
  %73 = and i96 %72, 268435456
  %74 = icmp eq i96 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %80

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 6
  %79 = bitcast %"class.blink::UntracedMember"* %78 to %"class.blink::InlineTextBoxList"*
  br label %80

80:                                               ; preds = %77, %75
  %81 = phi %"class.blink::InlineTextBoxList"* [ %76, %75 ], [ %79, %77 ]
  %82 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %83, i64 0, i32 0
  br label %89

85:                                               ; preds = %54, %65, %51, %5
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 9
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %88, label %89, label %5

89:                                               ; preds = %85, %51, %1, %21, %18, %80
  %90 = phi %"class.blink::InlineBox"* [ null, %18 ], [ %24, %21 ], [ %84, %80 ], [ null, %1 ], [ null, %85 ], [ %52, %51 ]
  ret %"class.blink::InlineBox"* %90
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline23CulledInlineLastLineBoxEv(%"class.blink::LayoutInline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %89, label %5

5:                                                ; preds = %1, %85
  %6 = phi %"class.blink::LayoutObject"* [ %87, %85 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 8388608
  %11 = icmp ne i96 %10, 0
  %12 = and i96 %9, 113336795588871485128704
  %13 = icmp eq i96 %12, 75557863725914323419136
  %14 = or i1 %13, %11
  br i1 %14, label %85, label %15

15:                                               ; preds = %5
  %16 = and i96 %9, 67108864
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = and i96 %9, 268435456
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %21, label %89

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 2, i32 1, i32 1
  %23 = bitcast i8* %22 to %"class.blink::InlineBox"**
  %24 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %23, align 8
  br label %89

25:                                               ; preds = %15
  %26 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*)***
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 26
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* nonnull %6) #13
  %31 = load i96, i96* %8, align 4
  br i1 %30, label %32, label %54

32:                                               ; preds = %25
  %33 = and i96 %31, 70369012613120
  %34 = icmp eq i96 %33, 70368744177664
  br i1 %34, label %35, label %48

35:                                               ; preds = %32
  %36 = and i96 %31, 268435456
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 1, i32 1
  %42 = bitcast i8* %41 to %"class.blink::LineBoxList"*
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi %"class.blink::LineBoxList"* [ %39, %38 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %44, i64 0, i32 0, i32 1
  %46 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %46, i64 0, i32 0
  br label %51

48:                                               ; preds = %32
  %49 = bitcast %"class.blink::LayoutObject"* %6 to %"class.blink::LayoutInline"*
  %50 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline23CulledInlineLastLineBoxEv(%"class.blink::LayoutInline"* nonnull %49) #13
  br label %51

51:                                               ; preds = %43, %48
  %52 = phi %"class.blink::InlineBox"* [ %47, %43 ], [ %50, %48 ]
  %53 = icmp eq %"class.blink::InlineBox"* %52, null
  br i1 %53, label %85, label %89

54:                                               ; preds = %25
  %55 = and i96 %31, 33554432
  %56 = icmp eq i96 %55, 0
  br i1 %56, label %85, label %57

57:                                               ; preds = %54
  %58 = and i96 %31, 268435456
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 6
  %64 = bitcast %"class.blink::UntracedMember"* %63 to %"class.blink::InlineTextBoxList"*
  br label %65

65:                                               ; preds = %60, %62
  %66 = phi %"class.blink::InlineTextBoxList"* [ %61, %60 ], [ %64, %62 ]
  %67 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %66, i64 0, i32 0, i32 1
  %68 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %67, align 8
  %69 = icmp eq %"class.blink::InlineTextBox"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %72 = load i96, i96* %71, align 4
  %73 = and i96 %72, 268435456
  %74 = icmp eq i96 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %80

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 6
  %79 = bitcast %"class.blink::UntracedMember"* %78 to %"class.blink::InlineTextBoxList"*
  br label %80

80:                                               ; preds = %77, %75
  %81 = phi %"class.blink::InlineTextBoxList"* [ %76, %75 ], [ %79, %77 ]
  %82 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %81, i64 0, i32 0, i32 1
  %83 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %83, i64 0, i32 0
  br label %89

85:                                               ; preds = %54, %65, %51, %5
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 8
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %88, label %89, label %5

89:                                               ; preds = %85, %51, %1, %21, %18, %80
  %90 = phi %"class.blink::InlineBox"* [ null, %18 ], [ %24, %21 ], [ %84, %80 ], [ null, %1 ], [ null, %85 ], [ %52, %51 ]
  ret %"class.blink::InlineBox"* %90
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline37CulledInlineVisualOverflowBoundingBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.anon.2417, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca %class.anon.2301, align 8
  %6 = alloca %"struct.blink::PhysicalRect", align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"struct.blink::PhysicalRect"*
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %"struct.blink::PhysicalRect"*
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %17 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #13
  %18 = bitcast %class.anon.2301* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = bitcast %class.anon.2301* %5 to { i64, i64 }**
  store { i64, i64 }* %3, { i64, i64 }** %19, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 5070602400912917605986812821504
  br i1 %26, label %27, label %29, !prof !3

27:                                               ; preds = %1
  %28 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  br label %29

29:                                               ; preds = %1, %27
  %30 = phi %"class.blink::LayoutBlock"* [ %28, %27 ], [ null, %1 ]
  %31 = bitcast %class.anon.2417* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %class.anon.2417, %class.anon.2417* %2, i64 0, i32 0
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %32, align 8
  %33 = getelementptr inbounds %class.anon.2417, %class.anon.2417* %2, i64 0, i32 1
  store %"class.blink::LayoutBlock"* %30, %"class.blink::LayoutBlock"** %33, align 8
  %34 = getelementptr inbounds %class.anon.2417, %class.anon.2417* %2, i64 0, i32 2
  store %class.anon.2301* %5, %class.anon.2301** %34, align 8
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_37CulledInlineVisualOverflowBoundingBoxEvE3$_4EEvRKT_EUlRKNS_10LayoutRectEE_EEvS6_PKS0_"(%"class.blink::LayoutInline"* %0, %class.anon.2417* nonnull dereferenceable(24) %2, %"class.blink::LayoutInline"* %0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %35 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %184, label %38

38:                                               ; preds = %29
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 15211807202738752817960438464512
  %44 = icmp eq i160 %43, 0
  %45 = icmp eq i160 %43, 5070602400912917605986812821504
  br i1 %45, label %46, label %50, !prof !3

46:                                               ; preds = %38
  %47 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %49 = icmp eq %"class.blink::LayoutObject"* %48, null
  br i1 %49, label %184, label %50

50:                                               ; preds = %38, %46
  %51 = phi %"class.blink::LayoutBlock"* [ %47, %46 ], [ null, %38 ]
  %52 = phi %"class.blink::LayoutObject"* [ %48, %46 ], [ %36, %38 ]
  %53 = bitcast { i64, i64 }* %7 to i8*
  %54 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %51, i64 0, i32 0
  %55 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %58 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %59 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  %63 = bitcast { i64, i64 }* %13 to i8*
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %66 = bitcast { i64, i64 }* %9 to i8*
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %69 = bitcast { i64, i64 }* %11 to i8*
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  br label %72

72:                                               ; preds = %50, %180
  %73 = phi %"class.blink::LayoutObject"* [ %52, %50 ], [ %182, %180 ]
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 4
  %75 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %74 to i96*
  %76 = load i96, i96* %75, align 4
  %77 = and i96 %76, 8388608
  %78 = icmp ne i96 %77, 0
  %79 = and i96 %76, 113336795588871485128704
  %80 = icmp eq i96 %79, 75557863725914323419136
  %81 = or i1 %80, %78
  br i1 %81, label %180, label %82

82:                                               ; preds = %72
  %83 = and i96 %76, 67108864
  %84 = icmp eq i96 %83, 0
  br i1 %84, label %149, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutBox"*
  %87 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutBoxModelObject"*
  %88 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* nonnull %87) #13
  br i1 %88, label %180, label %89

89:                                               ; preds = %85
  %90 = load i96, i96* %75, align 4
  %91 = and i96 %90, 268435456
  %92 = icmp eq i96 %91, 0
  br i1 %92, label %93, label %180

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 2, i32 1, i32 1
  %95 = bitcast i8* %94 to %"class.blink::InlineBox"**
  %96 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %95, align 8
  %97 = icmp eq %"class.blink::InlineBox"* %96, null
  br i1 %97, label %180, label %98

98:                                               ; preds = %93
  %99 = call { i64, i64 } @_ZNK5blink9LayoutBox39LogicalVisualOverflowRectForPropagationEv(%"class.blink::LayoutBox"* nonnull %86) #13
  %100 = extractvalue { i64, i64 } %99, 0
  %101 = trunc i64 %100 to i32
  %102 = lshr i64 %100, 32
  %103 = trunc i64 %102 to i32
  %104 = extractvalue { i64, i64 } %99, 1
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 1, i32 1, i32 1
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 4
  %108 = trunc i64 %107 to i32
  %109 = lshr i64 %107, 32
  %110 = trunc i64 %109 to i32
  %111 = icmp slt i32 %108, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %108) #13
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115
  %117 = icmp slt i32 %110, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %110) #13
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121
  br i1 %44, label %123, label %127

123:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #13
  store i32 %116, i32* %59, align 4
  store i32 %122, i32* %60, align 4
  %124 = trunc i64 %104 to i32
  %125 = lshr i64 %104, 32
  %126 = trunc i64 %125 to i32
  store i32 %124, i32* %61, align 4
  store i32 %126, i32* %62, align 4
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #13
  br label %180

127:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #13
  %128 = zext i32 %116 to i64
  %129 = shl nuw i64 %128, 32
  %130 = lshr i64 %104, 32
  %131 = shl i64 %104, 32
  %132 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %132, i64 0, i32 0, i32 9
  %134 = bitcast [20 x i8]* %133 to i160*
  %135 = load i160, i160* %134, align 8
  %136 = and i160 %135, 15211807202738752817960438464512
  %137 = icmp eq i160 %136, 5070602400912917605986812821504
  br i1 %137, label %138, label %144, !prof !3

138:                                              ; preds = %127
  %139 = trunc i64 %130 to i32
  %140 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %55, align 8
  %141 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %140, i64 106
  %142 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %141, align 8
  %143 = call i32 %142(%"class.blink::LayoutObject"* %15, i32 %122, i32 %139, %"class.blink::LayoutBox"* %54) #13
  br label %144

144:                                              ; preds = %127, %138
  %145 = phi i32 [ %143, %138 ], [ %122, %127 ]
  %146 = zext i32 %145 to i64
  %147 = or i64 %129, %146
  %148 = or i64 %131, %130
  store i64 %147, i64* %56, align 8
  store i64 %148, i64* %57, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #13
  br label %180

149:                                              ; preds = %82
  %150 = bitcast %"class.blink::LayoutObject"* %73 to i1 (%"class.blink::LayoutObject"*)***
  %151 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, i64 26
  %153 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %152, align 8
  %154 = call zeroext i1 %153(%"class.blink::LayoutObject"* nonnull %73) #13
  br i1 %154, label %155, label %171

155:                                              ; preds = %149
  %156 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutInline"*
  %157 = load i96, i96* %75, align 4
  %158 = and i96 %157, 70369012613120
  %159 = icmp eq i96 %158, 70368744177664
  br i1 %159, label %164, label %160

160:                                              ; preds = %155
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #13
  %161 = call { i64, i64 } @_ZNK5blink12LayoutInline37CulledInlineVisualOverflowBoundingBoxEv(%"class.blink::LayoutInline"* nonnull %156)
  %162 = extractvalue { i64, i64 } %161, 0
  store i64 %162, i64* %67, align 8
  %163 = extractvalue { i64, i64 } %161, 1
  store i64 %163, i64* %68, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #13
  br label %180

164:                                              ; preds = %155
  %165 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutBoxModelObject"*
  %166 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* nonnull %165) #13
  br i1 %166, label %180, label %167

167:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #13
  %168 = call { i64, i64 } @_ZNK5blink12LayoutInline26PhysicalVisualOverflowRectEv(%"class.blink::LayoutInline"* nonnull %156)
  %169 = extractvalue { i64, i64 } %168, 0
  store i64 %169, i64* %70, align 8
  %170 = extractvalue { i64, i64 } %168, 1
  store i64 %170, i64* %71, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #13
  br label %180

171:                                              ; preds = %149
  %172 = load i96, i96* %75, align 4
  %173 = and i96 %172, 33554432
  %174 = icmp eq i96 %173, 0
  br i1 %174, label %180, label %175

175:                                              ; preds = %171
  %176 = bitcast %"class.blink::LayoutObject"* %73 to %"class.blink::LayoutText"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #13
  %177 = call { i64, i64 } @_ZNK5blink10LayoutText26PhysicalVisualOverflowRectEv(%"class.blink::LayoutText"* nonnull %176) #13
  %178 = extractvalue { i64, i64 } %177, 0
  store i64 %178, i64* %64, align 8
  %179 = extractvalue { i64, i64 } %177, 1
  store i64 %179, i64* %65, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #13
  br label %180

180:                                              ; preds = %171, %89, %123, %144, %160, %167, %164, %85, %93, %175, %72
  %181 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 9
  %182 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %181, align 8
  %183 = icmp eq %"class.blink::LayoutObject"* %182, null
  br i1 %183, label %184, label %72

184:                                              ; preds = %180, %46, %29
  %185 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = insertvalue { i64, i64 } undef, i64 %186, 0
  %188 = load i64, i64* %16, align 8
  %189 = insertvalue { i64, i64 } %187, i64 %188, 1
  ret { i64, i64 } %189
}

declare { i64, i64 } @_ZNK5blink9LayoutBox39LogicalVisualOverflowRectForPropagationEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline26PhysicalVisualOverflowRectEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca %"class.WTF::Vector.2294", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %11 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %13 = tail call { i64, i64 } @_ZNK5blink12LayoutInline30LinesVisualOverflowBoundingBoxEv(%"class.blink::LayoutInline"* %0)
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %15 = extractvalue { i64, i64 } %13, 0
  store i64 %15, i64* %14, align 8
  %16 = extractvalue { i64, i64 } %13, 1
  store i64 %16, i64* %12, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = tail call i32 @_ZNK5blink13ComputedStyle19OutlineOutsetExtentEv(%"class.blink::ComputedStyle"* %18) #13
  %20 = icmp sgt i32 %19, 33554431
  br i1 %20, label %26, label %21

21:                                               ; preds = %1
  %22 = icmp slt i32 %19, -33554432
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = shl i32 %19, 6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %129, label %26

26:                                               ; preds = %23, %21, %1
  %27 = phi i32 [ %24, %23 ], [ -2147483648, %21 ], [ 2147483647, %1 ]
  %28 = bitcast %"class.WTF::Vector.2294"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #13
  %31 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %41

34:                                               ; preds = %26, %34
  %35 = phi %"class.blink::LayoutObject"* [ %37, %34 ], [ %11, %26 ]
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 7
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %34, label %41

41:                                               ; preds = %34, %26
  %42 = phi %"class.blink::Node"* [ %32, %26 ], [ %39, %34 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 33
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 2
  br i1 %49, label %50, label %61

50:                                               ; preds = %41
  %51 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %53 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %55, i64 0, i32 39
  %57 = load i32, i32* %56, align 4
  %58 = lshr i32 %57, 27
  %59 = and i32 %58, 1
  %60 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  call void @_ZNK5blink20LayoutBoxModelObject32AddOutlineRectsForNormalChildrenERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"* %60, %"class.WTF::Vector.2294"* nonnull dereferenceable(16) %4, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 %59) #13
  call void @_ZNK5blink12LayoutInline31AddOutlineRectsForContinuationsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"* %0, %"class.WTF::Vector.2294"* nonnull dereferenceable(16) %4, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 %59) #13
  br label %71

61:                                               ; preds = %41
  %62 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %64, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %66, i64 0, i32 39
  %68 = load i32, i32* %67, align 4
  %69 = lshr i32 %68, 27
  %70 = and i32 %69, 1
  call void @_ZNK5blink12LayoutInline15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"* %0, %"class.WTF::Vector.2294"* nonnull dereferenceable(16) %4, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, i32 %70)
  br label %71

71:                                               ; preds = %61, %50
  %72 = phi i8* [ %62, %61 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  %73 = load i32, i32* %30, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %117, label %75

75:                                               ; preds = %71
  %76 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #13
  %77 = bitcast { i64, i64 }* %9 to i32*
  %78 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %80 = bitcast i64* %79 to i32*
  %81 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 1, i32 1, i32 0
  %82 = call { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2294"* nonnull dereferenceable(16) %4) #13
  %83 = extractvalue { i64, i64 } %82, 0
  %84 = extractvalue { i64, i64 } %82, 1
  %85 = lshr i64 %83, 32
  %86 = trunc i64 %85 to i32
  %87 = icmp sgt i32 %27, -1
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %86, i32 %27) #13
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !3
  store i32 %92, i32* %78, align 4
  %93 = trunc i64 %83 to i32
  %94 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %93, i32 %27) #13
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %88, i32 %96, !prof !3
  store i32 %97, i32* %77, align 8
  %98 = icmp slt i32 %27, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %27) #13
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  %104 = trunc i64 %84 to i32
  %105 = icmp slt i32 %103, 0
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %104, i32 %103) #13
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !3
  store i32 %110, i32* %80, align 8
  %111 = lshr i64 %84, 32
  %112 = trunc i64 %111 to i32
  %113 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %103) #13
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %106, i32 %115, !prof !3
  store i32 %116, i32* %81, align 4
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #13
  br label %117

117:                                              ; preds = %75, %71
  %118 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %29, align 8
  %119 = icmp eq %"struct.blink::PhysicalRect"* %118, null
  %120 = bitcast %"struct.blink::PhysicalRect"* %118 to i8*
  br i1 %119, label %126, label %121, !prof !4

121:                                              ; preds = %117
  %122 = load i32, i32* %30, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %125, label %124, !prof !3

124:                                              ; preds = %121
  store i32 0, i32* %30, align 4
  br label %125

125:                                              ; preds = %124, %121
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %120) #13
  store %"struct.blink::PhysicalRect"* null, %"struct.blink::PhysicalRect"** %29, align 8
  br label %126

126:                                              ; preds = %117, %125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  %127 = load i64, i64* %14, align 8
  %128 = load i64, i64* %12, align 8
  br label %129

129:                                              ; preds = %23, %126
  %130 = phi i64 [ %16, %23 ], [ %128, %126 ]
  %131 = phi i64 [ %15, %23 ], [ %127, %126 ]
  %132 = insertvalue { i64, i64 } undef, i64 %131, 0
  %133 = insertvalue { i64, i64 } %132, i64 %130, 1
  ret { i64, i64 } %133
}

declare { i64, i64 } @_ZNK5blink10LayoutText26PhysicalVisualOverflowRectEv(%"class.blink::LayoutText"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline30LinesVisualOverflowBoundingBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 268435456
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %67, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %15 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #13
  %16 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 112, i1 false)
  %17 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 81, i1 false) #13
  %18 = bitcast %"class.blink::LayoutBlockFlow"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %7) #13
  %19 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %20 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %19, align 8
  %21 = icmp eq %"class.blink::NGFragmentItem"* %20, null
  br i1 %21, label %64, label %22

22:                                               ; preds = %13
  %23 = bitcast { i64, i64 }* %5 to i8*
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %26 = bitcast { i64, i64 }* %5 to i8*
  br label %27

27:                                               ; preds = %22, %27
  %28 = phi %"class.blink::NGFragmentItem"* [ %20, %22 ], [ %58, %27 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %29 = call { i64, i64 } @_ZNK5blink14NGFragmentItem11InkOverflowEv(%"class.blink::NGFragmentItem"* nonnull %28) #13
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  store i64 %31, i64* %24, align 8
  %32 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %19, align 8
  %33 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %32, i64 0, i32 2, i32 0
  %34 = bitcast %"struct.blink::PhysicalOffset"* %33 to i64*
  %35 = load i64, i64* %34, align 4
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = trunc i64 %30 to i32
  %40 = icmp slt i32 %36, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %36) #13
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !3
  %46 = lshr i64 %30, 32
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %38, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %38) #13
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !3
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %45 to i64
  %57 = or i64 %55, %56
  store i64 %57, i64* %25, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #13
  %58 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %19, align 8
  %59 = icmp eq %"class.blink::NGFragmentItem"* %58, null
  br i1 %59, label %60, label %27

60:                                               ; preds = %27
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = load i64, i64* %14, align 8
  br label %64

64:                                               ; preds = %60, %13
  %65 = phi i64 [ %63, %60 ], [ 0, %13 ]
  %66 = phi i64 [ %62, %60 ], [ 0, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #13
  br label %327

67:                                               ; preds = %1
  %68 = and i96 %10, 70369012613120
  %69 = icmp eq i96 %68, 70368744177664
  br i1 %69, label %76, label %70

70:                                               ; preds = %67
  %71 = tail call { i64, i64 } @_ZNK5blink12LayoutInline37CulledInlineVisualOverflowBoundingBoxEv(%"class.blink::LayoutInline"* %0)
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %73 = extractvalue { i64, i64 } %71, 0
  store i64 %73, i64* %72, align 8
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %75 = extractvalue { i64, i64 } %71, 1
  store i64 %75, i64* %74, align 8
  br label %327

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %77, align 8
  %79 = icmp eq %"class.blink::InlineFlowBox"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %82 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %81, align 8
  %83 = icmp eq %"class.blink::InlineFlowBox"* %82, null
  br i1 %83, label %84, label %207

84:                                               ; preds = %80, %76
  %85 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 16, i1 false)
  br label %327

86:                                               ; preds = %299
  %87 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %78, i64 0, i32 0
  %88 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %87) #13
  %89 = load i96, i96* %9, align 4
  %90 = and i96 %89, 268435456
  %91 = icmp eq i96 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %86
  %93 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %96

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %96

96:                                               ; preds = %92, %94
  %97 = phi %"class.blink::LineBoxList"* [ %93, %92 ], [ %95, %94 ]
  %98 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %97, i64 0, i32 0, i32 1
  %99 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %99, i64 0, i32 0
  %101 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %100) #13
  %102 = load i96, i96* %9, align 4
  %103 = and i96 %102, 268435456
  %104 = icmp eq i96 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %96
  %106 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %109

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi %"class.blink::LineBoxList"* [ %106, %105 ], [ %108, %107 ]
  %111 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %88, i64 0, i32 5, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %112, i64 0, i32 1, i32 0, i32 0, i32 0
  %116 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %115, align 8
  %117 = icmp eq %"struct.blink::SimpleOverflowModel"* %116, null
  br i1 %117, label %133, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %116, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %120 = load i8, i8* %119, align 4, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %133, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %112, i64 0, i32 0, i32 7, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, 2048
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %116, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  br label %133

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %116, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  br label %133

133:                                              ; preds = %109, %118, %127, %130
  %134 = phi i32 [ %129, %127 ], [ %132, %130 ], [ %114, %118 ], [ %114, %109 ]
  %135 = icmp sgt i32 %300, -1
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %303, i32 %300) #13
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !3
  %141 = load i96, i96* %9, align 4
  %142 = and i96 %141, 268435456
  %143 = icmp eq i96 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %133
  %145 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %148

146:                                              ; preds = %133
  %147 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %148

148:                                              ; preds = %144, %146
  %149 = phi %"class.blink::LineBoxList"* [ %145, %144 ], [ %147, %146 ]
  %150 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %149, i64 0, i32 0, i32 1
  %151 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %101, i64 0, i32 6, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %151, i64 0, i32 1, i32 0, i32 0, i32 0
  %155 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %154, align 8
  %156 = icmp eq %"struct.blink::SimpleOverflowModel"* %155, null
  br i1 %156, label %188, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 4, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %188, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %151, i64 0, i32 0, i32 7, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = and i32 %163, 2048
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %170, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %168, i32 %170) #13
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !3
  br label %188

177:                                              ; preds = %161
  %178 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = icmp slt i32 %181, 0
  %183 = select i1 %182, i32 -2147483648, i32 2147483647
  %184 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %179, i32 %181) #13
  %185 = extractvalue { i32, i1 } %184, 1
  %186 = extractvalue { i32, i1 } %184, 0
  %187 = select i1 %185, i32 %183, i32 %186, !prof !3
  br label %188

188:                                              ; preds = %148, %157, %166, %177
  %189 = phi i32 [ %176, %166 ], [ %187, %177 ], [ %153, %157 ], [ %153, %148 ]
  %190 = icmp sgt i32 %134, -1
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %189, i32 %134) #13
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !3
  %196 = zext i32 %140 to i64
  %197 = zext i32 %195 to i64
  %198 = shl nuw i64 %197, 32
  %199 = or i64 %198, %196
  %200 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %201 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %201, i64 0, i32 0, i32 9
  %203 = bitcast [20 x i8]* %202 to i160*
  %204 = load i160, i160* %203, align 8
  %205 = and i160 %204, 15211807202738752817960438464512
  %206 = icmp eq i160 %205, 0
  br i1 %206, label %317, label %307

207:                                              ; preds = %80, %299
  %208 = phi i32 [ %303, %299 ], [ -2147483648, %80 ]
  %209 = phi i32 [ %300, %299 ], [ 2147483647, %80 ]
  %210 = phi %"class.blink::InlineFlowBox"* [ %305, %299 ], [ %78, %80 ]
  %211 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 1, i32 0, i32 0, i32 0
  %212 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %211, align 8
  %213 = icmp eq %"struct.blink::SimpleOverflowModel"* %212, null
  br i1 %213, label %229, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %216 = load i8, i8* %215, align 4, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %229, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 0, i32 7, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, 2048
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %224 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = select i1 %222, i32* %223, i32* %224
  %226 = load i32, i32* %225, align 4
  %227 = icmp slt i32 %226, %209
  %228 = select i1 %227, i32 %226, i32 %209
  br label %240

229:                                              ; preds = %207, %214
  %230 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 0, i32 7, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, 2048
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 0, i32 5, i32 0, i32 0
  %235 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 0, i32 5, i32 1, i32 0
  %236 = select i1 %233, i32* %235, i32* %234
  %237 = load i32, i32* %236, align 4
  %238 = icmp slt i32 %237, %209
  %239 = select i1 %238, i32 %237, i32 %209
  br i1 %213, label %271, label %240

240:                                              ; preds = %218, %229
  %241 = phi i32 [ %228, %218 ], [ %239, %229 ]
  %242 = phi i32 [ %220, %218 ], [ %231, %229 ]
  %243 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %244 = load i8, i8* %243, align 4, !range !2
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %271, label %246

246:                                              ; preds = %240
  %247 = and i32 %242, 2048
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %260, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = icmp slt i32 %253, 0
  %255 = select i1 %254, i32 -2147483648, i32 2147483647
  %256 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %251, i32 %253) #13
  %257 = extractvalue { i32, i1 } %256, 1
  %258 = extractvalue { i32, i1 } %256, 0
  %259 = select i1 %257, i32 %255, i32 %258, !prof !3
  br label %299

260:                                              ; preds = %246
  %261 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = icmp slt i32 %264, 0
  %266 = select i1 %265, i32 -2147483648, i32 2147483647
  %267 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %262, i32 %264) #13
  %268 = extractvalue { i32, i1 } %267, 1
  %269 = extractvalue { i32, i1 } %267, 0
  %270 = select i1 %268, i32 %266, i32 %269, !prof !3
  br label %299

271:                                              ; preds = %240, %229
  %272 = phi i32 [ %241, %240 ], [ %239, %229 ]
  %273 = phi i32 [ %242, %240 ], [ %231, %229 ]
  %274 = and i32 %273, 2048
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 0, i32 5, i32 0, i32 0
  %277 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 0, i32 5, i32 1, i32 0
  %278 = select i1 %275, i32* %277, i32* %276
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 0, i32 6, i32 0
  %281 = load i32, i32* %280, align 8
  %282 = icmp slt i32 %281, 0
  %283 = select i1 %282, i32 -2147483648, i32 2147483647
  %284 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %279, i32 %281) #13
  %285 = extractvalue { i32, i1 } %284, 1
  %286 = extractvalue { i32, i1 } %284, 0
  %287 = select i1 %285, i32 %283, i32 %286, !prof !3
  %288 = icmp sgt i32 %287, 2147483583
  br i1 %288, label %296, label %289, !prof !3

289:                                              ; preds = %271
  %290 = icmp sgt i32 %287, -1
  br i1 %290, label %291, label %294

291:                                              ; preds = %289
  %292 = add nuw nsw i32 %287, 63
  %293 = sdiv i32 %292, 64
  br label %296

294:                                              ; preds = %289
  %295 = sdiv i32 %287, 64
  br label %296

296:                                              ; preds = %294, %291, %271
  %297 = phi i32 [ %293, %291 ], [ %295, %294 ], [ 33554431, %271 ]
  %298 = shl nsw i32 %297, 6
  br label %299

299:                                              ; preds = %249, %260, %296
  %300 = phi i32 [ %241, %249 ], [ %241, %260 ], [ %272, %296 ]
  %301 = phi i32 [ %259, %249 ], [ %270, %260 ], [ %298, %296 ]
  %302 = icmp slt i32 %208, %301
  %303 = select i1 %302, i32 %301, i32 %208
  %304 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %210, i64 0, i32 5
  %305 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %304, align 8
  %306 = icmp eq %"class.blink::InlineFlowBox"* %305, null
  br i1 %306, label %86, label %207

307:                                              ; preds = %188
  %308 = shl nuw i64 %196, 32
  %309 = or i64 %308, %197
  %310 = icmp eq i160 %205, 5070602400912917605986812821504
  br i1 %310, label %311, label %317, !prof !3

311:                                              ; preds = %307
  %312 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %313 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %312, align 8
  %314 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %313, i64 106
  %315 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %314, align 8
  %316 = tail call i32 %315(%"class.blink::LayoutObject"* %7, i32 %134, i32 %195, %"class.blink::LayoutBox"* null) #13
  br label %317

317:                                              ; preds = %188, %307, %311
  %318 = phi i64 [ %309, %311 ], [ %309, %307 ], [ %199, %188 ]
  %319 = phi i32 [ %300, %311 ], [ %300, %307 ], [ %134, %188 ]
  %320 = phi i32 [ %316, %311 ], [ %134, %307 ], [ %300, %188 ]
  %321 = zext i32 %319 to i64
  %322 = shl nuw i64 %321, 32
  %323 = zext i32 %320 to i64
  %324 = or i64 %322, %323
  %325 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %324, i64* %325, align 8
  %326 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %318, i64* %326, align 8
  br label %327

327:                                              ; preds = %317, %84, %70, %64
  %328 = phi i64 [ %318, %317 ], [ 0, %84 ], [ %75, %70 ], [ %65, %64 ]
  %329 = phi i64 [ %324, %317 ], [ 0, %84 ], [ %73, %70 ], [ %66, %64 ]
  %330 = insertvalue { i64, i64 } undef, i64 %329, 0
  %331 = insertvalue { i64, i64 } %330, i64 %328, 1
  ret { i64, i64 } %331
}

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutInline"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca %"class.WTF::Vector.2294", align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %9 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #13
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %11 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %10) #13
  %12 = icmp eq %"class.blink::LayoutBoxModelObject"* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = tail call { i64, i64 } @_ZNK5blink12LayoutInline26PhysicalVisualOverflowRectEv(%"class.blink::LayoutInline"* %0)
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %15, i64* %17, align 8
  store i64 %16, i64* %8, align 8
  br label %37

18:                                               ; preds = %2
  %19 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %20 = bitcast %"class.WTF::Vector.2294"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  store i64 0, i64* %6, align 8
  call void @_ZNK5blink12LayoutObject12OutlineRectsERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.WTF::Vector.2294"* nonnull sret %5, %"class.blink::LayoutObject"* %7, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %19, i32 1) #13
  %22 = call { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2294"* nonnull dereferenceable(16) %5) #13
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = extractvalue { i64, i64 } %22, 1
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %23, i64* %25, align 8
  store i64 %24, i64* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %26, align 8
  %28 = icmp eq %"struct.blink::PhysicalRect"* %27, null
  %29 = bitcast %"struct.blink::PhysicalRect"* %27 to i8*
  br i1 %28, label %36, label %30, !prof !4

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %5, i64 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %30
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %30
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %29) #13
  store %"struct.blink::PhysicalRect"* null, %"struct.blink::PhysicalRect"** %26, align 8
  br label %36

36:                                               ; preds = %18, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  br label %37

37:                                               ; preds = %36, %13
  %38 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %37, %41
  %42 = phi %"class.blink::LayoutObject"* [ %44, %41 ], [ %7, %37 ]
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 6, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %37
  %49 = phi %"class.blink::Node"* [ %39, %37 ], [ %46, %41 ]
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 113
  %55 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = call zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutBoxModelObject"* %56, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, i32 %1) #13
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = insertvalue { i64, i64 } undef, i64 %59, 0
  %61 = load i64, i64* %8, align 8
  %62 = insertvalue { i64, i64 } %60, i64 %61, 1
  ret { i64, i64 } %62
}

declare zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %9 = tail call { i64, i64 } @_ZN5blink14NGFragmentItem18LocalVisualRectForERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %8) #13
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = extractvalue { i64, i64 } %9, 1
  br label %19

12:                                               ; preds = %1
  %13 = and i96 %4, 70369012613120
  %14 = icmp eq i96 %13, 70368744177664
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = tail call { i64, i64 } @_ZNK5blink12LayoutInline26PhysicalVisualOverflowRectEv(%"class.blink::LayoutInline"* %0)
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
  br label %19

19:                                               ; preds = %12, %15, %7
  %20 = phi i64 [ %10, %7 ], [ %17, %15 ], [ 0, %12 ]
  %21 = phi i64 [ %11, %7 ], [ %18, %15 ], [ 0, %12 ]
  %22 = insertvalue { i64, i64 } undef, i64 %20, 0
  %23 = insertvalue { i64, i64 } %22, i64 %21, 1
  ret { i64, i64 } %23
}

declare { i64, i64 } @_ZN5blink14NGFragmentItem18LocalVisualRectForERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle19OutlineOutsetExtentEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline42AddOutlineRectsForChildrenAndContinuationsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"*, %"class.WTF::Vector.2294"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  tail call void @_ZNK5blink20LayoutBoxModelObject32AddOutlineRectsForNormalChildrenERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"* %5, %"class.WTF::Vector.2294"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 %3) #13
  tail call void @_ZNK5blink12LayoutInline31AddOutlineRectsForContinuationsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"* %0, %"class.WTF::Vector.2294"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"*, %"class.WTF::Vector.2294"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.anon.2422, align 8
  %6 = alloca %"struct.blink::PhysicalRect", align 8
  %7 = alloca %"struct.blink::PhysicalRect", align 8
  %8 = alloca %"class.blink::NGInlineCursor", align 8
  %9 = alloca %class.anon.2302, align 8
  %10 = bitcast %class.anon.2302* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %9, i64 0, i32 0
  store %"class.WTF::Vector.2294"* %1, %"class.WTF::Vector.2294"** %11, align 8
  %12 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %9, i64 0, i32 1
  store %"struct.blink::PhysicalOffset"* %2, %"struct.blink::PhysicalOffset"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 268435456
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %78, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.blink::NGInlineCursor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %20) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 112, i1 false) #13
  %21 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %8, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 81, i1 false) #13
  %22 = bitcast %"class.blink::LayoutBlockFlow"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor27MoveToIncludingCulledInlineERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %8, %"class.blink::LayoutObject"* dereferenceable(88) %13) #13
  %23 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %8, i64 0, i32 0, i32 0
  %24 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %23, align 8
  %25 = icmp eq %"class.blink::NGFragmentItem"* %24, null
  br i1 %25, label %77, label %26

26:                                               ; preds = %19
  %27 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %28 = bitcast %"struct.blink::PhysicalRect"* %6 to i64*
  %29 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1
  %30 = bitcast %"struct.blink::PhysicalSize"* %29 to i64*
  br label %31

31:                                               ; preds = %74, %26
  %32 = call { i64, i64 } @_ZNK5blink14NGInlineCursor22CurrentRectInBlockFlowEv(%"class.blink::NGInlineCursor"* nonnull %8) #13
  %33 = extractvalue { i64, i64 } %32, 0
  %34 = extractvalue { i64, i64 } %32, 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  store i64 %33, i64* %28, align 8
  store i64 %34, i64* %30, align 8
  %35 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %12, align 8
  %36 = trunc i64 %33 to i32
  %37 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %35, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %38) #13
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !3
  %45 = lshr i64 %33, 32
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %35, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %48) #13
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !3
  %55 = zext i32 %54 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %44 to i64
  %58 = or i64 %56, %57
  store i64 %58, i64* %28, align 8
  %59 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %11, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %59, i64 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %59, i64 0, i32 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %61, %63
  br i1 %64, label %73, label %65, !prof !3

65:                                               ; preds = %31
  %66 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %59, i64 0, i32 0, i32 0, i32 0
  %67 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %66, align 8
  %68 = zext i32 %61 to i64
  %69 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %67, i64 %68
  %70 = bitcast %"struct.blink::PhysicalRect"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* nonnull align 8 %27, i64 16, i1 false) #13
  %71 = load i32, i32* %60, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %60, align 4
  br label %74

73:                                               ; preds = %31
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %59, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #13
  br label %74

74:                                               ; preds = %73, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #13
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %8) #13
  %75 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %23, align 8
  %76 = icmp eq %"class.blink::NGFragmentItem"* %75, null
  br i1 %76, label %77, label %31

77:                                               ; preds = %74, %19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %20) #13
  br label %213

78:                                               ; preds = %4
  %79 = and i96 %16, 70369012613120
  %80 = icmp eq i96 %79, 70368744177664
  %81 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8
  %86 = and i160 %85, 15211807202738752817960438464512
  %87 = icmp eq i160 %86, 5070602400912917605986812821504
  br i1 %80, label %97, label %88

88:                                               ; preds = %78
  br i1 %87, label %89, label %91, !prof !3

89:                                               ; preds = %88
  %90 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  br label %91

91:                                               ; preds = %89, %88
  %92 = phi %"class.blink::LayoutBlock"* [ %90, %89 ], [ null, %88 ]
  %93 = bitcast %class.anon.2422* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13
  %94 = getelementptr inbounds %class.anon.2422, %class.anon.2422* %5, i64 0, i32 0
  store %"class.blink::LayoutInline"* %0, %"class.blink::LayoutInline"** %94, align 8
  %95 = getelementptr inbounds %class.anon.2422, %class.anon.2422* %5, i64 0, i32 1
  store %"class.blink::LayoutBlock"* %92, %"class.blink::LayoutBlock"** %95, align 8
  %96 = getelementptr inbounds %class.anon.2422, %class.anon.2422* %5, i64 0, i32 2
  store %class.anon.2302* %9, %class.anon.2302** %96, align 8
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS3_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeEE3$_5EEvRKT_EUlRKNS_10LayoutRectEE_EEvSG_PKS0_"(%"class.blink::LayoutInline"* %0, %class.anon.2422* nonnull dereferenceable(24) %5, %"class.blink::LayoutInline"* %0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13
  br label %213

97:                                               ; preds = %78
  br i1 %87, label %98, label %101, !prof !3

98:                                               ; preds = %97
  %99 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %100 = load i96, i96* %15, align 4
  br label %101

101:                                              ; preds = %98, %97
  %102 = phi i96 [ %100, %98 ], [ %16, %97 ]
  %103 = phi %"class.blink::LayoutBlock"* [ %99, %98 ], [ null, %97 ]
  %104 = and i96 %102, 268435456
  %105 = icmp eq i96 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101
  %107 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %110

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %110

110:                                              ; preds = %108, %106
  %111 = phi %"class.blink::LineBoxList"* [ %107, %106 ], [ %109, %108 ]
  %112 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %112, align 8
  %114 = icmp eq %"class.blink::InlineFlowBox"* %113, null
  br i1 %114, label %213, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %103, i64 0, i32 0
  %117 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %118 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  %119 = bitcast %"struct.blink::PhysicalRect"* %7 to i64*
  %120 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1
  %121 = bitcast %"struct.blink::PhysicalSize"* %120 to i64*
  br label %122

122:                                              ; preds = %209, %115
  %123 = phi %"class.blink::InlineFlowBox"* [ %113, %115 ], [ %211, %209 ]
  %124 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %123, i64 0, i32 0
  %125 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %123, i64 0, i32 0, i32 5
  %126 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %123, i64 0, i32 0, i32 7, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 2048
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %123, i64 0, i32 0, i32 6, i32 0
  %132 = load i32, i32* %131, align 8
  br label %136

133:                                              ; preds = %122
  %134 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %124) #13
  %135 = load i32, i32* %126, align 4
  br label %136

136:                                              ; preds = %133, %130
  %137 = phi i32 [ %127, %130 ], [ %135, %133 ]
  %138 = phi i32 [ %132, %130 ], [ %134, %133 ]
  %139 = and i32 %137, 2048
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %136
  %142 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %124) #13
  br label %146

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %123, i64 0, i32 0, i32 6, i32 0
  %145 = load i32, i32* %144, align 8
  br label %146

146:                                              ; preds = %143, %141
  %147 = phi i32 [ %142, %141 ], [ %145, %143 ]
  %148 = zext i32 %147 to i64
  %149 = shl nuw i64 %148, 32
  %150 = bitcast %"class.blink::LayoutPoint"* %125 to i64*
  %151 = load i64, i64* %150, align 4
  %152 = trunc i64 %151 to i32
  %153 = and i64 %151, -4294967296
  %154 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %154, i64 0, i32 0, i32 9
  %156 = bitcast [20 x i8]* %155 to i160*
  %157 = load i160, i160* %156, align 8
  %158 = and i160 %157, 15211807202738752817960438464512
  %159 = icmp eq i160 %158, 5070602400912917605986812821504
  br i1 %159, label %160, label %165, !prof !3

160:                                              ; preds = %146
  %161 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %117, align 8
  %162 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %161, i64 106
  %163 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %162, align 8
  %164 = call i32 %163(%"class.blink::LayoutObject"* %13, i32 %152, i32 %138, %"class.blink::LayoutBox"* %116) #13
  br label %165

165:                                              ; preds = %160, %146
  %166 = phi i32 [ %164, %160 ], [ %152, %146 ]
  %167 = zext i32 %166 to i64
  %168 = or i64 %153, %167
  %169 = zext i32 %138 to i64
  %170 = or i64 %149, %169
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #13
  store i64 %168, i64* %119, align 8
  store i64 %170, i64* %121, align 8
  %171 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %12, align 8
  %172 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %171, i64 0, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp slt i32 %173, 0
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %166, i32 %173) #13
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !3
  %180 = lshr i64 %151, 32
  %181 = trunc i64 %180 to i32
  %182 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %171, i64 0, i32 1, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %181, i32 %183) #13
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !3
  %190 = zext i32 %189 to i64
  %191 = shl nuw i64 %190, 32
  %192 = zext i32 %179 to i64
  %193 = or i64 %191, %192
  store i64 %193, i64* %119, align 8
  %194 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %11, align 8
  %195 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %194, i64 0, i32 0, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %194, i64 0, i32 0, i32 0, i32 1
  %198 = load i32, i32* %197, align 8
  %199 = icmp eq i32 %196, %198
  br i1 %199, label %208, label %200, !prof !3

200:                                              ; preds = %165
  %201 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %194, i64 0, i32 0, i32 0, i32 0
  %202 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %201, align 8
  %203 = zext i32 %196 to i64
  %204 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %202, i64 %203
  %205 = bitcast %"struct.blink::PhysicalRect"* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* nonnull align 8 %118, i64 16, i1 false) #13
  %206 = load i32, i32* %195, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %195, align 4
  br label %209

208:                                              ; preds = %165
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %194, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #13
  br label %209

209:                                              ; preds = %208, %200
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #13
  %210 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %123, i64 0, i32 5
  %211 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %210, align 8
  %212 = icmp eq %"class.blink::InlineFlowBox"* %211, null
  br i1 %212, label %213, label %122

213:                                              ; preds = %209, %77, %91, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  %214 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  call void @_ZNK5blink20LayoutBoxModelObject32AddOutlineRectsForNormalChildrenERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"* %214, %"class.WTF::Vector.2294"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 %3) #13
  call void @_ZNK5blink12LayoutInline31AddOutlineRectsForContinuationsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"* %0, %"class.WTF::Vector.2294"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline23ReferenceBoxForClipPathEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  %11 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 81, i1 false) #13
  %12 = bitcast %"class.blink::LayoutBlockFlow"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #13
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #13
  %13 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %13, align 8
  %15 = icmp eq %"class.blink::NGFragmentItem"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %14, i64 0, i32 2
  %18 = bitcast %"struct.blink::PhysicalRect"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %14, i64 0, i32 2, i32 1
  %21 = bitcast %"struct.blink::PhysicalSize"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #13
  br label %62

23:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #13
  %24 = load i96, i96* %5, align 4
  br label %25

25:                                               ; preds = %1, %23
  %26 = phi i96 [ %6, %1 ], [ %24, %23 ]
  %27 = and i96 %26, 268435456
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %33

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %33

33:                                               ; preds = %29, %31
  %34 = phi %"class.blink::LineBoxList"* [ %30, %29 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %35, align 8
  %37 = icmp eq %"class.blink::InlineFlowBox"* %36, null
  br i1 %37, label %62, label %38

38:                                               ; preds = %33
  %39 = call { i64, i64 } @_ZNK5blink13InlineFlowBox9FrameRectEv(%"class.blink::InlineFlowBox"* nonnull %36) #13
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = trunc i64 %40 to i32
  %42 = and i64 %40, -4294967296
  %43 = extractvalue { i64, i64 } %39, 1
  %44 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = and i160 %48, 15211807202738752817960438464512
  %50 = icmp eq i160 %49, 5070602400912917605986812821504
  br i1 %50, label %51, label %58, !prof !3

51:                                               ; preds = %38
  %52 = trunc i64 %43 to i32
  %53 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %54 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %54, i64 106
  %56 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %55, align 8
  %57 = call i32 %56(%"class.blink::LayoutObject"* %3, i32 %41, i32 %52, %"class.blink::LayoutBox"* null) #13
  br label %58

58:                                               ; preds = %38, %51
  %59 = phi i32 [ %57, %51 ], [ %41, %38 ]
  %60 = zext i32 %59 to i64
  %61 = or i64 %42, %60
  br label %62

62:                                               ; preds = %33, %58, %16
  %63 = phi i64 [ %22, %16 ], [ %43, %58 ], [ 0, %33 ]
  %64 = phi i64 [ %19, %16 ], [ %61, %58 ], [ 0, %33 ]
  %65 = insertvalue { i64, i64 } undef, i64 %64, 0
  %66 = insertvalue { i64, i64 } %65, i64 %63, 1
  ret { i64, i64 } %66
}

declare { i64, i64 } @_ZNK5blink13InlineFlowBox9FrameRectEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12LayoutInline38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutInline"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %9 = icmp eq %"class.blink::LayoutBoxModelObject"* %8, %1
  br i1 %9, label %97, label %10

10:                                               ; preds = %4
  %11 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %12 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %12, label %97, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %21, i64 0, i32 15, i32 0
  %23 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %22, align 8
  %24 = icmp ne %"class.blink::StyleReflection"* %23, null
  %25 = tail call zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"* %15, i1 zeroext %24) #13
  br i1 %25, label %51, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %28, i64 0, i32 3
  %30 = load i8, i8* %29, align 4
  %31 = and i8 %30, 16
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = and i160 %35, 7253554917687775048237056
  %37 = icmp eq i160 %36, 0
  %38 = and i1 %32, %37
  %39 = and i160 %35, 1190036353683150593851392
  %40 = icmp ne i160 %39, 340010386766614455386112
  %41 = or i1 %40, %38
  br i1 %41, label %51, label %42

42:                                               ; preds = %26
  %43 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %47, i64 0, i32 45
  %49 = load i32, i32* %48, align 4
  %50 = lshr i32 %49, 31
  br label %51

51:                                               ; preds = %13, %26, %42
  %52 = phi i32 [ %50, %42 ], [ 0, %13 ], [ 0, %26 ]
  %53 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8
  %58 = lshr i160 %57, 80
  %59 = trunc i160 %58 to i32
  %60 = and i32 %59, 7
  %61 = icmp eq i32 %60, 4
  %62 = and i160 %57, 128849018880
  %63 = icmp eq i160 %62, 42949672960
  %64 = and i1 %63, %61
  %65 = select i1 %64, i32 3, i32 %60
  switch i32 %65, label %79 [
    i32 4, label %66
    i32 2, label %66
  ]

66:                                               ; preds = %51, %51
  %67 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %68 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %67, align 8
  %69 = icmp eq %"struct.blink::FragmentData::RareData"* %68, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %71, align 8
  %73 = icmp eq %"class.blink::PaintLayer"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  %76 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %72, i64 0, i32 2
  %77 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %76, align 8
  %78 = tail call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %77) #13
  store i64 %78, i64* %5, align 8
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 %52) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  br label %79

79:                                               ; preds = %51, %66, %70, %74
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 4
  %81 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %80 to i96*
  %82 = load i96, i96* %81, align 4
  %83 = and i96 %82, 67108864
  %84 = icmp eq i96 %83, 0
  %85 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0
  %86 = icmp eq %"class.blink::LayoutObject"* %11, %85
  %87 = or i1 %86, %84
  br i1 %87, label %91, label %88

88:                                               ; preds = %79
  %89 = bitcast %"class.blink::LayoutObject"* %11 to %"class.blink::LayoutBox"*
  %90 = call zeroext i1 @_ZNK5blink9LayoutBox25MapContentsRectToBoxSpaceERNS_14TransformStateENS1_21TransformAccumulationERKNS_12LayoutObjectENS_15VisualRectFlagsE(%"class.blink::LayoutBox"* nonnull %89, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %52, %"class.blink::LayoutObject"* dereferenceable(88) %7, i32 %3) #13
  br i1 %90, label %91, label %97

91:                                               ; preds = %79, %88
  %92 = bitcast %"class.blink::LayoutObject"* %11 to i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)***
  %93 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)**, i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)** %93, i64 72
  %95 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)** %94, align 8
  %96 = call zeroext i1 %95(%"class.blink::LayoutObject"* nonnull %11, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %3) #13
  br label %97

97:                                               ; preds = %10, %88, %91, %4
  %98 = phi i1 [ true, %4 ], [ true, %10 ], [ %96, %91 ], [ false, %88 ]
  ret i1 %98
}

declare void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #1

declare i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox25MapContentsRectToBoxSpaceERNS_14TransformStateENS1_21TransformAccumulationERKNS_12LayoutObjectENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::TransformState"* dereferenceable(64), i32, %"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink12LayoutInline27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = lshr i96 %7, 75
  %9 = trunc i96 %8 to i32
  %10 = and i32 %9, 1
  %11 = or i32 %10, 2
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %19

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %15 = tail call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %14) #13
  %16 = lshr i64 %15, 32
  %17 = trunc i64 %16 to i32
  %18 = trunc i64 %15 to i32
  br label %19

19:                                               ; preds = %13, %3
  %20 = phi i32 [ %18, %13 ], [ 0, %3 ]
  %21 = phi i32 [ %17, %13 ], [ 0, %3 ]
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 8589934592
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %53, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = lshr i160 %32, 74
  %34 = trunc i160 %33 to i32
  %35 = and i32 %34, 7
  switch i32 %35, label %36 [
    i32 5, label %53
    i32 2, label %53
  ]

36:                                               ; preds = %27
  %37 = tail call i64 @_ZNK5blink12LayoutObject29OffsetFromScrollableContainerEPKS0_b(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %2) #13
  %38 = trunc i64 %37 to i32
  %39 = lshr i64 %37, 32
  %40 = trunc i64 %39 to i32
  %41 = icmp slt i32 %38, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %38) #13
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !3
  %47 = icmp slt i32 %40, 0
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %40) #13
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !3
  br label %53

53:                                               ; preds = %27, %27, %19, %36
  %54 = phi i32 [ %46, %36 ], [ %20, %27 ], [ %20, %19 ], [ %20, %27 ]
  %55 = phi i32 [ %52, %36 ], [ %21, %27 ], [ %21, %19 ], [ %21, %27 ]
  %56 = zext i32 %55 to i64
  %57 = shl nuw i64 %56, 32
  %58 = zext i32 %54 to i64
  %59 = or i64 %57, %58
  ret i64 %59
}

declare i64 @_ZNK5blink12LayoutObject29OffsetFromScrollableContainerEPKS0_b(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline17LayerTypeRequiredEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = lshr i96 %5, 75
  %7 = trunc i96 %6 to i32
  %8 = and i32 %7, 1
  %9 = or i32 %8, 2
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %91, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = and i96 %5, 34359738368
  %15 = icmp ne i96 %14, 0
  %16 = tail call zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"* %13, i1 zeroext %15) #13
  br i1 %16, label %91, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %19, i64 0, i32 3
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, 16
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 7253554917687775048237056
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %91, label %30

30:                                               ; preds = %24, %17
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %33, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %35, i64 0, i32 39
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 3801088
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %91

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %33, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %44, i64 0, i32 45
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %91, label %49

49:                                               ; preds = %40
  %50 = load i96, i96* %4, align 4
  %51 = and i96 %50, 1207959552
  %52 = icmp eq i96 %51, 134217728
  br i1 %52, label %91, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::LayoutInline"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %2, i32 43) #13
  br i1 %58, label %91, label %59

59:                                               ; preds = %53
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, i64 92
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::LayoutObject"* %2, i32 46) #13
  br i1 %63, label %84, label %64

64:                                               ; preds = %59
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %2, i32 48) #13
  br i1 %68, label %84, label %69

69:                                               ; preds = %64
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %70, i64 92
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::LayoutObject"* %2, i32 45) #13
  br i1 %73, label %84, label %74

74:                                               ; preds = %69
  %75 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, i64 92
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* %2, i32 49) #13
  br i1 %78, label %84, label %79

79:                                               ; preds = %74
  %80 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %81 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %80, i64 92
  %82 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.blink::LayoutObject"* %2, i32 50) #13
  br i1 %83, label %84, label %91

84:                                               ; preds = %79, %74, %69, %64, %59
  %85 = bitcast %"class.blink::LayoutInline"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %86 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %86, i64 24
  %88 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::LayoutObject"* %2) #13
  %90 = zext i1 %89 to i32
  br label %91

91:                                               ; preds = %84, %79, %53, %49, %40, %30, %24, %11, %1
  %92 = phi i32 [ 1, %30 ], [ 1, %1 ], [ 1, %11 ], [ 1, %24 ], [ 0, %40 ], [ 0, %53 ], [ 1, %79 ], [ %90, %84 ], [ 0, %49 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink12LayoutInline40CreateAnonymousContainerForBlockChildrenEv(%"class.blink::LayoutInline"* %0)
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %6 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %5) #13
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject15SetContinuationEPS0_(%"class.blink::LayoutBoxModelObject"* %5, %"class.blink::LayoutBoxModelObject"* %7) #13
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 9
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1
  %11 = tail call %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"* %10, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %1, i1 zeroext true) #13
  tail call void @_ZN5blink12LayoutInline9SplitFlowEPNS_12LayoutObjectEPNS_15LayoutBlockFlowES2_PNS_20LayoutBoxModelObjectE(%"class.blink::LayoutInline"* %0, %"class.blink::LayoutObject"* %9, %"class.blink::LayoutBlockFlow"* %4, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutBoxModelObject"* %6)
  ret void
}

declare void @_ZN5blink11LineBoxList14DirtyLineBoxesEv(%"class.blink::LineBoxList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineFlowBox"* @_ZN5blink12LayoutInline19CreateInlineFlowBoxEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %3 = tail call i8* @_ZN5blink9InlineBoxnwEm(i64 112) #13
  %4 = bitcast i8* %3 to %"class.blink::InlineFlowBox"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  store i8 21, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = getelementptr inbounds i8, i8* %3, i64 40
  %9 = bitcast i8* %8 to %"class.blink::LayoutObject"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  store %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 48
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %3, i64 52
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %3, i64 56
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %3, i64 60
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, -1073741824
  %20 = or i32 %19, 18432
  store i32 %20, i32* %17, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*] }, { [39 x i8*] }* @_ZTVN5blink13InlineFlowBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %21 = getelementptr inbounds i8, i8* %3, i64 64
  %22 = getelementptr inbounds i8, i8* %3, i64 104
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 40, i1 false) #13
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, -67108852
  %26 = or i32 %25, 16
  store i32 %26, i32* %23, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %28 = bitcast %"class.blink::ComputedStyle"** %27 to %"class.blink::ComputedStyleBase"**
  %29 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %29, i64 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 133143986176
  %34 = icmp eq i160 %33, 8589934592
  %35 = zext i1 %34 to i32
  %36 = shl nuw nsw i32 %35, 2
  %37 = and i32 %26, -67108848
  %38 = or i32 %36, %37
  %39 = shl nuw nsw i32 %35, 3
  %40 = or i32 %38, %39
  store i32 %40, i32* %23, align 8
  ret %"class.blink::InlineFlowBox"* %4
}

declare i8* @_ZN5blink9InlineBoxnwEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineFlowBox"* @_ZN5blink12LayoutInline28CreateAndAppendInlineFlowBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = or i96 %5, 70368744177664
  store i96 %6, i96* %4, align 4
  %7 = bitcast %"class.blink::LayoutInline"* %0 to %"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)***
  %8 = load %"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)**, %"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)*, %"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)** %8, i64 145
  %10 = load %"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)*, %"class.blink::InlineFlowBox"* (%"class.blink::LayoutInline"*)** %9, align 8
  %11 = tail call %"class.blink::InlineFlowBox"* %10(%"class.blink::LayoutInline"* %0) #13
  %12 = load i96, i96* %4, align 4
  %13 = and i96 %12, 268435456
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2, i64 0, i64 0), i32 469, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %1, %15
  %19 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE13AppendLineBoxEPS1_(%"class.blink::InlineBoxList"* %19, %"class.blink::InlineFlowBox"* %11) #13
  ret %"class.blink::InlineFlowBox"* %11
}

declare void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE13AppendLineBoxEPS1_(%"class.blink::InlineBoxList"*, %"class.blink::InlineFlowBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE(%"class.blink::LayoutInline"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 268435456
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject22FragmentItemsContainerEv(%"class.blink::LayoutObject"* %4) #13
  %12 = icmp eq %"class.blink::LayoutBlockFlow"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  tail call void @_ZN5blink15NGFragmentItems26DirtyLinesFromChangedChildERKNS_12LayoutObjectERKNS_15LayoutBlockFlowE(%"class.blink::LayoutObject"* dereferenceable(88) %1, %"class.blink::LayoutBlockFlow"* nonnull dereferenceable(280) %11) #13
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  %16 = icmp eq i32 %2, 1
  call void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"* %15, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %16) #13
  br label %17

17:                                               ; preds = %13, %10, %14
  ret void
}

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject22FragmentItemsContainerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink15NGFragmentItems26DirtyLinesFromChangedChildERKNS_12LayoutObjectERKNS_15LayoutBlockFlowE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutBlockFlow"* dereferenceable(280)) local_unnamed_addr #1

declare void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutInline"*, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  br i1 %1, label %7, label %85

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %7, %12
  %13 = phi %"class.blink::LayoutObject"* [ %15, %12 ], [ %8, %7 ]
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %7
  %20 = phi %"class.blink::Node"* [ %10, %7 ], [ %17, %12 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 59, i32 0, i32 0
  %26 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %26, i64 0, i32 31, i32 0, i32 0
  %28 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %28, i64 0, i32 0, i32 11
  %30 = load i8, i8* %29, align 8
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %19
  %34 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %19, %33
  %37 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %28, i64 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %85, label %40

40:                                               ; preds = %36
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %40, %43
  %44 = phi %"class.blink::LayoutObject"* [ %46, %43 ], [ %8, %40 ]
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 7
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 6, i32 0, i32 0
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = icmp eq %"class.blink::Node"* %48, null
  br i1 %49, label %43, label %50

50:                                               ; preds = %43, %40
  %51 = phi %"class.blink::Node"* [ %41, %40 ], [ %48, %43 ]
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %55, i64 0, i32 59, i32 0, i32 0
  %57 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %57, i64 0, i32 31, i32 0, i32 0
  %59 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %59, i64 0, i32 0, i32 11
  %61 = load i8, i8* %60, align 8
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %50
  %65 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  br label %67

67:                                               ; preds = %64, %50
  %68 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %59, i64 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %67
  %72 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %8) #13
  %73 = icmp eq %"class.blink::ComputedStyle"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %77 = icmp eq %"class.blink::ComputedStyle"* %72, %76
  br i1 %77, label %85, label %78

78:                                               ; preds = %74
  %79 = call i32 @_ZNK5blink13ComputedStyle18ComputedLineHeightEv(%"class.blink::ComputedStyle"* nonnull %72) #13
  %80 = icmp sgt i32 %79, 33554431
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = icmp slt i32 %79, -33554432
  %83 = shl i32 %79, 6
  %84 = select i1 %82, i32 -2147483648, i32 %83
  ret i32 %84

85:                                               ; preds = %71, %67, %36, %74, %4
  %86 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %87 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %86, align 8
  %88 = call i32 @_ZNK5blink13ComputedStyle18ComputedLineHeightEv(%"class.blink::ComputedStyle"* %87) #13
  %89 = icmp sgt i32 %88, 33554431
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = icmp slt i32 %88, -33554432
  %92 = shl i32 %88, 6
  %93 = select i1 %91, i32 -2147483648, i32 %92
  br label %94

94:                                               ; preds = %90, %85, %78
  %95 = phi i32 [ 2147483647, %78 ], [ 2147483647, %85 ], [ %93, %90 ]
  ret i32 %95
}

declare i32 @_ZNK5blink13ComputedStyle18ComputedLineHeightEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12LayoutInline16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutInline"*, i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  br i1 %2, label %8, label %43

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %8, %12
  %13 = phi %"class.blink::LayoutObject"* [ %15, %12 ], [ %7, %8 ]
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %8
  %20 = phi %"class.blink::Node"* [ %10, %8 ], [ %17, %12 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 59, i32 0, i32 0
  %26 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %26, i64 0, i32 31, i32 0, i32 0
  %28 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %28, i64 0, i32 0, i32 11
  %30 = load i8, i8* %29, align 8
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %19
  %34 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %33, %19
  %37 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %28, i64 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %7) #13
  %42 = icmp eq %"class.blink::ComputedStyle"* %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %5, %36, %40
  %44 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  br label %46

46:                                               ; preds = %43, %40
  %47 = phi %"class.blink::ComputedStyle"* [ %41, %40 ], [ %45, %43 ]
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %49, i64 0, i32 1, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %51, i64 0, i32 1
  %53 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %52) #13
  %54 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %53, i64 0, i32 2
  %55 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %54, align 8
  %56 = icmp eq %"class.blink::SimpleFontData"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %52, i64 0, i32 0
  %59 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %53, %"class.blink::FontDescription"* dereferenceable(80) %58) #13
  store %"class.blink::SimpleFontData"* %59, %"class.blink::SimpleFontData"** %54, align 8
  %60 = icmp eq %"class.blink::SimpleFontData"* %59, null
  br i1 %60, label %120, label %61

61:                                               ; preds = %46, %57
  %62 = phi %"class.blink::SimpleFontData"* [ %59, %57 ], [ %55, %46 ]
  %63 = icmp eq i32 %1, 0
  %64 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %62, i64 0, i32 1, i32 9
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %72, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %62, i64 0, i32 1, i32 10
  %68 = load i32, i32* %67, align 4
  %69 = add nsw i32 %68, %65
  %70 = sdiv i32 %69, 2
  %71 = sub nsw i32 %69, %70
  br label %72

72:                                               ; preds = %61, %66
  %73 = phi i32 [ %71, %66 ], [ %65, %61 ]
  %74 = call i32 @_ZNK5blink12LayoutInline10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutInline"* %0, i1 zeroext %2, i32 undef, i32 undef)
  %75 = load i32, i32* %64, align 4
  %76 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %62, i64 0, i32 1, i32 10
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %77, %75
  %79 = icmp sgt i32 %78, 33554431
  br i1 %79, label %85, label %80

80:                                               ; preds = %72
  %81 = icmp slt i32 %78, -33554432
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = shl i32 %78, 6
  %84 = icmp sgt i32 %83, -1
  br i1 %84, label %85, label %87

85:                                               ; preds = %72, %82
  %86 = phi i32 [ %83, %82 ], [ 2147483647, %72 ]
  br label %87

87:                                               ; preds = %80, %82, %85
  %88 = phi i32 [ %86, %85 ], [ %83, %82 ], [ -2147483648, %80 ]
  %89 = phi i32 [ -2147483648, %85 ], [ 2147483647, %82 ], [ 2147483647, %80 ]
  %90 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %74, i32 %88) #13
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !3
  %94 = sdiv i32 %93, 2
  %95 = sext i32 %94 to i64
  %96 = call i1 @llvm.is.constant.i64(i64 %95) #13
  br i1 %96, label %103, label %97

97:                                               ; preds = %87
  %98 = icmp slt i32 %93, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = add nsw i64 %95, 2147483648
  %101 = icmp ult i64 %100, 4294967296
  %102 = select i1 %101, i32 %94, i32 %99, !prof !4
  br label %103

103:                                              ; preds = %87, %97
  %104 = phi i32 [ %102, %97 ], [ %94, %87 ]
  %105 = icmp sgt i32 %73, 33554431
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = icmp slt i32 %73, -33554432
  %108 = shl i32 %73, 6
  %109 = select i1 %107, i32 -2147483648, i32 %108
  br label %110

110:                                              ; preds = %106, %103
  %111 = phi i32 [ 2147483647, %103 ], [ %109, %106 ]
  %112 = icmp slt i32 %104, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %104) #13
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !3
  %118 = sdiv i32 %117, 64
  %119 = shl nsw i32 %118, 6
  br label %120

120:                                              ; preds = %57, %110
  %121 = phi i32 [ %119, %110 ], [ -64, %57 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink12LayoutInline31OffsetForInFlowPositionedInlineERKNS_9LayoutBoxE(%"class.blink::LayoutInline"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = lshr i96 %5, 75
  %7 = trunc i96 %6 to i32
  %8 = and i32 %7, 1
  %9 = or i32 %8, 2
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %87, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %87

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %64, label %35

35:                                               ; preds = %23, %39
  %36 = phi i32* [ %40, %39 ], [ %29, %23 ]
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 145
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i32, i32* %36, i64 1
  %41 = icmp ult i32* %40, %33
  br i1 %41, label %35, label %49

42:                                               ; preds = %35
  %43 = ptrtoint i32* %36 to i64
  %44 = ptrtoint i32* %29 to i64
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %87

49:                                               ; preds = %39, %42
  br label %50

50:                                               ; preds = %49, %54
  %51 = phi i32* [ %55, %54 ], [ %29, %49 ]
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 1169
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds i32, i32* %51, i64 1
  %56 = icmp ult i32* %55, %33
  br i1 %56, label %50, label %64

57:                                               ; preds = %50
  %58 = ptrtoint i32* %51 to i64
  %59 = ptrtoint i32* %29 to i64
  %60 = sub i64 %58, %59
  %61 = lshr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %87

64:                                               ; preds = %54, %57, %23
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %66, i64 0, i32 16, i32 0, i32 0
  %68 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %87

72:                                               ; preds = %64
  br i1 %34, label %210, label %73

73:                                               ; preds = %72, %77
  %74 = phi i32* [ %78, %77 ], [ %29, %72 ]
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 47
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds i32, i32* %74, i64 1
  %79 = icmp ult i32* %78, %33
  br i1 %79, label %73, label %210

80:                                               ; preds = %73
  %81 = ptrtoint i32* %74 to i64
  %82 = ptrtoint i32* %29 to i64
  %83 = sub i64 %81, %82
  %84 = lshr exact i64 %83, 2
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %210, label %87

87:                                               ; preds = %57, %80, %64, %42, %11, %2
  %88 = and i96 %5, 268435456
  %89 = icmp eq i96 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %94

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %94

94:                                               ; preds = %90, %92
  %95 = phi %"class.blink::LineBoxList"* [ %91, %90 ], [ %93, %92 ]
  %96 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %96, align 8
  %98 = icmp eq %"class.blink::InlineFlowBox"* %97, null
  br i1 %98, label %138, label %99

99:                                               ; preds = %94
  %100 = load i96, i96* %4, align 4
  %101 = and i96 %100, 268435456
  %102 = icmp eq i96 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  %105 = load i96, i96* %4, align 4
  br label %108

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %108

108:                                              ; preds = %103, %106
  %109 = phi i96 [ %105, %103 ], [ %100, %106 ]
  %110 = phi %"class.blink::LineBoxList"* [ %104, %103 ], [ %107, %106 ]
  %111 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %112, i64 0, i32 0, i32 7, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 2048
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %112, i64 0, i32 0, i32 5, i32 0, i32 0
  %118 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %112, i64 0, i32 0, i32 5, i32 1, i32 0
  %119 = select i1 %116, i32* %118, i32* %117
  %120 = load i32, i32* %119, align 4
  %121 = and i96 %109, 268435456
  %122 = icmp eq i96 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %108
  %124 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %127

125:                                              ; preds = %108
  %126 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %127

127:                                              ; preds = %123, %125
  %128 = phi %"class.blink::LineBoxList"* [ %124, %123 ], [ %126, %125 ]
  %129 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %130, i64 0, i32 0, i32 7, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 2048
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %130, i64 0, i32 0, i32 5, i32 1, i32 0
  %136 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %130, i64 0, i32 0, i32 5, i32 0, i32 0
  %137 = select i1 %134, i32* %136, i32* %135
  br label %151

138:                                              ; preds = %94
  %139 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %140 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %139, align 8
  %141 = icmp eq %"struct.blink::FragmentData::RareData"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %140, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %144, i64 0, i32 10, i32 0
  br label %146

146:                                              ; preds = %138, %142
  %147 = phi i32* [ %145, %142 ], [ inttoptr (i64 80 to i32*), %138 ]
  %148 = phi %"class.blink::PaintLayer"* [ %144, %142 ], [ null, %138 ]
  %149 = load i32, i32* %147, align 8
  %150 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %148, i64 0, i32 11, i32 0
  br label %151

151:                                              ; preds = %146, %127
  %152 = phi i32 [ %149, %146 ], [ %120, %127 ]
  %153 = phi i32* [ %150, %146 ], [ %137, %127 ]
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %156 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %158 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %158, i64 0, i32 0, i32 9
  %160 = bitcast [20 x i8]* %159 to i160*
  %161 = load i160, i160* %160, align 8
  %162 = and i160 %161, 15211807202738752817960438464512
  %163 = icmp eq i160 %162, 0
  %164 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %156, i64 0, i32 0, i32 7, i32 0, i32 0
  %165 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %164, align 8
  br i1 %163, label %166, label %175

166:                                              ; preds = %151
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 8, i32 2
  %168 = load i8, i8* %167, align 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %184

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 17, i32 2
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %172, 0
  %174 = select i1 %173, i32 0, i32 %152
  br label %184

175:                                              ; preds = %151
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 18, i32 2
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %194

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 7, i32 2
  %181 = load i8, i8* %180, align 1
  %182 = icmp eq i8 %181, 0
  %183 = select i1 %182, i32 0, i32 %152
  br label %194

184:                                              ; preds = %170, %166
  %185 = phi i32 [ %152, %166 ], [ %174, %170 ]
  %186 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 18, i32 2
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %204

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 7, i32 2
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 0
  %193 = select i1 %192, i32 0, i32 %154
  br label %204

194:                                              ; preds = %179, %175
  %195 = phi i32 [ %152, %175 ], [ %183, %179 ]
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 8, i32 2
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %165, i64 0, i32 17, i32 2
  %201 = load i8, i8* %200, align 1
  %202 = icmp eq i8 %201, 0
  %203 = select i1 %202, i32 0, i32 %154
  br label %204

204:                                              ; preds = %194, %199, %184, %189
  %205 = phi i32 [ %154, %184 ], [ %193, %189 ], [ %195, %199 ], [ %195, %194 ]
  %206 = phi i32 [ %185, %184 ], [ %185, %189 ], [ %203, %199 ], [ %154, %194 ]
  %207 = zext i32 %205 to i64
  %208 = shl nuw i64 %207, 32
  %209 = zext i32 %206 to i64
  br label %210

210:                                              ; preds = %77, %80, %72, %204
  %211 = phi i64 [ %209, %204 ], [ 0, %80 ], [ 0, %72 ], [ 0, %77 ]
  %212 = phi i64 [ %208, %204 ], [ 0, %80 ], [ 0, %72 ], [ 0, %77 ]
  %213 = or i64 %212, %211
  ret i64 %213
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutInline"*, i8* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %8, i8 zeroext 19) #13
  br label %9

9:                                                ; preds = %3, %7
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject32AddOutlineRectsForNormalChildrenERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2294"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline31AddOutlineRectsForContinuationsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"*, %"class.WTF::Vector.2294"* dereferenceable(16), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %9 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %8) #13
  %10 = icmp eq %"class.blink::LayoutBoxModelObject"* %9, null
  br i1 %10, label %212, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %9, i64 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 63
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %212

18:                                               ; preds = %11
  %19 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %21 = load i64, i64* %20, align 4
  store i64 %21, i64* %5, align 8
  %22 = and i96 %15, 134217728
  %23 = icmp eq i96 %22, 0
  %24 = trunc i64 %21 to i32
  %25 = lshr i64 %21, 32
  %26 = trunc i64 %25 to i32
  br i1 %23, label %74, label %27

27:                                               ; preds = %18
  %28 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %28, i64 0, i32 0
  %30 = bitcast %"class.blink::LayoutBlock"* %28 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %31 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %31, i64 147
  %33 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %32, align 8
  %34 = tail call %"class.blink::LayoutBox"* %33(%"class.blink::LayoutBox"* %29) #13
  %35 = icmp eq %"class.blink::LayoutBox"* %34, null
  br i1 %35, label %44, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %34, i64 0, i32 0, i32 0, i32 5, i32 0
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = and i160 %41, 15211807202738752817960438464512
  %43 = icmp eq i160 %42, 5070602400912917605986812821504
  br i1 %43, label %49, label %44, !prof !3

44:                                               ; preds = %36, %27
  %45 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %28, i64 0, i32 0, i32 2
  %46 = bitcast %"class.blink::LayoutRect"* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = trunc i64 %47 to i32
  br label %120

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %34, i64 0, i32 2, i32 1
  %51 = bitcast %"class.blink::LayoutSize"* %50 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %28, i64 0, i32 0, i32 2, i32 1
  %55 = bitcast %"class.blink::LayoutSize"* %54 to i64*
  %56 = load i64, i64* %55, align 4
  %57 = trunc i64 %56 to i32
  %58 = icmp sgt i32 %57, -1
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %53, i32 %57) #13
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !3
  %64 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %28, i64 0, i32 0, i32 2
  %65 = bitcast %"class.blink::LayoutRect"* %64 to i64*
  %66 = load i64, i64* %65, align 4
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %67, -1
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %67) #13
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !3
  br label %120

74:                                               ; preds = %18
  %75 = bitcast %"class.blink::LayoutBoxModelObject"* %9 to %"class.blink::LayoutBox"*
  %76 = bitcast %"class.blink::LayoutBoxModelObject"* %9 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %77 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %77, i64 147
  %79 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %78, align 8
  %80 = tail call %"class.blink::LayoutBox"* %79(%"class.blink::LayoutBox"* nonnull %75) #13
  %81 = icmp eq %"class.blink::LayoutBox"* %80, null
  br i1 %81, label %90, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %80, i64 0, i32 0, i32 0, i32 5, i32 0
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 9
  %86 = bitcast [20 x i8]* %85 to i160*
  %87 = load i160, i160* %86, align 8
  %88 = and i160 %87, 15211807202738752817960438464512
  %89 = icmp eq i160 %88, 5070602400912917605986812821504
  br i1 %89, label %95, label %90, !prof !3

90:                                               ; preds = %82, %74
  %91 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %9, i64 1, i32 0, i32 1, i32 1
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = trunc i64 %93 to i32
  br label %120

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %80, i64 0, i32 2, i32 1
  %97 = bitcast %"class.blink::LayoutSize"* %96 to i64*
  %98 = load i64, i64* %97, align 4
  %99 = trunc i64 %98 to i32
  %100 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %9, i64 1, i32 0, i32 4, i32 0, i64 4
  %101 = bitcast i8* %100 to i64*
  %102 = load i64, i64* %101, align 4
  %103 = trunc i64 %102 to i32
  %104 = icmp sgt i32 %103, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %99, i32 %103) #13
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !3
  %110 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %9, i64 1, i32 0, i32 1, i32 1
  %111 = bitcast i8* %110 to i64*
  %112 = load i64, i64* %111, align 4
  %113 = trunc i64 %112 to i32
  %114 = icmp sgt i32 %113, -1
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %109, i32 %113) #13
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !3
  br label %120

120:                                              ; preds = %95, %90, %49, %44
  %121 = phi i64 [ %47, %44 ], [ %66, %49 ], [ %93, %90 ], [ %112, %95 ]
  %122 = phi i32 [ %48, %44 ], [ %73, %49 ], [ %94, %90 ], [ %119, %95 ]
  %123 = lshr i64 %121, 32
  %124 = trunc i64 %123 to i32
  %125 = icmp slt i32 %122, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %122) #13
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129
  %131 = icmp slt i32 %124, 0
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %124) #13
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135
  %137 = zext i32 %136 to i64
  %138 = shl nuw i64 %137, 32
  %139 = zext i32 %130 to i64
  %140 = or i64 %138, %139
  store i64 %140, i64* %5, align 8
  %141 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %142 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0
  %143 = bitcast %"class.blink::LayoutBlock"* %141 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %144 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %144, i64 147
  %146 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %145, align 8
  %147 = tail call %"class.blink::LayoutBox"* %146(%"class.blink::LayoutBox"* %142) #13
  %148 = icmp eq %"class.blink::LayoutBox"* %147, null
  br i1 %148, label %157, label %149

149:                                              ; preds = %120
  %150 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %147, i64 0, i32 0, i32 0, i32 5, i32 0
  %151 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %151, i64 0, i32 0, i32 9
  %153 = bitcast [20 x i8]* %152 to i160*
  %154 = load i160, i160* %153, align 8
  %155 = and i160 %154, 15211807202738752817960438464512
  %156 = icmp eq i160 %155, 5070602400912917605986812821504
  br i1 %156, label %162, label %157, !prof !3

157:                                              ; preds = %149, %120
  %158 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0, i32 2
  %159 = bitcast %"class.blink::LayoutRect"* %158 to i64*
  %160 = load i64, i64* %159, align 4
  %161 = trunc i64 %160 to i32
  br label %187

162:                                              ; preds = %149
  %163 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %147, i64 0, i32 2, i32 1
  %164 = bitcast %"class.blink::LayoutSize"* %163 to i64*
  %165 = load i64, i64* %164, align 4
  %166 = trunc i64 %165 to i32
  %167 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0, i32 2, i32 1
  %168 = bitcast %"class.blink::LayoutSize"* %167 to i64*
  %169 = load i64, i64* %168, align 4
  %170 = trunc i64 %169 to i32
  %171 = icmp sgt i32 %170, -1
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %166, i32 %170) #13
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !3
  %177 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0, i32 2
  %178 = bitcast %"class.blink::LayoutRect"* %177 to i64*
  %179 = load i64, i64* %178, align 4
  %180 = trunc i64 %179 to i32
  %181 = icmp sgt i32 %180, -1
  %182 = select i1 %181, i32 -2147483648, i32 2147483647
  %183 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %176, i32 %180) #13
  %184 = extractvalue { i32, i1 } %183, 1
  %185 = extractvalue { i32, i1 } %183, 0
  %186 = select i1 %184, i32 %182, i32 %185, !prof !3
  br label %187

187:                                              ; preds = %157, %162
  %188 = phi i32 [ %161, %157 ], [ %186, %162 ]
  %189 = phi i64 [ %160, %157 ], [ %179, %162 ]
  %190 = lshr i64 %189, 32
  %191 = trunc i64 %190 to i32
  %192 = icmp sgt i32 %188, -1
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %130, i32 %188) #13
  %195 = extractvalue { i32, i1 } %194, 1
  %196 = extractvalue { i32, i1 } %194, 0
  %197 = select i1 %195, i32 %193, i32 %196, !prof !3
  %198 = icmp sgt i32 %191, -1
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %136, i32 %191) #13
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !3
  %204 = zext i32 %203 to i64
  %205 = shl nuw i64 %204, 32
  %206 = zext i32 %197 to i64
  %207 = or i64 %205, %206
  store i64 %207, i64* %5, align 8
  %208 = bitcast %"class.blink::LayoutBoxModelObject"* %9 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)***
  %209 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)** %209, i64 84
  %211 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2294"*, %"struct.blink::PhysicalOffset"*, i32)** %210, align 8
  call void %211(%"class.blink::LayoutObject"* %12, %"class.WTF::Vector.2294"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %212

212:                                              ; preds = %11, %187, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12LayoutInline36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.2294", align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::PhysicalOffset"*
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.WTF::Vector.2294"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %2, i64 0, i32 0, i32 0, i32 2
  %9 = bitcast i64* %3 to i8*
  %10 = bitcast %"class.WTF::Vector.2294"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  store i64 0, i64* %3, align 8
  call void @_ZNK5blink12LayoutObject12OutlineRectsERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.WTF::Vector.2294"* nonnull sret %2, %"class.blink::LayoutObject"* %5, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %4, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %11 = call { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2294"* nonnull dereferenceable(16) %2) #13
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  %15 = extractvalue { i64, i64 } %11, 1
  %16 = lshr i64 %15, 32
  %17 = trunc i64 %16 to i32
  %18 = trunc i64 %12 to i32
  %19 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 15211807202738752817960438464512
  %25 = icmp eq i160 %24, 5070602400912917605986812821504
  %26 = trunc i64 %15 to i32
  br i1 %25, label %27, label %33, !prof !3

27:                                               ; preds = %1
  %28 = bitcast %"class.blink::LayoutInline"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %29 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %29, i64 106
  %31 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %30, align 8
  %32 = call i32 %31(%"class.blink::LayoutObject"* %5, i32 %18, i32 %26, %"class.blink::LayoutBox"* null) #13
  br label %33

33:                                               ; preds = %1, %27
  %34 = phi i32 [ %32, %27 ], [ %18, %1 ]
  %35 = sitofp i32 %34 to float
  %36 = fmul float %35, 1.562500e-02
  %37 = sitofp i32 %14 to float
  %38 = fmul float %37, 1.562500e-02
  %39 = sitofp i32 %26 to float
  %40 = fmul float %39, 1.562500e-02
  %41 = sitofp i32 %17 to float
  %42 = fmul float %41, 1.562500e-02
  %43 = insertelement <2 x float> undef, float %36, i32 0
  %44 = insertelement <2 x float> %43, float %38, i32 1
  %45 = insertelement <2 x float> undef, float %40, i32 0
  %46 = insertelement <2 x float> %45, float %42, i32 1
  %47 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %44, 0
  %48 = insertvalue { <2 x float>, <2 x float> } %47, <2 x float> %46, 1
  %49 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %7, align 8
  %50 = icmp eq %"struct.blink::PhysicalRect"* %49, null
  %51 = bitcast %"struct.blink::PhysicalRect"* %49 to i8*
  br i1 %50, label %57, label %52, !prof !4

52:                                               ; preds = %33
  %53 = load i32, i32* %8, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %52
  store i32 0, i32* %8, align 4
  br label %56

56:                                               ; preds = %55, %52
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #13
  store %"struct.blink::PhysicalRect"* null, %"struct.blink::PhysicalRect"** %7, align 8
  br label %57

57:                                               ; preds = %33, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret { <2 x float>, <2 x float> } %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12LayoutInline19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutInline"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"struct.blink::AnnotatedRegionValue", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = bitcast %"class.blink::ComputedStyle"** %6 to %"class.blink::ComputedStyleBase"**
  %8 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 3802951800684688204490109616128
  %13 = icmp eq i160 %12, 1267650600228229401496703205376
  br i1 %13, label %14, label %107

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %20, i64 0, i32 45
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 3145728
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %107, label %25

25:                                               ; preds = %14
  %26 = bitcast %"struct.blink::AnnotatedRegionValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %4, i64 0, i32 1
  %29 = bitcast i8* %28 to i32*
  store i32 -1431655766, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %4, i64 0, i32 0, i32 1
  %31 = bitcast %"struct.blink::PhysicalSize"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %34, i64 0, i32 45
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 3145728
  %38 = icmp eq i32 %37, 1048576
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %27, align 8
  %40 = tail call { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"* %0)
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = bitcast %"struct.blink::AnnotatedRegionValue"* %4 to i64*
  %44 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %4, i64 0, i32 0, i32 1
  %45 = bitcast %"struct.blink::PhysicalSize"* %44 to i64*
  store i64 %42, i64* %45, align 8
  %46 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %5, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %47 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = icmp eq %"class.blink::LayoutBlock"* %46, null
  %49 = select i1 %48, %"class.blink::LayoutObject"* %5, %"class.blink::LayoutObject"* %47
  %50 = bitcast <2 x float>* %3 to %"class.blink::FloatPoint"*
  %51 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  store <2 x float> zeroinitializer, <2 x float>* %3, align 8
  %52 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %49, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %50, %"class.blink::LayoutBoxModelObject"* null, i32 4) #13
  %53 = extractelement <2 x float> %52, i32 0
  %54 = fmul float %53, 6.400000e+01
  %55 = call float @llvm.round.f32(float %54) #13
  %56 = fcmp ult float %55, 0xC1E0000000000000
  %57 = fcmp ugt float %55, 0x41DFFFFFE0000000
  %58 = fcmp ogt float %55, 0xC1E0000000000000
  %59 = select i1 %58, float %55, float 0xC1E0000000000000
  %60 = fptosi float %59 to i32
  %61 = select i1 %56, i32 0, i32 2147483647
  %62 = select i1 %57, i32 %61, i32 %60
  %63 = extractelement <2 x float> %52, i32 1
  %64 = fmul float %63, 6.400000e+01
  %65 = call float @llvm.round.f32(float %64) #13
  %66 = fcmp ult float %65, 0xC1E0000000000000
  %67 = fcmp ugt float %65, 0x41DFFFFFE0000000
  %68 = fcmp ogt float %65, 0xC1E0000000000000
  %69 = select i1 %68, float %65, float 0xC1E0000000000000
  %70 = fptosi float %69 to i32
  %71 = select i1 %66, i32 0, i32 2147483647
  %72 = select i1 %67, i32 %71, i32 %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  %73 = trunc i64 %41 to i32
  %74 = icmp slt i32 %62, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %62) #13
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %75, i32 %78, !prof !3
  %80 = lshr i64 %41, 32
  %81 = trunc i64 %80 to i32
  %82 = icmp slt i32 %72, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %72) #13
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !3
  %88 = zext i32 %87 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %79 to i64
  %91 = or i64 %89, %90
  store i64 %91, i64* %43, align 8
  %92 = getelementptr inbounds %"class.WTF::Vector.1371", %"class.WTF::Vector.1371"* %1, i64 0, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::Vector.1371", %"class.WTF::Vector.1371"* %1, i64 0, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %93, %95
  br i1 %96, label %105, label %97, !prof !3

97:                                               ; preds = %25
  %98 = getelementptr inbounds %"class.WTF::Vector.1371", %"class.WTF::Vector.1371"* %1, i64 0, i32 0, i32 0, i32 0
  %99 = load %"struct.blink::AnnotatedRegionValue"*, %"struct.blink::AnnotatedRegionValue"** %98, align 8
  %100 = zext i32 %93 to i64
  %101 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %99, i64 %100
  %102 = bitcast %"struct.blink::AnnotatedRegionValue"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* nonnull align 8 %26, i64 20, i1 false) #13
  %103 = load i32, i32* %92, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %92, align 4
  br label %106

105:                                              ; preds = %25
  call void @_ZN3WTF6VectorIN5blink20AnnotatedRegionValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1371"* %1, %"struct.blink::AnnotatedRegionValue"* nonnull dereferenceable(20) %4) #13
  br label %106

106:                                              ; preds = %97, %105
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26) #13
  br label %107

107:                                              ; preds = %2, %14, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutInline"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %5 = bitcast %"class.blink::ObjectPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 268435456
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = and i96 %9, 70369012613120
  %14 = icmp eq i96 %13, 70369012613120
  br i1 %14, label %15, label %39

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.blink::DisplayItemClient.base"* %16 to %"class.blink::DisplayItemClient"*
  call void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"* nonnull %3, %"class.blink::DisplayItemClient"* dereferenceable(16) %17, i8 zeroext %1)
  br label %39

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.blink::DisplayItemClient.base"* %19 to %"class.blink::DisplayItemClient"*
  call void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"* nonnull %3, %"class.blink::DisplayItemClient"* dereferenceable(16) %20, i8 zeroext %1)
  %21 = load i96, i96* %8, align 4
  %22 = and i96 %21, 268435456
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  %25 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %28

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 2, i32 0
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi %"class.blink::LineBoxList"* [ %25, %24 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %30, align 8
  %32 = icmp eq %"class.blink::InlineFlowBox"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %28, %33
  %34 = phi %"class.blink::InlineFlowBox"* [ %37, %33 ], [ %31, %28 ]
  %35 = bitcast %"class.blink::InlineFlowBox"* %34 to %"class.blink::DisplayItemClient"*
  call void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"* nonnull %3, %"class.blink::DisplayItemClient"* nonnull dereferenceable(16) %35, i8 zeroext %1)
  %36 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %34, i64 0, i32 5
  %37 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %36, align 8
  %38 = icmp eq %"class.blink::InlineFlowBox"* %37, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %28, %12, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"*, %"class.blink::DisplayItemClient"* dereferenceable(16), i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i8*, align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 155, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %46, label %10, !prof !4

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = bitcast %"class.blink::DisplayItemClient"* %1 to %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)***
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)**, %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)*, %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)** %14, i64 2
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)*, %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* %16(%"class.blink::DisplayItemClient"* %1) #13
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #13
  %19 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = call i8* @_ZN5blink31PaintInvalidationReasonToStringENS_23PaintInvalidationReasonE(i8 zeroext %2) #13
  store i8* %20, i8** %6, align 8
  %21 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcEEN4base11trace_event16TraceEventHandleEcPKhS9_S9_yjyS9_OT_S9_OT0_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 155, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %10, %26
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #13
  br label %45

45:                                               ; preds = %29, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br label %46

46:                                               ; preds = %3, %45
  %47 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %1, i64 0, i32 1
  %48 = load i8, i8* %47, align 8
  %49 = icmp ugt i8 %48, 2
  %50 = icmp ne i8 %2, 20
  %51 = and i1 %50, %49
  br i1 %51, label %53, label %52

52:                                               ; preds = %46
  store i8 %2, i8* %47, align 8
  br label %53

53:                                               ; preds = %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12LayoutInline18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutInline"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 68719476736
  %10 = icmp eq i96 %9, 0
  %11 = and i32 %3, -2
  %12 = select i1 %10, i32 %3, i32 %11
  tail call void @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"* %5, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %12) #13
  ret void
}

declare void @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink12LayoutInline9DebugRectEv(%"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"* %0)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = lshr i64 %3, 32
  %6 = trunc i64 %5 to i32
  %7 = extractvalue { i64, i64 } %2, 1
  %8 = icmp slt i32 %4, -2147483584
  %9 = ashr i32 %4, 6
  %10 = select i1 %8, i32 -33554432, i32 %9, !prof !3
  %11 = icmp slt i32 %6, -2147483584
  %12 = ashr i32 %6, 6
  %13 = select i1 %11, i32 -33554432, i32 %12, !prof !3
  %14 = trunc i64 %7 to i32
  %15 = icmp slt i32 %14, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %14) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = lshr i64 %7, 32
  %22 = trunc i64 %21 to i32
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %22) #13
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !3
  %29 = icmp sgt i32 %20, 2147483583
  br i1 %29, label %37, label %30, !prof !3

30:                                               ; preds = %1
  %31 = icmp sgt i32 %20, -1
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = add nuw nsw i32 %20, 63
  %34 = sdiv i32 %33, 64
  br label %37

35:                                               ; preds = %30
  %36 = sdiv i32 %20, 64
  br label %37

37:                                               ; preds = %35, %32, %1
  %38 = phi i32 [ %34, %32 ], [ %36, %35 ], [ 33554431, %1 ]
  %39 = icmp sgt i32 %28, 2147483583
  br i1 %39, label %47, label %40, !prof !3

40:                                               ; preds = %37
  %41 = icmp sgt i32 %28, -1
  br i1 %41, label %42, label %45

42:                                               ; preds = %40
  %43 = add nuw nsw i32 %28, 63
  %44 = sdiv i32 %43, 64
  br label %47

45:                                               ; preds = %40
  %46 = sdiv i32 %28, 64
  br label %47

47:                                               ; preds = %37, %42, %45
  %48 = phi i32 [ %44, %42 ], [ %46, %45 ], [ 33554431, %37 ]
  %49 = sub nsw i32 %38, %10
  %50 = sub nsw i32 %48, %13
  %51 = shl nsw i32 %10, 6
  %52 = zext i32 %51 to i64
  %53 = shl nsw i32 %13, 6
  %54 = icmp sgt i32 %49, 33554431
  br i1 %54, label %60, label %55

55:                                               ; preds = %47
  %56 = icmp slt i32 %49, -33554432
  %57 = shl i32 %49, 6
  %58 = select i1 %56, i32 -2147483648, i32 %57
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ 2147483647, %47 ], [ %59, %55 ]
  %62 = icmp sgt i32 %50, 33554431
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = icmp slt i32 %50, -33554432
  br i1 %64, label %69, label %65

65:                                               ; preds = %63
  %66 = shl i32 %50, 6
  %67 = zext i32 %66 to i64
  %68 = shl nuw i64 %67, 32
  br label %69

69:                                               ; preds = %63, %60, %65
  %70 = phi i64 [ %68, %65 ], [ 9223372032559808512, %60 ], [ -9223372036854775808, %63 ]
  %71 = zext i32 %53 to i64
  %72 = shl nuw i64 %71, 32
  %73 = or i64 %72, %52
  %74 = insertvalue { i64, i64 } undef, i64 %73, 0
  %75 = or i64 %70, %61
  %76 = insertvalue { i64, i64 } %74, i64 %75, 1
  ret { i64, i64 } %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv(%"class.blink::ImageResourceObserver"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink12LayoutInline7GetNameEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink12LayoutInline15VirtualChildrenEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink12LayoutInline15VirtualChildrenEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #13
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutInline14IsLayoutInlineEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutInline19VirtualContinuationEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #13
  ret %"class.blink::LayoutBoxModelObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i16 @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink20LayoutBoxModelObject20RecalcVisualOverflowEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutInline12UpdateLayoutEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink20LayoutBoxModelObject13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.2276"* dereferenceable(16), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutObject"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink20LayoutBoxModelObject15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutInline36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink12LayoutObject16InsertedIntoTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject15ClearPaintFlagsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE(%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutInline11OffsetWidthEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"* %0)
  %3 = extractvalue { i64, i64 } %2, 1
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutInline12OffsetHeightEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"* %0)
  %3 = extractvalue { i64, i64 } %2, 1
  %4 = lshr i64 %3, 32
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

declare i32 @_ZNK5blink20LayoutBoxModelObject23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutInline17BorderBoundingBoxEv(%"class.blink::LayoutInline"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"* %0)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = lshr i64 %3, 32
  %6 = trunc i64 %5 to i32
  %7 = extractvalue { i64, i64 } %2, 1
  %8 = icmp slt i32 %4, -2147483584
  %9 = ashr i32 %4, 6
  %10 = select i1 %8, i32 -33554432, i32 %9, !prof !3
  %11 = icmp slt i32 %6, -2147483584
  %12 = ashr i32 %6, 6
  %13 = select i1 %11, i32 -33554432, i32 %12, !prof !3
  %14 = trunc i64 %7 to i32
  %15 = icmp slt i32 %14, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %14) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !3
  %21 = lshr i64 %7, 32
  %22 = trunc i64 %21 to i32
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %22) #13
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !3
  %29 = icmp sgt i32 %20, 2147483583
  br i1 %29, label %37, label %30, !prof !3

30:                                               ; preds = %1
  %31 = icmp sgt i32 %20, -1
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = add nuw nsw i32 %20, 63
  %34 = sdiv i32 %33, 64
  br label %37

35:                                               ; preds = %30
  %36 = sdiv i32 %20, 64
  br label %37

37:                                               ; preds = %35, %32, %1
  %38 = phi i32 [ %34, %32 ], [ %36, %35 ], [ 33554431, %1 ]
  %39 = icmp sgt i32 %28, 2147483583
  br i1 %39, label %47, label %40, !prof !3

40:                                               ; preds = %37
  %41 = icmp sgt i32 %28, -1
  br i1 %41, label %42, label %45

42:                                               ; preds = %40
  %43 = add nuw nsw i32 %28, 63
  %44 = sdiv i32 %43, 64
  br label %47

45:                                               ; preds = %40
  %46 = sdiv i32 %28, 64
  br label %47

47:                                               ; preds = %37, %42, %45
  %48 = phi i32 [ %44, %42 ], [ %46, %45 ], [ 33554431, %37 ]
  %49 = sub nsw i32 %38, %10
  %50 = sub nsw i32 %48, %13
  %51 = zext i32 %50 to i64
  %52 = shl nuw i64 %51, 32
  %53 = zext i32 %49 to i64
  %54 = or i64 %52, %53
  %55 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %54, 1
  ret { i64, i64 } %55
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #13
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #13
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #13
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #13
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

declare i32 @_ZNK5blink20LayoutBoxModelObject37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

declare dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2344, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !4

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2344* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.anon.2344, %class.anon.2344* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2344, %class.anon.2344* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), %class.anon.2344* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #13
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2344* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = tail call i8* @_Znwm(i64 192) #14
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #13
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #13
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #13
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #13
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #13
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #13
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.anon.2344, %class.anon.2344* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #13
  %40 = getelementptr inbounds %class.anon.2344, %class.anon.2344* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #13
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #13
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #13
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #13
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #13
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !5

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !7

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !8

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #14
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #14, !noalias !9
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !9
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #14
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #1

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #10

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* sret, %"class.blink::TransformationMatrix"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* sret, %"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutObject"*, %"class.blink::FloatQuad"* dereferenceable(32), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare { i64, i64 } @_ZNK5blink14NGInlineCursor22CurrentRectInBlockFlowEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #13
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #13
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #13
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #13
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #13
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #13
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #13
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

declare zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"*, %"class.blink::Region"* dereferenceable(304)) local_unnamed_addr #1

declare void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"*, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"*, %"struct.blink::Region::Span"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"struct.blink::Region::Span"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"*, i32*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare { i64, i64 } @_ZNK5blink14NGFragmentItem11InkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 9
  %6 = load float, float* %5, align 8
  %7 = fcmp olt float %6, 1.000000e+00
  br i1 %7, label %171, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %49, label %20

20:                                               ; preds = %8, %24
  %21 = phi i32* [ %25, %24 ], [ %14, %8 ]
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 251
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i32, i32* %21, i64 1
  %26 = icmp ult i32* %25, %18
  br i1 %26, label %20, label %34

27:                                               ; preds = %20
  %28 = ptrtoint i32* %21 to i64
  %29 = ptrtoint i32* %14 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 2
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %171

34:                                               ; preds = %24, %27
  br label %35

35:                                               ; preds = %34, %39
  %36 = phi i32* [ %40, %39 ], [ %14, %34 ]
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1275
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i32, i32* %36, i64 1
  %41 = icmp ult i32* %40, %18
  br i1 %41, label %35, label %49

42:                                               ; preds = %35
  %43 = ptrtoint i32* %36 to i64
  %44 = ptrtoint i32* %14 to i64
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %171

49:                                               ; preds = %39, %8, %42
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 39
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 1048576
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %171

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %171

62:                                               ; preds = %54
  br i1 %19, label %92, label %63

63:                                               ; preds = %62, %67
  %64 = phi i32* [ %68, %67 ], [ %14, %62 ]
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 145
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i32, i32* %64, i64 1
  %69 = icmp ult i32* %68, %18
  br i1 %69, label %63, label %77

70:                                               ; preds = %63
  %71 = ptrtoint i32* %64 to i64
  %72 = ptrtoint i32* %14 to i64
  %73 = sub i64 %71, %72
  %74 = lshr exact i64 %73, 2
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %171

77:                                               ; preds = %67, %70
  br label %78

78:                                               ; preds = %77, %82
  %79 = phi i32* [ %83, %82 ], [ %14, %77 ]
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 1169
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds i32, i32* %79, i64 1
  %84 = icmp ult i32* %83, %18
  br i1 %84, label %78, label %92

85:                                               ; preds = %78
  %86 = ptrtoint i32* %79 to i64
  %87 = ptrtoint i32* %14 to i64
  %88 = sub i64 %86, %87
  %89 = lshr exact i64 %88, 2
  %90 = trunc i64 %89 to i32
  %91 = icmp ne i32 %90, -1
  br label %92

92:                                               ; preds = %82, %62, %85
  %93 = phi i1 [ %91, %85 ], [ false, %62 ], [ false, %82 ]
  %94 = or i1 %93, %1
  br i1 %94, label %171, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %97, i64 0, i32 3
  %99 = load i8, i8* %98, align 4
  %100 = and i8 %99, 32
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %171

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %104, i64 0, i32 45
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 1073741824
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %171

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 13, i32 5
  %111 = bitcast [7 x i8]* %110 to i56*
  %112 = load i56, i56* %111, align 8
  %113 = and i56 %112, 281474976710656
  %114 = icmp eq i56 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 13
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %116) #13
  %117 = load i56, i56* %111, align 8
  br label %118

118:                                              ; preds = %115, %109
  %119 = phi i56 [ %112, %109 ], [ %117, %115 ]
  %120 = and i56 %119, 8796093022208
  %121 = icmp eq i56 %120, 0
  br i1 %121, label %122, label %171

122:                                              ; preds = %118
  %123 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %123, i64 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %125, i64 0, i32 14, i32 0, i32 0, i32 0
  %127 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %127, i64 0, i32 2, i32 0, i32 0
  %129 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %128, align 8
  %130 = icmp eq %"class.blink::StyleImage"* %129, null
  br i1 %130, label %131, label %171

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %123, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %133, i64 0, i32 2, i32 0, i32 0
  %135 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %135, i64 0, i32 45
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, 480
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %171

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %135, i64 0, i32 16, i32 0, i32 0
  %142 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %170

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %125, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %148, i64 0, i32 2, i32 0, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %148, i64 0, i32 2, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %150, i64 %153
  %155 = icmp eq i32 %152, 0
  br i1 %155, label %171, label %156

156:                                              ; preds = %146, %160
  %157 = phi i32* [ %161, %160 ], [ %150, %146 ]
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 47
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds i32, i32* %157, i64 1
  %162 = icmp ult i32* %161, %154
  br i1 %162, label %156, label %171

163:                                              ; preds = %156
  %164 = ptrtoint i32* %157 to i64
  %165 = ptrtoint i32* %150 to i64
  %166 = sub i64 %164, %165
  %167 = lshr exact i64 %166, 2
  %168 = trunc i64 %167 to i32
  %169 = icmp eq i32 %168, -1
  br i1 %169, label %171, label %170

170:                                              ; preds = %163, %140
  br label %171

171:                                              ; preds = %160, %163, %131, %122, %102, %95, %49, %146, %118, %70, %54, %27, %2, %42, %170, %92
  %172 = phi i1 [ true, %49 ], [ true, %92 ], [ true, %95 ], [ true, %102 ], [ true, %122 ], [ true, %131 ], [ true, %170 ], [ false, %163 ], [ true, %42 ], [ true, %2 ], [ true, %27 ], [ true, %54 ], [ true, %70 ], [ true, %118 ], [ false, %146 ], [ false, %160 ]
  ret i1 %172
}

declare void @_ZN5blink13HitTestResult12SetInnerNodeEPNS_4NodeE(%"class.blink::HitTestResult"*, %"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #1

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

declare <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcEEN4base11trace_event16TraceEventHandleEcPKhS9_S9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i8** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #13
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247307006, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = bitcast %"union.base::trace_event::TraceValue"* %22 to i8**
  store i8* %30, i8** %31, align 8
  %32 = bitcast i8** %10 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #13
  %36 = load i8, i8* %18, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %11, %67
  %39 = phi i64 [ %68, %67 ], [ 0, %11 ]
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %46 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %46 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %46) #13
  %53 = load i8, i8* %40, align 1
  br label %54

54:                                               ; preds = %48, %38
  %55 = phi i8 [ %41, %38 ], [ %53, %48 ]
  %56 = icmp eq i8 %55, 9
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %59 = bitcast %"union.base::trace_event::TraceValue"* %58 to %"class.protozero::HeapBuffered"**
  %60 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %59, align 8
  %61 = icmp eq %"class.protozero::HeapBuffered"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %63) #13
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %64) #13
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %65) #13
  %66 = bitcast %"class.protozero::HeapBuffered"* %60 to i8*
  call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %62, %57, %54, %43
  %68 = add nuw nsw i64 %39, 1
  %69 = load i8, i8* %18, align 8
  %70 = zext i8 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %38, label %72

72:                                               ; preds = %67, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret i64 %35
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare i8* @_ZN5blink31PaintInvalidationReasonToStringENS_23PaintInvalidationReasonE(i8 zeroext) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #13
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 -23
  %8 = icmp eq %"class.base::RefCounted.732"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 1
  %11 = bitcast %"class.base::RefCounted.732"* %10 to %"class.blink::StyleCachedData"**
  %12 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %11, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %11, align 8
  %13 = icmp eq %"class.blink::StyleCachedData"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %15, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %15, align 8
  %17 = icmp eq %"class.WTF::Vector.739"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22, !prof !3

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  br label %27

27:                                               ; preds = %22, %33
  %28 = phi %class.scoped_refptr* [ %34, %33 ], [ %24, %22 ]
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = icmp eq %"class.blink::ComputedStyle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %30) #13
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %26
  br i1 %35, label %36, label %27

36:                                               ; preds = %33
  store i32 0, i32* %19, align 4
  br label %37

37:                                               ; preds = %36, %18
  %38 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.scoped_refptr*, %class.scoped_refptr** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr*
  %42 = icmp eq %class.scoped_refptr* %39, %41
  br i1 %42, label %45, label %43, !prof !4

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2322"* %44, %class.scoped_refptr* %39) #13
  br label %45

45:                                               ; preds = %37, %43
  store %class.scoped_refptr* null, %class.scoped_refptr** %38, align 8
  %46 = bitcast %"class.WTF::Vector.739"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #13
  br label %47

47:                                               ; preds = %14, %45
  %48 = bitcast %"class.blink::StyleCachedData"* %12 to i8*
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %47, %9
  %50 = bitcast %"class.base::RefCounted.732"* %7 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* nonnull %50) #13
  %51 = bitcast %"class.base::RefCounted.732"* %7 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %49, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #13
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #13
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #13
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #13
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #13
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #13
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #13
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #13
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #13
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #13
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #13
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #13
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #13
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #13
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #13
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #13
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #13
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #13
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #13
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #13
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #13
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #13
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #13
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #13
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #13
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #13
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #13
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #13
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #13
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #13
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3) #13
  %4 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 -23
  %9 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 1
  %10 = bitcast %"class.base::RefCounted.732"* %9 to %"class.blink::StyleCachedData"**
  %11 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %10, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %10, align 8
  %12 = icmp eq %"class.blink::StyleCachedData"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %14, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.739"* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21, !prof !3

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %32
  %27 = phi %class.scoped_refptr* [ %33, %32 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %29) #13
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %34 = icmp eq %class.scoped_refptr* %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %32
  store i32 0, i32* %18, align 4
  br label %36

36:                                               ; preds = %35, %17
  %37 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr*, %class.scoped_refptr** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %class.scoped_refptr*
  %41 = icmp eq %class.scoped_refptr* %38, %40
  br i1 %41, label %44, label %42, !prof !4

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2322"* %43, %class.scoped_refptr* %38) #13
  br label %44

44:                                               ; preds = %36, %42
  store %class.scoped_refptr* null, %class.scoped_refptr** %37, align 8
  %45 = bitcast %"class.WTF::Vector.739"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #13
  br label %46

46:                                               ; preds = %13, %44
  %47 = bitcast %"class.blink::StyleCachedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %46, %7
  %49 = bitcast %"class.base::RefCounted.732"* %8 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %49) #13
  %50 = bitcast %"class.base::RefCounted.732"* %8 to i8*
  tail call void @free(i8* %50) #13
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2322"*, %class.scoped_refptr*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #13
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #13
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !4

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #13
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #13
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #13
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !4

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #13
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !4

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #13
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #13
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #13
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #13
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #13
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #13
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #13
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #13
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #13
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #13
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !3

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #13
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #13
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #13
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #13
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #13
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #13
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #13
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #13
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #13
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #13
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #13
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #13
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #13
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #13
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #13
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #13
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #13
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #13
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !3

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #13
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #13
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #13
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !4

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !3

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #13
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #13
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #13
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #13
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !3

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #13
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !4

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #13
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #13
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !4

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !3

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #13
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #13
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #13
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #13
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #13
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #13
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #13
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #13
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #13
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #13
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #13
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #13
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !4

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !3

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #13
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #13
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #13
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #13
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !4

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !3

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #13
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #13
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #13
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #13
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #13
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !4

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #13
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #13
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #13
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #13
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #13
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #13
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #13
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #13
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #13
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #13
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !4

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !3

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #13
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #13
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #13
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #13
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !4

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !3

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #13
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #13
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #13
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !4

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !3

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #13
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !4

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #13
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #13
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !4

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #13
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !4

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #13
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !4

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #13
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !4

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !3

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #13
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #13
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !4

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !3

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #13
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #13
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !4

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !4

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #13
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !4

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !4

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !4

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !4

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !4

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !4

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !3

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #13
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #13
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !4

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !4

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !3

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #13
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #13
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !4

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !4

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !3

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #13
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #13
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !4

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !4

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !3

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #13
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #13
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !4

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !4

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !3

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #13
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #13
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !4

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !4

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !3

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #13
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #13
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #13
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !4

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !3

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #13
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #13
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #13
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #13
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #13
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #13
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #13
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !3

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #13
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #13
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !3

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #13
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #13
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #13
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #13
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #13
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #13
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #13
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #13
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #13
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #13
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #13
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #13
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #13
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #13
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #13
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #13
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #13
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #13
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #13
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #13
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #13
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #13
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #13
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !4

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !3

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #13
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #13
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #13
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #13
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !4

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !3

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #13
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #13
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #13
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #13
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !4

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !3

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #13
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #13
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #13
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #13
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !4

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !3

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #13
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #13
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #13
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !4

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !3

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #13
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !4

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #13
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #13
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #13
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #13
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !3

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !4

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #13
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #13
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #13
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !4

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !3

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #13
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #13
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #13
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #13
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !4

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !3

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #13
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #13
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #13
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #13
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #13
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #13
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #13
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #13
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #13
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !3

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #13
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #13
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #13
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink12LayoutInlineELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2270"*, %"class.blink::LayoutInline"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutInline"**, %"class.blink::LayoutInline"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutInline"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutInline"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutInline"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink12LayoutInlineEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink12LayoutInlineEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2270"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutInline"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutInline"**, %"class.blink::LayoutInline"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutInline"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutInline"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.2270"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.2270"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutInline"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutInline"** %1 to i64
  %56 = ptrtoint %"class.blink::LayoutInline"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutInline"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink12LayoutInlineEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink12LayoutInlineEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2270"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutInline"**, %"class.blink::LayoutInline"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutInline"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutInline"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.2270"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.2270"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutInline"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutInline"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutInline"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutInline"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %100, i64 %103
  %105 = bitcast %"class.blink::LayoutInline"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::LayoutInline"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink12LayoutInlineEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::LayoutInline"** @_ZN3WTF6VectorIPN5blink12LayoutInlineELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2270"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2270", %"class.WTF::Vector.2270"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutInline"**, %"class.blink::LayoutInline"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %24, i64 %25
  ret %"class.blink::LayoutInline"** %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %8 = icmp ugt %"class.blink::FloatQuad"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FloatQuad"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FloatQuad"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2276"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::FloatQuad"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 5
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::FloatQuad"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::FloatQuad"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.2276"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.2276"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::FloatQuad"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::FloatQuad"* %1 to i64
  %56 = ptrtoint %"class.blink::FloatQuad"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::FloatQuad"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2276"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::FloatQuad"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::FloatQuad"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.2276"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.2276"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 5
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::FloatQuad"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::FloatQuad"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::FloatQuad"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::FloatQuad"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %100, i64 %103
  %105 = bitcast %"class.blink::FloatQuad"* %104 to i8*
  %106 = bitcast %"class.blink::FloatQuad"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 32, i1 false) #13
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEEjbE3$_0EEvRKT_EUlRKNS_10LayoutRectEE_EEvSC_PKS0_"(%"class.blink::LayoutInline"* nocapture readonly, %class.anon.2414* nocapture readonly dereferenceable(24), %"class.blink::LayoutInline"*) unnamed_addr #5 align 2 {
  %4 = alloca %"class.blink::FloatQuad", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.blink::FloatQuad", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.blink::FloatQuad", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.blink::FloatQuad", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca %"class.blink::FloatQuad", align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca %"class.blink::FloatQuad", align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = alloca %"class.blink::LayoutUnit", align 4
  %17 = alloca %"class.blink::LayoutUnit", align 4
  %18 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %0)
  %19 = icmp eq %"class.blink::InlineBox"* %18, null
  br i1 %19, label %857, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = bitcast %"class.blink::LayoutUnit"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  store i32 0, i32* %29, align 4
  %30 = bitcast %"class.blink::LayoutUnit"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %17, i64 0, i32 0
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %112, label %35

35:                                               ; preds = %20
  %36 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %37 = bitcast %class.anon.2414* %1 to %"class.blink::LayoutObject"**
  %38 = bitcast { i64, i64 }* %5 to i8*
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %40 = getelementptr inbounds %class.anon.2414, %class.anon.2414* %1, i64 0, i32 1
  %41 = bitcast %"class.blink::LayoutBlock"** %40 to %"class.blink::LayoutBox"**
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %43 = getelementptr inbounds %class.anon.2414, %class.anon.2414* %1, i64 0, i32 2
  %44 = bitcast %"class.blink::FloatQuad"* %4 to i8*
  %45 = bitcast %"class.blink::FloatQuad"* %4 to <2 x float>*
  %46 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 1
  %48 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 0
  %49 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 1
  %50 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 0
  %51 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 1
  %52 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %53 = bitcast { i64, i64 }* %7 to i8*
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %56 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  %57 = bitcast %"class.blink::FloatQuad"* %6 to <2 x float>*
  %58 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 1
  %60 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 0
  %61 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 1
  %62 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 0
  %63 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 1
  %64 = bitcast { i64, i64 }* %15 to %"struct.blink::PhysicalRect"*
  %65 = bitcast { i64, i64 }* %15 to i8*
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %68 = bitcast %"class.blink::FloatQuad"* %14 to i8*
  %69 = bitcast %"class.blink::FloatQuad"* %14 to <2 x float>*
  %70 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %14, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %14, i64 0, i32 1, i32 1
  %72 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %14, i64 0, i32 2, i32 0
  %73 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %14, i64 0, i32 2, i32 1
  %74 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %14, i64 0, i32 3, i32 0
  %75 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %14, i64 0, i32 3, i32 1
  %76 = bitcast { i64, i64 }* %13 to %"struct.blink::PhysicalRect"*
  %77 = bitcast { i64, i64 }* %13 to i8*
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %80 = bitcast %"class.blink::FloatQuad"* %12 to i8*
  %81 = bitcast %"class.blink::FloatQuad"* %12 to <2 x float>*
  %82 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 1, i32 1
  %84 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 2, i32 0
  %85 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 2, i32 1
  %86 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 3, i32 0
  %87 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %12, i64 0, i32 3, i32 1
  %88 = bitcast { i64, i64 }* %11 to %"struct.blink::PhysicalRect"*
  %89 = bitcast { i64, i64 }* %11 to i8*
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %92 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  %93 = bitcast %"class.blink::FloatQuad"* %10 to <2 x float>*
  %94 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 1, i32 0
  %95 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 1, i32 1
  %96 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 2, i32 0
  %97 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 2, i32 1
  %98 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 3, i32 0
  %99 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %10, i64 0, i32 3, i32 1
  %100 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %101 = bitcast { i64, i64 }* %9 to i8*
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %104 = bitcast %"class.blink::FloatQuad"* %8 to i8*
  %105 = bitcast %"class.blink::FloatQuad"* %8 to <2 x float>*
  %106 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 1, i32 1
  %108 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 2, i32 0
  %109 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 2, i32 1
  %110 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 3, i32 0
  %111 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 0, i32 3, i32 1
  br label %113

112:                                              ; preds = %853, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  br label %857

113:                                              ; preds = %35, %853
  %114 = phi %"class.blink::LayoutObject"* [ %33, %35 ], [ %855, %853 ]
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 0, i32 4
  %116 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %115 to i96*
  %117 = load i96, i96* %116, align 4
  %118 = and i96 %117, 8388608
  %119 = icmp ne i96 %118, 0
  %120 = and i96 %117, 113336795588871485128704
  %121 = icmp eq i96 %120, 75557863725914323419136
  %122 = or i1 %121, %119
  br i1 %122, label %853, label %123

123:                                              ; preds = %113
  %124 = and i96 %117, 67108864
  %125 = icmp eq i96 %124, 0
  br i1 %125, label %364, label %126

126:                                              ; preds = %123
  %127 = bitcast %"class.blink::LayoutObject"* %114 to %"class.blink::LayoutBox"*
  %128 = and i96 %117, 268435456
  %129 = icmp eq i96 %128, 0
  br i1 %129, label %130, label %853

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 2, i32 1, i32 1
  %132 = bitcast i8* %131 to %"class.blink::InlineBox"**
  %133 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %132, align 8
  %134 = icmp eq %"class.blink::InlineBox"* %133, null
  br i1 %134, label %853, label %135

135:                                              ; preds = %130
  %136 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %133) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %136, %"class.blink::LayoutUnit"* nonnull %16, %"class.blink::LayoutUnit"* nonnull %17)
  br i1 %27, label %137, label %250

137:                                              ; preds = %135
  %138 = load i96, i96* %116, align 4
  %139 = and i96 %138, 268435456
  %140 = icmp eq i96 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %132, align 8
  br label %143

143:                                              ; preds = %137, %141
  %144 = phi %"class.blink::InlineBox"* [ %142, %141 ], [ null, %137 ]
  %145 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %144, i64 0, i32 5, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = bitcast %"class.blink::LayoutObject"* %114 to i32 (%"class.blink::LayoutBox"*)***
  %148 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %147, align 8
  %149 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %148, i64 129
  %150 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %149, align 8
  %151 = call i32 %150(%"class.blink::LayoutBox"* nonnull %127) #13
  %152 = icmp sgt i32 %151, -1
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %146, i32 %151) #13
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !3
  %158 = load i32, i32* %29, align 4
  %159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 1, i32 4, i32 0, i64 4
  %160 = bitcast i8* %159 to i64*
  %161 = load i64, i64* %160, align 4
  %162 = trunc i64 %161 to i32
  %163 = bitcast %"class.blink::LayoutObject"* %114 to %"class.blink::LayoutBoxModelObject"*
  %164 = bitcast %"class.blink::LayoutObject"* %114 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %165 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %164, align 8
  %166 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %165, i64 129
  %167 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %166, align 8
  %168 = call i32 %167(%"class.blink::LayoutBoxModelObject"* nonnull %163) #13
  %169 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %164, align 8
  %170 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %169, i64 130
  %171 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %170, align 8
  %172 = call i32 %171(%"class.blink::LayoutBoxModelObject"* nonnull %163) #13
  %173 = icmp slt i32 %172, 0
  %174 = select i1 %173, i32 -2147483648, i32 2147483647
  %175 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %168, i32 %172) #13
  %176 = extractvalue { i32, i1 } %175, 1
  %177 = extractvalue { i32, i1 } %175, 0
  %178 = select i1 %176, i32 %174, i32 %177, !prof !3
  %179 = icmp slt i32 %178, 0
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %162, i32 %178) #13
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !3
  %185 = load i32, i32* %31, align 4
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #13
  %187 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 16, i1 false) #13
  %188 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %188, i64 0, i32 0, i32 9
  %190 = bitcast [20 x i8]* %189 to i160*
  %191 = load i160, i160* %190, align 8
  %192 = and i160 %191, 15211807202738752817960438464512
  %193 = icmp eq i160 %192, 5070602400912917605986812821504
  br i1 %193, label %194, label %201, !prof !3

194:                                              ; preds = %143
  %195 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %196 = bitcast %"class.blink::LayoutObject"* %186 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %197 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %196, align 8
  %198 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %197, i64 106
  %199 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %198, align 8
  %200 = call i32 %199(%"class.blink::LayoutObject"* %186, i32 %157, i32 %184, %"class.blink::LayoutBox"* %195) #13
  br label %201

201:                                              ; preds = %143, %194
  %202 = phi i32 [ %200, %194 ], [ %157, %143 ]
  %203 = zext i32 %158 to i64
  %204 = shl nuw i64 %203, 32
  %205 = zext i32 %202 to i64
  %206 = or i64 %204, %205
  %207 = zext i32 %185 to i64
  %208 = shl nuw i64 %207, 32
  %209 = zext i32 %184 to i64
  %210 = or i64 %208, %209
  store i64 %206, i64* %55, align 8
  store i64 %210, i64* %54, align 8
  %211 = load %class.anon.2286*, %class.anon.2286** %43, align 8
  %212 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %211, i64 0, i32 1
  %213 = load i8*, i8** %212, align 8
  %214 = load i8, i8* %213, align 1, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %201
  %217 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %211, i64 0, i32 0
  %218 = load %class.anon*, %class.anon** %217, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %218, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %52) #13
  br label %249

219:                                              ; preds = %201
  %220 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %211, i64 0, i32 2
  %221 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %220, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #13
  %222 = sitofp i32 %202 to float
  %223 = fmul float %222, 1.562500e-02
  %224 = sitofp i32 %158 to float
  %225 = fmul float %224, 1.562500e-02
  %226 = sitofp i32 %184 to float
  %227 = fmul float %226, 1.562500e-02
  %228 = sitofp i32 %185 to float
  %229 = fmul float %228, 1.562500e-02
  %230 = insertelement <2 x float> undef, float %223, i32 0
  %231 = insertelement <2 x float> %230, float %225, i32 1
  store <2 x float> %231, <2 x float>* %57, align 8
  %232 = fadd float %223, %227
  store float %232, float* %58, align 8
  store float %225, float* %59, align 4
  %233 = fadd float %225, %229
  store float %232, float* %60, align 8
  store float %233, float* %61, align 4
  store float %223, float* %62, align 8
  store float %233, float* %63, align 4
  %234 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %221, i64 0, i32 0, i32 0, i32 2
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %221, i64 0, i32 0, i32 0, i32 1
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %235, %237
  br i1 %238, label %247, label %239, !prof !3

239:                                              ; preds = %219
  %240 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %221, i64 0, i32 0, i32 0, i32 0
  %241 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %240, align 8
  %242 = zext i32 %235 to i64
  %243 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %241, i64 %242
  %244 = bitcast %"class.blink::FloatQuad"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* nonnull align 8 %56, i64 32, i1 false) #13
  %245 = load i32, i32* %234, align 4
  %246 = add i32 %245, 1
  store i32 %246, i32* %234, align 4
  br label %248

247:                                              ; preds = %219
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %221, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %6) #13
  br label %248

248:                                              ; preds = %247, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #13
  br label %249

249:                                              ; preds = %216, %248
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #13
  br label %853

250:                                              ; preds = %135
  %251 = load i32, i32* %29, align 4
  %252 = load i96, i96* %116, align 4
  %253 = and i96 %252, 268435456
  %254 = icmp eq i96 %253, 0
  br i1 %254, label %255, label %257

255:                                              ; preds = %250
  %256 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %132, align 8
  br label %257

257:                                              ; preds = %250, %255
  %258 = phi %"class.blink::InlineBox"* [ %256, %255 ], [ null, %250 ]
  %259 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %258, i64 0, i32 5, i32 1, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = bitcast %"class.blink::LayoutObject"* %114 to i32 (%"class.blink::LayoutBox"*)***
  %262 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %261, align 8
  %263 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %262, i64 127
  %264 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %263, align 8
  %265 = call i32 %264(%"class.blink::LayoutBox"* nonnull %127) #13
  %266 = icmp sgt i32 %265, -1
  %267 = select i1 %266, i32 -2147483648, i32 2147483647
  %268 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %260, i32 %265) #13
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !3
  %272 = load i32, i32* %31, align 4
  %273 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 1, i32 4, i32 0, i64 4
  %274 = bitcast i8* %273 to i64*
  %275 = load i64, i64* %274, align 4
  %276 = lshr i64 %275, 32
  %277 = trunc i64 %276 to i32
  %278 = bitcast %"class.blink::LayoutObject"* %114 to %"class.blink::LayoutBoxModelObject"*
  %279 = bitcast %"class.blink::LayoutObject"* %114 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %280 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %279, align 8
  %281 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %280, i64 127
  %282 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %281, align 8
  %283 = call i32 %282(%"class.blink::LayoutBoxModelObject"* nonnull %278) #13
  %284 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %279, align 8
  %285 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %284, i64 128
  %286 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %285, align 8
  %287 = call i32 %286(%"class.blink::LayoutBoxModelObject"* nonnull %278) #13
  %288 = icmp slt i32 %287, 0
  %289 = select i1 %288, i32 -2147483648, i32 2147483647
  %290 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %283, i32 %287) #13
  %291 = extractvalue { i32, i1 } %290, 1
  %292 = extractvalue { i32, i1 } %290, 0
  %293 = select i1 %291, i32 %289, i32 %292, !prof !3
  %294 = icmp slt i32 %293, 0
  %295 = select i1 %294, i32 -2147483648, i32 2147483647
  %296 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %277, i32 %293) #13
  %297 = extractvalue { i32, i1 } %296, 1
  %298 = extractvalue { i32, i1 } %296, 0
  %299 = select i1 %297, i32 %295, i32 %298, !prof !3
  %300 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #13
  %301 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %300, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false) #13
  %302 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %302, i64 0, i32 0, i32 9
  %304 = bitcast [20 x i8]* %303 to i160*
  %305 = load i160, i160* %304, align 8
  %306 = and i160 %305, 15211807202738752817960438464512
  %307 = icmp eq i160 %306, 5070602400912917605986812821504
  br i1 %307, label %308, label %315, !prof !3

308:                                              ; preds = %257
  %309 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %310 = bitcast %"class.blink::LayoutObject"* %300 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %311 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %310, align 8
  %312 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %311, i64 106
  %313 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %312, align 8
  %314 = call i32 %313(%"class.blink::LayoutObject"* %300, i32 %251, i32 %272, %"class.blink::LayoutBox"* %309) #13
  br label %315

315:                                              ; preds = %257, %308
  %316 = phi i32 [ %314, %308 ], [ %251, %257 ]
  %317 = zext i32 %271 to i64
  %318 = shl nuw i64 %317, 32
  %319 = zext i32 %316 to i64
  %320 = or i64 %318, %319
  %321 = zext i32 %299 to i64
  %322 = shl nuw i64 %321, 32
  %323 = zext i32 %272 to i64
  %324 = or i64 %322, %323
  store i64 %320, i64* %42, align 8
  store i64 %324, i64* %39, align 8
  %325 = load %class.anon.2286*, %class.anon.2286** %43, align 8
  %326 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %325, i64 0, i32 1
  %327 = load i8*, i8** %326, align 8
  %328 = load i8, i8* %327, align 1, !range !2
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %333, label %330

330:                                              ; preds = %315
  %331 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %325, i64 0, i32 0
  %332 = load %class.anon*, %class.anon** %331, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %332, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %36) #13
  br label %363

333:                                              ; preds = %315
  %334 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %325, i64 0, i32 2
  %335 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %334, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #13
  %336 = sitofp i32 %316 to float
  %337 = fmul float %336, 1.562500e-02
  %338 = sitofp i32 %271 to float
  %339 = fmul float %338, 1.562500e-02
  %340 = sitofp i32 %272 to float
  %341 = fmul float %340, 1.562500e-02
  %342 = sitofp i32 %299 to float
  %343 = fmul float %342, 1.562500e-02
  %344 = insertelement <2 x float> undef, float %337, i32 0
  %345 = insertelement <2 x float> %344, float %339, i32 1
  store <2 x float> %345, <2 x float>* %45, align 8
  %346 = fadd float %337, %341
  store float %346, float* %46, align 8
  store float %339, float* %47, align 4
  %347 = fadd float %339, %343
  store float %346, float* %48, align 8
  store float %347, float* %49, align 4
  store float %337, float* %50, align 8
  store float %347, float* %51, align 4
  %348 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %335, i64 0, i32 0, i32 0, i32 2
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %335, i64 0, i32 0, i32 0, i32 1
  %351 = load i32, i32* %350, align 8
  %352 = icmp eq i32 %349, %351
  br i1 %352, label %361, label %353, !prof !3

353:                                              ; preds = %333
  %354 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %335, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %354, align 8
  %356 = zext i32 %349 to i64
  %357 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %355, i64 %356
  %358 = bitcast %"class.blink::FloatQuad"* %357 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* nonnull align 8 %44, i64 32, i1 false) #13
  %359 = load i32, i32* %348, align 4
  %360 = add i32 %359, 1
  store i32 %360, i32* %348, align 4
  br label %362

361:                                              ; preds = %333
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %335, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %4) #13
  br label %362

362:                                              ; preds = %361, %353
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #13
  br label %363

363:                                              ; preds = %330, %362
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #13
  br label %853

364:                                              ; preds = %123
  %365 = bitcast %"class.blink::LayoutObject"* %114 to i1 (%"class.blink::LayoutObject"*)***
  %366 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %365, align 8
  %367 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %366, i64 26
  %368 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %367, align 8
  %369 = call zeroext i1 %368(%"class.blink::LayoutObject"* nonnull %114) #13
  %370 = load i96, i96* %116, align 4
  br i1 %369, label %371, label %688

371:                                              ; preds = %364
  %372 = and i96 %370, 70369012613120
  %373 = icmp eq i96 %372, 70368744177664
  br i1 %373, label %376, label %374

374:                                              ; preds = %371
  %375 = bitcast %"class.blink::LayoutObject"* %114 to %"class.blink::LayoutInline"*
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS3_18PartitionAllocatorEEEjbE3$_0EEvRKT_EUlRKNS_10LayoutRectEE_EEvSC_PKS0_"(%"class.blink::LayoutInline"* nonnull %375, %class.anon.2414* dereferenceable(24) %1, %"class.blink::LayoutInline"* %2)
  br label %853

376:                                              ; preds = %371
  %377 = and i96 %370, 268435456
  %378 = icmp eq i96 %377, 0
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %384

381:                                              ; preds = %376
  %382 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 1, i32 1, i32 1
  %383 = bitcast i8* %382 to %"class.blink::LineBoxList"*
  br label %384

384:                                              ; preds = %379, %381
  %385 = phi %"class.blink::LineBoxList"* [ %380, %379 ], [ %383, %381 ]
  %386 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %385, i64 0, i32 0, i32 0
  %387 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %386, align 8
  %388 = icmp eq %"class.blink::InlineFlowBox"* %387, null
  br i1 %388, label %853, label %389

389:                                              ; preds = %384, %683
  %390 = phi %"class.blink::InlineFlowBox"* [ %686, %683 ], [ %387, %384 ]
  %391 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0
  %392 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %391) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %392, %"class.blink::LayoutUnit"* nonnull %16, %"class.blink::LayoutUnit"* nonnull %17)
  %393 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 6, i32 0
  %394 = load i32, i32* %393, align 8
  %395 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 6
  %396 = load i32, i32* %395, align 8
  %397 = and i32 %396, 1
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %423, label %399

399:                                              ; preds = %389
  %400 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 7, i32 0
  %401 = load i32, i32* %400, align 4
  %402 = and i32 %401, 2048
  %403 = icmp eq i32 %402, 0
  %404 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 4, i32 0
  %405 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %404, align 8
  %406 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %405, i64 0, i32 4
  %407 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %406 to i96*
  %408 = load i96, i96* %407, align 4
  %409 = and i96 %408, 33554432
  %410 = icmp eq i96 %409, 0
  %411 = bitcast %"class.blink::LayoutObject"* %405 to %"class.blink::LayoutBoxModelObject"*
  %412 = select i1 %410, %"class.blink::LayoutBoxModelObject"* %411, %"class.blink::LayoutBoxModelObject"* null
  %413 = bitcast %"class.blink::LayoutBoxModelObject"* %412 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %414 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %413, align 8
  br i1 %403, label %419, label %415

415:                                              ; preds = %399
  %416 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %414, i64 129
  %417 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %416, align 8
  %418 = call i32 %417(%"class.blink::LayoutBoxModelObject"* %412) #13
  br label %423

419:                                              ; preds = %399
  %420 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %414, i64 127
  %421 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %420, align 8
  %422 = call i32 %421(%"class.blink::LayoutBoxModelObject"* %412) #13
  br label %423

423:                                              ; preds = %419, %415, %389
  %424 = phi i32 [ 0, %389 ], [ %418, %415 ], [ %422, %419 ]
  %425 = load i32, i32* %395, align 8
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %456, label %428

428:                                              ; preds = %423
  %429 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 7, i32 0
  %430 = load i32, i32* %429, align 4
  %431 = and i32 %430, 2048
  %432 = icmp eq i32 %431, 0
  %433 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 4, i32 0
  %434 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %433, align 8
  %435 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %434, i64 0, i32 4
  %436 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %435 to i96*
  %437 = load i96, i96* %436, align 4
  %438 = and i96 %437, 33554432
  %439 = icmp eq i96 %438, 0
  %440 = bitcast %"class.blink::LayoutObject"* %434 to %"class.blink::LayoutBoxModelObject"*
  %441 = select i1 %439, %"class.blink::LayoutBoxModelObject"* %440, %"class.blink::LayoutBoxModelObject"* null
  %442 = bitcast %"class.blink::LayoutBoxModelObject"* %441 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %443 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %442, align 8
  br i1 %432, label %448, label %444

444:                                              ; preds = %428
  %445 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %443, i64 130
  %446 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %445, align 8
  %447 = call i32 %446(%"class.blink::LayoutBoxModelObject"* %441) #13
  br label %452

448:                                              ; preds = %428
  %449 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %443, i64 128
  %450 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %449, align 8
  %451 = call i32 %450(%"class.blink::LayoutBoxModelObject"* %441) #13
  br label %452

452:                                              ; preds = %448, %444
  %453 = phi i32 [ %447, %444 ], [ %451, %448 ]
  %454 = icmp slt i32 %453, 0
  %455 = select i1 %454, i32 -2147483648, i32 2147483647
  br label %456

456:                                              ; preds = %423, %452
  %457 = phi i32 [ 0, %423 ], [ %453, %452 ]
  %458 = phi i32 [ 2147483647, %423 ], [ %455, %452 ]
  %459 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %424, i32 %457) #13
  %460 = extractvalue { i32, i1 } %459, 1
  %461 = extractvalue { i32, i1 } %459, 0
  %462 = select i1 %460, i32 %458, i32 %461, !prof !3
  %463 = icmp slt i32 %462, 0
  %464 = select i1 %463, i32 -2147483648, i32 2147483647
  %465 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %394, i32 %462) #13
  %466 = extractvalue { i32, i1 } %465, 1
  %467 = extractvalue { i32, i1 } %465, 0
  %468 = select i1 %466, i32 %464, i32 %467, !prof !3
  br i1 %27, label %469, label %576

469:                                              ; preds = %456
  %470 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 5, i32 0, i32 0
  %471 = load i32, i32* %470, align 4
  %472 = load i32, i32* %395, align 8
  %473 = and i32 %472, 1
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %502, label %475

475:                                              ; preds = %469
  %476 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 7, i32 0
  %477 = load i32, i32* %476, align 4
  %478 = and i32 %477, 2048
  %479 = icmp eq i32 %478, 0
  %480 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 4, i32 0
  %481 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %480, align 8
  %482 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %481, i64 0, i32 4
  %483 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %482 to i96*
  %484 = load i96, i96* %483, align 4
  %485 = and i96 %484, 33554432
  %486 = icmp eq i96 %485, 0
  %487 = bitcast %"class.blink::LayoutObject"* %481 to %"class.blink::LayoutBoxModelObject"*
  %488 = select i1 %486, %"class.blink::LayoutBoxModelObject"* %487, %"class.blink::LayoutBoxModelObject"* null
  %489 = bitcast %"class.blink::LayoutBoxModelObject"* %488 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %490 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %489, align 8
  br i1 %479, label %495, label %491

491:                                              ; preds = %475
  %492 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %490, i64 129
  %493 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %492, align 8
  %494 = call i32 %493(%"class.blink::LayoutBoxModelObject"* %488) #13
  br label %499

495:                                              ; preds = %475
  %496 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %490, i64 127
  %497 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %496, align 8
  %498 = call i32 %497(%"class.blink::LayoutBoxModelObject"* %488) #13
  br label %499

499:                                              ; preds = %491, %495
  %500 = phi i32 [ %494, %491 ], [ %498, %495 ]
  %501 = icmp sgt i32 %500, -1
  br i1 %501, label %502, label %504

502:                                              ; preds = %469, %499
  %503 = phi i32 [ %500, %499 ], [ 0, %469 ]
  br label %504

504:                                              ; preds = %499, %502
  %505 = phi i32 [ %503, %502 ], [ %500, %499 ]
  %506 = phi i32 [ -2147483648, %502 ], [ 2147483647, %499 ]
  %507 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %471, i32 %505) #13
  %508 = extractvalue { i32, i1 } %507, 1
  %509 = extractvalue { i32, i1 } %507, 0
  %510 = select i1 %508, i32 %506, i32 %509, !prof !3
  %511 = load i32, i32* %29, align 4
  %512 = load i32, i32* %31, align 4
  %513 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #13
  %514 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %513, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false) #13
  %515 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %514, align 8
  %516 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %515, i64 0, i32 0, i32 9
  %517 = bitcast [20 x i8]* %516 to i160*
  %518 = load i160, i160* %517, align 8
  %519 = and i160 %518, 15211807202738752817960438464512
  %520 = icmp eq i160 %519, 5070602400912917605986812821504
  br i1 %520, label %521, label %528, !prof !3

521:                                              ; preds = %504
  %522 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %523 = bitcast %"class.blink::LayoutObject"* %513 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %524 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %523, align 8
  %525 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %524, i64 106
  %526 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %525, align 8
  %527 = call i32 %526(%"class.blink::LayoutObject"* %513, i32 %510, i32 %468, %"class.blink::LayoutBox"* %522) #13
  br label %528

528:                                              ; preds = %504, %521
  %529 = phi i32 [ %527, %521 ], [ %510, %504 ]
  %530 = zext i32 %511 to i64
  %531 = shl nuw i64 %530, 32
  %532 = zext i32 %529 to i64
  %533 = or i64 %531, %532
  %534 = zext i32 %512 to i64
  %535 = shl nuw i64 %534, 32
  %536 = zext i32 %468 to i64
  %537 = or i64 %535, %536
  store i64 %533, i64* %103, align 8
  store i64 %537, i64* %102, align 8
  %538 = load %class.anon.2286*, %class.anon.2286** %43, align 8
  %539 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %538, i64 0, i32 1
  %540 = load i8*, i8** %539, align 8
  %541 = load i8, i8* %540, align 1, !range !2
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %546, label %543

543:                                              ; preds = %528
  %544 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %538, i64 0, i32 0
  %545 = load %class.anon*, %class.anon** %544, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %545, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %100) #13
  br label %683

546:                                              ; preds = %528
  %547 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %538, i64 0, i32 2
  %548 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %547, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %104) #13
  %549 = sitofp i32 %529 to float
  %550 = fmul float %549, 1.562500e-02
  %551 = sitofp i32 %511 to float
  %552 = fmul float %551, 1.562500e-02
  %553 = sitofp i32 %468 to float
  %554 = fmul float %553, 1.562500e-02
  %555 = sitofp i32 %512 to float
  %556 = fmul float %555, 1.562500e-02
  %557 = insertelement <2 x float> undef, float %550, i32 0
  %558 = insertelement <2 x float> %557, float %552, i32 1
  store <2 x float> %558, <2 x float>* %105, align 8
  %559 = fadd float %550, %554
  store float %559, float* %106, align 8
  store float %552, float* %107, align 4
  %560 = fadd float %552, %556
  store float %559, float* %108, align 8
  store float %560, float* %109, align 4
  store float %550, float* %110, align 8
  store float %560, float* %111, align 4
  %561 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %548, i64 0, i32 0, i32 0, i32 2
  %562 = load i32, i32* %561, align 4
  %563 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %548, i64 0, i32 0, i32 0, i32 1
  %564 = load i32, i32* %563, align 8
  %565 = icmp eq i32 %562, %564
  br i1 %565, label %574, label %566, !prof !3

566:                                              ; preds = %546
  %567 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %548, i64 0, i32 0, i32 0, i32 0
  %568 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %567, align 8
  %569 = zext i32 %562 to i64
  %570 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %568, i64 %569
  %571 = bitcast %"class.blink::FloatQuad"* %570 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %571, i8* nonnull align 8 %104, i64 32, i1 false) #13
  %572 = load i32, i32* %561, align 4
  %573 = add i32 %572, 1
  store i32 %573, i32* %561, align 4
  br label %575

574:                                              ; preds = %546
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %548, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %8) #13
  br label %575

575:                                              ; preds = %574, %566
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %104) #13
  br label %683

576:                                              ; preds = %456
  %577 = load i32, i32* %29, align 4
  %578 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 5, i32 1, i32 0
  %579 = load i32, i32* %578, align 4
  %580 = load i32, i32* %395, align 8
  %581 = and i32 %580, 1
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %610, label %583

583:                                              ; preds = %576
  %584 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 7, i32 0
  %585 = load i32, i32* %584, align 4
  %586 = and i32 %585, 2048
  %587 = icmp eq i32 %586, 0
  %588 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 0, i32 4, i32 0
  %589 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %588, align 8
  %590 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %589, i64 0, i32 4
  %591 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %590 to i96*
  %592 = load i96, i96* %591, align 4
  %593 = and i96 %592, 33554432
  %594 = icmp eq i96 %593, 0
  %595 = bitcast %"class.blink::LayoutObject"* %589 to %"class.blink::LayoutBoxModelObject"*
  %596 = select i1 %594, %"class.blink::LayoutBoxModelObject"* %595, %"class.blink::LayoutBoxModelObject"* null
  %597 = bitcast %"class.blink::LayoutBoxModelObject"* %596 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %598 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %597, align 8
  br i1 %587, label %603, label %599

599:                                              ; preds = %583
  %600 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %598, i64 129
  %601 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %600, align 8
  %602 = call i32 %601(%"class.blink::LayoutBoxModelObject"* %596) #13
  br label %607

603:                                              ; preds = %583
  %604 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %598, i64 127
  %605 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %604, align 8
  %606 = call i32 %605(%"class.blink::LayoutBoxModelObject"* %596) #13
  br label %607

607:                                              ; preds = %599, %603
  %608 = phi i32 [ %602, %599 ], [ %606, %603 ]
  %609 = icmp sgt i32 %608, -1
  br i1 %609, label %610, label %612

610:                                              ; preds = %576, %607
  %611 = phi i32 [ %608, %607 ], [ 0, %576 ]
  br label %612

612:                                              ; preds = %607, %610
  %613 = phi i32 [ %611, %610 ], [ %608, %607 ]
  %614 = phi i32 [ -2147483648, %610 ], [ 2147483647, %607 ]
  %615 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %579, i32 %613) #13
  %616 = extractvalue { i32, i1 } %615, 1
  %617 = extractvalue { i32, i1 } %615, 0
  %618 = select i1 %616, i32 %614, i32 %617, !prof !3
  %619 = load i32, i32* %31, align 4
  %620 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #13
  %621 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %620, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #13
  %622 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %621, align 8
  %623 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %622, i64 0, i32 0, i32 9
  %624 = bitcast [20 x i8]* %623 to i160*
  %625 = load i160, i160* %624, align 8
  %626 = and i160 %625, 15211807202738752817960438464512
  %627 = icmp eq i160 %626, 5070602400912917605986812821504
  br i1 %627, label %628, label %635, !prof !3

628:                                              ; preds = %612
  %629 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %630 = bitcast %"class.blink::LayoutObject"* %620 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %631 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %630, align 8
  %632 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %631, i64 106
  %633 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %632, align 8
  %634 = call i32 %633(%"class.blink::LayoutObject"* %620, i32 %577, i32 %619, %"class.blink::LayoutBox"* %629) #13
  br label %635

635:                                              ; preds = %612, %628
  %636 = phi i32 [ %634, %628 ], [ %577, %612 ]
  %637 = zext i32 %618 to i64
  %638 = shl nuw i64 %637, 32
  %639 = zext i32 %636 to i64
  %640 = or i64 %638, %639
  %641 = zext i32 %468 to i64
  %642 = shl nuw i64 %641, 32
  %643 = zext i32 %619 to i64
  %644 = or i64 %642, %643
  store i64 %640, i64* %91, align 8
  store i64 %644, i64* %90, align 8
  %645 = load %class.anon.2286*, %class.anon.2286** %43, align 8
  %646 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %645, i64 0, i32 1
  %647 = load i8*, i8** %646, align 8
  %648 = load i8, i8* %647, align 1, !range !2
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %653, label %650

650:                                              ; preds = %635
  %651 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %645, i64 0, i32 0
  %652 = load %class.anon*, %class.anon** %651, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %652, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %88) #13
  br label %683

653:                                              ; preds = %635
  %654 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %645, i64 0, i32 2
  %655 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %654, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #13
  %656 = sitofp i32 %636 to float
  %657 = fmul float %656, 1.562500e-02
  %658 = sitofp i32 %618 to float
  %659 = fmul float %658, 1.562500e-02
  %660 = sitofp i32 %619 to float
  %661 = fmul float %660, 1.562500e-02
  %662 = sitofp i32 %468 to float
  %663 = fmul float %662, 1.562500e-02
  %664 = insertelement <2 x float> undef, float %657, i32 0
  %665 = insertelement <2 x float> %664, float %659, i32 1
  store <2 x float> %665, <2 x float>* %93, align 8
  %666 = fadd float %657, %661
  store float %666, float* %94, align 8
  store float %659, float* %95, align 4
  %667 = fadd float %659, %663
  store float %666, float* %96, align 8
  store float %667, float* %97, align 4
  store float %657, float* %98, align 8
  store float %667, float* %99, align 4
  %668 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %655, i64 0, i32 0, i32 0, i32 2
  %669 = load i32, i32* %668, align 4
  %670 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %655, i64 0, i32 0, i32 0, i32 1
  %671 = load i32, i32* %670, align 8
  %672 = icmp eq i32 %669, %671
  br i1 %672, label %681, label %673, !prof !3

673:                                              ; preds = %653
  %674 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %655, i64 0, i32 0, i32 0, i32 0
  %675 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %674, align 8
  %676 = zext i32 %669 to i64
  %677 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %675, i64 %676
  %678 = bitcast %"class.blink::FloatQuad"* %677 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %678, i8* nonnull align 8 %92, i64 32, i1 false) #13
  %679 = load i32, i32* %668, align 4
  %680 = add i32 %679, 1
  store i32 %680, i32* %668, align 4
  br label %682

681:                                              ; preds = %653
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %655, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %10) #13
  br label %682

682:                                              ; preds = %681, %673
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #13
  br label %683

683:                                              ; preds = %682, %650, %575, %543
  %684 = phi i8* [ %101, %543 ], [ %101, %575 ], [ %89, %650 ], [ %89, %682 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %684) #13
  %685 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %390, i64 0, i32 5
  %686 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %685, align 8
  %687 = icmp eq %"class.blink::InlineFlowBox"* %686, null
  br i1 %687, label %853, label %389

688:                                              ; preds = %364
  %689 = and i96 %370, 33554432
  %690 = icmp eq i96 %689, 0
  br i1 %690, label %853, label %691

691:                                              ; preds = %688
  %692 = and i96 %370, 268435456
  %693 = icmp eq i96 %692, 0
  br i1 %693, label %696, label %694

694:                                              ; preds = %691
  %695 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %699

696:                                              ; preds = %691
  %697 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 1, i32 6
  %698 = bitcast %"class.blink::UntracedMember"* %697 to %"class.blink::InlineTextBoxList"*
  br label %699

699:                                              ; preds = %694, %696
  %700 = phi %"class.blink::InlineTextBoxList"* [ %695, %694 ], [ %698, %696 ]
  %701 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %700, i64 0, i32 0, i32 0
  %702 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %701, align 8
  %703 = icmp eq %"class.blink::InlineTextBox"* %702, null
  br i1 %703, label %853, label %704

704:                                              ; preds = %699, %848
  %705 = phi %"class.blink::InlineTextBox"* [ %851, %848 ], [ %702, %699 ]
  %706 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %705, i64 0, i32 0
  %707 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %706) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %707, %"class.blink::LayoutUnit"* nonnull %16, %"class.blink::LayoutUnit"* nonnull %17)
  br i1 %27, label %708, label %778

708:                                              ; preds = %704
  %709 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %705, i64 0, i32 0, i32 5, i32 0, i32 0
  %710 = load i32, i32* %709, align 4
  %711 = load i32, i32* %29, align 4
  %712 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %705, i64 0, i32 0, i32 6, i32 0
  %713 = load i32, i32* %712, align 8
  %714 = load i32, i32* %31, align 4
  %715 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #13
  %716 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %715, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false) #13
  %717 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %716, align 8
  %718 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %717, i64 0, i32 0, i32 9
  %719 = bitcast [20 x i8]* %718 to i160*
  %720 = load i160, i160* %719, align 8
  %721 = and i160 %720, 15211807202738752817960438464512
  %722 = icmp eq i160 %721, 5070602400912917605986812821504
  br i1 %722, label %723, label %730, !prof !3

723:                                              ; preds = %708
  %724 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %725 = bitcast %"class.blink::LayoutObject"* %715 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %726 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %725, align 8
  %727 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %726, i64 106
  %728 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %727, align 8
  %729 = call i32 %728(%"class.blink::LayoutObject"* %715, i32 %710, i32 %713, %"class.blink::LayoutBox"* %724) #13
  br label %730

730:                                              ; preds = %708, %723
  %731 = phi i32 [ %729, %723 ], [ %710, %708 ]
  %732 = zext i32 %711 to i64
  %733 = shl nuw i64 %732, 32
  %734 = zext i32 %731 to i64
  %735 = or i64 %733, %734
  %736 = zext i32 %714 to i64
  %737 = shl nuw i64 %736, 32
  %738 = zext i32 %713 to i64
  %739 = or i64 %737, %738
  store i64 %735, i64* %79, align 8
  store i64 %739, i64* %78, align 8
  %740 = load %class.anon.2286*, %class.anon.2286** %43, align 8
  %741 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %740, i64 0, i32 1
  %742 = load i8*, i8** %741, align 8
  %743 = load i8, i8* %742, align 1, !range !2
  %744 = icmp eq i8 %743, 0
  br i1 %744, label %748, label %745

745:                                              ; preds = %730
  %746 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %740, i64 0, i32 0
  %747 = load %class.anon*, %class.anon** %746, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %747, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %76) #13
  br label %848

748:                                              ; preds = %730
  %749 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %740, i64 0, i32 2
  %750 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %749, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #13
  %751 = sitofp i32 %731 to float
  %752 = fmul float %751, 1.562500e-02
  %753 = sitofp i32 %711 to float
  %754 = fmul float %753, 1.562500e-02
  %755 = sitofp i32 %713 to float
  %756 = fmul float %755, 1.562500e-02
  %757 = sitofp i32 %714 to float
  %758 = fmul float %757, 1.562500e-02
  %759 = insertelement <2 x float> undef, float %752, i32 0
  %760 = insertelement <2 x float> %759, float %754, i32 1
  store <2 x float> %760, <2 x float>* %81, align 8
  %761 = fadd float %752, %756
  store float %761, float* %82, align 8
  store float %754, float* %83, align 4
  %762 = fadd float %754, %758
  store float %761, float* %84, align 8
  store float %762, float* %85, align 4
  store float %752, float* %86, align 8
  store float %762, float* %87, align 4
  %763 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %750, i64 0, i32 0, i32 0, i32 2
  %764 = load i32, i32* %763, align 4
  %765 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %750, i64 0, i32 0, i32 0, i32 1
  %766 = load i32, i32* %765, align 8
  %767 = icmp eq i32 %764, %766
  br i1 %767, label %776, label %768, !prof !3

768:                                              ; preds = %748
  %769 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %750, i64 0, i32 0, i32 0, i32 0
  %770 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %769, align 8
  %771 = zext i32 %764 to i64
  %772 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %770, i64 %771
  %773 = bitcast %"class.blink::FloatQuad"* %772 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %773, i8* nonnull align 8 %80, i64 32, i1 false) #13
  %774 = load i32, i32* %763, align 4
  %775 = add i32 %774, 1
  store i32 %775, i32* %763, align 4
  br label %777

776:                                              ; preds = %748
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %750, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %12) #13
  br label %777

777:                                              ; preds = %776, %768
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #13
  br label %848

778:                                              ; preds = %704
  %779 = load i32, i32* %29, align 4
  %780 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %705, i64 0, i32 0, i32 5, i32 1, i32 0
  %781 = load i32, i32* %780, align 4
  %782 = load i32, i32* %31, align 4
  %783 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %705, i64 0, i32 0, i32 6, i32 0
  %784 = load i32, i32* %783, align 8
  %785 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #13
  %786 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %785, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 16, i1 false) #13
  %787 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %786, align 8
  %788 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %787, i64 0, i32 0, i32 9
  %789 = bitcast [20 x i8]* %788 to i160*
  %790 = load i160, i160* %789, align 8
  %791 = and i160 %790, 15211807202738752817960438464512
  %792 = icmp eq i160 %791, 5070602400912917605986812821504
  br i1 %792, label %793, label %800, !prof !3

793:                                              ; preds = %778
  %794 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %795 = bitcast %"class.blink::LayoutObject"* %785 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %796 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %795, align 8
  %797 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %796, i64 106
  %798 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %797, align 8
  %799 = call i32 %798(%"class.blink::LayoutObject"* %785, i32 %779, i32 %782, %"class.blink::LayoutBox"* %794) #13
  br label %800

800:                                              ; preds = %778, %793
  %801 = phi i32 [ %799, %793 ], [ %779, %778 ]
  %802 = zext i32 %781 to i64
  %803 = shl nuw i64 %802, 32
  %804 = zext i32 %801 to i64
  %805 = or i64 %803, %804
  %806 = zext i32 %784 to i64
  %807 = shl nuw i64 %806, 32
  %808 = zext i32 %782 to i64
  %809 = or i64 %807, %808
  store i64 %805, i64* %67, align 8
  store i64 %809, i64* %66, align 8
  %810 = load %class.anon.2286*, %class.anon.2286** %43, align 8
  %811 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %810, i64 0, i32 1
  %812 = load i8*, i8** %811, align 8
  %813 = load i8, i8* %812, align 1, !range !2
  %814 = icmp eq i8 %813, 0
  br i1 %814, label %818, label %815

815:                                              ; preds = %800
  %816 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %810, i64 0, i32 0
  %817 = load %class.anon*, %class.anon** %816, align 8
  call fastcc void @"_ZZNK5blink12LayoutInline20QuadsForSelfInternalERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjbENK3$_1clERKNS_12PhysicalRectE"(%class.anon* %817, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %64) #13
  br label %848

818:                                              ; preds = %800
  %819 = getelementptr inbounds %class.anon.2286, %class.anon.2286* %810, i64 0, i32 2
  %820 = load %"class.WTF::Vector.2276"*, %"class.WTF::Vector.2276"** %819, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #13
  %821 = sitofp i32 %801 to float
  %822 = fmul float %821, 1.562500e-02
  %823 = sitofp i32 %781 to float
  %824 = fmul float %823, 1.562500e-02
  %825 = sitofp i32 %782 to float
  %826 = fmul float %825, 1.562500e-02
  %827 = sitofp i32 %784 to float
  %828 = fmul float %827, 1.562500e-02
  %829 = insertelement <2 x float> undef, float %822, i32 0
  %830 = insertelement <2 x float> %829, float %824, i32 1
  store <2 x float> %830, <2 x float>* %69, align 8
  %831 = fadd float %822, %826
  store float %831, float* %70, align 8
  store float %824, float* %71, align 4
  %832 = fadd float %824, %828
  store float %831, float* %72, align 8
  store float %832, float* %73, align 4
  store float %822, float* %74, align 8
  store float %832, float* %75, align 4
  %833 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %820, i64 0, i32 0, i32 0, i32 2
  %834 = load i32, i32* %833, align 4
  %835 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %820, i64 0, i32 0, i32 0, i32 1
  %836 = load i32, i32* %835, align 8
  %837 = icmp eq i32 %834, %836
  br i1 %837, label %846, label %838, !prof !3

838:                                              ; preds = %818
  %839 = getelementptr inbounds %"class.WTF::Vector.2276", %"class.WTF::Vector.2276"* %820, i64 0, i32 0, i32 0, i32 0
  %840 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %839, align 8
  %841 = zext i32 %834 to i64
  %842 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %840, i64 %841
  %843 = bitcast %"class.blink::FloatQuad"* %842 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %843, i8* nonnull align 8 %68, i64 32, i1 false) #13
  %844 = load i32, i32* %833, align 4
  %845 = add i32 %844, 1
  store i32 %845, i32* %833, align 4
  br label %847

846:                                              ; preds = %818
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2276"* %820, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %14) #13
  br label %847

847:                                              ; preds = %846, %838
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #13
  br label %848

848:                                              ; preds = %847, %815, %777, %745
  %849 = phi i8* [ %77, %745 ], [ %77, %777 ], [ %65, %815 ], [ %65, %847 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %849) #13
  %850 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %705, i64 0, i32 2
  %851 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %850, align 8
  %852 = icmp eq %"class.blink::InlineTextBox"* %851, null
  br i1 %852, label %853, label %704

853:                                              ; preds = %848, %683, %699, %384, %688, %126, %374, %130, %363, %249, %113
  %854 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 0, i32 9
  %855 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %854, align 8
  %856 = icmp eq %"class.blink::LayoutObject"* %855, null
  br i1 %856, label %112, label %113

857:                                              ; preds = %3, %112
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"*, %"class.blink::RootInlineBox"* nocapture readonly dereferenceable(160), %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture) unnamed_addr #4 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::LineLayoutItem", align 8
  %7 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 0, i32 7, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp ne i32 %9, 0
  %11 = bitcast %"class.blink::LineLayoutItem"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 0, i32 4, i32 0
  %13 = bitcast %"class.blink::LayoutObject"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::LineLayoutItem"* %6 to i64*
  store i64 %14, i64* %15, align 8
  %16 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %6, i1 zeroext %10)
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %20, i64 0, i32 1
  %22 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %21) #13
  %23 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %22, i64 0, i32 2
  %24 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %23, align 8
  %25 = icmp eq %"class.blink::SimpleFontData"* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %21, i64 0, i32 0
  %28 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %22, %"class.blink::FontDescription"* dereferenceable(80) %27) #13
  store %"class.blink::SimpleFontData"* %28, %"class.blink::SimpleFontData"** %23, align 8
  br label %29

29:                                               ; preds = %4, %26
  %30 = phi %"class.blink::SimpleFontData"* [ %24, %4 ], [ %28, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  %31 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  br i1 %10, label %32, label %67

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %36, label %43

36:                                               ; preds = %32, %36
  %37 = phi %"class.blink::LayoutObject"* [ %39, %36 ], [ %31, %32 ]
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 7
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %36, label %43

43:                                               ; preds = %36, %32
  %44 = phi %"class.blink::Node"* [ %34, %32 ], [ %41, %36 ]
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::Document"*, %"class.blink::Document"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %48, i64 0, i32 59, i32 0, i32 0
  %50 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %50, i64 0, i32 31, i32 0, i32 0
  %52 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %52, i64 0, i32 0, i32 11
  %54 = load i8, i8* %53, align 8
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %43
  %58 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  br label %60

60:                                               ; preds = %57, %43
  %61 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %52, i64 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %31) #13
  %66 = icmp eq %"class.blink::ComputedStyle"* %65, null
  br i1 %66, label %67, label %70

67:                                               ; preds = %29, %60, %64
  %68 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  br label %70

70:                                               ; preds = %67, %64
  %71 = phi %"class.blink::ComputedStyle"* [ %65, %64 ], [ %69, %67 ]
  %72 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %73, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %75, i64 0, i32 1
  %77 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %76) #13
  %78 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %77, i64 0, i32 2
  %79 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %78, align 8
  %80 = icmp eq %"class.blink::SimpleFontData"* %79, null
  br i1 %80, label %81, label %84

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %76, i64 0, i32 0
  %83 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %77, %"class.blink::FontDescription"* dereferenceable(80) %82) #13
  store %"class.blink::SimpleFontData"* %83, %"class.blink::SimpleFontData"** %78, align 8
  br label %84

84:                                               ; preds = %70, %81
  %85 = phi %"class.blink::SimpleFontData"* [ %79, %70 ], [ %83, %81 ]
  %86 = icmp ne %"class.blink::SimpleFontData"* %30, null
  %87 = icmp ne %"class.blink::SimpleFontData"* %85, null
  %88 = and i1 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 0, i32* %90, align 4
  br label %129

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %30, i64 0, i32 1, i32 9
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %85, i64 0, i32 1, i32 9
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %85, i64 0, i32 1, i32 10
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* %7, align 4
  %99 = and i32 %98, 2048
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %102 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = load i32, i32* %101, align 4
  %105 = select i1 %100, i32 %103, i32 %104
  %106 = sub nsw i32 %93, %95
  %107 = icmp sgt i32 %106, 33554431
  br i1 %107, label %115, label %108

108:                                              ; preds = %91
  %109 = icmp slt i32 %106, -33554432
  br i1 %109, label %113, label %110

110:                                              ; preds = %108
  %111 = shl i32 %106, 6
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108, %110
  %114 = phi i32 [ %111, %110 ], [ -2147483648, %108 ]
  br label %115

115:                                              ; preds = %91, %110, %113
  %116 = phi i32 [ %114, %113 ], [ %111, %110 ], [ 2147483647, %91 ]
  %117 = phi i32 [ -2147483648, %113 ], [ 2147483647, %110 ], [ 2147483647, %91 ]
  %118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %116) #13
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 %117, i32 %120, !prof !3
  %122 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %121, i32* %122, align 4
  %123 = add nsw i32 %97, %95
  %124 = icmp sgt i32 %123, 33554431
  br i1 %124, label %129, label %125

125:                                              ; preds = %115
  %126 = icmp slt i32 %123, -33554432
  %127 = shl i32 %123, 6
  %128 = select i1 %126, i32 -2147483648, i32 %127
  br label %129

129:                                              ; preds = %115, %125, %89
  %130 = phi i32 [ 0, %89 ], [ 2147483647, %115 ], [ %128, %125 ]
  %131 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %130, i32* %131, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #13
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNS0_19HitTestCulledInlineERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetEPKNS_14NGInlineCursorEE3$_2EEvRKT_EUlRKNS_10LayoutRectEE_EEvSH_PKS0_"(%"class.blink::LayoutInline"* nocapture readonly, %class.anon.2415* nocapture readonly dereferenceable(24), %"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Region", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"class.blink::Region", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.blink::Region", align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %"class.blink::Region", align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = alloca %"class.blink::Region", align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = alloca %"class.blink::Region", align 8
  %20 = alloca { i64, i64 }, align 8
  %21 = alloca { i64, i64 }, align 8
  %22 = alloca %"class.blink::LayoutUnit", align 4
  %23 = alloca %"class.blink::LayoutUnit", align 4
  %24 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %0)
  %25 = icmp eq %"class.blink::InlineBox"* %24, null
  br i1 %25, label %1175, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 15211807202738752817960438464512
  %33 = icmp eq i160 %32, 0
  %34 = bitcast %"class.blink::LayoutUnit"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %22, i64 0, i32 0
  store i32 0, i32* %35, align 4
  %36 = bitcast %"class.blink::LayoutUnit"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #13
  %37 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %23, i64 0, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutObject"* %39, null
  br i1 %40, label %196, label %41

41:                                               ; preds = %26
  %42 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %43 = bitcast %class.anon.2415* %1 to %"class.blink::LayoutObject"**
  %44 = bitcast { i64, i64 }* %9 to i8*
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %46 = getelementptr inbounds %class.anon.2415, %class.anon.2415* %1, i64 0, i32 1
  %47 = bitcast %"class.blink::LayoutBlock"** %46 to %"class.blink::LayoutBox"**
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %49 = getelementptr inbounds %class.anon.2415, %class.anon.2415* %1, i64 0, i32 2
  %50 = bitcast { i64, i64 }* %8 to %"class.blink::IntRect"*
  %51 = bitcast %"class.blink::Region"* %7 to i8*
  %52 = bitcast { i64, i64 }* %8 to i8*
  %53 = bitcast { i64, i64 }* %9 to i32*
  %54 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %42, i64 0, i32 0, i32 1, i32 0
  %55 = bitcast i64* %45 to i32*
  %56 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %42, i64 0, i32 1, i32 1, i32 0
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %59 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %7, i64 0, i32 1
  %60 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %7, i64 0, i32 1, i32 1
  %61 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %7, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %62 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %60, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %7, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %64 = bitcast i8* %63 to %"struct.blink::Region::Span"*
  %65 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %60, i64 0, i32 0
  %66 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %7, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %59, i64 0, i32 0, i32 0
  %71 = bitcast { i64, i64 }* %12 to %"struct.blink::PhysicalRect"*
  %72 = bitcast { i64, i64 }* %12 to i8*
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %75 = bitcast { i64, i64 }* %11 to %"class.blink::IntRect"*
  %76 = bitcast %"class.blink::Region"* %10 to i8*
  %77 = bitcast { i64, i64 }* %11 to i8*
  %78 = bitcast { i64, i64 }* %12 to i32*
  %79 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %71, i64 0, i32 0, i32 1, i32 0
  %80 = bitcast i64* %73 to i32*
  %81 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %71, i64 0, i32 1, i32 1, i32 0
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %84 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %10, i64 0, i32 1
  %85 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %10, i64 0, i32 1, i32 1
  %86 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %10, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %87 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %85, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %10, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"struct.blink::Region::Span"*
  %90 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %85, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %10, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %94 = bitcast i8* %93 to i32*
  %95 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %84, i64 0, i32 0, i32 0
  %96 = bitcast { i64, i64 }* %21 to %"struct.blink::PhysicalRect"*
  %97 = bitcast { i64, i64 }* %21 to i8*
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  %100 = bitcast { i64, i64 }* %20 to %"class.blink::IntRect"*
  %101 = bitcast %"class.blink::Region"* %19 to i8*
  %102 = bitcast { i64, i64 }* %20 to i8*
  %103 = bitcast { i64, i64 }* %21 to i32*
  %104 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %96, i64 0, i32 0, i32 1, i32 0
  %105 = bitcast i64* %98 to i32*
  %106 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %96, i64 0, i32 1, i32 1, i32 0
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 0
  %108 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %109 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %19, i64 0, i32 1
  %110 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %19, i64 0, i32 1, i32 1
  %111 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %19, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %112 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %110, i64 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %19, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %114 = bitcast i8* %113 to %"struct.blink::Region::Span"*
  %115 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %110, i64 0, i32 0
  %116 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %117 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %109, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %19, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %119 = bitcast i8* %118 to i32*
  %120 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %109, i64 0, i32 0, i32 0
  %121 = bitcast { i64, i64 }* %18 to %"struct.blink::PhysicalRect"*
  %122 = bitcast { i64, i64 }* %18 to i8*
  %123 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  %125 = bitcast { i64, i64 }* %17 to %"class.blink::IntRect"*
  %126 = bitcast %"class.blink::Region"* %16 to i8*
  %127 = bitcast { i64, i64 }* %17 to i8*
  %128 = bitcast { i64, i64 }* %18 to i32*
  %129 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %121, i64 0, i32 0, i32 1, i32 0
  %130 = bitcast i64* %123 to i32*
  %131 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %121, i64 0, i32 1, i32 1, i32 0
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  %134 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %16, i64 0, i32 1
  %135 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %16, i64 0, i32 1, i32 1
  %136 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %16, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %137 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %135, i64 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %16, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %139 = bitcast i8* %138 to %"struct.blink::Region::Span"*
  %140 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %135, i64 0, i32 0
  %141 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %142 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %16, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %144 = bitcast i8* %143 to i32*
  %145 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %134, i64 0, i32 0, i32 0
  %146 = bitcast { i64, i64 }* %15 to %"struct.blink::PhysicalRect"*
  %147 = bitcast { i64, i64 }* %15 to i8*
  %148 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %150 = bitcast { i64, i64 }* %14 to %"class.blink::IntRect"*
  %151 = bitcast %"class.blink::Region"* %13 to i8*
  %152 = bitcast { i64, i64 }* %14 to i8*
  %153 = bitcast { i64, i64 }* %15 to i32*
  %154 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %146, i64 0, i32 0, i32 1, i32 0
  %155 = bitcast i64* %148 to i32*
  %156 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %146, i64 0, i32 1, i32 1, i32 0
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %158 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %159 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %13, i64 0, i32 1
  %160 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %13, i64 0, i32 1, i32 1
  %161 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %13, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %162 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %160, i64 0, i32 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %13, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %164 = bitcast i8* %163 to %"struct.blink::Region::Span"*
  %165 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %160, i64 0, i32 0
  %166 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %167 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %13, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %169 = bitcast i8* %168 to i32*
  %170 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %159, i64 0, i32 0, i32 0
  %171 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %172 = bitcast { i64, i64 }* %6 to i8*
  %173 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %175 = bitcast { i64, i64 }* %5 to %"class.blink::IntRect"*
  %176 = bitcast %"class.blink::Region"* %4 to i8*
  %177 = bitcast { i64, i64 }* %5 to i8*
  %178 = bitcast { i64, i64 }* %6 to i32*
  %179 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %171, i64 0, i32 0, i32 1, i32 0
  %180 = bitcast i64* %173 to i32*
  %181 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %171, i64 0, i32 1, i32 1, i32 0
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %183 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %184 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %4, i64 0, i32 1
  %185 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %4, i64 0, i32 1, i32 1
  %186 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %4, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %187 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %185, i64 0, i32 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %4, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %189 = bitcast i8* %188 to %"struct.blink::Region::Span"*
  %190 = getelementptr inbounds %"class.WTF::Vector.1850", %"class.WTF::Vector.1850"* %185, i64 0, i32 0
  %191 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %192 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %184, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %4, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %194 = bitcast i8* %193 to i32*
  %195 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %184, i64 0, i32 0, i32 0
  br label %197

196:                                              ; preds = %1171, %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #13
  br label %1175

197:                                              ; preds = %41, %1171
  %198 = phi %"class.blink::LayoutObject"* [ %39, %41 ], [ %1173, %1171 ]
  %199 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 0, i32 4
  %200 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %199 to i96*
  %201 = load i96, i96* %200, align 4
  %202 = and i96 %201, 8388608
  %203 = icmp ne i96 %202, 0
  %204 = and i96 %201, 113336795588871485128704
  %205 = icmp eq i96 %204, 75557863725914323419136
  %206 = or i1 %205, %203
  br i1 %206, label %1171, label %207

207:                                              ; preds = %197
  %208 = and i96 %201, 67108864
  %209 = icmp eq i96 %208, 0
  br i1 %209, label %526, label %210

210:                                              ; preds = %207
  %211 = bitcast %"class.blink::LayoutObject"* %198 to %"class.blink::LayoutBox"*
  %212 = and i96 %201, 268435456
  %213 = icmp eq i96 %212, 0
  br i1 %213, label %214, label %1171

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 2, i32 1, i32 1
  %216 = bitcast i8* %215 to %"class.blink::InlineBox"**
  %217 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %216, align 8
  %218 = icmp eq %"class.blink::InlineBox"* %217, null
  br i1 %218, label %1171, label %219

219:                                              ; preds = %214
  %220 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %217) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %220, %"class.blink::LayoutUnit"* nonnull %22, %"class.blink::LayoutUnit"* nonnull %23)
  br i1 %33, label %221, label %373

221:                                              ; preds = %219
  %222 = load i96, i96* %200, align 4
  %223 = and i96 %222, 268435456
  %224 = icmp eq i96 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %221
  %226 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %216, align 8
  br label %227

227:                                              ; preds = %221, %225
  %228 = phi %"class.blink::InlineBox"* [ %226, %225 ], [ null, %221 ]
  %229 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %228, i64 0, i32 5, i32 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = bitcast %"class.blink::LayoutObject"* %198 to i32 (%"class.blink::LayoutBox"*)***
  %232 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %231, align 8
  %233 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %232, i64 129
  %234 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %233, align 8
  %235 = call i32 %234(%"class.blink::LayoutBox"* nonnull %211) #13
  %236 = icmp sgt i32 %235, -1
  %237 = select i1 %236, i32 -2147483648, i32 2147483647
  %238 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %230, i32 %235) #13
  %239 = extractvalue { i32, i1 } %238, 1
  %240 = extractvalue { i32, i1 } %238, 0
  %241 = select i1 %239, i32 %237, i32 %240, !prof !3
  %242 = load i32, i32* %35, align 4
  %243 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 1, i32 4, i32 0, i64 4
  %244 = bitcast i8* %243 to i64*
  %245 = load i64, i64* %244, align 4
  %246 = trunc i64 %245 to i32
  %247 = bitcast %"class.blink::LayoutObject"* %198 to %"class.blink::LayoutBoxModelObject"*
  %248 = bitcast %"class.blink::LayoutObject"* %198 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %249 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %248, align 8
  %250 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %249, i64 129
  %251 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %250, align 8
  %252 = call i32 %251(%"class.blink::LayoutBoxModelObject"* nonnull %247) #13
  %253 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %248, align 8
  %254 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %253, i64 130
  %255 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %254, align 8
  %256 = call i32 %255(%"class.blink::LayoutBoxModelObject"* nonnull %247) #13
  %257 = icmp slt i32 %256, 0
  %258 = select i1 %257, i32 -2147483648, i32 2147483647
  %259 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %252, i32 %256) #13
  %260 = extractvalue { i32, i1 } %259, 1
  %261 = extractvalue { i32, i1 } %259, 0
  %262 = select i1 %260, i32 %258, i32 %261, !prof !3
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %246, i32 %262) #13
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !3
  %269 = load i32, i32* %37, align 4
  %270 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #13
  %271 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %270, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 16, i1 false) #13
  %272 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %272, i64 0, i32 0, i32 9
  %274 = bitcast [20 x i8]* %273 to i160*
  %275 = load i160, i160* %274, align 8
  %276 = and i160 %275, 15211807202738752817960438464512
  %277 = icmp eq i160 %276, 5070602400912917605986812821504
  br i1 %277, label %278, label %285, !prof !3

278:                                              ; preds = %227
  %279 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %47, align 8
  %280 = bitcast %"class.blink::LayoutObject"* %270 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %281 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %280, align 8
  %282 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %281, i64 106
  %283 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %282, align 8
  %284 = call i32 %283(%"class.blink::LayoutObject"* %270, i32 %241, i32 %268, %"class.blink::LayoutBox"* %279) #13
  br label %285

285:                                              ; preds = %227, %278
  %286 = phi i32 [ %284, %278 ], [ %241, %227 ]
  %287 = zext i32 %242 to i64
  %288 = shl nuw i64 %287, 32
  %289 = zext i32 %286 to i64
  %290 = or i64 %288, %289
  %291 = zext i32 %269 to i64
  %292 = shl nuw i64 %291, 32
  %293 = zext i32 %268 to i64
  %294 = or i64 %292, %293
  store i64 %290, i64* %74, align 8
  store i64 %294, i64* %73, align 8
  %295 = load %class.anon.2299*, %class.anon.2299** %49, align 8
  %296 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %295, i64 0, i32 0
  %297 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %296, align 8
  %298 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %297, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %71) #13
  br i1 %298, label %299, label %372

299:                                              ; preds = %285
  %300 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %295, i64 0, i32 2
  %301 = load i8*, i8** %300, align 8
  store i8 1, i8* %301, align 1
  %302 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %295, i64 0, i32 1
  %303 = load %"class.blink::Region"*, %"class.blink::Region"** %302, align 8
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %76) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #13
  %304 = load i32, i32* %78, align 8
  %305 = icmp slt i32 %304, -2147483584
  %306 = ashr i32 %304, 6
  %307 = select i1 %305, i32 -33554432, i32 %306, !prof !3
  %308 = load i32, i32* %79, align 4
  %309 = icmp slt i32 %308, -2147483584
  %310 = ashr i32 %308, 6
  %311 = select i1 %309, i32 -33554432, i32 %310, !prof !3
  %312 = zext i32 %311 to i64
  %313 = shl nuw i64 %312, 32
  %314 = load i32, i32* %80, align 8
  %315 = icmp slt i32 %314, 0
  %316 = select i1 %315, i32 -2147483648, i32 2147483647
  %317 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %304, i32 %314) #13
  %318 = extractvalue { i32, i1 } %317, 1
  %319 = extractvalue { i32, i1 } %317, 0
  %320 = select i1 %318, i32 %316, i32 %319, !prof !3
  %321 = load i32, i32* %81, align 4
  %322 = icmp slt i32 %321, 0
  %323 = select i1 %322, i32 -2147483648, i32 2147483647
  %324 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %308, i32 %321) #13
  %325 = extractvalue { i32, i1 } %324, 1
  %326 = extractvalue { i32, i1 } %324, 0
  %327 = select i1 %325, i32 %323, i32 %326, !prof !3
  %328 = icmp sgt i32 %320, 2147483583
  br i1 %328, label %336, label %329, !prof !3

329:                                              ; preds = %299
  %330 = icmp sgt i32 %320, -1
  br i1 %330, label %331, label %334

331:                                              ; preds = %329
  %332 = add nuw nsw i32 %320, 63
  %333 = sdiv i32 %332, 64
  br label %336

334:                                              ; preds = %329
  %335 = sdiv i32 %320, 64
  br label %336

336:                                              ; preds = %334, %331, %299
  %337 = phi i32 [ %333, %331 ], [ %335, %334 ], [ 33554431, %299 ]
  %338 = icmp sgt i32 %327, 2147483583
  br i1 %338, label %346, label %339, !prof !3

339:                                              ; preds = %336
  %340 = icmp sgt i32 %327, -1
  br i1 %340, label %341, label %344

341:                                              ; preds = %339
  %342 = add nuw nsw i32 %327, 63
  %343 = sdiv i32 %342, 64
  br label %346

344:                                              ; preds = %339
  %345 = sdiv i32 %327, 64
  br label %346

346:                                              ; preds = %336, %341, %344
  %347 = phi i32 [ %343, %341 ], [ %345, %344 ], [ 33554431, %336 ]
  %348 = sub nsw i32 %337, %307
  %349 = sub nsw i32 %347, %311
  %350 = zext i32 %349 to i64
  %351 = shl nuw i64 %350, 32
  %352 = zext i32 %348 to i64
  %353 = or i64 %351, %352
  %354 = zext i32 %307 to i64
  %355 = or i64 %313, %354
  store i64 %355, i64* %82, align 8
  store i64 %353, i64* %83, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %10, %"class.blink::IntRect"* nonnull dereferenceable(16) %75) #13
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %303, %"class.blink::Region"* nonnull dereferenceable(304) %10) #13
  %356 = load i32, i32* %86, align 4
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %359, label %358, !prof !3

358:                                              ; preds = %346
  store i32 0, i32* %86, align 4
  br label %359

359:                                              ; preds = %358, %346
  %360 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %87, align 8
  %361 = icmp eq %"struct.blink::Region::Span"* %360, %89
  br i1 %361, label %363, label %362, !prof !4

362:                                              ; preds = %359
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %90, %"struct.blink::Region::Span"* %360) #13
  br label %363

363:                                              ; preds = %362, %359
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %87, align 8
  %364 = load i32, i32* %91, align 4
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %367, label %366, !prof !3

366:                                              ; preds = %363
  store i32 0, i32* %91, align 4
  br label %367

367:                                              ; preds = %366, %363
  %368 = load i32*, i32** %92, align 8
  %369 = icmp eq i32* %368, %94
  br i1 %369, label %371, label %370, !prof !4

370:                                              ; preds = %367
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %95, i32* %368) #13
  br label %371

371:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %76) #13
  br label %372

372:                                              ; preds = %285, %371
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #13
  br label %1171

373:                                              ; preds = %219
  %374 = load i32, i32* %35, align 4
  %375 = load i96, i96* %200, align 4
  %376 = and i96 %375, 268435456
  %377 = icmp eq i96 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %373
  %379 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %216, align 8
  br label %380

380:                                              ; preds = %373, %378
  %381 = phi %"class.blink::InlineBox"* [ %379, %378 ], [ null, %373 ]
  %382 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %381, i64 0, i32 5, i32 1, i32 0
  %383 = load i32, i32* %382, align 4
  %384 = bitcast %"class.blink::LayoutObject"* %198 to i32 (%"class.blink::LayoutBox"*)***
  %385 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %384, align 8
  %386 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %385, i64 127
  %387 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %386, align 8
  %388 = call i32 %387(%"class.blink::LayoutBox"* nonnull %211) #13
  %389 = icmp sgt i32 %388, -1
  %390 = select i1 %389, i32 -2147483648, i32 2147483647
  %391 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %383, i32 %388) #13
  %392 = extractvalue { i32, i1 } %391, 1
  %393 = extractvalue { i32, i1 } %391, 0
  %394 = select i1 %392, i32 %390, i32 %393, !prof !3
  %395 = load i32, i32* %37, align 4
  %396 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 1, i32 4, i32 0, i64 4
  %397 = bitcast i8* %396 to i64*
  %398 = load i64, i64* %397, align 4
  %399 = lshr i64 %398, 32
  %400 = trunc i64 %399 to i32
  %401 = bitcast %"class.blink::LayoutObject"* %198 to %"class.blink::LayoutBoxModelObject"*
  %402 = bitcast %"class.blink::LayoutObject"* %198 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %403 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %402, align 8
  %404 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %403, i64 127
  %405 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %404, align 8
  %406 = call i32 %405(%"class.blink::LayoutBoxModelObject"* nonnull %401) #13
  %407 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %402, align 8
  %408 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %407, i64 128
  %409 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %408, align 8
  %410 = call i32 %409(%"class.blink::LayoutBoxModelObject"* nonnull %401) #13
  %411 = icmp slt i32 %410, 0
  %412 = select i1 %411, i32 -2147483648, i32 2147483647
  %413 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %406, i32 %410) #13
  %414 = extractvalue { i32, i1 } %413, 1
  %415 = extractvalue { i32, i1 } %413, 0
  %416 = select i1 %414, i32 %412, i32 %415, !prof !3
  %417 = icmp slt i32 %416, 0
  %418 = select i1 %417, i32 -2147483648, i32 2147483647
  %419 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %400, i32 %416) #13
  %420 = extractvalue { i32, i1 } %419, 1
  %421 = extractvalue { i32, i1 } %419, 0
  %422 = select i1 %420, i32 %418, i32 %421, !prof !3
  %423 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  %424 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %423, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #13
  %425 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %424, align 8
  %426 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %425, i64 0, i32 0, i32 9
  %427 = bitcast [20 x i8]* %426 to i160*
  %428 = load i160, i160* %427, align 8
  %429 = and i160 %428, 15211807202738752817960438464512
  %430 = icmp eq i160 %429, 5070602400912917605986812821504
  br i1 %430, label %431, label %438, !prof !3

431:                                              ; preds = %380
  %432 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %47, align 8
  %433 = bitcast %"class.blink::LayoutObject"* %423 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %434 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %433, align 8
  %435 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %434, i64 106
  %436 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %435, align 8
  %437 = call i32 %436(%"class.blink::LayoutObject"* %423, i32 %374, i32 %395, %"class.blink::LayoutBox"* %432) #13
  br label %438

438:                                              ; preds = %380, %431
  %439 = phi i32 [ %437, %431 ], [ %374, %380 ]
  %440 = zext i32 %394 to i64
  %441 = shl nuw i64 %440, 32
  %442 = zext i32 %439 to i64
  %443 = or i64 %441, %442
  %444 = zext i32 %422 to i64
  %445 = shl nuw i64 %444, 32
  %446 = zext i32 %395 to i64
  %447 = or i64 %445, %446
  store i64 %443, i64* %48, align 8
  store i64 %447, i64* %45, align 8
  %448 = load %class.anon.2299*, %class.anon.2299** %49, align 8
  %449 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %448, i64 0, i32 0
  %450 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %449, align 8
  %451 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %450, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %42) #13
  br i1 %451, label %452, label %525

452:                                              ; preds = %438
  %453 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %448, i64 0, i32 2
  %454 = load i8*, i8** %453, align 8
  store i8 1, i8* %454, align 1
  %455 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %448, i64 0, i32 1
  %456 = load %"class.blink::Region"*, %"class.blink::Region"** %455, align 8
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %51) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #13
  %457 = load i32, i32* %53, align 8
  %458 = icmp slt i32 %457, -2147483584
  %459 = ashr i32 %457, 6
  %460 = select i1 %458, i32 -33554432, i32 %459, !prof !3
  %461 = load i32, i32* %54, align 4
  %462 = icmp slt i32 %461, -2147483584
  %463 = ashr i32 %461, 6
  %464 = select i1 %462, i32 -33554432, i32 %463, !prof !3
  %465 = zext i32 %464 to i64
  %466 = shl nuw i64 %465, 32
  %467 = load i32, i32* %55, align 8
  %468 = icmp slt i32 %467, 0
  %469 = select i1 %468, i32 -2147483648, i32 2147483647
  %470 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %457, i32 %467) #13
  %471 = extractvalue { i32, i1 } %470, 1
  %472 = extractvalue { i32, i1 } %470, 0
  %473 = select i1 %471, i32 %469, i32 %472, !prof !3
  %474 = load i32, i32* %56, align 4
  %475 = icmp slt i32 %474, 0
  %476 = select i1 %475, i32 -2147483648, i32 2147483647
  %477 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %461, i32 %474) #13
  %478 = extractvalue { i32, i1 } %477, 1
  %479 = extractvalue { i32, i1 } %477, 0
  %480 = select i1 %478, i32 %476, i32 %479, !prof !3
  %481 = icmp sgt i32 %473, 2147483583
  br i1 %481, label %489, label %482, !prof !3

482:                                              ; preds = %452
  %483 = icmp sgt i32 %473, -1
  br i1 %483, label %484, label %487

484:                                              ; preds = %482
  %485 = add nuw nsw i32 %473, 63
  %486 = sdiv i32 %485, 64
  br label %489

487:                                              ; preds = %482
  %488 = sdiv i32 %473, 64
  br label %489

489:                                              ; preds = %487, %484, %452
  %490 = phi i32 [ %486, %484 ], [ %488, %487 ], [ 33554431, %452 ]
  %491 = icmp sgt i32 %480, 2147483583
  br i1 %491, label %499, label %492, !prof !3

492:                                              ; preds = %489
  %493 = icmp sgt i32 %480, -1
  br i1 %493, label %494, label %497

494:                                              ; preds = %492
  %495 = add nuw nsw i32 %480, 63
  %496 = sdiv i32 %495, 64
  br label %499

497:                                              ; preds = %492
  %498 = sdiv i32 %480, 64
  br label %499

499:                                              ; preds = %489, %494, %497
  %500 = phi i32 [ %496, %494 ], [ %498, %497 ], [ 33554431, %489 ]
  %501 = sub nsw i32 %490, %460
  %502 = sub nsw i32 %500, %464
  %503 = zext i32 %502 to i64
  %504 = shl nuw i64 %503, 32
  %505 = zext i32 %501 to i64
  %506 = or i64 %504, %505
  %507 = zext i32 %460 to i64
  %508 = or i64 %466, %507
  store i64 %508, i64* %57, align 8
  store i64 %506, i64* %58, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %7, %"class.blink::IntRect"* nonnull dereferenceable(16) %50) #13
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %456, %"class.blink::Region"* nonnull dereferenceable(304) %7) #13
  %509 = load i32, i32* %61, align 4
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %512, label %511, !prof !3

511:                                              ; preds = %499
  store i32 0, i32* %61, align 4
  br label %512

512:                                              ; preds = %511, %499
  %513 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %62, align 8
  %514 = icmp eq %"struct.blink::Region::Span"* %513, %64
  br i1 %514, label %516, label %515, !prof !4

515:                                              ; preds = %512
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %65, %"struct.blink::Region::Span"* %513) #13
  br label %516

516:                                              ; preds = %515, %512
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %62, align 8
  %517 = load i32, i32* %66, align 4
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %520, label %519, !prof !3

519:                                              ; preds = %516
  store i32 0, i32* %66, align 4
  br label %520

520:                                              ; preds = %519, %516
  %521 = load i32*, i32** %67, align 8
  %522 = icmp eq i32* %521, %69
  br i1 %522, label %524, label %523, !prof !4

523:                                              ; preds = %520
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %70, i32* %521) #13
  br label %524

524:                                              ; preds = %520, %523
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %51) #13
  br label %525

525:                                              ; preds = %438, %524
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  br label %1171

526:                                              ; preds = %207
  %527 = bitcast %"class.blink::LayoutObject"* %198 to i1 (%"class.blink::LayoutObject"*)***
  %528 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %527, align 8
  %529 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %528, i64 26
  %530 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %529, align 8
  %531 = call zeroext i1 %530(%"class.blink::LayoutObject"* nonnull %198) #13
  %532 = load i96, i96* %200, align 4
  br i1 %531, label %533, label %928

533:                                              ; preds = %526
  %534 = and i96 %532, 70369012613120
  %535 = icmp eq i96 %534, 70368744177664
  br i1 %535, label %538, label %536

536:                                              ; preds = %533
  %537 = bitcast %"class.blink::LayoutObject"* %198 to %"class.blink::LayoutInline"*
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNS0_19HitTestCulledInlineERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetEPKNS_14NGInlineCursorEE3$_2EEvRKT_EUlRKNS_10LayoutRectEE_EEvSH_PKS0_"(%"class.blink::LayoutInline"* nonnull %537, %class.anon.2415* dereferenceable(24) %1, %"class.blink::LayoutInline"* %2)
  br label %1171

538:                                              ; preds = %533
  %539 = and i96 %532, 268435456
  %540 = icmp eq i96 %539, 0
  br i1 %540, label %543, label %541

541:                                              ; preds = %538
  %542 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %546

543:                                              ; preds = %538
  %544 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 1, i32 1, i32 1
  %545 = bitcast i8* %544 to %"class.blink::LineBoxList"*
  br label %546

546:                                              ; preds = %541, %543
  %547 = phi %"class.blink::LineBoxList"* [ %542, %541 ], [ %545, %543 ]
  %548 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %547, i64 0, i32 0, i32 0
  %549 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %548, align 8
  %550 = icmp eq %"class.blink::InlineFlowBox"* %549, null
  br i1 %550, label %1171, label %551

551:                                              ; preds = %546, %923
  %552 = phi %"class.blink::InlineFlowBox"* [ %926, %923 ], [ %549, %546 ]
  %553 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0
  %554 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %553) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %554, %"class.blink::LayoutUnit"* nonnull %22, %"class.blink::LayoutUnit"* nonnull %23)
  %555 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 6, i32 0
  %556 = load i32, i32* %555, align 8
  %557 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 6
  %558 = load i32, i32* %557, align 8
  %559 = and i32 %558, 1
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %585, label %561

561:                                              ; preds = %551
  %562 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 7, i32 0
  %563 = load i32, i32* %562, align 4
  %564 = and i32 %563, 2048
  %565 = icmp eq i32 %564, 0
  %566 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 4, i32 0
  %567 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %566, align 8
  %568 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %567, i64 0, i32 4
  %569 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %568 to i96*
  %570 = load i96, i96* %569, align 4
  %571 = and i96 %570, 33554432
  %572 = icmp eq i96 %571, 0
  %573 = bitcast %"class.blink::LayoutObject"* %567 to %"class.blink::LayoutBoxModelObject"*
  %574 = select i1 %572, %"class.blink::LayoutBoxModelObject"* %573, %"class.blink::LayoutBoxModelObject"* null
  %575 = bitcast %"class.blink::LayoutBoxModelObject"* %574 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %576 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %575, align 8
  br i1 %565, label %581, label %577

577:                                              ; preds = %561
  %578 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %576, i64 129
  %579 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %578, align 8
  %580 = call i32 %579(%"class.blink::LayoutBoxModelObject"* %574) #13
  br label %585

581:                                              ; preds = %561
  %582 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %576, i64 127
  %583 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %582, align 8
  %584 = call i32 %583(%"class.blink::LayoutBoxModelObject"* %574) #13
  br label %585

585:                                              ; preds = %581, %577, %551
  %586 = phi i32 [ 0, %551 ], [ %580, %577 ], [ %584, %581 ]
  %587 = load i32, i32* %557, align 8
  %588 = and i32 %587, 2
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %618, label %590

590:                                              ; preds = %585
  %591 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 7, i32 0
  %592 = load i32, i32* %591, align 4
  %593 = and i32 %592, 2048
  %594 = icmp eq i32 %593, 0
  %595 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 4, i32 0
  %596 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %595, align 8
  %597 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %596, i64 0, i32 4
  %598 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %597 to i96*
  %599 = load i96, i96* %598, align 4
  %600 = and i96 %599, 33554432
  %601 = icmp eq i96 %600, 0
  %602 = bitcast %"class.blink::LayoutObject"* %596 to %"class.blink::LayoutBoxModelObject"*
  %603 = select i1 %601, %"class.blink::LayoutBoxModelObject"* %602, %"class.blink::LayoutBoxModelObject"* null
  %604 = bitcast %"class.blink::LayoutBoxModelObject"* %603 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %605 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %604, align 8
  br i1 %594, label %610, label %606

606:                                              ; preds = %590
  %607 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %605, i64 130
  %608 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %607, align 8
  %609 = call i32 %608(%"class.blink::LayoutBoxModelObject"* %603) #13
  br label %614

610:                                              ; preds = %590
  %611 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %605, i64 128
  %612 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %611, align 8
  %613 = call i32 %612(%"class.blink::LayoutBoxModelObject"* %603) #13
  br label %614

614:                                              ; preds = %610, %606
  %615 = phi i32 [ %609, %606 ], [ %613, %610 ]
  %616 = icmp slt i32 %615, 0
  %617 = select i1 %616, i32 -2147483648, i32 2147483647
  br label %618

618:                                              ; preds = %585, %614
  %619 = phi i32 [ 0, %585 ], [ %615, %614 ]
  %620 = phi i32 [ 2147483647, %585 ], [ %617, %614 ]
  %621 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %586, i32 %619) #13
  %622 = extractvalue { i32, i1 } %621, 1
  %623 = extractvalue { i32, i1 } %621, 0
  %624 = select i1 %622, i32 %620, i32 %623, !prof !3
  %625 = icmp slt i32 %624, 0
  %626 = select i1 %625, i32 -2147483648, i32 2147483647
  %627 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %556, i32 %624) #13
  %628 = extractvalue { i32, i1 } %627, 1
  %629 = extractvalue { i32, i1 } %627, 0
  %630 = select i1 %628, i32 %626, i32 %629, !prof !3
  br i1 %33, label %631, label %777

631:                                              ; preds = %618
  %632 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 5, i32 0, i32 0
  %633 = load i32, i32* %632, align 4
  %634 = load i32, i32* %557, align 8
  %635 = and i32 %634, 1
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %664, label %637

637:                                              ; preds = %631
  %638 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 7, i32 0
  %639 = load i32, i32* %638, align 4
  %640 = and i32 %639, 2048
  %641 = icmp eq i32 %640, 0
  %642 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 4, i32 0
  %643 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %642, align 8
  %644 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %643, i64 0, i32 4
  %645 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %644 to i96*
  %646 = load i96, i96* %645, align 4
  %647 = and i96 %646, 33554432
  %648 = icmp eq i96 %647, 0
  %649 = bitcast %"class.blink::LayoutObject"* %643 to %"class.blink::LayoutBoxModelObject"*
  %650 = select i1 %648, %"class.blink::LayoutBoxModelObject"* %649, %"class.blink::LayoutBoxModelObject"* null
  %651 = bitcast %"class.blink::LayoutBoxModelObject"* %650 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %652 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %651, align 8
  br i1 %641, label %657, label %653

653:                                              ; preds = %637
  %654 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %652, i64 129
  %655 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %654, align 8
  %656 = call i32 %655(%"class.blink::LayoutBoxModelObject"* %650) #13
  br label %661

657:                                              ; preds = %637
  %658 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %652, i64 127
  %659 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %658, align 8
  %660 = call i32 %659(%"class.blink::LayoutBoxModelObject"* %650) #13
  br label %661

661:                                              ; preds = %653, %657
  %662 = phi i32 [ %656, %653 ], [ %660, %657 ]
  %663 = icmp sgt i32 %662, -1
  br i1 %663, label %664, label %666

664:                                              ; preds = %631, %661
  %665 = phi i32 [ %662, %661 ], [ 0, %631 ]
  br label %666

666:                                              ; preds = %661, %664
  %667 = phi i32 [ %665, %664 ], [ %662, %661 ]
  %668 = phi i32 [ -2147483648, %664 ], [ 2147483647, %661 ]
  %669 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %633, i32 %667) #13
  %670 = extractvalue { i32, i1 } %669, 1
  %671 = extractvalue { i32, i1 } %669, 0
  %672 = select i1 %670, i32 %668, i32 %671, !prof !3
  %673 = load i32, i32* %35, align 4
  %674 = load i32, i32* %37, align 4
  %675 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #13
  %676 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %675, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 16, i1 false) #13
  %677 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %676, align 8
  %678 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %677, i64 0, i32 0, i32 9
  %679 = bitcast [20 x i8]* %678 to i160*
  %680 = load i160, i160* %679, align 8
  %681 = and i160 %680, 15211807202738752817960438464512
  %682 = icmp eq i160 %681, 5070602400912917605986812821504
  br i1 %682, label %683, label %690, !prof !3

683:                                              ; preds = %666
  %684 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %47, align 8
  %685 = bitcast %"class.blink::LayoutObject"* %675 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %686 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %685, align 8
  %687 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %686, i64 106
  %688 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %687, align 8
  %689 = call i32 %688(%"class.blink::LayoutObject"* %675, i32 %672, i32 %630, %"class.blink::LayoutBox"* %684) #13
  br label %690

690:                                              ; preds = %666, %683
  %691 = phi i32 [ %689, %683 ], [ %672, %666 ]
  %692 = zext i32 %673 to i64
  %693 = shl nuw i64 %692, 32
  %694 = zext i32 %691 to i64
  %695 = or i64 %693, %694
  %696 = zext i32 %674 to i64
  %697 = shl nuw i64 %696, 32
  %698 = zext i32 %630 to i64
  %699 = or i64 %697, %698
  store i64 %695, i64* %174, align 8
  store i64 %699, i64* %173, align 8
  %700 = load %class.anon.2299*, %class.anon.2299** %49, align 8
  %701 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %700, i64 0, i32 0
  %702 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %701, align 8
  %703 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %702, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %171) #13
  br i1 %703, label %704, label %923

704:                                              ; preds = %690
  %705 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %700, i64 0, i32 2
  %706 = load i8*, i8** %705, align 8
  store i8 1, i8* %706, align 1
  %707 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %700, i64 0, i32 1
  %708 = load %"class.blink::Region"*, %"class.blink::Region"** %707, align 8
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %176) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %177) #13
  %709 = load i32, i32* %178, align 8
  %710 = icmp slt i32 %709, -2147483584
  %711 = ashr i32 %709, 6
  %712 = select i1 %710, i32 -33554432, i32 %711, !prof !3
  %713 = load i32, i32* %179, align 4
  %714 = icmp slt i32 %713, -2147483584
  %715 = ashr i32 %713, 6
  %716 = select i1 %714, i32 -33554432, i32 %715, !prof !3
  %717 = zext i32 %716 to i64
  %718 = shl nuw i64 %717, 32
  %719 = load i32, i32* %180, align 8
  %720 = icmp slt i32 %719, 0
  %721 = select i1 %720, i32 -2147483648, i32 2147483647
  %722 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %709, i32 %719) #13
  %723 = extractvalue { i32, i1 } %722, 1
  %724 = extractvalue { i32, i1 } %722, 0
  %725 = select i1 %723, i32 %721, i32 %724, !prof !3
  %726 = load i32, i32* %181, align 4
  %727 = icmp slt i32 %726, 0
  %728 = select i1 %727, i32 -2147483648, i32 2147483647
  %729 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %713, i32 %726) #13
  %730 = extractvalue { i32, i1 } %729, 1
  %731 = extractvalue { i32, i1 } %729, 0
  %732 = select i1 %730, i32 %728, i32 %731, !prof !3
  %733 = icmp sgt i32 %725, 2147483583
  br i1 %733, label %741, label %734, !prof !3

734:                                              ; preds = %704
  %735 = icmp sgt i32 %725, -1
  br i1 %735, label %736, label %739

736:                                              ; preds = %734
  %737 = add nuw nsw i32 %725, 63
  %738 = sdiv i32 %737, 64
  br label %741

739:                                              ; preds = %734
  %740 = sdiv i32 %725, 64
  br label %741

741:                                              ; preds = %739, %736, %704
  %742 = phi i32 [ %738, %736 ], [ %740, %739 ], [ 33554431, %704 ]
  %743 = icmp sgt i32 %732, 2147483583
  br i1 %743, label %751, label %744, !prof !3

744:                                              ; preds = %741
  %745 = icmp sgt i32 %732, -1
  br i1 %745, label %746, label %749

746:                                              ; preds = %744
  %747 = add nuw nsw i32 %732, 63
  %748 = sdiv i32 %747, 64
  br label %751

749:                                              ; preds = %744
  %750 = sdiv i32 %732, 64
  br label %751

751:                                              ; preds = %741, %746, %749
  %752 = phi i32 [ %748, %746 ], [ %750, %749 ], [ 33554431, %741 ]
  %753 = sub nsw i32 %742, %712
  %754 = sub nsw i32 %752, %716
  %755 = zext i32 %754 to i64
  %756 = shl nuw i64 %755, 32
  %757 = zext i32 %753 to i64
  %758 = or i64 %756, %757
  %759 = zext i32 %712 to i64
  %760 = or i64 %718, %759
  store i64 %760, i64* %182, align 8
  store i64 %758, i64* %183, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %4, %"class.blink::IntRect"* nonnull dereferenceable(16) %175) #13
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %708, %"class.blink::Region"* nonnull dereferenceable(304) %4) #13
  %761 = load i32, i32* %186, align 4
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %764, label %763, !prof !3

763:                                              ; preds = %751
  store i32 0, i32* %186, align 4
  br label %764

764:                                              ; preds = %763, %751
  %765 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %187, align 8
  %766 = icmp eq %"struct.blink::Region::Span"* %765, %189
  br i1 %766, label %768, label %767, !prof !4

767:                                              ; preds = %764
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %190, %"struct.blink::Region::Span"* %765) #13
  br label %768

768:                                              ; preds = %767, %764
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %187, align 8
  %769 = load i32, i32* %191, align 4
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %772, label %771, !prof !3

771:                                              ; preds = %768
  store i32 0, i32* %191, align 4
  br label %772

772:                                              ; preds = %771, %768
  %773 = load i32*, i32** %192, align 8
  %774 = icmp eq i32* %773, %194
  br i1 %774, label %776, label %775, !prof !4

775:                                              ; preds = %772
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %195, i32* %773) #13
  br label %776

776:                                              ; preds = %772, %775
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %177) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %176) #13
  br label %923

777:                                              ; preds = %618
  %778 = load i32, i32* %35, align 4
  %779 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 5, i32 1, i32 0
  %780 = load i32, i32* %779, align 4
  %781 = load i32, i32* %557, align 8
  %782 = and i32 %781, 1
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %811, label %784

784:                                              ; preds = %777
  %785 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 7, i32 0
  %786 = load i32, i32* %785, align 4
  %787 = and i32 %786, 2048
  %788 = icmp eq i32 %787, 0
  %789 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 0, i32 4, i32 0
  %790 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %789, align 8
  %791 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %790, i64 0, i32 4
  %792 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %791 to i96*
  %793 = load i96, i96* %792, align 4
  %794 = and i96 %793, 33554432
  %795 = icmp eq i96 %794, 0
  %796 = bitcast %"class.blink::LayoutObject"* %790 to %"class.blink::LayoutBoxModelObject"*
  %797 = select i1 %795, %"class.blink::LayoutBoxModelObject"* %796, %"class.blink::LayoutBoxModelObject"* null
  %798 = bitcast %"class.blink::LayoutBoxModelObject"* %797 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %799 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %798, align 8
  br i1 %788, label %804, label %800

800:                                              ; preds = %784
  %801 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %799, i64 129
  %802 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %801, align 8
  %803 = call i32 %802(%"class.blink::LayoutBoxModelObject"* %797) #13
  br label %808

804:                                              ; preds = %784
  %805 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %799, i64 127
  %806 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %805, align 8
  %807 = call i32 %806(%"class.blink::LayoutBoxModelObject"* %797) #13
  br label %808

808:                                              ; preds = %800, %804
  %809 = phi i32 [ %803, %800 ], [ %807, %804 ]
  %810 = icmp sgt i32 %809, -1
  br i1 %810, label %811, label %813

811:                                              ; preds = %777, %808
  %812 = phi i32 [ %809, %808 ], [ 0, %777 ]
  br label %813

813:                                              ; preds = %808, %811
  %814 = phi i32 [ %812, %811 ], [ %809, %808 ]
  %815 = phi i32 [ -2147483648, %811 ], [ 2147483647, %808 ]
  %816 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %780, i32 %814) #13
  %817 = extractvalue { i32, i1 } %816, 1
  %818 = extractvalue { i32, i1 } %816, 0
  %819 = select i1 %817, i32 %815, i32 %818, !prof !3
  %820 = load i32, i32* %37, align 4
  %821 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #13
  %822 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %821, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 16, i1 false) #13
  %823 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %822, align 8
  %824 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %823, i64 0, i32 0, i32 9
  %825 = bitcast [20 x i8]* %824 to i160*
  %826 = load i160, i160* %825, align 8
  %827 = and i160 %826, 15211807202738752817960438464512
  %828 = icmp eq i160 %827, 5070602400912917605986812821504
  br i1 %828, label %829, label %836, !prof !3

829:                                              ; preds = %813
  %830 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %47, align 8
  %831 = bitcast %"class.blink::LayoutObject"* %821 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %832 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %831, align 8
  %833 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %832, i64 106
  %834 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %833, align 8
  %835 = call i32 %834(%"class.blink::LayoutObject"* %821, i32 %778, i32 %820, %"class.blink::LayoutBox"* %830) #13
  br label %836

836:                                              ; preds = %813, %829
  %837 = phi i32 [ %835, %829 ], [ %778, %813 ]
  %838 = zext i32 %819 to i64
  %839 = shl nuw i64 %838, 32
  %840 = zext i32 %837 to i64
  %841 = or i64 %839, %840
  %842 = zext i32 %630 to i64
  %843 = shl nuw i64 %842, 32
  %844 = zext i32 %820 to i64
  %845 = or i64 %843, %844
  store i64 %841, i64* %149, align 8
  store i64 %845, i64* %148, align 8
  %846 = load %class.anon.2299*, %class.anon.2299** %49, align 8
  %847 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %846, i64 0, i32 0
  %848 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %847, align 8
  %849 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %848, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %146) #13
  br i1 %849, label %850, label %923

850:                                              ; preds = %836
  %851 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %846, i64 0, i32 2
  %852 = load i8*, i8** %851, align 8
  store i8 1, i8* %852, align 1
  %853 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %846, i64 0, i32 1
  %854 = load %"class.blink::Region"*, %"class.blink::Region"** %853, align 8
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %151) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #13
  %855 = load i32, i32* %153, align 8
  %856 = icmp slt i32 %855, -2147483584
  %857 = ashr i32 %855, 6
  %858 = select i1 %856, i32 -33554432, i32 %857, !prof !3
  %859 = load i32, i32* %154, align 4
  %860 = icmp slt i32 %859, -2147483584
  %861 = ashr i32 %859, 6
  %862 = select i1 %860, i32 -33554432, i32 %861, !prof !3
  %863 = zext i32 %862 to i64
  %864 = shl nuw i64 %863, 32
  %865 = load i32, i32* %155, align 8
  %866 = icmp slt i32 %865, 0
  %867 = select i1 %866, i32 -2147483648, i32 2147483647
  %868 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %855, i32 %865) #13
  %869 = extractvalue { i32, i1 } %868, 1
  %870 = extractvalue { i32, i1 } %868, 0
  %871 = select i1 %869, i32 %867, i32 %870, !prof !3
  %872 = load i32, i32* %156, align 4
  %873 = icmp slt i32 %872, 0
  %874 = select i1 %873, i32 -2147483648, i32 2147483647
  %875 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %859, i32 %872) #13
  %876 = extractvalue { i32, i1 } %875, 1
  %877 = extractvalue { i32, i1 } %875, 0
  %878 = select i1 %876, i32 %874, i32 %877, !prof !3
  %879 = icmp sgt i32 %871, 2147483583
  br i1 %879, label %887, label %880, !prof !3

880:                                              ; preds = %850
  %881 = icmp sgt i32 %871, -1
  br i1 %881, label %882, label %885

882:                                              ; preds = %880
  %883 = add nuw nsw i32 %871, 63
  %884 = sdiv i32 %883, 64
  br label %887

885:                                              ; preds = %880
  %886 = sdiv i32 %871, 64
  br label %887

887:                                              ; preds = %885, %882, %850
  %888 = phi i32 [ %884, %882 ], [ %886, %885 ], [ 33554431, %850 ]
  %889 = icmp sgt i32 %878, 2147483583
  br i1 %889, label %897, label %890, !prof !3

890:                                              ; preds = %887
  %891 = icmp sgt i32 %878, -1
  br i1 %891, label %892, label %895

892:                                              ; preds = %890
  %893 = add nuw nsw i32 %878, 63
  %894 = sdiv i32 %893, 64
  br label %897

895:                                              ; preds = %890
  %896 = sdiv i32 %878, 64
  br label %897

897:                                              ; preds = %887, %892, %895
  %898 = phi i32 [ %894, %892 ], [ %896, %895 ], [ 33554431, %887 ]
  %899 = sub nsw i32 %888, %858
  %900 = sub nsw i32 %898, %862
  %901 = zext i32 %900 to i64
  %902 = shl nuw i64 %901, 32
  %903 = zext i32 %899 to i64
  %904 = or i64 %902, %903
  %905 = zext i32 %858 to i64
  %906 = or i64 %864, %905
  store i64 %906, i64* %157, align 8
  store i64 %904, i64* %158, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %13, %"class.blink::IntRect"* nonnull dereferenceable(16) %150) #13
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %854, %"class.blink::Region"* nonnull dereferenceable(304) %13) #13
  %907 = load i32, i32* %161, align 4
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %910, label %909, !prof !3

909:                                              ; preds = %897
  store i32 0, i32* %161, align 4
  br label %910

910:                                              ; preds = %909, %897
  %911 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %162, align 8
  %912 = icmp eq %"struct.blink::Region::Span"* %911, %164
  br i1 %912, label %914, label %913, !prof !4

913:                                              ; preds = %910
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %165, %"struct.blink::Region::Span"* %911) #13
  br label %914

914:                                              ; preds = %913, %910
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %162, align 8
  %915 = load i32, i32* %166, align 4
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %918, label %917, !prof !3

917:                                              ; preds = %914
  store i32 0, i32* %166, align 4
  br label %918

918:                                              ; preds = %917, %914
  %919 = load i32*, i32** %167, align 8
  %920 = icmp eq i32* %919, %169
  br i1 %920, label %922, label %921, !prof !4

921:                                              ; preds = %918
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %170, i32* %919) #13
  br label %922

922:                                              ; preds = %918, %921
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %151) #13
  br label %923

923:                                              ; preds = %922, %836, %776, %690
  %924 = phi i8* [ %172, %690 ], [ %172, %776 ], [ %147, %836 ], [ %147, %922 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %924) #13
  %925 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %552, i64 0, i32 5
  %926 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %925, align 8
  %927 = icmp eq %"class.blink::InlineFlowBox"* %926, null
  br i1 %927, label %1171, label %551

928:                                              ; preds = %526
  %929 = and i96 %532, 33554432
  %930 = icmp eq i96 %929, 0
  br i1 %930, label %1171, label %931

931:                                              ; preds = %928
  %932 = and i96 %532, 268435456
  %933 = icmp eq i96 %932, 0
  br i1 %933, label %936, label %934

934:                                              ; preds = %931
  %935 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %939

936:                                              ; preds = %931
  %937 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 1, i32 6
  %938 = bitcast %"class.blink::UntracedMember"* %937 to %"class.blink::InlineTextBoxList"*
  br label %939

939:                                              ; preds = %934, %936
  %940 = phi %"class.blink::InlineTextBoxList"* [ %935, %934 ], [ %938, %936 ]
  %941 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %940, i64 0, i32 0, i32 0
  %942 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %941, align 8
  %943 = icmp eq %"class.blink::InlineTextBox"* %942, null
  br i1 %943, label %1171, label %944

944:                                              ; preds = %939, %1166
  %945 = phi %"class.blink::InlineTextBox"* [ %1169, %1166 ], [ %942, %939 ]
  %946 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %945, i64 0, i32 0
  %947 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %946) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %947, %"class.blink::LayoutUnit"* nonnull %22, %"class.blink::LayoutUnit"* nonnull %23)
  br i1 %33, label %948, label %1057

948:                                              ; preds = %944
  %949 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %945, i64 0, i32 0, i32 5, i32 0, i32 0
  %950 = load i32, i32* %949, align 4
  %951 = load i32, i32* %35, align 4
  %952 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %945, i64 0, i32 0, i32 6, i32 0
  %953 = load i32, i32* %952, align 8
  %954 = load i32, i32* %37, align 4
  %955 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #13
  %956 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %955, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 16, i1 false) #13
  %957 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %956, align 8
  %958 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %957, i64 0, i32 0, i32 9
  %959 = bitcast [20 x i8]* %958 to i160*
  %960 = load i160, i160* %959, align 8
  %961 = and i160 %960, 15211807202738752817960438464512
  %962 = icmp eq i160 %961, 5070602400912917605986812821504
  br i1 %962, label %963, label %970, !prof !3

963:                                              ; preds = %948
  %964 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %47, align 8
  %965 = bitcast %"class.blink::LayoutObject"* %955 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %966 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %965, align 8
  %967 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %966, i64 106
  %968 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %967, align 8
  %969 = call i32 %968(%"class.blink::LayoutObject"* %955, i32 %950, i32 %953, %"class.blink::LayoutBox"* %964) #13
  br label %970

970:                                              ; preds = %948, %963
  %971 = phi i32 [ %969, %963 ], [ %950, %948 ]
  %972 = zext i32 %951 to i64
  %973 = shl nuw i64 %972, 32
  %974 = zext i32 %971 to i64
  %975 = or i64 %973, %974
  %976 = zext i32 %954 to i64
  %977 = shl nuw i64 %976, 32
  %978 = zext i32 %953 to i64
  %979 = or i64 %977, %978
  store i64 %975, i64* %124, align 8
  store i64 %979, i64* %123, align 8
  %980 = load %class.anon.2299*, %class.anon.2299** %49, align 8
  %981 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %980, i64 0, i32 0
  %982 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %981, align 8
  %983 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %982, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %121) #13
  br i1 %983, label %984, label %1166

984:                                              ; preds = %970
  %985 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %980, i64 0, i32 2
  %986 = load i8*, i8** %985, align 8
  store i8 1, i8* %986, align 1
  %987 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %980, i64 0, i32 1
  %988 = load %"class.blink::Region"*, %"class.blink::Region"** %987, align 8
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %126) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #13
  %989 = load i32, i32* %128, align 8
  %990 = icmp slt i32 %989, -2147483584
  %991 = ashr i32 %989, 6
  %992 = select i1 %990, i32 -33554432, i32 %991, !prof !3
  %993 = load i32, i32* %129, align 4
  %994 = icmp slt i32 %993, -2147483584
  %995 = ashr i32 %993, 6
  %996 = select i1 %994, i32 -33554432, i32 %995, !prof !3
  %997 = zext i32 %996 to i64
  %998 = shl nuw i64 %997, 32
  %999 = load i32, i32* %130, align 8
  %1000 = icmp slt i32 %999, 0
  %1001 = select i1 %1000, i32 -2147483648, i32 2147483647
  %1002 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %989, i32 %999) #13
  %1003 = extractvalue { i32, i1 } %1002, 1
  %1004 = extractvalue { i32, i1 } %1002, 0
  %1005 = select i1 %1003, i32 %1001, i32 %1004, !prof !3
  %1006 = load i32, i32* %131, align 4
  %1007 = icmp slt i32 %1006, 0
  %1008 = select i1 %1007, i32 -2147483648, i32 2147483647
  %1009 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %993, i32 %1006) #13
  %1010 = extractvalue { i32, i1 } %1009, 1
  %1011 = extractvalue { i32, i1 } %1009, 0
  %1012 = select i1 %1010, i32 %1008, i32 %1011, !prof !3
  %1013 = icmp sgt i32 %1005, 2147483583
  br i1 %1013, label %1021, label %1014, !prof !3

1014:                                             ; preds = %984
  %1015 = icmp sgt i32 %1005, -1
  br i1 %1015, label %1016, label %1019

1016:                                             ; preds = %1014
  %1017 = add nuw nsw i32 %1005, 63
  %1018 = sdiv i32 %1017, 64
  br label %1021

1019:                                             ; preds = %1014
  %1020 = sdiv i32 %1005, 64
  br label %1021

1021:                                             ; preds = %1019, %1016, %984
  %1022 = phi i32 [ %1018, %1016 ], [ %1020, %1019 ], [ 33554431, %984 ]
  %1023 = icmp sgt i32 %1012, 2147483583
  br i1 %1023, label %1031, label %1024, !prof !3

1024:                                             ; preds = %1021
  %1025 = icmp sgt i32 %1012, -1
  br i1 %1025, label %1026, label %1029

1026:                                             ; preds = %1024
  %1027 = add nuw nsw i32 %1012, 63
  %1028 = sdiv i32 %1027, 64
  br label %1031

1029:                                             ; preds = %1024
  %1030 = sdiv i32 %1012, 64
  br label %1031

1031:                                             ; preds = %1021, %1026, %1029
  %1032 = phi i32 [ %1028, %1026 ], [ %1030, %1029 ], [ 33554431, %1021 ]
  %1033 = sub nsw i32 %1022, %992
  %1034 = sub nsw i32 %1032, %996
  %1035 = zext i32 %1034 to i64
  %1036 = shl nuw i64 %1035, 32
  %1037 = zext i32 %1033 to i64
  %1038 = or i64 %1036, %1037
  %1039 = zext i32 %992 to i64
  %1040 = or i64 %998, %1039
  store i64 %1040, i64* %132, align 8
  store i64 %1038, i64* %133, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %16, %"class.blink::IntRect"* nonnull dereferenceable(16) %125) #13
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %988, %"class.blink::Region"* nonnull dereferenceable(304) %16) #13
  %1041 = load i32, i32* %136, align 4
  %1042 = icmp eq i32 %1041, 0
  br i1 %1042, label %1044, label %1043, !prof !3

1043:                                             ; preds = %1031
  store i32 0, i32* %136, align 4
  br label %1044

1044:                                             ; preds = %1043, %1031
  %1045 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %137, align 8
  %1046 = icmp eq %"struct.blink::Region::Span"* %1045, %139
  br i1 %1046, label %1048, label %1047, !prof !4

1047:                                             ; preds = %1044
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %140, %"struct.blink::Region::Span"* %1045) #13
  br label %1048

1048:                                             ; preds = %1047, %1044
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %137, align 8
  %1049 = load i32, i32* %141, align 4
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1052, label %1051, !prof !3

1051:                                             ; preds = %1048
  store i32 0, i32* %141, align 4
  br label %1052

1052:                                             ; preds = %1051, %1048
  %1053 = load i32*, i32** %142, align 8
  %1054 = icmp eq i32* %1053, %144
  br i1 %1054, label %1056, label %1055, !prof !4

1055:                                             ; preds = %1052
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %145, i32* %1053) #13
  br label %1056

1056:                                             ; preds = %1052, %1055
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %126) #13
  br label %1166

1057:                                             ; preds = %944
  %1058 = load i32, i32* %35, align 4
  %1059 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %945, i64 0, i32 0, i32 5, i32 1, i32 0
  %1060 = load i32, i32* %1059, align 4
  %1061 = load i32, i32* %37, align 4
  %1062 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %945, i64 0, i32 0, i32 6, i32 0
  %1063 = load i32, i32* %1062, align 8
  %1064 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #13
  %1065 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1064, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 16, i1 false) #13
  %1066 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1065, align 8
  %1067 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1066, i64 0, i32 0, i32 9
  %1068 = bitcast [20 x i8]* %1067 to i160*
  %1069 = load i160, i160* %1068, align 8
  %1070 = and i160 %1069, 15211807202738752817960438464512
  %1071 = icmp eq i160 %1070, 5070602400912917605986812821504
  br i1 %1071, label %1072, label %1079, !prof !3

1072:                                             ; preds = %1057
  %1073 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %47, align 8
  %1074 = bitcast %"class.blink::LayoutObject"* %1064 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %1075 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %1074, align 8
  %1076 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %1075, i64 106
  %1077 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %1076, align 8
  %1078 = call i32 %1077(%"class.blink::LayoutObject"* %1064, i32 %1058, i32 %1061, %"class.blink::LayoutBox"* %1073) #13
  br label %1079

1079:                                             ; preds = %1057, %1072
  %1080 = phi i32 [ %1078, %1072 ], [ %1058, %1057 ]
  %1081 = zext i32 %1060 to i64
  %1082 = shl nuw i64 %1081, 32
  %1083 = zext i32 %1080 to i64
  %1084 = or i64 %1082, %1083
  %1085 = zext i32 %1063 to i64
  %1086 = shl nuw i64 %1085, 32
  %1087 = zext i32 %1061 to i64
  %1088 = or i64 %1086, %1087
  store i64 %1084, i64* %99, align 8
  store i64 %1088, i64* %98, align 8
  %1089 = load %class.anon.2299*, %class.anon.2299** %49, align 8
  %1090 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %1089, i64 0, i32 0
  %1091 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %1090, align 8
  %1092 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %1091, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %96) #13
  br i1 %1092, label %1093, label %1166

1093:                                             ; preds = %1079
  %1094 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %1089, i64 0, i32 2
  %1095 = load i8*, i8** %1094, align 8
  store i8 1, i8* %1095, align 1
  %1096 = getelementptr inbounds %class.anon.2299, %class.anon.2299* %1089, i64 0, i32 1
  %1097 = load %"class.blink::Region"*, %"class.blink::Region"** %1096, align 8
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %101) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #13
  %1098 = load i32, i32* %103, align 8
  %1099 = icmp slt i32 %1098, -2147483584
  %1100 = ashr i32 %1098, 6
  %1101 = select i1 %1099, i32 -33554432, i32 %1100, !prof !3
  %1102 = load i32, i32* %104, align 4
  %1103 = icmp slt i32 %1102, -2147483584
  %1104 = ashr i32 %1102, 6
  %1105 = select i1 %1103, i32 -33554432, i32 %1104, !prof !3
  %1106 = zext i32 %1105 to i64
  %1107 = shl nuw i64 %1106, 32
  %1108 = load i32, i32* %105, align 8
  %1109 = icmp slt i32 %1108, 0
  %1110 = select i1 %1109, i32 -2147483648, i32 2147483647
  %1111 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1098, i32 %1108) #13
  %1112 = extractvalue { i32, i1 } %1111, 1
  %1113 = extractvalue { i32, i1 } %1111, 0
  %1114 = select i1 %1112, i32 %1110, i32 %1113, !prof !3
  %1115 = load i32, i32* %106, align 4
  %1116 = icmp slt i32 %1115, 0
  %1117 = select i1 %1116, i32 -2147483648, i32 2147483647
  %1118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1102, i32 %1115) #13
  %1119 = extractvalue { i32, i1 } %1118, 1
  %1120 = extractvalue { i32, i1 } %1118, 0
  %1121 = select i1 %1119, i32 %1117, i32 %1120, !prof !3
  %1122 = icmp sgt i32 %1114, 2147483583
  br i1 %1122, label %1130, label %1123, !prof !3

1123:                                             ; preds = %1093
  %1124 = icmp sgt i32 %1114, -1
  br i1 %1124, label %1125, label %1128

1125:                                             ; preds = %1123
  %1126 = add nuw nsw i32 %1114, 63
  %1127 = sdiv i32 %1126, 64
  br label %1130

1128:                                             ; preds = %1123
  %1129 = sdiv i32 %1114, 64
  br label %1130

1130:                                             ; preds = %1128, %1125, %1093
  %1131 = phi i32 [ %1127, %1125 ], [ %1129, %1128 ], [ 33554431, %1093 ]
  %1132 = icmp sgt i32 %1121, 2147483583
  br i1 %1132, label %1140, label %1133, !prof !3

1133:                                             ; preds = %1130
  %1134 = icmp sgt i32 %1121, -1
  br i1 %1134, label %1135, label %1138

1135:                                             ; preds = %1133
  %1136 = add nuw nsw i32 %1121, 63
  %1137 = sdiv i32 %1136, 64
  br label %1140

1138:                                             ; preds = %1133
  %1139 = sdiv i32 %1121, 64
  br label %1140

1140:                                             ; preds = %1130, %1135, %1138
  %1141 = phi i32 [ %1137, %1135 ], [ %1139, %1138 ], [ 33554431, %1130 ]
  %1142 = sub nsw i32 %1131, %1101
  %1143 = sub nsw i32 %1141, %1105
  %1144 = zext i32 %1143 to i64
  %1145 = shl nuw i64 %1144, 32
  %1146 = zext i32 %1142 to i64
  %1147 = or i64 %1145, %1146
  %1148 = zext i32 %1101 to i64
  %1149 = or i64 %1107, %1148
  store i64 %1149, i64* %107, align 8
  store i64 %1147, i64* %108, align 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %19, %"class.blink::IntRect"* nonnull dereferenceable(16) %100) #13
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %1097, %"class.blink::Region"* nonnull dereferenceable(304) %19) #13
  %1150 = load i32, i32* %111, align 4
  %1151 = icmp eq i32 %1150, 0
  br i1 %1151, label %1153, label %1152, !prof !3

1152:                                             ; preds = %1140
  store i32 0, i32* %111, align 4
  br label %1153

1153:                                             ; preds = %1152, %1140
  %1154 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %112, align 8
  %1155 = icmp eq %"struct.blink::Region::Span"* %1154, %114
  br i1 %1155, label %1157, label %1156, !prof !4

1156:                                             ; preds = %1153
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1851"* %115, %"struct.blink::Region::Span"* %1154) #13
  br label %1157

1157:                                             ; preds = %1156, %1153
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %112, align 8
  %1158 = load i32, i32* %116, align 4
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1161, label %1160, !prof !3

1160:                                             ; preds = %1157
  store i32 0, i32* %116, align 4
  br label %1161

1161:                                             ; preds = %1160, %1157
  %1162 = load i32*, i32** %117, align 8
  %1163 = icmp eq i32* %1162, %119
  br i1 %1163, label %1165, label %1164, !prof !4

1164:                                             ; preds = %1161
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.1846"* %120, i32* %1162) #13
  br label %1165

1165:                                             ; preds = %1161, %1164
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %101) #13
  br label %1166

1166:                                             ; preds = %1165, %1079, %1056, %970
  %1167 = phi i8* [ %122, %970 ], [ %122, %1056 ], [ %97, %1079 ], [ %97, %1165 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1167) #13
  %1168 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %945, i64 0, i32 2
  %1169 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1168, align 8
  %1170 = icmp eq %"class.blink::InlineTextBox"* %1169, null
  br i1 %1170, label %1171, label %944

1171:                                             ; preds = %1166, %923, %939, %546, %928, %210, %536, %214, %525, %372, %197
  %1172 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 0, i32 9
  %1173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1172, align 8
  %1174 = icmp eq %"class.blink::LayoutObject"* %1173, null
  br i1 %1174, label %196, label %197

1175:                                             ; preds = %3, %196
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_24PhysicalLinesBoundingBoxEvE3$_3EEvRKT_EUlRKNS_10LayoutRectEE_EEvS6_PKS0_"(%"class.blink::LayoutInline"* nocapture readonly, %class.anon.2416* nocapture readonly dereferenceable(24), %"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.blink::LayoutUnit", align 4
  %11 = alloca %"class.blink::LayoutUnit", align 4
  %12 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %0)
  %13 = icmp eq %"class.blink::InlineBox"* %12, null
  br i1 %13, label %575, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = bitcast %"class.blink::LayoutUnit"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  store i32 0, i32* %23, align 4
  %24 = bitcast %"class.blink::LayoutUnit"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %11, i64 0, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %14
  %30 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %31 = bitcast %class.anon.2416* %1 to %"class.blink::LayoutObject"**
  %32 = bitcast { i64, i64 }* %4 to i8*
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %34 = getelementptr inbounds %class.anon.2416, %class.anon.2416* %1, i64 0, i32 1
  %35 = bitcast %"class.blink::LayoutBlock"** %34 to %"class.blink::LayoutBox"**
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %37 = getelementptr inbounds %class.anon.2416, %class.anon.2416* %1, i64 0, i32 2
  %38 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %39 = bitcast { i64, i64 }* %5 to i8*
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %42 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %43 = bitcast { i64, i64 }* %9 to i8*
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %46 = bitcast { i64, i64 }* %8 to %"struct.blink::PhysicalRect"*
  %47 = bitcast { i64, i64 }* %8 to i8*
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %50 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %51 = bitcast { i64, i64 }* %7 to i8*
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %54 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %55 = bitcast { i64, i64 }* %6 to i8*
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  br label %59

58:                                               ; preds = %571, %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13
  br label %575

59:                                               ; preds = %29, %571
  %60 = phi %"class.blink::LayoutObject"* [ %27, %29 ], [ %573, %571 ]
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 4
  %62 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %61 to i96*
  %63 = load i96, i96* %62, align 4
  %64 = and i96 %63, 8388608
  %65 = icmp ne i96 %64, 0
  %66 = and i96 %63, 113336795588871485128704
  %67 = icmp eq i96 %66, 75557863725914323419136
  %68 = or i1 %67, %65
  br i1 %68, label %571, label %69

69:                                               ; preds = %59
  %70 = and i96 %63, 67108864
  %71 = icmp eq i96 %70, 0
  br i1 %71, label %238, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBox"*
  %74 = and i96 %63, 268435456
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %76, label %571

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 2, i32 1, i32 1
  %78 = bitcast i8* %77 to %"class.blink::InlineBox"**
  %79 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  %80 = icmp eq %"class.blink::InlineBox"* %79, null
  br i1 %80, label %571, label %81

81:                                               ; preds = %76
  %82 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %79) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %82, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  br i1 %21, label %83, label %160

83:                                               ; preds = %81
  %84 = load i96, i96* %62, align 4
  %85 = and i96 %84, 268435456
  %86 = icmp eq i96 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  br label %89

89:                                               ; preds = %83, %87
  %90 = phi %"class.blink::InlineBox"* [ %88, %87 ], [ null, %83 ]
  %91 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %90, i64 0, i32 5, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBox"*)***
  %94 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %94, i64 129
  %96 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %95, align 8
  %97 = call i32 %96(%"class.blink::LayoutBox"* nonnull %73) #13
  %98 = icmp sgt i32 %97, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %97) #13
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  %104 = load i32, i32* %23, align 4
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 4, i32 0, i64 4
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 4
  %108 = trunc i64 %107 to i32
  %109 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBoxModelObject"*
  %110 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %111 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %110, align 8
  %112 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %111, i64 129
  %113 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %112, align 8
  %114 = call i32 %113(%"class.blink::LayoutBoxModelObject"* nonnull %109) #13
  %115 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %110, align 8
  %116 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, i64 130
  %117 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %116, align 8
  %118 = call i32 %117(%"class.blink::LayoutBoxModelObject"* nonnull %109) #13
  %119 = icmp slt i32 %118, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %114, i32 %118) #13
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !3
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %124) #13
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !3
  %131 = load i32, i32* %25, align 4
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #13
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #13
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 15211807202738752817960438464512
  %139 = icmp eq i160 %138, 5070602400912917605986812821504
  br i1 %139, label %140, label %147, !prof !3

140:                                              ; preds = %89
  %141 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %142 = bitcast %"class.blink::LayoutObject"* %132 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %143 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %142, align 8
  %144 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %143, i64 106
  %145 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %144, align 8
  %146 = call i32 %145(%"class.blink::LayoutObject"* %132, i32 %103, i32 %130, %"class.blink::LayoutBox"* %141) #13
  br label %147

147:                                              ; preds = %89, %140
  %148 = phi i32 [ %146, %140 ], [ %103, %89 ]
  %149 = zext i32 %104 to i64
  %150 = shl nuw i64 %149, 32
  %151 = zext i32 %148 to i64
  %152 = or i64 %150, %151
  %153 = zext i32 %131 to i64
  %154 = shl nuw i64 %153, 32
  %155 = zext i32 %130 to i64
  %156 = or i64 %154, %155
  store i64 %152, i64* %41, align 8
  store i64 %156, i64* %40, align 8
  %157 = load %class.anon.2300*, %class.anon.2300** %37, align 8
  %158 = getelementptr inbounds %class.anon.2300, %class.anon.2300* %157, i64 0, i32 0
  %159 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %158, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %159, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %38) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #13
  br label %571

160:                                              ; preds = %81
  %161 = load i32, i32* %23, align 4
  %162 = load i96, i96* %62, align 4
  %163 = and i96 %162, 268435456
  %164 = icmp eq i96 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  br label %167

167:                                              ; preds = %160, %165
  %168 = phi %"class.blink::InlineBox"* [ %166, %165 ], [ null, %160 ]
  %169 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %168, i64 0, i32 5, i32 1, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBox"*)***
  %172 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %171, align 8
  %173 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %172, i64 127
  %174 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %173, align 8
  %175 = call i32 %174(%"class.blink::LayoutBox"* nonnull %73) #13
  %176 = icmp sgt i32 %175, -1
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  %178 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %175) #13
  %179 = extractvalue { i32, i1 } %178, 1
  %180 = extractvalue { i32, i1 } %178, 0
  %181 = select i1 %179, i32 %177, i32 %180, !prof !3
  %182 = load i32, i32* %25, align 4
  %183 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 4, i32 0, i64 4
  %184 = bitcast i8* %183 to i64*
  %185 = load i64, i64* %184, align 4
  %186 = lshr i64 %185, 32
  %187 = trunc i64 %186 to i32
  %188 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBoxModelObject"*
  %189 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %190 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %189, align 8
  %191 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %190, i64 127
  %192 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %191, align 8
  %193 = call i32 %192(%"class.blink::LayoutBoxModelObject"* nonnull %188) #13
  %194 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %189, align 8
  %195 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %194, i64 128
  %196 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %195, align 8
  %197 = call i32 %196(%"class.blink::LayoutBoxModelObject"* nonnull %188) #13
  %198 = icmp slt i32 %197, 0
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %193, i32 %197) #13
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !3
  %204 = icmp slt i32 %203, 0
  %205 = select i1 %204, i32 -2147483648, i32 2147483647
  %206 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %187, i32 %203) #13
  %207 = extractvalue { i32, i1 } %206, 1
  %208 = extractvalue { i32, i1 } %206, 0
  %209 = select i1 %207, i32 %205, i32 %208, !prof !3
  %210 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %211 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %210, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false) #13
  %212 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %212, i64 0, i32 0, i32 9
  %214 = bitcast [20 x i8]* %213 to i160*
  %215 = load i160, i160* %214, align 8
  %216 = and i160 %215, 15211807202738752817960438464512
  %217 = icmp eq i160 %216, 5070602400912917605986812821504
  br i1 %217, label %218, label %225, !prof !3

218:                                              ; preds = %167
  %219 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %220 = bitcast %"class.blink::LayoutObject"* %210 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %221 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %220, align 8
  %222 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %221, i64 106
  %223 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %222, align 8
  %224 = call i32 %223(%"class.blink::LayoutObject"* %210, i32 %161, i32 %182, %"class.blink::LayoutBox"* %219) #13
  br label %225

225:                                              ; preds = %167, %218
  %226 = phi i32 [ %224, %218 ], [ %161, %167 ]
  %227 = zext i32 %181 to i64
  %228 = shl nuw i64 %227, 32
  %229 = zext i32 %226 to i64
  %230 = or i64 %228, %229
  %231 = zext i32 %209 to i64
  %232 = shl nuw i64 %231, 32
  %233 = zext i32 %182 to i64
  %234 = or i64 %232, %233
  store i64 %230, i64* %36, align 8
  store i64 %234, i64* %33, align 8
  %235 = load %class.anon.2300*, %class.anon.2300** %37, align 8
  %236 = getelementptr inbounds %class.anon.2300, %class.anon.2300* %235, i64 0, i32 0
  %237 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %236, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %237, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  br label %571

238:                                              ; preds = %69
  %239 = bitcast %"class.blink::LayoutObject"* %60 to i1 (%"class.blink::LayoutObject"*)***
  %240 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %239, align 8
  %241 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %240, i64 26
  %242 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %241, align 8
  %243 = call zeroext i1 %242(%"class.blink::LayoutObject"* nonnull %60) #13
  %244 = load i96, i96* %62, align 4
  br i1 %243, label %245, label %484

245:                                              ; preds = %238
  %246 = and i96 %244, 70369012613120
  %247 = icmp eq i96 %246, 70368744177664
  br i1 %247, label %250, label %248

248:                                              ; preds = %245
  %249 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutInline"*
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_24PhysicalLinesBoundingBoxEvE3$_3EEvRKT_EUlRKNS_10LayoutRectEE_EEvS6_PKS0_"(%"class.blink::LayoutInline"* nonnull %249, %class.anon.2416* dereferenceable(24) %1, %"class.blink::LayoutInline"* %2)
  br label %571

250:                                              ; preds = %245
  %251 = and i96 %244, 268435456
  %252 = icmp eq i96 %251, 0
  br i1 %252, label %255, label %253

253:                                              ; preds = %250
  %254 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %258

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 1, i32 1
  %257 = bitcast i8* %256 to %"class.blink::LineBoxList"*
  br label %258

258:                                              ; preds = %253, %255
  %259 = phi %"class.blink::LineBoxList"* [ %254, %253 ], [ %257, %255 ]
  %260 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %259, i64 0, i32 0, i32 0
  %261 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %260, align 8
  %262 = icmp eq %"class.blink::InlineFlowBox"* %261, null
  br i1 %262, label %571, label %263

263:                                              ; preds = %258, %461
  %264 = phi %"class.blink::InlineFlowBox"* [ %482, %461 ], [ %261, %258 ]
  %265 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0
  %266 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %265) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %266, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  %267 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 6, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 6
  %270 = load i32, i32* %269, align 8
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %297, label %273

273:                                              ; preds = %263
  %274 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = and i32 %275, 2048
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %279 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %279, i64 0, i32 4
  %281 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %280 to i96*
  %282 = load i96, i96* %281, align 4
  %283 = and i96 %282, 33554432
  %284 = icmp eq i96 %283, 0
  %285 = bitcast %"class.blink::LayoutObject"* %279 to %"class.blink::LayoutBoxModelObject"*
  %286 = select i1 %284, %"class.blink::LayoutBoxModelObject"* %285, %"class.blink::LayoutBoxModelObject"* null
  %287 = bitcast %"class.blink::LayoutBoxModelObject"* %286 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %288 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %287, align 8
  br i1 %277, label %293, label %289

289:                                              ; preds = %273
  %290 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %288, i64 129
  %291 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %290, align 8
  %292 = call i32 %291(%"class.blink::LayoutBoxModelObject"* %286) #13
  br label %297

293:                                              ; preds = %273
  %294 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %288, i64 127
  %295 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %294, align 8
  %296 = call i32 %295(%"class.blink::LayoutBoxModelObject"* %286) #13
  br label %297

297:                                              ; preds = %293, %289, %263
  %298 = phi i32 [ 0, %263 ], [ %292, %289 ], [ %296, %293 ]
  %299 = load i32, i32* %269, align 8
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %330, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = and i32 %304, 2048
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %308 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %308, i64 0, i32 4
  %310 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %309 to i96*
  %311 = load i96, i96* %310, align 4
  %312 = and i96 %311, 33554432
  %313 = icmp eq i96 %312, 0
  %314 = bitcast %"class.blink::LayoutObject"* %308 to %"class.blink::LayoutBoxModelObject"*
  %315 = select i1 %313, %"class.blink::LayoutBoxModelObject"* %314, %"class.blink::LayoutBoxModelObject"* null
  %316 = bitcast %"class.blink::LayoutBoxModelObject"* %315 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %317 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %316, align 8
  br i1 %306, label %322, label %318

318:                                              ; preds = %302
  %319 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %317, i64 130
  %320 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %319, align 8
  %321 = call i32 %320(%"class.blink::LayoutBoxModelObject"* %315) #13
  br label %326

322:                                              ; preds = %302
  %323 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %317, i64 128
  %324 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %323, align 8
  %325 = call i32 %324(%"class.blink::LayoutBoxModelObject"* %315) #13
  br label %326

326:                                              ; preds = %322, %318
  %327 = phi i32 [ %321, %318 ], [ %325, %322 ]
  %328 = icmp slt i32 %327, 0
  %329 = select i1 %328, i32 -2147483648, i32 2147483647
  br label %330

330:                                              ; preds = %297, %326
  %331 = phi i32 [ 0, %297 ], [ %327, %326 ]
  %332 = phi i32 [ 2147483647, %297 ], [ %329, %326 ]
  %333 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %298, i32 %331) #13
  %334 = extractvalue { i32, i1 } %333, 1
  %335 = extractvalue { i32, i1 } %333, 0
  %336 = select i1 %334, i32 %332, i32 %335, !prof !3
  %337 = icmp slt i32 %336, 0
  %338 = select i1 %337, i32 -2147483648, i32 2147483647
  %339 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %268, i32 %336) #13
  %340 = extractvalue { i32, i1 } %339, 1
  %341 = extractvalue { i32, i1 } %339, 0
  %342 = select i1 %340, i32 %338, i32 %341, !prof !3
  br i1 %21, label %343, label %402

343:                                              ; preds = %330
  %344 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 5, i32 0, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = load i32, i32* %269, align 8
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %376, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = and i32 %351, 2048
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %355 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %355, i64 0, i32 4
  %357 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %356 to i96*
  %358 = load i96, i96* %357, align 4
  %359 = and i96 %358, 33554432
  %360 = icmp eq i96 %359, 0
  %361 = bitcast %"class.blink::LayoutObject"* %355 to %"class.blink::LayoutBoxModelObject"*
  %362 = select i1 %360, %"class.blink::LayoutBoxModelObject"* %361, %"class.blink::LayoutBoxModelObject"* null
  %363 = bitcast %"class.blink::LayoutBoxModelObject"* %362 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %364 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %363, align 8
  br i1 %353, label %369, label %365

365:                                              ; preds = %349
  %366 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %364, i64 129
  %367 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %366, align 8
  %368 = call i32 %367(%"class.blink::LayoutBoxModelObject"* %362) #13
  br label %373

369:                                              ; preds = %349
  %370 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %364, i64 127
  %371 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %370, align 8
  %372 = call i32 %371(%"class.blink::LayoutBoxModelObject"* %362) #13
  br label %373

373:                                              ; preds = %365, %369
  %374 = phi i32 [ %368, %365 ], [ %372, %369 ]
  %375 = icmp sgt i32 %374, -1
  br i1 %375, label %376, label %378

376:                                              ; preds = %343, %373
  %377 = phi i32 [ %374, %373 ], [ 0, %343 ]
  br label %378

378:                                              ; preds = %373, %376
  %379 = phi i32 [ %377, %376 ], [ %374, %373 ]
  %380 = phi i32 [ -2147483648, %376 ], [ 2147483647, %373 ]
  %381 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %345, i32 %379) #13
  %382 = extractvalue { i32, i1 } %381, 1
  %383 = extractvalue { i32, i1 } %381, 0
  %384 = select i1 %382, i32 %380, i32 %383, !prof !3
  %385 = load i32, i32* %23, align 4
  %386 = load i32, i32* %25, align 4
  %387 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #13
  %388 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %387, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 16, i1 false) #13
  %389 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %389, i64 0, i32 0, i32 9
  %391 = bitcast [20 x i8]* %390 to i160*
  %392 = load i160, i160* %391, align 8
  %393 = and i160 %392, 15211807202738752817960438464512
  %394 = icmp eq i160 %393, 5070602400912917605986812821504
  br i1 %394, label %395, label %461, !prof !3

395:                                              ; preds = %378
  %396 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %397 = bitcast %"class.blink::LayoutObject"* %387 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %398 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %397, align 8
  %399 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %398, i64 106
  %400 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %399, align 8
  %401 = call i32 %400(%"class.blink::LayoutObject"* %387, i32 %384, i32 %342, %"class.blink::LayoutBox"* %396) #13
  br label %461

402:                                              ; preds = %330
  %403 = load i32, i32* %23, align 4
  %404 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 5, i32 1, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = load i32, i32* %269, align 8
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %436, label %409

409:                                              ; preds = %402
  %410 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %411 = load i32, i32* %410, align 4
  %412 = and i32 %411, 2048
  %413 = icmp eq i32 %412, 0
  %414 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %415 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %414, align 8
  %416 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %415, i64 0, i32 4
  %417 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %416 to i96*
  %418 = load i96, i96* %417, align 4
  %419 = and i96 %418, 33554432
  %420 = icmp eq i96 %419, 0
  %421 = bitcast %"class.blink::LayoutObject"* %415 to %"class.blink::LayoutBoxModelObject"*
  %422 = select i1 %420, %"class.blink::LayoutBoxModelObject"* %421, %"class.blink::LayoutBoxModelObject"* null
  %423 = bitcast %"class.blink::LayoutBoxModelObject"* %422 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %424 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %423, align 8
  br i1 %413, label %429, label %425

425:                                              ; preds = %409
  %426 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %424, i64 129
  %427 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %426, align 8
  %428 = call i32 %427(%"class.blink::LayoutBoxModelObject"* %422) #13
  br label %433

429:                                              ; preds = %409
  %430 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %424, i64 127
  %431 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %430, align 8
  %432 = call i32 %431(%"class.blink::LayoutBoxModelObject"* %422) #13
  br label %433

433:                                              ; preds = %425, %429
  %434 = phi i32 [ %428, %425 ], [ %432, %429 ]
  %435 = icmp sgt i32 %434, -1
  br i1 %435, label %436, label %438

436:                                              ; preds = %402, %433
  %437 = phi i32 [ %434, %433 ], [ 0, %402 ]
  br label %438

438:                                              ; preds = %433, %436
  %439 = phi i32 [ %437, %436 ], [ %434, %433 ]
  %440 = phi i32 [ -2147483648, %436 ], [ 2147483647, %433 ]
  %441 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %405, i32 %439) #13
  %442 = extractvalue { i32, i1 } %441, 1
  %443 = extractvalue { i32, i1 } %441, 0
  %444 = select i1 %442, i32 %440, i32 %443, !prof !3
  %445 = load i32, i32* %25, align 4
  %446 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %447 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %446, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false) #13
  %448 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %447, align 8
  %449 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %448, i64 0, i32 0, i32 9
  %450 = bitcast [20 x i8]* %449 to i160*
  %451 = load i160, i160* %450, align 8
  %452 = and i160 %451, 15211807202738752817960438464512
  %453 = icmp eq i160 %452, 5070602400912917605986812821504
  br i1 %453, label %454, label %461, !prof !3

454:                                              ; preds = %438
  %455 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %456 = bitcast %"class.blink::LayoutObject"* %446 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %457 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %456, align 8
  %458 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %457, i64 106
  %459 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %458, align 8
  %460 = call i32 %459(%"class.blink::LayoutObject"* %446, i32 %403, i32 %445, %"class.blink::LayoutBox"* %455) #13
  br label %461

461:                                              ; preds = %454, %438, %395, %378
  %462 = phi i32 [ %385, %378 ], [ %385, %395 ], [ %444, %438 ], [ %444, %454 ]
  %463 = phi i32 [ %384, %378 ], [ %401, %395 ], [ %403, %438 ], [ %460, %454 ]
  %464 = phi i32 [ %386, %378 ], [ %386, %395 ], [ %342, %438 ], [ %342, %454 ]
  %465 = phi i32 [ %342, %378 ], [ %342, %395 ], [ %445, %438 ], [ %445, %454 ]
  %466 = phi i64* [ %57, %378 ], [ %57, %395 ], [ %53, %438 ], [ %53, %454 ]
  %467 = phi i64* [ %56, %378 ], [ %56, %395 ], [ %52, %438 ], [ %52, %454 ]
  %468 = phi %"struct.blink::PhysicalRect"* [ %54, %378 ], [ %54, %395 ], [ %50, %438 ], [ %50, %454 ]
  %469 = phi i8* [ %55, %378 ], [ %55, %395 ], [ %51, %438 ], [ %51, %454 ]
  %470 = zext i32 %462 to i64
  %471 = shl nuw i64 %470, 32
  %472 = zext i32 %463 to i64
  %473 = or i64 %471, %472
  %474 = zext i32 %464 to i64
  %475 = shl nuw i64 %474, 32
  %476 = zext i32 %465 to i64
  %477 = or i64 %475, %476
  store i64 %473, i64* %466, align 8
  store i64 %477, i64* %467, align 8
  %478 = load %class.anon.2300*, %class.anon.2300** %37, align 8
  %479 = getelementptr inbounds %class.anon.2300, %class.anon.2300* %478, i64 0, i32 0
  %480 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %479, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %480, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %468) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %469) #13
  %481 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 5
  %482 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %481, align 8
  %483 = icmp eq %"class.blink::InlineFlowBox"* %482, null
  br i1 %483, label %571, label %263

484:                                              ; preds = %238
  %485 = and i96 %244, 33554432
  %486 = icmp eq i96 %485, 0
  br i1 %486, label %571, label %487

487:                                              ; preds = %484
  %488 = and i96 %244, 268435456
  %489 = icmp eq i96 %488, 0
  br i1 %489, label %492, label %490

490:                                              ; preds = %487
  %491 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %495

492:                                              ; preds = %487
  %493 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 6
  %494 = bitcast %"class.blink::UntracedMember"* %493 to %"class.blink::InlineTextBoxList"*
  br label %495

495:                                              ; preds = %490, %492
  %496 = phi %"class.blink::InlineTextBoxList"* [ %491, %490 ], [ %494, %492 ]
  %497 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %496, i64 0, i32 0, i32 0
  %498 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %497, align 8
  %499 = icmp eq %"class.blink::InlineTextBox"* %498, null
  br i1 %499, label %571, label %500

500:                                              ; preds = %495, %548
  %501 = phi %"class.blink::InlineTextBox"* [ %569, %548 ], [ %498, %495 ]
  %502 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0
  %503 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %502) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %503, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  br i1 %21, label %504, label %526

504:                                              ; preds = %500
  %505 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 5, i32 0, i32 0
  %506 = load i32, i32* %505, align 4
  %507 = load i32, i32* %23, align 4
  %508 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 6, i32 0
  %509 = load i32, i32* %508, align 8
  %510 = load i32, i32* %25, align 4
  %511 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #13
  %512 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %511, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false) #13
  %513 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %512, align 8
  %514 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %513, i64 0, i32 0, i32 9
  %515 = bitcast [20 x i8]* %514 to i160*
  %516 = load i160, i160* %515, align 8
  %517 = and i160 %516, 15211807202738752817960438464512
  %518 = icmp eq i160 %517, 5070602400912917605986812821504
  br i1 %518, label %519, label %548, !prof !3

519:                                              ; preds = %504
  %520 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %521 = bitcast %"class.blink::LayoutObject"* %511 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %522 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %521, align 8
  %523 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %522, i64 106
  %524 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %523, align 8
  %525 = call i32 %524(%"class.blink::LayoutObject"* %511, i32 %506, i32 %509, %"class.blink::LayoutBox"* %520) #13
  br label %548

526:                                              ; preds = %500
  %527 = load i32, i32* %23, align 4
  %528 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 5, i32 1, i32 0
  %529 = load i32, i32* %528, align 4
  %530 = load i32, i32* %25, align 4
  %531 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 6, i32 0
  %532 = load i32, i32* %531, align 8
  %533 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %534 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %533, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #13
  %535 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %534, align 8
  %536 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %535, i64 0, i32 0, i32 9
  %537 = bitcast [20 x i8]* %536 to i160*
  %538 = load i160, i160* %537, align 8
  %539 = and i160 %538, 15211807202738752817960438464512
  %540 = icmp eq i160 %539, 5070602400912917605986812821504
  br i1 %540, label %541, label %548, !prof !3

541:                                              ; preds = %526
  %542 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %543 = bitcast %"class.blink::LayoutObject"* %533 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %544 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %543, align 8
  %545 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %544, i64 106
  %546 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %545, align 8
  %547 = call i32 %546(%"class.blink::LayoutObject"* %533, i32 %527, i32 %530, %"class.blink::LayoutBox"* %542) #13
  br label %548

548:                                              ; preds = %541, %526, %519, %504
  %549 = phi i32 [ %507, %504 ], [ %507, %519 ], [ %529, %526 ], [ %529, %541 ]
  %550 = phi i32 [ %506, %504 ], [ %525, %519 ], [ %527, %526 ], [ %547, %541 ]
  %551 = phi i32 [ %510, %504 ], [ %510, %519 ], [ %532, %526 ], [ %532, %541 ]
  %552 = phi i32 [ %509, %504 ], [ %509, %519 ], [ %530, %526 ], [ %530, %541 ]
  %553 = phi i64* [ %49, %504 ], [ %49, %519 ], [ %45, %526 ], [ %45, %541 ]
  %554 = phi i64* [ %48, %504 ], [ %48, %519 ], [ %44, %526 ], [ %44, %541 ]
  %555 = phi %"struct.blink::PhysicalRect"* [ %46, %504 ], [ %46, %519 ], [ %42, %526 ], [ %42, %541 ]
  %556 = phi i8* [ %47, %504 ], [ %47, %519 ], [ %43, %526 ], [ %43, %541 ]
  %557 = zext i32 %549 to i64
  %558 = shl nuw i64 %557, 32
  %559 = zext i32 %550 to i64
  %560 = or i64 %558, %559
  %561 = zext i32 %551 to i64
  %562 = shl nuw i64 %561, 32
  %563 = zext i32 %552 to i64
  %564 = or i64 %562, %563
  store i64 %560, i64* %553, align 8
  store i64 %564, i64* %554, align 8
  %565 = load %class.anon.2300*, %class.anon.2300** %37, align 8
  %566 = getelementptr inbounds %class.anon.2300, %class.anon.2300* %565, i64 0, i32 0
  %567 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %566, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %567, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %555) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %556) #13
  %568 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 2
  %569 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %568, align 8
  %570 = icmp eq %"class.blink::InlineTextBox"* %569, null
  br i1 %570, label %571, label %500

571:                                              ; preds = %548, %461, %495, %258, %484, %72, %248, %76, %225, %147, %59
  %572 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 9
  %573 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %572, align 8
  %574 = icmp eq %"class.blink::LayoutObject"* %573, null
  br i1 %574, label %58, label %59

575:                                              ; preds = %3, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_37CulledInlineVisualOverflowBoundingBoxEvE3$_4EEvRKT_EUlRKNS_10LayoutRectEE_EEvS6_PKS0_"(%"class.blink::LayoutInline"* nocapture readonly, %class.anon.2417* nocapture readonly dereferenceable(24), %"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %"class.blink::LayoutUnit", align 4
  %11 = alloca %"class.blink::LayoutUnit", align 4
  %12 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %0)
  %13 = icmp eq %"class.blink::InlineBox"* %12, null
  br i1 %13, label %575, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = bitcast %"class.blink::LayoutUnit"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  store i32 0, i32* %23, align 4
  %24 = bitcast %"class.blink::LayoutUnit"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %11, i64 0, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %14
  %30 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %31 = bitcast %class.anon.2417* %1 to %"class.blink::LayoutObject"**
  %32 = bitcast { i64, i64 }* %4 to i8*
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %34 = getelementptr inbounds %class.anon.2417, %class.anon.2417* %1, i64 0, i32 1
  %35 = bitcast %"class.blink::LayoutBlock"** %34 to %"class.blink::LayoutBox"**
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %37 = getelementptr inbounds %class.anon.2417, %class.anon.2417* %1, i64 0, i32 2
  %38 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %39 = bitcast { i64, i64 }* %5 to i8*
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %42 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %43 = bitcast { i64, i64 }* %9 to i8*
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %46 = bitcast { i64, i64 }* %8 to %"struct.blink::PhysicalRect"*
  %47 = bitcast { i64, i64 }* %8 to i8*
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %50 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %51 = bitcast { i64, i64 }* %7 to i8*
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %54 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %55 = bitcast { i64, i64 }* %6 to i8*
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  br label %59

58:                                               ; preds = %571, %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13
  br label %575

59:                                               ; preds = %29, %571
  %60 = phi %"class.blink::LayoutObject"* [ %27, %29 ], [ %573, %571 ]
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 4
  %62 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %61 to i96*
  %63 = load i96, i96* %62, align 4
  %64 = and i96 %63, 8388608
  %65 = icmp ne i96 %64, 0
  %66 = and i96 %63, 113336795588871485128704
  %67 = icmp eq i96 %66, 75557863725914323419136
  %68 = or i1 %67, %65
  br i1 %68, label %571, label %69

69:                                               ; preds = %59
  %70 = and i96 %63, 67108864
  %71 = icmp eq i96 %70, 0
  br i1 %71, label %238, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBox"*
  %74 = and i96 %63, 268435456
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %76, label %571

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 2, i32 1, i32 1
  %78 = bitcast i8* %77 to %"class.blink::InlineBox"**
  %79 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  %80 = icmp eq %"class.blink::InlineBox"* %79, null
  br i1 %80, label %571, label %81

81:                                               ; preds = %76
  %82 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %79) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %82, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  br i1 %21, label %83, label %160

83:                                               ; preds = %81
  %84 = load i96, i96* %62, align 4
  %85 = and i96 %84, 268435456
  %86 = icmp eq i96 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  br label %89

89:                                               ; preds = %83, %87
  %90 = phi %"class.blink::InlineBox"* [ %88, %87 ], [ null, %83 ]
  %91 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %90, i64 0, i32 5, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBox"*)***
  %94 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %94, i64 129
  %96 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %95, align 8
  %97 = call i32 %96(%"class.blink::LayoutBox"* nonnull %73) #13
  %98 = icmp sgt i32 %97, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %97) #13
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  %104 = load i32, i32* %23, align 4
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 4, i32 0, i64 4
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 4
  %108 = trunc i64 %107 to i32
  %109 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBoxModelObject"*
  %110 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %111 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %110, align 8
  %112 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %111, i64 129
  %113 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %112, align 8
  %114 = call i32 %113(%"class.blink::LayoutBoxModelObject"* nonnull %109) #13
  %115 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %110, align 8
  %116 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, i64 130
  %117 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %116, align 8
  %118 = call i32 %117(%"class.blink::LayoutBoxModelObject"* nonnull %109) #13
  %119 = icmp slt i32 %118, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %114, i32 %118) #13
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !3
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %124) #13
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !3
  %131 = load i32, i32* %25, align 4
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #13
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #13
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 15211807202738752817960438464512
  %139 = icmp eq i160 %138, 5070602400912917605986812821504
  br i1 %139, label %140, label %147, !prof !3

140:                                              ; preds = %89
  %141 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %142 = bitcast %"class.blink::LayoutObject"* %132 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %143 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %142, align 8
  %144 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %143, i64 106
  %145 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %144, align 8
  %146 = call i32 %145(%"class.blink::LayoutObject"* %132, i32 %103, i32 %130, %"class.blink::LayoutBox"* %141) #13
  br label %147

147:                                              ; preds = %89, %140
  %148 = phi i32 [ %146, %140 ], [ %103, %89 ]
  %149 = zext i32 %104 to i64
  %150 = shl nuw i64 %149, 32
  %151 = zext i32 %148 to i64
  %152 = or i64 %150, %151
  %153 = zext i32 %131 to i64
  %154 = shl nuw i64 %153, 32
  %155 = zext i32 %130 to i64
  %156 = or i64 %154, %155
  store i64 %152, i64* %41, align 8
  store i64 %156, i64* %40, align 8
  %157 = load %class.anon.2301*, %class.anon.2301** %37, align 8
  %158 = getelementptr inbounds %class.anon.2301, %class.anon.2301* %157, i64 0, i32 0
  %159 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %158, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %159, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %38) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #13
  br label %571

160:                                              ; preds = %81
  %161 = load i32, i32* %23, align 4
  %162 = load i96, i96* %62, align 4
  %163 = and i96 %162, 268435456
  %164 = icmp eq i96 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  br label %167

167:                                              ; preds = %160, %165
  %168 = phi %"class.blink::InlineBox"* [ %166, %165 ], [ null, %160 ]
  %169 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %168, i64 0, i32 5, i32 1, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBox"*)***
  %172 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %171, align 8
  %173 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %172, i64 127
  %174 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %173, align 8
  %175 = call i32 %174(%"class.blink::LayoutBox"* nonnull %73) #13
  %176 = icmp sgt i32 %175, -1
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  %178 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %175) #13
  %179 = extractvalue { i32, i1 } %178, 1
  %180 = extractvalue { i32, i1 } %178, 0
  %181 = select i1 %179, i32 %177, i32 %180, !prof !3
  %182 = load i32, i32* %25, align 4
  %183 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 4, i32 0, i64 4
  %184 = bitcast i8* %183 to i64*
  %185 = load i64, i64* %184, align 4
  %186 = lshr i64 %185, 32
  %187 = trunc i64 %186 to i32
  %188 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBoxModelObject"*
  %189 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %190 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %189, align 8
  %191 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %190, i64 127
  %192 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %191, align 8
  %193 = call i32 %192(%"class.blink::LayoutBoxModelObject"* nonnull %188) #13
  %194 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %189, align 8
  %195 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %194, i64 128
  %196 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %195, align 8
  %197 = call i32 %196(%"class.blink::LayoutBoxModelObject"* nonnull %188) #13
  %198 = icmp slt i32 %197, 0
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %193, i32 %197) #13
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !3
  %204 = icmp slt i32 %203, 0
  %205 = select i1 %204, i32 -2147483648, i32 2147483647
  %206 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %187, i32 %203) #13
  %207 = extractvalue { i32, i1 } %206, 1
  %208 = extractvalue { i32, i1 } %206, 0
  %209 = select i1 %207, i32 %205, i32 %208, !prof !3
  %210 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %211 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %210, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false) #13
  %212 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %212, i64 0, i32 0, i32 9
  %214 = bitcast [20 x i8]* %213 to i160*
  %215 = load i160, i160* %214, align 8
  %216 = and i160 %215, 15211807202738752817960438464512
  %217 = icmp eq i160 %216, 5070602400912917605986812821504
  br i1 %217, label %218, label %225, !prof !3

218:                                              ; preds = %167
  %219 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %220 = bitcast %"class.blink::LayoutObject"* %210 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %221 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %220, align 8
  %222 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %221, i64 106
  %223 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %222, align 8
  %224 = call i32 %223(%"class.blink::LayoutObject"* %210, i32 %161, i32 %182, %"class.blink::LayoutBox"* %219) #13
  br label %225

225:                                              ; preds = %167, %218
  %226 = phi i32 [ %224, %218 ], [ %161, %167 ]
  %227 = zext i32 %181 to i64
  %228 = shl nuw i64 %227, 32
  %229 = zext i32 %226 to i64
  %230 = or i64 %228, %229
  %231 = zext i32 %209 to i64
  %232 = shl nuw i64 %231, 32
  %233 = zext i32 %182 to i64
  %234 = or i64 %232, %233
  store i64 %230, i64* %36, align 8
  store i64 %234, i64* %33, align 8
  %235 = load %class.anon.2301*, %class.anon.2301** %37, align 8
  %236 = getelementptr inbounds %class.anon.2301, %class.anon.2301* %235, i64 0, i32 0
  %237 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %236, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %237, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  br label %571

238:                                              ; preds = %69
  %239 = bitcast %"class.blink::LayoutObject"* %60 to i1 (%"class.blink::LayoutObject"*)***
  %240 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %239, align 8
  %241 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %240, i64 26
  %242 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %241, align 8
  %243 = call zeroext i1 %242(%"class.blink::LayoutObject"* nonnull %60) #13
  %244 = load i96, i96* %62, align 4
  br i1 %243, label %245, label %484

245:                                              ; preds = %238
  %246 = and i96 %244, 70369012613120
  %247 = icmp eq i96 %246, 70368744177664
  br i1 %247, label %250, label %248

248:                                              ; preds = %245
  %249 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutInline"*
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_37CulledInlineVisualOverflowBoundingBoxEvE3$_4EEvRKT_EUlRKNS_10LayoutRectEE_EEvS6_PKS0_"(%"class.blink::LayoutInline"* nonnull %249, %class.anon.2417* dereferenceable(24) %1, %"class.blink::LayoutInline"* %2)
  br label %571

250:                                              ; preds = %245
  %251 = and i96 %244, 268435456
  %252 = icmp eq i96 %251, 0
  br i1 %252, label %255, label %253

253:                                              ; preds = %250
  %254 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %258

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 1, i32 1
  %257 = bitcast i8* %256 to %"class.blink::LineBoxList"*
  br label %258

258:                                              ; preds = %253, %255
  %259 = phi %"class.blink::LineBoxList"* [ %254, %253 ], [ %257, %255 ]
  %260 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %259, i64 0, i32 0, i32 0
  %261 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %260, align 8
  %262 = icmp eq %"class.blink::InlineFlowBox"* %261, null
  br i1 %262, label %571, label %263

263:                                              ; preds = %258, %461
  %264 = phi %"class.blink::InlineFlowBox"* [ %482, %461 ], [ %261, %258 ]
  %265 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0
  %266 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %265) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %266, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  %267 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 6, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 6
  %270 = load i32, i32* %269, align 8
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %297, label %273

273:                                              ; preds = %263
  %274 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = and i32 %275, 2048
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %279 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %279, i64 0, i32 4
  %281 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %280 to i96*
  %282 = load i96, i96* %281, align 4
  %283 = and i96 %282, 33554432
  %284 = icmp eq i96 %283, 0
  %285 = bitcast %"class.blink::LayoutObject"* %279 to %"class.blink::LayoutBoxModelObject"*
  %286 = select i1 %284, %"class.blink::LayoutBoxModelObject"* %285, %"class.blink::LayoutBoxModelObject"* null
  %287 = bitcast %"class.blink::LayoutBoxModelObject"* %286 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %288 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %287, align 8
  br i1 %277, label %293, label %289

289:                                              ; preds = %273
  %290 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %288, i64 129
  %291 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %290, align 8
  %292 = call i32 %291(%"class.blink::LayoutBoxModelObject"* %286) #13
  br label %297

293:                                              ; preds = %273
  %294 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %288, i64 127
  %295 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %294, align 8
  %296 = call i32 %295(%"class.blink::LayoutBoxModelObject"* %286) #13
  br label %297

297:                                              ; preds = %293, %289, %263
  %298 = phi i32 [ 0, %263 ], [ %292, %289 ], [ %296, %293 ]
  %299 = load i32, i32* %269, align 8
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %330, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = and i32 %304, 2048
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %308 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %308, i64 0, i32 4
  %310 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %309 to i96*
  %311 = load i96, i96* %310, align 4
  %312 = and i96 %311, 33554432
  %313 = icmp eq i96 %312, 0
  %314 = bitcast %"class.blink::LayoutObject"* %308 to %"class.blink::LayoutBoxModelObject"*
  %315 = select i1 %313, %"class.blink::LayoutBoxModelObject"* %314, %"class.blink::LayoutBoxModelObject"* null
  %316 = bitcast %"class.blink::LayoutBoxModelObject"* %315 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %317 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %316, align 8
  br i1 %306, label %322, label %318

318:                                              ; preds = %302
  %319 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %317, i64 130
  %320 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %319, align 8
  %321 = call i32 %320(%"class.blink::LayoutBoxModelObject"* %315) #13
  br label %326

322:                                              ; preds = %302
  %323 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %317, i64 128
  %324 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %323, align 8
  %325 = call i32 %324(%"class.blink::LayoutBoxModelObject"* %315) #13
  br label %326

326:                                              ; preds = %322, %318
  %327 = phi i32 [ %321, %318 ], [ %325, %322 ]
  %328 = icmp slt i32 %327, 0
  %329 = select i1 %328, i32 -2147483648, i32 2147483647
  br label %330

330:                                              ; preds = %297, %326
  %331 = phi i32 [ 0, %297 ], [ %327, %326 ]
  %332 = phi i32 [ 2147483647, %297 ], [ %329, %326 ]
  %333 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %298, i32 %331) #13
  %334 = extractvalue { i32, i1 } %333, 1
  %335 = extractvalue { i32, i1 } %333, 0
  %336 = select i1 %334, i32 %332, i32 %335, !prof !3
  %337 = icmp slt i32 %336, 0
  %338 = select i1 %337, i32 -2147483648, i32 2147483647
  %339 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %268, i32 %336) #13
  %340 = extractvalue { i32, i1 } %339, 1
  %341 = extractvalue { i32, i1 } %339, 0
  %342 = select i1 %340, i32 %338, i32 %341, !prof !3
  br i1 %21, label %343, label %402

343:                                              ; preds = %330
  %344 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 5, i32 0, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = load i32, i32* %269, align 8
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %376, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = and i32 %351, 2048
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %355 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %355, i64 0, i32 4
  %357 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %356 to i96*
  %358 = load i96, i96* %357, align 4
  %359 = and i96 %358, 33554432
  %360 = icmp eq i96 %359, 0
  %361 = bitcast %"class.blink::LayoutObject"* %355 to %"class.blink::LayoutBoxModelObject"*
  %362 = select i1 %360, %"class.blink::LayoutBoxModelObject"* %361, %"class.blink::LayoutBoxModelObject"* null
  %363 = bitcast %"class.blink::LayoutBoxModelObject"* %362 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %364 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %363, align 8
  br i1 %353, label %369, label %365

365:                                              ; preds = %349
  %366 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %364, i64 129
  %367 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %366, align 8
  %368 = call i32 %367(%"class.blink::LayoutBoxModelObject"* %362) #13
  br label %373

369:                                              ; preds = %349
  %370 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %364, i64 127
  %371 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %370, align 8
  %372 = call i32 %371(%"class.blink::LayoutBoxModelObject"* %362) #13
  br label %373

373:                                              ; preds = %365, %369
  %374 = phi i32 [ %368, %365 ], [ %372, %369 ]
  %375 = icmp sgt i32 %374, -1
  br i1 %375, label %376, label %378

376:                                              ; preds = %343, %373
  %377 = phi i32 [ %374, %373 ], [ 0, %343 ]
  br label %378

378:                                              ; preds = %373, %376
  %379 = phi i32 [ %377, %376 ], [ %374, %373 ]
  %380 = phi i32 [ -2147483648, %376 ], [ 2147483647, %373 ]
  %381 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %345, i32 %379) #13
  %382 = extractvalue { i32, i1 } %381, 1
  %383 = extractvalue { i32, i1 } %381, 0
  %384 = select i1 %382, i32 %380, i32 %383, !prof !3
  %385 = load i32, i32* %23, align 4
  %386 = load i32, i32* %25, align 4
  %387 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #13
  %388 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %387, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 16, i1 false) #13
  %389 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %389, i64 0, i32 0, i32 9
  %391 = bitcast [20 x i8]* %390 to i160*
  %392 = load i160, i160* %391, align 8
  %393 = and i160 %392, 15211807202738752817960438464512
  %394 = icmp eq i160 %393, 5070602400912917605986812821504
  br i1 %394, label %395, label %461, !prof !3

395:                                              ; preds = %378
  %396 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %397 = bitcast %"class.blink::LayoutObject"* %387 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %398 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %397, align 8
  %399 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %398, i64 106
  %400 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %399, align 8
  %401 = call i32 %400(%"class.blink::LayoutObject"* %387, i32 %384, i32 %342, %"class.blink::LayoutBox"* %396) #13
  br label %461

402:                                              ; preds = %330
  %403 = load i32, i32* %23, align 4
  %404 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 5, i32 1, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = load i32, i32* %269, align 8
  %407 = and i32 %406, 1
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %436, label %409

409:                                              ; preds = %402
  %410 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 7, i32 0
  %411 = load i32, i32* %410, align 4
  %412 = and i32 %411, 2048
  %413 = icmp eq i32 %412, 0
  %414 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 0, i32 4, i32 0
  %415 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %414, align 8
  %416 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %415, i64 0, i32 4
  %417 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %416 to i96*
  %418 = load i96, i96* %417, align 4
  %419 = and i96 %418, 33554432
  %420 = icmp eq i96 %419, 0
  %421 = bitcast %"class.blink::LayoutObject"* %415 to %"class.blink::LayoutBoxModelObject"*
  %422 = select i1 %420, %"class.blink::LayoutBoxModelObject"* %421, %"class.blink::LayoutBoxModelObject"* null
  %423 = bitcast %"class.blink::LayoutBoxModelObject"* %422 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %424 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %423, align 8
  br i1 %413, label %429, label %425

425:                                              ; preds = %409
  %426 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %424, i64 129
  %427 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %426, align 8
  %428 = call i32 %427(%"class.blink::LayoutBoxModelObject"* %422) #13
  br label %433

429:                                              ; preds = %409
  %430 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %424, i64 127
  %431 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %430, align 8
  %432 = call i32 %431(%"class.blink::LayoutBoxModelObject"* %422) #13
  br label %433

433:                                              ; preds = %425, %429
  %434 = phi i32 [ %428, %425 ], [ %432, %429 ]
  %435 = icmp sgt i32 %434, -1
  br i1 %435, label %436, label %438

436:                                              ; preds = %402, %433
  %437 = phi i32 [ %434, %433 ], [ 0, %402 ]
  br label %438

438:                                              ; preds = %433, %436
  %439 = phi i32 [ %437, %436 ], [ %434, %433 ]
  %440 = phi i32 [ -2147483648, %436 ], [ 2147483647, %433 ]
  %441 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %405, i32 %439) #13
  %442 = extractvalue { i32, i1 } %441, 1
  %443 = extractvalue { i32, i1 } %441, 0
  %444 = select i1 %442, i32 %440, i32 %443, !prof !3
  %445 = load i32, i32* %25, align 4
  %446 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %447 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %446, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false) #13
  %448 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %447, align 8
  %449 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %448, i64 0, i32 0, i32 9
  %450 = bitcast [20 x i8]* %449 to i160*
  %451 = load i160, i160* %450, align 8
  %452 = and i160 %451, 15211807202738752817960438464512
  %453 = icmp eq i160 %452, 5070602400912917605986812821504
  br i1 %453, label %454, label %461, !prof !3

454:                                              ; preds = %438
  %455 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %456 = bitcast %"class.blink::LayoutObject"* %446 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %457 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %456, align 8
  %458 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %457, i64 106
  %459 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %458, align 8
  %460 = call i32 %459(%"class.blink::LayoutObject"* %446, i32 %403, i32 %445, %"class.blink::LayoutBox"* %455) #13
  br label %461

461:                                              ; preds = %454, %438, %395, %378
  %462 = phi i32 [ %385, %378 ], [ %385, %395 ], [ %444, %438 ], [ %444, %454 ]
  %463 = phi i32 [ %384, %378 ], [ %401, %395 ], [ %403, %438 ], [ %460, %454 ]
  %464 = phi i32 [ %386, %378 ], [ %386, %395 ], [ %342, %438 ], [ %342, %454 ]
  %465 = phi i32 [ %342, %378 ], [ %342, %395 ], [ %445, %438 ], [ %445, %454 ]
  %466 = phi i64* [ %57, %378 ], [ %57, %395 ], [ %53, %438 ], [ %53, %454 ]
  %467 = phi i64* [ %56, %378 ], [ %56, %395 ], [ %52, %438 ], [ %52, %454 ]
  %468 = phi %"struct.blink::PhysicalRect"* [ %54, %378 ], [ %54, %395 ], [ %50, %438 ], [ %50, %454 ]
  %469 = phi i8* [ %55, %378 ], [ %55, %395 ], [ %51, %438 ], [ %51, %454 ]
  %470 = zext i32 %462 to i64
  %471 = shl nuw i64 %470, 32
  %472 = zext i32 %463 to i64
  %473 = or i64 %471, %472
  %474 = zext i32 %464 to i64
  %475 = shl nuw i64 %474, 32
  %476 = zext i32 %465 to i64
  %477 = or i64 %475, %476
  store i64 %473, i64* %466, align 8
  store i64 %477, i64* %467, align 8
  %478 = load %class.anon.2301*, %class.anon.2301** %37, align 8
  %479 = getelementptr inbounds %class.anon.2301, %class.anon.2301* %478, i64 0, i32 0
  %480 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %479, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %480, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %468) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %469) #13
  %481 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %264, i64 0, i32 5
  %482 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %481, align 8
  %483 = icmp eq %"class.blink::InlineFlowBox"* %482, null
  br i1 %483, label %571, label %263

484:                                              ; preds = %238
  %485 = and i96 %244, 33554432
  %486 = icmp eq i96 %485, 0
  br i1 %486, label %571, label %487

487:                                              ; preds = %484
  %488 = and i96 %244, 268435456
  %489 = icmp eq i96 %488, 0
  br i1 %489, label %492, label %490

490:                                              ; preds = %487
  %491 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %495

492:                                              ; preds = %487
  %493 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 6
  %494 = bitcast %"class.blink::UntracedMember"* %493 to %"class.blink::InlineTextBoxList"*
  br label %495

495:                                              ; preds = %490, %492
  %496 = phi %"class.blink::InlineTextBoxList"* [ %491, %490 ], [ %494, %492 ]
  %497 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %496, i64 0, i32 0, i32 0
  %498 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %497, align 8
  %499 = icmp eq %"class.blink::InlineTextBox"* %498, null
  br i1 %499, label %571, label %500

500:                                              ; preds = %495, %548
  %501 = phi %"class.blink::InlineTextBox"* [ %569, %548 ], [ %498, %495 ]
  %502 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0
  %503 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %502) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %503, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  br i1 %21, label %504, label %526

504:                                              ; preds = %500
  %505 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 5, i32 0, i32 0
  %506 = load i32, i32* %505, align 4
  %507 = load i32, i32* %23, align 4
  %508 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 6, i32 0
  %509 = load i32, i32* %508, align 8
  %510 = load i32, i32* %25, align 4
  %511 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #13
  %512 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %511, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false) #13
  %513 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %512, align 8
  %514 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %513, i64 0, i32 0, i32 9
  %515 = bitcast [20 x i8]* %514 to i160*
  %516 = load i160, i160* %515, align 8
  %517 = and i160 %516, 15211807202738752817960438464512
  %518 = icmp eq i160 %517, 5070602400912917605986812821504
  br i1 %518, label %519, label %548, !prof !3

519:                                              ; preds = %504
  %520 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %521 = bitcast %"class.blink::LayoutObject"* %511 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %522 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %521, align 8
  %523 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %522, i64 106
  %524 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %523, align 8
  %525 = call i32 %524(%"class.blink::LayoutObject"* %511, i32 %506, i32 %509, %"class.blink::LayoutBox"* %520) #13
  br label %548

526:                                              ; preds = %500
  %527 = load i32, i32* %23, align 4
  %528 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 5, i32 1, i32 0
  %529 = load i32, i32* %528, align 4
  %530 = load i32, i32* %25, align 4
  %531 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 0, i32 6, i32 0
  %532 = load i32, i32* %531, align 8
  %533 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #13
  %534 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %533, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #13
  %535 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %534, align 8
  %536 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %535, i64 0, i32 0, i32 9
  %537 = bitcast [20 x i8]* %536 to i160*
  %538 = load i160, i160* %537, align 8
  %539 = and i160 %538, 15211807202738752817960438464512
  %540 = icmp eq i160 %539, 5070602400912917605986812821504
  br i1 %540, label %541, label %548, !prof !3

541:                                              ; preds = %526
  %542 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %543 = bitcast %"class.blink::LayoutObject"* %533 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %544 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %543, align 8
  %545 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %544, i64 106
  %546 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %545, align 8
  %547 = call i32 %546(%"class.blink::LayoutObject"* %533, i32 %527, i32 %530, %"class.blink::LayoutBox"* %542) #13
  br label %548

548:                                              ; preds = %541, %526, %519, %504
  %549 = phi i32 [ %507, %504 ], [ %507, %519 ], [ %529, %526 ], [ %529, %541 ]
  %550 = phi i32 [ %506, %504 ], [ %525, %519 ], [ %527, %526 ], [ %547, %541 ]
  %551 = phi i32 [ %510, %504 ], [ %510, %519 ], [ %532, %526 ], [ %532, %541 ]
  %552 = phi i32 [ %509, %504 ], [ %509, %519 ], [ %530, %526 ], [ %530, %541 ]
  %553 = phi i64* [ %49, %504 ], [ %49, %519 ], [ %45, %526 ], [ %45, %541 ]
  %554 = phi i64* [ %48, %504 ], [ %48, %519 ], [ %44, %526 ], [ %44, %541 ]
  %555 = phi %"struct.blink::PhysicalRect"* [ %46, %504 ], [ %46, %519 ], [ %42, %526 ], [ %42, %541 ]
  %556 = phi i8* [ %47, %504 ], [ %47, %519 ], [ %43, %526 ], [ %43, %541 ]
  %557 = zext i32 %549 to i64
  %558 = shl nuw i64 %557, 32
  %559 = zext i32 %550 to i64
  %560 = or i64 %558, %559
  %561 = zext i32 %551 to i64
  %562 = shl nuw i64 %561, 32
  %563 = zext i32 %552 to i64
  %564 = or i64 %562, %563
  store i64 %560, i64* %553, align 8
  store i64 %564, i64* %554, align 8
  %565 = load %class.anon.2301*, %class.anon.2301** %37, align 8
  %566 = getelementptr inbounds %class.anon.2301, %class.anon.2301* %565, i64 0, i32 0
  %567 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %566, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* %567, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %555) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %556) #13
  %568 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %501, i64 0, i32 2
  %569 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %568, align 8
  %570 = icmp eq %"class.blink::InlineTextBox"* %569, null
  br i1 %570, label %571, label %500

571:                                              ; preds = %548, %461, %495, %258, %484, %72, %248, %76, %225, %147, %59
  %572 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 9
  %573 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %572, align 8
  %574 = icmp eq %"class.blink::LayoutObject"* %573, null
  br i1 %574, label %58, label %59

575:                                              ; preds = %3, %58
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %6, align 8
  %8 = icmp ugt %"struct.blink::PhysicalRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::PhysicalRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::PhysicalRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2294"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::PhysicalRect"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::PhysicalRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::PhysicalRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.2294"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.2294"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::PhysicalRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::PhysicalRect"* %1 to i64
  %56 = ptrtoint %"struct.blink::PhysicalRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::PhysicalRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2294"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::PhysicalRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::PhysicalRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.2294"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.2294"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::PhysicalRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::PhysicalRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::PhysicalRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::PhysicalRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %100, i64 %103
  %105 = bitcast %"struct.blink::PhysicalRect"* %104 to i8*
  %106 = bitcast %"struct.blink::PhysicalRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #13
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS3_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeEE3$_5EEvRKT_EUlRKNS_10LayoutRectEE_EEvSG_PKS0_"(%"class.blink::LayoutInline"* nocapture readonly, %class.anon.2422* nocapture readonly dereferenceable(24), %"class.blink::LayoutInline"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::PhysicalRect", align 8
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = alloca %"struct.blink::PhysicalRect", align 8
  %7 = alloca %"struct.blink::PhysicalRect", align 8
  %8 = alloca %"struct.blink::PhysicalRect", align 8
  %9 = alloca %"struct.blink::PhysicalRect", align 8
  %10 = alloca %"class.blink::LayoutUnit", align 4
  %11 = alloca %"class.blink::LayoutUnit", align 4
  %12 = tail call %"class.blink::InlineBox"* @_ZNK5blink12LayoutInline24CulledInlineFirstLineBoxEv(%"class.blink::LayoutInline"* %0)
  %13 = icmp eq %"class.blink::InlineBox"* %12, null
  br i1 %13, label %809, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = bitcast %"class.blink::LayoutUnit"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  store i32 0, i32* %23, align 4
  %24 = bitcast %"class.blink::LayoutUnit"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %11, i64 0, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 1, i32 0
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %14
  %30 = bitcast %class.anon.2422* %1 to %"class.blink::LayoutObject"**
  %31 = getelementptr inbounds %class.anon.2422, %class.anon.2422* %1, i64 0, i32 1
  %32 = bitcast %"class.blink::LayoutBlock"** %31 to %"class.blink::LayoutBox"**
  %33 = getelementptr inbounds %class.anon.2422, %class.anon.2422* %1, i64 0, i32 2
  %34 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  %35 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  %36 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1
  %37 = bitcast %"struct.blink::PhysicalSize"* %36 to i64*
  %38 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  %39 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  %40 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %41 = bitcast %"struct.blink::PhysicalSize"* %40 to i64*
  %42 = bitcast %"struct.blink::PhysicalRect"* %9 to i8*
  %43 = bitcast %"struct.blink::PhysicalRect"* %9 to i64*
  %44 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1
  %45 = bitcast %"struct.blink::PhysicalSize"* %44 to i64*
  %46 = bitcast %"struct.blink::PhysicalRect"* %8 to i8*
  %47 = bitcast %"struct.blink::PhysicalRect"* %8 to i64*
  %48 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 1
  %49 = bitcast %"struct.blink::PhysicalSize"* %48 to i64*
  %50 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  %51 = bitcast %"struct.blink::PhysicalRect"* %7 to i64*
  %52 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1
  %53 = bitcast %"struct.blink::PhysicalSize"* %52 to i64*
  %54 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %55 = bitcast %"struct.blink::PhysicalRect"* %6 to i64*
  %56 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1
  %57 = bitcast %"struct.blink::PhysicalSize"* %56 to i64*
  br label %59

58:                                               ; preds = %805, %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13
  br label %809

59:                                               ; preds = %29, %805
  %60 = phi %"class.blink::LayoutObject"* [ %27, %29 ], [ %807, %805 ]
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 4
  %62 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %61 to i96*
  %63 = load i96, i96* %62, align 4
  %64 = and i96 %63, 8388608
  %65 = icmp ne i96 %64, 0
  %66 = and i96 %63, 113336795588871485128704
  %67 = icmp eq i96 %66, 75557863725914323419136
  %68 = or i1 %67, %65
  br i1 %68, label %805, label %69

69:                                               ; preds = %59
  %70 = and i96 %63, 67108864
  %71 = icmp eq i96 %70, 0
  br i1 %71, label %312, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBox"*
  %74 = and i96 %63, 268435456
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %76, label %805

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 2, i32 1, i32 1
  %78 = bitcast i8* %77 to %"class.blink::InlineBox"**
  %79 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  %80 = icmp eq %"class.blink::InlineBox"* %79, null
  br i1 %80, label %805, label %81

81:                                               ; preds = %76
  %82 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %79) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %82, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  br i1 %21, label %83, label %197

83:                                               ; preds = %81
  %84 = load i96, i96* %62, align 4
  %85 = and i96 %84, 268435456
  %86 = icmp eq i96 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  br label %89

89:                                               ; preds = %83, %87
  %90 = phi %"class.blink::InlineBox"* [ %88, %87 ], [ null, %83 ]
  %91 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %90, i64 0, i32 5, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBox"*)***
  %94 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %94, i64 129
  %96 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %95, align 8
  %97 = call i32 %96(%"class.blink::LayoutBox"* nonnull %73) #13
  %98 = icmp sgt i32 %97, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %97) #13
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !3
  %104 = load i32, i32* %23, align 4
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 4, i32 0, i64 4
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 4
  %108 = trunc i64 %107 to i32
  %109 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBoxModelObject"*
  %110 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %111 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %110, align 8
  %112 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %111, i64 129
  %113 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %112, align 8
  %114 = call i32 %113(%"class.blink::LayoutBoxModelObject"* nonnull %109) #13
  %115 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %110, align 8
  %116 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, i64 130
  %117 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %116, align 8
  %118 = call i32 %117(%"class.blink::LayoutBoxModelObject"* nonnull %109) #13
  %119 = icmp slt i32 %118, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %114, i32 %118) #13
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !3
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %124) #13
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !3
  %131 = load i32, i32* %25, align 4
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 5, i32 0
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 15211807202738752817960438464512
  %139 = icmp eq i160 %138, 5070602400912917605986812821504
  br i1 %139, label %140, label %147, !prof !3

140:                                              ; preds = %89
  %141 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %32, align 8
  %142 = bitcast %"class.blink::LayoutObject"* %132 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %143 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %142, align 8
  %144 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %143, i64 106
  %145 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %144, align 8
  %146 = call i32 %145(%"class.blink::LayoutObject"* %132, i32 %103, i32 %130, %"class.blink::LayoutBox"* %141) #13
  br label %147

147:                                              ; preds = %140, %89
  %148 = phi i32 [ %146, %140 ], [ %103, %89 ]
  %149 = zext i32 %104 to i64
  %150 = shl nuw i64 %149, 32
  %151 = zext i32 %131 to i64
  %152 = shl nuw i64 %151, 32
  %153 = zext i32 %130 to i64
  %154 = or i64 %152, %153
  %155 = load %class.anon.2302*, %class.anon.2302** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #13
  %156 = zext i32 %148 to i64
  %157 = or i64 %150, %156
  store i64 %157, i64* %39, align 8
  store i64 %154, i64* %41, align 8
  %158 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %155, i64 0, i32 1
  %159 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %158, align 8
  %160 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %159, i64 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp slt i32 %161, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %148, i32 %161) #13
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !3
  %168 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %159, i64 0, i32 1, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %169, 0
  %171 = select i1 %170, i32 -2147483648, i32 2147483647
  %172 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %104, i32 %169) #13
  %173 = extractvalue { i32, i1 } %172, 1
  %174 = extractvalue { i32, i1 } %172, 0
  %175 = select i1 %173, i32 %171, i32 %174, !prof !3
  %176 = zext i32 %175 to i64
  %177 = shl nuw i64 %176, 32
  %178 = zext i32 %167 to i64
  %179 = or i64 %177, %178
  store i64 %179, i64* %39, align 8
  %180 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %155, i64 0, i32 0
  %181 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %180, align 8
  %182 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %181, i64 0, i32 0, i32 0, i32 2
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %181, i64 0, i32 0, i32 0, i32 1
  %185 = load i32, i32* %184, align 8
  %186 = icmp eq i32 %183, %185
  br i1 %186, label %195, label %187, !prof !3

187:                                              ; preds = %147
  %188 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %181, i64 0, i32 0, i32 0, i32 0
  %189 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %188, align 8
  %190 = zext i32 %183 to i64
  %191 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %189, i64 %190
  %192 = bitcast %"struct.blink::PhysicalRect"* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %192, i8* nonnull align 8 %38, i64 16, i1 false) #13
  %193 = load i32, i32* %182, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %182, align 4
  br label %196

195:                                              ; preds = %147
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %181, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #13
  br label %196

196:                                              ; preds = %187, %195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #13
  br label %805

197:                                              ; preds = %81
  %198 = load i32, i32* %23, align 4
  %199 = load i96, i96* %62, align 4
  %200 = and i96 %199, 268435456
  %201 = icmp eq i96 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %78, align 8
  br label %204

204:                                              ; preds = %197, %202
  %205 = phi %"class.blink::InlineBox"* [ %203, %202 ], [ null, %197 ]
  %206 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %205, i64 0, i32 5, i32 1, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBox"*)***
  %209 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %208, align 8
  %210 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %209, i64 127
  %211 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %210, align 8
  %212 = call i32 %211(%"class.blink::LayoutBox"* nonnull %73) #13
  %213 = icmp sgt i32 %212, -1
  %214 = select i1 %213, i32 -2147483648, i32 2147483647
  %215 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %207, i32 %212) #13
  %216 = extractvalue { i32, i1 } %215, 1
  %217 = extractvalue { i32, i1 } %215, 0
  %218 = select i1 %216, i32 %214, i32 %217, !prof !3
  %219 = load i32, i32* %25, align 4
  %220 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 4, i32 0, i64 4
  %221 = bitcast i8* %220 to i64*
  %222 = load i64, i64* %221, align 4
  %223 = lshr i64 %222, 32
  %224 = trunc i64 %223 to i32
  %225 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutBoxModelObject"*
  %226 = bitcast %"class.blink::LayoutObject"* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %227 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %226, align 8
  %228 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %227, i64 127
  %229 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %228, align 8
  %230 = call i32 %229(%"class.blink::LayoutBoxModelObject"* nonnull %225) #13
  %231 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %226, align 8
  %232 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %231, i64 128
  %233 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %232, align 8
  %234 = call i32 %233(%"class.blink::LayoutBoxModelObject"* nonnull %225) #13
  %235 = icmp slt i32 %234, 0
  %236 = select i1 %235, i32 -2147483648, i32 2147483647
  %237 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %230, i32 %234) #13
  %238 = extractvalue { i32, i1 } %237, 1
  %239 = extractvalue { i32, i1 } %237, 0
  %240 = select i1 %238, i32 %236, i32 %239, !prof !3
  %241 = icmp slt i32 %240, 0
  %242 = select i1 %241, i32 -2147483648, i32 2147483647
  %243 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %224, i32 %240) #13
  %244 = extractvalue { i32, i1 } %243, 1
  %245 = extractvalue { i32, i1 } %243, 0
  %246 = select i1 %244, i32 %242, i32 %245, !prof !3
  %247 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %248 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %247, i64 0, i32 5, i32 0
  %249 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %249, i64 0, i32 0, i32 9
  %251 = bitcast [20 x i8]* %250 to i160*
  %252 = load i160, i160* %251, align 8
  %253 = and i160 %252, 15211807202738752817960438464512
  %254 = icmp eq i160 %253, 5070602400912917605986812821504
  br i1 %254, label %255, label %262, !prof !3

255:                                              ; preds = %204
  %256 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %32, align 8
  %257 = bitcast %"class.blink::LayoutObject"* %247 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %258 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %257, align 8
  %259 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %258, i64 106
  %260 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %259, align 8
  %261 = call i32 %260(%"class.blink::LayoutObject"* %247, i32 %198, i32 %219, %"class.blink::LayoutBox"* %256) #13
  br label %262

262:                                              ; preds = %255, %204
  %263 = phi i32 [ %261, %255 ], [ %198, %204 ]
  %264 = zext i32 %218 to i64
  %265 = shl nuw i64 %264, 32
  %266 = zext i32 %246 to i64
  %267 = shl nuw i64 %266, 32
  %268 = zext i32 %219 to i64
  %269 = or i64 %267, %268
  %270 = load %class.anon.2302*, %class.anon.2302** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %271 = zext i32 %263 to i64
  %272 = or i64 %265, %271
  store i64 %272, i64* %35, align 8
  store i64 %269, i64* %37, align 8
  %273 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %270, i64 0, i32 1
  %274 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %273, align 8
  %275 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %274, i64 0, i32 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = icmp slt i32 %276, 0
  %278 = select i1 %277, i32 -2147483648, i32 2147483647
  %279 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %263, i32 %276) #13
  %280 = extractvalue { i32, i1 } %279, 1
  %281 = extractvalue { i32, i1 } %279, 0
  %282 = select i1 %280, i32 %278, i32 %281, !prof !3
  %283 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %274, i64 0, i32 1, i32 0
  %284 = load i32, i32* %283, align 4
  %285 = icmp slt i32 %284, 0
  %286 = select i1 %285, i32 -2147483648, i32 2147483647
  %287 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %218, i32 %284) #13
  %288 = extractvalue { i32, i1 } %287, 1
  %289 = extractvalue { i32, i1 } %287, 0
  %290 = select i1 %288, i32 %286, i32 %289, !prof !3
  %291 = zext i32 %290 to i64
  %292 = shl nuw i64 %291, 32
  %293 = zext i32 %282 to i64
  %294 = or i64 %292, %293
  store i64 %294, i64* %35, align 8
  %295 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %270, i64 0, i32 0
  %296 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %295, align 8
  %297 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %296, i64 0, i32 0, i32 0, i32 2
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %296, i64 0, i32 0, i32 0, i32 1
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %298, %300
  br i1 %301, label %310, label %302, !prof !3

302:                                              ; preds = %262
  %303 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %296, i64 0, i32 0, i32 0, i32 0
  %304 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %303, align 8
  %305 = zext i32 %298 to i64
  %306 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %304, i64 %305
  %307 = bitcast %"struct.blink::PhysicalRect"* %306 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* nonnull align 8 %34, i64 16, i1 false) #13
  %308 = load i32, i32* %297, align 4
  %309 = add i32 %308, 1
  store i32 %309, i32* %297, align 4
  br label %311

310:                                              ; preds = %262
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %296, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #13
  br label %311

311:                                              ; preds = %302, %310
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %805

312:                                              ; preds = %69
  %313 = bitcast %"class.blink::LayoutObject"* %60 to i1 (%"class.blink::LayoutObject"*)***
  %314 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %313, align 8
  %315 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %314, i64 26
  %316 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %315, align 8
  %317 = call zeroext i1 %316(%"class.blink::LayoutObject"* nonnull %60) #13
  %318 = load i96, i96* %62, align 4
  br i1 %317, label %319, label %638

319:                                              ; preds = %312
  %320 = and i96 %318, 70369012613120
  %321 = icmp eq i96 %320, 70368744177664
  br i1 %321, label %324, label %322

322:                                              ; preds = %319
  %323 = bitcast %"class.blink::LayoutObject"* %60 to %"class.blink::LayoutInline"*
  call fastcc void @"_ZNK5blink12LayoutInline49CollectCulledLineBoxRectsInFlippedBlocksDirectionIZNKS0_25CollectCulledLineBoxRectsIZNKS0_15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS3_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeEE3$_5EEvRKT_EUlRKNS_10LayoutRectEE_EEvSG_PKS0_"(%"class.blink::LayoutInline"* nonnull %323, %class.anon.2422* dereferenceable(24) %1, %"class.blink::LayoutInline"* %2)
  br label %805

324:                                              ; preds = %319
  %325 = and i96 %318, 268435456
  %326 = icmp eq i96 %325, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %324
  %328 = call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  br label %332

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 1, i32 1
  %331 = bitcast i8* %330 to %"class.blink::LineBoxList"*
  br label %332

332:                                              ; preds = %327, %329
  %333 = phi %"class.blink::LineBoxList"* [ %328, %327 ], [ %331, %329 ]
  %334 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %333, i64 0, i32 0, i32 0
  %335 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %334, align 8
  %336 = icmp eq %"class.blink::InlineFlowBox"* %335, null
  br i1 %336, label %805, label %337

337:                                              ; preds = %332, %633
  %338 = phi %"class.blink::InlineFlowBox"* [ %636, %633 ], [ %335, %332 ]
  %339 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0
  %340 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %339) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %340, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  %341 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 6, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 6
  %344 = load i32, i32* %343, align 8
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %371, label %347

347:                                              ; preds = %337
  %348 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 7, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = and i32 %349, 2048
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 4, i32 0
  %353 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %352, align 8
  %354 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %353, i64 0, i32 4
  %355 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %354 to i96*
  %356 = load i96, i96* %355, align 4
  %357 = and i96 %356, 33554432
  %358 = icmp eq i96 %357, 0
  %359 = bitcast %"class.blink::LayoutObject"* %353 to %"class.blink::LayoutBoxModelObject"*
  %360 = select i1 %358, %"class.blink::LayoutBoxModelObject"* %359, %"class.blink::LayoutBoxModelObject"* null
  %361 = bitcast %"class.blink::LayoutBoxModelObject"* %360 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %362 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %361, align 8
  br i1 %351, label %367, label %363

363:                                              ; preds = %347
  %364 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %362, i64 129
  %365 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %364, align 8
  %366 = call i32 %365(%"class.blink::LayoutBoxModelObject"* %360) #13
  br label %371

367:                                              ; preds = %347
  %368 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %362, i64 127
  %369 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %368, align 8
  %370 = call i32 %369(%"class.blink::LayoutBoxModelObject"* %360) #13
  br label %371

371:                                              ; preds = %367, %363, %337
  %372 = phi i32 [ 0, %337 ], [ %366, %363 ], [ %370, %367 ]
  %373 = load i32, i32* %343, align 8
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %404, label %376

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 7, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = and i32 %378, 2048
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 4, i32 0
  %382 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %382, i64 0, i32 4
  %384 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %383 to i96*
  %385 = load i96, i96* %384, align 4
  %386 = and i96 %385, 33554432
  %387 = icmp eq i96 %386, 0
  %388 = bitcast %"class.blink::LayoutObject"* %382 to %"class.blink::LayoutBoxModelObject"*
  %389 = select i1 %387, %"class.blink::LayoutBoxModelObject"* %388, %"class.blink::LayoutBoxModelObject"* null
  %390 = bitcast %"class.blink::LayoutBoxModelObject"* %389 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %391 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %390, align 8
  br i1 %380, label %396, label %392

392:                                              ; preds = %376
  %393 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %391, i64 130
  %394 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %393, align 8
  %395 = call i32 %394(%"class.blink::LayoutBoxModelObject"* %389) #13
  br label %400

396:                                              ; preds = %376
  %397 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %391, i64 128
  %398 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %397, align 8
  %399 = call i32 %398(%"class.blink::LayoutBoxModelObject"* %389) #13
  br label %400

400:                                              ; preds = %396, %392
  %401 = phi i32 [ %395, %392 ], [ %399, %396 ]
  %402 = icmp slt i32 %401, 0
  %403 = select i1 %402, i32 -2147483648, i32 2147483647
  br label %404

404:                                              ; preds = %371, %400
  %405 = phi i32 [ 0, %371 ], [ %401, %400 ]
  %406 = phi i32 [ 2147483647, %371 ], [ %403, %400 ]
  %407 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %372, i32 %405) #13
  %408 = extractvalue { i32, i1 } %407, 1
  %409 = extractvalue { i32, i1 } %407, 0
  %410 = select i1 %408, i32 %406, i32 %409, !prof !3
  %411 = icmp slt i32 %410, 0
  %412 = select i1 %411, i32 -2147483648, i32 2147483647
  %413 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %342, i32 %410) #13
  %414 = extractvalue { i32, i1 } %413, 1
  %415 = extractvalue { i32, i1 } %413, 0
  %416 = select i1 %414, i32 %412, i32 %415, !prof !3
  br i1 %21, label %417, label %525

417:                                              ; preds = %404
  %418 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 5, i32 0, i32 0
  %419 = load i32, i32* %418, align 4
  %420 = load i32, i32* %343, align 8
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %450, label %423

423:                                              ; preds = %417
  %424 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 7, i32 0
  %425 = load i32, i32* %424, align 4
  %426 = and i32 %425, 2048
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 4, i32 0
  %429 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %428, align 8
  %430 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %429, i64 0, i32 4
  %431 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %430 to i96*
  %432 = load i96, i96* %431, align 4
  %433 = and i96 %432, 33554432
  %434 = icmp eq i96 %433, 0
  %435 = bitcast %"class.blink::LayoutObject"* %429 to %"class.blink::LayoutBoxModelObject"*
  %436 = select i1 %434, %"class.blink::LayoutBoxModelObject"* %435, %"class.blink::LayoutBoxModelObject"* null
  %437 = bitcast %"class.blink::LayoutBoxModelObject"* %436 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %438 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %437, align 8
  br i1 %427, label %443, label %439

439:                                              ; preds = %423
  %440 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %438, i64 129
  %441 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %440, align 8
  %442 = call i32 %441(%"class.blink::LayoutBoxModelObject"* %436) #13
  br label %447

443:                                              ; preds = %423
  %444 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %438, i64 127
  %445 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %444, align 8
  %446 = call i32 %445(%"class.blink::LayoutBoxModelObject"* %436) #13
  br label %447

447:                                              ; preds = %439, %443
  %448 = phi i32 [ %442, %439 ], [ %446, %443 ]
  %449 = icmp sgt i32 %448, -1
  br i1 %449, label %450, label %452

450:                                              ; preds = %417, %447
  %451 = phi i32 [ %448, %447 ], [ 0, %417 ]
  br label %452

452:                                              ; preds = %447, %450
  %453 = phi i32 [ %451, %450 ], [ %448, %447 ]
  %454 = phi i32 [ -2147483648, %450 ], [ 2147483647, %447 ]
  %455 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %419, i32 %453) #13
  %456 = extractvalue { i32, i1 } %455, 1
  %457 = extractvalue { i32, i1 } %455, 0
  %458 = select i1 %456, i32 %454, i32 %457, !prof !3
  %459 = load i32, i32* %23, align 4
  %460 = load i32, i32* %25, align 4
  %461 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %462 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %461, i64 0, i32 5, i32 0
  %463 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %462, align 8
  %464 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %463, i64 0, i32 0, i32 9
  %465 = bitcast [20 x i8]* %464 to i160*
  %466 = load i160, i160* %465, align 8
  %467 = and i160 %466, 15211807202738752817960438464512
  %468 = icmp eq i160 %467, 5070602400912917605986812821504
  br i1 %468, label %469, label %476, !prof !3

469:                                              ; preds = %452
  %470 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %32, align 8
  %471 = bitcast %"class.blink::LayoutObject"* %461 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %472 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %471, align 8
  %473 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %472, i64 106
  %474 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %473, align 8
  %475 = call i32 %474(%"class.blink::LayoutObject"* %461, i32 %458, i32 %416, %"class.blink::LayoutBox"* %470) #13
  br label %476

476:                                              ; preds = %469, %452
  %477 = phi i32 [ %475, %469 ], [ %458, %452 ]
  %478 = zext i32 %459 to i64
  %479 = shl nuw i64 %478, 32
  %480 = zext i32 %460 to i64
  %481 = shl nuw i64 %480, 32
  %482 = zext i32 %416 to i64
  %483 = or i64 %481, %482
  %484 = load %class.anon.2302*, %class.anon.2302** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #13
  %485 = zext i32 %477 to i64
  %486 = or i64 %479, %485
  store i64 %486, i64* %55, align 8
  store i64 %483, i64* %57, align 8
  %487 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %484, i64 0, i32 1
  %488 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %487, align 8
  %489 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %488, i64 0, i32 0, i32 0
  %490 = load i32, i32* %489, align 4
  %491 = icmp slt i32 %490, 0
  %492 = select i1 %491, i32 -2147483648, i32 2147483647
  %493 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %477, i32 %490) #13
  %494 = extractvalue { i32, i1 } %493, 1
  %495 = extractvalue { i32, i1 } %493, 0
  %496 = select i1 %494, i32 %492, i32 %495, !prof !3
  %497 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %488, i64 0, i32 1, i32 0
  %498 = load i32, i32* %497, align 4
  %499 = icmp slt i32 %498, 0
  %500 = select i1 %499, i32 -2147483648, i32 2147483647
  %501 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %459, i32 %498) #13
  %502 = extractvalue { i32, i1 } %501, 1
  %503 = extractvalue { i32, i1 } %501, 0
  %504 = select i1 %502, i32 %500, i32 %503, !prof !3
  %505 = zext i32 %504 to i64
  %506 = shl nuw i64 %505, 32
  %507 = zext i32 %496 to i64
  %508 = or i64 %506, %507
  store i64 %508, i64* %55, align 8
  %509 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %484, i64 0, i32 0
  %510 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %509, align 8
  %511 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %510, i64 0, i32 0, i32 0, i32 2
  %512 = load i32, i32* %511, align 4
  %513 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %510, i64 0, i32 0, i32 0, i32 1
  %514 = load i32, i32* %513, align 8
  %515 = icmp eq i32 %512, %514
  br i1 %515, label %524, label %516, !prof !3

516:                                              ; preds = %476
  %517 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %510, i64 0, i32 0, i32 0, i32 0
  %518 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %517, align 8
  %519 = zext i32 %512 to i64
  %520 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %518, i64 %519
  %521 = bitcast %"struct.blink::PhysicalRect"* %520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %521, i8* nonnull align 8 %54, i64 16, i1 false) #13
  %522 = load i32, i32* %511, align 4
  %523 = add i32 %522, 1
  store i32 %523, i32* %511, align 4
  br label %633

524:                                              ; preds = %476
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %510, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #13
  br label %633

525:                                              ; preds = %404
  %526 = load i32, i32* %23, align 4
  %527 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 5, i32 1, i32 0
  %528 = load i32, i32* %527, align 4
  %529 = load i32, i32* %343, align 8
  %530 = and i32 %529, 1
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %559, label %532

532:                                              ; preds = %525
  %533 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 7, i32 0
  %534 = load i32, i32* %533, align 4
  %535 = and i32 %534, 2048
  %536 = icmp eq i32 %535, 0
  %537 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 0, i32 4, i32 0
  %538 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %537, align 8
  %539 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %538, i64 0, i32 4
  %540 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %539 to i96*
  %541 = load i96, i96* %540, align 4
  %542 = and i96 %541, 33554432
  %543 = icmp eq i96 %542, 0
  %544 = bitcast %"class.blink::LayoutObject"* %538 to %"class.blink::LayoutBoxModelObject"*
  %545 = select i1 %543, %"class.blink::LayoutBoxModelObject"* %544, %"class.blink::LayoutBoxModelObject"* null
  %546 = bitcast %"class.blink::LayoutBoxModelObject"* %545 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %547 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %546, align 8
  br i1 %536, label %552, label %548

548:                                              ; preds = %532
  %549 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %547, i64 129
  %550 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %549, align 8
  %551 = call i32 %550(%"class.blink::LayoutBoxModelObject"* %545) #13
  br label %556

552:                                              ; preds = %532
  %553 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %547, i64 127
  %554 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %553, align 8
  %555 = call i32 %554(%"class.blink::LayoutBoxModelObject"* %545) #13
  br label %556

556:                                              ; preds = %548, %552
  %557 = phi i32 [ %551, %548 ], [ %555, %552 ]
  %558 = icmp sgt i32 %557, -1
  br i1 %558, label %559, label %561

559:                                              ; preds = %525, %556
  %560 = phi i32 [ %557, %556 ], [ 0, %525 ]
  br label %561

561:                                              ; preds = %556, %559
  %562 = phi i32 [ %560, %559 ], [ %557, %556 ]
  %563 = phi i32 [ -2147483648, %559 ], [ 2147483647, %556 ]
  %564 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %528, i32 %562) #13
  %565 = extractvalue { i32, i1 } %564, 1
  %566 = extractvalue { i32, i1 } %564, 0
  %567 = select i1 %565, i32 %563, i32 %566, !prof !3
  %568 = load i32, i32* %25, align 4
  %569 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %570 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %569, i64 0, i32 5, i32 0
  %571 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %570, align 8
  %572 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %571, i64 0, i32 0, i32 9
  %573 = bitcast [20 x i8]* %572 to i160*
  %574 = load i160, i160* %573, align 8
  %575 = and i160 %574, 15211807202738752817960438464512
  %576 = icmp eq i160 %575, 5070602400912917605986812821504
  br i1 %576, label %577, label %584, !prof !3

577:                                              ; preds = %561
  %578 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %32, align 8
  %579 = bitcast %"class.blink::LayoutObject"* %569 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %580 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %579, align 8
  %581 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %580, i64 106
  %582 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %581, align 8
  %583 = call i32 %582(%"class.blink::LayoutObject"* %569, i32 %526, i32 %568, %"class.blink::LayoutBox"* %578) #13
  br label %584

584:                                              ; preds = %577, %561
  %585 = phi i32 [ %583, %577 ], [ %526, %561 ]
  %586 = zext i32 %567 to i64
  %587 = shl nuw i64 %586, 32
  %588 = zext i32 %416 to i64
  %589 = shl nuw i64 %588, 32
  %590 = zext i32 %568 to i64
  %591 = or i64 %589, %590
  %592 = load %class.anon.2302*, %class.anon.2302** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #13
  %593 = zext i32 %585 to i64
  %594 = or i64 %587, %593
  store i64 %594, i64* %51, align 8
  store i64 %591, i64* %53, align 8
  %595 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %592, i64 0, i32 1
  %596 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %595, align 8
  %597 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %596, i64 0, i32 0, i32 0
  %598 = load i32, i32* %597, align 4
  %599 = icmp slt i32 %598, 0
  %600 = select i1 %599, i32 -2147483648, i32 2147483647
  %601 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %585, i32 %598) #13
  %602 = extractvalue { i32, i1 } %601, 1
  %603 = extractvalue { i32, i1 } %601, 0
  %604 = select i1 %602, i32 %600, i32 %603, !prof !3
  %605 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %596, i64 0, i32 1, i32 0
  %606 = load i32, i32* %605, align 4
  %607 = icmp slt i32 %606, 0
  %608 = select i1 %607, i32 -2147483648, i32 2147483647
  %609 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %567, i32 %606) #13
  %610 = extractvalue { i32, i1 } %609, 1
  %611 = extractvalue { i32, i1 } %609, 0
  %612 = select i1 %610, i32 %608, i32 %611, !prof !3
  %613 = zext i32 %612 to i64
  %614 = shl nuw i64 %613, 32
  %615 = zext i32 %604 to i64
  %616 = or i64 %614, %615
  store i64 %616, i64* %51, align 8
  %617 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %592, i64 0, i32 0
  %618 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %617, align 8
  %619 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %618, i64 0, i32 0, i32 0, i32 2
  %620 = load i32, i32* %619, align 4
  %621 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %618, i64 0, i32 0, i32 0, i32 1
  %622 = load i32, i32* %621, align 8
  %623 = icmp eq i32 %620, %622
  br i1 %623, label %632, label %624, !prof !3

624:                                              ; preds = %584
  %625 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %618, i64 0, i32 0, i32 0, i32 0
  %626 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %625, align 8
  %627 = zext i32 %620 to i64
  %628 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %626, i64 %627
  %629 = bitcast %"struct.blink::PhysicalRect"* %628 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %629, i8* nonnull align 8 %50, i64 16, i1 false) #13
  %630 = load i32, i32* %619, align 4
  %631 = add i32 %630, 1
  store i32 %631, i32* %619, align 4
  br label %633

632:                                              ; preds = %584
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %618, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #13
  br label %633

633:                                              ; preds = %632, %624, %524, %516
  %634 = phi i8* [ %54, %516 ], [ %54, %524 ], [ %50, %624 ], [ %50, %632 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %634) #13
  %635 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %338, i64 0, i32 5
  %636 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %635, align 8
  %637 = icmp eq %"class.blink::InlineFlowBox"* %636, null
  br i1 %637, label %805, label %337

638:                                              ; preds = %312
  %639 = and i96 %318, 33554432
  %640 = icmp eq i96 %639, 0
  br i1 %640, label %805, label %641

641:                                              ; preds = %638
  %642 = and i96 %318, 268435456
  %643 = icmp eq i96 %642, 0
  br i1 %643, label %646, label %644

644:                                              ; preds = %641
  %645 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #13
  br label %649

646:                                              ; preds = %641
  %647 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 1, i32 6
  %648 = bitcast %"class.blink::UntracedMember"* %647 to %"class.blink::InlineTextBoxList"*
  br label %649

649:                                              ; preds = %644, %646
  %650 = phi %"class.blink::InlineTextBoxList"* [ %645, %644 ], [ %648, %646 ]
  %651 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %650, i64 0, i32 0, i32 0
  %652 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %651, align 8
  %653 = icmp eq %"class.blink::InlineTextBox"* %652, null
  br i1 %653, label %805, label %654

654:                                              ; preds = %649, %800
  %655 = phi %"class.blink::InlineTextBox"* [ %803, %800 ], [ %652, %649 ]
  %656 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %655, i64 0, i32 0
  %657 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %656) #13
  call fastcc void @_ZN5blinkL20ComputeItemTopHeightEPKNS_12LayoutInlineERKNS_13RootInlineBoxEPNS_10LayoutUnitES7_(%"class.blink::LayoutInline"* %2, %"class.blink::RootInlineBox"* dereferenceable(160) %657, %"class.blink::LayoutUnit"* nonnull %10, %"class.blink::LayoutUnit"* nonnull %11)
  br i1 %21, label %658, label %729

658:                                              ; preds = %654
  %659 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %655, i64 0, i32 0, i32 5, i32 0, i32 0
  %660 = load i32, i32* %659, align 4
  %661 = load i32, i32* %23, align 4
  %662 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %655, i64 0, i32 0, i32 6, i32 0
  %663 = load i32, i32* %662, align 8
  %664 = load i32, i32* %25, align 4
  %665 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %666 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %665, i64 0, i32 5, i32 0
  %667 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %666, align 8
  %668 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %667, i64 0, i32 0, i32 9
  %669 = bitcast [20 x i8]* %668 to i160*
  %670 = load i160, i160* %669, align 8
  %671 = and i160 %670, 15211807202738752817960438464512
  %672 = icmp eq i160 %671, 5070602400912917605986812821504
  br i1 %672, label %673, label %680, !prof !3

673:                                              ; preds = %658
  %674 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %32, align 8
  %675 = bitcast %"class.blink::LayoutObject"* %665 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %676 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %675, align 8
  %677 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %676, i64 106
  %678 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %677, align 8
  %679 = call i32 %678(%"class.blink::LayoutObject"* %665, i32 %660, i32 %663, %"class.blink::LayoutBox"* %674) #13
  br label %680

680:                                              ; preds = %673, %658
  %681 = phi i32 [ %679, %673 ], [ %660, %658 ]
  %682 = zext i32 %661 to i64
  %683 = shl nuw i64 %682, 32
  %684 = zext i32 %664 to i64
  %685 = shl nuw i64 %684, 32
  %686 = zext i32 %663 to i64
  %687 = or i64 %685, %686
  %688 = load %class.anon.2302*, %class.anon.2302** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %689 = zext i32 %681 to i64
  %690 = or i64 %683, %689
  store i64 %690, i64* %47, align 8
  store i64 %687, i64* %49, align 8
  %691 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %688, i64 0, i32 1
  %692 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %691, align 8
  %693 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %692, i64 0, i32 0, i32 0
  %694 = load i32, i32* %693, align 4
  %695 = icmp slt i32 %694, 0
  %696 = select i1 %695, i32 -2147483648, i32 2147483647
  %697 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %681, i32 %694) #13
  %698 = extractvalue { i32, i1 } %697, 1
  %699 = extractvalue { i32, i1 } %697, 0
  %700 = select i1 %698, i32 %696, i32 %699, !prof !3
  %701 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %692, i64 0, i32 1, i32 0
  %702 = load i32, i32* %701, align 4
  %703 = icmp slt i32 %702, 0
  %704 = select i1 %703, i32 -2147483648, i32 2147483647
  %705 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %661, i32 %702) #13
  %706 = extractvalue { i32, i1 } %705, 1
  %707 = extractvalue { i32, i1 } %705, 0
  %708 = select i1 %706, i32 %704, i32 %707, !prof !3
  %709 = zext i32 %708 to i64
  %710 = shl nuw i64 %709, 32
  %711 = zext i32 %700 to i64
  %712 = or i64 %710, %711
  store i64 %712, i64* %47, align 8
  %713 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %688, i64 0, i32 0
  %714 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %713, align 8
  %715 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %714, i64 0, i32 0, i32 0, i32 2
  %716 = load i32, i32* %715, align 4
  %717 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %714, i64 0, i32 0, i32 0, i32 1
  %718 = load i32, i32* %717, align 8
  %719 = icmp eq i32 %716, %718
  br i1 %719, label %728, label %720, !prof !3

720:                                              ; preds = %680
  %721 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %714, i64 0, i32 0, i32 0, i32 0
  %722 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %721, align 8
  %723 = zext i32 %716 to i64
  %724 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %722, i64 %723
  %725 = bitcast %"struct.blink::PhysicalRect"* %724 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %725, i8* nonnull align 8 %46, i64 16, i1 false) #13
  %726 = load i32, i32* %715, align 4
  %727 = add i32 %726, 1
  store i32 %727, i32* %715, align 4
  br label %800

728:                                              ; preds = %680
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %714, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #13
  br label %800

729:                                              ; preds = %654
  %730 = load i32, i32* %23, align 4
  %731 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %655, i64 0, i32 0, i32 5, i32 1, i32 0
  %732 = load i32, i32* %731, align 4
  %733 = load i32, i32* %25, align 4
  %734 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %655, i64 0, i32 0, i32 6, i32 0
  %735 = load i32, i32* %734, align 8
  %736 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %737 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %736, i64 0, i32 5, i32 0
  %738 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %737, align 8
  %739 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %738, i64 0, i32 0, i32 9
  %740 = bitcast [20 x i8]* %739 to i160*
  %741 = load i160, i160* %740, align 8
  %742 = and i160 %741, 15211807202738752817960438464512
  %743 = icmp eq i160 %742, 5070602400912917605986812821504
  br i1 %743, label %744, label %751, !prof !3

744:                                              ; preds = %729
  %745 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %32, align 8
  %746 = bitcast %"class.blink::LayoutObject"* %736 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %747 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %746, align 8
  %748 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %747, i64 106
  %749 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %748, align 8
  %750 = call i32 %749(%"class.blink::LayoutObject"* %736, i32 %730, i32 %733, %"class.blink::LayoutBox"* %745) #13
  br label %751

751:                                              ; preds = %744, %729
  %752 = phi i32 [ %750, %744 ], [ %730, %729 ]
  %753 = zext i32 %732 to i64
  %754 = shl nuw i64 %753, 32
  %755 = zext i32 %735 to i64
  %756 = shl nuw i64 %755, 32
  %757 = zext i32 %733 to i64
  %758 = or i64 %756, %757
  %759 = load %class.anon.2302*, %class.anon.2302** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13
  %760 = zext i32 %752 to i64
  %761 = or i64 %754, %760
  store i64 %761, i64* %43, align 8
  store i64 %758, i64* %45, align 8
  %762 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %759, i64 0, i32 1
  %763 = load %"struct.blink::PhysicalOffset"*, %"struct.blink::PhysicalOffset"** %762, align 8
  %764 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %763, i64 0, i32 0, i32 0
  %765 = load i32, i32* %764, align 4
  %766 = icmp slt i32 %765, 0
  %767 = select i1 %766, i32 -2147483648, i32 2147483647
  %768 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %752, i32 %765) #13
  %769 = extractvalue { i32, i1 } %768, 1
  %770 = extractvalue { i32, i1 } %768, 0
  %771 = select i1 %769, i32 %767, i32 %770, !prof !3
  %772 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %763, i64 0, i32 1, i32 0
  %773 = load i32, i32* %772, align 4
  %774 = icmp slt i32 %773, 0
  %775 = select i1 %774, i32 -2147483648, i32 2147483647
  %776 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %732, i32 %773) #13
  %777 = extractvalue { i32, i1 } %776, 1
  %778 = extractvalue { i32, i1 } %776, 0
  %779 = select i1 %777, i32 %775, i32 %778, !prof !3
  %780 = zext i32 %779 to i64
  %781 = shl nuw i64 %780, 32
  %782 = zext i32 %771 to i64
  %783 = or i64 %781, %782
  store i64 %783, i64* %43, align 8
  %784 = getelementptr inbounds %class.anon.2302, %class.anon.2302* %759, i64 0, i32 0
  %785 = load %"class.WTF::Vector.2294"*, %"class.WTF::Vector.2294"** %784, align 8
  %786 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %785, i64 0, i32 0, i32 0, i32 2
  %787 = load i32, i32* %786, align 4
  %788 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %785, i64 0, i32 0, i32 0, i32 1
  %789 = load i32, i32* %788, align 8
  %790 = icmp eq i32 %787, %789
  br i1 %790, label %799, label %791, !prof !3

791:                                              ; preds = %751
  %792 = getelementptr inbounds %"class.WTF::Vector.2294", %"class.WTF::Vector.2294"* %785, i64 0, i32 0, i32 0, i32 0
  %793 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %792, align 8
  %794 = zext i32 %787 to i64
  %795 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %793, i64 %794
  %796 = bitcast %"struct.blink::PhysicalRect"* %795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %796, i8* nonnull align 8 %42, i64 16, i1 false) #13
  %797 = load i32, i32* %786, align 4
  %798 = add i32 %797, 1
  store i32 %798, i32* %786, align 4
  br label %800

799:                                              ; preds = %751
  call void @_ZN3WTF6VectorIN5blink12PhysicalRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.2294"* %785, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9) #13
  br label %800

800:                                              ; preds = %799, %791, %728, %720
  %801 = phi i8* [ %46, %720 ], [ %46, %728 ], [ %42, %791 ], [ %42, %799 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %801) #13
  %802 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %655, i64 0, i32 2
  %803 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %802, align 8
  %804 = icmp eq %"class.blink::InlineTextBox"* %803, null
  br i1 %804, label %805, label %654

805:                                              ; preds = %800, %633, %649, %332, %638, %72, %322, %76, %311, %196, %59
  %806 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 9
  %807 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %806, align 8
  %808 = icmp eq %"class.blink::LayoutObject"* %807, null
  br i1 %808, label %58, label %59

809:                                              ; preds = %3, %58
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink20AnnotatedRegionValueELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1371"*, %"struct.blink::AnnotatedRegionValue"* dereferenceable(20)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1371", %"class.WTF::Vector.1371"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1371", %"class.WTF::Vector.1371"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::AnnotatedRegionValue"*, %"struct.blink::AnnotatedRegionValue"** %6, align 8
  %8 = icmp ugt %"struct.blink::AnnotatedRegionValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::AnnotatedRegionValue"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1371", %"class.WTF::Vector.1371"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::AnnotatedRegionValue"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20AnnotatedRegionValueEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20AnnotatedRegionValueEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1371"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 20
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::AnnotatedRegionValue"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 20
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::AnnotatedRegionValue"*, %"struct.blink::AnnotatedRegionValue"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::AnnotatedRegionValue"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::AnnotatedRegionValue"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.1371"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.1371"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::AnnotatedRegionValue"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::AnnotatedRegionValue"* %1 to i64
  %56 = ptrtoint %"struct.blink::AnnotatedRegionValue"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 20
  %59 = getelementptr inbounds %"class.WTF::Vector.1371", %"class.WTF::Vector.1371"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::AnnotatedRegionValue"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20AnnotatedRegionValueEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20AnnotatedRegionValueEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1371"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::AnnotatedRegionValue"*, %"struct.blink::AnnotatedRegionValue"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::AnnotatedRegionValue"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::AnnotatedRegionValue"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.1371"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.1371"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 20
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::AnnotatedRegionValue"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::AnnotatedRegionValue"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::AnnotatedRegionValue"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::AnnotatedRegionValue"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::AnnotatedRegionValue", %"struct.blink::AnnotatedRegionValue"* %100, i64 %103
  %105 = bitcast %"struct.blink::AnnotatedRegionValue"* %104 to i8*
  %106 = bitcast %"struct.blink::AnnotatedRegionValue"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 20, i1 false) #13
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink20AnnotatedRegionValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind readnone }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
