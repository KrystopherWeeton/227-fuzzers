; ModuleID = '../../third_party/pdfium/core/fpdfapi/parser/cpdf_hint_tables.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/parser/cpdf_hint_tables.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.CPDF_HintTables::PageInfo" = type { i32, i64, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%class.CPDF_HintTables = type { i32 (...)**, %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.9", i32, i64, %"class.std::__1::vector.10", %"class.std::__1::vector.17" }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_ReadValidator* }
%"class.fxcrt::UnownedPtr.9" = type { %class.CPDF_LinearizedHeader* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.CPDF_HintTables::PageInfo"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"class.std::__1::__compressed_pair.19" }
%"struct.CPDF_HintTables::SharedObjGroupInfo" = type <{ i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.CPDF_HintTables::SharedObjGroupInfo"* }
%class.CPDF_ReadValidator = type { %class.IFX_SeekableReadStream.base, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.7", %"class.fxcrt::UnownedPtr.8", i8, i8, i8, i64, %"class.fxcrt::Retainable" }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%"class.fxcrt::UnownedPtr.7" = type { %"class.CPDF_DataAvail::FileAvail"* }
%"class.CPDF_DataAvail::FileAvail" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.8" = type { %"class.CPDF_DataAvail::DownloadHints"* }
%"class.CPDF_DataAvail::DownloadHints" = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.CPDF_LinearizedHeader = type <{ i64, i32, [4 x i8], i64, i32, [4 x i8], i64, i32, [4 x i8], i64, i64, i32, [4 x i8] }>
%class.CPDF_SyntaxParser = type { %"class.fxcrt::RetainPtr.25", i64, i64, i64, %"class.fxcrt::WeakPtr", %"class.std::__1::vector.37", i64, i32, [257 x i8], i32, %"class.fxcrt::UnownedPtr.42" }
%"class.fxcrt::RetainPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.CPDF_ReadValidator* }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.31" }
%"class.fxcrt::RetainPtr.31" = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i64 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { float }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i8*, i8*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i8* }
%"class.fxcrt::UnownedPtr.42" = type { %"class.std::__1::vector"* }
%"class.fxcrt::RetainPtr.66" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.CPDF_Object* }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map.72", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map.72" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.47", %"class.std::__1::unique_ptr.61", %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr.47" = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.87" }
%"class.fxcrt::RetainPtr.87" = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CFX_BitStream = type { i32, i32, %"class.fxcrt::UnownedPtr.83" }
%"class.fxcrt::UnownedPtr.83" = type { i8* }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.83", i64 }
%"class.pdfium::span.112" = type { %"class.fxcrt::UnownedPtr.97", i64 }
%"class.fxcrt::UnownedPtr.97" = type { i8* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.98", %"class.fxcrt::RetainPtr.104" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.61", %"class.fxcrt::UnownedPtr.97" }
%"class.fxcrt::RetainPtr.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.104" = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.CPDF_Stream* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN15CPDF_HintTables8PageInfo13AddIdentifierEj = comdat any

$_ZNSt3__16vectorIN15CPDF_HintTables18SharedObjGroupInfoENS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZTV15CPDF_HintTables = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_HintTables*)* @_ZN15CPDF_HintTablesD2Ev to i8*), i8* bitcast (void (%class.CPDF_HintTables*)* @_ZN15CPDF_HintTablesD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"S\00", align 1

@_ZN15CPDF_HintTables8PageInfoC1Ev = hidden unnamed_addr alias void (%"class.CPDF_HintTables::PageInfo"*), void (%"class.CPDF_HintTables::PageInfo"*)* @_ZN15CPDF_HintTables8PageInfoC2Ev
@_ZN15CPDF_HintTables8PageInfoD1Ev = hidden unnamed_addr alias void (%"class.CPDF_HintTables::PageInfo"*), void (%"class.CPDF_HintTables::PageInfo"*)* @_ZN15CPDF_HintTables8PageInfoD2Ev
@_ZN15CPDF_HintTablesC1EP18CPDF_ReadValidatorPK21CPDF_LinearizedHeader = hidden unnamed_addr alias void (%class.CPDF_HintTables*, %class.CPDF_ReadValidator*, %class.CPDF_LinearizedHeader*), void (%class.CPDF_HintTables*, %class.CPDF_ReadValidator*, %class.CPDF_LinearizedHeader*)* @_ZN15CPDF_HintTablesC2EP18CPDF_ReadValidatorPK21CPDF_LinearizedHeader
@_ZN15CPDF_HintTablesD1Ev = hidden unnamed_addr alias void (%class.CPDF_HintTables*), void (%class.CPDF_HintTables*)* @_ZN15CPDF_HintTablesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_HintTables8PageInfoC2Ev(%"class.CPDF_HintTables::PageInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %0, i64 0, i32 1
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_HintTables8PageInfoD2Ev(%"class.CPDF_HintTables::PageInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_HintTables* @_ZN15CPDF_HintTables5ParseEP17CPDF_SyntaxParserPK21CPDF_LinearizedHeader(%class.CPDF_SyntaxParser*, %class.CPDF_LinearizedHeader*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.66", align 8
  %4 = ptrtoint %class.CPDF_LinearizedHeader* %1 to i64
  %5 = icmp eq %class.CPDF_LinearizedHeader* %1, null
  br i1 %5, label %84, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %84, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK21CPDF_LinearizedHeader12HasHintTableEv(%class.CPDF_LinearizedHeader* nonnull %1) #12
  br i1 %11, label %12, label %84

12:                                               ; preds = %10
  %13 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %1, i64 0, i32 10
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %1, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.CPDF_SyntaxParser, %class.CPDF_SyntaxParser* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %17, align 8
  %19 = zext i32 %16 to i64
  %20 = tail call zeroext i1 @_ZN18CPDF_ReadValidator37CheckDataRangeAndRequestIfUnavailableElm(%class.CPDF_ReadValidator* %18, i64 %14, i64 %19) #12
  br i1 %20, label %21, label %84

21:                                               ; preds = %12
  tail call void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser* %0, i64 %14) #12
  call void @_ZN17CPDF_SyntaxParser17GetIndirectObjectEP25CPDF_IndirectObjectHolderNS_9ParseTypeE(%"class.fxcrt::RetainPtr.66"* nonnull sret %3, %class.CPDF_SyntaxParser* %0, %class.CPDF_IndirectObjectHolder* null, i32 1) #12
  %22 = getelementptr inbounds %"class.fxcrt::RetainPtr.66", %"class.fxcrt::RetainPtr.66"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_Object*, %class.CPDF_Object** %22, align 8
  %24 = icmp eq %class.CPDF_Object* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store %class.CPDF_Object* null, %class.CPDF_Object** %22, align 8
  br label %84

26:                                               ; preds = %21
  %27 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %28 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %27, align 8, !noalias !2
  %29 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %28, i64 35
  %30 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %29, align 8, !noalias !2
  %31 = call %class.CPDF_Stream* %30(%class.CPDF_Object* nonnull %23) #12, !noalias !2
  %32 = icmp eq %class.CPDF_Stream* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %31, i64 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !2
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %34, align 8, !noalias !2
  br label %37

37:                                               ; preds = %26, %33
  %38 = load %class.CPDF_Object*, %class.CPDF_Object** %22, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %22, align 8
  %39 = icmp eq %class.CPDF_Object* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %38, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %38, i64 0, i32 0
  %47 = bitcast %class.CPDF_Object* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  call void %50(%"class.fxcrt::Retainable"* nonnull %46) #12
  br label %51

51:                                               ; preds = %37, %40, %45
  br i1 %32, label %84, label %52

52:                                               ; preds = %51
  %53 = bitcast %class.CPDF_SyntaxParser* %0 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = call i8* @_Znwm(i64 88) #11
  %56 = bitcast i8* %55 to %class.CPDF_HintTables*
  %57 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CPDF_HintTables, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds i8, i8* %55, i64 8
  %59 = bitcast i8* %58 to i64*
  store i64 %54, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %55, i64 16
  %61 = bitcast i8* %60 to i64*
  store i64 %4, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %55, i64 24
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %55, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 56, i1 false) #12
  %65 = ptrtoint i8* %55 to i64
  %66 = call zeroext i1 @_ZN15CPDF_HintTables14LoadHintStreamEP11CPDF_Stream(%class.CPDF_HintTables* nonnull %56, %class.CPDF_Stream* nonnull %31)
  br i1 %66, label %72, label %67

67:                                               ; preds = %52
  %68 = bitcast i8* %55 to void (%class.CPDF_HintTables*)***
  %69 = load void (%class.CPDF_HintTables*)**, void (%class.CPDF_HintTables*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.CPDF_HintTables*)*, void (%class.CPDF_HintTables*)** %69, i64 1
  %71 = load void (%class.CPDF_HintTables*)*, void (%class.CPDF_HintTables*)** %70, align 8
  call void %71(%class.CPDF_HintTables* nonnull %56) #12
  br label %72

72:                                               ; preds = %52, %67
  %73 = phi i64 [ 0, %67 ], [ %65, %52 ]
  %74 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %31, i64 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %75, -1
  store i64 %76, i64* %74, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %72
  %79 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %31, i64 0, i32 0, i32 0
  %80 = bitcast %class.CPDF_Stream* %31 to void (%"class.fxcrt::Retainable"*)***
  %81 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, i64 1
  %83 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %82, align 8
  call void %83(%"class.fxcrt::Retainable"* nonnull %79) #12
  br label %84

84:                                               ; preds = %51, %78, %72, %25, %12, %6, %10, %2
  %85 = phi i64 [ 0, %2 ], [ 0, %10 ], [ 0, %6 ], [ 0, %12 ], [ %73, %72 ], [ %73, %78 ], [ 0, %25 ], [ 0, %51 ]
  %86 = inttoptr i64 %85 to %class.CPDF_HintTables*
  ret %class.CPDF_HintTables* %86
}

declare zeroext i1 @_ZNK21CPDF_LinearizedHeader12HasHintTableEv(%class.CPDF_LinearizedHeader*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN18CPDF_ReadValidator37CheckDataRangeAndRequestIfUnavailableElm(%class.CPDF_ReadValidator*, i64, i64) local_unnamed_addr #1

declare void @_ZN17CPDF_SyntaxParser6SetPosEl(%class.CPDF_SyntaxParser*, i64) local_unnamed_addr #1

declare void @_ZN17CPDF_SyntaxParser17GetIndirectObjectEP25CPDF_IndirectObjectHolderNS_9ParseTypeE(%"class.fxcrt::RetainPtr.66"* sret, %class.CPDF_SyntaxParser*, %class.CPDF_IndirectObjectHolder*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_HintTables14LoadHintStreamEP11CPDF_Stream(%class.CPDF_HintTables*, %class.CPDF_Stream*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %class.CFX_BitStream, align 8
  %5 = alloca %"class.pdfium::span", align 8
  %6 = alloca %"class.pdfium::span.112", align 8
  %7 = icmp eq %class.CPDF_Stream* %1, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 2, i32 0
  %10 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %9, align 8
  %11 = tail call zeroext i1 @_ZNK21CPDF_LinearizedHeader12HasHintTableEv(%class.CPDF_LinearizedHeader* %10) #12
  br i1 %11, label %12, label %73

12:                                               ; preds = %8
  %13 = tail call %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream* nonnull %1) #12
  %14 = icmp eq %class.CPDF_Dictionary* %13, null
  br i1 %14, label %73, label %15

15:                                               ; preds = %12
  %16 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #12
  %17 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %13, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %18 = icmp eq %class.CPDF_Object* %17, null
  br i1 %18, label %73, label %19

19:                                               ; preds = %15
  %20 = bitcast %class.CPDF_Object* %17 to i1 (%class.CPDF_Object*)***
  %21 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %21, i64 18
  %23 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %22, align 8
  %24 = call zeroext i1 %23(%class.CPDF_Object* nonnull %17) #12
  br i1 %24, label %25, label %73

25:                                               ; preds = %19
  %26 = bitcast %class.CPDF_Object* %17 to i32 (%class.CPDF_Object*)***
  %27 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %27, i64 10
  %29 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %28, align 8
  %30 = call i32 %29(%class.CPDF_Object* nonnull %17) #12
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %73, label %32

32:                                               ; preds = %25
  %33 = call i8* @_Znwm(i64 64) #11, !noalias !5
  %34 = bitcast i8* %33 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %34, %class.CPDF_Stream* nonnull %1) #12, !noalias !5
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8, !noalias !5
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* %36, align 8, !noalias !5
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* nonnull %34) #12
  %39 = call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* nonnull %34) #12
  %40 = icmp ult i32 %39, 60
  %41 = icmp ult i32 %39, %30
  %42 = or i1 %40, %41
  br i1 %42, label %62, label %43

43:                                               ; preds = %32
  %44 = bitcast %class.CFX_BitStream* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  %45 = bitcast %"class.pdfium::span.112"* %6 to i8*
  %46 = bitcast %class.CFX_BitStream* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #12
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.112"* nonnull sret %6, %class.CPDF_StreamAcc* nonnull %34) #12
  %47 = zext i32 %39 to i64
  %48 = getelementptr inbounds %"class.pdfium::span.112", %"class.pdfium::span.112"* %6, i64 0, i32 1
  %49 = load i64, i64* %48, align 8, !noalias !8
  %50 = icmp ult i64 %49, %47
  br i1 %50, label %51, label %52, !prof !11

51:                                               ; preds = %43
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !8, !srcloc !12
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !8, !srcloc !13
  unreachable

52:                                               ; preds = %43
  %53 = bitcast %"class.pdfium::span.112"* %6 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !8
  %55 = bitcast %"class.pdfium::span"* %5 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 1
  store i64 %47, i64* %56, align 8
  call void @_ZN13CFX_BitStreamC1EN6pdfium4spanIKhEE(%class.CFX_BitStream* nonnull %4, %"class.pdfium::span"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #12
  %57 = call zeroext i1 @_ZN15CPDF_HintTables17ReadPageHintTableEP13CFX_BitStream(%class.CPDF_HintTables* %0, %class.CFX_BitStream* nonnull %4)
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = call zeroext i1 @_ZN15CPDF_HintTables22ReadSharedObjHintTableEP13CFX_BitStreamj(%class.CPDF_HintTables* %0, %class.CFX_BitStream* nonnull %4, i32 %30)
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi i1 [ false, %52 ], [ %59, %58 ]
  call void @_ZN13CFX_BitStreamD1Ev(%class.CFX_BitStream* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  br label %62

62:                                               ; preds = %32, %60
  %63 = phi i1 [ false, %32 ], [ %61, %60 ]
  %64 = load i64, i64* %36, align 8
  %65 = add nsw i64 %64, -1
  store i64 %65, i64* %36, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %62
  %68 = bitcast i8* %33 to %"class.fxcrt::Retainable"*
  %69 = bitcast i8* %33 to void (%"class.fxcrt::Retainable"*)***
  %70 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %70, i64 1
  %72 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %71, align 8
  call void %72(%"class.fxcrt::Retainable"* nonnull %68) #12
  br label %73

73:                                               ; preds = %12, %67, %62, %15, %19, %25, %8, %2
  %74 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %15 ], [ false, %19 ], [ false, %25 ], [ %63, %62 ], [ %63, %67 ], [ false, %12 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_HintTablesC2EP18CPDF_ReadValidatorPK21CPDF_LinearizedHeader(%class.CPDF_HintTables* nocapture, %class.CPDF_ReadValidator*, %class.CPDF_LinearizedHeader*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CPDF_HintTables, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 1, i32 0
  store %class.CPDF_ReadValidator* %1, %class.CPDF_ReadValidator** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 2, i32 0
  store %class.CPDF_LinearizedHeader* %2, %class.CPDF_LinearizedHeader** %6, align 8
  %7 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 4
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_HintTablesD2Ev(%class.CPDF_HintTables* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CPDF_HintTables, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %3, align 8
  %5 = icmp eq %"struct.CPDF_HintTables::SharedObjGroupInfo"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.CPDF_HintTables::SharedObjGroupInfo"* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %13, align 8
  %15 = icmp eq %"class.CPDF_HintTables::PageInfo"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.CPDF_HintTables::PageInfo"* %14 to i8*
  %18 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5, i32 0, i32 1
  %19 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %18, align 8
  %20 = icmp eq %"class.CPDF_HintTables::PageInfo"* %19, %14
  br i1 %20, label %37, label %21

21:                                               ; preds = %16, %32
  %22 = phi %"class.CPDF_HintTables::PageInfo"* [ %23, %32 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %22, i64 -1
  %24 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %22, i64 -1, i32 4, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = ptrtoint i32* %25 to i64
  %29 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %22, i64 -1, i32 4, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast i32* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %27, %21
  %33 = icmp eq %"class.CPDF_HintTables::PageInfo"* %23, %14
  br i1 %33, label %34, label %21

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.10"* %12 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %16
  %38 = phi i8* [ %36, %34 ], [ %17, %16 ]
  store %"class.CPDF_HintTables::PageInfo"* %14, %"class.CPDF_HintTables::PageInfo"** %18, align 8
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %11, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_HintTablesD0Ev(%class.CPDF_HintTables*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CPDF_HintTables, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %3, align 8
  %5 = icmp eq %"struct.CPDF_HintTables::SharedObjGroupInfo"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.CPDF_HintTables::SharedObjGroupInfo"* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %13, align 8
  %15 = icmp eq %"class.CPDF_HintTables::PageInfo"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.CPDF_HintTables::PageInfo"* %14 to i8*
  %18 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5, i32 0, i32 1
  %19 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %18, align 8
  %20 = icmp eq %"class.CPDF_HintTables::PageInfo"* %19, %14
  br i1 %20, label %37, label %21

21:                                               ; preds = %16, %32
  %22 = phi %"class.CPDF_HintTables::PageInfo"* [ %23, %32 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %22, i64 -1
  %24 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %22, i64 -1, i32 4, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = ptrtoint i32* %25 to i64
  %29 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %22, i64 -1, i32 4, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast i32* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %27, %21
  %33 = icmp eq %"class.CPDF_HintTables::PageInfo"* %23, %14
  br i1 %33, label %34, label %21

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.10"* %12 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %16
  %38 = phi i8* [ %36, %34 ], [ %17, %16 ]
  store %"class.CPDF_HintTables::PageInfo"* %14, %"class.CPDF_HintTables::PageInfo"** %18, align 8
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %11, %37
  %40 = bitcast %class.CPDF_HintTables* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_HintTables17ReadPageHintTableEP13CFX_BitStream(%class.CPDF_HintTables* nocapture, %class.CFX_BitStream*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 2, i32 0
  %4 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = icmp ugt i32 %7, 1048573
  br i1 %8, label %294, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %4, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp uge i32 %11, %6
  %13 = icmp eq %class.CFX_BitStream* %1, null
  %14 = or i1 %13, %12
  br i1 %14, label %294, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp uge i32 %17, %19
  %21 = tail call i32 @llvm.usub.sat.i32(i32 %19, i32 %17) #12
  %22 = icmp ult i32 %21, 288
  %23 = or i1 %20, %22
  br i1 %23, label %294, label %24

24:                                               ; preds = %15
  %25 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %294, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %29 = zext i32 %28 to i64
  %30 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %3, align 8
  %31 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %30, i64 0, i32 10
  %32 = load i64, i64* %31, align 8
  %33 = icmp sgt i64 %32, %29
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %30, i64 0, i32 11
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = add nuw nsw i64 %37, %29
  br label %39

39:                                               ; preds = %27, %34
  %40 = phi i64 [ %29, %27 ], [ %38, %34 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %294, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 4
  store i64 %40, i64* %43, align 8
  %44 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 16) #12
  %45 = add i32 %44, -1
  %46 = icmp ult i32 %45, 32
  br i1 %46, label %47, label %294

47:                                               ; preds = %42
  %48 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %294, label %50

50:                                               ; preds = %47
  %51 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 16) #12
  %52 = add i32 %51, -1
  %53 = icmp ult i32 %52, 32
  br i1 %53, label %54, label %294

54:                                               ; preds = %50
  %55 = load i32, i32* %16, align 8
  %56 = add i32 %55, 96
  store i32 %56, i32* %16, align 8
  %57 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 16) #12
  %58 = add i32 %57, -1
  %59 = icmp ult i32 %58, 32
  br i1 %59, label %60, label %294

60:                                               ; preds = %54
  %61 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 16) #12
  %62 = add i32 %61, -1
  %63 = icmp ult i32 %62, 32
  br i1 %63, label %64, label %294

64:                                               ; preds = %60
  %65 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 16) #12
  %66 = icmp ugt i32 %65, 32
  br i1 %66, label %294, label %67

67:                                               ; preds = %64
  %68 = load i32, i32* %16, align 8
  %69 = add i32 %68, 16
  store i32 %69, i32* %16, align 8
  %70 = mul nuw i32 %44, %6
  %71 = load i32, i32* %18, align 4
  %72 = tail call i32 @llvm.usub.sat.i32(i32 %71, i32 %69) #12
  %73 = icmp ult i32 %72, %70
  br i1 %73, label %294, label %74

74:                                               ; preds = %67
  %75 = zext i32 %6 to i64
  %76 = mul nuw nsw i64 %75, 48
  %77 = tail call i8* @_Znwm(i64 %76) #11
  %78 = bitcast i8* %77 to %"class.CPDF_HintTables::PageInfo"*
  %79 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %78, i64 %75
  br label %80

80:                                               ; preds = %80, %74
  %81 = phi %"class.CPDF_HintTables::PageInfo"* [ %85, %80 ], [ %78, %74 ]
  %82 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %81, i64 0, i32 0
  store i32 0, i32* %82, align 8
  %83 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %81, i64 0, i32 1
  %84 = bitcast i64* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 40, i1 false) #12
  %85 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %81, i64 1
  %86 = icmp eq %"class.CPDF_HintTables::PageInfo"* %85, %79
  br i1 %86, label %87, label %80

87:                                               ; preds = %80
  %88 = ptrtoint i8* %77 to i64
  %89 = ptrtoint %"class.CPDF_HintTables::PageInfo"* %79 to i64
  %90 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5
  %91 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %93 = icmp eq %"class.CPDF_HintTables::PageInfo"* %92, null
  br i1 %93, label %118, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.CPDF_HintTables::PageInfo"* %92 to i8*
  %96 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5, i32 0, i32 1
  %97 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %96, align 8
  %98 = icmp eq %"class.CPDF_HintTables::PageInfo"* %97, %92
  br i1 %98, label %115, label %99

99:                                               ; preds = %94, %110
  %100 = phi %"class.CPDF_HintTables::PageInfo"* [ %101, %110 ], [ %97, %94 ]
  %101 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %100, i64 -1
  %102 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %100, i64 -1, i32 4, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = icmp eq i32* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = ptrtoint i32* %103 to i64
  %107 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %100, i64 -1, i32 4, i32 0, i32 1
  %108 = bitcast i32** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast i32* %103 to i8*
  tail call void @_ZdlPv(i8* %109) #11
  br label %110

110:                                              ; preds = %105, %99
  %111 = icmp eq %"class.CPDF_HintTables::PageInfo"* %101, %92
  br i1 %111, label %112, label %99

112:                                              ; preds = %110
  %113 = bitcast %"class.std::__1::vector.10"* %90 to i8**
  %114 = load i8*, i8** %113, align 8
  br label %115

115:                                              ; preds = %112, %94
  %116 = phi i8* [ %114, %112 ], [ %95, %94 ]
  store %"class.CPDF_HintTables::PageInfo"* %92, %"class.CPDF_HintTables::PageInfo"** %96, align 8
  tail call void @_ZdlPv(i8* %116) #11
  %117 = bitcast %"class.std::__1::vector.10"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #12
  br label %118

118:                                              ; preds = %115, %87
  %119 = bitcast %"class.std::__1::vector.10"* %90 to i64*
  store i64 %88, i64* %119, align 8
  %120 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5, i32 0, i32 1
  %121 = bitcast %"class.CPDF_HintTables::PageInfo"** %120 to i64*
  store i64 %89, i64* %121, align 8
  %122 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast %"class.CPDF_HintTables::PageInfo"** %122 to i64*
  store i64 %89, i64* %123, align 8
  %124 = zext i32 %11 to i64
  %125 = bitcast i8* %77 to %"class.CPDF_HintTables::PageInfo"*
  %126 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %3, align 8
  %127 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %126, i64 0, i32 7
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %125, i64 %124, i32 3
  store i32 %128, i32* %129, align 4
  br label %130

130:                                              ; preds = %148, %118
  %131 = phi i64 [ 0, %118 ], [ %150, %148 ]
  %132 = phi i32 [ 1, %118 ], [ %149, %148 ]
  %133 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %1, i32 %44) #12
  %134 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %133, i32 %25) #12
  %135 = extractvalue { i32, i1 } %134, 1
  br i1 %135, label %294, label %136

136:                                              ; preds = %130
  %137 = extractvalue { i32, i1 } %134, 0
  %138 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %139 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %138, i64 %131, i32 0
  store i32 %137, i32* %139, align 8
  %140 = icmp eq i64 %131, %124
  br i1 %140, label %148, label %141

141:                                              ; preds = %136
  %142 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %143 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %142, i64 %131, i32 3
  store i32 %132, i32* %143, align 4
  %144 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %145 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %144, i64 %131, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, %132
  br label %148

148:                                              ; preds = %141, %136
  %149 = phi i32 [ %132, %136 ], [ %147, %141 ]
  %150 = add nuw nsw i64 %131, 1
  %151 = icmp eq i64 %150, %75
  br i1 %151, label %152, label %130

152:                                              ; preds = %148
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %1) #12
  %153 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %51, i32 %6) #12
  %154 = extractvalue { i32, i1 } %153, 1
  br i1 %154, label %294, label %155

155:                                              ; preds = %152
  %156 = extractvalue { i32, i1 } %153, 0
  %157 = load i32, i32* %18, align 4
  %158 = load i32, i32* %16, align 8
  %159 = tail call i32 @llvm.usub.sat.i32(i32 %157, i32 %158) #12
  %160 = icmp ult i32 %159, %156
  br i1 %160, label %294, label %161

161:                                              ; preds = %155, %166
  %162 = phi i64 [ %170, %166 ], [ 0, %155 ]
  %163 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %1, i32 %51) #12
  %164 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %163, i32 %48) #12
  %165 = extractvalue { i32, i1 } %164, 1
  br i1 %165, label %294, label %166

166:                                              ; preds = %161
  %167 = extractvalue { i32, i1 } %164, 0
  %168 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %169 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %168, i64 %162, i32 2
  store i32 %167, i32* %169, align 8
  %170 = add nuw nsw i64 %162, 1
  %171 = icmp eq i64 %170, %75
  br i1 %171, label %172, label %161

172:                                              ; preds = %166
  %173 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %174 = load i64, i64* %43, align 8
  %175 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %173, i64 %124, i32 1
  store i64 %174, i64* %175, align 8
  %176 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %3, align 8
  %177 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %176, i64 0, i32 6
  %178 = load i64, i64* %177, align 8
  %179 = and i64 %75, 1
  %180 = icmp eq i32 %6, 1
  br i1 %180, label %183, label %181

181:                                              ; preds = %172
  %182 = sub nsw i64 %75, %179
  br label %201

183:                                              ; preds = %304, %172
  %184 = phi i64 [ 0, %172 ], [ %306, %304 ]
  %185 = phi i64 [ %178, %172 ], [ %305, %304 ]
  %186 = icmp eq i64 %179, 0
  %187 = icmp eq i64 %184, %124
  %188 = or i1 %186, %187
  br i1 %188, label %192, label %189

189:                                              ; preds = %183
  %190 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %191 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %190, i64 %184, i32 1
  store i64 %185, i64* %191, align 8
  br label %192

192:                                              ; preds = %189, %183
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %1) #12
  %193 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %57, i32 %6) #12
  %194 = extractvalue { i32, i1 } %193, 1
  br i1 %194, label %294, label %195

195:                                              ; preds = %192
  %196 = extractvalue { i32, i1 } %193, 0
  %197 = load i32, i32* %18, align 4
  %198 = load i32, i32* %16, align 8
  %199 = tail call i32 @llvm.usub.sat.i32(i32 %197, i32 %198) #12
  %200 = icmp ult i32 %199, %196
  br i1 %200, label %294, label %218

201:                                              ; preds = %304, %181
  %202 = phi i64 [ 0, %181 ], [ %306, %304 ]
  %203 = phi i64 [ %178, %181 ], [ %305, %304 ]
  %204 = phi i64 [ %182, %181 ], [ %307, %304 ]
  %205 = icmp eq i64 %202, %124
  br i1 %205, label %214, label %206

206:                                              ; preds = %201
  %207 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %208 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %207, i64 %202, i32 1
  store i64 %203, i64* %208, align 8
  %209 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %210 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %209, i64 %202, i32 2
  %211 = load i32, i32* %210, align 8
  %212 = zext i32 %211 to i64
  %213 = add nsw i64 %203, %212
  br label %214

214:                                              ; preds = %201, %206
  %215 = phi i64 [ %203, %201 ], [ %213, %206 ]
  %216 = or i64 %202, 1
  %217 = icmp eq i64 %216, %124
  br i1 %217, label %304, label %296

218:                                              ; preds = %195
  %219 = shl nuw nsw i64 %75, 2
  %220 = tail call i8* @_Znwm(i64 %219) #11
  %221 = bitcast i8* %220 to i32*
  %222 = ptrtoint i8* %220 to i64
  %223 = add nsw i64 %75, -1
  %224 = getelementptr i32, i32* %221, i64 %223
  %225 = ptrtoint i32* %224 to i64
  %226 = sub i64 4, %222
  %227 = add i64 %226, %225
  %228 = and i64 %227, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %220, i8 0, i64 %228, i1 false) #12
  br label %230

229:                                              ; preds = %230
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %1) #12
  br label %236

230:                                              ; preds = %230, %218
  %231 = phi i64 [ 0, %218 ], [ %234, %230 ]
  %232 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %1, i32 %57) #12
  %233 = getelementptr inbounds i32, i32* %221, i64 %231
  store i32 %232, i32* %233, align 4
  %234 = add nuw nsw i64 %231, 1
  %235 = icmp eq i64 %234, %75
  br i1 %235, label %229, label %230

236:                                              ; preds = %251, %229
  %237 = phi i32 [ %252, %251 ], [ 0, %229 ]
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds i32, i32* %221, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %61, i32 %240) #12
  %242 = extractvalue { i32, i1 } %241, 1
  br i1 %242, label %292, label %243

243:                                              ; preds = %236
  %244 = extractvalue { i32, i1 } %241, 0
  %245 = load i32, i32* %18, align 4
  %246 = load i32, i32* %16, align 8
  %247 = tail call i32 @llvm.usub.sat.i32(i32 %245, i32 %246) #12
  %248 = icmp ult i32 %247, %244
  br i1 %248, label %292, label %249

249:                                              ; preds = %243
  %250 = icmp eq i32 %240, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %254, %249
  %252 = add i32 %237, 1
  %253 = icmp eq i32 %252, %6
  br i1 %253, label %262, label %236

254:                                              ; preds = %249, %254
  %255 = phi i32 [ %259, %254 ], [ 0, %249 ]
  %256 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %257 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %256, i64 %238
  %258 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %1, i32 %61) #12
  tail call void @_ZN15CPDF_HintTables8PageInfo13AddIdentifierEj(%"class.CPDF_HintTables::PageInfo"* %257, i32 %258)
  %259 = add nuw i32 %255, 1
  %260 = load i32, i32* %239, align 4
  %261 = icmp ult i32 %259, %260
  br i1 %261, label %254, label %251

262:                                              ; preds = %251
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %1) #12
  %263 = icmp eq i32 %65, 0
  br i1 %263, label %281, label %264

264:                                              ; preds = %262, %276
  %265 = phi i64 [ %278, %276 ], [ 0, %262 ]
  %266 = getelementptr inbounds i32, i32* %221, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %267, i32 %65) #12
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  br i1 %269, label %292, label %271

271:                                              ; preds = %264
  %272 = load i32, i32* %18, align 4
  %273 = load i32, i32* %16, align 8
  %274 = tail call i32 @llvm.usub.sat.i32(i32 %272, i32 %273) #12
  %275 = icmp ult i32 %274, %270
  br i1 %275, label %292, label %276

276:                                              ; preds = %271
  %277 = add i32 %273, %270
  store i32 %277, i32* %16, align 8
  %278 = add nuw nsw i64 %265, 1
  %279 = icmp eq i64 %278, %75
  br i1 %279, label %280, label %264

280:                                              ; preds = %276
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %1) #12
  br label %281

281:                                              ; preds = %262, %280
  %282 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %6, i32 %51) #12
  %283 = extractvalue { i32, i1 } %282, 1
  %284 = extractvalue { i32, i1 } %282, 0
  br i1 %283, label %292, label %285

285:                                              ; preds = %281
  %286 = load i32, i32* %18, align 4
  %287 = load i32, i32* %16, align 8
  %288 = tail call i32 @llvm.usub.sat.i32(i32 %286, i32 %287) #12
  %289 = icmp ult i32 %288, %284
  br i1 %289, label %292, label %290

290:                                              ; preds = %285
  %291 = add i32 %287, %284
  store i32 %291, i32* %16, align 8
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %1) #12
  br label %292

292:                                              ; preds = %236, %243, %264, %271, %290, %281, %285
  %293 = phi i1 [ true, %290 ], [ false, %285 ], [ false, %281 ], [ false, %271 ], [ false, %264 ], [ false, %243 ], [ false, %236 ]
  tail call void @_ZdlPv(i8* nonnull %220) #11
  br label %294

294:                                              ; preds = %130, %161, %195, %155, %67, %192, %152, %292, %9, %15, %24, %42, %50, %60, %64, %54, %47, %39, %2
  %295 = phi i1 [ false, %2 ], [ false, %9 ], [ false, %15 ], [ false, %24 ], [ false, %39 ], [ false, %42 ], [ false, %47 ], [ false, %50 ], [ false, %54 ], [ false, %60 ], [ false, %64 ], [ false, %67 ], [ false, %155 ], [ false, %195 ], [ %293, %292 ], [ false, %152 ], [ false, %192 ], [ false, %161 ], [ false, %130 ]
  ret i1 %295

296:                                              ; preds = %214
  %297 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %298 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %297, i64 %216, i32 1
  store i64 %215, i64* %298, align 8
  %299 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %91, align 8
  %300 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %299, i64 %216, i32 2
  %301 = load i32, i32* %300, align 8
  %302 = zext i32 %301 to i64
  %303 = add nsw i64 %215, %302
  br label %304

304:                                              ; preds = %296, %214
  %305 = phi i64 [ %215, %214 ], [ %303, %296 ]
  %306 = add nuw nsw i64 %202, 2
  %307 = add i64 %204, -2
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %183, label %201
}

declare i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK15CPDF_HintTables23HintsOffsetToFileOffsetEj(%class.CPDF_HintTables* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 2, i32 0
  %5 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %4, align 8
  %6 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %5, i64 0, i32 10
  %7 = load i64, i64* %6, align 8
  %8 = icmp sgt i64 %7, %3
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %5, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, %3
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i64 [ %3, %2 ], [ %13, %9 ]
  ret i64 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CPDF_HintTables8PageInfo13AddIdentifierEj(%"class.CPDF_HintTables::PageInfo"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i32 %1, i32* %5, align 4
  %11 = getelementptr inbounds i32, i32* %5, i64 1
  %12 = ptrtoint i32* %11 to i64
  %13 = bitcast i32** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %70

14:                                               ; preds = %2
  %15 = ptrtoint i32* %5 to i64
  %16 = bitcast i32** %4 to i64*
  %17 = bitcast %"class.std::__1::vector"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #13
  unreachable

25:                                               ; preds = %14
  %26 = bitcast i32** %6 to i64*
  %27 = sub i64 %9, %18
  %28 = ashr exact i64 %27, 2
  %29 = icmp ult i64 %28, 2305843009213693951
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 1
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 4611686018427387903
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %35, %25
  %39 = phi i64 [ %33, %35 ], [ 4611686018427387903, %25 ]
  %40 = shl i64 %39, 2
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i32*
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %45 = phi i32* [ %42, %38 ], [ null, %30 ]
  %46 = getelementptr inbounds i32, i32* %45, i64 %20
  %47 = getelementptr inbounds i32, i32* %45, i64 %44
  %48 = ptrtoint i32* %47 to i64
  store i32 %1, i32* %46, align 4
  %49 = getelementptr inbounds i32, i32* %46, i64 1
  %50 = ptrtoint i32* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i64, i64* %16, align 8
  %54 = ptrtoint i32* %52 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 2
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds i32, i32* %46, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = icmp sgt i64 %55, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %43
  %62 = bitcast i32* %58 to i8*
  %63 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 %55, i1 false) #12
  %64 = load i32*, i32** %51, align 8
  br label %65

65:                                               ; preds = %61, %43
  %66 = phi i32* [ %52, %43 ], [ %64, %61 ]
  store i64 %59, i64* %17, align 8
  store i64 %50, i64* %16, align 8
  store i64 %48, i64* %26, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = bitcast i32* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %10, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_HintTables22ReadSharedObjHintTableEP13CFX_BitStreamj(%class.CPDF_HintTables*, %class.CFX_BitStream*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %class.CFX_BitStream* %1, null
  br i1 %4, label %189, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %7, %9
  br i1 %10, label %11, label %189

11:                                               ; preds = %5
  %12 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %2, i32 8) #12
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = icmp ugt i32 %7, %14
  %16 = or i1 %13, %15
  br i1 %16, label %189, label %17

17:                                               ; preds = %11
  %18 = tail call { i32, i1 } @llvm.usub.with.overflow.i32(i32 %14, i32 %7) #12
  %19 = extractvalue { i32, i1 } %18, 1
  br i1 %19, label %20, label %21, !prof !11

20:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %17
  %22 = extractvalue { i32, i1 } %18, 0
  %23 = add i32 %22, %7
  store i32 %23, i32* %6, align 8
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %9, i32 %23) #12
  %25 = icmp ult i32 %24, 192
  br i1 %25, label %189, label %26

26:                                               ; preds = %21
  %27 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %189, label %29

29:                                               ; preds = %26
  %30 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 2, i32 0
  %33 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %32, align 8
  %34 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %33, i64 0, i32 10
  %35 = load i64, i64* %34, align 8
  %36 = icmp sgt i64 %35, %31
  br i1 %36, label %42, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %33, i64 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = add nuw nsw i64 %40, %31
  br label %42

42:                                               ; preds = %29, %37
  %43 = phi i64 [ %31, %29 ], [ %41, %37 ]
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %189, label %45

45:                                               ; preds = %42
  %46 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %47 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 3
  store i32 %46, i32* %47, align 8
  %48 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %49 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 16) #12
  %50 = icmp ugt i32 %49, 32
  br i1 %50, label %189, label %51

51:                                               ; preds = %45
  %52 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 32) #12
  %53 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 16) #12
  %54 = add i32 %53, -1
  %55 = icmp ugt i32 %54, 31
  %56 = icmp ugt i32 %27, 4194303
  %57 = or i1 %56, %55
  br i1 %57, label %189, label %58

58:                                               ; preds = %51
  %59 = load i32, i32* %47, align 8
  %60 = or i32 %59, %48
  %61 = icmp ugt i32 %60, 4194303
  br i1 %61, label %189, label %62

62:                                               ; preds = %58
  %63 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %48, i32 %53) #12
  %64 = extractvalue { i32, i1 } %63, 1
  br i1 %64, label %189, label %65

65:                                               ; preds = %62
  %66 = extractvalue { i32, i1 } %63, 0
  %67 = load i32, i32* %8, align 4
  %68 = load i32, i32* %6, align 8
  %69 = tail call i32 @llvm.usub.sat.i32(i32 %67, i32 %68) #12
  %70 = icmp ult i32 %69, %66
  br i1 %70, label %189, label %71

71:                                               ; preds = %65
  %72 = icmp eq i32 %48, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %71
  %74 = add i32 %48, -1
  %75 = icmp ugt i32 %74, %59
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = sub i32 %74, %59
  %78 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %27, i32 %77) #12
  %79 = extractvalue { i32, i1 } %78, 1
  br i1 %79, label %189, label %80

80:                                               ; preds = %76, %73, %71
  %81 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6
  %82 = zext i32 %48 to i64
  %83 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6, i32 0, i32 1
  %84 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector.17"* %81 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = sdiv exact i64 %88, 24
  %90 = icmp ult i64 %89, %82
  %91 = inttoptr i64 %87 to %"struct.CPDF_HintTables::SharedObjGroupInfo"*
  br i1 %90, label %92, label %94

92:                                               ; preds = %80
  %93 = sub nsw i64 %82, %89
  tail call void @_ZNSt3__16vectorIN15CPDF_HintTables18SharedObjGroupInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.17"* %81, i64 %93) #12
  br label %98

94:                                               ; preds = %80
  %95 = icmp ugt i64 %89, %82
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %91, i64 %82
  store %"struct.CPDF_HintTables::SharedObjGroupInfo"* %97, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %83, align 8
  br label %98

98:                                               ; preds = %92, %94, %96
  br i1 %72, label %99, label %100

99:                                               ; preds = %98
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* nonnull %1) #12
  br label %131

100:                                              ; preds = %98
  %101 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 4
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %81, i64 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %126, %100
  %105 = phi i64 [ 0, %100 ], [ %128, %126 ]
  %106 = phi i64 [ %102, %100 ], [ %127, %126 ]
  %107 = load i32, i32* %47, align 8
  %108 = zext i32 %107 to i64
  %109 = icmp eq i64 %105, %108
  %110 = select i1 %109, i64 %43, i64 %106
  %111 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 %53) #12
  %112 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %111, i32 %52) #12
  %113 = extractvalue { i32, i1 } %112, 1
  br i1 %113, label %189, label %114

114:                                              ; preds = %104
  %115 = extractvalue { i32, i1 } %112, 0
  %116 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %103, align 8
  %117 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %116, i64 %105, i32 1
  store i32 %115, i32* %117, align 8
  %118 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %103, align 8
  %119 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %118, i64 %105, i32 0
  store i64 %110, i64* %119, align 8
  %120 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %103, align 8
  %121 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %120, i64 %105, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = zext i32 %122 to i64
  %124 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %110, i64 %123) #12
  %125 = extractvalue { i64, i1 } %124, 1
  br i1 %125, label %189, label %126

126:                                              ; preds = %114
  %127 = extractvalue { i64, i1 } %124, 0
  %128 = add nuw nsw i64 %105, 1
  %129 = icmp eq i64 %128, %82
  br i1 %129, label %130, label %104

130:                                              ; preds = %126
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* nonnull %1) #12
  br i1 %72, label %131, label %134

131:                                              ; preds = %99, %130
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* nonnull %1) #12
  br label %188

132:                                              ; preds = %134
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* nonnull %1) #12
  %133 = icmp eq i32 %138, 0
  br i1 %133, label %152, label %141

134:                                              ; preds = %130, %134
  %135 = phi i32 [ %139, %134 ], [ 0, %130 ]
  %136 = phi i32 [ %138, %134 ], [ 0, %130 ]
  %137 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 1) #12
  %138 = add i32 %137, %136
  %139 = add nuw i32 %135, 1
  %140 = icmp eq i32 %139, %48
  br i1 %140, label %132, label %134

141:                                              ; preds = %132
  %142 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %138, i32 128) #12
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  br i1 %143, label %189, label %145

145:                                              ; preds = %141
  %146 = load i32, i32* %8, align 4
  %147 = load i32, i32* %6, align 8
  %148 = tail call i32 @llvm.usub.sat.i32(i32 %146, i32 %147) #12
  %149 = icmp ult i32 %148, %144
  br i1 %149, label %189, label %150

150:                                              ; preds = %145
  %151 = add i32 %147, %144
  store i32 %151, i32* %6, align 8
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* nonnull %1) #12
  br label %152

152:                                              ; preds = %132, %150
  br i1 %72, label %188, label %153

153:                                              ; preds = %152
  %154 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %32, align 8
  %155 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %154, i64 0, i32 7
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %49, 0
  %158 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %81, i64 0, i32 0, i32 0
  br label %159

159:                                              ; preds = %180, %153
  %160 = phi i64 [ 0, %153 ], [ %186, %180 ]
  %161 = phi i32 [ %156, %153 ], [ %181, %180 ]
  %162 = load i32, i32* %47, align 8
  %163 = zext i32 %162 to i64
  %164 = icmp eq i64 %160, %163
  %165 = select i1 %164, i32 %27, i32 %161
  br i1 %157, label %168, label %166

166:                                              ; preds = %159
  %167 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* nonnull %1, i32 %49) #12
  br label %168

168:                                              ; preds = %159, %166
  %169 = phi i32 [ %167, %166 ], [ 0, %159 ]
  %170 = zext i32 %169 to i33
  %171 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #12
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  %176 = trunc i33 %173 to i32
  br i1 %175, label %189, label %177

177:                                              ; preds = %168
  %178 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %165, i32 %176) #12
  %179 = extractvalue { i32, i1 } %178, 1
  br i1 %179, label %189, label %180

180:                                              ; preds = %177
  %181 = extractvalue { i32, i1 } %178, 0
  %182 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %158, align 8
  %183 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %182, i64 %160, i32 3
  store i32 %165, i32* %183, align 8
  %184 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %158, align 8
  %185 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %184, i64 %160, i32 2
  store i32 %176, i32* %185, align 4
  %186 = add nuw nsw i64 %160, 1
  %187 = icmp eq i64 %186, %82
  br i1 %187, label %188, label %159

188:                                              ; preds = %180, %131, %152
  tail call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* nonnull %1) #12
  br label %189

189:                                              ; preds = %104, %114, %168, %177, %188, %141, %145, %76, %65, %5, %11, %62, %26, %45, %58, %42, %21, %51, %3
  %190 = phi i1 [ false, %3 ], [ false, %5 ], [ false, %11 ], [ false, %21 ], [ false, %26 ], [ false, %42 ], [ false, %45 ], [ false, %51 ], [ false, %58 ], [ false, %65 ], [ false, %62 ], [ false, %76 ], [ false, %145 ], [ true, %188 ], [ false, %141 ], [ false, %177 ], [ false, %168 ], [ false, %114 ], [ false, %104 ]
  ret i1 %190
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_HintTables10GetPagePosEjPlS0_Pj(%class.CPDF_HintTables* nocapture readonly, i32, i64* nocapture, i64* nocapture, i32* nocapture) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 2, i32 0
  %7 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %6, align 8
  %8 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %7, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %24

11:                                               ; preds = %5
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %13, align 8
  %15 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %14, i64 %12, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %2, align 8
  %17 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %13, align 8
  %18 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %17, i64 %12, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %3, align 8
  %21 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %13, align 8
  %22 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %21, i64 %12, i32 3
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %4, align 4
  br label %24

24:                                               ; preds = %5, %11
  %25 = phi i1 [ true, %11 ], [ false, %5 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15CPDF_HintTables9CheckPageEj(%class.CPDF_HintTables* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 2, i32 0
  %4 = load %class.CPDF_LinearizedHeader*, %class.CPDF_LinearizedHeader** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %63, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_LinearizedHeader, %class.CPDF_LinearizedHeader* %4, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %63

12:                                               ; preds = %8
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %14, align 8
  %16 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %15, i64 %13, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %63, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 1, i32 0
  %21 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %20, align 8
  %22 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %15, i64 %13, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i32 %17 to i64
  %25 = tail call zeroext i1 @_ZN18CPDF_ReadValidator37CheckDataRangeAndRequestIfUnavailableElm(%class.CPDF_ReadValidator* %21, i64 %23, i64 %24) #12
  br i1 %25, label %26, label %63

26:                                               ; preds = %19
  %27 = load %"class.CPDF_HintTables::PageInfo"*, %"class.CPDF_HintTables::PageInfo"** %14, align 8
  %28 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %27, i64 %13, i32 4, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %"class.CPDF_HintTables::PageInfo", %"class.CPDF_HintTables::PageInfo"* %27, i64 %13, i32 4, i32 0, i32 1
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %29, %31
  br i1 %32, label %63, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6
  %35 = getelementptr inbounds %class.CPDF_HintTables, %class.CPDF_HintTables* %0, i64 0, i32 6, i32 0, i32 1
  %36 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"** %35 to i64*
  %37 = bitcast %"class.std::__1::vector.17"* %34 to i64*
  br label %38

38:                                               ; preds = %33, %60
  %39 = phi i32* [ %29, %33 ], [ %61, %60 ]
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = load i64, i64* %36, align 8
  %43 = load i64, i64* %37, align 8
  %44 = sub i64 %42, %43
  %45 = sdiv exact i64 %44, 24
  %46 = icmp ugt i64 %45, %41
  %47 = inttoptr i64 %43 to %"struct.CPDF_HintTables::SharedObjGroupInfo"*
  br i1 %46, label %48, label %60

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %47, i64 %41, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %47, i64 %41, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %20, align 8
  %58 = zext i32 %54 to i64
  %59 = tail call zeroext i1 @_ZN18CPDF_ReadValidator37CheckDataRangeAndRequestIfUnavailableElm(%class.CPDF_ReadValidator* %57, i64 %50, i64 %58) #12
  br i1 %59, label %60, label %63

60:                                               ; preds = %56, %38
  %61 = getelementptr inbounds i32, i32* %39, i64 1
  %62 = icmp eq i32* %61, %31
  br i1 %62, label %63, label %38

63:                                               ; preds = %52, %48, %56, %60, %26, %2, %8, %19, %12
  %64 = phi i32 [ 1, %2 ], [ -1, %8 ], [ -1, %12 ], [ 0, %19 ], [ 1, %26 ], [ -1, %52 ], [ -1, %48 ], [ 0, %56 ], [ 1, %60 ]
  ret i32 %64
}

declare %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream*) unnamed_addr #1

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary12GetObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #5

declare void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.112"* sret, %class.CPDF_StreamAcc*) local_unnamed_addr #1

declare void @_ZN13CFX_BitStreamC1EN6pdfium4spanIKhEE(%class.CFX_BitStream*, %"class.pdfium::span"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CFX_BitStreamD1Ev(%class.CFX_BitStream*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.usub.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN15CPDF_HintTables18SharedObjGroupInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.17"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.CPDF_HintTables::SharedObjGroupInfo"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %13, i64 %18, i32 0
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #12
  %27 = ptrtoint %"struct.CPDF_HintTables::SharedObjGroupInfo"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #11
  %52 = bitcast i8* %51 to %"struct.CPDF_HintTables::SharedObjGroupInfo"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.CPDF_HintTables::SharedObjGroupInfo"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %55, i64 %34
  %57 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"* %56 to i8*
  %58 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %56, i64 %1
  %60 = mul nsw i64 %1, 24
  %61 = add i64 %60, -24
  %62 = urem i64 %61, 24
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.CPDF_HintTables::SharedObjGroupInfo"* %58 to i64
  %66 = ptrtoint %"struct.CPDF_HintTables::SharedObjGroupInfo"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.CPDF_HintTables::SharedObjGroupInfo"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -24
  %73 = getelementptr inbounds %"struct.CPDF_HintTables::SharedObjGroupInfo", %"struct.CPDF_HintTables::SharedObjGroupInfo"* %56, i64 %72
  %74 = ptrtoint %"struct.CPDF_HintTables::SharedObjGroupInfo"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"* %73 to i8*
  %78 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %71, i1 false) #12
  %79 = load %"struct.CPDF_HintTables::SharedObjGroupInfo"*, %"struct.CPDF_HintTables::SharedObjGroupInfo"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.CPDF_HintTables::SharedObjGroupInfo"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.CPDF_HintTables::SharedObjGroupInfo"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.CPDF_HintTables::SharedObjGroupInfo"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

declare void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc*, %class.CPDF_Stream*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z8ToStreamN5fxcrt9RetainPtrI11CPDF_ObjectEE: argument 0"}
!4 = distinct !{!4, !"_Z8ToStreamN5fxcrt9RetainPtrI11CPDF_ObjectEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRP11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK6pdfium4spanIhE7subspanEmm: argument 0"}
!10 = distinct !{!10, !"_ZNK6pdfium4spanIhE7subspanEmm"}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = !{i32 -2143410807}
!13 = !{i32 -2143410786}
