; ModuleID = '../../third_party/blink/renderer/platform/geometry/float_box.cc'
source_filename = "../../third_party/blink/renderer/platform/geometry/float_box.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FloatBox" = type { float, float, float, float, float, float }
%"class.blink::FloatPoint3D" = type { float, float, float }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@.str = private unnamed_addr constant [24 x i8] c"%lg,%lg,%lg %lgx%lgx%lg\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FloatBox8ExpandToERKNS_12FloatPoint3DES3_(%"class.blink::FloatBox"* nocapture, %"class.blink::FloatPoint3D"* nocapture readonly dereferenceable(12), %"class.blink::FloatPoint3D"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = load float, float* %4, align 4
  %8 = fcmp olt float %6, %7
  %9 = select i1 %8, float %6, float %7
  %10 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = load float, float* %10, align 4
  %14 = fcmp olt float %12, %13
  %15 = select i1 %14, float %12, float %13
  %16 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %1, i64 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = load float, float* %16, align 4
  %20 = fcmp olt float %18, %19
  %21 = select i1 %20, float %18, float %19
  %22 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = fadd float %7, %23
  %25 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %2, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fcmp olt float %24, %26
  %28 = select i1 %27, float %26, float %24
  %29 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 4
  %30 = load float, float* %29, align 4
  %31 = fadd float %13, %30
  %32 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %2, i64 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = fcmp olt float %31, %33
  %35 = select i1 %34, float %33, float %31
  %36 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 5
  %37 = load float, float* %36, align 4
  %38 = fadd float %19, %37
  %39 = getelementptr inbounds %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D"* %2, i64 0, i32 2
  %40 = load float, float* %39, align 4
  %41 = fcmp olt float %38, %40
  %42 = select i1 %41, float %40, float %38
  store float %9, float* %4, align 4
  store float %15, float* %10, align 4
  store float %21, float* %16, align 4
  %43 = fsub float %28, %9
  store float %43, float* %22, align 4
  %44 = fsub float %35, %15
  store float %44, float* %29, align 4
  %45 = fsub float %42, %21
  store float %45, float* %36, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_8FloatBoxE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::FloatBox"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #3
  %5 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fpext float %6 to double
  %8 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  %11 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %1, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = fpext float %12 to double
  %14 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %1, i64 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = fpext float %15 to double
  %17 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %1, i64 0, i32 4
  %18 = load float, float* %17, align 4
  %19 = fpext float %18 to double
  %20 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %1, i64 0, i32 5
  %21 = load float, float* %20, align 4
  %22 = fpext float %21 to double
  %23 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), double %7, double %10, double %13, double %16, double %19, double %22) #3
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #3
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #3
  br label %41

41:                                               ; preds = %2, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #3
  ret %"class.std::__1::basic_ostream"* %25
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8FloatBox8ToStringEv(%"class.blink::FloatBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  %5 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = fpext float %6 to double
  %8 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 2
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  %11 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 3
  %12 = load float, float* %11, align 4
  %13 = fpext float %12 to double
  %14 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 4
  %15 = load float, float* %14, align 4
  %16 = fpext float %15 to double
  %17 = getelementptr inbounds %"class.blink::FloatBox", %"class.blink::FloatBox"* %0, i64 0, i32 5
  %18 = load float, float* %17, align 4
  %19 = fpext float %18 to double
  %20 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), double %4, double %7, double %10, double %13, double %16, double %19) #3
  ret %"class.WTF::StringImpl"* %20
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
