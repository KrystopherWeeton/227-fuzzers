; ModuleID = '../../ppapi/shared_impl/tracked_callback.cc'
source_filename = "../../ppapi/shared_impl/tracked_callback.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::TrackedCallback" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, %class.scoped_refptr, i32, i8, i8, %struct.PP_CompletionCallback, %"class.base::OnceCallback", %class.scoped_refptr.8, i32, %"class.std::__1::unique_ptr" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr = type { %"class.ppapi::CallbackTracker"* }
%"class.ppapi::CallbackTracker" = type { %"class.base::RefCountedThreadSafe.1", %"class.std::__1::map", i8, %"class.base::Lock" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%struct.PP_CompletionCallback = type { void (i8*, i32)*, i8*, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.7", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.8 = type { %"class.ppapi::MessageLoopShared"* }
%"class.ppapi::MessageLoopShared" = type { %"class.ppapi::Resource", %"class.ppapi::thunk::PPB_MessageLoop_API" }
%"class.ppapi::Resource" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.9", i32, %"class.ppapi::HostResource" }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.ppapi::HostResource" = type { i32, i32 }
%"class.ppapi::thunk::PPB_MessageLoop_API" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.12, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.12 = type { i64 }
%class.scoped_refptr.17 = type { %"class.ppapi::TrackedCallback"* }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.18" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.ppapi::internal::RunWhileLockedHelper" = type <{ %"class.base::OnceCallback.18", %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::ThreadChecker" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5ppapi15TrackedCallbackEFviEJ13scoped_refptrIS4_EiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5ppapi15TrackedCallbackEFviEJ13scoped_refptrIS3_EiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5ppapi8internal20RunWhileLockedHelperIFvvEE15CallWhileLockedENSt3__110unique_ptrIS3_NS4_14default_deleteIS3_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS3_14default_deleteIS9_EEEEEJSC_EEES8_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS2_14default_deleteIS8_EEEEEJSB_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [44 x i8] c"../../ppapi/shared_impl/tracked_callback.cc\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"is_blocking() && operation_completed_condvar_\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"PostRunWithLock\00", align 1

@_ZN5ppapi15TrackedCallbackC1EPNS_8ResourceERK21PP_CompletionCallback = hidden unnamed_addr alias void (%"class.ppapi::TrackedCallback"*, %"class.ppapi::Resource"*, %struct.PP_CompletionCallback*), void (%"class.ppapi::TrackedCallback"*, %"class.ppapi::Resource"*, %struct.PP_CompletionCallback*)* @_ZN5ppapi15TrackedCallbackC2EPNS_8ResourceERK21PP_CompletionCallback
@_ZN5ppapi15TrackedCallbackD1Ev = hidden unnamed_addr alias void (%"class.ppapi::TrackedCallback"*), void (%"class.ppapi::TrackedCallback"*)* @_ZN5ppapi15TrackedCallbackD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallbackC2EPNS_8ResourceERK21PP_CompletionCallback(%"class.ppapi::TrackedCallback"*, %"class.ppapi::Resource"* readonly, %struct.PP_CompletionCallback* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.17, align 8
  %5 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %7) #6
  %8 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 2
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  store %"class.ppapi::CallbackTracker"* null, %"class.ppapi::CallbackTracker"** %10, align 8
  %11 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 4
  %12 = icmp ne %"class.ppapi::Resource"* %1, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.ppapi::Resource", %"class.ppapi::Resource"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %3, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %3 ]
  store i32 %17, i32* %11, align 8
  %18 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 5
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 6
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 7
  %21 = bitcast %struct.PP_CompletionCallback* %20 to i8*
  %22 = bitcast %struct.PP_CompletionCallback* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false)
  %23 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %24 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #6
  %25 = bitcast %"class.ppapi::PpapiGlobals"* %24 to %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)***
  %26 = load %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)** %26, i64 10
  %28 = load %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)** %27, align 8
  %29 = tail call %"class.ppapi::MessageLoopShared"* %28(%"class.ppapi::PpapiGlobals"* %24) #6
  %30 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 9, i32 0
  store %"class.ppapi::MessageLoopShared"* %29, %"class.ppapi::MessageLoopShared"** %30, align 8
  %31 = icmp eq %"class.ppapi::MessageLoopShared"* %29, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.ppapi::MessageLoopShared", %"class.ppapi::MessageLoopShared"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %16, %32
  %36 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 10
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 11
  %38 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 0, i64* %38, align 8
  br i1 %12, label %39, label %80

39:                                               ; preds = %35
  %40 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #6
  %41 = getelementptr inbounds %"class.ppapi::Resource", %"class.ppapi::Resource"* %1, i64 0, i32 3, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %"class.ppapi::PpapiGlobals"* %40 to %"class.ppapi::CallbackTracker"* (%"class.ppapi::PpapiGlobals"*, i32)***
  %44 = load %"class.ppapi::CallbackTracker"* (%"class.ppapi::PpapiGlobals"*, i32)**, %"class.ppapi::CallbackTracker"* (%"class.ppapi::PpapiGlobals"*, i32)*** %43, align 8
  %45 = getelementptr inbounds %"class.ppapi::CallbackTracker"* (%"class.ppapi::PpapiGlobals"*, i32)*, %"class.ppapi::CallbackTracker"* (%"class.ppapi::PpapiGlobals"*, i32)** %44, i64 4
  %46 = load %"class.ppapi::CallbackTracker"* (%"class.ppapi::PpapiGlobals"*, i32)*, %"class.ppapi::CallbackTracker"* (%"class.ppapi::PpapiGlobals"*, i32)** %45, align 8
  %47 = tail call %"class.ppapi::CallbackTracker"* %46(%"class.ppapi::PpapiGlobals"* %40, i32 %42) #6
  %48 = icmp eq %"class.ppapi::CallbackTracker"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.ppapi::CallbackTracker", %"class.ppapi::CallbackTracker"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  br label %52

52:                                               ; preds = %49, %39
  %53 = ptrtoint %"class.ppapi::CallbackTracker"* %47 to i64
  %54 = bitcast %class.scoped_refptr* %9 to i64*
  %55 = load %"class.ppapi::CallbackTracker"*, %"class.ppapi::CallbackTracker"** %10, align 8
  store i64 %53, i64* %54, align 8
  %56 = icmp eq %"class.ppapi::CallbackTracker"* %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.ppapi::CallbackTracker", %"class.ppapi::CallbackTracker"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  tail call void @_ZN5ppapi15CallbackTrackerD1Ev(%"class.ppapi::CallbackTracker"* nonnull %55) #6
  %62 = bitcast %"class.ppapi::CallbackTracker"* %55 to i8*
  tail call void @_ZdlPv(i8* %62) #7
  br label %63

63:                                               ; preds = %52, %57, %61
  %64 = load %"class.ppapi::CallbackTracker"*, %"class.ppapi::CallbackTracker"** %10, align 8
  %65 = bitcast %class.scoped_refptr.17* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #6
  %66 = icmp eq %"class.ppapi::TrackedCallback"* %0, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = atomicrmw add i32* %5, i32 1 monotonic
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %class.scoped_refptr.17, %class.scoped_refptr.17* %4, i64 0, i32 0
  store %"class.ppapi::TrackedCallback"* %0, %"class.ppapi::TrackedCallback"** %70, align 8
  call void @_ZN5ppapi15CallbackTracker3AddERK13scoped_refptrINS_15TrackedCallbackEE(%"class.ppapi::CallbackTracker"* %64, %class.scoped_refptr.17* nonnull dereferenceable(8) %4) #6
  %71 = load %"class.ppapi::TrackedCallback"*, %"class.ppapi::TrackedCallback"** %70, align 8
  %72 = icmp eq %"class.ppapi::TrackedCallback"* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw sub i32* %74, i32 1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  call void @_ZN5ppapi15TrackedCallbackD2Ev(%"class.ppapi::TrackedCallback"* nonnull %71) #6
  %78 = bitcast %"class.ppapi::TrackedCallback"* %71 to i8*
  call void @_ZdlPv(i8* %78) #7
  br label %79

79:                                               ; preds = %69, %73, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #6
  br label %80

80:                                               ; preds = %79, %35
  %81 = call %"class.base::Lock"* @_ZN5ppapi9ProxyLock3GetEv() #6
  %82 = icmp eq %"class.base::Lock"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %80
  call void @_ZN5ppapi9ProxyLock14AssertAcquiredEv() #6
  %84 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 7, i32 0
  %85 = load void (i8*, i32)*, void (i8*, i32)** %84, align 8
  %86 = icmp eq void (i8*, i32)* %85, null
  br i1 %86, label %87, label %96

87:                                               ; preds = %83
  %88 = call i8* @_Znwm(i64 64) #7
  %89 = bitcast i8* %88 to %"class.base::ConditionVariable"*
  call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* nonnull %89, %"class.base::Lock"* %6) #6
  %90 = ptrtoint i8* %88 to i64
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %91, align 8
  store i64 %90, i64* %38, align 8
  %93 = icmp eq %"class.base::ConditionVariable"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %87
  call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* nonnull %92) #6
  %95 = bitcast %"class.base::ConditionVariable"* %92 to i8*
  call void @_ZdlPv(i8* %95) #7
  br label %96

96:                                               ; preds = %87, %94, %80, %83
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #2

declare void @_ZN5ppapi15CallbackTracker3AddERK13scoped_refptrINS_15TrackedCallbackEE(%"class.ppapi::CallbackTracker"*, %class.scoped_refptr.17* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::Lock"* @_ZN5ppapi9ProxyLock3GetEv() local_unnamed_addr #2

declare void @_ZN5ppapi9ProxyLock14AssertAcquiredEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallbackD2Ev(%"class.ppapi::TrackedCallback"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %2, align 8
  store %"class.base::ConditionVariable"* null, %"class.base::ConditionVariable"** %2, align 8
  %4 = icmp eq %"class.base::ConditionVariable"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* nonnull %3) #6
  %6 = bitcast %"class.base::ConditionVariable"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 9, i32 0
  %9 = load %"class.ppapi::MessageLoopShared"*, %"class.ppapi::MessageLoopShared"** %8, align 8
  %10 = icmp eq %"class.ppapi::MessageLoopShared"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.ppapi::MessageLoopShared", %"class.ppapi::MessageLoopShared"* %9, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe.9"* %17 to %"class.ppapi::Resource"*
  %19 = bitcast %"class.base::RefCountedThreadSafe.9"* %17 to void (%"class.ppapi::Resource"*)***
  %20 = load void (%"class.ppapi::Resource"*)**, void (%"class.ppapi::Resource"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.ppapi::Resource"*)*, void (%"class.ppapi::Resource"*)** %20, i64 1
  %22 = load void (%"class.ppapi::Resource"*)*, void (%"class.ppapi::Resource"*)** %21, align 8
  tail call void %22(%"class.ppapi::Resource"* nonnull %18) #6
  br label %23

23:                                               ; preds = %7, %11, %16
  %24 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %24) #6
  %25 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 3, i32 0
  %26 = load %"class.ppapi::CallbackTracker"*, %"class.ppapi::CallbackTracker"** %25, align 8
  %27 = icmp eq %"class.ppapi::CallbackTracker"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.ppapi::CallbackTracker", %"class.ppapi::CallbackTracker"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  tail call void @_ZN5ppapi15CallbackTrackerD1Ev(%"class.ppapi::CallbackTracker"* nonnull %26) #6
  %33 = bitcast %"class.ppapi::CallbackTracker"* %26 to i8*
  tail call void @_ZdlPv(i8* %33) #7
  br label %34

34:                                               ; preds = %23, %28, %32
  %35 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %35) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback5AbortEv(%"class.ppapi::TrackedCallback"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5ppapi15TrackedCallback3RunEi(%"class.ppapi::TrackedCallback"* %0, i32 -3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback3RunEi(%"class.ppapi::TrackedCallback"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp eq %"class.ppapi::TrackedCallback"* %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #6
  br label %16

16:                                               ; preds = %9, %14
  %17 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 5
  %18 = load i8, i8* %17, align 4, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %74

20:                                               ; preds = %16
  %21 = icmp eq i32 %1, -3
  %22 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 6
  br i1 %21, label %27, label %23

23:                                               ; preds = %20
  %24 = load i8, i8* %22, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 %1, i32 -3
  br label %28

27:                                               ; preds = %20
  store i8 1, i8* %22, align 1
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i32 [ %26, %23 ], [ -3, %27 ]
  %30 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 7, i32 0
  %31 = load void (i8*, i32)*, void (i8*, i32)** %30, align 8
  %32 = icmp eq void (i8*, i32)* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  tail call void @_ZN5ppapi15TrackedCallback22SignalBlockingCallbackEi(%"class.ppapi::TrackedCallback"* %0, i32 %29)
  br label %74

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 9, i32 0
  %36 = load %"class.ppapi::MessageLoopShared"*, %"class.ppapi::MessageLoopShared"** %35, align 8
  %37 = icmp eq %"class.ppapi::MessageLoopShared"* %36, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %34
  %39 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #6
  %40 = bitcast %"class.ppapi::PpapiGlobals"* %39 to %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)***
  %41 = load %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)** %41, i64 10
  %43 = load %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::MessageLoopShared"* (%"class.ppapi::PpapiGlobals"*)** %42, align 8
  %44 = tail call %"class.ppapi::MessageLoopShared"* %43(%"class.ppapi::PpapiGlobals"* %39) #6
  %45 = icmp eq %"class.ppapi::MessageLoopShared"* %36, %44
  br i1 %45, label %47, label %46

46:                                               ; preds = %38
  tail call void @_ZN5ppapi15TrackedCallback15PostRunWithLockEi(%"class.ppapi::TrackedCallback"* %0, i32 %29)
  br label %74

47:                                               ; preds = %34, %38
  tail call void @_ZN5ppapi15TrackedCallback23MarkAsCompletedWithLockEv(%"class.ppapi::TrackedCallback"* %0)
  %48 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %49 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %48, align 8
  %50 = icmp eq %"class.base::internal::BindStateBase"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %"class.base::internal::BindStateBase"* %49 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8
  tail call void @_ZN5ppapi9ProxyLock14AssertAcquiredEv() #6
  %53 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #6
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %52, i64* %55, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %54, align 8
  %56 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %57 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %49, i64 0, i32 1
  %58 = bitcast void ()** %57 to i32 (%"class.base::internal::BindStateBase"*, i32)**
  %59 = load i32 (%"class.base::internal::BindStateBase"*, i32)*, i32 (%"class.base::internal::BindStateBase"*, i32)** %58, align 8
  %60 = tail call i32 %59(%"class.base::internal::BindStateBase"* nonnull %49, i32 %29) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %56) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #6
  %61 = icmp eq i32 %29, -3
  %62 = select i1 %61, i32 -3, i32 %60
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #6
  br label %64

64:                                               ; preds = %47, %51
  %65 = phi i32 [ %62, %51 ], [ %29, %47 ]
  %66 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #6
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #6
  %67 = load void (i8*, i32)*, void (i8*, i32)** %30, align 8
  %68 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 7, i32 1
  %69 = load i8*, i8** %68, align 8
  call void %67(i8* %69, i32 %65) #6
  call void @_ZN5ppapi9ProxyLock7AcquireEv() #6
  %70 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #6
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72, !prof !2

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %73) #6
  br label %74

74:                                               ; preds = %72, %64, %33, %16, %46
  %75 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #6
  br i1 %5, label %82, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw sub i32* %77, i32 1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  call void @_ZN5ppapi15TrackedCallbackD2Ev(%"class.ppapi::TrackedCallback"* nonnull %0) #6
  %81 = bitcast %"class.ppapi::TrackedCallback"* %0 to i8*
  call void @_ZdlPv(i8* %81) #7
  br label %82

82:                                               ; preds = %74, %76, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback9PostAbortEv(%"class.ppapi::TrackedCallback"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  tail call void @_ZN5ppapi15TrackedCallback15PostRunWithLockEi(%"class.ppapi::TrackedCallback"* %0, i32 -3) #6
  %9 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback7PostRunEi(%"class.ppapi::TrackedCallback"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #6
  br label %9

9:                                                ; preds = %2, %7
  tail call void @_ZN5ppapi15TrackedCallback15PostRunWithLockEi(%"class.ppapi::TrackedCallback"* %0, i32 %1)
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback22SignalBlockingCallbackEi(%"class.ppapi::TrackedCallback"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %3, align 8
  %5 = icmp eq %"class.base::ConditionVariable"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 10
  store i32 %1, i32* %7, align 8
  %8 = icmp eq %"class.ppapi::TrackedCallback"* %0, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  tail call void @_ZN5ppapi15TrackedCallback23MarkAsCompletedWithLockEv(%"class.ppapi::TrackedCallback"* nonnull %0)
  %12 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %3, align 8
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %12) #6
  %13 = atomicrmw sub i32* %10, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  tail call void @_ZN5ppapi15TrackedCallbackD2Ev(%"class.ppapi::TrackedCallback"* nonnull %0) #6
  %16 = bitcast %"class.ppapi::TrackedCallback"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #7
  br label %19

17:                                               ; preds = %6
  tail call void @_ZN5ppapi15TrackedCallback23MarkAsCompletedWithLockEv(%"class.ppapi::TrackedCallback"* null)
  %18 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %3, align 8
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %18) #6
  br label %19

19:                                               ; preds = %2, %17, %15, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback15PostRunWithLockEi(%"class.ppapi::TrackedCallback"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.18", align 8
  %4 = alloca %"class.base::OnceCallback.18", align 8
  %5 = alloca %"class.base::OnceCallback.18", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.18", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.base::OnceCallback.18", align 8
  %10 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 4, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %82

13:                                               ; preds = %2
  %14 = icmp eq i32 %1, -3
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 6
  store i8 1, i8* %16, align 1
  br label %17

17:                                               ; preds = %15, %13
  %18 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 7, i32 0
  %19 = load void (i8*, i32)*, void (i8*, i32)** %18, align 8
  %20 = icmp eq void (i8*, i32)* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN5ppapi15TrackedCallback22SignalBlockingCallbackEi(%"class.ppapi::TrackedCallback"* %0, i32 %1)
  br label %80

22:                                               ; preds = %17
  %23 = bitcast %"class.base::OnceCallback.18"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %24, align 8
  %25 = tail call i8* @_Znwm(i64 64) #7, !noalias !4
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5ppapi15TrackedCallbackEFviEJ13scoped_refptrIS4_EiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5ppapi15TrackedCallbackEFviEJ13scoped_refptrIS3_EiEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !4
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.ppapi::TrackedCallback"*, i32)* @_ZN5ppapi15TrackedCallback3RunEi to i64), i64 0>, <2 x i64>* %28, align 8, !noalias !4
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = bitcast i8* %29 to %"class.ppapi::TrackedCallback"**
  store %"class.ppapi::TrackedCallback"* %0, %"class.ppapi::TrackedCallback"** %30, align 8, !noalias !4
  %31 = icmp eq %"class.ppapi::TrackedCallback"* %0, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic, !noalias !4
  br label %35

35:                                               ; preds = %22, %32
  %36 = getelementptr inbounds i8, i8* %25, i64 56
  %37 = bitcast i8* %36 to i32*
  store i32 %1, i32* %37, align 4, !noalias !4
  %38 = bitcast %"class.base::OnceCallback.18"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = tail call i8* @_Znwm(i64 16) #7, !noalias !9
  %40 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = ptrtoint i8* %25 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8, !noalias !9
  %42 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %3, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast i8* %39 to i64*
  store i64 %41, i64* %43, align 8, !noalias !9
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8, !noalias !9
  %44 = ptrtoint i8* %39 to i64
  %45 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #6, !noalias !9
  %46 = call i8* @_Znwm(i64 48) #7, !noalias !12
  %47 = bitcast i8* %46 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %47, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS3_14default_deleteIS9_EEEEEJSC_EEES8_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS2_14default_deleteIS8_EEEEEJSB_EE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !12
  %48 = getelementptr inbounds i8, i8* %46, i64 32
  %49 = bitcast i8* %48 to i64*
  store i64 ptrtoint (void (%"class.ppapi::internal::RunWhileLockedHelper"*)* @_ZN5ppapi8internal20RunWhileLockedHelperIFvvEE15CallWhileLockedENSt3__110unique_ptrIS3_NS4_14default_deleteIS3_EEEE to i64), i64* %49, align 8, !noalias !12
  %50 = getelementptr inbounds i8, i8* %46, i64 40
  %51 = bitcast i8* %50 to i64*
  store i64 %44, i64* %51, align 8, !noalias !12
  %52 = bitcast %"class.base::OnceCallback.18"* %4 to i8**
  store i8* %46, i8** %52, align 8, !alias.scope !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %53 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #6
  %54 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 9, i32 0
  %55 = load %"class.ppapi::MessageLoopShared"*, %"class.ppapi::MessageLoopShared"** %54, align 8
  %56 = icmp eq %"class.ppapi::MessageLoopShared"* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %35
  %58 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 264) #6
  %59 = bitcast %"class.base::OnceCallback.18"* %4 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.base::OnceCallback.18"* %7 to i64*
  store i64 %60, i64* %61, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %62 = bitcast %"class.ppapi::MessageLoopShared"* %55 to void (%"class.ppapi::MessageLoopShared"*, %"class.base::Location"*, %"class.base::OnceCallback.18"*, i64)***
  %63 = load void (%"class.ppapi::MessageLoopShared"*, %"class.base::Location"*, %"class.base::OnceCallback.18"*, i64)**, void (%"class.ppapi::MessageLoopShared"*, %"class.base::Location"*, %"class.base::OnceCallback.18"*, i64)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.ppapi::MessageLoopShared"*, %"class.base::Location"*, %"class.base::OnceCallback.18"*, i64)*, void (%"class.ppapi::MessageLoopShared"*, %"class.base::Location"*, %"class.base::OnceCallback.18"*, i64)** %63, i64 65
  %65 = load void (%"class.ppapi::MessageLoopShared"*, %"class.base::Location"*, %"class.base::OnceCallback.18"*, i64)*, void (%"class.ppapi::MessageLoopShared"*, %"class.base::Location"*, %"class.base::OnceCallback.18"*, i64)** %64, align 8
  call void %65(%"class.ppapi::MessageLoopShared"* nonnull %55, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.18"* nonnull %7, i64 0) #6
  br label %75

66:                                               ; preds = %35
  %67 = call dereferenceable(8) %class.scoped_refptr.15* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #6
  %68 = bitcast %class.scoped_refptr.15* %67 to %"class.base::TaskRunner"**
  %69 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %68, align 8
  %70 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 271) #6
  %71 = bitcast %"class.base::OnceCallback.18"* %4 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.base::OnceCallback.18"* %9 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %74 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %69, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback.18"* nonnull %9) #6
  br label %75

75:                                               ; preds = %66, %57
  %76 = phi %"class.base::OnceCallback.18"* [ %9, %66 ], [ %7, %57 ]
  %77 = phi i8* [ %70, %66 ], [ %58, %57 ]
  %78 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %76, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #6
  %79 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %79) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  br label %80

80:                                               ; preds = %75, %21
  %81 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 2
  store i8 1, i8* %81, align 8
  br label %82

82:                                               ; preds = %2, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback23MarkAsCompletedWithLockEv(%"class.ppapi::TrackedCallback"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.scoped_refptr.17, align 8
  %3 = bitcast %class.scoped_refptr.17* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6
  %4 = getelementptr inbounds %class.scoped_refptr.17, %class.scoped_refptr.17* %2, i64 0, i32 0
  store %"class.ppapi::TrackedCallback"* %0, %"class.ppapi::TrackedCallback"** %4, align 8
  %5 = icmp eq %"class.ppapi::TrackedCallback"* %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 5
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 3, i32 0
  %16 = load %"class.ppapi::CallbackTracker"*, %"class.ppapi::CallbackTracker"** %15, align 8
  call void @_ZN5ppapi15CallbackTracker6RemoveERK13scoped_refptrINS_15TrackedCallbackEE(%"class.ppapi::CallbackTracker"* %16, %class.scoped_refptr.17* nonnull dereferenceable(8) %2) #6
  br label %17

17:                                               ; preds = %9, %14
  %18 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 3
  %19 = bitcast %class.scoped_refptr* %18 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 0, i32 0
  %21 = load %"class.ppapi::CallbackTracker"*, %"class.ppapi::CallbackTracker"** %20, align 8
  store i64 0, i64* %19, align 8
  %22 = icmp eq %"class.ppapi::CallbackTracker"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.ppapi::CallbackTracker", %"class.ppapi::CallbackTracker"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  call void @_ZN5ppapi15CallbackTrackerD1Ev(%"class.ppapi::CallbackTracker"* nonnull %21) #6
  %28 = bitcast %"class.ppapi::CallbackTracker"* %21 to i8*
  call void @_ZdlPv(i8* %28) #7
  br label %29

29:                                               ; preds = %17, %23, %27
  %30 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 9
  %31 = bitcast %class.scoped_refptr.8* %30 to i64*
  %32 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %30, i64 0, i32 0
  %33 = load %"class.ppapi::MessageLoopShared"*, %"class.ppapi::MessageLoopShared"** %32, align 8
  store i64 0, i64* %31, align 8
  %34 = icmp eq %"class.ppapi::MessageLoopShared"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.ppapi::MessageLoopShared", %"class.ppapi::MessageLoopShared"* %33, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe.9"* %41 to %"class.ppapi::Resource"*
  %43 = bitcast %"class.base::RefCountedThreadSafe.9"* %41 to void (%"class.ppapi::Resource"*)***
  %44 = load void (%"class.ppapi::Resource"*)**, void (%"class.ppapi::Resource"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.ppapi::Resource"*)*, void (%"class.ppapi::Resource"*)** %44, i64 1
  %46 = load void (%"class.ppapi::Resource"*)*, void (%"class.ppapi::Resource"*)** %45, align 8
  call void %46(%"class.ppapi::Resource"* nonnull %42) #6
  br label %47

47:                                               ; preds = %29, %35, %40
  %48 = load %"class.ppapi::TrackedCallback"*, %"class.ppapi::TrackedCallback"** %4, align 8
  %49 = icmp eq %"class.ppapi::TrackedCallback"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i32* %51, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  call void @_ZN5ppapi15TrackedCallbackD2Ev(%"class.ppapi::TrackedCallback"* nonnull %48) #6
  %55 = bitcast %"class.ppapi::TrackedCallback"* %48 to i8*
  call void @_ZdlPv(i8* %55) #7
  br label %56

56:                                               ; preds = %47, %50, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback19set_completion_taskEN4base12OnceCallbackIFiiEEE(%"class.ppapi::TrackedCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #6
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 8, i32 0
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %12 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %10, %"class.base::internal::CallbackBase"* dereferenceable(8) %11) #6
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi15TrackedCallback9IsPendingERK13scoped_refptrIS0_E(%class.scoped_refptr.17* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.17, %class.scoped_refptr.17* %0, i64 0, i32 0
  %3 = load %"class.ppapi::TrackedCallback"*, %"class.ppapi::TrackedCallback"** %2, align 8
  %4 = icmp eq %"class.ppapi::TrackedCallback"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #6
  br label %12

12:                                               ; preds = %5, %10
  %13 = load %"class.ppapi::TrackedCallback"*, %"class.ppapi::TrackedCallback"** %2, align 8
  %14 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %13, i64 0, i32 6
  %15 = load i8, i8* %14, align 1, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %13, i64 0, i32 5
  %19 = load i8, i8* %18, align 4, !range !3
  %20 = icmp eq i8 %19, 0
  br label %21

21:                                               ; preds = %12, %17
  %22 = phi i1 [ %20, %17 ], [ false, %12 ]
  %23 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #6
  br label %24

24:                                               ; preds = %1, %21
  %25 = phi i1 [ %22, %21 ], [ false, %1 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi15TrackedCallback16IsScheduledToRunERK13scoped_refptrIS0_E(%class.scoped_refptr.17* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.17, %class.scoped_refptr.17* %0, i64 0, i32 0
  %3 = load %"class.ppapi::TrackedCallback"*, %"class.ppapi::TrackedCallback"** %2, align 8
  %4 = icmp eq %"class.ppapi::TrackedCallback"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #6
  br label %12

12:                                               ; preds = %5, %10
  %13 = load %"class.ppapi::TrackedCallback"*, %"class.ppapi::TrackedCallback"** %2, align 8
  %14 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %13, i64 0, i32 6
  %15 = load i8, i8* %14, align 1, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %13, i64 0, i32 5
  %19 = load i8, i8* %18, align 4, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %13, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !3
  %24 = icmp ne i8 %23, 0
  br label %25

25:                                               ; preds = %21, %17, %12
  %26 = phi i1 [ false, %12 ], [ false, %17 ], [ %24, %21 ]
  %27 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #6
  br label %28

28:                                               ; preds = %1, %25
  %29 = phi i1 [ %26, %25 ], [ false, %1 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5ppapi15TrackedCallback18BlockUntilCompleteEv(%"class.ppapi::TrackedCallback"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  tail call void @_ZN5ppapi9ProxyLock14AssertAcquiredEv() #6
  %5 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 7, i32 0
  %13 = load void (i8*, i32)*, void (i8*, i32)** %12, align 8
  %14 = icmp eq void (i8*, i32)* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %17 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %16, align 8
  %18 = icmp eq %"class.base::ConditionVariable"* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %15, %11
  %20 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i32 191, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0)) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = icmp eq %"class.ppapi::TrackedCallback"* %0, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %22, %24
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #6
  %28 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 5
  %29 = load i8, i8* %28, align 4, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %31, %33
  %34 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %32, align 8
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %34) #6
  %35 = load i8, i8* %28, align 4, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %33, label %37

37:                                               ; preds = %33, %27
  %38 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #6
  call void @_ZN5ppapi9ProxyLock7AcquireEv() #6
  %39 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #6
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41, !prof !2

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %42) #6
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %45 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %44, align 8
  %46 = icmp eq %"class.base::internal::BindStateBase"* %45, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %43
  %48 = ptrtoint %"class.base::internal::BindStateBase"* %45 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %49 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 10
  %50 = load i32, i32* %49, align 8
  call void @_ZN5ppapi9ProxyLock14AssertAcquiredEv() #6
  %51 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #6
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %48, i64* %53, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %52, align 8
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %55 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %45, i64 0, i32 1
  %56 = bitcast void ()** %55 to i32 (%"class.base::internal::BindStateBase"*, i32)**
  %57 = load i32 (%"class.base::internal::BindStateBase"*, i32)*, i32 (%"class.base::internal::BindStateBase"*, i32)** %56, align 8
  %58 = call i32 %57(%"class.base::internal::BindStateBase"* nonnull %45, i32 %50) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #6
  %59 = icmp eq i32 %50, -3
  %60 = select i1 %59, i32 -3, i32 %58
  store i32 %60, i32* %49, align 8
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #6
  br label %62

62:                                               ; preds = %43, %47
  %63 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  br i1 %23, label %71, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  call void @_ZN5ppapi15TrackedCallbackD2Ev(%"class.ppapi::TrackedCallback"* nonnull %0) #6
  %70 = bitcast %"class.ppapi::TrackedCallback"* %0 to i8*
  call void @_ZdlPv(i8* %70) #7
  br label %71

71:                                               ; preds = %62, %65, %69
  %72 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #6
  ret i32 %64
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN5ppapi9ProxyLock7ReleaseEv() local_unnamed_addr #2

declare void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"*) local_unnamed_addr #2

declare void @_ZN5ppapi9ProxyLock7AcquireEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi15TrackedCallback15MarkAsCompletedEv(%"class.ppapi::TrackedCallback"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  tail call void @_ZN5ppapi15TrackedCallback23MarkAsCompletedWithLockEv(%"class.ppapi::TrackedCallback"* %0)
  %9 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #6
  ret void
}

declare void @_ZN5ppapi15CallbackTracker6RemoveERK13scoped_refptrINS_15TrackedCallbackEE(%"class.ppapi::CallbackTracker"*, %class.scoped_refptr.17* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare dereferenceable(8) %class.scoped_refptr.15* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.18"*) local_unnamed_addr #2

declare void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"*) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5ppapi15CallbackTrackerD1Ev(%"class.ppapi::CallbackTracker"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"*, %"class.base::Lock"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5ppapi15TrackedCallbackEFviEJ13scoped_refptrIS4_EiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.ppapi::TrackedCallback"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.ppapi::TrackedCallback"*, i32)**
  %23 = load void (%"class.ppapi::TrackedCallback"*, i32)*, void (%"class.ppapi::TrackedCallback"*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.ppapi::TrackedCallback"*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.ppapi::TrackedCallback"*, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i32, i32* %5, align 4
  tail call void %27(%"class.ppapi::TrackedCallback"* %14, i32 %28) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5ppapi15TrackedCallbackEFviEJ13scoped_refptrIS3_EiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.ppapi::TrackedCallback"**
  %6 = load %"class.ppapi::TrackedCallback"*, %"class.ppapi::TrackedCallback"** %5, align 8
  %7 = icmp eq %"class.ppapi::TrackedCallback"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ppapi::TrackedCallback", %"class.ppapi::TrackedCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN5ppapi15TrackedCallbackD2Ev(%"class.ppapi::TrackedCallback"* nonnull %6) #6
  %13 = bitcast %"class.ppapi::TrackedCallback"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #7
  br label %14

14:                                               ; preds = %3, %8, %12
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #7
  br label %16

16:                                               ; preds = %14, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ppapi8internal20RunWhileLockedHelperIFvvEE15CallWhileLockedENSt3__110unique_ptrIS3_NS4_14default_deleteIS3_EEEE(%"class.ppapi::internal::RunWhileLockedHelper"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.18", align 8
  %3 = alloca %"class.base::OnceCallback.18", align 8
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #6
  %4 = bitcast %"class.base::OnceCallback.18"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ppapi::internal::RunWhileLockedHelper", %"class.ppapi::internal::RunWhileLockedHelper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.ppapi::internal::RunWhileLockedHelper"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %9 = bitcast %"class.base::OnceCallback.18"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = bitcast %"class.base::OnceCallback.18"* %2 to i64*
  store i64 %8, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %2, i64 0, i32 0
  %12 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %16 = getelementptr inbounds %"class.base::OnceCallback.18", %"class.base::OnceCallback.18"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #6
  %17 = icmp eq %"class.ppapi::internal::RunWhileLockedHelper"* %0, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.ppapi::internal::RunWhileLockedHelper", %"class.ppapi::internal::RunWhileLockedHelper"* %0, i64 0, i32 0, i32 0
  %20 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %21 = icmp eq %"class.base::internal::BindStateBase"* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  call void @_ZN5ppapi9ProxyLock7AcquireEv() #6
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %19) #6
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #6
  br label %23

23:                                               ; preds = %22, %18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %19) #6
  %24 = bitcast %"class.ppapi::internal::RunWhileLockedHelper"* %0 to i8*
  call void @_ZdlPv(i8* %24) #7
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS3_14default_deleteIS9_EEEEEJSC_EEES8_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.ppapi::internal::RunWhileLockedHelper"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"class.ppapi::internal::RunWhileLockedHelper"*)*, void (%"class.ppapi::internal::RunWhileLockedHelper"*)** %3, align 8
  %6 = bitcast void ()** %4 to %"class.ppapi::internal::RunWhileLockedHelper"**
  %7 = load %"class.ppapi::internal::RunWhileLockedHelper"*, %"class.ppapi::internal::RunWhileLockedHelper"** %6, align 8
  store %"class.ppapi::internal::RunWhileLockedHelper"* null, %"class.ppapi::internal::RunWhileLockedHelper"** %6, align 8
  tail call void %5(%"class.ppapi::internal::RunWhileLockedHelper"* %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS2_14default_deleteIS8_EEEEEJSB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.ppapi::internal::RunWhileLockedHelper"**
  %6 = load %"class.ppapi::internal::RunWhileLockedHelper"*, %"class.ppapi::internal::RunWhileLockedHelper"** %5, align 8
  store %"class.ppapi::internal::RunWhileLockedHelper"* null, %"class.ppapi::internal::RunWhileLockedHelper"** %5, align 8
  %7 = icmp eq %"class.ppapi::internal::RunWhileLockedHelper"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ppapi::internal::RunWhileLockedHelper", %"class.ppapi::internal::RunWhileLockedHelper"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.ppapi::internal::RunWhileLockedHelper", %"class.ppapi::internal::RunWhileLockedHelper"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = icmp eq %"class.base::internal::BindStateBase"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZN5ppapi9ProxyLock7AcquireEv() #6
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %9) #6
  tail call void @_ZN5ppapi9ProxyLock7ReleaseEv() #6
  br label %14

14:                                               ; preds = %13, %8
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %9) #6
  %15 = bitcast %"class.ppapi::internal::RunWhileLockedHelper"* %6 to i8*
  tail call void @_ZdlPv(i8* %15) #7
  br label %16

16:                                               ; preds = %3, %14
  %17 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5ppapi15TrackedCallbackEFviEJPS4_RiEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5ppapi15TrackedCallbackEFviEJPS4_RiEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIMN5ppapi15TrackedCallbackEFviEJPS2_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIMN5ppapi15TrackedCallbackEFviEJPS2_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5ppapi14RunWhileLockedIFvvEEEN4base12OnceCallbackIT_EES5_: argument 0"}
!11 = distinct !{!11, !"_ZN5ppapi14RunWhileLockedIFvvEEEN4base12OnceCallbackIT_EES5_"}
!12 = !{!13, !15, !10}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS3_14default_deleteIS9_EEEEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS3_14default_deleteIS9_EEEEEJSC_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS1_14default_deleteIS7_EEEEEJSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN5ppapi8internal20RunWhileLockedHelperIFvvEEENS1_14default_deleteIS7_EEEEEJSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
