; ModuleID = '../../third_party/skia/src/core/SkImageInfo.cpp'
source_filename = "../../third_party/skia/src/core/SkImageInfo.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%struct.SkISize = type { i32, i32 }
%struct.SkReadPixelsRec = type { i8*, i64, %struct.SkImageInfo, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkWritePixelsRec = type { i8*, i64, %struct.SkImageInfo, i32, i32 }

@switch.table._ZNK11SkColorInfo13shiftPerPixelEv = private unnamed_addr constant [21 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 0, i32 3, i32 3, i32 4, i32 1, i32 1, i32 2, i32 1, i32 2, i32 3], align 4
@switch.table._ZNK11SkImageInfo13computeOffsetEiim = private unnamed_addr constant [20 x i64] [i64 0, i64 1, i64 1, i64 2, i64 2, i64 2, i64 2, i64 2, i64 2, i64 2, i64 0, i64 3, i64 3, i64 4, i64 1, i64 1, i64 2, i64 1, i64 2, i64 3], align 8
@switch.table._ZN16SkWritePixelsRec4trimEii = private unnamed_addr constant [21 x i64] [i64 0, i64 1, i64 2, i64 2, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 4, i64 1, i64 8, i64 8, i64 16, i64 2, i64 2, i64 4, i64 2, i64 4, i64 8], align 8
@switch.table._ZN16SkWritePixelsRec4trimEii.2 = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 2, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 1, i32 8, i32 8, i32 16, i32 2, i32 2, i32 4, i32 2, i32 4, i32 8], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 21
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @llvm.trap()
  unreachable

4:                                                ; preds = %1
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN16SkWritePixelsRec4trimEii.2, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 21
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @llvm.trap() #6
  unreachable

4:                                                ; preds = %1
  %5 = trunc i32 %0 to i21
  %6 = lshr i21 691749, %5
  %7 = and i21 %6, 1
  %8 = icmp ne i21 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 21
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @llvm.trap() #6
  unreachable

6:                                                ; preds = %1
  %7 = sext i32 %3 to i64
  %8 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN16SkWritePixelsRec4trimEii.2, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 21
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @llvm.trap() #6
  unreachable

6:                                                ; preds = %1
  %7 = sext i32 %3 to i64
  %8 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZNK11SkColorInfo13shiftPerPixelEv, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* nocapture readonly, i32, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = add i32 %6, -1
  %10 = icmp ult i32 %9, 20
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @llvm.trap() #6
  unreachable

12:                                               ; preds = %8
  %13 = sext i32 %1 to i64
  %14 = sext i32 %2 to i64
  %15 = mul i64 %14, %3
  %16 = sext i32 %9 to i64
  %17 = getelementptr inbounds [20 x i64], [20 x i64]* @switch.table._ZNK11SkImageInfo13computeOffsetEiim, i64 0, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %13, %18
  %20 = add i64 %19, %15
  br label %21

21:                                               ; preds = %4, %12
  %22 = phi i64 [ %20, %12 ], [ 0, %4 ]
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %4, -2147483648
  %8 = add nsw i32 %4, -1
  %9 = xor i1 %7, true
  %10 = select i1 %7, i32 -2147483648, i32 %8
  %11 = sext i32 %10 to i64
  %12 = or i64 %11, %1
  %13 = icmp ugt i64 %12, 4294967295
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = mul i64 %11, %1
  br label %39

16:                                               ; preds = %6
  %17 = and i64 %11, 4294967295
  %18 = and i64 %1, 4294967295
  %19 = mul nuw i64 %17, %18
  %20 = lshr i64 %11, 32
  %21 = mul nuw i64 %20, %18
  %22 = lshr i64 %1, 32
  %23 = mul nuw i64 %17, %22
  %24 = mul nuw i64 %20, %22
  %25 = shl i64 %21, 32
  %26 = add i64 %25, %19
  %27 = icmp uge i64 %26, %19
  %28 = shl i64 %23, 32
  %29 = add i64 %26, %28
  %30 = icmp uge i64 %29, %26
  %31 = lshr i64 %21, 32
  %32 = add nuw i64 %31, %24
  %33 = lshr i64 %23, 32
  %34 = sub nsw i64 0, %33
  %35 = icmp eq i64 %32, %34
  %36 = and i1 %35, %27
  %37 = and i1 %36, %30
  %38 = and i1 %37, %9
  br label %39

39:                                               ; preds = %14, %16
  %40 = phi i1 [ %38, %16 ], [ %9, %14 ]
  %41 = phi i64 [ %29, %16 ], [ %15, %14 ]
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ult i32 %46, 21
  br i1 %47, label %49, label %48

48:                                               ; preds = %39
  tail call void @llvm.trap() #6
  unreachable

49:                                               ; preds = %39
  %50 = sext i32 %46 to i64
  %51 = getelementptr inbounds [21 x i64], [21 x i64]* @switch.table._ZN16SkWritePixelsRec4trimEii, i64 0, i64 %50
  %52 = load i64, i64* %51, align 8
  %53 = icmp slt i32 %43, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = mul nsw i64 %52, %44
  br label %68

56:                                               ; preds = %49
  %57 = and i64 %44, 4294967295
  %58 = mul nuw nsw i64 %52, %57
  %59 = lshr i64 %44, 32
  %60 = mul nuw nsw i64 %52, %59
  %61 = shl i64 %60, 32
  %62 = add i64 %61, %58
  %63 = icmp uge i64 %62, %58
  %64 = and i64 %60, 133143986176
  %65 = icmp eq i64 %64, 0
  %66 = and i1 %65, %63
  %67 = and i1 %40, %66
  br label %68

68:                                               ; preds = %54, %56
  %69 = phi i1 [ %67, %56 ], [ %40, %54 ]
  %70 = phi i64 [ %62, %56 ], [ %55, %54 ]
  %71 = add i64 %70, %41
  %72 = icmp uge i64 %71, %41
  %73 = and i1 %69, %72
  %74 = select i1 %73, i64 %71, i64 -1
  br label %75

75:                                               ; preds = %2, %68
  %76 = phi i64 [ %74, %68 ], [ 0, %2 ]
  ret i64 %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkImageInfo7MakeS32Eii11SkAlphaType(%struct.SkImageInfo* noalias nocapture sret, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* nonnull sret %5) #6
  %6 = bitcast %class.sk_sp* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = zext i32 %3 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 6
  %11 = zext i32 %2 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i32 %1 to i64
  %14 = or i64 %12, %13
  %15 = bitcast %struct.SkImageInfo* %0 to i64*
  store i64 %7, i64* %15, align 8
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %17 = bitcast i32* %16 to i64*
  store i64 %10, i64* %17, align 8
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %19 = bitcast %struct.SkISize* %18 to i64*
  store i64 %14, i64* %19, align 8
  ret void
}

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* sret) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_Z28SkColorTypeValidateAlphaType11SkColorType11SkAlphaTypePS0_(i32, i32, i32*) local_unnamed_addr #4 {
  switch i32 %0, label %10 [
    i32 0, label %4
    i32 1, label %5
    i32 18, label %5
    i32 16, label %5
    i32 3, label %6
    i32 4, label %6
    i32 6, label %6
    i32 7, label %6
    i32 8, label %6
    i32 12, label %6
    i32 13, label %6
    i32 14, label %6
    i32 20, label %6
    i32 11, label %8
    i32 15, label %8
    i32 19, label %8
    i32 17, label %8
    i32 2, label %8
    i32 5, label %8
    i32 9, label %8
    i32 10, label %8
  ]

4:                                                ; preds = %3
  br label %10

5:                                                ; preds = %3, %3, %3
  switch i32 %1, label %9 [
    i32 3, label %10
    i32 0, label %14
  ]

6:                                                ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %14, label %9

8:                                                ; preds = %3, %3, %3, %3, %3, %3, %3, %3
  br label %10

9:                                                ; preds = %5, %6
  br label %10

10:                                               ; preds = %5, %9, %3, %8, %4
  %11 = phi i32 [ %1, %3 ], [ 1, %8 ], [ 0, %4 ], [ 2, %5 ], [ %1, %9 ]
  %12 = icmp eq i32* %2, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  store i32 %11, i32* %2, align 4
  br label %14

14:                                               ; preds = %5, %13, %10, %6
  %15 = phi i1 [ false, %6 ], [ true, %10 ], [ true, %13 ], [ false, %5 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkReadPixelsRec4trimEii(%struct.SkReadPixelsRec* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %struct.SkIRect, align 4
  %7 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %136, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 1
  %12 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 21
  br i1 %18, label %20, label %19

19:                                               ; preds = %10
  tail call void @llvm.trap() #6
  unreachable

20:                                               ; preds = %10
  %21 = load i64, i64* %11, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds [21 x i64], [21 x i64]* @switch.table._ZN16SkWritePixelsRec4trimEii, i64 0, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = mul nsw i64 %24, %15
  %26 = icmp ult i64 %25, 2147483648
  %27 = select i1 %26, i64 %25, i64 0
  %28 = icmp ult i64 %21, %27
  %29 = icmp slt i32 %14, 1
  %30 = or i1 %29, %28
  br i1 %30, label %136, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 2, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %136, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #6
  %41 = bitcast { i64, i64 }* %4 to i32*
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %44 = bitcast i64* %43 to i32*
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %46 = sext i32 %37 to i64
  %47 = add nsw i64 %46, %15
  %48 = icmp slt i64 %47, 2147483647
  %49 = select i1 %48, i64 %47, i64 2147483647
  %50 = icmp sgt i64 %49, -2147483647
  %51 = select i1 %50, i64 %49, i64 -2147483647
  %52 = sext i32 %39 to i64
  %53 = sext i32 %33 to i64
  %54 = add nsw i64 %52, %53
  %55 = icmp slt i64 %54, 2147483647
  %56 = select i1 %55, i64 %54, i64 2147483647
  %57 = icmp sgt i64 %56, -2147483647
  %58 = select i1 %57, i64 %56, i64 -2147483647
  %59 = zext i32 %39 to i64
  %60 = shl nuw i64 %59, 32
  %61 = zext i32 %37 to i64
  %62 = or i64 %60, %61
  %63 = shl nsw i64 %58, 32
  %64 = and i64 %51, 4294967295
  %65 = or i64 %63, %64
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %62, i64* %66, align 8
  store i64 %65, i64* %43, align 8
  %67 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #6
  %68 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  store i32 %1, i32* %70, align 4
  %71 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  store i32 %2, i32* %71, align 4
  %72 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* nonnull dereferenceable(16) %5, %struct.SkIRect* nonnull dereferenceable(16) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #6
  br i1 %72, label %73, label %134

73:                                               ; preds = %35
  %74 = load i32, i32* %16, align 8
  %75 = icmp ult i32 %74, 21
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @llvm.trap() #6
  unreachable

77:                                               ; preds = %73
  %78 = load i8*, i8** %7, align 8
  %79 = load i64, i64* %11, align 8
  %80 = icmp slt i32 %39, 0
  %81 = select i1 %80, i32 %39, i32 0
  %82 = sub nsw i32 0, %81
  %83 = sext i32 %82 to i64
  %84 = mul i64 %79, %83
  %85 = getelementptr inbounds i8, i8* %78, i64 %84
  %86 = icmp slt i32 %37, 0
  %87 = select i1 %86, i32 %37, i32 0
  %88 = sext i32 %74 to i64
  %89 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN16SkWritePixelsRec4trimEii.2, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = mul i32 %87, %90
  %92 = sub i32 0, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %85, i64 %93
  store i8* %94, i8** %7, align 8
  %95 = load i32, i32* %44, align 8
  %96 = load i32, i32* %41, align 8
  %97 = sub i32 %95, %96
  %98 = load i32, i32* %45, align 4
  %99 = load i32, i32* %42, align 4
  %100 = sub i32 %98, %99
  %101 = zext i32 %100 to i64
  %102 = shl nuw i64 %101, 32
  %103 = zext i32 %97 to i64
  %104 = or i64 %102, %103
  %105 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %106 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %107 = icmp eq %class.SkColorSpace* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %77
  %109 = bitcast i32* %16 to i64*
  %110 = load i64, i64* %109, align 8, !noalias !2
  %111 = bitcast %struct.SkImageInfo* %12 to i64*
  store i64 0, i64* %111, align 8
  br label %127

112:                                              ; preds = %77
  %113 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 1 monotonic, !noalias !2
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %116 = ptrtoint %class.SkColorSpace* %106 to i64
  %117 = bitcast i32* %16 to i64*
  %118 = load i64, i64* %117, align 8, !noalias !2
  %119 = bitcast %struct.SkImageInfo* %12 to i64*
  store i64 %116, i64* %119, align 8
  %120 = icmp eq %class.SkColorSpace* %115, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %112
  %122 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 -1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = bitcast %class.SkColorSpace* %115 to i8*
  call void @_ZdlPv(i8* %126) #7
  br label %127

127:                                              ; preds = %125, %121, %112, %108
  %128 = phi i64 [ %110, %108 ], [ %118, %112 ], [ %118, %121 ], [ %118, %125 ]
  %129 = phi i64* [ %109, %108 ], [ %117, %112 ], [ %117, %121 ], [ %117, %125 ]
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %struct.SkReadPixelsRec, %struct.SkReadPixelsRec* %0, i64 0, i32 2, i32 1
  %131 = bitcast %struct.SkISize* %130 to i64*
  store i64 %104, i64* %131, align 8
  %132 = load i32, i32* %41, align 8
  store i32 %132, i32* %36, align 8
  %133 = load i32, i32* %42, align 4
  store i32 %133, i32* %38, align 4
  br label %134

134:                                              ; preds = %35, %127
  %135 = phi i1 [ true, %127 ], [ false, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #6
  br label %136

136:                                              ; preds = %31, %3, %20, %134
  %137 = phi i1 [ %135, %134 ], [ false, %20 ], [ false, %3 ], [ false, %31 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16SkWritePixelsRec4trimEii(%struct.SkWritePixelsRec* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %struct.SkIRect, align 4
  %7 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %136, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 1
  %12 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 21
  br i1 %18, label %20, label %19

19:                                               ; preds = %10
  tail call void @llvm.trap() #6
  unreachable

20:                                               ; preds = %10
  %21 = load i64, i64* %11, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds [21 x i64], [21 x i64]* @switch.table._ZN16SkWritePixelsRec4trimEii, i64 0, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = mul nsw i64 %24, %15
  %26 = icmp ult i64 %25, 2147483648
  %27 = select i1 %26, i64 %25, i64 0
  %28 = icmp ult i64 %21, %27
  %29 = icmp slt i32 %14, 1
  %30 = or i1 %29, %28
  br i1 %30, label %136, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 2, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %136, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #6
  %41 = bitcast { i64, i64 }* %4 to i32*
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %44 = bitcast i64* %43 to i32*
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %46 = sext i32 %37 to i64
  %47 = add nsw i64 %46, %15
  %48 = icmp slt i64 %47, 2147483647
  %49 = select i1 %48, i64 %47, i64 2147483647
  %50 = icmp sgt i64 %49, -2147483647
  %51 = select i1 %50, i64 %49, i64 -2147483647
  %52 = sext i32 %39 to i64
  %53 = sext i32 %33 to i64
  %54 = add nsw i64 %52, %53
  %55 = icmp slt i64 %54, 2147483647
  %56 = select i1 %55, i64 %54, i64 2147483647
  %57 = icmp sgt i64 %56, -2147483647
  %58 = select i1 %57, i64 %56, i64 -2147483647
  %59 = zext i32 %39 to i64
  %60 = shl nuw i64 %59, 32
  %61 = zext i32 %37 to i64
  %62 = or i64 %60, %61
  %63 = shl nsw i64 %58, 32
  %64 = and i64 %51, 4294967295
  %65 = or i64 %63, %64
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %62, i64* %66, align 8
  store i64 %65, i64* %43, align 8
  %67 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #6
  %68 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  store i32 %1, i32* %70, align 4
  %71 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  store i32 %2, i32* %71, align 4
  %72 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* nonnull dereferenceable(16) %5, %struct.SkIRect* nonnull dereferenceable(16) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #6
  br i1 %72, label %73, label %134

73:                                               ; preds = %35
  %74 = load i32, i32* %16, align 8
  %75 = icmp ult i32 %74, 21
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @llvm.trap() #6
  unreachable

77:                                               ; preds = %73
  %78 = load i8*, i8** %7, align 8
  %79 = load i64, i64* %11, align 8
  %80 = icmp slt i32 %39, 0
  %81 = select i1 %80, i32 %39, i32 0
  %82 = sub nsw i32 0, %81
  %83 = sext i32 %82 to i64
  %84 = mul i64 %79, %83
  %85 = getelementptr inbounds i8, i8* %78, i64 %84
  %86 = icmp slt i32 %37, 0
  %87 = select i1 %86, i32 %37, i32 0
  %88 = sext i32 %74 to i64
  %89 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN16SkWritePixelsRec4trimEii.2, i64 0, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = mul i32 %87, %90
  %92 = sub i32 0, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %85, i64 %93
  store i8* %94, i8** %7, align 8
  %95 = load i32, i32* %44, align 8
  %96 = load i32, i32* %41, align 8
  %97 = sub i32 %95, %96
  %98 = load i32, i32* %45, align 4
  %99 = load i32, i32* %42, align 4
  %100 = sub i32 %98, %99
  %101 = zext i32 %100 to i64
  %102 = shl nuw i64 %101, 32
  %103 = zext i32 %97 to i64
  %104 = or i64 %102, %103
  %105 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %106 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %107 = icmp eq %class.SkColorSpace* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %77
  %109 = bitcast i32* %16 to i64*
  %110 = load i64, i64* %109, align 8, !noalias !7
  %111 = bitcast %struct.SkImageInfo* %12 to i64*
  store i64 0, i64* %111, align 8
  br label %127

112:                                              ; preds = %77
  %113 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 1 monotonic, !noalias !7
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %116 = ptrtoint %class.SkColorSpace* %106 to i64
  %117 = bitcast i32* %16 to i64*
  %118 = load i64, i64* %117, align 8, !noalias !7
  %119 = bitcast %struct.SkImageInfo* %12 to i64*
  store i64 %116, i64* %119, align 8
  %120 = icmp eq %class.SkColorSpace* %115, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %112
  %122 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 -1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = bitcast %class.SkColorSpace* %115 to i8*
  call void @_ZdlPv(i8* %126) #7
  br label %127

127:                                              ; preds = %125, %121, %112, %108
  %128 = phi i64 [ %110, %108 ], [ %118, %112 ], [ %118, %121 ], [ %118, %125 ]
  %129 = phi i64* [ %109, %108 ], [ %117, %112 ], [ %117, %121 ], [ %117, %125 ]
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %struct.SkWritePixelsRec, %struct.SkWritePixelsRec* %0, i64 0, i32 2, i32 1
  %131 = bitcast %struct.SkISize* %130 to i64*
  store i64 %104, i64* %131, align 8
  %132 = load i32, i32* %41, align 8
  store i32 %132, i32* %36, align 8
  %133 = load i32, i32* %42, align 4
  store i32 %133, i32* %38, align 4
  br label %134

134:                                              ; preds = %35, %127
  %135 = phi i1 [ true, %127 ], [ false, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #6
  br label %136

136:                                              ; preds = %31, %3, %20, %134
  %137 = phi i1 [ %135, %134 ], [ false, %20 ], [ false, %3 ], [ false, %31 ]
  ret i1 %137
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!5 = distinct !{!5, !6, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!6 = distinct !{!6, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!9 = distinct !{!9, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!10 = distinct !{!10, !11, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!11 = distinct !{!11, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
