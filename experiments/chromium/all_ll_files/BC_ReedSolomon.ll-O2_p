; ModuleID = '../../third_party/pdfium/fxbarcode/common/reedsolomon/BC_ReedSolomon.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/common/reedsolomon/BC_ReedSolomon.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.CBC_ReedSolomonEncoder = type { %"class.fxcrt::UnownedPtr", %"class.std::__1::vector" }
%"class.fxcrt::UnownedPtr" = type { %class.CBC_ReedSolomonGF256* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CBC_ReedSolomonGF256Poly* }
%class.CBC_ReedSolomonGF256Poly = type { %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.4" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { i32*, i32*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i32* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%class.CBC_ReedSolomonGF256 = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", [256 x i32], [256 x i32] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrI24CBC_ReedSolomonGF256PolyNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZN22CBC_ReedSolomonEncoderC1EP20CBC_ReedSolomonGF256 = hidden unnamed_addr alias void (%class.CBC_ReedSolomonEncoder*, %class.CBC_ReedSolomonGF256*), void (%class.CBC_ReedSolomonEncoder*, %class.CBC_ReedSolomonGF256*)* @_ZN22CBC_ReedSolomonEncoderC2EP20CBC_ReedSolomonGF256
@_ZN22CBC_ReedSolomonEncoderD1Ev = hidden unnamed_addr alias void (%class.CBC_ReedSolomonEncoder*), void (%class.CBC_ReedSolomonEncoder*)* @_ZN22CBC_ReedSolomonEncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22CBC_ReedSolomonEncoderC2EP20CBC_ReedSolomonGF256(%class.CBC_ReedSolomonEncoder*, %class.CBC_ReedSolomonGF256*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 0, i32 0
  store %class.CBC_ReedSolomonGF256* %1, %class.CBC_ReedSolomonGF256** %5, align 8
  %6 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = tail call i8* @_Znwm(i64 4) #11
  %11 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector.4"* %4 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 4
  %14 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i32** %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = bitcast i32** %11 to i64*
  %17 = bitcast i8* %10 to i32*
  store i32 1, i32* %17, align 4
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %16, align 8
  %19 = tail call i8* @_Znwm(i64 32) #11
  %20 = bitcast i8* %19 to %class.CBC_ReedSolomonGF256Poly*
  call void @_ZN24CBC_ReedSolomonGF256PolyC1EP20CBC_ReedSolomonGF256RKNSt3__16vectorIiNS2_9allocatorIiEEEE(%class.CBC_ReedSolomonGF256Poly* nonnull %20, %class.CBC_ReedSolomonGF256* %1, %"class.std::__1::vector.4"* nonnull dereferenceable(24) %4) #10
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %19, i8** %22, align 8
  %23 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = icmp ult %"class.std::__1::unique_ptr"* %24, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %2
  %29 = ptrtoint i8* %19 to i64
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %21, align 8
  %30 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 1
  %32 = ptrtoint %"class.std::__1::unique_ptr"* %31 to i64
  %33 = bitcast %"class.std::__1::unique_ptr"** %23 to i64*
  store i64 %32, i64* %33, align 8
  br label %35

34:                                               ; preds = %2
  call void @_ZNSt3__16vectorINS_10unique_ptrI24CBC_ReedSolomonGF256PolyNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #10
  br label %35

35:                                               ; preds = %28, %34
  %36 = load %class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly** %21, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %21, align 8
  %37 = icmp eq %class.CBC_ReedSolomonGF256Poly* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %36) #10
  %39 = bitcast %class.CBC_ReedSolomonGF256Poly* %36 to i8*
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %35, %38
  %41 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = ptrtoint i32* %42 to i64
  store i64 %45, i64* %16, align 8
  %46 = bitcast i32* %42 to i8*
  call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22CBC_ReedSolomonEncoderD2Ev(%class.CBC_ReedSolomonEncoder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly** %14, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %14, align 8
  %16 = icmp eq %class.CBC_ReedSolomonGF256Poly* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %15) #10
  %18 = bitcast %class.CBC_ReedSolomonGF256Poly* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CBC_ReedSolomonGF256Poly* @_ZN22CBC_ReedSolomonEncoder14BuildGeneratorEm(%class.CBC_ReedSolomonEncoder*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CBC_ReedSolomonGF256Poly, align 8
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %13, %1
  %15 = inttoptr i64 %11 to %"class.std::__1::unique_ptr"*
  br i1 %14, label %79, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %9 to %"class.std::__1::unique_ptr"*
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 -1, i32 0, i32 0, i32 0
  %19 = load %class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly** %18, align 8
  %20 = bitcast %class.CBC_ReedSolomonGF256Poly* %3 to i8*
  %21 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  %23 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::vector.4"* %4 to i8**
  %25 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i32** %25 to i8**
  %27 = bitcast i32** %23 to i64*
  %28 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %class.CBC_ReedSolomonGF256Poly* %3 to i8*
  br label %35

33:                                               ; preds = %72
  %34 = icmp ugt i64 %75, %1
  br i1 %34, label %76, label %35

35:                                               ; preds = %16, %33
  %36 = phi %class.CBC_ReedSolomonGF256Poly* [ %19, %16 ], [ %73, %33 ]
  %37 = phi i64 [ %13, %16 ], [ %75, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %38 = load %class.CBC_ReedSolomonGF256*, %class.CBC_ReedSolomonGF256** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %39 = trunc i64 %37 to i32
  %40 = add i32 %39, -1
  %41 = call i32 @_ZN20CBC_ReedSolomonGF2563ExpEi(%class.CBC_ReedSolomonGF256* %38, i32 %40) #10
  %42 = call i8* @_Znwm(i64 8) #11
  %43 = bitcast i8* %42 to i32*
  store i8* %42, i8** %24, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  store i8* %44, i8** %26, align 8
  store i32 1, i32* %43, align 4
  %45 = getelementptr inbounds i8, i8* %42, i64 4
  %46 = bitcast i8* %45 to i32*
  store i32 %41, i32* %46, align 4
  %47 = ptrtoint i8* %44 to i64
  store i64 %47, i64* %27, align 8
  call void @_ZN24CBC_ReedSolomonGF256PolyC1EP20CBC_ReedSolomonGF256RKNSt3__16vectorIiNS2_9allocatorIiEEEE(%class.CBC_ReedSolomonGF256Poly* nonnull %3, %class.CBC_ReedSolomonGF256* %38, %"class.std::__1::vector.4"* nonnull dereferenceable(24) %4) #10
  %48 = load i32*, i32** %28, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %35
  %51 = ptrtoint i32* %48 to i64
  store i64 %51, i64* %27, align 8
  %52 = bitcast i32* %48 to i8*
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %35, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  store %class.CBC_ReedSolomonGF256Poly* inttoptr (i64 -6148914691236517206 to %class.CBC_ReedSolomonGF256Poly*), %class.CBC_ReedSolomonGF256Poly** %30, align 8
  %54 = call %class.CBC_ReedSolomonGF256Poly* @_ZN24CBC_ReedSolomonGF256Poly8MultiplyEPKS_(%class.CBC_ReedSolomonGF256Poly* %36, %class.CBC_ReedSolomonGF256Poly* nonnull %3) #10
  store %class.CBC_ReedSolomonGF256Poly* %54, %class.CBC_ReedSolomonGF256Poly** %30, align 8
  %55 = icmp eq %class.CBC_ReedSolomonGF256Poly* %54, null
  %56 = ptrtoint %class.CBC_ReedSolomonGF256Poly* %54 to i64
  br i1 %55, label %57, label %58

57:                                               ; preds = %53
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %30, align 8
  br label %72

58:                                               ; preds = %53
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %61 = icmp ult %"class.std::__1::unique_ptr"* %59, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %30, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  store i64 %56, i64* %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %64 to i64
  store i64 %65, i64* %8, align 8
  br label %67

66:                                               ; preds = %58
  call void @_ZNSt3__16vectorINS_10unique_ptrI24CBC_ReedSolomonGF256PolyNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #10
  br label %67

67:                                               ; preds = %66, %62
  %68 = load %class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly** %30, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %30, align 8
  %69 = icmp eq %class.CBC_ReedSolomonGF256Poly* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %68) #10
  %71 = bitcast %class.CBC_ReedSolomonGF256Poly* %68 to i8*
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %57, %67, %70
  %73 = phi %class.CBC_ReedSolomonGF256Poly* [ %36, %57 ], [ %54, %67 ], [ %54, %70 ]
  %74 = phi i1 [ false, %57 ], [ true, %67 ], [ true, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  %75 = add i64 %37, 1
  br i1 %74, label %33, label %83

76:                                               ; preds = %33
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %77, align 8
  br label %79

79:                                               ; preds = %76, %2
  %80 = phi %"class.std::__1::unique_ptr"* [ %78, %76 ], [ %15, %2 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 %1, i32 0, i32 0, i32 0
  %82 = load %class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly** %81, align 8
  br label %83

83:                                               ; preds = %72, %79
  %84 = phi %class.CBC_ReedSolomonGF256Poly* [ %82, %79 ], [ null, %72 ]
  ret %class.CBC_ReedSolomonGF256Poly* %84
}

declare i32 @_ZN20CBC_ReedSolomonGF2563ExpEi(%class.CBC_ReedSolomonGF256*, i32) local_unnamed_addr #2

declare void @_ZN24CBC_ReedSolomonGF256PolyC1EP20CBC_ReedSolomonGF256RKNSt3__16vectorIiNS2_9allocatorIiEEEE(%class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256*, %"class.std::__1::vector.4"* dereferenceable(24)) unnamed_addr #2

declare %class.CBC_ReedSolomonGF256Poly* @_ZN24CBC_ReedSolomonGF256Poly8MultiplyEPKS_(%class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22CBC_ReedSolomonEncoder6EncodeEPNSt3__16vectorIiNS0_9allocatorIiEEEEm(%class.CBC_ReedSolomonEncoder*, %"class.std::__1::vector.4"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = alloca %class.CBC_ReedSolomonGF256Poly, align 8
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %206, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %1, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.4"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %2
  br i1 %15, label %16, label %206

16:                                               ; preds = %7
  %17 = tail call %class.CBC_ReedSolomonGF256Poly* @_ZN22CBC_ReedSolomonEncoder14BuildGeneratorEm(%class.CBC_ReedSolomonEncoder* %0, i64 %2)
  %18 = icmp eq %class.CBC_ReedSolomonGF256Poly* %17, null
  br i1 %18, label %206, label %19

19:                                               ; preds = %16
  %20 = load i64, i64* %9, align 8
  %21 = load i64, i64* %11, align 8
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 2
  %24 = sub i64 %23, %2
  %25 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #10
  %29 = icmp eq i64 %24, 0
  %30 = inttoptr i64 %21 to i32*
  br i1 %29, label %76, label %31

31:                                               ; preds = %19
  %32 = icmp ugt i64 %24, 4611686018427387903
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.4"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %34) #12
  unreachable

35:                                               ; preds = %31
  %36 = shl i64 %24, 2
  %37 = tail call i8* @_Znwm(i64 %36) #11
  %38 = bitcast i8* %37 to i32*
  %39 = bitcast %"class.std::__1::vector.4"* %4 to i8**
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds i32, i32* %38, i64 %24
  store i32* %40, i32** %28, align 8
  %41 = bitcast i32** %27 to i64*
  %42 = ptrtoint i8* %37 to i64
  %43 = add nsw i64 %24, -1
  %44 = getelementptr i32, i32* %38, i64 %43
  %45 = ptrtoint i32* %44 to i64
  %46 = sub i64 4, %42
  %47 = add i64 %46, %45
  %48 = and i64 %47, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 %48, i1 false) #10
  %49 = ptrtoint i32* %40 to i64
  store i64 %49, i64* %41, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %1, i64 0, i32 0, i32 0
  %51 = load i32, i32* %30, align 4
  store i32 %51, i32* %38, align 4
  %52 = icmp eq i64 %24, 1
  br i1 %52, label %76, label %53

53:                                               ; preds = %35
  %54 = xor i64 %2, -1
  %55 = add i64 %23, %54
  %56 = add nsw i64 %23, -2
  %57 = sub i64 %56, %2
  %58 = and i64 %55, 3
  %59 = icmp ult i64 %57, 3
  br i1 %59, label %62, label %60

60:                                               ; preds = %53
  %61 = sub i64 %55, %58
  br label %84

62:                                               ; preds = %84, %53
  %63 = phi i64 [ 1, %53 ], [ %110, %84 ]
  %64 = icmp eq i64 %58, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %73, %65 ], [ %63, %62 ]
  %67 = phi i64 [ %74, %65 ], [ %58, %62 ]
  %68 = load i32*, i32** %50, align 8
  %69 = load i32*, i32** %26, align 8
  %70 = getelementptr inbounds i32, i32* %68, i64 %66
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds i32, i32* %69, i64 %66
  store i32 %71, i32* %72, align 4
  %73 = add nuw i64 %66, 1
  %74 = add i64 %67, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %65, !llvm.loop !2

76:                                               ; preds = %62, %65, %35, %19
  %77 = bitcast %class.CBC_ReedSolomonGF256Poly* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #10
  %78 = getelementptr inbounds %class.CBC_ReedSolomonEncoder, %class.CBC_ReedSolomonEncoder* %0, i64 0, i32 0, i32 0
  %79 = bitcast %class.CBC_ReedSolomonGF256Poly* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 32, i1 false)
  %80 = load %class.CBC_ReedSolomonGF256*, %class.CBC_ReedSolomonGF256** %78, align 8
  call void @_ZN24CBC_ReedSolomonGF256PolyC1EP20CBC_ReedSolomonGF256RKNSt3__16vectorIiNS2_9allocatorIiEEEE(%class.CBC_ReedSolomonGF256Poly* nonnull %5, %class.CBC_ReedSolomonGF256* %80, %"class.std::__1::vector.4"* nonnull dereferenceable(24) %4) #10
  %81 = trunc i64 %2 to i32
  %82 = call %class.CBC_ReedSolomonGF256Poly* @_ZNK24CBC_ReedSolomonGF256Poly18MultiplyByMonomialEii(%class.CBC_ReedSolomonGF256Poly* nonnull %5, i32 %81, i32 1) #10
  %83 = icmp eq %class.CBC_ReedSolomonGF256Poly* %82, null
  br i1 %83, label %197, label %113

84:                                               ; preds = %84, %60
  %85 = phi i64 [ 1, %60 ], [ %110, %84 ]
  %86 = phi i64 [ %61, %60 ], [ %111, %84 ]
  %87 = load i32*, i32** %50, align 8
  %88 = load i32*, i32** %26, align 8
  %89 = getelementptr inbounds i32, i32* %87, i64 %85
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds i32, i32* %88, i64 %85
  store i32 %90, i32* %91, align 4
  %92 = add nuw nsw i64 %85, 1
  %93 = load i32*, i32** %50, align 8
  %94 = load i32*, i32** %26, align 8
  %95 = getelementptr inbounds i32, i32* %93, i64 %92
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds i32, i32* %94, i64 %92
  store i32 %96, i32* %97, align 4
  %98 = add nuw nsw i64 %85, 2
  %99 = load i32*, i32** %50, align 8
  %100 = load i32*, i32** %26, align 8
  %101 = getelementptr inbounds i32, i32* %99, i64 %98
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds i32, i32* %100, i64 %98
  store i32 %102, i32* %103, align 4
  %104 = add nuw i64 %85, 3
  %105 = load i32*, i32** %50, align 8
  %106 = load i32*, i32** %26, align 8
  %107 = getelementptr inbounds i32, i32* %105, i64 %104
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds i32, i32* %106, i64 %104
  store i32 %108, i32* %109, align 4
  %110 = add nuw i64 %85, 4
  %111 = add i64 %86, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %62, label %84

113:                                              ; preds = %76
  %114 = call %class.CBC_ReedSolomonGF256Poly* @_ZN24CBC_ReedSolomonGF256Poly6DivideEPKS_(%class.CBC_ReedSolomonGF256Poly* nonnull %82, %class.CBC_ReedSolomonGF256Poly* nonnull %17) #10
  %115 = icmp eq %class.CBC_ReedSolomonGF256Poly* %114, null
  br i1 %115, label %194, label %116

116:                                              ; preds = %113
  %117 = call dereferenceable(24) %"class.std::__1::vector.4"* @_ZNK24CBC_ReedSolomonGF256Poly15GetCoefficientsEv(%class.CBC_ReedSolomonGF256Poly* nonnull %114) #10
  %118 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %117, i64 0, i32 0, i32 1
  %119 = bitcast i32** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.std::__1::vector.4"* %117 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %120, %122
  %124 = ashr exact i64 %123, 2
  %125 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %124)
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %149, label %127

127:                                              ; preds = %116
  %128 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %1, i64 0, i32 0, i32 0
  %129 = add i64 %125, -1
  %130 = and i64 %125, 3
  %131 = icmp ult i64 %129, 3
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = sub i64 %125, %130
  br label %156

134:                                              ; preds = %156, %127
  %135 = phi i64 [ 0, %127 ], [ %174, %156 ]
  %136 = icmp eq i64 %130, 0
  br i1 %136, label %146, label %137

137:                                              ; preds = %134, %137
  %138 = phi i64 [ %143, %137 ], [ %135, %134 ]
  %139 = phi i64 [ %144, %137 ], [ %130, %134 ]
  %140 = add i64 %138, %24
  %141 = load i32*, i32** %128, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 %140
  store i32 0, i32* %142, align 4
  %143 = add nuw i64 %138, 1
  %144 = add i64 %139, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %137, !llvm.loop !4

146:                                              ; preds = %137, %134
  %147 = load i64, i64* %119, align 8
  %148 = load i64, i64* %121, align 8
  br label %149

149:                                              ; preds = %146, %116
  %150 = phi i64 [ %148, %146 ], [ %122, %116 ]
  %151 = phi i64 [ %147, %146 ], [ %120, %116 ]
  %152 = icmp eq i64 %151, %150
  br i1 %152, label %192, label %153

153:                                              ; preds = %149
  %154 = add i64 %125, %24
  %155 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %1, i64 0, i32 0, i32 0
  br label %177

156:                                              ; preds = %156, %132
  %157 = phi i64 [ 0, %132 ], [ %174, %156 ]
  %158 = phi i64 [ %133, %132 ], [ %175, %156 ]
  %159 = add i64 %157, %24
  %160 = load i32*, i32** %128, align 8
  %161 = getelementptr inbounds i32, i32* %160, i64 %159
  store i32 0, i32* %161, align 4
  %162 = or i64 %157, 1
  %163 = add i64 %162, %24
  %164 = load i32*, i32** %128, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 %163
  store i32 0, i32* %165, align 4
  %166 = or i64 %157, 2
  %167 = add i64 %166, %24
  %168 = load i32*, i32** %128, align 8
  %169 = getelementptr inbounds i32, i32* %168, i64 %167
  store i32 0, i32* %169, align 4
  %170 = or i64 %157, 3
  %171 = add i64 %170, %24
  %172 = load i32*, i32** %128, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 %171
  store i32 0, i32* %173, align 4
  %174 = add nuw i64 %157, 4
  %175 = add i64 %158, -4
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %134, label %156

177:                                              ; preds = %153, %177
  %178 = phi i64 [ %150, %153 ], [ %188, %177 ]
  %179 = phi i64 [ 0, %153 ], [ %186, %177 ]
  %180 = inttoptr i64 %178 to i32*
  %181 = getelementptr inbounds i32, i32* %180, i64 %179
  %182 = load i32, i32* %181, align 4
  %183 = add i64 %154, %179
  %184 = load i32*, i32** %155, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 %183
  store i32 %182, i32* %185, align 4
  %186 = add nuw i64 %179, 1
  %187 = load i64, i64* %119, align 8
  %188 = load i64, i64* %121, align 8
  %189 = sub i64 %187, %188
  %190 = ashr exact i64 %189, 2
  %191 = icmp ult i64 %186, %190
  br i1 %191, label %177, label %192

192:                                              ; preds = %177, %149
  call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %114) #10
  %193 = bitcast %class.CBC_ReedSolomonGF256Poly* %114 to i8*
  call void @_ZdlPv(i8* %193) #11
  br label %194

194:                                              ; preds = %192, %113
  %195 = phi i1 [ true, %192 ], [ false, %113 ]
  call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %82) #10
  %196 = bitcast %class.CBC_ReedSolomonGF256Poly* %82 to i8*
  call void @_ZdlPv(i8* %196) #11
  br label %197

197:                                              ; preds = %76, %194
  %198 = phi i1 [ %195, %194 ], [ false, %76 ]
  call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #10
  %199 = load i32*, i32** %26, align 8
  %200 = icmp eq i32* %199, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %197
  %202 = ptrtoint i32* %199 to i64
  %203 = bitcast i32** %27 to i64*
  store i64 %202, i64* %203, align 8
  %204 = bitcast i32* %199 to i8*
  call void @_ZdlPv(i8* %204) #11
  br label %205

205:                                              ; preds = %197, %201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br label %206

206:                                              ; preds = %205, %16, %7, %3
  %207 = phi i1 [ false, %3 ], [ false, %7 ], [ %198, %205 ], [ false, %16 ]
  ret i1 %207
}

declare %class.CBC_ReedSolomonGF256Poly* @_ZNK24CBC_ReedSolomonGF256Poly18MultiplyByMonomialEii(%class.CBC_ReedSolomonGF256Poly*, i32, i32) local_unnamed_addr #2

declare %class.CBC_ReedSolomonGF256Poly* @_ZN24CBC_ReedSolomonGF256Poly6DivideEPKS_(%class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.4"* @_ZNK24CBC_ReedSolomonGF256Poly15GetCoefficientsEv(%class.CBC_ReedSolomonGF256Poly*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI24CBC_ReedSolomonGF256PolyNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CBC_ReedSolomonGF256Poly** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !5

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CBC_ReedSolomonGF256Poly*, %class.CBC_ReedSolomonGF256Poly** %142, align 8
  store %class.CBC_ReedSolomonGF256Poly* null, %class.CBC_ReedSolomonGF256Poly** %142, align 8
  %144 = icmp eq %class.CBC_ReedSolomonGF256Poly* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN24CBC_ReedSolomonGF256PolyD1Ev(%class.CBC_ReedSolomonGF256Poly* nonnull %143) #10
  %146 = bitcast %class.CBC_ReedSolomonGF256Poly* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
