; ModuleID = '../../third_party/icu/source/common/unames.cpp'
source_filename = "../../third_party/icu/source/common/unames.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.icu_69::UCharNames" = type { i32, i32, i32, i32 }
%struct.UDataMemory = type opaque
%"struct.icu_69::AlgorithmicRange" = type { i32, i32, i8, i8, i16 }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::FindName" = type { i8*, i32 }
%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.UDataSwapper = type { i8, i8, i8, i8, i16 (i16)*, i32 (i32)*, i32 (%struct.UDataSwapper*, i8*, i32, i16*, i32)*, void (i16*, i16)*, void (i32*, i32)*, {}*, {}*, {}*, {}*, void (i8*, i8*, %struct.__va_list_tag*)*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.UDataInfo = type { i16, i16, i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8] }

@_ZN6icu_69L10uCharNamesE = internal unnamed_addr global %"struct.icu_69::UCharNames"* null, align 8
@_ZN6icu_69L12charCatNamesE = internal unnamed_addr constant [33 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i32 0, i32 0)], align 16
@_ZN6icu_69L14gMaxNameLengthE = internal unnamed_addr global i32 0, align 4
@_ZN6icu_69L8gNameSetE = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [106 x i8] c"uchar_swapNames(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as unames.icu\0A\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"uchar_swapNames(): too few bytes (%d after header) for unames.icu\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"out of memory swapping %u unames.icu tokens\0A\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"uchar_swapNames(token strings) failed\0A\00", align 1
@.str.4 = private unnamed_addr constant [88 x i8] c"uchar_swapNames(): too few bytes (%d after header) for unames.icu algorithmic range %u\0A\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c"uchar_swapNames(prefix string of algorithmic range %u) failed\0A\00", align 1
@.str.6 = private unnamed_addr constant [60 x i8] c"uchar_swapNames(): unknown type %u of algorithmic range %u\0A\00", align 1
@_ZN6icu_69L18gCharNamesInitOnceE = internal global { { { i32 } }, i32 } zeroinitializer, align 4
@_ZN6icu_69L9DATA_TYPEE = internal constant [4 x i8] c"icu\00", align 1
@_ZN6icu_69L9DATA_NAMEE = internal constant [7 x i8] c"unames\00", align 1
@_ZN6icu_69L14uCharNamesDataE = internal unnamed_addr global %struct.UDataMemory* null, align 8
@.str.8 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"unassigned\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"uppercase letter\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"lowercase letter\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"titlecase letter\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"modifier letter\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"other letter\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"non spacing mark\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"enclosing mark\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"combining spacing mark\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"decimal digit number\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"letter number\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"other number\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"space separator\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"line separator\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"paragraph separator\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"control\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"private use area\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"surrogate\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"dash punctuation\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"start punctuation\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"end punctuation\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"connector punctuation\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"other punctuation\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"math symbol\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"currency symbol\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"modifier symbol\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"other symbol\00", align 1
@.str.37 = private unnamed_addr constant [20 x i8] c"initial punctuation\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"final punctuation\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"noncharacter\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"lead surrogate\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"trail surrogate\00", align 1
@.str.42 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN6icu_69L19calcNameSetsLengthsEP10UErrorCodeE8extChars = internal unnamed_addr constant [20 x i8] c"0123456789ABCDEF<>-\00", align 16
@.str.43 = private unnamed_addr constant [85 x i8] c"unames/makeTokenMap() finds variant character 0x%02x used (input charset family %d)\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_charName_69(i32, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %75, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %75

10:                                               ; preds = %7
  %11 = icmp sgt i32 %1, 3
  %12 = icmp slt i32 %3, 0
  %13 = or i1 %11, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = icmp sgt i32 %3, 0
  %16 = icmp eq i8* %2, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %14, %10
  store i32 1, i32* %4, align 4
  br label %75

19:                                               ; preds = %14
  %20 = icmp ugt i32 %0, 1114111
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = tail call fastcc signext i8 @_ZN6icu_69L12isDataLoadedEP10UErrorCode(i32* nonnull %4)
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %21, %19
  %25 = tail call i32 @u_terminateChars_69(i8* %2, i32 %3, i32 0, i32* nonnull %4) #8
  br label %75

26:                                               ; preds = %21
  %27 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  %28 = bitcast %"struct.icu_69::UCharNames"* %27 to i8*
  %29 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %27, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %61, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds i8, i8* %32, i64 4
  br label %38

38:                                               ; preds = %36, %49
  %39 = phi i8* [ %54, %49 ], [ %37, %36 ]
  %40 = phi i32 [ %55, %49 ], [ %34, %36 ]
  %41 = bitcast i8* %39 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp ugt i32 %42, %0
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds i8, i8* %39, i64 4
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp ult i32 %47, %0
  br i1 %48, label %49, label %57

49:                                               ; preds = %44, %38
  %50 = getelementptr inbounds i8, i8* %39, i64 10
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = getelementptr inbounds i8, i8* %39, i64 %53
  %55 = add i32 %40, -1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %38

57:                                               ; preds = %44
  %58 = bitcast i8* %39 to %"struct.icu_69::AlgorithmicRange"*
  %59 = trunc i32 %3 to i16
  %60 = tail call fastcc zeroext i16 @_ZN6icu_69L10getAlgNameEPNS_16AlgorithmicRangeEj15UCharNameChoicePct(%"struct.icu_69::AlgorithmicRange"* %58, i32 %0, i32 %1, i8* %2, i16 zeroext %59)
  br label %71

61:                                               ; preds = %49, %26
  %62 = icmp eq i32 %1, 2
  %63 = trunc i32 %3 to i16
  br i1 %62, label %64, label %69

64:                                               ; preds = %61
  %65 = tail call fastcc zeroext i16 @_ZN6icu_69L7getNameEPNS_10UCharNamesEj15UCharNameChoicePct(%"struct.icu_69::UCharNames"* %27, i32 %0, i32 2, i8* %2, i16 zeroext %63)
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %64
  %68 = tail call fastcc zeroext i16 @_ZN6icu_69L10getExtNameEjPct(i32 %0, i8* %2, i16 zeroext %63)
  br label %71

69:                                               ; preds = %61
  %70 = tail call fastcc zeroext i16 @_ZN6icu_69L7getNameEPNS_10UCharNamesEj15UCharNameChoicePct(%"struct.icu_69::UCharNames"* %27, i32 %0, i32 %1, i8* %2, i16 zeroext %63)
  br label %71

71:                                               ; preds = %57, %64, %69, %67
  %72 = phi i16 [ %65, %64 ], [ %68, %67 ], [ %70, %69 ], [ %60, %57 ]
  %73 = zext i16 %72 to i32
  %74 = tail call i32 @u_terminateChars_69(i8* %2, i32 %3, i32 %73, i32* nonnull %4) #8
  br label %75

75:                                               ; preds = %5, %7, %71, %24, %18
  %76 = phi i32 [ 0, %18 ], [ %25, %24 ], [ %74, %71 ], [ 0, %7 ], [ 0, %5 ]
  ret i32 %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZN6icu_69L12isDataLoadedEP10UErrorCode(i32*) unnamed_addr #0 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %23

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L18gCharNamesInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %19, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L18gCharNamesInitOnceE to %"struct.icu_69::UInitOnce"*)) #8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %7
  %11 = tail call %struct.UDataMemory* @udata_openChoice_69(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN6icu_69L9DATA_TYPEE, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN6icu_69L9DATA_NAMEE, i64 0, i64 0), i8 (i8*, i8*, i8*, %struct.UDataInfo*)* nonnull @_ZN6icu_69L12isAcceptableEPvPKcS2_PK9UDataInfo, i8* null, i32* %0) #8
  store %struct.UDataMemory* %11, %struct.UDataMemory** @_ZN6icu_69L14uCharNamesDataE, align 8
  %12 = load i32, i32* %0, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  store %struct.UDataMemory* null, %struct.UDataMemory** @_ZN6icu_69L14uCharNamesDataE, align 8
  br label %17

15:                                               ; preds = %10
  %16 = tail call i8* @udata_getMemory_69(%struct.UDataMemory* %11) #8
  store i8* %16, i8** bitcast (%"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE to i8**), align 8
  br label %17

17:                                               ; preds = %14, %15
  tail call void @ucln_common_registerCleanup_69(i32 18, i8 ()* nonnull @_ZN6icu_69L14unames_cleanupEv) #8
  %18 = load i32, i32* %0, align 4
  store i32 %18, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L18gCharNamesInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L18gCharNamesInitOnceE to %"struct.icu_69::UInitOnce"*)) #8
  br label %23

19:                                               ; preds = %7, %4
  %20 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L18gCharNamesInitOnceE, i64 0, i32 1), align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  store i32 %20, i32* %0, align 4
  br label %23

23:                                               ; preds = %1, %17, %19, %22
  %24 = load i32, i32* %0, align 4
  %25 = icmp slt i32 %24, 1
  %26 = zext i1 %25 to i8
  ret i8 %26
}

declare i32 @u_terminateChars_69(i8*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i16 @_ZN6icu_69L10getAlgNameEPNS_16AlgorithmicRangeEj15UCharNameChoicePct(%"struct.icu_69::AlgorithmicRange"*, i32, i32, i8* nocapture, i16 zeroext) unnamed_addr #0 {
  %6 = alloca [8 x i16], align 16
  %7 = and i32 %2, -3
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = icmp eq i16 %4, 0
  br i1 %10, label %275, label %11

11:                                               ; preds = %9
  store i8 0, i8* %3, align 1
  br label %275

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  switch i8 %14, label %272 [
    i8 0, label %15
    i8 1, label %75
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 1
  %17 = bitcast %"struct.icu_69::AlgorithmicRange"* %16 to i8*
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %15, %31
  %21 = phi i8 [ %35, %31 ], [ %18, %15 ]
  %22 = phi i8* [ %26, %31 ], [ %17, %15 ]
  %23 = phi i16 [ %34, %31 ], [ 0, %15 ]
  %24 = phi i16 [ %33, %31 ], [ %4, %15 ]
  %25 = phi i8* [ %32, %31 ], [ %3, %15 ]
  %26 = getelementptr inbounds i8, i8* %22, i64 1
  %27 = icmp eq i16 %24, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %21, i8* %25, align 1
  %30 = add i16 %24, -1
  br label %31

31:                                               ; preds = %20, %28
  %32 = phi i8* [ %29, %28 ], [ %25, %20 ]
  %33 = phi i16 [ %30, %28 ], [ 0, %20 ]
  %34 = add i16 %23, 1
  %35 = load i8, i8* %26, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %20

37:                                               ; preds = %31, %15
  %38 = phi i8* [ %3, %15 ], [ %32, %31 ]
  %39 = phi i16 [ %4, %15 ], [ %33, %31 ]
  %40 = phi i16 [ 0, %15 ], [ %34, %31 ]
  %41 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 0, i32 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  %44 = zext i8 %42 to i32
  %45 = zext i16 %39 to i32
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %37
  %48 = zext i8 %42 to i64
  %49 = getelementptr inbounds i8, i8* %38, i64 %48
  store i8 0, i8* %49, align 1
  br label %50

50:                                               ; preds = %47, %37
  %51 = icmp eq i8 %42, 0
  br i1 %51, label %73, label %52

52:                                               ; preds = %50
  %53 = zext i8 %42 to i64
  br label %54

54:                                               ; preds = %52, %69
  %55 = phi i64 [ %53, %52 ], [ %72, %69 ]
  %56 = phi i32 [ %1, %52 ], [ %70, %69 ]
  %57 = trunc i64 %55 to i16
  %58 = add nsw i16 %57, -1
  %59 = icmp ult i16 %58, %39
  br i1 %59, label %60, label %69

60:                                               ; preds = %54
  %61 = and i32 %56, 15
  %62 = icmp ult i32 %61, 10
  %63 = trunc i32 %61 to i8
  %64 = or i8 %63, 48
  %65 = add nuw nsw i8 %63, 55
  %66 = select i1 %62, i8 %64, i8 %65
  %67 = zext i16 %58 to i64
  %68 = getelementptr inbounds i8, i8* %38, i64 %67
  store i8 %66, i8* %68, align 1
  br label %69

69:                                               ; preds = %60, %54
  %70 = lshr i32 %56, 4
  %71 = icmp eq i16 %58, 0
  %72 = add nsw i64 %55, -1
  br i1 %71, label %73, label %54

73:                                               ; preds = %69, %50
  %74 = add i16 %40, %43
  br label %275

75:                                               ; preds = %12
  %76 = bitcast [8 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  %77 = getelementptr inbounds [8 x i16], [8 x i16]* %6, i64 0, i64 0
  %78 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 1
  %79 = bitcast %"struct.icu_69::AlgorithmicRange"* %78 to i16*
  %80 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 0, i32 3
  %81 = bitcast [8 x i16]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %81, i8 -86, i64 16, i1 false)
  %82 = load i8, i8* %80, align 1
  %83 = zext i8 %82 to i16
  %84 = zext i8 %82 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  %86 = bitcast i16* %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  %88 = load i8, i8* %86, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %107, label %90

90:                                               ; preds = %75, %100
  %91 = phi i8 [ %105, %100 ], [ %88, %75 ]
  %92 = phi i8* [ %104, %100 ], [ %87, %75 ]
  %93 = phi i16 [ %103, %100 ], [ 0, %75 ]
  %94 = phi i16 [ %102, %100 ], [ %4, %75 ]
  %95 = phi i8* [ %101, %100 ], [ %3, %75 ]
  %96 = icmp eq i16 %94, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds i8, i8* %95, i64 1
  store i8 %91, i8* %95, align 1
  %99 = add i16 %94, -1
  br label %100

100:                                              ; preds = %90, %97
  %101 = phi i8* [ %98, %97 ], [ %95, %90 ]
  %102 = phi i16 [ %99, %97 ], [ 0, %90 ]
  %103 = add i16 %93, 1
  %104 = getelementptr inbounds i8, i8* %92, i64 1
  %105 = load i8, i8* %92, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %90

107:                                              ; preds = %100, %75
  %108 = phi i8* [ %3, %75 ], [ %101, %100 ]
  %109 = phi i16 [ %4, %75 ], [ %102, %100 ]
  %110 = phi i16 [ 0, %75 ], [ %103, %100 ]
  %111 = phi i8* [ %87, %75 ], [ %104, %100 ]
  %112 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 %1, %113
  %115 = add nsw i16 %83, -1
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %155, label %117

117:                                              ; preds = %107
  %118 = zext i16 %115 to i64
  %119 = and i64 %118, 1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %130, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds i16, i16* %79, i64 %118
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = urem i32 %114, %124
  %126 = trunc i32 %125 to i16
  %127 = getelementptr inbounds [8 x i16], [8 x i16]* %6, i64 0, i64 %118
  store i16 %126, i16* %127, align 2
  %128 = udiv i32 %114, %124
  %129 = add nsw i64 %118, -1
  br label %130

130:                                              ; preds = %117, %121
  %131 = phi i32 [ undef, %117 ], [ %128, %121 ]
  %132 = phi i64 [ %118, %117 ], [ %129, %121 ]
  %133 = phi i32 [ %114, %117 ], [ %128, %121 ]
  %134 = icmp eq i16 %115, 1
  br i1 %134, label %155, label %135

135:                                              ; preds = %130, %135
  %136 = phi i64 [ %154, %135 ], [ %132, %130 ]
  %137 = phi i32 [ %152, %135 ], [ %133, %130 ]
  %138 = getelementptr inbounds i16, i16* %79, i64 %136
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = urem i32 %137, %140
  %142 = trunc i32 %141 to i16
  %143 = getelementptr inbounds [8 x i16], [8 x i16]* %6, i64 0, i64 %136
  store i16 %142, i16* %143, align 2
  %144 = udiv i32 %137, %140
  %145 = add nsw i64 %136, -1
  %146 = getelementptr inbounds i16, i16* %79, i64 %145
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = urem i32 %144, %148
  %150 = trunc i32 %149 to i16
  %151 = getelementptr inbounds [8 x i16], [8 x i16]* %6, i64 0, i64 %145
  store i16 %150, i16* %151, align 2
  %152 = udiv i32 %144, %148
  %153 = icmp eq i64 %145, 1
  %154 = add nsw i64 %136, -2
  br i1 %153, label %155, label %135

155:                                              ; preds = %130, %135, %107
  %156 = phi i64 [ 0, %107 ], [ %118, %135 ], [ %118, %130 ]
  %157 = phi i32 [ %114, %107 ], [ %131, %130 ], [ %152, %135 ]
  %158 = trunc i32 %157 to i16
  store i16 %158, i16* %77, align 16
  br label %159

159:                                              ; preds = %155, %264
  %160 = phi i64 [ %266, %264 ], [ 0, %155 ]
  %161 = phi i8* [ %265, %264 ], [ %111, %155 ]
  %162 = phi i8* [ %221, %264 ], [ %108, %155 ]
  %163 = phi i16 [ %222, %264 ], [ %109, %155 ]
  %164 = phi i16 [ %223, %264 ], [ 0, %155 ]
  %165 = getelementptr inbounds [8 x i16], [8 x i16]* %6, i64 0, i64 %160
  %166 = load i16, i16* %165, align 2
  %167 = icmp eq i16 %166, 0
  br i1 %167, label %198, label %168

168:                                              ; preds = %159
  %169 = add i16 %166, -1
  %170 = and i16 %166, 3
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %185, label %172

172:                                              ; preds = %168, %181
  %173 = phi i16 [ %182, %181 ], [ %166, %168 ]
  %174 = phi i8* [ %178, %181 ], [ %161, %168 ]
  %175 = phi i16 [ %183, %181 ], [ %170, %168 ]
  br label %176

176:                                              ; preds = %176, %172
  %177 = phi i8* [ %178, %176 ], [ %174, %172 ]
  %178 = getelementptr inbounds i8, i8* %177, i64 1
  %179 = load i8, i8* %177, align 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %176

181:                                              ; preds = %176
  %182 = add i16 %173, -1
  %183 = add i16 %175, -1
  %184 = icmp eq i16 %183, 0
  br i1 %184, label %185, label %172, !llvm.loop !2

185:                                              ; preds = %181, %168
  %186 = phi i8* [ undef, %168 ], [ %178, %181 ]
  %187 = phi i16 [ %166, %168 ], [ %182, %181 ]
  %188 = phi i8* [ %161, %168 ], [ %178, %181 ]
  %189 = icmp ult i16 %169, 3
  br i1 %189, label %198, label %190

190:                                              ; preds = %185, %292
  %191 = phi i16 [ %293, %292 ], [ %187, %185 ]
  %192 = phi i8* [ %289, %292 ], [ %188, %185 ]
  br label %193

193:                                              ; preds = %193, %190
  %194 = phi i8* [ %195, %193 ], [ %192, %190 ]
  %195 = getelementptr inbounds i8, i8* %194, i64 1
  %196 = load i8, i8* %194, align 1
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %277, label %193

198:                                              ; preds = %185, %292, %159
  %199 = phi i8* [ %161, %159 ], [ %186, %185 ], [ %289, %292 ]
  %200 = getelementptr inbounds i8, i8* %199, i64 1
  %201 = load i8, i8* %199, align 1
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %220, label %203

203:                                              ; preds = %198, %213
  %204 = phi i8 [ %218, %213 ], [ %201, %198 ]
  %205 = phi i8* [ %217, %213 ], [ %200, %198 ]
  %206 = phi i16 [ %216, %213 ], [ %164, %198 ]
  %207 = phi i16 [ %215, %213 ], [ %163, %198 ]
  %208 = phi i8* [ %214, %213 ], [ %162, %198 ]
  %209 = icmp eq i16 %207, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds i8, i8* %208, i64 1
  store i8 %204, i8* %208, align 1
  %212 = add i16 %207, -1
  br label %213

213:                                              ; preds = %210, %203
  %214 = phi i8* [ %211, %210 ], [ %208, %203 ]
  %215 = phi i16 [ %212, %210 ], [ 0, %203 ]
  %216 = add i16 %206, 1
  %217 = getelementptr inbounds i8, i8* %205, i64 1
  %218 = load i8, i8* %205, align 1
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %203

220:                                              ; preds = %213, %198
  %221 = phi i8* [ %162, %198 ], [ %214, %213 ]
  %222 = phi i16 [ %163, %198 ], [ %215, %213 ]
  %223 = phi i16 [ %164, %198 ], [ %216, %213 ]
  %224 = phi i8* [ %200, %198 ], [ %217, %213 ]
  %225 = icmp eq i64 %160, %156
  br i1 %225, label %267, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds i16, i16* %79, i64 %160
  %228 = load i16, i16* %227, align 2
  %229 = load i16, i16* %165, align 2
  %230 = xor i16 %229, -1
  %231 = add i16 %228, %230
  %232 = icmp eq i16 %231, 0
  br i1 %232, label %264, label %233

233:                                              ; preds = %226
  %234 = add i16 %228, -2
  %235 = sub i16 %234, %229
  %236 = and i16 %231, 3
  %237 = icmp eq i16 %236, 0
  br i1 %237, label %251, label %238

238:                                              ; preds = %233, %247
  %239 = phi i16 [ %248, %247 ], [ %231, %233 ]
  %240 = phi i8* [ %244, %247 ], [ %224, %233 ]
  %241 = phi i16 [ %249, %247 ], [ %236, %233 ]
  br label %242

242:                                              ; preds = %242, %238
  %243 = phi i8* [ %244, %242 ], [ %240, %238 ]
  %244 = getelementptr inbounds i8, i8* %243, i64 1
  %245 = load i8, i8* %243, align 1
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %242

247:                                              ; preds = %242
  %248 = add i16 %239, -1
  %249 = add i16 %241, -1
  %250 = icmp eq i16 %249, 0
  br i1 %250, label %251, label %238, !llvm.loop !4

251:                                              ; preds = %247, %233
  %252 = phi i8* [ undef, %233 ], [ %244, %247 ]
  %253 = phi i16 [ %231, %233 ], [ %248, %247 ]
  %254 = phi i8* [ %224, %233 ], [ %244, %247 ]
  %255 = icmp ult i16 %235, 3
  br i1 %255, label %264, label %256

256:                                              ; preds = %251, %310
  %257 = phi i16 [ %311, %310 ], [ %253, %251 ]
  %258 = phi i8* [ %307, %310 ], [ %254, %251 ]
  br label %259

259:                                              ; preds = %259, %256
  %260 = phi i8* [ %261, %259 ], [ %258, %256 ]
  %261 = getelementptr inbounds i8, i8* %260, i64 1
  %262 = load i8, i8* %260, align 1
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %295, label %259

264:                                              ; preds = %251, %310, %226
  %265 = phi i8* [ %224, %226 ], [ %252, %251 ], [ %307, %310 ]
  %266 = add nuw nsw i64 %160, 1
  br label %159

267:                                              ; preds = %220
  %268 = icmp eq i16 %222, 0
  br i1 %268, label %270, label %269

269:                                              ; preds = %267
  store i8 0, i8* %221, align 1
  br label %270

270:                                              ; preds = %267, %269
  %271 = add i16 %223, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  br label %275

272:                                              ; preds = %12
  %273 = icmp eq i16 %4, 0
  br i1 %273, label %275, label %274

274:                                              ; preds = %272
  store i8 0, i8* %3, align 1
  br label %275

275:                                              ; preds = %73, %270, %274, %272, %11, %9
  %276 = phi i16 [ 0, %9 ], [ 0, %11 ], [ 0, %274 ], [ 0, %272 ], [ %271, %270 ], [ %74, %73 ]
  ret i16 %276

277:                                              ; preds = %193, %277
  %278 = phi i8* [ %279, %277 ], [ %195, %193 ]
  %279 = getelementptr inbounds i8, i8* %278, i64 1
  %280 = load i8, i8* %278, align 1
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %277

282:                                              ; preds = %277, %282
  %283 = phi i8* [ %284, %282 ], [ %279, %277 ]
  %284 = getelementptr inbounds i8, i8* %283, i64 1
  %285 = load i8, i8* %283, align 1
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %282

287:                                              ; preds = %282, %287
  %288 = phi i8* [ %289, %287 ], [ %284, %282 ]
  %289 = getelementptr inbounds i8, i8* %288, i64 1
  %290 = load i8, i8* %288, align 1
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %292, label %287

292:                                              ; preds = %287
  %293 = add i16 %191, -4
  %294 = icmp eq i16 %293, 0
  br i1 %294, label %198, label %190

295:                                              ; preds = %259, %295
  %296 = phi i8* [ %297, %295 ], [ %261, %259 ]
  %297 = getelementptr inbounds i8, i8* %296, i64 1
  %298 = load i8, i8* %296, align 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %295

300:                                              ; preds = %295, %300
  %301 = phi i8* [ %302, %300 ], [ %297, %295 ]
  %302 = getelementptr inbounds i8, i8* %301, i64 1
  %303 = load i8, i8* %301, align 1
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %300

305:                                              ; preds = %300, %305
  %306 = phi i8* [ %307, %305 ], [ %302, %300 ]
  %307 = getelementptr inbounds i8, i8* %306, i64 1
  %308 = load i8, i8* %306, align 1
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %310, label %305

310:                                              ; preds = %305
  %311 = add i16 %257, -4
  %312 = icmp eq i16 %311, 0
  br i1 %312, label %264, label %256
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i16 @_ZN6icu_69L7getNameEPNS_10UCharNamesEj15UCharNameChoicePct(%"struct.icu_69::UCharNames"* nocapture readonly, i32, i32, i8* nocapture, i16 zeroext) unnamed_addr #0 {
  %6 = alloca [34 x i16], align 16
  %7 = alloca [34 x i16], align 16
  %8 = bitcast %"struct.icu_69::UCharNames"* %0 to i8*
  %9 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = bitcast i8* %12 to i16*
  %14 = getelementptr inbounds i8, i8* %12, i64 2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %13, align 2
  %17 = icmp ugt i16 %16, 1
  br i1 %17, label %20, label %18

18:                                               ; preds = %5
  %19 = lshr i32 %1, 5
  br label %47

20:                                               ; preds = %5
  %21 = zext i16 %16 to i32
  %22 = lshr i32 %1, 5
  %23 = and i32 %22, 65535
  br label %24

24:                                               ; preds = %24, %20
  %25 = phi i32 [ %21, %20 ], [ %41, %24 ]
  %26 = phi i32 [ 0, %20 ], [ %40, %24 ]
  %27 = phi i16 [ %16, %20 ], [ %39, %24 ]
  %28 = phi i16 [ 0, %20 ], [ %38, %24 ]
  %29 = add nuw nsw i32 %26, %25
  %30 = lshr i32 %29, 1
  %31 = trunc i32 %30 to i16
  %32 = mul nuw nsw i32 %30, 3
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %15, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = icmp ult i32 %23, %36
  %38 = select i1 %37, i16 %28, i16 %31
  %39 = select i1 %37, i16 %31, i16 %27
  %40 = zext i16 %38 to i32
  %41 = zext i16 %39 to i32
  %42 = add nsw i32 %41, -1
  %43 = icmp sgt i32 %42, %40
  br i1 %43, label %24, label %44

44:                                               ; preds = %24
  %45 = mul nuw nsw i32 %40, 3
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %18, %44
  %48 = phi i32 [ %19, %18 ], [ %22, %44 ]
  %49 = phi i64 [ 0, %18 ], [ %46, %44 ]
  %50 = getelementptr inbounds i16, i16* %15, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = trunc i32 %48 to i16
  %53 = icmp eq i16 %51, %52
  br i1 %53, label %54, label %134

54:                                               ; preds = %47
  %55 = and i32 %1, 31
  %56 = bitcast [34 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %56) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 68, i1 false) #8
  %57 = bitcast [34 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %57) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 -86, i64 68, i1 false) #8
  %58 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %8, i64 %60
  %62 = getelementptr inbounds i16, i16* %50, i64 1
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = shl nuw i32 %64, 16
  %66 = getelementptr inbounds i16, i16* %50, i64 2
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = or i32 %65, %68
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %61, i64 %70
  %72 = getelementptr inbounds [34 x i16], [34 x i16]* %6, i64 0, i64 0
  %73 = getelementptr inbounds [34 x i16], [34 x i16]* %7, i64 0, i64 0
  br label %74

74:                                               ; preds = %118, %54
  %75 = phi i16 [ 0, %54 ], [ %123, %118 ]
  %76 = phi i16 [ 0, %54 ], [ %122, %118 ]
  %77 = phi i16 [ 0, %54 ], [ %121, %118 ]
  %78 = phi i16* [ %73, %54 ], [ %120, %118 ]
  %79 = phi i16* [ %72, %54 ], [ %119, %118 ]
  %80 = phi i8* [ %71, %54 ], [ %81, %118 ]
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  %82 = load i8, i8* %80, align 1
  %83 = icmp ugt i16 %75, 11
  br i1 %83, label %84, label %92

84:                                               ; preds = %74
  %85 = shl nsw i16 %75, 4
  %86 = and i16 %85, 48
  %87 = lshr i8 %82, 4
  %88 = zext i8 %87 to i16
  %89 = or i16 %86, %88
  %90 = add nuw nsw i16 %89, 12
  %91 = and i8 %82, 15
  br label %102

92:                                               ; preds = %74
  %93 = icmp ugt i8 %82, -65
  br i1 %93, label %94, label %98

94:                                               ; preds = %92
  %95 = and i8 %82, 63
  %96 = add nuw nsw i8 %95, 12
  %97 = zext i8 %96 to i16
  br label %102

98:                                               ; preds = %92
  %99 = lshr i8 %82, 4
  %100 = zext i8 %99 to i16
  %101 = and i8 %82, 15
  br label %102

102:                                              ; preds = %98, %94, %84
  %103 = phi i16 [ %90, %84 ], [ %97, %94 ], [ %100, %98 ]
  %104 = phi i8 [ %91, %84 ], [ %82, %94 ], [ %101, %98 ]
  %105 = getelementptr inbounds i16, i16* %79, i64 1
  store i16 %76, i16* %79, align 2
  %106 = getelementptr inbounds i16, i16* %78, i64 1
  store i16 %103, i16* %78, align 2
  %107 = add i16 %103, %76
  %108 = add nuw nsw i16 %77, 1
  %109 = icmp ult i8 %104, 16
  br i1 %109, label %110, label %118

110:                                              ; preds = %102
  %111 = zext i8 %104 to i16
  %112 = icmp ult i8 %104, 12
  br i1 %112, label %113, label %118

113:                                              ; preds = %110
  %114 = getelementptr inbounds i16, i16* %79, i64 2
  store i16 %107, i16* %105, align 2
  %115 = getelementptr inbounds i16, i16* %78, i64 2
  store i16 %111, i16* %106, align 2
  %116 = add i16 %107, %111
  %117 = add nuw nsw i16 %77, 2
  br label %118

118:                                              ; preds = %113, %110, %102
  %119 = phi i16* [ %114, %113 ], [ %105, %110 ], [ %105, %102 ]
  %120 = phi i16* [ %115, %113 ], [ %106, %110 ], [ %106, %102 ]
  %121 = phi i16 [ %117, %113 ], [ %108, %110 ], [ %108, %102 ]
  %122 = phi i16 [ %116, %113 ], [ %107, %110 ], [ %107, %102 ]
  %123 = phi i16 [ %111, %113 ], [ %111, %110 ], [ 0, %102 ]
  %124 = icmp ult i16 %121, 32
  br i1 %124, label %74, label %125

125:                                              ; preds = %118
  %126 = zext i32 %55 to i64
  %127 = getelementptr inbounds [34 x i16], [34 x i16]* %6, i64 0, i64 %126
  %128 = load i16, i16* %127, align 2
  %129 = zext i16 %128 to i64
  %130 = getelementptr inbounds i8, i8* %81, i64 %129
  %131 = getelementptr inbounds [34 x i16], [34 x i16]* %7, i64 0, i64 %126
  %132 = load i16, i16* %131, align 2
  %133 = tail call fastcc zeroext i16 @_ZN6icu_69L10expandNameEPNS_10UCharNamesEPKht15UCharNameChoicePct(%"struct.icu_69::UCharNames"* %0, i8* %130, i16 zeroext %132, i32 %2, i8* %3, i16 zeroext %4) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %56) #8
  br label %137

134:                                              ; preds = %47
  %135 = icmp eq i16 %4, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %134
  store i8 0, i8* %3, align 1
  br label %137

137:                                              ; preds = %136, %134, %125
  %138 = phi i16 [ %133, %125 ], [ 0, %134 ], [ 0, %136 ]
  ret i16 %138
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i16 @_ZN6icu_69L10getExtNameEjPct(i32, i8* nocapture, i16 zeroext) unnamed_addr #0 {
  %4 = icmp sgt i32 %0, 64975
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = icmp slt i32 %0, 65008
  %7 = and i32 %0, 65534
  %8 = icmp eq i32 %7, 65534
  %9 = or i1 %6, %8
  %10 = icmp slt i32 %0, 1114112
  %11 = and i1 %10, %9
  br i1 %11, label %21, label %12

12:                                               ; preds = %5, %3
  %13 = tail call signext i8 @u_charType_69(i32 %0) #8
  %14 = icmp eq i8 %13, 18
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = and i32 %0, -1024
  %17 = icmp eq i32 %16, 55296
  %18 = select i1 %17, i8 31, i8 32
  br label %21

19:                                               ; preds = %12
  %20 = icmp ugt i8 %13, 32
  br i1 %20, label %26, label %21

21:                                               ; preds = %19, %15, %5
  %22 = phi i8 [ %13, %19 ], [ %18, %15 ], [ 30, %5 ]
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [33 x i8*], [33 x i8*]* @_ZN6icu_69L12charCatNamesE, i64 0, i64 %23
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %19, %21
  %27 = phi i8* [ %25, %21 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %19 ]
  %28 = icmp eq i16 %2, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 60, i8* %1, align 1
  %31 = add i16 %2, -1
  br label %32

32:                                               ; preds = %26, %29
  %33 = phi i16 [ %31, %29 ], [ 0, %26 ]
  %34 = phi i8* [ %30, %29 ], [ %1, %26 ]
  %35 = load i8, i8* %27, align 1
  %36 = icmp eq i8 %35, 0
  %37 = icmp ne i16 %33, 0
  br i1 %36, label %59, label %38

38:                                               ; preds = %32, %47
  %39 = phi i1 [ %56, %47 ], [ %37, %32 ]
  %40 = phi i8 [ %54, %47 ], [ %35, %32 ]
  %41 = phi i8* [ %49, %47 ], [ %34, %32 ]
  %42 = phi i16 [ %50, %47 ], [ 1, %32 ]
  %43 = phi i16 [ %48, %47 ], [ %33, %32 ]
  br i1 %39, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  store i8 %40, i8* %41, align 1
  %46 = add i16 %43, -1
  br label %47

47:                                               ; preds = %44, %38
  %48 = phi i16 [ %46, %44 ], [ 0, %38 ]
  %49 = phi i8* [ %45, %44 ], [ %41, %38 ]
  %50 = add i16 %42, 1
  %51 = zext i16 %50 to i64
  %52 = add nsw i64 %51, -1
  %53 = getelementptr inbounds i8, i8* %27, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  %56 = icmp ne i16 %48, 0
  br i1 %55, label %57, label %38

57:                                               ; preds = %47
  %58 = add i16 %42, 3
  br i1 %56, label %60, label %66

59:                                               ; preds = %32
  br i1 %37, label %60, label %66

60:                                               ; preds = %57, %59
  %61 = phi i8* [ %49, %57 ], [ %34, %59 ]
  %62 = phi i16 [ %58, %57 ], [ 3, %59 ]
  %63 = phi i16 [ %48, %57 ], [ %33, %59 ]
  %64 = getelementptr inbounds i8, i8* %61, i64 1
  store i8 45, i8* %61, align 1
  %65 = add i16 %63, -1
  br label %66

66:                                               ; preds = %57, %60, %59
  %67 = phi i16 [ %62, %60 ], [ 3, %59 ], [ %58, %57 ]
  %68 = phi i16 [ %65, %60 ], [ 0, %59 ], [ 0, %57 ]
  %69 = phi i8* [ %64, %60 ], [ %34, %59 ], [ %49, %57 ]
  %70 = icmp eq i32 %0, 0
  br i1 %70, label %80, label %71

71:                                               ; preds = %66, %71
  %72 = phi i32 [ %74, %71 ], [ 0, %66 ]
  %73 = phi i32 [ %75, %71 ], [ %0, %66 ]
  %74 = add nuw nsw i32 %72, 1
  %75 = ashr i32 %73, 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %71

77:                                               ; preds = %71
  %78 = icmp ugt i32 %74, 4
  %79 = select i1 %78, i32 %74, i32 4
  br label %80

80:                                               ; preds = %77, %66
  %81 = phi i32 [ 4, %66 ], [ %79, %77 ]
  %82 = icmp eq i16 %68, 0
  br i1 %82, label %104, label %83

83:                                               ; preds = %80
  %84 = sext i32 %81 to i64
  br label %85

85:                                               ; preds = %83, %85
  %86 = phi i64 [ %84, %83 ], [ %95, %85 ]
  %87 = phi i32 [ %0, %83 ], [ %97, %85 ]
  %88 = phi i16 [ %68, %83 ], [ %98, %85 ]
  %89 = and i32 %87, 15
  %90 = icmp ult i32 %89, 10
  %91 = or i32 %89, 48
  %92 = add nuw nsw i32 %89, 55
  %93 = select i1 %90, i32 %91, i32 %92
  %94 = trunc i32 %93 to i8
  %95 = add nsw i64 %86, -1
  %96 = getelementptr inbounds i8, i8* %69, i64 %95
  store i8 %94, i8* %96, align 1
  %97 = ashr i32 %87, 4
  %98 = add i16 %88, -1
  %99 = icmp ne i32 %97, 0
  %100 = icmp sgt i64 %95, 0
  %101 = or i1 %99, %100
  %102 = icmp ne i16 %98, 0
  %103 = and i1 %102, %101
  br i1 %103, label %85, label %104

104:                                              ; preds = %85, %80
  %105 = phi i16 [ %68, %80 ], [ %98, %85 ]
  %106 = trunc i32 %81 to i16
  %107 = icmp eq i16 %105, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = zext i32 %81 to i64
  %110 = getelementptr inbounds i8, i8* %69, i64 %109
  store i8 62, i8* %110, align 1
  br label %111

111:                                              ; preds = %104, %108
  %112 = add i16 %67, %106
  ret i16 %112
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_getISOComment_69(i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %5 = icmp eq i32* %3, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  %10 = icmp slt i32 %2, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %9
  %12 = icmp ne i32 %2, 0
  %13 = icmp eq i8* %1, null
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %9
  store i32 1, i32* %3, align 4
  br label %18

16:                                               ; preds = %11
  %17 = tail call i32 @u_terminateChars_69(i8* %1, i32 %2, i32 0, i32* nonnull %3) #8
  br label %18

18:                                               ; preds = %4, %6, %16, %15
  %19 = phi i32 [ 0, %15 ], [ %17, %16 ], [ 0, %6 ], [ 0, %4 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @u_charFromName_69(i32, i8* readonly, i32*) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = alloca [8 x i16], align 16
  %6 = alloca [8 x i8*], align 16
  %7 = alloca [8 x i8*], align 16
  %8 = alloca [120 x i8], align 16
  %9 = alloca [120 x i8], align 16
  %10 = alloca %"struct.icu_69::FindName", align 8
  %11 = getelementptr inbounds [120 x i8], [120 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 120, i1 false)
  %12 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 120, i1 false)
  %13 = bitcast %"struct.icu_69::FindName"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = icmp eq i32* %2, null
  br i1 %14, label %480, label %15

15:                                               ; preds = %3
  %16 = load i32, i32* %2, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %480

18:                                               ; preds = %15
  %19 = icmp sgt i32 %0, 3
  %20 = icmp eq i8* %1, null
  %21 = or i1 %19, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = load i8, i8* %1, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22, %18
  store i32 1, i32* %2, align 4
  br label %480

26:                                               ; preds = %22
  %27 = tail call fastcc signext i8 @_ZN6icu_69L12isDataLoadedEP10UErrorCode(i32* nonnull %2)
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %480, label %29

29:                                               ; preds = %26, %34
  %30 = phi i64 [ %40, %34 ], [ 0, %26 ]
  %31 = phi i8* [ %35, %34 ], [ %1, %26 ]
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, i8* %31, i64 1
  %36 = tail call signext i8 @uprv_toupper_69(i8 signext %32) #8
  %37 = getelementptr inbounds [120 x i8], [120 x i8]* %8, i64 0, i64 %30
  store i8 %36, i8* %37, align 1
  %38 = tail call signext i8 @uprv_asciitolower_69(i8 signext %32) #8
  %39 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 %30
  store i8 %38, i8* %39, align 1
  %40 = add nuw nsw i64 %30, 1
  %41 = icmp eq i64 %40, 120
  br i1 %41, label %42, label %29

42:                                               ; preds = %34
  store i32 12, i32* %2, align 4
  br label %480

43:                                               ; preds = %29
  %44 = trunc i64 %30 to i32
  %45 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 %30
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds [120 x i8], [120 x i8]* %8, i64 0, i64 %30
  store i8 0, i8* %46, align 1
  %47 = load i8, i8* %12, align 16
  %48 = icmp eq i8 %47, 60
  br i1 %48, label %49, label %141

49:                                               ; preds = %43
  %50 = icmp eq i32 %0, 2
  br i1 %50, label %51, label %140

51:                                               ; preds = %49
  %52 = add nsw i32 %44, -1
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 62
  br i1 %56, label %57, label %140

57:                                               ; preds = %51, %61
  %58 = phi i64 [ %67, %61 ], [ %53, %51 ]
  %59 = icmp ugt i64 %58, 2
  %60 = trunc i64 %58 to i32
  br i1 %59, label %61, label %68

61:                                               ; preds = %57
  %62 = add i32 %60, -1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 45
  %67 = add nsw i64 %58, -1
  br i1 %66, label %75, label %57

68:                                               ; preds = %57
  %69 = trunc i64 %58 to i32
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %140

71:                                               ; preds = %68
  %72 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 2
  %73 = load i8, i8* %72, align 2
  %74 = icmp eq i8 %73, 45
  br label %75

75:                                               ; preds = %61, %71
  %76 = phi i1 [ %74, %71 ], [ true, %61 ]
  %77 = phi i32 [ 2, %71 ], [ %62, %61 ]
  %78 = add i32 %44, -3
  %79 = sub i32 %78, %77
  %80 = icmp ult i32 %79, 8
  %81 = and i1 %76, %80
  br i1 %81, label %82, label %140

82:                                               ; preds = %75
  %83 = zext i32 %77 to i64
  %84 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 %83
  store i8 0, i8* %84, align 1
  br label %85

85:                                               ; preds = %101, %82
  %86 = phi i32 [ %77, %82 ], [ %88, %101 ]
  %87 = phi i32 [ 0, %82 ], [ %105, %101 ]
  %88 = add i32 %86, 1
  %89 = icmp ult i32 %88, %52
  br i1 %89, label %90, label %108

90:                                               ; preds = %85
  %91 = zext i32 %88 to i64
  %92 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = add i8 %93, -48
  %96 = icmp ult i8 %95, 10
  br i1 %96, label %101, label %97

97:                                               ; preds = %90
  %98 = add i8 %93, -97
  %99 = icmp ult i8 %98, 6
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  store i32 12, i32* %2, align 4
  br label %480

101:                                              ; preds = %97, %90
  %102 = phi i32 [ -48, %90 ], [ -87, %97 ]
  %103 = shl i32 %87, 4
  %104 = add i32 %103, %102
  %105 = add i32 %104, %94
  %106 = icmp sgt i32 %105, 1114111
  br i1 %106, label %107, label %85

107:                                              ; preds = %101
  store i32 12, i32* %2, align 4
  br label %480

108:                                              ; preds = %85
  %109 = icmp sgt i32 %87, 64975
  br i1 %109, label %110, label %115

110:                                              ; preds = %108
  %111 = icmp slt i32 %87, 65008
  %112 = and i32 %87, 65534
  %113 = icmp eq i32 %112, 65534
  %114 = or i1 %111, %113
  br i1 %114, label %122, label %115

115:                                              ; preds = %110, %108
  %116 = tail call signext i8 @u_charType_69(i32 %87) #8
  %117 = icmp eq i8 %116, 18
  br i1 %117, label %118, label %122

118:                                              ; preds = %115
  %119 = and i32 %87, -1024
  %120 = icmp eq i32 %119, 55296
  %121 = select i1 %120, i8 31, i8 32
  br label %122

122:                                              ; preds = %110, %115, %118
  %123 = phi i8 [ 30, %110 ], [ %121, %118 ], [ %116, %115 ]
  %124 = zext i32 %88 to i64
  %125 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 %124
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 1
  br label %127

127:                                              ; preds = %137, %122
  %128 = phi i64 [ 0, %122 ], [ %138, %137 ]
  %129 = getelementptr inbounds [33 x i8*], [33 x i8*]* @_ZN6icu_69L12charCatNamesE, i64 0, i64 %128
  %130 = load i8*, i8** %129, align 8
  %131 = call i32 @strcmp(i8* %126, i8* %130) #9
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %127
  %134 = trunc i64 %128 to i32
  %135 = zext i8 %123 to i32
  %136 = icmp eq i32 %134, %135
  br i1 %136, label %480, label %140

137:                                              ; preds = %127
  %138 = add nuw nsw i64 %128, 1
  %139 = icmp eq i64 %138, 33
  br i1 %139, label %140, label %127

140:                                              ; preds = %137, %68, %75, %133, %51, %49
  store i32 12, i32* %2, align 4
  br label %480

141:                                              ; preds = %43
  %142 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  %143 = bitcast %"struct.icu_69::UCharNames"* %142 to i8*
  %144 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %142, i64 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %143, i64 %146
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %472, label %151

151:                                              ; preds = %141
  %152 = getelementptr inbounds i8, i8* %147, i64 4
  %153 = and i32 %0, -3
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0
  %156 = bitcast [8 x i16]* %5 to i8*
  %157 = getelementptr inbounds [8 x i16], [8 x i16]* %5, i64 0, i64 0
  %158 = bitcast [8 x i8*]* %6 to i8*
  %159 = bitcast [8 x i8*]* %7 to i8*
  %160 = getelementptr inbounds [8 x i8*], [8 x i8*]* %6, i64 0, i64 0
  %161 = getelementptr inbounds [8 x i8*], [8 x i8*]* %7, i64 0, i64 0
  %162 = getelementptr inbounds [8 x i16], [8 x i16]* %5, i64 0, i64 1
  %163 = bitcast i16* %162 to i8*
  br label %164

164:                                              ; preds = %151, %462
  %165 = phi i32 [ %149, %151 ], [ %468, %462 ]
  %166 = phi i8* [ %152, %151 ], [ %467, %462 ]
  br i1 %154, label %167, label %462

167:                                              ; preds = %164
  %168 = getelementptr inbounds i8, i8* %166, i64 8
  %169 = load i8, i8* %168, align 4
  switch i8 %169, label %462 [
    i8 0, label %170
    i8 1, label %221
  ]

170:                                              ; preds = %167
  %171 = getelementptr inbounds i8, i8* %166, i64 12
  br label %172

172:                                              ; preds = %177, %170
  %173 = phi i8* [ %11, %170 ], [ %179, %177 ]
  %174 = phi i8* [ %171, %170 ], [ %178, %177 ]
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds i8, i8* %174, i64 1
  %179 = getelementptr inbounds i8, i8* %173, i64 1
  %180 = load i8, i8* %173, align 1
  %181 = icmp eq i8 %175, %180
  br i1 %181, label %172, label %462

182:                                              ; preds = %172
  %183 = getelementptr inbounds i8, i8* %166, i64 9
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i8 %184, 0
  br i1 %186, label %207, label %187

187:                                              ; preds = %182, %199
  %188 = phi i16 [ %204, %199 ], [ 0, %182 ]
  %189 = phi i32 [ %203, %199 ], [ 0, %182 ]
  %190 = phi i8* [ %191, %199 ], [ %173, %182 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 1
  %192 = load i8, i8* %190, align 1
  %193 = sext i8 %192 to i32
  %194 = add i8 %192, -48
  %195 = icmp ult i8 %194, 10
  br i1 %195, label %199, label %196

196:                                              ; preds = %187
  %197 = add i8 %192, -65
  %198 = icmp ult i8 %197, 6
  br i1 %198, label %199, label %462

199:                                              ; preds = %196, %187
  %200 = phi i32 [ -48, %187 ], [ -55, %196 ]
  %201 = shl i32 %189, 4
  %202 = add nsw i32 %200, %193
  %203 = or i32 %202, %201
  %204 = add i16 %188, 1
  %205 = zext i16 %204 to i32
  %206 = icmp ult i32 %205, %185
  br i1 %206, label %187, label %207

207:                                              ; preds = %199, %182
  %208 = phi i8* [ %173, %182 ], [ %191, %199 ]
  %209 = phi i32 [ 0, %182 ], [ %203, %199 ]
  %210 = load i8, i8* %208, align 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %462

212:                                              ; preds = %207
  %213 = bitcast i8* %166 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = icmp ugt i32 %214, %209
  br i1 %215, label %462, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds i8, i8* %166, i64 4
  %218 = bitcast i8* %217 to i32*
  %219 = load i32, i32* %218, align 4
  %220 = icmp ugt i32 %209, %219
  br i1 %220, label %462, label %459

221:                                              ; preds = %167
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %155) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %155, i8 -86, i64 64, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %156, i8 -86, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %158) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %158, i8 -86, i64 64, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %159) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %159, i8 -86, i64 64, i1 false) #8
  %222 = getelementptr inbounds i8, i8* %166, i64 12
  %223 = bitcast i8* %222 to i16*
  %224 = getelementptr inbounds i8, i8* %166, i64 9
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i16
  %227 = zext i8 %225 to i32
  %228 = zext i8 %225 to i64
  %229 = getelementptr inbounds i16, i16* %223, i64 %228
  %230 = bitcast i16* %229 to i8*
  br label %231

231:                                              ; preds = %237, %221
  %232 = phi i8* [ %11, %221 ], [ %238, %237 ]
  %233 = phi i8* [ %230, %221 ], [ %234, %237 ]
  %234 = getelementptr inbounds i8, i8* %233, i64 1
  %235 = load i8, i8* %233, align 1
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %241, label %237

237:                                              ; preds = %231
  %238 = getelementptr inbounds i8, i8* %232, i64 1
  %239 = load i8, i8* %232, align 1
  %240 = icmp eq i8 %235, %239
  br i1 %240, label %231, label %456

241:                                              ; preds = %231
  %242 = bitcast i8* %166 to i32*
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds i8, i8* %166, i64 4
  %245 = bitcast i8* %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = add i32 %246, 1
  %248 = add nsw i16 %226, -1
  %249 = icmp eq i16 %248, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %241
  %251 = zext i16 %248 to i64
  %252 = shl nuw nsw i64 %251, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %163, i8 0, i64 %252, i1 false)
  br label %253

253:                                              ; preds = %250, %241
  %254 = phi i64 [ 0, %241 ], [ %251, %250 ]
  store i16 0, i16* %157, align 16
  br label %255

255:                                              ; preds = %368, %253
  %256 = phi i64 [ %370, %368 ], [ 0, %253 ]
  %257 = phi i8* [ %369, %368 ], [ %234, %253 ]
  %258 = phi i8** [ %266, %368 ], [ %160, %253 ]
  %259 = phi i8** [ %306, %368 ], [ %161, %253 ]
  %260 = phi i8* [ %326, %368 ], [ %155, %253 ]
  %261 = phi i16 [ %327, %368 ], [ 64, %253 ]
  %262 = icmp eq i8** %258, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %255
  %264 = getelementptr inbounds i8*, i8** %258, i64 1
  store i8* %257, i8** %258, align 8
  br label %265

265:                                              ; preds = %263, %255
  %266 = phi i8** [ %264, %263 ], [ null, %255 ]
  %267 = getelementptr inbounds [8 x i16], [8 x i16]* %5, i64 0, i64 %256
  %268 = load i16, i16* %267, align 2
  %269 = icmp eq i16 %268, 0
  br i1 %269, label %300, label %270

270:                                              ; preds = %265
  %271 = add i16 %268, -1
  %272 = and i16 %268, 3
  %273 = icmp eq i16 %272, 0
  br i1 %273, label %287, label %274

274:                                              ; preds = %270, %283
  %275 = phi i16 [ %284, %283 ], [ %268, %270 ]
  %276 = phi i8* [ %280, %283 ], [ %257, %270 ]
  %277 = phi i16 [ %285, %283 ], [ %272, %270 ]
  br label %278

278:                                              ; preds = %278, %274
  %279 = phi i8* [ %280, %278 ], [ %276, %274 ]
  %280 = getelementptr inbounds i8, i8* %279, i64 1
  %281 = load i8, i8* %279, align 1
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %283, label %278

283:                                              ; preds = %278
  %284 = add i16 %275, -1
  %285 = add i16 %277, -1
  %286 = icmp eq i16 %285, 0
  br i1 %286, label %287, label %274, !llvm.loop !5

287:                                              ; preds = %283, %270
  %288 = phi i8* [ undef, %270 ], [ %280, %283 ]
  %289 = phi i16 [ %268, %270 ], [ %284, %283 ]
  %290 = phi i8* [ %257, %270 ], [ %280, %283 ]
  %291 = icmp ult i16 %271, 3
  br i1 %291, label %300, label %292

292:                                              ; preds = %287, %497
  %293 = phi i16 [ %498, %497 ], [ %289, %287 ]
  %294 = phi i8* [ %494, %497 ], [ %290, %287 ]
  br label %295

295:                                              ; preds = %295, %292
  %296 = phi i8* [ %297, %295 ], [ %294, %292 ]
  %297 = getelementptr inbounds i8, i8* %296, i64 1
  %298 = load i8, i8* %296, align 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %482, label %295

300:                                              ; preds = %287, %497, %265
  %301 = phi i8* [ %257, %265 ], [ %288, %287 ], [ %494, %497 ]
  %302 = icmp eq i8** %259, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds i8*, i8** %259, i64 1
  store i8* %301, i8** %259, align 8
  br label %305

305:                                              ; preds = %303, %300
  %306 = phi i8** [ %304, %303 ], [ null, %300 ]
  %307 = getelementptr inbounds i8, i8* %301, i64 1
  %308 = load i8, i8* %301, align 1
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %325, label %310

310:                                              ; preds = %305, %319
  %311 = phi i8 [ %323, %319 ], [ %308, %305 ]
  %312 = phi i8* [ %322, %319 ], [ %307, %305 ]
  %313 = phi i16 [ %321, %319 ], [ %261, %305 ]
  %314 = phi i8* [ %320, %319 ], [ %260, %305 ]
  %315 = icmp eq i16 %313, 0
  br i1 %315, label %319, label %316

316:                                              ; preds = %310
  %317 = getelementptr inbounds i8, i8* %314, i64 1
  store i8 %311, i8* %314, align 1
  %318 = add i16 %313, -1
  br label %319

319:                                              ; preds = %316, %310
  %320 = phi i8* [ %317, %316 ], [ %314, %310 ]
  %321 = phi i16 [ %318, %316 ], [ 0, %310 ]
  %322 = getelementptr inbounds i8, i8* %312, i64 1
  %323 = load i8, i8* %312, align 1
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %310

325:                                              ; preds = %319, %305
  %326 = phi i8* [ %260, %305 ], [ %320, %319 ]
  %327 = phi i16 [ %261, %305 ], [ %321, %319 ]
  %328 = phi i8* [ %307, %305 ], [ %322, %319 ]
  %329 = icmp eq i64 %256, %254
  br i1 %329, label %371, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds i16, i16* %223, i64 %256
  %332 = load i16, i16* %331, align 2
  %333 = load i16, i16* %267, align 2
  %334 = xor i16 %333, -1
  %335 = add i16 %332, %334
  %336 = icmp eq i16 %335, 0
  br i1 %336, label %368, label %337

337:                                              ; preds = %330
  %338 = add i16 %332, -2
  %339 = sub i16 %338, %333
  %340 = and i16 %335, 3
  %341 = icmp eq i16 %340, 0
  br i1 %341, label %355, label %342

342:                                              ; preds = %337, %351
  %343 = phi i16 [ %352, %351 ], [ %335, %337 ]
  %344 = phi i8* [ %348, %351 ], [ %328, %337 ]
  %345 = phi i16 [ %353, %351 ], [ %340, %337 ]
  br label %346

346:                                              ; preds = %346, %342
  %347 = phi i8* [ %348, %346 ], [ %344, %342 ]
  %348 = getelementptr inbounds i8, i8* %347, i64 1
  %349 = load i8, i8* %347, align 1
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %351, label %346

351:                                              ; preds = %346
  %352 = add i16 %343, -1
  %353 = add i16 %345, -1
  %354 = icmp eq i16 %353, 0
  br i1 %354, label %355, label %342, !llvm.loop !6

355:                                              ; preds = %351, %337
  %356 = phi i8* [ undef, %337 ], [ %348, %351 ]
  %357 = phi i16 [ %335, %337 ], [ %352, %351 ]
  %358 = phi i8* [ %328, %337 ], [ %348, %351 ]
  %359 = icmp ult i16 %339, 3
  br i1 %359, label %368, label %360

360:                                              ; preds = %355, %515
  %361 = phi i16 [ %516, %515 ], [ %357, %355 ]
  %362 = phi i8* [ %512, %515 ], [ %358, %355 ]
  br label %363

363:                                              ; preds = %363, %360
  %364 = phi i8* [ %365, %363 ], [ %362, %360 ]
  %365 = getelementptr inbounds i8, i8* %364, i64 1
  %366 = load i8, i8* %364, align 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %500, label %363

368:                                              ; preds = %355, %515, %330
  %369 = phi i8* [ %328, %330 ], [ %356, %355 ], [ %512, %515 ]
  %370 = add nuw nsw i64 %256, 1
  br label %255

371:                                              ; preds = %325
  %372 = icmp eq i16 %327, 0
  br i1 %372, label %374, label %373

373:                                              ; preds = %371
  store i8 0, i8* %326, align 1
  br label %374

374:                                              ; preds = %373, %371
  %375 = call i32 @strcmp(i8* %232, i8* nonnull %155) #9
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %456, label %377

377:                                              ; preds = %374
  %378 = add nsw i32 %243, 1
  %379 = icmp slt i32 %378, %247
  br i1 %379, label %380, label %456

380:                                              ; preds = %377
  %381 = zext i16 %248 to i64
  %382 = getelementptr inbounds [8 x i16], [8 x i16]* %5, i64 0, i64 %381
  %383 = getelementptr inbounds i16, i16* %223, i64 %381
  %384 = icmp eq i8 %225, 0
  %385 = load i16, i16* %383, align 2
  br label %386

386:                                              ; preds = %453, %380
  %387 = phi i32 [ %378, %380 ], [ %454, %453 ]
  %388 = load i16, i16* %382, align 2
  %389 = add i16 %388, 1
  %390 = icmp ult i16 %389, %385
  br i1 %390, label %391, label %403

391:                                              ; preds = %403, %386
  %392 = phi i64 [ %381, %386 ], [ %413, %403 ]
  %393 = phi i16* [ %382, %386 ], [ %414, %403 ]
  %394 = phi i16 [ %389, %386 ], [ %416, %403 ]
  store i16 %394, i16* %393, align 2
  %395 = getelementptr inbounds [8 x i8*], [8 x i8*]* %7, i64 0, i64 %392
  %396 = load i8*, i8** %395, align 8
  br label %397

397:                                              ; preds = %397, %391
  %398 = phi i8* [ %396, %391 ], [ %399, %397 ]
  %399 = getelementptr inbounds i8, i8* %398, i64 1
  %400 = load i8, i8* %398, align 1
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %402, label %397

402:                                              ; preds = %397
  store i8* %399, i8** %395, align 8
  br i1 %384, label %449, label %420

403:                                              ; preds = %386, %403
  %404 = phi i16* [ %414, %403 ], [ %382, %386 ]
  %405 = phi i64 [ %413, %403 ], [ %381, %386 ]
  %406 = phi i16 [ %412, %403 ], [ %248, %386 ]
  store i16 0, i16* %404, align 2
  %407 = getelementptr inbounds [8 x i8*], [8 x i8*]* %6, i64 0, i64 %405
  %408 = bitcast i8** %407 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = getelementptr inbounds [8 x i8*], [8 x i8*]* %7, i64 0, i64 %405
  %411 = bitcast i8** %410 to i64*
  store i64 %409, i64* %411, align 8
  %412 = add i16 %406, -1
  %413 = zext i16 %412 to i64
  %414 = getelementptr inbounds [8 x i16], [8 x i16]* %5, i64 0, i64 %413
  %415 = load i16, i16* %414, align 2
  %416 = add i16 %415, 1
  %417 = getelementptr inbounds i16, i16* %223, i64 %413
  %418 = load i16, i16* %417, align 2
  %419 = icmp ult i16 %416, %418
  br i1 %419, label %391, label %403

420:                                              ; preds = %402, %441
  %421 = phi i16 [ %444, %441 ], [ 0, %402 ]
  %422 = phi i8* [ %442, %441 ], [ %232, %402 ]
  %423 = zext i16 %421 to i64
  %424 = getelementptr inbounds [8 x i8*], [8 x i8*]* %7, i64 0, i64 %423
  %425 = load i8*, i8** %424, align 8
  %426 = load i8, i8* %425, align 1
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %441, label %428

428:                                              ; preds = %420, %428
  %429 = phi i8 [ %439, %428 ], [ %426, %420 ]
  %430 = phi i16 [ %438, %428 ], [ %421, %420 ]
  %431 = phi i8* [ %434, %428 ], [ %422, %420 ]
  %432 = phi i8* [ %437, %428 ], [ %425, %420 ]
  %433 = getelementptr inbounds i8, i8* %432, i64 1
  %434 = getelementptr inbounds i8, i8* %431, i64 1
  %435 = load i8, i8* %431, align 1
  %436 = icmp eq i8 %429, %435
  %437 = select i1 %436, i8* %433, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0)
  %438 = select i1 %436, i16 %430, i16 99
  %439 = load i8, i8* %437, align 1
  %440 = icmp eq i8 %439, 0
  br i1 %440, label %441, label %428

441:                                              ; preds = %428, %420
  %442 = phi i8* [ %422, %420 ], [ %434, %428 ]
  %443 = phi i16 [ %421, %420 ], [ %438, %428 ]
  %444 = add i16 %443, 1
  %445 = zext i16 %444 to i32
  %446 = icmp ult i32 %445, %227
  br i1 %446, label %420, label %447

447:                                              ; preds = %441
  %448 = icmp ult i16 %444, 99
  br i1 %448, label %449, label %453

449:                                              ; preds = %447, %402
  %450 = phi i8* [ %442, %447 ], [ %232, %402 ]
  %451 = load i8, i8* %450, align 1
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %456, label %453

453:                                              ; preds = %449, %447
  %454 = add i32 %387, 1
  %455 = icmp eq i32 %454, %247
  br i1 %455, label %456, label %386

456:                                              ; preds = %237, %453, %449, %377, %374
  %457 = phi i32 [ %243, %374 ], [ undef, %377 ], [ %387, %449 ], [ %387, %453 ], [ 65535, %237 ]
  %458 = phi i1 [ false, %374 ], [ true, %377 ], [ true, %453 ], [ false, %449 ], [ false, %237 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %159) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %158) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %155) #8
  br i1 %458, label %462, label %459

459:                                              ; preds = %216, %456
  %460 = phi i32 [ %457, %456 ], [ %209, %216 ]
  %461 = icmp eq i32 %460, 65535
  br i1 %461, label %462, label %480

462:                                              ; preds = %177, %196, %167, %207, %212, %216, %456, %164, %459
  %463 = getelementptr inbounds i8, i8* %166, i64 10
  %464 = bitcast i8* %463 to i16*
  %465 = load i16, i16* %464, align 2
  %466 = zext i16 %465 to i64
  %467 = getelementptr inbounds i8, i8* %166, i64 %466
  %468 = add i32 %165, -1
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %164

470:                                              ; preds = %462
  %471 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  br label %472

472:                                              ; preds = %470, %141
  %473 = phi %"struct.icu_69::UCharNames"* [ %471, %470 ], [ %142, %141 ]
  %474 = getelementptr inbounds %"struct.icu_69::FindName", %"struct.icu_69::FindName"* %10, i64 0, i32 0
  store i8* %11, i8** %474, align 8
  %475 = getelementptr inbounds %"struct.icu_69::FindName", %"struct.icu_69::FindName"* %10, i64 0, i32 1
  store i32 65535, i32* %475, align 8
  %476 = call fastcc signext i8 @_ZN6icu_69L9enumNamesEPNS_10UCharNamesEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::UCharNames"* %473, i32 0, i32 1114112, i8 (i8*, i32, i32, i8*, i32)* null, i8* nonnull %13, i32 %0)
  %477 = load i32, i32* %475, align 8
  %478 = icmp eq i32 %477, 65535
  br i1 %478, label %479, label %480

479:                                              ; preds = %472
  store i32 12, i32* %2, align 4
  br label %480

480:                                              ; preds = %459, %472, %479, %133, %100, %107, %26, %3, %15, %140, %42, %25
  %481 = phi i32 [ 65535, %25 ], [ 65535, %42 ], [ 65535, %140 ], [ 65535, %15 ], [ 65535, %3 ], [ 65535, %26 ], [ %87, %133 ], [ 65535, %100 ], [ 65535, %107 ], [ 65535, %479 ], [ %477, %472 ], [ %460, %459 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #8
  ret i32 %481

482:                                              ; preds = %295, %482
  %483 = phi i8* [ %484, %482 ], [ %297, %295 ]
  %484 = getelementptr inbounds i8, i8* %483, i64 1
  %485 = load i8, i8* %483, align 1
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %487, label %482

487:                                              ; preds = %482, %487
  %488 = phi i8* [ %489, %487 ], [ %484, %482 ]
  %489 = getelementptr inbounds i8, i8* %488, i64 1
  %490 = load i8, i8* %488, align 1
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %492, label %487

492:                                              ; preds = %487, %492
  %493 = phi i8* [ %494, %492 ], [ %489, %487 ]
  %494 = getelementptr inbounds i8, i8* %493, i64 1
  %495 = load i8, i8* %493, align 1
  %496 = icmp eq i8 %495, 0
  br i1 %496, label %497, label %492

497:                                              ; preds = %492
  %498 = add i16 %293, -4
  %499 = icmp eq i16 %498, 0
  br i1 %499, label %300, label %292

500:                                              ; preds = %363, %500
  %501 = phi i8* [ %502, %500 ], [ %365, %363 ]
  %502 = getelementptr inbounds i8, i8* %501, i64 1
  %503 = load i8, i8* %501, align 1
  %504 = icmp eq i8 %503, 0
  br i1 %504, label %505, label %500

505:                                              ; preds = %500, %505
  %506 = phi i8* [ %507, %505 ], [ %502, %500 ]
  %507 = getelementptr inbounds i8, i8* %506, i64 1
  %508 = load i8, i8* %506, align 1
  %509 = icmp eq i8 %508, 0
  br i1 %509, label %510, label %505

510:                                              ; preds = %505, %510
  %511 = phi i8* [ %512, %510 ], [ %507, %505 ]
  %512 = getelementptr inbounds i8, i8* %511, i64 1
  %513 = load i8, i8* %511, align 1
  %514 = icmp eq i8 %513, 0
  br i1 %514, label %515, label %510

515:                                              ; preds = %510
  %516 = add i16 %361, -4
  %517 = icmp eq i16 %516, 0
  br i1 %517, label %368, label %360
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare signext i8 @uprv_toupper_69(i8 signext) local_unnamed_addr #2

declare signext i8 @uprv_asciitolower_69(i8 signext) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZN6icu_69L9enumNamesEPNS_10UCharNamesEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::UCharNames"* readonly, i32, i32, i8 (i8*, i32, i32, i8*, i32)*, i8*, i32) unnamed_addr #0 {
  %7 = alloca [200 x i8], align 16
  %8 = lshr i32 %1, 5
  %9 = add nsw i32 %2, -1
  %10 = lshr i32 %9, 5
  %11 = bitcast %"struct.icu_69::UCharNames"* %0 to i8*
  %12 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %11, i64 %14
  %16 = bitcast i8* %15 to i16*
  %17 = getelementptr inbounds i8, i8* %15, i64 2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %16, align 2
  %20 = icmp ugt i16 %19, 1
  br i1 %20, label %23, label %21

21:                                               ; preds = %6
  %22 = and i32 %8, 65535
  br label %49

23:                                               ; preds = %6
  %24 = zext i16 %19 to i32
  %25 = and i32 %8, 65535
  br label %26

26:                                               ; preds = %26, %23
  %27 = phi i32 [ %24, %23 ], [ %43, %26 ]
  %28 = phi i32 [ 0, %23 ], [ %42, %26 ]
  %29 = phi i16 [ %19, %23 ], [ %41, %26 ]
  %30 = phi i16 [ 0, %23 ], [ %40, %26 ]
  %31 = add nuw nsw i32 %28, %27
  %32 = lshr i32 %31, 1
  %33 = trunc i32 %32 to i16
  %34 = mul nuw nsw i32 %32, 3
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %18, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp ult i32 %25, %38
  %40 = select i1 %39, i16 %30, i16 %33
  %41 = select i1 %39, i16 %33, i16 %29
  %42 = zext i16 %40 to i32
  %43 = zext i16 %41 to i32
  %44 = add nsw i32 %43, -1
  %45 = icmp sgt i32 %44, %42
  br i1 %45, label %26, label %46

46:                                               ; preds = %26
  %47 = mul nuw nsw i32 %42, 3
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %21, %46
  %50 = phi i32 [ %22, %21 ], [ %25, %46 ]
  %51 = phi i64 [ 0, %21 ], [ %48, %46 ]
  %52 = getelementptr inbounds i16, i16* %18, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = icmp ult i32 %50, %54
  %56 = icmp eq i32 %5, 2
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %82

58:                                               ; preds = %49
  %59 = shl nuw nsw i32 %54, 5
  %60 = icmp sgt i32 %59, %2
  %61 = select i1 %60, i32 %2, i32 %59
  %62 = add nsw i32 %61, -1
  %63 = icmp eq i8 (i8*, i32, i32, i8*, i32)* %3, null
  br i1 %63, label %82, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %65) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %65, i8 -86, i64 200, i1 false) #8
  %66 = icmp sgt i32 %61, %1
  br i1 %66, label %67, label %80

67:                                               ; preds = %64, %77
  %68 = phi i32 [ %78, %77 ], [ %1, %64 ]
  %69 = call fastcc zeroext i16 @_ZN6icu_69L10getExtNameEjPct(i32 %68, i8* nonnull %65, i16 zeroext 200) #8
  %70 = zext i16 %69 to i64
  %71 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %70
  store i8 0, i8* %71, align 1
  %72 = icmp eq i16 %69, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %67
  %74 = zext i16 %69 to i32
  %75 = call signext i8 %3(i8* %4, i32 %68, i32 2, i8* nonnull %65, i32 %74) #8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %73, %67
  %78 = add nsw i32 %68, 1
  %79 = icmp slt i32 %68, %62
  br i1 %79, label %67, label %80

80:                                               ; preds = %77, %64
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %65) #8
  br label %82

81:                                               ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %65) #8
  br label %253

82:                                               ; preds = %58, %80, %49
  %83 = phi i32 [ %1, %49 ], [ %61, %80 ], [ %61, %58 ]
  %84 = and i32 %10, 65535
  %85 = icmp eq i32 %50, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i16, i16* %52, align 2
  %88 = trunc i32 %8 to i16
  %89 = icmp eq i16 %87, %88
  br i1 %89, label %90, label %228

90:                                               ; preds = %86
  %91 = call fastcc signext i8 @_ZN6icu_69L14enumGroupNamesEPNS_10UCharNamesEPKtiiPFaPvi15UCharNameChoicePKciES4_S5_(%"struct.icu_69::UCharNames"* %0, i16* %52, i32 %83, i32 %9, i8 (i8*, i32, i32, i8*, i32)* %3, i8* %4, i32 %5)
  br label %253

92:                                               ; preds = %82
  %93 = load i32, i32* %12, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %11, i64 %94
  %96 = bitcast i8* %95 to i16*
  %97 = getelementptr inbounds i8, i8* %95, i64 2
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %96, align 2
  %100 = zext i16 %99 to i64
  %101 = mul nuw nsw i64 %100, 3
  %102 = getelementptr inbounds i16, i16* %98, i64 %101
  %103 = load i16, i16* %52, align 2
  %104 = zext i16 %103 to i32
  %105 = icmp eq i32 %50, %104
  br i1 %105, label %106, label %116

106:                                              ; preds = %92
  %107 = and i32 %83, 31
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %150, label %109

109:                                              ; preds = %106
  %110 = shl nuw nsw i32 %50, 5
  %111 = or i32 %110, 31
  %112 = call fastcc signext i8 @_ZN6icu_69L14enumGroupNamesEPNS_10UCharNamesEPKtiiPFaPvi15UCharNameChoicePKciES4_S5_(%"struct.icu_69::UCharNames"* %0, i16* %52, i32 %83, i32 %111, i8 (i8*, i32, i32, i8*, i32)* %3, i8* %4, i32 %5)
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %253, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds i16, i16* %52, i64 3
  br label %150

116:                                              ; preds = %92
  %117 = icmp ugt i32 %50, %104
  br i1 %117, label %118, label %150

118:                                              ; preds = %116
  %119 = getelementptr inbounds i16, i16* %52, i64 3
  %120 = icmp ult i16* %119, %102
  br i1 %120, label %121, label %150

121:                                              ; preds = %118
  %122 = load i16, i16* %119, align 2
  %123 = zext i16 %122 to i32
  %124 = icmp ult i32 %50, %123
  %125 = and i1 %56, %124
  br i1 %125, label %126, label %150

126:                                              ; preds = %121
  %127 = shl nuw nsw i32 %123, 5
  %128 = icmp sgt i32 %127, %2
  %129 = select i1 %128, i32 %2, i32 %127
  %130 = add nsw i32 %129, -1
  %131 = icmp eq i8 (i8*, i32, i32, i8*, i32)* %3, null
  br i1 %131, label %150, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %133) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %133, i8 -86, i64 200, i1 false) #8
  %134 = icmp slt i32 %83, %129
  br i1 %134, label %135, label %148

135:                                              ; preds = %132, %145
  %136 = phi i32 [ %146, %145 ], [ %83, %132 ]
  %137 = call fastcc zeroext i16 @_ZN6icu_69L10getExtNameEjPct(i32 %136, i8* nonnull %133, i16 zeroext 200) #8
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %138
  store i8 0, i8* %139, align 1
  %140 = icmp eq i16 %137, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %135
  %142 = zext i16 %137 to i32
  %143 = call signext i8 %3(i8* %4, i32 %136, i32 2, i8* nonnull %133, i32 %142) #8
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %141, %135
  %146 = add nsw i32 %136, 1
  %147 = icmp slt i32 %136, %130
  br i1 %147, label %135, label %148

148:                                              ; preds = %145, %132
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %133) #8
  br label %150

149:                                              ; preds = %141
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %133) #8
  br label %253

150:                                              ; preds = %148, %126, %118, %121, %106, %116, %114
  %151 = phi i16* [ %115, %114 ], [ %52, %106 ], [ %52, %116 ], [ %119, %121 ], [ %119, %118 ], [ %119, %126 ], [ %119, %148 ]
  %152 = icmp ult i16* %151, %102
  br i1 %152, label %153, label %215

153:                                              ; preds = %150
  %154 = icmp eq i8 (i8*, i32, i32, i8*, i32)* %3, null
  %155 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0
  %156 = load i16, i16* %151, align 2
  %157 = zext i16 %156 to i32
  %158 = icmp ugt i32 %84, %157
  br i1 %158, label %163, label %206

159:                                              ; preds = %205
  %160 = load i16, i16* %171, align 2
  %161 = zext i16 %160 to i32
  %162 = icmp ugt i32 %84, %161
  br i1 %162, label %163, label %206

163:                                              ; preds = %153, %159
  %164 = phi i32 [ %161, %159 ], [ %157, %153 ]
  %165 = phi i16* [ %171, %159 ], [ %151, %153 ]
  %166 = shl nuw nsw i32 %164, 5
  %167 = or i32 %166, 31
  %168 = call fastcc signext i8 @_ZN6icu_69L14enumGroupNamesEPNS_10UCharNamesEPKtiiPFaPvi15UCharNameChoicePKciES4_S5_(%"struct.icu_69::UCharNames"* %0, i16* %165, i32 %166, i32 %167, i8 (i8*, i32, i32, i8*, i32)* %3, i8* %4, i32 %5)
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %253, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds i16, i16* %165, i64 3
  %172 = icmp ult i16* %171, %102
  br i1 %172, label %173, label %215

173:                                              ; preds = %170
  %174 = load i16, i16* %171, align 2
  %175 = zext i16 %174 to i32
  %176 = load i16, i16* %165, align 2
  %177 = zext i16 %176 to i32
  %178 = add nuw nsw i32 %177, 1
  %179 = icmp ult i32 %178, %175
  %180 = and i1 %56, %179
  br i1 %180, label %181, label %205

181:                                              ; preds = %173
  %182 = shl nuw nsw i32 %175, 5
  %183 = icmp sgt i32 %182, %2
  %184 = select i1 %183, i32 %2, i32 %182
  %185 = shl nuw nsw i32 %177, 5
  %186 = add nuw nsw i32 %185, 32
  %187 = add nsw i32 %184, -1
  br i1 %154, label %205, label %188

188:                                              ; preds = %181
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %155) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %155, i8 -86, i64 200, i1 false) #8
  %189 = icmp slt i32 %186, %184
  br i1 %189, label %190, label %203

190:                                              ; preds = %188, %200
  %191 = phi i32 [ %201, %200 ], [ %186, %188 ]
  %192 = call fastcc zeroext i16 @_ZN6icu_69L10getExtNameEjPct(i32 %191, i8* nonnull %155, i16 zeroext 200) #8
  %193 = zext i16 %192 to i64
  %194 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %193
  store i8 0, i8* %194, align 1
  %195 = icmp eq i16 %192, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %190
  %197 = zext i16 %192 to i32
  %198 = call signext i8 %3(i8* %4, i32 %191, i32 2, i8* nonnull %155, i32 %197) #8
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %204, label %200

200:                                              ; preds = %196, %190
  %201 = add nuw nsw i32 %191, 1
  %202 = icmp slt i32 %191, %187
  br i1 %202, label %190, label %203

203:                                              ; preds = %200, %188
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %155) #8
  br label %205

204:                                              ; preds = %196
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %155) #8
  br label %253

205:                                              ; preds = %203, %181, %173
  br i1 %172, label %159, label %215

206:                                              ; preds = %159, %153
  %207 = phi i16* [ %151, %153 ], [ %171, %159 ]
  %208 = phi i32 [ %83, %153 ], [ %166, %159 ]
  %209 = phi i16 [ %156, %153 ], [ %160, %159 ]
  %210 = trunc i32 %10 to i16
  %211 = icmp eq i16 %209, %210
  br i1 %211, label %212, label %215

212:                                              ; preds = %206
  %213 = and i32 %9, -32
  %214 = call fastcc signext i8 @_ZN6icu_69L14enumGroupNamesEPNS_10UCharNamesEPKtiiPFaPvi15UCharNameChoicePKciES4_S5_(%"struct.icu_69::UCharNames"* %0, i16* %207, i32 %213, i32 %9, i8 (i8*, i32, i32, i8*, i32)* %3, i8* %4, i32 %5)
  br label %253

215:                                              ; preds = %170, %205, %150, %206
  %216 = phi i32 [ %208, %206 ], [ %83, %150 ], [ %166, %205 ], [ %166, %170 ]
  %217 = phi i16* [ %207, %206 ], [ %151, %150 ], [ %171, %205 ], [ %171, %170 ]
  %218 = icmp eq i16* %217, %102
  %219 = and i1 %56, %218
  br i1 %219, label %220, label %253

220:                                              ; preds = %215
  %221 = getelementptr inbounds i16, i16* %102, i64 -3
  %222 = load i16, i16* %221, align 2
  %223 = zext i16 %222 to i32
  %224 = shl nuw nsw i32 %223, 5
  %225 = add nuw nsw i32 %224, 32
  %226 = icmp sgt i32 %225, %216
  %227 = select i1 %226, i32 %225, i32 %216
  br label %228

228:                                              ; preds = %220, %86
  %229 = phi i32 [ %83, %86 ], [ %227, %220 ]
  br i1 %56, label %230, label %253

230:                                              ; preds = %228
  %231 = icmp slt i32 %2, 1114112
  %232 = select i1 %231, i32 %2, i32 1114112
  %233 = add nsw i32 %232, -1
  %234 = icmp eq i8 (i8*, i32, i32, i8*, i32)* %3, null
  br i1 %234, label %253, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %236) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %236, i8 -86, i64 200, i1 false) #8
  %237 = icmp slt i32 %229, %232
  br i1 %237, label %238, label %251

238:                                              ; preds = %235, %248
  %239 = phi i32 [ %249, %248 ], [ %229, %235 ]
  %240 = call fastcc zeroext i16 @_ZN6icu_69L10getExtNameEjPct(i32 %239, i8* nonnull %236, i16 zeroext 200) #8
  %241 = zext i16 %240 to i64
  %242 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 %241
  store i8 0, i8* %242, align 1
  %243 = icmp eq i16 %240, 0
  br i1 %243, label %248, label %244

244:                                              ; preds = %238
  %245 = zext i16 %240 to i32
  %246 = call signext i8 %3(i8* %4, i32 %239, i32 2, i8* nonnull %236, i32 %245) #8
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %252, label %248

248:                                              ; preds = %244, %238
  %249 = add nsw i32 %239, 1
  %250 = icmp slt i32 %239, %233
  br i1 %250, label %238, label %251

251:                                              ; preds = %248, %235
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %236) #8
  br label %253

252:                                              ; preds = %244
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %236) #8
  br label %253

253:                                              ; preds = %163, %204, %215, %109, %149, %212, %252, %251, %230, %81, %228, %90
  %254 = phi i8 [ %91, %90 ], [ 0, %81 ], [ 1, %228 ], [ 0, %252 ], [ 1, %251 ], [ 1, %230 ], [ 1, %215 ], [ 0, %109 ], [ 0, %149 ], [ %214, %212 ], [ 0, %204 ], [ 0, %163 ]
  ret i8 %254
}

; Function Attrs: nounwind ssp uwtable
define hidden void @u_enumCharNames_69(i32, i32, i8 (i8*, i32, i32, i8*, i32)*, i8*, i32, i32*) local_unnamed_addr #0 {
  %7 = icmp eq i32* %5, null
  br i1 %7, label %86, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %86

11:                                               ; preds = %8
  %12 = icmp sgt i32 %4, 3
  %13 = icmp eq i8 (i8*, i32, i32, i8*, i32)* %2, null
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 1, i32* %5, align 4
  br label %86

16:                                               ; preds = %11
  %17 = icmp ult i32 %1, 1114112
  %18 = select i1 %17, i32 %1, i32 1114112
  %19 = icmp ugt i32 %18, %0
  br i1 %19, label %20, label %86

20:                                               ; preds = %16
  %21 = tail call fastcc signext i8 @_ZN6icu_69L12isDataLoadedEP10UErrorCode(i32* nonnull %5)
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %86, label %23

23:                                               ; preds = %20
  %24 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  %25 = bitcast %"struct.icu_69::UCharNames"* %24 to i8*
  %26 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %24, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %82, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds i8, i8* %29, i64 4
  br label %35

35:                                               ; preds = %33, %71
  %36 = phi i8* [ %77, %71 ], [ %34, %33 ]
  %37 = phi i32 [ %78, %71 ], [ %31, %33 ]
  %38 = phi i32 [ %72, %71 ], [ %0, %33 ]
  %39 = bitcast i8* %36 to %"struct.icu_69::AlgorithmicRange"*
  %40 = bitcast i8* %36 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp ult i32 %38, %41
  br i1 %42, label %43, label %53

43:                                               ; preds = %35
  %44 = icmp ugt i32 %18, %41
  %45 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  br i1 %44, label %48, label %46

46:                                               ; preds = %43
  %47 = tail call fastcc signext i8 @_ZN6icu_69L9enumNamesEPNS_10UCharNamesEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::UCharNames"* %45, i32 %38, i32 %18, i8 (i8*, i32, i32, i8*, i32)* %2, i8* %3, i32 %4)
  br label %86

48:                                               ; preds = %43
  %49 = tail call fastcc signext i8 @_ZN6icu_69L9enumNamesEPNS_10UCharNamesEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::UCharNames"* %45, i32 %38, i32 %41, i8 (i8*, i32, i32, i8*, i32)* %2, i8* %3, i32 %4)
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %86, label %51

51:                                               ; preds = %48
  %52 = load i32, i32* %40, align 4
  br label %53

53:                                               ; preds = %51, %35
  %54 = phi i32 [ %52, %51 ], [ %38, %35 ]
  %55 = getelementptr inbounds i8, i8* %36, i64 4
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %54, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %53
  %60 = add i32 %57, 1
  %61 = icmp ugt i32 %18, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  %63 = bitcast i8* %36 to %"struct.icu_69::AlgorithmicRange"*
  %64 = tail call fastcc signext i8 @_ZN6icu_69L12enumAlgNamesEPNS_16AlgorithmicRangeEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::AlgorithmicRange"* %63, i32 %54, i32 %18, i8 (i8*, i32, i32, i8*, i32)* %2, i8* %3, i32 %4)
  br label %86

65:                                               ; preds = %59
  %66 = tail call fastcc signext i8 @_ZN6icu_69L12enumAlgNamesEPNS_16AlgorithmicRangeEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::AlgorithmicRange"* %39, i32 %54, i32 %60, i8 (i8*, i32, i32, i8*, i32)* %2, i8* %3, i32 %4)
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %65
  %69 = load i32, i32* %56, align 4
  %70 = add nsw i32 %69, 1
  br label %71

71:                                               ; preds = %53, %68
  %72 = phi i32 [ %70, %68 ], [ %54, %53 ]
  %73 = getelementptr inbounds i8, i8* %36, i64 10
  %74 = bitcast i8* %73 to i16*
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i64
  %77 = getelementptr inbounds i8, i8* %36, i64 %76
  %78 = add i32 %37, -1
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %35

80:                                               ; preds = %71
  %81 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  br label %82

82:                                               ; preds = %80, %23
  %83 = phi %"struct.icu_69::UCharNames"* [ %24, %23 ], [ %81, %80 ]
  %84 = phi i32 [ %0, %23 ], [ %72, %80 ]
  %85 = tail call fastcc signext i8 @_ZN6icu_69L9enumNamesEPNS_10UCharNamesEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::UCharNames"* %83, i32 %84, i32 %18, i8 (i8*, i32, i32, i8*, i32)* %2, i8* %3, i32 %4)
  br label %86

86:                                               ; preds = %65, %48, %20, %16, %6, %8, %82, %62, %46, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZN6icu_69L12enumAlgNamesEPNS_16AlgorithmicRangeEiiPFaPvi15UCharNameChoicePKciES2_S3_(%"struct.icu_69::AlgorithmicRange"*, i32, i32, i8 (i8*, i32, i32, i8*, i32)* nocapture, i8*, i32) unnamed_addr #0 {
  %7 = alloca [200 x i8], align 16
  %8 = alloca [8 x i16], align 16
  %9 = alloca [8 x i8*], align 16
  %10 = alloca [8 x i8*], align 16
  %11 = getelementptr inbounds [200 x i8], [200 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 200, i1 false)
  %12 = and i32 %5, -3
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %350

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  switch i8 %16, label %350 [
    i8 0, label %17
    i8 1, label %63
  ]

17:                                               ; preds = %14
  %18 = call fastcc zeroext i16 @_ZN6icu_69L10getAlgNameEPNS_16AlgorithmicRangeEj15UCharNameChoicePct(%"struct.icu_69::AlgorithmicRange"* %0, i32 %1, i32 %5, i8* nonnull %11, i16 zeroext 200)
  %19 = zext i16 %18 to i32
  %20 = icmp eq i16 %18, 0
  br i1 %20, label %350, label %21

21:                                               ; preds = %17
  %22 = call signext i8 %3(i8* %4, i32 %1, i32 %5, i8* nonnull %11, i32 %19) #8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %350, label %24

24:                                               ; preds = %21, %24
  %25 = phi i8* [ %28, %24 ], [ %11, %21 ]
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  br i1 %27, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds i8, i8* %25, i64 -1
  br label %31

31:                                               ; preds = %29, %58
  %32 = phi i32 [ %33, %58 ], [ %1, %29 ]
  %33 = add nsw i32 %32, 1
  %34 = icmp slt i32 %33, %2
  br i1 %34, label %35, label %350

35:                                               ; preds = %31
  %36 = load i8, i8* %30, align 1
  %37 = add i8 %36, -48
  %38 = icmp ult i8 %37, 9
  %39 = add i8 %36, -65
  %40 = icmp ult i8 %39, 5
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %50, %35
  %43 = phi i8* [ %30, %35 ], [ %51, %50 ]
  %44 = phi i8 [ %36, %35 ], [ %52, %50 ]
  %45 = add nuw nsw i8 %44, 1
  br label %58

46:                                               ; preds = %35, %50
  %47 = phi i8 [ %52, %50 ], [ %36, %35 ]
  %48 = phi i8* [ %51, %50 ], [ %30, %35 ]
  switch i8 %47, label %50 [
    i8 57, label %58
    i8 70, label %49
  ]

49:                                               ; preds = %46
  store i8 48, i8* %48, align 1
  br label %50

50:                                               ; preds = %46, %49
  %51 = getelementptr inbounds i8, i8* %48, i64 -1
  %52 = load i8, i8* %51, align 1
  %53 = add i8 %52, -48
  %54 = icmp ult i8 %53, 9
  %55 = add i8 %52, -65
  %56 = icmp ult i8 %55, 5
  %57 = or i1 %54, %56
  br i1 %57, label %42, label %46

58:                                               ; preds = %46, %42
  %59 = phi i8* [ %43, %42 ], [ %48, %46 ]
  %60 = phi i8 [ %45, %42 ], [ 65, %46 ]
  store i8 %60, i8* %59, align 1
  %61 = call signext i8 %3(i8* %4, i32 %33, i32 %5, i8* nonnull %11, i32 %19) #8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %350, label %31

63:                                               ; preds = %14
  %64 = bitcast [8 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #8
  %65 = getelementptr inbounds [8 x i16], [8 x i16]* %8, i64 0, i64 0
  %66 = bitcast [8 x i8*]* %9 to i8*
  %67 = bitcast [8 x i16]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %66) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %66, i8 -86, i64 64, i1 false)
  %68 = bitcast [8 x i8*]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %68) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 -86, i64 64, i1 false)
  %69 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 1
  %70 = bitcast %"struct.icu_69::AlgorithmicRange"* %69 to i16*
  %71 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 0, i32 3
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i16
  %74 = zext i8 %72 to i32
  %75 = zext i8 %72 to i64
  %76 = getelementptr inbounds i16, i16* %70, i64 %75
  %77 = bitcast i16* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = load i8, i8* %77, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %63, %81
  %82 = phi i8 [ %89, %81 ], [ %79, %63 ]
  %83 = phi i8* [ %88, %81 ], [ %78, %63 ]
  %84 = phi i16 [ %87, %81 ], [ 0, %63 ]
  %85 = phi i8* [ %86, %81 ], [ %11, %63 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 1
  store i8 %82, i8* %85, align 1
  %87 = add i16 %84, 1
  %88 = getelementptr inbounds i8, i8* %83, i64 1
  %89 = load i8, i8* %83, align 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %81

91:                                               ; preds = %81, %63
  %92 = phi i8* [ %11, %63 ], [ %86, %81 ]
  %93 = phi i16 [ 0, %63 ], [ %87, %81 ]
  %94 = phi i8* [ %78, %63 ], [ %88, %81 ]
  %95 = getelementptr inbounds %"struct.icu_69::AlgorithmicRange", %"struct.icu_69::AlgorithmicRange"* %0, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = sub i32 %1, %96
  %98 = getelementptr inbounds [8 x i8*], [8 x i8*]* %9, i64 0, i64 0
  %99 = getelementptr inbounds [8 x i8*], [8 x i8*]* %10, i64 0, i64 0
  %100 = sub i16 200, %93
  %101 = add nsw i16 %73, -1
  %102 = icmp eq i16 %101, 0
  br i1 %102, label %141, label %103

103:                                              ; preds = %91
  %104 = zext i16 %101 to i64
  %105 = and i64 %104, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds i16, i16* %70, i64 %104
  %109 = load i16, i16* %108, align 2
  %110 = zext i16 %109 to i32
  %111 = urem i32 %97, %110
  %112 = trunc i32 %111 to i16
  %113 = getelementptr inbounds [8 x i16], [8 x i16]* %8, i64 0, i64 %104
  store i16 %112, i16* %113, align 2
  %114 = udiv i32 %97, %110
  %115 = add nsw i64 %104, -1
  br label %116

116:                                              ; preds = %103, %107
  %117 = phi i32 [ undef, %103 ], [ %114, %107 ]
  %118 = phi i64 [ %104, %103 ], [ %115, %107 ]
  %119 = phi i32 [ %97, %103 ], [ %114, %107 ]
  %120 = icmp eq i16 %101, 1
  br i1 %120, label %141, label %121

121:                                              ; preds = %116, %121
  %122 = phi i64 [ %140, %121 ], [ %118, %116 ]
  %123 = phi i32 [ %138, %121 ], [ %119, %116 ]
  %124 = getelementptr inbounds i16, i16* %70, i64 %122
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = urem i32 %123, %126
  %128 = trunc i32 %127 to i16
  %129 = getelementptr inbounds [8 x i16], [8 x i16]* %8, i64 0, i64 %122
  store i16 %128, i16* %129, align 2
  %130 = udiv i32 %123, %126
  %131 = add nsw i64 %122, -1
  %132 = getelementptr inbounds i16, i16* %70, i64 %131
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = urem i32 %130, %134
  %136 = trunc i32 %135 to i16
  %137 = getelementptr inbounds [8 x i16], [8 x i16]* %8, i64 0, i64 %131
  store i16 %136, i16* %137, align 2
  %138 = udiv i32 %130, %134
  %139 = icmp eq i64 %131, 1
  %140 = add nsw i64 %122, -2
  br i1 %139, label %141, label %121

141:                                              ; preds = %116, %121, %91
  %142 = phi i64 [ 0, %91 ], [ %104, %121 ], [ %104, %116 ]
  %143 = phi i32 [ %97, %91 ], [ %117, %116 ], [ %138, %121 ]
  %144 = trunc i32 %143 to i16
  store i16 %144, i16* %65, align 16
  br label %145

145:                                              ; preds = %262, %141
  %146 = phi i64 [ %264, %262 ], [ 0, %141 ]
  %147 = phi i8* [ %263, %262 ], [ %94, %141 ]
  %148 = phi i8** [ %157, %262 ], [ %98, %141 ]
  %149 = phi i8** [ %197, %262 ], [ %99, %141 ]
  %150 = phi i8* [ %219, %262 ], [ %92, %141 ]
  %151 = phi i16 [ %220, %262 ], [ %100, %141 ]
  %152 = phi i16 [ %221, %262 ], [ 0, %141 ]
  %153 = icmp eq i8** %148, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %145
  %155 = getelementptr inbounds i8*, i8** %148, i64 1
  store i8* %147, i8** %148, align 8
  br label %156

156:                                              ; preds = %154, %145
  %157 = phi i8** [ %155, %154 ], [ null, %145 ]
  %158 = getelementptr inbounds [8 x i16], [8 x i16]* %8, i64 0, i64 %146
  %159 = load i16, i16* %158, align 2
  %160 = icmp eq i16 %159, 0
  br i1 %160, label %191, label %161

161:                                              ; preds = %156
  %162 = add i16 %159, -1
  %163 = and i16 %159, 3
  %164 = icmp eq i16 %163, 0
  br i1 %164, label %178, label %165

165:                                              ; preds = %161, %174
  %166 = phi i16 [ %175, %174 ], [ %159, %161 ]
  %167 = phi i8* [ %171, %174 ], [ %147, %161 ]
  %168 = phi i16 [ %176, %174 ], [ %163, %161 ]
  br label %169

169:                                              ; preds = %169, %165
  %170 = phi i8* [ %171, %169 ], [ %167, %165 ]
  %171 = getelementptr inbounds i8, i8* %170, i64 1
  %172 = load i8, i8* %170, align 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %169

174:                                              ; preds = %169
  %175 = add i16 %166, -1
  %176 = add i16 %168, -1
  %177 = icmp eq i16 %176, 0
  br i1 %177, label %178, label %165, !llvm.loop !7

178:                                              ; preds = %174, %161
  %179 = phi i8* [ undef, %161 ], [ %171, %174 ]
  %180 = phi i16 [ %159, %161 ], [ %175, %174 ]
  %181 = phi i8* [ %147, %161 ], [ %171, %174 ]
  %182 = icmp ult i16 %162, 3
  br i1 %182, label %191, label %183

183:                                              ; preds = %178, %367
  %184 = phi i16 [ %368, %367 ], [ %180, %178 ]
  %185 = phi i8* [ %364, %367 ], [ %181, %178 ]
  br label %186

186:                                              ; preds = %186, %183
  %187 = phi i8* [ %188, %186 ], [ %185, %183 ]
  %188 = getelementptr inbounds i8, i8* %187, i64 1
  %189 = load i8, i8* %187, align 1
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %352, label %186

191:                                              ; preds = %178, %367, %156
  %192 = phi i8* [ %147, %156 ], [ %179, %178 ], [ %364, %367 ]
  %193 = icmp eq i8** %149, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds i8*, i8** %149, i64 1
  store i8* %192, i8** %149, align 8
  br label %196

196:                                              ; preds = %194, %191
  %197 = phi i8** [ %195, %194 ], [ null, %191 ]
  %198 = getelementptr inbounds i8, i8* %192, i64 1
  %199 = load i8, i8* %192, align 1
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %218, label %201

201:                                              ; preds = %196, %211
  %202 = phi i8 [ %216, %211 ], [ %199, %196 ]
  %203 = phi i8* [ %215, %211 ], [ %198, %196 ]
  %204 = phi i16 [ %214, %211 ], [ %152, %196 ]
  %205 = phi i16 [ %213, %211 ], [ %151, %196 ]
  %206 = phi i8* [ %212, %211 ], [ %150, %196 ]
  %207 = icmp eq i16 %205, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %201
  %209 = getelementptr inbounds i8, i8* %206, i64 1
  store i8 %202, i8* %206, align 1
  %210 = add i16 %205, -1
  br label %211

211:                                              ; preds = %208, %201
  %212 = phi i8* [ %209, %208 ], [ %206, %201 ]
  %213 = phi i16 [ %210, %208 ], [ 0, %201 ]
  %214 = add i16 %204, 1
  %215 = getelementptr inbounds i8, i8* %203, i64 1
  %216 = load i8, i8* %203, align 1
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %201

218:                                              ; preds = %211, %196
  %219 = phi i8* [ %150, %196 ], [ %212, %211 ]
  %220 = phi i16 [ %151, %196 ], [ %213, %211 ]
  %221 = phi i16 [ %152, %196 ], [ %214, %211 ]
  %222 = phi i8* [ %198, %196 ], [ %215, %211 ]
  %223 = icmp eq i64 %146, %142
  br i1 %223, label %265, label %224

224:                                              ; preds = %218
  %225 = getelementptr inbounds i16, i16* %70, i64 %146
  %226 = load i16, i16* %225, align 2
  %227 = load i16, i16* %158, align 2
  %228 = xor i16 %227, -1
  %229 = add i16 %226, %228
  %230 = icmp eq i16 %229, 0
  br i1 %230, label %262, label %231

231:                                              ; preds = %224
  %232 = add i16 %226, -2
  %233 = sub i16 %232, %227
  %234 = and i16 %229, 3
  %235 = icmp eq i16 %234, 0
  br i1 %235, label %249, label %236

236:                                              ; preds = %231, %245
  %237 = phi i16 [ %246, %245 ], [ %229, %231 ]
  %238 = phi i8* [ %242, %245 ], [ %222, %231 ]
  %239 = phi i16 [ %247, %245 ], [ %234, %231 ]
  br label %240

240:                                              ; preds = %240, %236
  %241 = phi i8* [ %242, %240 ], [ %238, %236 ]
  %242 = getelementptr inbounds i8, i8* %241, i64 1
  %243 = load i8, i8* %241, align 1
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %240

245:                                              ; preds = %240
  %246 = add i16 %237, -1
  %247 = add i16 %239, -1
  %248 = icmp eq i16 %247, 0
  br i1 %248, label %249, label %236, !llvm.loop !8

249:                                              ; preds = %245, %231
  %250 = phi i8* [ undef, %231 ], [ %242, %245 ]
  %251 = phi i16 [ %229, %231 ], [ %246, %245 ]
  %252 = phi i8* [ %222, %231 ], [ %242, %245 ]
  %253 = icmp ult i16 %233, 3
  br i1 %253, label %262, label %254

254:                                              ; preds = %249, %385
  %255 = phi i16 [ %386, %385 ], [ %251, %249 ]
  %256 = phi i8* [ %382, %385 ], [ %252, %249 ]
  br label %257

257:                                              ; preds = %257, %254
  %258 = phi i8* [ %259, %257 ], [ %256, %254 ]
  %259 = getelementptr inbounds i8, i8* %258, i64 1
  %260 = load i8, i8* %258, align 1
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %370, label %257

262:                                              ; preds = %249, %385, %224
  %263 = phi i8* [ %222, %224 ], [ %250, %249 ], [ %382, %385 ]
  %264 = add nuw nsw i64 %146, 1
  br label %145

265:                                              ; preds = %218
  %266 = icmp eq i16 %220, 0
  br i1 %266, label %268, label %267

267:                                              ; preds = %265
  store i8 0, i8* %219, align 1
  br label %268

268:                                              ; preds = %265, %267
  %269 = add i16 %221, %93
  %270 = zext i16 %269 to i32
  %271 = call signext i8 %3(i8* %4, i32 %1, i32 %5, i8* nonnull %11, i32 %270) #8
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %348, label %273

273:                                              ; preds = %268
  %274 = zext i16 %101 to i64
  %275 = getelementptr inbounds [8 x i16], [8 x i16]* %8, i64 0, i64 %274
  %276 = getelementptr inbounds i16, i16* %70, i64 %274
  %277 = icmp eq i8 %72, 0
  br label %278

278:                                              ; preds = %273, %341
  %279 = phi i32 [ %280, %341 ], [ %1, %273 ]
  %280 = add nsw i32 %279, 1
  %281 = icmp slt i32 %280, %2
  br i1 %281, label %282, label %347

282:                                              ; preds = %278
  %283 = load i16, i16* %275, align 2
  %284 = add i16 %283, 1
  %285 = load i16, i16* %276, align 2
  %286 = icmp ult i16 %284, %285
  br i1 %286, label %287, label %299

287:                                              ; preds = %299, %282
  %288 = phi i64 [ %274, %282 ], [ %309, %299 ]
  %289 = phi i16* [ %275, %282 ], [ %310, %299 ]
  %290 = phi i16 [ %284, %282 ], [ %312, %299 ]
  store i16 %290, i16* %289, align 2
  %291 = getelementptr inbounds [8 x i8*], [8 x i8*]* %10, i64 0, i64 %288
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %293, %287
  %294 = phi i8* [ %292, %287 ], [ %295, %293 ]
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = load i8, i8* %294, align 1
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %293

298:                                              ; preds = %293
  store i8* %295, i8** %291, align 8
  br i1 %277, label %341, label %316

299:                                              ; preds = %282, %299
  %300 = phi i16* [ %310, %299 ], [ %275, %282 ]
  %301 = phi i64 [ %309, %299 ], [ %274, %282 ]
  %302 = phi i16 [ %308, %299 ], [ %101, %282 ]
  store i16 0, i16* %300, align 2
  %303 = getelementptr inbounds [8 x i8*], [8 x i8*]* %9, i64 0, i64 %301
  %304 = bitcast i8** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = getelementptr inbounds [8 x i8*], [8 x i8*]* %10, i64 0, i64 %301
  %307 = bitcast i8** %306 to i64*
  store i64 %305, i64* %307, align 8
  %308 = add i16 %302, -1
  %309 = zext i16 %308 to i64
  %310 = getelementptr inbounds [8 x i16], [8 x i16]* %8, i64 0, i64 %309
  %311 = load i16, i16* %310, align 2
  %312 = add i16 %311, 1
  %313 = getelementptr inbounds i16, i16* %70, i64 %309
  %314 = load i16, i16* %313, align 2
  %315 = icmp ult i16 %312, %314
  br i1 %315, label %287, label %299

316:                                              ; preds = %298, %335
  %317 = phi i16 [ %338, %335 ], [ 0, %298 ]
  %318 = phi i8* [ %337, %335 ], [ %92, %298 ]
  %319 = phi i16 [ %336, %335 ], [ %93, %298 ]
  %320 = zext i16 %317 to i64
  %321 = getelementptr inbounds [8 x i8*], [8 x i8*]* %10, i64 0, i64 %320
  %322 = load i8*, i8** %321, align 8
  %323 = load i8, i8* %322, align 1
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %335, label %325

325:                                              ; preds = %316, %325
  %326 = phi i8 [ %333, %325 ], [ %323, %316 ]
  %327 = phi i8* [ %331, %325 ], [ %318, %316 ]
  %328 = phi i8* [ %330, %325 ], [ %322, %316 ]
  %329 = phi i16 [ %332, %325 ], [ %319, %316 ]
  %330 = getelementptr inbounds i8, i8* %328, i64 1
  %331 = getelementptr inbounds i8, i8* %327, i64 1
  store i8 %326, i8* %327, align 1
  %332 = add i16 %329, 1
  %333 = load i8, i8* %330, align 1
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %335, label %325

335:                                              ; preds = %325, %316
  %336 = phi i16 [ %319, %316 ], [ %332, %325 ]
  %337 = phi i8* [ %318, %316 ], [ %331, %325 ]
  %338 = add i16 %317, 1
  %339 = zext i16 %338 to i32
  %340 = icmp ult i32 %339, %74
  br i1 %340, label %316, label %341

341:                                              ; preds = %335, %298
  %342 = phi i16 [ %93, %298 ], [ %336, %335 ]
  %343 = phi i8* [ %92, %298 ], [ %337, %335 ]
  store i8 0, i8* %343, align 1
  %344 = zext i16 %342 to i32
  %345 = call signext i8 %3(i8* %4, i32 %280, i32 %5, i8* nonnull %11, i32 %344) #8
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %349, label %278

347:                                              ; preds = %278
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %68) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #8
  br label %350

348:                                              ; preds = %268
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %68) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #8
  br label %350

349:                                              ; preds = %341
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %68) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #8
  br label %350

350:                                              ; preds = %58, %31, %21, %17, %14, %347, %349, %348, %6
  %351 = phi i8 [ 1, %6 ], [ 0, %348 ], [ 0, %349 ], [ 1, %347 ], [ 1, %14 ], [ 0, %21 ], [ 1, %17 ], [ 0, %58 ], [ 1, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %11) #8
  ret i8 %351

352:                                              ; preds = %186, %352
  %353 = phi i8* [ %354, %352 ], [ %188, %186 ]
  %354 = getelementptr inbounds i8, i8* %353, i64 1
  %355 = load i8, i8* %353, align 1
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %357, label %352

357:                                              ; preds = %352, %357
  %358 = phi i8* [ %359, %357 ], [ %354, %352 ]
  %359 = getelementptr inbounds i8, i8* %358, i64 1
  %360 = load i8, i8* %358, align 1
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %362, label %357

362:                                              ; preds = %357, %362
  %363 = phi i8* [ %364, %362 ], [ %359, %357 ]
  %364 = getelementptr inbounds i8, i8* %363, i64 1
  %365 = load i8, i8* %363, align 1
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %367, label %362

367:                                              ; preds = %362
  %368 = add i16 %184, -4
  %369 = icmp eq i16 %368, 0
  br i1 %369, label %191, label %183

370:                                              ; preds = %257, %370
  %371 = phi i8* [ %372, %370 ], [ %259, %257 ]
  %372 = getelementptr inbounds i8, i8* %371, i64 1
  %373 = load i8, i8* %371, align 1
  %374 = icmp eq i8 %373, 0
  br i1 %374, label %375, label %370

375:                                              ; preds = %370, %375
  %376 = phi i8* [ %377, %375 ], [ %372, %370 ]
  %377 = getelementptr inbounds i8, i8* %376, i64 1
  %378 = load i8, i8* %376, align 1
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %380, label %375

380:                                              ; preds = %375, %380
  %381 = phi i8* [ %382, %380 ], [ %377, %375 ]
  %382 = getelementptr inbounds i8, i8* %381, i64 1
  %383 = load i8, i8* %381, align 1
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %385, label %380

385:                                              ; preds = %380
  %386 = add i16 %255, -4
  %387 = icmp eq i16 %386, 0
  br i1 %387, label %262, label %254
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_getMaxCharNameLength_69() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 0, i32* %1, align 4
  %3 = call fastcc signext i8 @_ZN6icu_69L19calcNameSetsLengthsEP10UErrorCode(i32* nonnull %1)
  %4 = icmp eq i8 %3, 0
  %5 = load i32, i32* @_ZN6icu_69L14gMaxNameLengthE, align 4
  %6 = select i1 %4, i32 0, i32 %5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZN6icu_69L19calcNameSetsLengthsEP10UErrorCode(i32*) unnamed_addr #0 {
  %2 = alloca [34 x i16], align 16
  %3 = alloca [34 x i16], align 16
  %4 = alloca i8*, align 8
  %5 = load i32, i32* @_ZN6icu_69L14gMaxNameLengthE, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %333

7:                                                ; preds = %1
  %8 = tail call fastcc signext i8 @_ZN6icu_69L12isDataLoadedEP10UErrorCode(i32* %0)
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %333, label %10

10:                                               ; preds = %7, %335
  %11 = phi i64 [ %346, %335 ], [ 0, %7 ]
  %12 = getelementptr inbounds [20 x i8], [20 x i8]* @_ZZN6icu_69L19calcNameSetsLengthsEP10UErrorCodeE8extChars, i64 0, i64 %11
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i32
  %15 = and i32 %14, 31
  %16 = shl i32 1, %15
  %17 = lshr i32 %14, 5
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = or i32 %16, %20
  store i32 %21, i32* %19, align 4
  %22 = or i64 %11, 1
  %23 = icmp eq i64 %22, 19
  br i1 %23, label %24, label %335

24:                                               ; preds = %10
  %25 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  %26 = bitcast %"struct.icu_69::UCharNames"* %25 to i8*
  %27 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %25, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %162, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds i8, i8* %30, i64 4
  br label %36

36:                                               ; preds = %153, %34
  %37 = phi i32 [ %160, %153 ], [ %32, %34 ]
  %38 = phi i32 [ %154, %153 ], [ 0, %34 ]
  %39 = phi i8* [ %159, %153 ], [ %35, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = load i8, i8* %40, align 4
  switch i8 %41, label %153 [
    i8 0, label %42
    i8 1, label %70
  ]

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %39, i64 12
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %42, %46
  %47 = phi i8 [ %60, %46 ], [ %44, %42 ]
  %48 = phi i32 [ %59, %46 ], [ 0, %42 ]
  %49 = phi i8* [ %50, %46 ], [ %43, %42 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  %51 = zext i8 %47 to i32
  %52 = and i32 %51, 31
  %53 = shl i32 1, %52
  %54 = lshr i32 %51, 5
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = or i32 %57, %53
  store i32 %58, i32* %56, align 4
  %59 = add nuw nsw i32 %48, 1
  %60 = load i8, i8* %50, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %46

62:                                               ; preds = %46, %42
  %63 = phi i32 [ 0, %42 ], [ %59, %46 ]
  %64 = getelementptr inbounds i8, i8* %39, i64 9
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = add nsw i32 %63, %66
  %68 = icmp sgt i32 %67, %38
  %69 = select i1 %68, i32 %67, i32 %38
  br label %153

70:                                               ; preds = %36
  %71 = getelementptr inbounds i8, i8* %39, i64 12
  %72 = bitcast i8* %71 to i16*
  %73 = getelementptr inbounds i8, i8* %39, i64 9
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds i16, i16* %72, i64 %75
  %77 = bitcast i16* %76 to i8*
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %70, %80
  %81 = phi i8 [ %94, %80 ], [ %78, %70 ]
  %82 = phi i32 [ %93, %80 ], [ 0, %70 ]
  %83 = phi i8* [ %84, %80 ], [ %77, %70 ]
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = zext i8 %81 to i32
  %86 = and i32 %85, 31
  %87 = shl i32 1, %86
  %88 = lshr i32 %85, 5
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = or i32 %91, %87
  store i32 %92, i32* %90, align 4
  %93 = add nuw nsw i32 %82, 1
  %94 = load i8, i8* %84, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %80

96:                                               ; preds = %80, %70
  %97 = phi i32 [ 0, %70 ], [ %93, %80 ]
  %98 = icmp eq i8 %74, 0
  br i1 %98, label %149, label %99

99:                                               ; preds = %96
  %100 = add nsw i32 %97, 1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %77, i64 %101
  br label %103

103:                                              ; preds = %143, %99
  %104 = phi i64 [ 0, %99 ], [ %147, %143 ]
  %105 = phi i8* [ %102, %99 ], [ %144, %143 ]
  %106 = phi i32 [ %97, %99 ], [ %146, %143 ]
  %107 = getelementptr inbounds i16, i16* %72, i64 %104
  %108 = load i16, i16* %107, align 2
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %143, label %110

110:                                              ; preds = %103
  %111 = zext i16 %108 to i32
  br label %112

112:                                              ; preds = %134, %110
  %113 = phi i32 [ %140, %134 ], [ 0, %110 ]
  %114 = phi i32 [ %141, %134 ], [ %111, %110 ]
  %115 = phi i8* [ %138, %134 ], [ %105, %110 ]
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %112, %118
  %119 = phi i8 [ %132, %118 ], [ %116, %112 ]
  %120 = phi i32 [ %131, %118 ], [ 0, %112 ]
  %121 = phi i8* [ %122, %118 ], [ %115, %112 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  %123 = zext i8 %119 to i32
  %124 = and i32 %123, 31
  %125 = shl i32 1, %124
  %126 = lshr i32 %123, 5
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = or i32 %129, %125
  store i32 %130, i32* %128, align 4
  %131 = add nuw nsw i32 %120, 1
  %132 = load i8, i8* %122, align 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %118

134:                                              ; preds = %118, %112
  %135 = phi i32 [ 0, %112 ], [ %131, %118 ]
  %136 = add nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %115, i64 %137
  %139 = icmp sgt i32 %135, %113
  %140 = select i1 %139, i32 %135, i32 %113
  %141 = add nsw i32 %114, -1
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %112, label %143

143:                                              ; preds = %134, %103
  %144 = phi i8* [ %105, %103 ], [ %138, %134 ]
  %145 = phi i32 [ 0, %103 ], [ %140, %134 ]
  %146 = add nsw i32 %145, %106
  %147 = add nuw nsw i64 %104, 1
  %148 = icmp eq i64 %147, %75
  br i1 %148, label %149, label %103

149:                                              ; preds = %143, %96
  %150 = phi i32 [ %97, %96 ], [ %146, %143 ]
  %151 = icmp sgt i32 %150, %38
  %152 = select i1 %151, i32 %150, i32 %38
  br label %153

153:                                              ; preds = %149, %62, %36
  %154 = phi i32 [ %38, %36 ], [ %152, %149 ], [ %69, %62 ]
  %155 = getelementptr inbounds i8, i8* %39, i64 10
  %156 = bitcast i8* %155 to i16*
  %157 = load i16, i16* %156, align 2
  %158 = zext i16 %157 to i64
  %159 = getelementptr inbounds i8, i8* %39, i64 %158
  %160 = add i32 %37, -1
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %36

162:                                              ; preds = %153, %24
  %163 = phi i32 [ 0, %24 ], [ %154, %153 ]
  br label %164

164:                                              ; preds = %162, %187
  %165 = phi i64 [ %192, %187 ], [ 0, %162 ]
  %166 = phi i32 [ %191, %187 ], [ %163, %162 ]
  %167 = getelementptr inbounds [33 x i8*], [33 x i8*]* @_ZN6icu_69L12charCatNamesE, i64 0, i64 %165
  %168 = load i8*, i8** %167, align 8
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %164, %171
  %172 = phi i8 [ %185, %171 ], [ %169, %164 ]
  %173 = phi i32 [ %184, %171 ], [ 0, %164 ]
  %174 = phi i8* [ %175, %171 ], [ %168, %164 ]
  %175 = getelementptr inbounds i8, i8* %174, i64 1
  %176 = zext i8 %172 to i32
  %177 = and i32 %176, 31
  %178 = shl i32 1, %177
  %179 = lshr i32 %176, 5
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = or i32 %182, %178
  store i32 %183, i32* %181, align 4
  %184 = add nuw nsw i32 %173, 1
  %185 = load i8, i8* %175, align 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %171

187:                                              ; preds = %171, %164
  %188 = phi i32 [ 0, %164 ], [ %184, %171 ]
  %189 = add nsw i32 %188, 9
  %190 = icmp sgt i32 %189, %166
  %191 = select i1 %190, i32 %189, i32 %166
  %192 = add nuw nsw i64 %165, 1
  %193 = icmp eq i64 %192, 33
  br i1 %193, label %194, label %164

194:                                              ; preds = %187
  %195 = bitcast [34 x i16]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %195) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %195, i8 -86, i64 68, i1 false) #8
  %196 = bitcast [34 x i16]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %196) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %196, i8 -86, i64 68, i1 false) #8
  %197 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %25, i64 1
  %198 = bitcast %"struct.icu_69::UCharNames"* %197 to i16*
  %199 = getelementptr inbounds i16, i16* %198, i64 1
  %200 = load i16, i16* %198, align 2
  %201 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %25, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %26, i64 %203
  %205 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %206 = zext i16 %200 to i64
  %207 = tail call noalias i8* @uprv_malloc_69(i64 %206) #10
  %208 = icmp ne i8* %207, null
  br i1 %208, label %209, label %210

209:                                              ; preds = %194
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %207, i8 0, i64 %206, i1 false) #8
  br label %210

210:                                              ; preds = %209, %194
  %211 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  %212 = bitcast %"struct.icu_69::UCharNames"* %211 to i8*
  %213 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %211, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* %212, i64 %215
  %217 = bitcast i8* %216 to i16*
  %218 = load i16, i16* %217, align 2
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %329, label %220

220:                                              ; preds = %210
  %221 = zext i16 %218 to i32
  %222 = getelementptr inbounds i8, i8* %216, i64 2
  %223 = bitcast i8* %222 to i16*
  %224 = getelementptr inbounds [34 x i16], [34 x i16]* %2, i64 0, i64 0
  %225 = getelementptr inbounds [34 x i16], [34 x i16]* %3, i64 0, i64 0
  br label %226

226:                                              ; preds = %326, %220
  %227 = phi %"struct.icu_69::UCharNames"* [ %211, %220 ], [ %328, %326 ]
  %228 = phi i32 [ %221, %220 ], [ %324, %326 ]
  %229 = phi i16* [ %223, %220 ], [ %327, %326 ]
  %230 = phi i32 [ %191, %220 ], [ %320, %326 ]
  %231 = bitcast %"struct.icu_69::UCharNames"* %227 to i8*
  %232 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %227, i64 0, i32 2
  %233 = load i32, i32* %232, align 4
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %231, i64 %234
  %236 = getelementptr inbounds i16, i16* %229, i64 1
  %237 = load i16, i16* %236, align 2
  %238 = zext i16 %237 to i32
  %239 = shl nuw i32 %238, 16
  %240 = getelementptr inbounds i16, i16* %229, i64 2
  %241 = load i16, i16* %240, align 2
  %242 = zext i16 %241 to i32
  %243 = or i32 %239, %242
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i8, i8* %235, i64 %244
  br label %246

246:                                              ; preds = %290, %226
  %247 = phi i16 [ 0, %226 ], [ %295, %290 ]
  %248 = phi i16 [ 0, %226 ], [ %294, %290 ]
  %249 = phi i16 [ 0, %226 ], [ %293, %290 ]
  %250 = phi i16* [ %225, %226 ], [ %292, %290 ]
  %251 = phi i16* [ %224, %226 ], [ %291, %290 ]
  %252 = phi i8* [ %245, %226 ], [ %253, %290 ]
  %253 = getelementptr inbounds i8, i8* %252, i64 1
  %254 = load i8, i8* %252, align 1
  %255 = icmp ugt i16 %247, 11
  br i1 %255, label %256, label %264

256:                                              ; preds = %246
  %257 = shl nsw i16 %247, 4
  %258 = and i16 %257, 48
  %259 = lshr i8 %254, 4
  %260 = zext i8 %259 to i16
  %261 = or i16 %258, %260
  %262 = add nuw nsw i16 %261, 12
  %263 = and i8 %254, 15
  br label %274

264:                                              ; preds = %246
  %265 = icmp ugt i8 %254, -65
  br i1 %265, label %266, label %270

266:                                              ; preds = %264
  %267 = and i8 %254, 63
  %268 = add nuw nsw i8 %267, 12
  %269 = zext i8 %268 to i16
  br label %274

270:                                              ; preds = %264
  %271 = lshr i8 %254, 4
  %272 = zext i8 %271 to i16
  %273 = and i8 %254, 15
  br label %274

274:                                              ; preds = %270, %266, %256
  %275 = phi i16 [ %262, %256 ], [ %269, %266 ], [ %272, %270 ]
  %276 = phi i8 [ %263, %256 ], [ %254, %266 ], [ %273, %270 ]
  %277 = getelementptr inbounds i16, i16* %251, i64 1
  store i16 %248, i16* %251, align 2
  %278 = getelementptr inbounds i16, i16* %250, i64 1
  store i16 %275, i16* %250, align 2
  %279 = add i16 %275, %248
  %280 = add nuw nsw i16 %249, 1
  %281 = icmp ult i8 %276, 16
  br i1 %281, label %282, label %290

282:                                              ; preds = %274
  %283 = zext i8 %276 to i16
  %284 = icmp ult i8 %276, 12
  br i1 %284, label %285, label %290

285:                                              ; preds = %282
  %286 = getelementptr inbounds i16, i16* %251, i64 2
  store i16 %279, i16* %277, align 2
  %287 = getelementptr inbounds i16, i16* %250, i64 2
  store i16 %283, i16* %278, align 2
  %288 = add i16 %279, %283
  %289 = add nuw nsw i16 %249, 2
  br label %290

290:                                              ; preds = %285, %282, %274
  %291 = phi i16* [ %286, %285 ], [ %277, %282 ], [ %277, %274 ]
  %292 = phi i16* [ %287, %285 ], [ %278, %282 ], [ %278, %274 ]
  %293 = phi i16 [ %289, %285 ], [ %280, %282 ], [ %280, %274 ]
  %294 = phi i16 [ %288, %285 ], [ %279, %282 ], [ %279, %274 ]
  %295 = phi i16 [ %283, %285 ], [ %283, %282 ], [ 0, %274 ]
  %296 = icmp ult i16 %293, 32
  br i1 %296, label %246, label %297

297:                                              ; preds = %290, %319
  %298 = phi i64 [ %321, %319 ], [ 0, %290 ]
  %299 = phi i32 [ %320, %319 ], [ %230, %290 ]
  %300 = getelementptr inbounds [34 x i16], [34 x i16]* %2, i64 0, i64 %298
  %301 = load i16, i16* %300, align 2
  %302 = zext i16 %301 to i64
  %303 = getelementptr inbounds i8, i8* %253, i64 %302
  store i8* %303, i8** %4, align 8
  %304 = getelementptr inbounds [34 x i16], [34 x i16]* %3, i64 0, i64 %298
  %305 = load i16, i16* %304, align 2
  %306 = icmp eq i16 %305, 0
  br i1 %306, label %319, label %307

307:                                              ; preds = %297
  %308 = zext i16 %305 to i64
  %309 = getelementptr inbounds i8, i8* %303, i64 %308
  %310 = call fastcc i32 @_ZN6icu_69L17calcNameSetLengthEPKttPKhPaPjPS3_S3_(i16* %199, i16 zeroext %200, i8* %204, i8* %207, i8** nonnull %4, i8* %309) #8
  %311 = icmp sgt i32 %310, %299
  %312 = select i1 %311, i32 %310, i32 %299
  %313 = load i8*, i8** %4, align 8
  %314 = icmp eq i8* %313, %309
  br i1 %314, label %319, label %315

315:                                              ; preds = %307
  %316 = call fastcc i32 @_ZN6icu_69L17calcNameSetLengthEPKttPKhPaPjPS3_S3_(i16* %199, i16 zeroext %200, i8* %204, i8* %207, i8** nonnull %4, i8* %309) #8
  %317 = icmp sgt i32 %316, %312
  %318 = select i1 %317, i32 %316, i32 %312
  br label %319

319:                                              ; preds = %315, %307, %297
  %320 = phi i32 [ %299, %297 ], [ %312, %307 ], [ %318, %315 ]
  %321 = add nuw nsw i64 %298, 1
  %322 = icmp eq i64 %321, 32
  br i1 %322, label %323, label %297

323:                                              ; preds = %319
  %324 = add nsw i32 %228, -1
  %325 = icmp sgt i32 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %323
  %327 = getelementptr inbounds i16, i16* %229, i64 3
  %328 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  br label %226

329:                                              ; preds = %323, %210
  %330 = phi i32 [ %191, %210 ], [ %320, %323 ]
  br i1 %208, label %331, label %332

331:                                              ; preds = %329
  tail call void @uprv_free_69(i8* nonnull %207) #8
  br label %332

332:                                              ; preds = %329, %331
  store i32 %330, i32* @_ZN6icu_69L14gMaxNameLengthE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %195) #8
  br label %333

333:                                              ; preds = %7, %1, %332
  %334 = phi i8 [ 1, %332 ], [ 1, %1 ], [ 0, %7 ]
  ret i8 %334

335:                                              ; preds = %10
  %336 = getelementptr inbounds [20 x i8], [20 x i8]* @_ZZN6icu_69L19calcNameSetsLengthsEP10UErrorCodeE8extChars, i64 0, i64 %22
  %337 = load i8, i8* %336, align 1
  %338 = zext i8 %337 to i32
  %339 = and i32 %338, 31
  %340 = shl i32 1, %339
  %341 = lshr i32 %338, 5
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = or i32 %340, %344
  store i32 %345, i32* %343, align 4
  %346 = add nuw nsw i64 %11, 2
  br label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @uprv_getCharNameCharacters_69(%struct.USetAdder* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [256 x i16], align 16
  %3 = alloca [256 x i8], align 16
  %4 = alloca i32, align 4
  %5 = bitcast [256 x i16]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 512, i1 false) #8
  %6 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 256, i1 false) #8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 0, i32* %4, align 4
  %8 = call fastcc signext i8 @_ZN6icu_69L19calcNameSetsLengthsEP10UErrorCode(i32* nonnull %4) #8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %1, %27
  %11 = phi i32 [ %28, %27 ], [ 0, %1 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %1 ]
  %13 = lshr i32 %12, 5
  %14 = and i32 %13, 7
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %12, 31
  %19 = shl i32 1, %18
  %20 = and i32 %19, %17
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %10
  %23 = trunc i32 %12 to i8
  %24 = add nsw i32 %11, 1
  %25 = sext i32 %11 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %25
  store i8 %23, i8* %26, align 1
  br label %27

27:                                               ; preds = %22, %10
  %28 = phi i32 [ %24, %22 ], [ %11, %10 ]
  %29 = add nuw nsw i32 %12, 1
  %30 = icmp eq i32 %29, 256
  br i1 %30, label %31, label %10

31:                                               ; preds = %27
  %32 = getelementptr inbounds [256 x i16], [256 x i16]* %2, i64 0, i64 0
  call void @u_charsToUChars_69(i8* nonnull %6, i16* nonnull %32, i32 %28) #8
  %33 = icmp sgt i32 %28, 0
  br i1 %33, label %34, label %54

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %0, i64 0, i32 1
  %36 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %0, i64 0, i32 0
  %37 = zext i32 %28 to i64
  br label %38

38:                                               ; preds = %51, %34
  %39 = phi i64 [ 0, %34 ], [ %52, %51 ]
  %40 = getelementptr inbounds [256 x i16], [256 x i16]* %2, i64 0, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %39
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %43, %38
  %48 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %35, align 8
  %49 = load %struct.USet*, %struct.USet** %36, align 8
  %50 = zext i16 %41 to i32
  call void %48(%struct.USet* %49, i32 %50) #8
  br label %51

51:                                               ; preds = %47, %43
  %52 = add nuw nsw i64 %39, 1
  %53 = icmp eq i64 %52, %37
  br i1 %53, label %54, label %38

54:                                               ; preds = %51, %1, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uchar_swapNames_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = alloca [512 x i16], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca [256 x i8], align 16
  %9 = alloca [33 x i16], align 16
  %10 = alloca [33 x i16], align 16
  %11 = tail call i32 @udata_swapDataHeader_69(%struct.UDataSwapper* %0, i8* %1, i32 %2, i8* %3, i32* %4) #8
  %12 = icmp eq i32* %4, null
  br i1 %12, label %456, label %13

13:                                               ; preds = %5
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %456

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 117
  %20 = getelementptr inbounds i8, i8* %1, i64 13
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 110
  %23 = and i1 %19, %22
  br i1 %23, label %24, label %36

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %1, i64 14
  %26 = load i8, i8* %25, align 2
  %27 = icmp eq i8 %26, 97
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %1, i64 15
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 109
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %1, i64 16
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %49, label %36

36:                                               ; preds = %16, %32, %28, %24
  %37 = phi i8 [ 110, %32 ], [ 110, %28 ], [ 110, %24 ], [ %21, %16 ]
  %38 = zext i8 %18 to i32
  %39 = zext i8 %37 to i32
  %40 = getelementptr inbounds i8, i8* %1, i64 14
  %41 = load i8, i8* %40, align 2
  %42 = zext i8 %41 to i32
  %43 = getelementptr inbounds i8, i8* %1, i64 15
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %1, i64 16
  %47 = load i8, i8* %46, align 2
  %48 = zext i8 %47 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str, i64 0, i64 0), i32 %38, i32 %39, i32 %42, i32 %45, i32 %48) #8
  store i32 16, i32* %4, align 4
  br label %456

49:                                               ; preds = %32
  %50 = sext i32 %11 to i64
  %51 = getelementptr inbounds i8, i8* %1, i64 %50
  %52 = getelementptr inbounds i8, i8* %3, i64 %50
  %53 = icmp slt i32 %2, 0
  br i1 %53, label %66, label %54

54:                                               ; preds = %49
  %55 = sub nsw i32 %2, %11
  %56 = icmp slt i32 %55, 20
  br i1 %56, label %65, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %59 = load i32 (i32)*, i32 (i32)** %58, align 8
  %60 = getelementptr inbounds i8, i8* %51, i64 12
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = tail call i32 %59(i32 %62) #8
  %64 = icmp ult i32 %55, %63
  br i1 %64, label %65, label %97

65:                                               ; preds = %57, %54
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 %55) #8
  store i32 8, i32* %4, align 4
  br label %456

66:                                               ; preds = %49
  %67 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 5
  %68 = load i32 (i32)*, i32 (i32)** %67, align 8
  %69 = getelementptr inbounds i8, i8* %51, i64 12
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = tail call i32 %68(i32 %71) #8
  %73 = load i32 (i32)*, i32 (i32)** %67, align 8
  %74 = zext i32 %72 to i64
  %75 = getelementptr inbounds i8, i8* %51, i64 %74
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = tail call i32 %73(i32 %77) #8
  %79 = add i32 %72, 4
  %80 = icmp eq i32 %78, 0
  br i1 %80, label %453, label %81

81:                                               ; preds = %66
  %82 = getelementptr inbounds i8, i8* %51, i64 10
  %83 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 4
  br label %84

84:                                               ; preds = %84, %81
  %85 = phi i32 [ 0, %81 ], [ %95, %84 ]
  %86 = phi i32 [ %79, %81 ], [ %94, %84 ]
  %87 = zext i32 %86 to i64
  %88 = load i16 (i16)*, i16 (i16)** %83, align 8
  %89 = getelementptr inbounds i8, i8* %82, i64 %87
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = tail call zeroext i16 %88(i16 zeroext %91) #8
  %93 = zext i16 %92 to i32
  %94 = add i32 %86, %93
  %95 = add nuw i32 %85, 1
  %96 = icmp eq i32 %95, %78
  br i1 %96, label %453, label %84

97:                                               ; preds = %57
  %98 = bitcast [512 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %98) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %98, i8 -86, i64 1024, i1 false)
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %99) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %99, i8 -86, i64 256, i1 false)
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %100) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %100, i8 -86, i64 256, i1 false)
  %101 = icmp eq i8* %1, %3
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = sext i32 %55 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %51, i64 %103, i1 false)
  br label %104

104:                                              ; preds = %97, %102
  %105 = load i32 (i32)*, i32 (i32)** %58, align 8
  %106 = bitcast i8* %51 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = tail call i32 %105(i32 %107) #8
  %109 = load i32 (i32)*, i32 (i32)** %58, align 8
  %110 = getelementptr inbounds i8, i8* %51, i64 4
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = tail call i32 %109(i32 %112) #8
  %114 = load i32 (i32)*, i32 (i32)** %58, align 8
  %115 = getelementptr inbounds i8, i8* %51, i64 8
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = tail call i32 %114(i32 %117) #8
  %119 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %120 = bitcast {}** %119 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %121 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %120, align 8
  %122 = tail call i32 %121(%struct.UDataSwapper* %0, i8* %51, i32 16, i8* %52, i32* nonnull %4) #8
  %123 = getelementptr inbounds i8, i8* %51, i64 16
  %124 = bitcast i8* %123 to i16*
  %125 = getelementptr inbounds i8, i8* %52, i64 16
  %126 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 4
  %127 = load i16 (i16)*, i16 (i16)** %126, align 8
  %128 = load i16, i16* %124, align 2
  %129 = tail call zeroext i16 %127(i16 zeroext %128) #8
  %130 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %131 = bitcast {}** %130 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %132 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %131, align 8
  %133 = tail call i32 %132(%struct.UDataSwapper* %0, i8* %123, i32 2, i8* %125, i32* nonnull %4) #8
  %134 = getelementptr inbounds i8, i8* %123, i64 2
  %135 = bitcast i8* %134 to i16*
  %136 = getelementptr inbounds i8, i8* %125, i64 2
  %137 = zext i16 %129 to i32
  %138 = icmp ult i32 %137, 512
  %139 = select i1 %138, i32 %137, i32 512
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %146, label %141

141:                                              ; preds = %104
  %142 = zext i32 %139 to i64
  br label %155

143:                                              ; preds = %155
  %144 = trunc i64 %161 to i32
  %145 = icmp ult i32 %144, 512
  br i1 %145, label %146, label %163

146:                                              ; preds = %104, %143
  %147 = phi i32 [ %144, %143 ], [ 0, %104 ]
  %148 = zext i32 %147 to i64
  %149 = getelementptr [512 x i16], [512 x i16]* %6, i64 0, i64 %148
  %150 = bitcast i16* %149 to i8*
  %151 = sub nuw nsw i32 511, %147
  %152 = zext i32 %151 to i64
  %153 = shl nuw nsw i64 %152, 1
  %154 = add nuw nsw i64 %153, 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %150, i8 0, i64 %154, i1 false)
  br label %163

155:                                              ; preds = %141, %155
  %156 = phi i64 [ 0, %141 ], [ %161, %155 ]
  %157 = getelementptr inbounds i16, i16* %135, i64 %156
  %158 = load i16, i16* %157, align 2
  %159 = tail call signext i16 @udata_readInt16_69(%struct.UDataSwapper* %0, i16 signext %158) #8
  %160 = getelementptr inbounds [512 x i16], [512 x i16]* %6, i64 0, i64 %156
  store i16 %159, i16* %160, align 2
  %161 = add nuw nsw i64 %156, 1
  %162 = icmp ult i64 %161, %142
  br i1 %162, label %155, label %143

163:                                              ; preds = %146, %143
  %164 = getelementptr inbounds [512 x i16], [512 x i16]* %6, i64 0, i64 0
  call fastcc void @_ZL12makeTokenMapPK12UDataSwapperPstPhP10UErrorCode(%struct.UDataSwapper* %0, i16* nonnull %164, i16 zeroext %129, i8* nonnull %99, i32* %4)
  %165 = getelementptr inbounds [512 x i16], [512 x i16]* %6, i64 0, i64 256
  %166 = icmp ugt i16 %129, 256
  %167 = add i16 %129, -256
  %168 = select i1 %166, i16 %167, i16 0
  call fastcc void @_ZL12makeTokenMapPK12UDataSwapperPstPhP10UErrorCode(%struct.UDataSwapper* %0, i16* %165, i16 zeroext %168, i8* nonnull %100, i32* %4)
  %169 = load i32, i32* %4, align 4
  %170 = icmp slt i32 %169, 1
  br i1 %170, label %171, label %450

171:                                              ; preds = %163
  %172 = shl nuw nsw i32 %137, 1
  %173 = zext i32 %172 to i64
  %174 = tail call noalias i8* @uprv_malloc_69(i64 %173) #10
  %175 = bitcast i8* %174 to i16*
  %176 = icmp eq i8* %174, null
  br i1 %176, label %181, label %177

177:                                              ; preds = %171
  %178 = icmp eq i16 %129, 0
  br i1 %178, label %184, label %179

179:                                              ; preds = %177
  %180 = zext i16 %129 to i64
  br label %190

181:                                              ; preds = %171
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i32 %137) #8
  store i32 7, i32* %4, align 4
  br label %450

182:                                              ; preds = %190
  %183 = trunc i64 %201 to i32
  br label %184

184:                                              ; preds = %182, %177
  %185 = phi i32 [ 0, %177 ], [ %183, %182 ]
  %186 = icmp ult i32 %185, %137
  br i1 %186, label %187, label %221

187:                                              ; preds = %184
  %188 = zext i32 %185 to i64
  %189 = zext i16 %129 to i64
  br label %205

190:                                              ; preds = %179, %190
  %191 = phi i64 [ 0, %179 ], [ %201, %190 ]
  %192 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %131, align 8
  %193 = getelementptr inbounds i16, i16* %135, i64 %191
  %194 = bitcast i16* %193 to i8*
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %191
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds i16, i16* %175, i64 %197
  %199 = bitcast i16* %198 to i8*
  %200 = tail call i32 %192(%struct.UDataSwapper* %0, i8* %194, i32 2, i8* %199, i32* %4) #8
  %201 = add nuw nsw i64 %191, 1
  %202 = icmp ult i64 %201, %180
  %203 = icmp ult i64 %201, 256
  %204 = and i1 %202, %203
  br i1 %204, label %190, label %182

205:                                              ; preds = %205, %187
  %206 = phi i64 [ %188, %187 ], [ %219, %205 ]
  %207 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %131, align 8
  %208 = getelementptr inbounds i16, i16* %135, i64 %206
  %209 = bitcast i16* %208 to i8*
  %210 = and i64 %206, 4294967040
  %211 = getelementptr inbounds i16, i16* %175, i64 %210
  %212 = and i64 %206, 255
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i64
  %216 = getelementptr inbounds i16, i16* %211, i64 %215
  %217 = bitcast i16* %216 to i8*
  %218 = tail call i32 %207(%struct.UDataSwapper* %0, i8* %209, i32 2, i8* %217, i32* %4) #8
  %219 = add nuw nsw i64 %206, 1
  %220 = icmp eq i64 %219, %189
  br i1 %220, label %221, label %205

221:                                              ; preds = %205, %184
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %136, i8* nonnull align 2 %174, i64 %173, i1 false)
  tail call void @uprv_free_69(i8* nonnull %174) #8
  %222 = zext i32 %108 to i64
  %223 = getelementptr inbounds i8, i8* %51, i64 %222
  %224 = sub i32 %113, %108
  %225 = getelementptr inbounds i8, i8* %52, i64 %222
  %226 = tail call i32 @udata_swapInvStringBlock_69(%struct.UDataSwapper* %0, i8* %223, i32 %224, i8* %225, i32* %4) #8
  %227 = load i32, i32* %4, align 4
  %228 = icmp slt i32 %227, 1
  br i1 %228, label %230, label %229

229:                                              ; preds = %221
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #8
  br label %450

230:                                              ; preds = %221
  %231 = load i16 (i16)*, i16 (i16)** %126, align 8
  %232 = zext i32 %113 to i64
  %233 = getelementptr inbounds i8, i8* %51, i64 %232
  %234 = bitcast i8* %233 to i16*
  %235 = load i16, i16* %234, align 2
  %236 = tail call zeroext i16 %231(i16 zeroext %235) #8
  %237 = zext i16 %236 to i32
  %238 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %131, align 8
  %239 = mul nuw nsw i32 %237, 6
  %240 = add nuw nsw i32 %239, 2
  %241 = getelementptr inbounds i8, i8* %52, i64 %232
  %242 = tail call i32 %238(%struct.UDataSwapper* %0, i8* %233, i32 %240, i8* %241, i32* %4) #8
  %243 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 1
  %244 = load i8, i8* %243, align 1
  %245 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 3
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %244, %246
  br i1 %247, label %361, label %248

248:                                              ; preds = %230
  %249 = bitcast [33 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %249) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %249, i8 -86, i64 66, i1 false)
  %250 = bitcast [33 x i16]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %250) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %250, i8 -86, i64 66, i1 false)
  %251 = zext i32 %118 to i64
  %252 = sub i32 %63, %118
  %253 = icmp ugt i32 %252, 32
  br i1 %253, label %254, label %360

254:                                              ; preds = %248
  %255 = getelementptr inbounds i8, i8* %52, i64 %251
  %256 = getelementptr inbounds i8, i8* %51, i64 %251
  %257 = getelementptr inbounds [33 x i16], [33 x i16]* %9, i64 0, i64 0
  %258 = getelementptr inbounds [33 x i16], [33 x i16]* %10, i64 0, i64 0
  %259 = getelementptr inbounds [33 x i16], [33 x i16]* %9, i64 0, i64 31
  %260 = getelementptr inbounds [33 x i16], [33 x i16]* %10, i64 0, i64 31
  br label %265

261:                                              ; preds = %354, %320
  %262 = phi i8* [ %276, %320 ], [ %356, %354 ]
  %263 = phi i8* [ %326, %320 ], [ %357, %354 ]
  %264 = icmp ugt i32 %332, 32
  br i1 %264, label %265, label %360

265:                                              ; preds = %254, %261
  %266 = phi i8* [ %255, %254 ], [ %263, %261 ]
  %267 = phi i8* [ %256, %254 ], [ %262, %261 ]
  %268 = phi i32 [ %252, %254 ], [ %332, %261 ]
  br label %269

269:                                              ; preds = %313, %265
  %270 = phi i16 [ 0, %265 ], [ %318, %313 ]
  %271 = phi i16 [ 0, %265 ], [ %317, %313 ]
  %272 = phi i16 [ 0, %265 ], [ %316, %313 ]
  %273 = phi i16* [ %258, %265 ], [ %315, %313 ]
  %274 = phi i16* [ %257, %265 ], [ %314, %313 ]
  %275 = phi i8* [ %267, %265 ], [ %276, %313 ]
  %276 = getelementptr inbounds i8, i8* %275, i64 1
  %277 = load i8, i8* %275, align 1
  %278 = icmp ugt i16 %270, 11
  br i1 %278, label %279, label %287

279:                                              ; preds = %269
  %280 = shl nsw i16 %270, 4
  %281 = and i16 %280, 48
  %282 = lshr i8 %277, 4
  %283 = zext i8 %282 to i16
  %284 = or i16 %281, %283
  %285 = add nuw nsw i16 %284, 12
  %286 = and i8 %277, 15
  br label %297

287:                                              ; preds = %269
  %288 = icmp ugt i8 %277, -65
  br i1 %288, label %289, label %293

289:                                              ; preds = %287
  %290 = and i8 %277, 63
  %291 = add nuw nsw i8 %290, 12
  %292 = zext i8 %291 to i16
  br label %297

293:                                              ; preds = %287
  %294 = lshr i8 %277, 4
  %295 = zext i8 %294 to i16
  %296 = and i8 %277, 15
  br label %297

297:                                              ; preds = %293, %289, %279
  %298 = phi i16 [ %285, %279 ], [ %292, %289 ], [ %295, %293 ]
  %299 = phi i8 [ %286, %279 ], [ %277, %289 ], [ %296, %293 ]
  %300 = getelementptr inbounds i16, i16* %274, i64 1
  store i16 %271, i16* %274, align 2
  %301 = getelementptr inbounds i16, i16* %273, i64 1
  store i16 %298, i16* %273, align 2
  %302 = add i16 %298, %271
  %303 = add nuw nsw i16 %272, 1
  %304 = icmp ult i8 %299, 16
  br i1 %304, label %305, label %313

305:                                              ; preds = %297
  %306 = zext i8 %299 to i16
  %307 = icmp ult i8 %299, 12
  br i1 %307, label %308, label %313

308:                                              ; preds = %305
  %309 = getelementptr inbounds i16, i16* %274, i64 2
  store i16 %302, i16* %300, align 2
  %310 = getelementptr inbounds i16, i16* %273, i64 2
  store i16 %306, i16* %301, align 2
  %311 = add i16 %302, %306
  %312 = add nuw nsw i16 %272, 2
  br label %313

313:                                              ; preds = %308, %305, %297
  %314 = phi i16* [ %309, %308 ], [ %300, %305 ], [ %300, %297 ]
  %315 = phi i16* [ %310, %308 ], [ %301, %305 ], [ %301, %297 ]
  %316 = phi i16 [ %312, %308 ], [ %303, %305 ], [ %303, %297 ]
  %317 = phi i16 [ %311, %308 ], [ %302, %305 ], [ %302, %297 ]
  %318 = phi i16 [ %306, %308 ], [ %306, %305 ], [ 0, %297 ]
  %319 = icmp ult i16 %316, 32
  br i1 %319, label %269, label %320

320:                                              ; preds = %313
  %321 = ptrtoint i8* %276 to i64
  %322 = ptrtoint i8* %267 to i64
  %323 = sub i64 %321, %322
  %324 = trunc i64 %323 to i32
  %325 = sub i32 %268, %324
  %326 = getelementptr inbounds i8, i8* %266, i64 %323
  %327 = load i16, i16* %259, align 2
  %328 = zext i16 %327 to i32
  %329 = load i16, i16* %260, align 2
  %330 = zext i16 %329 to i32
  %331 = add nuw nsw i32 %330, %328
  %332 = sub i32 %325, %331
  %333 = icmp eq i32 %331, 0
  br i1 %333, label %261, label %334

334:                                              ; preds = %320, %354
  %335 = phi i8* [ %357, %354 ], [ %326, %320 ]
  %336 = phi i8* [ %356, %354 ], [ %276, %320 ]
  %337 = phi i32 [ %358, %354 ], [ %331, %320 ]
  %338 = getelementptr inbounds i8, i8* %336, i64 1
  %339 = load i8, i8* %336, align 1
  %340 = zext i8 %339 to i64
  %341 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = getelementptr inbounds i8, i8* %335, i64 1
  store i8 %342, i8* %335, align 1
  %344 = getelementptr inbounds [512 x i16], [512 x i16]* %6, i64 0, i64 %340
  %345 = load i16, i16* %344, align 2
  %346 = icmp eq i16 %345, -2
  br i1 %346, label %347, label %354

347:                                              ; preds = %334
  %348 = getelementptr inbounds i8, i8* %336, i64 2
  %349 = load i8, i8* %338, align 1
  %350 = zext i8 %349 to i64
  %351 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = getelementptr inbounds i8, i8* %335, i64 2
  store i8 %352, i8* %343, align 1
  br label %354

354:                                              ; preds = %334, %347
  %355 = phi i32 [ -2, %347 ], [ -1, %334 ]
  %356 = phi i8* [ %348, %347 ], [ %338, %334 ]
  %357 = phi i8* [ %353, %347 ], [ %343, %334 ]
  %358 = add i32 %337, %355
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %261, label %334

360:                                              ; preds = %261, %248
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %250) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %249) #8
  br label %361

361:                                              ; preds = %230, %360
  %362 = load i32 (i32)*, i32 (i32)** %58, align 8
  %363 = zext i32 %63 to i64
  %364 = getelementptr inbounds i8, i8* %51, i64 %363
  %365 = bitcast i8* %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = tail call i32 %362(i32 %366) #8
  %368 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %120, align 8
  %369 = getelementptr inbounds i8, i8* %52, i64 %363
  %370 = tail call i32 %368(%struct.UDataSwapper* %0, i8* %364, i32 4, i8* %369, i32* %4) #8
  %371 = add i32 %63, 4
  %372 = icmp eq i32 %367, 0
  br i1 %372, label %451, label %373

373:                                              ; preds = %361
  %374 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 12
  %375 = bitcast {}** %374 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  br label %376

376:                                              ; preds = %447, %373
  %377 = phi i32 [ 0, %373 ], [ %448, %447 ]
  %378 = phi i32 [ %371, %373 ], [ %391, %447 ]
  %379 = icmp ugt i32 %378, %55
  br i1 %379, label %380, label %381

380:                                              ; preds = %376
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.4, i64 0, i64 0), i32 %55, i32 %377) #8
  store i32 8, i32* %4, align 4
  br label %450

381:                                              ; preds = %376
  %382 = zext i32 %378 to i64
  %383 = getelementptr inbounds i8, i8* %51, i64 %382
  %384 = getelementptr inbounds i8, i8* %52, i64 %382
  %385 = load i16 (i16)*, i16 (i16)** %126, align 8
  %386 = getelementptr inbounds i8, i8* %383, i64 10
  %387 = bitcast i8* %386 to i16*
  %388 = load i16, i16* %387, align 2
  %389 = tail call zeroext i16 %385(i16 zeroext %388) #8
  %390 = zext i16 %389 to i32
  %391 = add i32 %378, %390
  %392 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %120, align 8
  %393 = tail call i32 %392(%struct.UDataSwapper* %0, i8* %383, i32 8, i8* %384, i32* %4) #8
  %394 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %131, align 8
  %395 = getelementptr inbounds i8, i8* %384, i64 10
  %396 = tail call i32 %394(%struct.UDataSwapper* %0, i8* %386, i32 2, i8* %395, i32* %4) #8
  %397 = getelementptr inbounds i8, i8* %383, i64 8
  %398 = load i8, i8* %397, align 4
  switch i8 %398, label %445 [
    i8 0, label %399
    i8 1, label %409
  ]

399:                                              ; preds = %381
  %400 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %375, align 8
  %401 = getelementptr inbounds i8, i8* %383, i64 12
  %402 = tail call i64 @strlen(i8* %401) #9
  %403 = trunc i64 %402 to i32
  %404 = getelementptr inbounds i8, i8* %384, i64 12
  %405 = tail call i32 %400(%struct.UDataSwapper* %0, i8* %401, i32 %403, i8* %404, i32* %4) #8
  %406 = load i32, i32* %4, align 4
  %407 = icmp slt i32 %406, 1
  br i1 %407, label %447, label %408

408:                                              ; preds = %399
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i64 0, i64 0), i32 %377) #8
  br label %450

409:                                              ; preds = %381
  %410 = getelementptr inbounds i8, i8* %383, i64 9
  %411 = load i8, i8* %410, align 1
  %412 = zext i8 %411 to i32
  %413 = getelementptr inbounds i8, i8* %383, i64 12
  %414 = bitcast i8* %413 to i16*
  %415 = getelementptr inbounds i8, i8* %384, i64 12
  %416 = bitcast i8* %415 to i16*
  %417 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %131, align 8
  %418 = shl nuw nsw i32 %412, 1
  %419 = tail call i32 %417(%struct.UDataSwapper* %0, i8* %413, i32 %418, i8* %415, i32* %4) #8
  %420 = zext i8 %411 to i64
  %421 = getelementptr inbounds i16, i16* %414, i64 %420
  %422 = getelementptr inbounds i16, i16* %416, i64 %420
  %423 = zext i32 %391 to i64
  %424 = getelementptr inbounds i8, i8* %51, i64 %423
  %425 = bitcast i16* %421 to i8*
  %426 = ptrtoint i8* %424 to i64
  %427 = ptrtoint i16* %421 to i64
  %428 = sub i64 %426, %427
  %429 = and i64 %428, 4294967295
  br label %430

430:                                              ; preds = %433, %409
  %431 = phi i64 [ %439, %433 ], [ %429, %409 ]
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %440, label %433

433:                                              ; preds = %430
  %434 = add i64 %431, 4294967295
  %435 = and i64 %434, 4294967295
  %436 = getelementptr inbounds i8, i8* %425, i64 %435
  %437 = load i8, i8* %436, align 1
  %438 = icmp eq i8 %437, 0
  %439 = add nsw i64 %431, -1
  br i1 %438, label %440, label %430

440:                                              ; preds = %433, %430
  %441 = trunc i64 %431 to i32
  %442 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %375, align 8
  %443 = bitcast i16* %422 to i8*
  %444 = tail call i32 %442(%struct.UDataSwapper* %0, i8* %425, i32 %441, i8* %443, i32* %4) #8
  br label %447

445:                                              ; preds = %381
  %446 = zext i8 %398 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0), i32 %446, i32 %377) #8
  store i32 16, i32* %4, align 4
  br label %450

447:                                              ; preds = %399, %440
  %448 = add nuw i32 %377, 1
  %449 = icmp eq i32 %448, %367
  br i1 %449, label %451, label %376

450:                                              ; preds = %181, %229, %380, %445, %408, %163
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %100) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %98) #8
  br label %456

451:                                              ; preds = %447, %361
  %452 = phi i32 [ %371, %361 ], [ %391, %447 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %100) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %98) #8
  br label %453

453:                                              ; preds = %84, %66, %451
  %454 = phi i32 [ %452, %451 ], [ %79, %66 ], [ %94, %84 ]
  %455 = add nsw i32 %454, %11
  br label %456

456:                                              ; preds = %450, %5, %13, %453, %65, %36
  %457 = phi i32 [ %455, %453 ], [ 0, %65 ], [ 0, %36 ], [ 0, %13 ], [ 0, %5 ], [ 0, %450 ]
  ret i32 %457
}

declare i32 @udata_swapDataHeader_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #2

declare void @udata_printError_69(%struct.UDataSwapper*, i8*, ...) local_unnamed_addr #2

declare signext i16 @udata_readInt16_69(%struct.UDataSwapper*, i16 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL12makeTokenMapPK12UDataSwapperPstPhP10UErrorCode(%struct.UDataSwapper*, i16* nocapture readonly, i16 zeroext, i8* nocapture, i32*) unnamed_addr #0 {
  %6 = alloca [256 x i8], align 16
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 256, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  store i8 -86, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 -86, i8* %8, align 1
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %131

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %50

18:                                               ; preds = %12
  %19 = bitcast i8* %3 to <16 x i8>*
  store <16 x i8> <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, <16 x i8>* %19, align 1
  %20 = getelementptr inbounds i8, i8* %3, i64 16
  %21 = bitcast i8* %20 to <16 x i8>*
  store <16 x i8> <i8 16, i8 17, i8 18, i8 19, i8 20, i8 21, i8 22, i8 23, i8 24, i8 25, i8 26, i8 27, i8 28, i8 29, i8 30, i8 31>, <16 x i8>* %21, align 1
  %22 = getelementptr inbounds i8, i8* %3, i64 32
  %23 = bitcast i8* %22 to <16 x i8>*
  store <16 x i8> <i8 32, i8 33, i8 34, i8 35, i8 36, i8 37, i8 38, i8 39, i8 40, i8 41, i8 42, i8 43, i8 44, i8 45, i8 46, i8 47>, <16 x i8>* %23, align 1
  %24 = getelementptr inbounds i8, i8* %3, i64 48
  %25 = bitcast i8* %24 to <16 x i8>*
  store <16 x i8> <i8 48, i8 49, i8 50, i8 51, i8 52, i8 53, i8 54, i8 55, i8 56, i8 57, i8 58, i8 59, i8 60, i8 61, i8 62, i8 63>, <16 x i8>* %25, align 1
  %26 = getelementptr inbounds i8, i8* %3, i64 64
  %27 = bitcast i8* %26 to <16 x i8>*
  store <16 x i8> <i8 64, i8 65, i8 66, i8 67, i8 68, i8 69, i8 70, i8 71, i8 72, i8 73, i8 74, i8 75, i8 76, i8 77, i8 78, i8 79>, <16 x i8>* %27, align 1
  %28 = getelementptr inbounds i8, i8* %3, i64 80
  %29 = bitcast i8* %28 to <16 x i8>*
  store <16 x i8> <i8 80, i8 81, i8 82, i8 83, i8 84, i8 85, i8 86, i8 87, i8 88, i8 89, i8 90, i8 91, i8 92, i8 93, i8 94, i8 95>, <16 x i8>* %29, align 1
  %30 = getelementptr inbounds i8, i8* %3, i64 96
  %31 = bitcast i8* %30 to <16 x i8>*
  store <16 x i8> <i8 96, i8 97, i8 98, i8 99, i8 100, i8 101, i8 102, i8 103, i8 104, i8 105, i8 106, i8 107, i8 108, i8 109, i8 110, i8 111>, <16 x i8>* %31, align 1
  %32 = getelementptr inbounds i8, i8* %3, i64 112
  %33 = bitcast i8* %32 to <16 x i8>*
  store <16 x i8> <i8 112, i8 113, i8 114, i8 115, i8 116, i8 117, i8 118, i8 119, i8 120, i8 121, i8 122, i8 123, i8 124, i8 125, i8 126, i8 127>, <16 x i8>* %33, align 1
  %34 = getelementptr inbounds i8, i8* %3, i64 128
  %35 = bitcast i8* %34 to <16 x i8>*
  store <16 x i8> <i8 -128, i8 -127, i8 -126, i8 -125, i8 -124, i8 -123, i8 -122, i8 -121, i8 -120, i8 -119, i8 -118, i8 -117, i8 -116, i8 -115, i8 -114, i8 -113>, <16 x i8>* %35, align 1
  %36 = getelementptr inbounds i8, i8* %3, i64 144
  %37 = bitcast i8* %36 to <16 x i8>*
  store <16 x i8> <i8 -112, i8 -111, i8 -110, i8 -109, i8 -108, i8 -107, i8 -106, i8 -105, i8 -104, i8 -103, i8 -102, i8 -101, i8 -100, i8 -99, i8 -98, i8 -97>, <16 x i8>* %37, align 1
  %38 = getelementptr inbounds i8, i8* %3, i64 160
  %39 = bitcast i8* %38 to <16 x i8>*
  store <16 x i8> <i8 -96, i8 -95, i8 -94, i8 -93, i8 -92, i8 -91, i8 -90, i8 -89, i8 -88, i8 -87, i8 -86, i8 -85, i8 -84, i8 -83, i8 -82, i8 -81>, <16 x i8>* %39, align 1
  %40 = getelementptr inbounds i8, i8* %3, i64 176
  %41 = bitcast i8* %40 to <16 x i8>*
  store <16 x i8> <i8 -80, i8 -79, i8 -78, i8 -77, i8 -76, i8 -75, i8 -74, i8 -73, i8 -72, i8 -71, i8 -70, i8 -69, i8 -68, i8 -67, i8 -66, i8 -65>, <16 x i8>* %41, align 1
  %42 = getelementptr inbounds i8, i8* %3, i64 192
  %43 = bitcast i8* %42 to <16 x i8>*
  store <16 x i8> <i8 -64, i8 -63, i8 -62, i8 -61, i8 -60, i8 -59, i8 -58, i8 -57, i8 -56, i8 -55, i8 -54, i8 -53, i8 -52, i8 -51, i8 -50, i8 -49>, <16 x i8>* %43, align 1
  %44 = getelementptr inbounds i8, i8* %3, i64 208
  %45 = bitcast i8* %44 to <16 x i8>*
  store <16 x i8> <i8 -48, i8 -47, i8 -46, i8 -45, i8 -44, i8 -43, i8 -42, i8 -41, i8 -40, i8 -39, i8 -38, i8 -37, i8 -36, i8 -35, i8 -34, i8 -33>, <16 x i8>* %45, align 1
  %46 = getelementptr inbounds i8, i8* %3, i64 224
  %47 = bitcast i8* %46 to <16 x i8>*
  store <16 x i8> <i8 -32, i8 -31, i8 -30, i8 -29, i8 -28, i8 -27, i8 -26, i8 -25, i8 -24, i8 -23, i8 -22, i8 -21, i8 -20, i8 -19, i8 -18, i8 -17>, <16 x i8>* %47, align 1
  %48 = getelementptr inbounds i8, i8* %3, i64 240
  %49 = bitcast i8* %48 to <16 x i8>*
  store <16 x i8> <i8 -16, i8 -15, i8 -14, i8 -13, i8 -12, i8 -11, i8 -10, i8 -9, i8 -8, i8 -7, i8 -6, i8 -5, i8 -4, i8 -3, i8 -2, i8 -1>, <16 x i8>* %49, align 1
  br label %131

50:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 256, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 256, i1 false)
  %51 = icmp ult i16 %2, 256
  %52 = select i1 %51, i16 %2, i16 256
  %53 = icmp ugt i16 %52, 1
  br i1 %53, label %54, label %131

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 12
  %56 = bitcast {}** %55 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %57 = zext i16 %52 to i64
  br label %66

58:                                               ; preds = %88
  br i1 %53, label %59, label %131

59:                                               ; preds = %58
  %60 = zext i16 %52 to i64
  %61 = add nsw i64 %60, -1
  %62 = and i64 %61, 1
  %63 = icmp eq i16 %52, 2
  br i1 %63, label %114, label %64

64:                                               ; preds = %59
  %65 = sub nsw i64 %61, %62
  br label %92

66:                                               ; preds = %54, %88
  %67 = phi i64 [ 1, %54 ], [ %89, %88 ]
  %68 = phi i32 [ 1, %54 ], [ %90, %88 ]
  %69 = getelementptr inbounds i16, i16* %1, i64 %67
  %70 = load i16, i16* %69, align 2
  %71 = icmp eq i16 %70, -1
  br i1 %71, label %72, label %88

72:                                               ; preds = %66
  %73 = trunc i64 %67 to i8
  store i8 %73, i8* %7, align 1
  %74 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %56, align 8
  %75 = call i32 %74(%struct.UDataSwapper* %0, i8* nonnull %7, i32 1, i8* nonnull %8, i32* %4) #8
  %76 = load i32, i32* %4, align 4
  %77 = icmp slt i32 %76, 1
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = load i8, i8* %13, align 1
  %80 = zext i8 %79 to i32
  call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.43, i64 0, i64 0), i32 %68, i32 %80) #8
  br label %131

81:                                               ; preds = %72
  %82 = load i8, i8* %8, align 1
  %83 = load i8, i8* %7, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds i8, i8* %3, i64 %84
  store i8 %82, i8* %85, align 1
  %86 = zext i8 %82 to i64
  %87 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %86
  store i8 1, i8* %87, align 1
  br label %88

88:                                               ; preds = %66, %81
  %89 = add nuw nsw i64 %67, 1
  %90 = trunc i64 %89 to i32
  %91 = icmp ult i64 %89, %57
  br i1 %91, label %66, label %58

92:                                               ; preds = %141, %64
  %93 = phi i64 [ 1, %64 ], [ %143, %141 ]
  %94 = phi i16 [ 1, %64 ], [ %142, %141 ]
  %95 = phi i64 [ %65, %64 ], [ %144, %141 ]
  %96 = getelementptr inbounds i8, i8* %3, i64 %93
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %108

99:                                               ; preds = %92, %99
  %100 = phi i16 [ %105, %99 ], [ %94, %92 ]
  %101 = zext i16 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, 0
  %105 = add i16 %100, 1
  br i1 %104, label %106, label %99

106:                                              ; preds = %99
  %107 = trunc i16 %100 to i8
  store i8 %107, i8* %96, align 1
  br label %108

108:                                              ; preds = %92, %106
  %109 = phi i16 [ %105, %106 ], [ %94, %92 ]
  %110 = add nuw nsw i64 %93, 1
  %111 = getelementptr inbounds i8, i8* %3, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %132, label %141

114:                                              ; preds = %141, %59
  %115 = phi i64 [ 1, %59 ], [ %143, %141 ]
  %116 = phi i16 [ 1, %59 ], [ %142, %141 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %131, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds i8, i8* %3, i64 %115
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %131

122:                                              ; preds = %118, %122
  %123 = phi i16 [ %128, %122 ], [ %116, %118 ]
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, 0
  %128 = add i16 %123, 1
  br i1 %127, label %129, label %122

129:                                              ; preds = %122
  %130 = trunc i16 %123 to i8
  store i8 %130, i8* %119, align 1
  br label %131

131:                                              ; preds = %114, %118, %129, %18, %50, %58, %5, %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #8
  ret void

132:                                              ; preds = %108, %132
  %133 = phi i16 [ %138, %132 ], [ %109, %108 ]
  %134 = zext i16 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 0
  %138 = add i16 %133, 1
  br i1 %137, label %139, label %132

139:                                              ; preds = %132
  %140 = trunc i16 %133 to i8
  store i8 %140, i8* %111, align 1
  br label %141

141:                                              ; preds = %139, %108
  %142 = phi i16 [ %138, %139 ], [ %109, %108 ]
  %143 = add nuw nsw i64 %93, 2
  %144 = add i64 %95, -2
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %114, label %92
}

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #4

declare void @uprv_free_69(i8*) local_unnamed_addr #2

declare i32 @udata_swapInvStringBlock_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #2

declare %struct.UDataMemory* @udata_openChoice_69(i8*, i8*, i8*, i8 (i8*, i8*, i8*, %struct.UDataInfo*)*, i8*, i32*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal signext i8 @_ZN6icu_69L12isAcceptableEPvPKcS2_PK9UDataInfo(i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, %struct.UDataInfo* nocapture readonly) #6 {
  %5 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = icmp ugt i16 %6, 19
  br i1 %7, label %8, label %37

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 2
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %37

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 0
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 117
  br i1 %19, label %20, label %37

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 110
  br i1 %23, label %24, label %37

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 2
  %26 = load i8, i8* %25, align 2
  %27 = icmp eq i8 %26, 97
  br i1 %27, label %28, label %37

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 6, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 109
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.UDataInfo, %struct.UDataInfo* %3, i64 0, i32 7, i64 0
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  %36 = zext i1 %35 to i8
  br label %37

37:                                               ; preds = %32, %28, %24, %20, %16, %12, %8, %4
  %38 = phi i8 [ 0, %28 ], [ 0, %24 ], [ 0, %20 ], [ 0, %16 ], [ 0, %12 ], [ 0, %8 ], [ 0, %4 ], [ %36, %32 ]
  ret i8 %38
}

declare i8* @udata_getMemory_69(%struct.UDataMemory*) local_unnamed_addr #2

declare void @ucln_common_registerCleanup_69(i32, i8 ()*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal signext i8 @_ZN6icu_69L14unames_cleanupEv() #0 {
  %1 = load %struct.UDataMemory*, %struct.UDataMemory** @_ZN6icu_69L14uCharNamesDataE, align 8
  %2 = icmp eq %struct.UDataMemory* %1, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @udata_close_69(%struct.UDataMemory* nonnull %1) #8
  store %struct.UDataMemory* null, %struct.UDataMemory** @_ZN6icu_69L14uCharNamesDataE, align 8
  br label %4

4:                                                ; preds = %0, %3
  %5 = load %"struct.icu_69::UCharNames"*, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  %6 = icmp eq %"struct.icu_69::UCharNames"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store %"struct.icu_69::UCharNames"* null, %"struct.icu_69::UCharNames"** @_ZN6icu_69L10uCharNamesE, align 8
  br label %8

8:                                                ; preds = %4, %7
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L18gCharNamesInitOnceE, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  store i32 0, i32* @_ZN6icu_69L14gMaxNameLengthE, align 4
  ret i8 1
}

declare void @udata_close_69(%struct.UDataMemory*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc zeroext i16 @_ZN6icu_69L10expandNameEPNS_10UCharNamesEPKht15UCharNameChoicePct(%"struct.icu_69::UCharNames"* nocapture readonly, i8* nocapture readonly, i16 zeroext, i32, i8* nocapture, i16 zeroext) unnamed_addr #7 {
  %7 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 1
  %8 = bitcast %"struct.icu_69::UCharNames"* %7 to i16*
  %9 = getelementptr inbounds i16, i16* %8, i64 1
  %10 = load i16, i16* %8, align 2
  %11 = bitcast %"struct.icu_69::UCharNames"* %0 to i8*
  %12 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %11, i64 %14
  %16 = and i32 %3, -3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %6
  %19 = icmp ult i16 %10, 60
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 8, i32 2
  %22 = bitcast i32* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, -1
  br i1 %24, label %25, label %166

25:                                               ; preds = %20, %18
  %26 = icmp eq i32 %3, 4
  %27 = select i1 %26, i32 2, i32 %3
  br label %28

28:                                               ; preds = %41, %25
  %29 = phi i16 [ %2, %25 ], [ %42, %41 ]
  %30 = phi i8* [ %1, %25 ], [ %43, %41 ]
  %31 = phi i32 [ %27, %25 ], [ %44, %41 ]
  br label %32

32:                                               ; preds = %36, %28
  %33 = phi i16 [ %29, %28 ], [ %37, %36 ]
  %34 = phi i8* [ %30, %28 ], [ %38, %36 ]
  %35 = icmp eq i16 %33, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = add i16 %33, -1
  %38 = getelementptr inbounds i8, i8* %34, i64 1
  %39 = load i8, i8* %34, align 1
  %40 = icmp eq i8 %39, 59
  br i1 %40, label %41, label %32

41:                                               ; preds = %32, %36
  %42 = phi i16 [ %37, %36 ], [ 0, %32 ]
  %43 = phi i8* [ %38, %36 ], [ %34, %32 ]
  %44 = add nsw i32 %31, -1
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %28, label %46

46:                                               ; preds = %41, %6
  %47 = phi i16 [ %2, %6 ], [ %42, %41 ]
  %48 = phi i8* [ %1, %6 ], [ %43, %41 ]
  %49 = icmp eq i16 %47, 0
  br i1 %49, label %166, label %50

50:                                               ; preds = %46
  %51 = zext i16 %10 to i32
  %52 = icmp eq i32 %3, 2
  %53 = icmp ult i16 %10, 60
  %54 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 8, i32 2
  %55 = bitcast i32* %54 to i16*
  br label %56

56:                                               ; preds = %50, %159
  %57 = phi i16 [ 0, %50 ], [ %164, %159 ]
  %58 = phi i16 [ %5, %50 ], [ %163, %159 ]
  %59 = phi i8* [ %4, %50 ], [ %162, %159 ]
  %60 = phi i8* [ %48, %50 ], [ %161, %159 ]
  %61 = phi i16 [ %47, %50 ], [ %160, %159 ]
  %62 = add i16 %61, -1
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = load i8, i8* %60, align 1
  %65 = zext i8 %64 to i32
  %66 = icmp ult i32 %65, %51
  br i1 %66, label %82, label %67

67:                                               ; preds = %131, %56
  %68 = phi i16 [ %57, %56 ], [ 0, %131 ]
  %69 = phi i16 [ %62, %56 ], [ %132, %131 ]
  %70 = phi i8* [ %63, %56 ], [ %133, %131 ]
  %71 = phi i8 [ %64, %56 ], [ %134, %131 ]
  %72 = icmp eq i8 %71, 59
  br i1 %72, label %166, label %73

73:                                               ; preds = %67
  %74 = icmp eq i16 %58, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 %71, i8* %59, align 1
  %77 = add i16 %58, -1
  br label %78

78:                                               ; preds = %73, %75
  %79 = phi i8* [ %76, %75 ], [ %59, %73 ]
  %80 = phi i16 [ %77, %75 ], [ 0, %73 ]
  %81 = add i16 %68, 1
  br label %159

82:                                               ; preds = %56, %131
  %83 = phi i32 [ %135, %131 ], [ %65, %56 ]
  %84 = phi i8 [ %134, %131 ], [ %64, %56 ]
  %85 = phi i8* [ %133, %131 ], [ %63, %56 ]
  %86 = phi i16 [ %132, %131 ], [ %62, %56 ]
  %87 = phi i16 [ %105, %131 ], [ %61, %56 ]
  %88 = phi i8* [ %106, %131 ], [ %60, %56 ]
  %89 = phi i16 [ 0, %131 ], [ %57, %56 ]
  %90 = zext i8 %84 to i64
  %91 = getelementptr inbounds i16, i16* %9, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = icmp eq i16 %92, -2
  br i1 %93, label %94, label %104

94:                                               ; preds = %82
  %95 = shl nuw nsw i32 %83, 8
  %96 = getelementptr inbounds i8, i8* %88, i64 2
  %97 = load i8, i8* %85, align 1
  %98 = zext i8 %97 to i32
  %99 = or i32 %95, %98
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i16, i16* %9, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = add i16 %87, -2
  br label %104

104:                                              ; preds = %94, %82
  %105 = phi i16 [ %103, %94 ], [ %86, %82 ]
  %106 = phi i8* [ %96, %94 ], [ %85, %82 ]
  %107 = phi i16 [ %102, %94 ], [ %92, %82 ]
  %108 = icmp eq i16 %107, -1
  br i1 %108, label %109, label %137

109:                                              ; preds = %104
  %110 = icmp eq i8 %84, 59
  br i1 %110, label %120, label %111

111:                                              ; preds = %109
  %112 = icmp eq i16 %58, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 %84, i8* %59, align 1
  %115 = add i16 %58, -1
  br label %116

116:                                              ; preds = %111, %113
  %117 = phi i8* [ %114, %113 ], [ %59, %111 ]
  %118 = phi i16 [ %115, %113 ], [ 0, %111 ]
  %119 = add i16 %89, 1
  br label %159

120:                                              ; preds = %109
  %121 = icmp eq i16 %89, 0
  %122 = and i1 %52, %121
  br i1 %122, label %123, label %166

123:                                              ; preds = %120
  br i1 %53, label %129, label %124

124:                                              ; preds = %123
  %125 = load i16, i16* %55, align 2
  %126 = icmp ne i16 %125, -1
  %127 = icmp eq i16 %105, 0
  %128 = or i1 %126, %127
  br i1 %128, label %166, label %131

129:                                              ; preds = %123
  %130 = icmp eq i16 %105, 0
  br i1 %130, label %166, label %131

131:                                              ; preds = %129, %124
  %132 = add i16 %105, -1
  %133 = getelementptr inbounds i8, i8* %106, i64 1
  %134 = load i8, i8* %106, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp ult i32 %135, %51
  br i1 %136, label %82, label %67

137:                                              ; preds = %104
  %138 = zext i16 %107 to i64
  %139 = getelementptr inbounds i8, i8* %15, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %159, label %142

142:                                              ; preds = %137, %153
  %143 = phi i8 [ %157, %153 ], [ %140, %137 ]
  %144 = phi i8* [ %148, %153 ], [ %139, %137 ]
  %145 = phi i16 [ %156, %153 ], [ %89, %137 ]
  %146 = phi i16 [ %155, %153 ], [ %58, %137 ]
  %147 = phi i8* [ %154, %153 ], [ %59, %137 ]
  %148 = getelementptr inbounds i8, i8* %144, i64 1
  %149 = icmp eq i16 %146, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds i8, i8* %147, i64 1
  store i8 %143, i8* %147, align 1
  %152 = add i16 %146, -1
  br label %153

153:                                              ; preds = %142, %150
  %154 = phi i8* [ %151, %150 ], [ %147, %142 ]
  %155 = phi i16 [ %152, %150 ], [ 0, %142 ]
  %156 = add i16 %145, 1
  %157 = load i8, i8* %148, align 1
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %142

159:                                              ; preds = %153, %137, %116, %78
  %160 = phi i16 [ %69, %78 ], [ %105, %116 ], [ %105, %137 ], [ %105, %153 ]
  %161 = phi i8* [ %70, %78 ], [ %106, %116 ], [ %106, %137 ], [ %106, %153 ]
  %162 = phi i8* [ %79, %78 ], [ %117, %116 ], [ %59, %137 ], [ %154, %153 ]
  %163 = phi i16 [ %80, %78 ], [ %118, %116 ], [ %58, %137 ], [ %155, %153 ]
  %164 = phi i16 [ %81, %78 ], [ %119, %116 ], [ %89, %137 ], [ %156, %153 ]
  %165 = icmp eq i16 %160, 0
  br i1 %165, label %166, label %56

166:                                              ; preds = %67, %159, %120, %129, %124, %20, %46
  %167 = phi i8* [ %4, %46 ], [ %4, %20 ], [ %59, %124 ], [ %59, %129 ], [ %59, %120 ], [ %162, %159 ], [ %59, %67 ]
  %168 = phi i16 [ %5, %46 ], [ %5, %20 ], [ %58, %124 ], [ %58, %129 ], [ %58, %120 ], [ %163, %159 ], [ %58, %67 ]
  %169 = phi i16 [ 0, %46 ], [ 0, %20 ], [ %89, %120 ], [ 0, %129 ], [ 0, %124 ], [ %164, %159 ], [ %68, %67 ]
  %170 = icmp eq i16 %168, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %166
  store i8 0, i8* %167, align 1
  br label %172

172:                                              ; preds = %166, %171
  ret i16 %169
}

declare signext i8 @u_charType_69(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZN6icu_69L14enumGroupNamesEPNS_10UCharNamesEPKtiiPFaPvi15UCharNameChoicePKciES4_S5_(%"struct.icu_69::UCharNames"* nocapture readonly, i16* nocapture readonly, i32, i32, i8 (i8*, i32, i32, i8*, i32)*, i8*, i32) unnamed_addr #0 {
  %8 = alloca [34 x i16], align 16
  %9 = alloca [34 x i16], align 16
  %10 = alloca [200 x i8], align 16
  %11 = bitcast [34 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 68, i1 false)
  %12 = bitcast [34 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 68, i1 false)
  %13 = bitcast %"struct.icu_69::UCharNames"* %0 to i8*
  %14 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = getelementptr inbounds i16, i16* %1, i64 1
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = shl nuw i32 %20, 16
  %22 = getelementptr inbounds i16, i16* %1, i64 2
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = or i32 %21, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %17, i64 %26
  %28 = getelementptr inbounds [34 x i16], [34 x i16]* %8, i64 0, i64 0
  %29 = getelementptr inbounds [34 x i16], [34 x i16]* %9, i64 0, i64 0
  br label %30

30:                                               ; preds = %74, %7
  %31 = phi i16 [ 0, %7 ], [ %79, %74 ]
  %32 = phi i16 [ 0, %7 ], [ %78, %74 ]
  %33 = phi i16 [ 0, %7 ], [ %77, %74 ]
  %34 = phi i16* [ %29, %7 ], [ %76, %74 ]
  %35 = phi i16* [ %28, %7 ], [ %75, %74 ]
  %36 = phi i8* [ %27, %7 ], [ %37, %74 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  %38 = load i8, i8* %36, align 1
  %39 = icmp ugt i16 %31, 11
  br i1 %39, label %40, label %48

40:                                               ; preds = %30
  %41 = shl nsw i16 %31, 4
  %42 = and i16 %41, 48
  %43 = lshr i8 %38, 4
  %44 = zext i8 %43 to i16
  %45 = or i16 %42, %44
  %46 = add nuw nsw i16 %45, 12
  %47 = and i8 %38, 15
  br label %58

48:                                               ; preds = %30
  %49 = icmp ugt i8 %38, -65
  br i1 %49, label %50, label %54

50:                                               ; preds = %48
  %51 = and i8 %38, 63
  %52 = add nuw nsw i8 %51, 12
  %53 = zext i8 %52 to i16
  br label %58

54:                                               ; preds = %48
  %55 = lshr i8 %38, 4
  %56 = zext i8 %55 to i16
  %57 = and i8 %38, 15
  br label %58

58:                                               ; preds = %54, %50, %40
  %59 = phi i16 [ %46, %40 ], [ %53, %50 ], [ %56, %54 ]
  %60 = phi i8 [ %47, %40 ], [ %38, %50 ], [ %57, %54 ]
  %61 = getelementptr inbounds i16, i16* %35, i64 1
  store i16 %32, i16* %35, align 2
  %62 = getelementptr inbounds i16, i16* %34, i64 1
  store i16 %59, i16* %34, align 2
  %63 = add i16 %59, %32
  %64 = add nuw nsw i16 %33, 1
  %65 = icmp ult i8 %60, 16
  br i1 %65, label %66, label %74

66:                                               ; preds = %58
  %67 = zext i8 %60 to i16
  %68 = icmp ult i8 %60, 12
  br i1 %68, label %69, label %74

69:                                               ; preds = %66
  %70 = getelementptr inbounds i16, i16* %35, i64 2
  store i16 %63, i16* %61, align 2
  %71 = getelementptr inbounds i16, i16* %34, i64 2
  store i16 %67, i16* %62, align 2
  %72 = add i16 %63, %67
  %73 = add nuw nsw i16 %33, 2
  br label %74

74:                                               ; preds = %69, %66, %58
  %75 = phi i16* [ %70, %69 ], [ %61, %66 ], [ %61, %58 ]
  %76 = phi i16* [ %71, %69 ], [ %62, %66 ], [ %62, %58 ]
  %77 = phi i16 [ %73, %69 ], [ %64, %66 ], [ %64, %58 ]
  %78 = phi i16 [ %72, %69 ], [ %63, %66 ], [ %63, %58 ]
  %79 = phi i16 [ %67, %69 ], [ %67, %66 ], [ 0, %58 ]
  %80 = icmp ult i16 %77, 32
  br i1 %80, label %30, label %81

81:                                               ; preds = %74
  %82 = icmp eq i8 (i8*, i32, i32, i8*, i32)* %4, null
  br i1 %82, label %116, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds [200 x i8], [200 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %84) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %84, i8 -86, i64 200, i1 false)
  %85 = icmp sgt i32 %2, %3
  br i1 %85, label %115, label %86

86:                                               ; preds = %83
  %87 = icmp eq i32 %6, 2
  br label %88

88:                                               ; preds = %112, %86
  %89 = phi i32 [ %2, %86 ], [ %113, %112 ]
  %90 = and i32 %89, 31
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds [34 x i16], [34 x i16]* %8, i64 0, i64 %91
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds i8, i8* %37, i64 %94
  %96 = getelementptr inbounds [34 x i16], [34 x i16]* %9, i64 0, i64 %91
  %97 = load i16, i16* %96, align 2
  %98 = call fastcc zeroext i16 @_ZN6icu_69L10expandNameEPNS_10UCharNamesEPKht15UCharNameChoicePct(%"struct.icu_69::UCharNames"* %0, i8* %95, i16 zeroext %97, i32 %6, i8* nonnull %84, i16 zeroext 200)
  %99 = icmp eq i16 %98, 0
  %100 = and i1 %87, %99
  br i1 %100, label %101, label %105

101:                                              ; preds = %88
  %102 = call fastcc zeroext i16 @_ZN6icu_69L10getExtNameEjPct(i32 %89, i8* nonnull %84, i16 zeroext 200)
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [200 x i8], [200 x i8]* %10, i64 0, i64 %103
  store i8 0, i8* %104, align 1
  br label %105

105:                                              ; preds = %88, %101
  %106 = phi i16 [ %102, %101 ], [ %98, %88 ]
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = zext i16 %106 to i32
  %110 = call signext i8 %4(i8* %5, i32 %89, i32 %6, i8* nonnull %84, i32 %109) #8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %270, label %112

112:                                              ; preds = %108, %105
  %113 = add nsw i32 %89, 1
  %114 = icmp slt i32 %89, %3
  br i1 %114, label %88, label %115

115:                                              ; preds = %112, %83
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %84) #8
  br label %271

116:                                              ; preds = %81
  %117 = bitcast i8* %5 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = icmp sgt i32 %2, %3
  br i1 %119, label %271, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 1
  %122 = bitcast %"struct.icu_69::UCharNames"* %121 to i16*
  %123 = getelementptr inbounds i16, i16* %122, i64 1
  %124 = load i16, i16* %122, align 2
  %125 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %13, i64 %127
  %129 = and i32 %6, -3
  %130 = icmp eq i32 %129, 0
  %131 = icmp ult i16 %124, 60
  %132 = getelementptr inbounds %"struct.icu_69::UCharNames", %"struct.icu_69::UCharNames"* %0, i64 8, i32 2
  %133 = bitcast i32* %132 to i16*
  %134 = icmp eq i32 %6, 4
  %135 = select i1 %134, i32 2, i32 %6
  %136 = zext i16 %124 to i32
  %137 = icmp eq i32 %6, 2
  br label %138

138:                                              ; preds = %267, %120
  %139 = phi i32 [ %2, %120 ], [ %268, %267 ]
  %140 = and i32 %139, 31
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [34 x i16], [34 x i16]* %8, i64 0, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i64
  %145 = getelementptr inbounds i8, i8* %37, i64 %144
  %146 = getelementptr inbounds [34 x i16], [34 x i16]* %9, i64 0, i64 %141
  %147 = load i16, i16* %146, align 2
  br i1 %130, label %171, label %148

148:                                              ; preds = %138
  br i1 %131, label %152, label %149

149:                                              ; preds = %148
  %150 = load i16, i16* %133, align 2
  %151 = icmp eq i16 %150, -1
  br i1 %151, label %152, label %260

152:                                              ; preds = %149, %148
  br label %153

153:                                              ; preds = %152, %166
  %154 = phi i8* [ %167, %166 ], [ %145, %152 ]
  %155 = phi i16 [ %168, %166 ], [ %147, %152 ]
  %156 = phi i32 [ %169, %166 ], [ %135, %152 ]
  br label %157

157:                                              ; preds = %161, %153
  %158 = phi i8* [ %154, %153 ], [ %163, %161 ]
  %159 = phi i16 [ %155, %153 ], [ %162, %161 ]
  %160 = icmp eq i16 %159, 0
  br i1 %160, label %166, label %161

161:                                              ; preds = %157
  %162 = add i16 %159, -1
  %163 = getelementptr inbounds i8, i8* %158, i64 1
  %164 = load i8, i8* %158, align 1
  %165 = icmp eq i8 %164, 59
  br i1 %165, label %166, label %157

166:                                              ; preds = %161, %157
  %167 = phi i8* [ %163, %161 ], [ %158, %157 ]
  %168 = phi i16 [ %162, %161 ], [ 0, %157 ]
  %169 = add nsw i32 %156, -1
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %153, label %171

171:                                              ; preds = %166, %138
  %172 = phi i8* [ %145, %138 ], [ %167, %166 ]
  %173 = phi i16 [ %147, %138 ], [ %168, %166 ]
  %174 = icmp eq i16 %173, 0
  br i1 %174, label %260, label %175

175:                                              ; preds = %171, %255
  %176 = phi i8* [ %258, %255 ], [ %118, %171 ]
  %177 = phi i16 [ %257, %255 ], [ %173, %171 ]
  %178 = phi i8* [ %256, %255 ], [ %172, %171 ]
  %179 = icmp eq i8* %176, %118
  %180 = and i1 %137, %179
  %181 = add i16 %177, -1
  %182 = getelementptr inbounds i8, i8* %178, i64 1
  %183 = load i8, i8* %178, align 1
  %184 = zext i8 %183 to i32
  %185 = icmp ult i32 %184, %136
  br i1 %185, label %195, label %186

186:                                              ; preds = %236, %175
  %187 = phi i16 [ %181, %175 ], [ %237, %236 ]
  %188 = phi i8* [ %182, %175 ], [ %238, %236 ]
  %189 = phi i8 [ %183, %175 ], [ %239, %236 ]
  %190 = icmp eq i8 %189, 59
  br i1 %190, label %260, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds i8, i8* %176, i64 1
  %193 = load i8, i8* %176, align 1
  %194 = icmp eq i8 %189, %193
  br i1 %194, label %255, label %267

195:                                              ; preds = %175, %236
  %196 = phi i32 [ %240, %236 ], [ %184, %175 ]
  %197 = phi i8 [ %239, %236 ], [ %183, %175 ]
  %198 = phi i8* [ %238, %236 ], [ %182, %175 ]
  %199 = phi i16 [ %237, %236 ], [ %181, %175 ]
  %200 = phi i8* [ %217, %236 ], [ %178, %175 ]
  %201 = phi i16 [ %218, %236 ], [ %177, %175 ]
  %202 = zext i8 %197 to i64
  %203 = getelementptr inbounds i16, i16* %123, i64 %202
  %204 = load i16, i16* %203, align 2
  %205 = icmp eq i16 %204, -2
  br i1 %205, label %206, label %216

206:                                              ; preds = %195
  %207 = shl nuw nsw i32 %196, 8
  %208 = getelementptr inbounds i8, i8* %200, i64 2
  %209 = load i8, i8* %198, align 1
  %210 = zext i8 %209 to i32
  %211 = or i32 %207, %210
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds i16, i16* %123, i64 %212
  %214 = load i16, i16* %213, align 2
  %215 = add i16 %201, -2
  br label %216

216:                                              ; preds = %206, %195
  %217 = phi i8* [ %208, %206 ], [ %198, %195 ]
  %218 = phi i16 [ %215, %206 ], [ %199, %195 ]
  %219 = phi i16 [ %214, %206 ], [ %204, %195 ]
  %220 = icmp eq i16 %219, -1
  br i1 %220, label %221, label %242

221:                                              ; preds = %216
  %222 = icmp eq i8 %197, 59
  br i1 %222, label %227, label %223

223:                                              ; preds = %221
  %224 = getelementptr inbounds i8, i8* %176, i64 1
  %225 = load i8, i8* %176, align 1
  %226 = icmp eq i8 %197, %225
  br i1 %226, label %255, label %267

227:                                              ; preds = %221
  br i1 %180, label %228, label %260

228:                                              ; preds = %227
  br i1 %131, label %234, label %229

229:                                              ; preds = %228
  %230 = load i16, i16* %133, align 2
  %231 = icmp ne i16 %230, -1
  %232 = icmp eq i16 %218, 0
  %233 = or i1 %232, %231
  br i1 %233, label %260, label %236

234:                                              ; preds = %228
  %235 = icmp eq i16 %218, 0
  br i1 %235, label %260, label %236

236:                                              ; preds = %234, %229
  %237 = add i16 %218, -1
  %238 = getelementptr inbounds i8, i8* %217, i64 1
  %239 = load i8, i8* %217, align 1
  %240 = zext i8 %239 to i32
  %241 = icmp ult i32 %240, %136
  br i1 %241, label %195, label %186

242:                                              ; preds = %216
  %243 = zext i16 %219 to i64
  %244 = getelementptr inbounds i8, i8* %128, i64 %243
  br label %245

245:                                              ; preds = %250, %242
  %246 = phi i8* [ %176, %242 ], [ %252, %250 ]
  %247 = phi i8* [ %244, %242 ], [ %251, %250 ]
  %248 = load i8, i8* %247, align 1
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %255, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds i8, i8* %247, i64 1
  %252 = getelementptr inbounds i8, i8* %246, i64 1
  %253 = load i8, i8* %246, align 1
  %254 = icmp eq i8 %248, %253
  br i1 %254, label %245, label %267

255:                                              ; preds = %245, %223, %191
  %256 = phi i8* [ %188, %191 ], [ %217, %223 ], [ %217, %245 ]
  %257 = phi i16 [ %187, %191 ], [ %218, %223 ], [ %218, %245 ]
  %258 = phi i8* [ %192, %191 ], [ %224, %223 ], [ %246, %245 ]
  %259 = icmp eq i16 %257, 0
  br i1 %259, label %260, label %175

260:                                              ; preds = %186, %255, %227, %229, %234, %149, %171
  %261 = phi i8* [ %118, %171 ], [ %118, %149 ], [ %118, %234 ], [ %176, %227 ], [ %118, %229 ], [ %176, %186 ], [ %258, %255 ]
  %262 = load i8, i8* %261, align 1
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %260
  %265 = getelementptr inbounds i8, i8* %5, i64 8
  %266 = bitcast i8* %265 to i32*
  store i32 %139, i32* %266, align 8
  br label %271

267:                                              ; preds = %223, %191, %250, %260
  %268 = add nsw i32 %139, 1
  %269 = icmp slt i32 %139, %3
  br i1 %269, label %138, label %271

270:                                              ; preds = %108
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %84) #8
  br label %271

271:                                              ; preds = %267, %116, %115, %264, %270
  %272 = phi i8 [ 0, %270 ], [ 0, %264 ], [ 1, %115 ], [ 1, %116 ], [ 1, %267 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %11) #8
  ret i8 %272
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @_ZN6icu_69L17calcNameSetLengthEPKttPKhPaPjPS3_S3_(i16* nocapture readonly, i16 zeroext, i8* nocapture readonly, i8*, i8** nocapture, i8* readnone) unnamed_addr #7 {
  %7 = load i8*, i8** %4, align 8
  %8 = icmp eq i8* %7, %5
  br i1 %8, label %121, label %9

9:                                                ; preds = %6
  %10 = zext i16 %1 to i32
  %11 = icmp eq i8* %3, null
  br label %12

12:                                               ; preds = %9, %117
  %13 = phi i32 [ 0, %9 ], [ %119, %117 ]
  %14 = phi i8* [ %7, %9 ], [ %118, %117 ]
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = load i8, i8* %14, align 1
  %17 = zext i8 %16 to i16
  %18 = zext i8 %16 to i32
  %19 = icmp eq i8 %16, 59
  br i1 %19, label %121, label %20

20:                                               ; preds = %12
  %21 = icmp ult i32 %18, %10
  br i1 %21, label %31, label %22

22:                                               ; preds = %20
  %23 = and i32 %18, 31
  %24 = shl i32 1, %23
  %25 = lshr i32 %18, 5
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = or i32 %28, %24
  store i32 %29, i32* %27, align 4
  %30 = add nsw i32 %13, 1
  br label %117

31:                                               ; preds = %20
  %32 = zext i8 %16 to i64
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, -2
  br i1 %35, label %36, label %46

36:                                               ; preds = %31
  %37 = shl nuw nsw i32 %18, 8
  %38 = getelementptr inbounds i8, i8* %14, i64 2
  %39 = load i8, i8* %15, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = trunc i32 %41 to i16
  %43 = zext i32 %41 to i64
  %44 = getelementptr inbounds i16, i16* %0, i64 %43
  %45 = load i16, i16* %44, align 2
  br label %46

46:                                               ; preds = %36, %31
  %47 = phi i8* [ %38, %36 ], [ %15, %31 ]
  %48 = phi i16 [ %42, %36 ], [ %17, %31 ]
  %49 = phi i16 [ %45, %36 ], [ %34, %31 ]
  %50 = icmp eq i16 %49, -1
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = and i16 %48, 255
  %53 = zext i16 %52 to i32
  %54 = and i32 %53, 31
  %55 = shl i32 1, %54
  %56 = lshr i32 %53, 5
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = or i32 %59, %55
  store i32 %60, i32* %58, align 4
  %61 = add nsw i32 %13, 1
  br label %117

62:                                               ; preds = %46
  br i1 %11, label %93, label %63

63:                                               ; preds = %62
  %64 = zext i16 %48 to i64
  %65 = getelementptr inbounds i8, i8* %3, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp eq i8 %66, 0
  br i1 %68, label %69, label %114

69:                                               ; preds = %63
  %70 = zext i16 %49 to i64
  %71 = getelementptr inbounds i8, i8* %2, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %90, label %74

74:                                               ; preds = %69, %74
  %75 = phi i8 [ %88, %74 ], [ %72, %69 ]
  %76 = phi i32 [ %87, %74 ], [ 0, %69 ]
  %77 = phi i8* [ %78, %74 ], [ %71, %69 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = zext i8 %75 to i32
  %80 = and i32 %79, 31
  %81 = shl i32 1, %80
  %82 = lshr i32 %79, 5
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = or i32 %85, %81
  store i32 %86, i32* %84, align 4
  %87 = add nuw nsw i32 %76, 1
  %88 = load i8, i8* %78, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %74

90:                                               ; preds = %74, %69
  %91 = phi i32 [ 0, %69 ], [ %87, %74 ]
  %92 = trunc i32 %91 to i8
  store i8 %92, i8* %65, align 1
  br label %114

93:                                               ; preds = %62
  %94 = zext i16 %49 to i64
  %95 = getelementptr inbounds i8, i8* %2, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %114, label %98

98:                                               ; preds = %93, %98
  %99 = phi i8 [ %112, %98 ], [ %96, %93 ]
  %100 = phi i32 [ %111, %98 ], [ 0, %93 ]
  %101 = phi i8* [ %102, %98 ], [ %95, %93 ]
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  %103 = zext i8 %99 to i32
  %104 = and i32 %103, 31
  %105 = shl i32 1, %104
  %106 = lshr i32 %103, 5
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZN6icu_69L8gNameSetE, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = or i32 %109, %105
  store i32 %110, i32* %108, align 4
  %111 = add nuw nsw i32 %100, 1
  %112 = load i8, i8* %102, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %98

114:                                              ; preds = %98, %93, %63, %90
  %115 = phi i32 [ %91, %90 ], [ %67, %63 ], [ 0, %93 ], [ %111, %98 ]
  %116 = add nsw i32 %115, %13
  br label %117

117:                                              ; preds = %51, %114, %22
  %118 = phi i8* [ %15, %22 ], [ %47, %51 ], [ %47, %114 ]
  %119 = phi i32 [ %30, %22 ], [ %61, %51 ], [ %116, %114 ]
  %120 = icmp eq i8* %118, %5
  br i1 %120, label %121, label %12

121:                                              ; preds = %117, %12, %6
  %122 = phi i32 [ 0, %6 ], [ %13, %12 ], [ %119, %117 ]
  %123 = phi i8* [ %5, %6 ], [ %15, %12 ], [ %5, %117 ]
  store i8* %123, i8** %4, align 8
  ret i32 %122
}

declare void @u_charsToUChars_69(i8*, i16*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
