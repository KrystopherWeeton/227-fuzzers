; ModuleID = '../../third_party/libaom/source/libaom/aom_dsp/x86/jnt_sad_ssse3.c'
source_filename = "../../third_party/libaom/source/libaom/aom_dsp/x86/jnt_sad_ssse3.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.dist_wtd_comp_params = type { i32, i32, i32 }

@aom_dist_wtd_comp_avg_pred = external local_unnamed_addr global void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, align 8

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad4xh_sse2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %75

8:                                                ; preds = %6
  %9 = sext i32 %1 to i64
  %10 = shl nsw i32 %1, 1
  %11 = sext i32 %10 to i64
  %12 = mul nsw i32 %1, 3
  %13 = sext i32 %12 to i64
  %14 = sext i32 %3 to i64
  %15 = shl nsw i32 %3, 1
  %16 = sext i32 %15 to i64
  %17 = mul nsw i32 %3, 3
  %18 = sext i32 %17 to i64
  %19 = shl nsw i32 %1, 2
  %20 = sext i32 %19 to i64
  %21 = shl nsw i32 %3, 2
  %22 = sext i32 %21 to i64
  br label %23

23:                                               ; preds = %8, %23
  %24 = phi i8* [ %0, %8 ], [ %69, %23 ]
  %25 = phi i8* [ %2, %8 ], [ %70, %23 ]
  %26 = phi i32 [ 0, %8 ], [ %71, %23 ]
  %27 = phi <4 x i32> [ zeroinitializer, %8 ], [ %68, %23 ]
  %28 = bitcast i8* %24 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = insertelement <4 x i32> undef, i32 %29, i32 0
  %31 = getelementptr inbounds i8, i8* %24, i64 %9
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %24, i64 %11
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = insertelement <4 x i32> undef, i32 %36, i32 0
  %38 = getelementptr inbounds i8, i8* %24, i64 %13
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = insertelement <4 x i32> %30, i32 %33, i32 1
  %42 = bitcast <4 x i32> %41 to <2 x i64>
  %43 = insertelement <4 x i32> %37, i32 %40, i32 1
  %44 = bitcast <4 x i32> %43 to <2 x i64>
  %45 = shufflevector <2 x i64> %42, <2 x i64> %44, <2 x i32> <i32 0, i32 2>
  %46 = bitcast i8* %25 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = insertelement <4 x i32> undef, i32 %47, i32 0
  %49 = getelementptr inbounds i8, i8* %25, i64 %14
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 1
  %52 = getelementptr inbounds i8, i8* %25, i64 %16
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  %55 = insertelement <4 x i32> undef, i32 %54, i32 0
  %56 = getelementptr inbounds i8, i8* %25, i64 %18
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 1
  %59 = insertelement <4 x i32> %48, i32 %51, i32 1
  %60 = bitcast <4 x i32> %59 to <2 x i64>
  %61 = insertelement <4 x i32> %55, i32 %58, i32 1
  %62 = bitcast <4 x i32> %61 to <2 x i64>
  %63 = shufflevector <2 x i64> %60, <2 x i64> %62, <2 x i32> <i32 0, i32 2>
  %64 = bitcast <2 x i64> %45 to <16 x i8>
  %65 = bitcast <2 x i64> %63 to <16 x i8>
  %66 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %64, <16 x i8> %65) #4
  %67 = bitcast <2 x i64> %66 to <4 x i32>
  %68 = add <4 x i32> %27, %67
  %69 = getelementptr inbounds i8, i8* %24, i64 %20
  %70 = getelementptr inbounds i8, i8* %25, i64 %22
  %71 = add nuw nsw i32 %26, 4
  %72 = icmp slt i32 %71, %5
  br i1 %72, label %23, label %73

73:                                               ; preds = %23
  %74 = bitcast <4 x i32> %68 to <16 x i8>
  br label %75

75:                                               ; preds = %73, %6
  %76 = phi <4 x i32> [ %68, %73 ], [ zeroinitializer, %6 ]
  %77 = phi <16 x i8> [ %74, %73 ], [ zeroinitializer, %6 ]
  %78 = extractelement <4 x i32> %76, i32 0
  %79 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %80 = bitcast <16 x i8> %79 to <4 x i32>
  %81 = extractelement <4 x i32> %80, i32 0
  %82 = add nsw i32 %81, %78
  ret i32 %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad8xh_sse2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %45

8:                                                ; preds = %6
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = shl nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = shl nsw i32 %3, 1
  %14 = sext i32 %13 to i64
  br label %15

15:                                               ; preds = %8, %15
  %16 = phi i8* [ %0, %8 ], [ %39, %15 ]
  %17 = phi i8* [ %2, %8 ], [ %40, %15 ]
  %18 = phi i32 [ 0, %8 ], [ %41, %15 ]
  %19 = phi <4 x i32> [ zeroinitializer, %8 ], [ %38, %15 ]
  %20 = bitcast i8* %16 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = insertelement <2 x i64> undef, i64 %21, i32 0
  %23 = getelementptr inbounds i8, i8* %16, i64 %9
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 1
  %26 = insertelement <2 x i64> %22, i64 %25, i32 1
  %27 = bitcast i8* %17 to i64*
  %28 = load i64, i64* %27, align 1
  %29 = insertelement <2 x i64> undef, i64 %28, i32 0
  %30 = getelementptr inbounds i8, i8* %17, i64 %10
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 1
  %33 = insertelement <2 x i64> %29, i64 %32, i32 1
  %34 = bitcast <2 x i64> %26 to <16 x i8>
  %35 = bitcast <2 x i64> %33 to <16 x i8>
  %36 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %35) #4
  %37 = bitcast <2 x i64> %36 to <4 x i32>
  %38 = add <4 x i32> %19, %37
  %39 = getelementptr inbounds i8, i8* %16, i64 %12
  %40 = getelementptr inbounds i8, i8* %17, i64 %14
  %41 = add nuw nsw i32 %18, 2
  %42 = icmp slt i32 %41, %5
  br i1 %42, label %15, label %43

43:                                               ; preds = %15
  %44 = bitcast <4 x i32> %38 to <16 x i8>
  br label %45

45:                                               ; preds = %43, %6
  %46 = phi <4 x i32> [ %38, %43 ], [ zeroinitializer, %6 ]
  %47 = phi <16 x i8> [ %44, %43 ], [ zeroinitializer, %6 ]
  %48 = extractelement <4 x i32> %46, i32 0
  %49 = shufflevector <16 x i8> %47, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %50 = bitcast <16 x i8> %49 to <4 x i32>
  %51 = extractelement <4 x i32> %50, i32 0
  %52 = add nsw i32 %51, %48
  ret i32 %52
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad16xh_sse2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %84

8:                                                ; preds = %6
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = add i32 %5, -1
  %12 = and i32 %5, 3
  %13 = icmp ult i32 %11, 3
  br i1 %13, label %59, label %14

14:                                               ; preds = %8
  %15 = sub i32 %5, %12
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i8* [ %0, %14 ], [ %55, %16 ]
  %18 = phi i8* [ %2, %14 ], [ %56, %16 ]
  %19 = phi <4 x i32> [ zeroinitializer, %14 ], [ %54, %16 ]
  %20 = phi i32 [ %15, %14 ], [ %57, %16 ]
  %21 = bitcast i8* %17 to <16 x i8>*
  %22 = load <16 x i8>, <16 x i8>* %21, align 1
  %23 = bitcast i8* %18 to <16 x i8>*
  %24 = load <16 x i8>, <16 x i8>* %23, align 1
  %25 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %22, <16 x i8> %24) #4
  %26 = bitcast <2 x i64> %25 to <4 x i32>
  %27 = add <4 x i32> %19, %26
  %28 = getelementptr inbounds i8, i8* %17, i64 %9
  %29 = getelementptr inbounds i8, i8* %18, i64 %10
  %30 = bitcast i8* %28 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = bitcast i8* %29 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1
  %34 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %31, <16 x i8> %33) #4
  %35 = bitcast <2 x i64> %34 to <4 x i32>
  %36 = add <4 x i32> %27, %35
  %37 = getelementptr inbounds i8, i8* %28, i64 %9
  %38 = getelementptr inbounds i8, i8* %29, i64 %10
  %39 = bitcast i8* %37 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 1
  %41 = bitcast i8* %38 to <16 x i8>*
  %42 = load <16 x i8>, <16 x i8>* %41, align 1
  %43 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %40, <16 x i8> %42) #4
  %44 = bitcast <2 x i64> %43 to <4 x i32>
  %45 = add <4 x i32> %36, %44
  %46 = getelementptr inbounds i8, i8* %37, i64 %9
  %47 = getelementptr inbounds i8, i8* %38, i64 %10
  %48 = bitcast i8* %46 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 1
  %50 = bitcast i8* %47 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %49, <16 x i8> %51) #4
  %53 = bitcast <2 x i64> %52 to <4 x i32>
  %54 = add <4 x i32> %45, %53
  %55 = getelementptr inbounds i8, i8* %46, i64 %9
  %56 = getelementptr inbounds i8, i8* %47, i64 %10
  %57 = add i32 %20, -4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %16

59:                                               ; preds = %16, %8
  %60 = phi <4 x i32> [ undef, %8 ], [ %54, %16 ]
  %61 = phi i8* [ %0, %8 ], [ %55, %16 ]
  %62 = phi i8* [ %2, %8 ], [ %56, %16 ]
  %63 = phi <4 x i32> [ zeroinitializer, %8 ], [ %54, %16 ]
  %64 = icmp eq i32 %12, 0
  br i1 %64, label %81, label %65

65:                                               ; preds = %59, %65
  %66 = phi i8* [ %77, %65 ], [ %61, %59 ]
  %67 = phi i8* [ %78, %65 ], [ %62, %59 ]
  %68 = phi <4 x i32> [ %76, %65 ], [ %63, %59 ]
  %69 = phi i32 [ %79, %65 ], [ %12, %59 ]
  %70 = bitcast i8* %66 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = bitcast i8* %67 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1
  %74 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %71, <16 x i8> %73) #4
  %75 = bitcast <2 x i64> %74 to <4 x i32>
  %76 = add <4 x i32> %68, %75
  %77 = getelementptr inbounds i8, i8* %66, i64 %9
  %78 = getelementptr inbounds i8, i8* %67, i64 %10
  %79 = add i32 %69, -1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %65, !llvm.loop !2

81:                                               ; preds = %65, %59
  %82 = phi <4 x i32> [ %60, %59 ], [ %76, %65 ]
  %83 = bitcast <4 x i32> %82 to <16 x i8>
  br label %84

84:                                               ; preds = %81, %6
  %85 = phi <4 x i32> [ %82, %81 ], [ zeroinitializer, %6 ]
  %86 = phi <16 x i8> [ %83, %81 ], [ zeroinitializer, %6 ]
  %87 = extractelement <4 x i32> %85, i32 0
  %88 = shufflevector <16 x i8> %86, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = bitcast <16 x i8> %88 to <4 x i32>
  %90 = extractelement <4 x i32> %89, i32 0
  %91 = add nsw i32 %90, %87
  ret i32 %91
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad32xh_sse2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %84

8:                                                ; preds = %6
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = and i32 %5, 1
  %12 = icmp eq i32 %5, 1
  br i1 %12, label %58, label %13

13:                                               ; preds = %8
  %14 = sub i32 %5, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i8* [ %0, %13 ], [ %54, %15 ]
  %17 = phi i8* [ %2, %13 ], [ %55, %15 ]
  %18 = phi <4 x i32> [ zeroinitializer, %13 ], [ %53, %15 ]
  %19 = phi i32 [ %14, %13 ], [ %56, %15 ]
  %20 = bitcast i8* %16 to <16 x i8>*
  %21 = load <16 x i8>, <16 x i8>* %20, align 1
  %22 = bitcast i8* %17 to <16 x i8>*
  %23 = load <16 x i8>, <16 x i8>* %22, align 1
  %24 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %21, <16 x i8> %23) #4
  %25 = bitcast <2 x i64> %24 to <4 x i32>
  %26 = add <4 x i32> %18, %25
  %27 = getelementptr inbounds i8, i8* %16, i64 16
  %28 = bitcast i8* %27 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 1
  %30 = getelementptr inbounds i8, i8* %17, i64 16
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %29, <16 x i8> %32) #4
  %34 = bitcast <2 x i64> %33 to <4 x i32>
  %35 = add <4 x i32> %26, %34
  %36 = getelementptr inbounds i8, i8* %16, i64 %9
  %37 = getelementptr inbounds i8, i8* %17, i64 %10
  %38 = bitcast i8* %36 to <16 x i8>*
  %39 = load <16 x i8>, <16 x i8>* %38, align 1
  %40 = bitcast i8* %37 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %39, <16 x i8> %41) #4
  %43 = bitcast <2 x i64> %42 to <4 x i32>
  %44 = add <4 x i32> %35, %43
  %45 = getelementptr inbounds i8, i8* %36, i64 16
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = getelementptr inbounds i8, i8* %37, i64 16
  %49 = bitcast i8* %48 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 1
  %51 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %47, <16 x i8> %50) #4
  %52 = bitcast <2 x i64> %51 to <4 x i32>
  %53 = add <4 x i32> %44, %52
  %54 = getelementptr inbounds i8, i8* %36, i64 %9
  %55 = getelementptr inbounds i8, i8* %37, i64 %10
  %56 = add i32 %19, -2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %15

58:                                               ; preds = %15, %8
  %59 = phi <4 x i32> [ undef, %8 ], [ %53, %15 ]
  %60 = phi i8* [ %0, %8 ], [ %54, %15 ]
  %61 = phi i8* [ %2, %8 ], [ %55, %15 ]
  %62 = phi <4 x i32> [ zeroinitializer, %8 ], [ %53, %15 ]
  %63 = icmp eq i32 %11, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %58
  %65 = bitcast i8* %60 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1
  %67 = bitcast i8* %61 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %66, <16 x i8> %68) #4
  %70 = bitcast <2 x i64> %69 to <4 x i32>
  %71 = add <4 x i32> %62, %70
  %72 = getelementptr inbounds i8, i8* %60, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = getelementptr inbounds i8, i8* %61, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1
  %78 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %74, <16 x i8> %77) #4
  %79 = bitcast <2 x i64> %78 to <4 x i32>
  %80 = add <4 x i32> %71, %79
  br label %81

81:                                               ; preds = %58, %64
  %82 = phi <4 x i32> [ %59, %58 ], [ %80, %64 ]
  %83 = bitcast <4 x i32> %82 to <16 x i8>
  br label %84

84:                                               ; preds = %81, %6
  %85 = phi <4 x i32> [ %82, %81 ], [ zeroinitializer, %6 ]
  %86 = phi <16 x i8> [ %83, %81 ], [ zeroinitializer, %6 ]
  %87 = extractelement <4 x i32> %85, i32 0
  %88 = shufflevector <16 x i8> %86, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = bitcast <16 x i8> %88 to <4 x i32>
  %90 = extractelement <4 x i32> %89, i32 0
  %91 = add nsw i32 %90, %87
  ret i32 %91
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad64xh_sse2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %56

8:                                                ; preds = %6
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %8
  %12 = phi i8* [ %0, %8 ], [ %50, %11 ]
  %13 = phi i8* [ %2, %8 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %8 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %8 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 %9
  %51 = getelementptr inbounds i8, i8* %13, i64 %10
  %52 = add nuw nsw i32 %14, 1
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  br label %56

56:                                               ; preds = %54, %6
  %57 = phi <4 x i32> [ %49, %54 ], [ zeroinitializer, %6 ]
  %58 = phi <16 x i8> [ %55, %54 ], [ zeroinitializer, %6 ]
  %59 = extractelement <4 x i32> %57, i32 0
  %60 = shufflevector <16 x i8> %58, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = bitcast <16 x i8> %60 to <4 x i32>
  %62 = extractelement <4 x i32> %61, i32 0
  %63 = add nsw i32 %62, %59
  ret i32 %63
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @aom_sad128xh_sse2(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %92

8:                                                ; preds = %6
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  br label %11

11:                                               ; preds = %11, %8
  %12 = phi i8* [ %0, %8 ], [ %86, %11 ]
  %13 = phi i8* [ %2, %8 ], [ %87, %11 ]
  %14 = phi i32 [ 0, %8 ], [ %88, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %8 ], [ %85, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 64
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = getelementptr inbounds i8, i8* %13, i64 64
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %52, <16 x i8> %55) #4
  %57 = bitcast <2 x i64> %56 to <4 x i32>
  %58 = add <4 x i32> %49, %57
  %59 = getelementptr inbounds i8, i8* %12, i64 80
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1
  %62 = getelementptr inbounds i8, i8* %13, i64 80
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %61, <16 x i8> %64) #4
  %66 = bitcast <2 x i64> %65 to <4 x i32>
  %67 = add <4 x i32> %58, %66
  %68 = getelementptr inbounds i8, i8* %12, i64 96
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1
  %71 = getelementptr inbounds i8, i8* %13, i64 96
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1
  %74 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %70, <16 x i8> %73) #4
  %75 = bitcast <2 x i64> %74 to <4 x i32>
  %76 = add <4 x i32> %67, %75
  %77 = getelementptr inbounds i8, i8* %12, i64 112
  %78 = bitcast i8* %77 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1
  %80 = getelementptr inbounds i8, i8* %13, i64 112
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1
  %83 = tail call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %79, <16 x i8> %82) #4
  %84 = bitcast <2 x i64> %83 to <4 x i32>
  %85 = add <4 x i32> %76, %84
  %86 = getelementptr inbounds i8, i8* %12, i64 %9
  %87 = getelementptr inbounds i8, i8* %13, i64 %10
  %88 = add nuw nsw i32 %14, 1
  %89 = icmp eq i32 %88, %5
  br i1 %89, label %90, label %11

90:                                               ; preds = %11
  %91 = bitcast <4 x i32> %85 to <16 x i8>
  br label %92

92:                                               ; preds = %90, %6
  %93 = phi <4 x i32> [ %85, %90 ], [ zeroinitializer, %6 ]
  %94 = phi <16 x i8> [ %91, %90 ], [ zeroinitializer, %6 ]
  %95 = extractelement <4 x i32> %93, i32 0
  %96 = shufflevector <16 x i8> %94, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %97 = bitcast <16 x i8> %96 to <4 x i32>
  %98 = extractelement <4 x i32> %97, i32 0
  %99 = add nsw i32 %98, %95
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad128x128_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [16384 x i8], align 16
  %8 = getelementptr inbounds [16384 x i8], [16384 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 16384, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 128, i32 128, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %86, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %87, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %88, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %85, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 64
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = getelementptr inbounds i8, i8* %13, i64 64
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %52, <16 x i8> %55) #4
  %57 = bitcast <2 x i64> %56 to <4 x i32>
  %58 = add <4 x i32> %49, %57
  %59 = getelementptr inbounds i8, i8* %12, i64 80
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1
  %62 = getelementptr inbounds i8, i8* %13, i64 80
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %61, <16 x i8> %64) #4
  %66 = bitcast <2 x i64> %65 to <4 x i32>
  %67 = add <4 x i32> %58, %66
  %68 = getelementptr inbounds i8, i8* %12, i64 96
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1
  %71 = getelementptr inbounds i8, i8* %13, i64 96
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1
  %74 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %70, <16 x i8> %73) #4
  %75 = bitcast <2 x i64> %74 to <4 x i32>
  %76 = add <4 x i32> %67, %75
  %77 = getelementptr inbounds i8, i8* %12, i64 112
  %78 = bitcast i8* %77 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1
  %80 = getelementptr inbounds i8, i8* %13, i64 112
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1
  %83 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %79, <16 x i8> %82) #4
  %84 = bitcast <2 x i64> %83 to <4 x i32>
  %85 = add <4 x i32> %76, %84
  %86 = getelementptr inbounds i8, i8* %12, i64 %10
  %87 = getelementptr inbounds i8, i8* %13, i64 128
  %88 = add nuw nsw i32 %14, 1
  %89 = icmp eq i32 %88, 128
  br i1 %89, label %90, label %11

90:                                               ; preds = %11
  %91 = bitcast <4 x i32> %85 to <16 x i8>
  %92 = extractelement <4 x i32> %85, i32 0
  %93 = shufflevector <16 x i8> %91, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %94 = bitcast <16 x i8> %93 to <4 x i32>
  %95 = extractelement <4 x i32> %94, i32 0
  %96 = add nsw i32 %95, %92
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %8) #4
  ret i32 %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad128x64_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [8192 x i8], align 16
  %8 = getelementptr inbounds [8192 x i8], [8192 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 8192, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 128, i32 64, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %86, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %87, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %88, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %85, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 64
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = getelementptr inbounds i8, i8* %13, i64 64
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %52, <16 x i8> %55) #4
  %57 = bitcast <2 x i64> %56 to <4 x i32>
  %58 = add <4 x i32> %49, %57
  %59 = getelementptr inbounds i8, i8* %12, i64 80
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1
  %62 = getelementptr inbounds i8, i8* %13, i64 80
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %61, <16 x i8> %64) #4
  %66 = bitcast <2 x i64> %65 to <4 x i32>
  %67 = add <4 x i32> %58, %66
  %68 = getelementptr inbounds i8, i8* %12, i64 96
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1
  %71 = getelementptr inbounds i8, i8* %13, i64 96
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1
  %74 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %70, <16 x i8> %73) #4
  %75 = bitcast <2 x i64> %74 to <4 x i32>
  %76 = add <4 x i32> %67, %75
  %77 = getelementptr inbounds i8, i8* %12, i64 112
  %78 = bitcast i8* %77 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1
  %80 = getelementptr inbounds i8, i8* %13, i64 112
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1
  %83 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %79, <16 x i8> %82) #4
  %84 = bitcast <2 x i64> %83 to <4 x i32>
  %85 = add <4 x i32> %76, %84
  %86 = getelementptr inbounds i8, i8* %12, i64 %10
  %87 = getelementptr inbounds i8, i8* %13, i64 128
  %88 = add nuw nsw i32 %14, 1
  %89 = icmp eq i32 %88, 64
  br i1 %89, label %90, label %11

90:                                               ; preds = %11
  %91 = bitcast <4 x i32> %85 to <16 x i8>
  %92 = extractelement <4 x i32> %85, i32 0
  %93 = shufflevector <16 x i8> %91, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %94 = bitcast <16 x i8> %93 to <4 x i32>
  %95 = extractelement <4 x i32> %94, i32 0
  %96 = add nsw i32 %95, %92
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %8) #4
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad64x128_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [8192 x i8], align 16
  %8 = getelementptr inbounds [8192 x i8], [8192 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 8192, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 64, i32 128, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 1
  %53 = icmp eq i32 %52, 128
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad64x64_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [4096 x i8], align 16
  %8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 4096, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 64, i32 64, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 1
  %53 = icmp eq i32 %52, 64
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad64x32_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [2048 x i8], align 16
  %8 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 2048, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 64, i32 32, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 1
  %53 = icmp eq i32 %52, 32
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad32x64_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [2048 x i8], align 16
  %8 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 2048, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 32, i32 64, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 %10
  %33 = getelementptr inbounds i8, i8* %13, i64 32
  %34 = bitcast i8* %32 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1
  %36 = bitcast i8* %33 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %35, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %32, i64 16
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %32, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 2
  %53 = icmp eq i32 %52, 64
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad32x32_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [1024 x i8], align 16
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 32, i32 32, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 %10
  %33 = getelementptr inbounds i8, i8* %13, i64 32
  %34 = bitcast i8* %32 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1
  %36 = bitcast i8* %33 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %35, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %32, i64 16
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %32, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 2
  %53 = icmp eq i32 %52, 32
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad32x16_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [512 x i8], align 16
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 512, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 32, i32 16, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 %10
  %33 = getelementptr inbounds i8, i8* %13, i64 32
  %34 = bitcast i8* %32 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1
  %36 = bitcast i8* %33 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %35, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %32, i64 16
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %32, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 2
  %53 = icmp eq i32 %52, 16
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad16x32_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [512 x i8], align 16
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 512, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 16, i32 32, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 %10
  %24 = getelementptr inbounds i8, i8* %13, i64 16
  %25 = bitcast i8* %23 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = bitcast i8* %24 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %26, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %23, i64 %10
  %33 = getelementptr inbounds i8, i8* %13, i64 32
  %34 = bitcast i8* %32 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1
  %36 = bitcast i8* %33 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %35, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %32, i64 %10
  %42 = getelementptr inbounds i8, i8* %13, i64 48
  %43 = bitcast i8* %41 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = bitcast i8* %42 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %44, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %41, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 4
  %53 = icmp eq i32 %52, 32
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad16x16_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [256 x i8], align 16
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 256, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 16, i32 16, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = bitcast i8* %0 to <16 x i8>*
  %12 = load <16 x i8>, <16 x i8>* %11, align 1
  %13 = bitcast [256 x i8]* %7 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 16
  %15 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %12, <16 x i8> %14) #4
  %16 = bitcast <2 x i64> %15 to <4 x i32>
  %17 = getelementptr inbounds i8, i8* %0, i64 %10
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 16
  %19 = bitcast i8* %17 to <16 x i8>*
  %20 = load <16 x i8>, <16 x i8>* %19, align 1
  %21 = bitcast i8* %18 to <16 x i8>*
  %22 = load <16 x i8>, <16 x i8>* %21, align 16
  %23 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %20, <16 x i8> %22) #4
  %24 = bitcast <2 x i64> %23 to <4 x i32>
  %25 = add <4 x i32> %16, %24
  %26 = getelementptr inbounds i8, i8* %17, i64 %10
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 32
  %28 = bitcast i8* %26 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 1
  %30 = bitcast i8* %27 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 16
  %32 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %29, <16 x i8> %31) #4
  %33 = bitcast <2 x i64> %32 to <4 x i32>
  %34 = add <4 x i32> %25, %33
  %35 = getelementptr inbounds i8, i8* %26, i64 %10
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 48
  %37 = bitcast i8* %35 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = bitcast i8* %36 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 16
  %41 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %38, <16 x i8> %40) #4
  %42 = bitcast <2 x i64> %41 to <4 x i32>
  %43 = add <4 x i32> %34, %42
  %44 = getelementptr inbounds i8, i8* %35, i64 %10
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 64
  %46 = bitcast i8* %44 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = bitcast i8* %45 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 16
  %50 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %47, <16 x i8> %49) #4
  %51 = bitcast <2 x i64> %50 to <4 x i32>
  %52 = add <4 x i32> %43, %51
  %53 = getelementptr inbounds i8, i8* %44, i64 %10
  %54 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 80
  %55 = bitcast i8* %53 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = bitcast i8* %54 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 16
  %59 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %56, <16 x i8> %58) #4
  %60 = bitcast <2 x i64> %59 to <4 x i32>
  %61 = add <4 x i32> %52, %60
  %62 = getelementptr inbounds i8, i8* %53, i64 %10
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 96
  %64 = bitcast i8* %62 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = bitcast i8* %63 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 16
  %68 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %65, <16 x i8> %67) #4
  %69 = bitcast <2 x i64> %68 to <4 x i32>
  %70 = add <4 x i32> %61, %69
  %71 = getelementptr inbounds i8, i8* %62, i64 %10
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 112
  %73 = bitcast i8* %71 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = bitcast i8* %72 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 16
  %77 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %74, <16 x i8> %76) #4
  %78 = bitcast <2 x i64> %77 to <4 x i32>
  %79 = add <4 x i32> %70, %78
  %80 = getelementptr inbounds i8, i8* %71, i64 %10
  %81 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 128
  %82 = bitcast i8* %80 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1
  %84 = bitcast i8* %81 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 16
  %86 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %83, <16 x i8> %85) #4
  %87 = bitcast <2 x i64> %86 to <4 x i32>
  %88 = add <4 x i32> %79, %87
  %89 = getelementptr inbounds i8, i8* %80, i64 %10
  %90 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 144
  %91 = bitcast i8* %89 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1
  %93 = bitcast i8* %90 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 16
  %95 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %92, <16 x i8> %94) #4
  %96 = bitcast <2 x i64> %95 to <4 x i32>
  %97 = add <4 x i32> %88, %96
  %98 = getelementptr inbounds i8, i8* %89, i64 %10
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 160
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1
  %102 = bitcast i8* %99 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 16
  %104 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %101, <16 x i8> %103) #4
  %105 = bitcast <2 x i64> %104 to <4 x i32>
  %106 = add <4 x i32> %97, %105
  %107 = getelementptr inbounds i8, i8* %98, i64 %10
  %108 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 176
  %109 = bitcast i8* %107 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = bitcast i8* %108 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 16
  %113 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %110, <16 x i8> %112) #4
  %114 = bitcast <2 x i64> %113 to <4 x i32>
  %115 = add <4 x i32> %106, %114
  %116 = getelementptr inbounds i8, i8* %107, i64 %10
  %117 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 192
  %118 = bitcast i8* %116 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1
  %120 = bitcast i8* %117 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 16
  %122 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %119, <16 x i8> %121) #4
  %123 = bitcast <2 x i64> %122 to <4 x i32>
  %124 = add <4 x i32> %115, %123
  %125 = getelementptr inbounds i8, i8* %116, i64 %10
  %126 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 208
  %127 = bitcast i8* %125 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1
  %129 = bitcast i8* %126 to <16 x i8>*
  %130 = load <16 x i8>, <16 x i8>* %129, align 16
  %131 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %128, <16 x i8> %130) #4
  %132 = bitcast <2 x i64> %131 to <4 x i32>
  %133 = add <4 x i32> %124, %132
  %134 = getelementptr inbounds i8, i8* %125, i64 %10
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 224
  %136 = bitcast i8* %134 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = bitcast i8* %135 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 16
  %140 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %137, <16 x i8> %139) #4
  %141 = bitcast <2 x i64> %140 to <4 x i32>
  %142 = add <4 x i32> %133, %141
  %143 = getelementptr inbounds i8, i8* %134, i64 %10
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 240
  %145 = bitcast i8* %143 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 1
  %147 = bitcast i8* %144 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 16
  %149 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %146, <16 x i8> %148) #4
  %150 = bitcast <2 x i64> %149 to <4 x i32>
  %151 = add <4 x i32> %142, %150
  %152 = bitcast <4 x i32> %151 to <16 x i8>
  %153 = extractelement <4 x i32> %151, i32 0
  %154 = shufflevector <16 x i8> %152, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %155 = bitcast <16 x i8> %154 to <4 x i32>
  %156 = extractelement <4 x i32> %155, i32 0
  %157 = add nsw i32 %156, %153
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #4
  ret i32 %157
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad16x8_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [128 x i8], align 16
  %8 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 128, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 16, i32 8, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = bitcast i8* %0 to <16 x i8>*
  %12 = load <16 x i8>, <16 x i8>* %11, align 1
  %13 = bitcast [128 x i8]* %7 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 16
  %15 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %12, <16 x i8> %14) #4
  %16 = bitcast <2 x i64> %15 to <4 x i32>
  %17 = getelementptr inbounds i8, i8* %0, i64 %10
  %18 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 16
  %19 = bitcast i8* %17 to <16 x i8>*
  %20 = load <16 x i8>, <16 x i8>* %19, align 1
  %21 = bitcast i8* %18 to <16 x i8>*
  %22 = load <16 x i8>, <16 x i8>* %21, align 16
  %23 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %20, <16 x i8> %22) #4
  %24 = bitcast <2 x i64> %23 to <4 x i32>
  %25 = add <4 x i32> %16, %24
  %26 = getelementptr inbounds i8, i8* %17, i64 %10
  %27 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 32
  %28 = bitcast i8* %26 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 1
  %30 = bitcast i8* %27 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 16
  %32 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %29, <16 x i8> %31) #4
  %33 = bitcast <2 x i64> %32 to <4 x i32>
  %34 = add <4 x i32> %25, %33
  %35 = getelementptr inbounds i8, i8* %26, i64 %10
  %36 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 48
  %37 = bitcast i8* %35 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = bitcast i8* %36 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 16
  %41 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %38, <16 x i8> %40) #4
  %42 = bitcast <2 x i64> %41 to <4 x i32>
  %43 = add <4 x i32> %34, %42
  %44 = getelementptr inbounds i8, i8* %35, i64 %10
  %45 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 64
  %46 = bitcast i8* %44 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = bitcast i8* %45 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 16
  %50 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %47, <16 x i8> %49) #4
  %51 = bitcast <2 x i64> %50 to <4 x i32>
  %52 = add <4 x i32> %43, %51
  %53 = getelementptr inbounds i8, i8* %44, i64 %10
  %54 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 80
  %55 = bitcast i8* %53 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = bitcast i8* %54 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 16
  %59 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %56, <16 x i8> %58) #4
  %60 = bitcast <2 x i64> %59 to <4 x i32>
  %61 = add <4 x i32> %52, %60
  %62 = getelementptr inbounds i8, i8* %53, i64 %10
  %63 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 96
  %64 = bitcast i8* %62 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = bitcast i8* %63 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 16
  %68 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %65, <16 x i8> %67) #4
  %69 = bitcast <2 x i64> %68 to <4 x i32>
  %70 = add <4 x i32> %61, %69
  %71 = getelementptr inbounds i8, i8* %62, i64 %10
  %72 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 112
  %73 = bitcast i8* %71 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = bitcast i8* %72 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 16
  %77 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %74, <16 x i8> %76) #4
  %78 = bitcast <2 x i64> %77 to <4 x i32>
  %79 = add <4 x i32> %70, %78
  %80 = bitcast <4 x i32> %79 to <16 x i8>
  %81 = extractelement <4 x i32> %79, i32 0
  %82 = shufflevector <16 x i8> %80, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = bitcast <16 x i8> %82 to <4 x i32>
  %84 = extractelement <4 x i32> %83, i32 0
  %85 = add nsw i32 %84, %81
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #4
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad8x16_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [128 x i8], align 16
  %8 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 128, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 8, i32 16, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = shl nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = bitcast i8* %0 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = insertelement <2 x i64> undef, i64 %14, i32 0
  %16 = getelementptr inbounds i8, i8* %0, i64 %10
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 1
  %19 = insertelement <2 x i64> %15, i64 %18, i32 1
  %20 = bitcast [128 x i8]* %7 to <16 x i8>*
  %21 = load <16 x i8>, <16 x i8>* %20, align 16
  %22 = bitcast <2 x i64> %19 to <16 x i8>
  %23 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %22, <16 x i8> %21) #4
  %24 = bitcast <2 x i64> %23 to <4 x i32>
  %25 = getelementptr inbounds i8, i8* %0, i64 %12
  %26 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 16
  %27 = bitcast i8* %25 to i64*
  %28 = load i64, i64* %27, align 1
  %29 = insertelement <2 x i64> undef, i64 %28, i32 0
  %30 = getelementptr inbounds i8, i8* %25, i64 %10
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 1
  %33 = insertelement <2 x i64> %29, i64 %32, i32 1
  %34 = bitcast i8* %26 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 16
  %36 = bitcast <2 x i64> %33 to <16 x i8>
  %37 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %36, <16 x i8> %35) #4
  %38 = bitcast <2 x i64> %37 to <4 x i32>
  %39 = add <4 x i32> %24, %38
  %40 = getelementptr inbounds i8, i8* %25, i64 %12
  %41 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 32
  %42 = bitcast i8* %40 to i64*
  %43 = load i64, i64* %42, align 1
  %44 = insertelement <2 x i64> undef, i64 %43, i32 0
  %45 = getelementptr inbounds i8, i8* %40, i64 %10
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 1
  %48 = insertelement <2 x i64> %44, i64 %47, i32 1
  %49 = bitcast i8* %41 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 16
  %51 = bitcast <2 x i64> %48 to <16 x i8>
  %52 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %51, <16 x i8> %50) #4
  %53 = bitcast <2 x i64> %52 to <4 x i32>
  %54 = add <4 x i32> %39, %53
  %55 = getelementptr inbounds i8, i8* %40, i64 %12
  %56 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 48
  %57 = bitcast i8* %55 to i64*
  %58 = load i64, i64* %57, align 1
  %59 = insertelement <2 x i64> undef, i64 %58, i32 0
  %60 = getelementptr inbounds i8, i8* %55, i64 %10
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 1
  %63 = insertelement <2 x i64> %59, i64 %62, i32 1
  %64 = bitcast i8* %56 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 16
  %66 = bitcast <2 x i64> %63 to <16 x i8>
  %67 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %66, <16 x i8> %65) #4
  %68 = bitcast <2 x i64> %67 to <4 x i32>
  %69 = add <4 x i32> %54, %68
  %70 = getelementptr inbounds i8, i8* %55, i64 %12
  %71 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 64
  %72 = bitcast i8* %70 to i64*
  %73 = load i64, i64* %72, align 1
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = getelementptr inbounds i8, i8* %70, i64 %10
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 1
  %78 = insertelement <2 x i64> %74, i64 %77, i32 1
  %79 = bitcast i8* %71 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 16
  %81 = bitcast <2 x i64> %78 to <16 x i8>
  %82 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %81, <16 x i8> %80) #4
  %83 = bitcast <2 x i64> %82 to <4 x i32>
  %84 = add <4 x i32> %69, %83
  %85 = getelementptr inbounds i8, i8* %70, i64 %12
  %86 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 80
  %87 = bitcast i8* %85 to i64*
  %88 = load i64, i64* %87, align 1
  %89 = insertelement <2 x i64> undef, i64 %88, i32 0
  %90 = getelementptr inbounds i8, i8* %85, i64 %10
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 1
  %93 = insertelement <2 x i64> %89, i64 %92, i32 1
  %94 = bitcast i8* %86 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 16
  %96 = bitcast <2 x i64> %93 to <16 x i8>
  %97 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %96, <16 x i8> %95) #4
  %98 = bitcast <2 x i64> %97 to <4 x i32>
  %99 = add <4 x i32> %84, %98
  %100 = getelementptr inbounds i8, i8* %85, i64 %12
  %101 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 96
  %102 = bitcast i8* %100 to i64*
  %103 = load i64, i64* %102, align 1
  %104 = insertelement <2 x i64> undef, i64 %103, i32 0
  %105 = getelementptr inbounds i8, i8* %100, i64 %10
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 1
  %108 = insertelement <2 x i64> %104, i64 %107, i32 1
  %109 = bitcast i8* %101 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 16
  %111 = bitcast <2 x i64> %108 to <16 x i8>
  %112 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %111, <16 x i8> %110) #4
  %113 = bitcast <2 x i64> %112 to <4 x i32>
  %114 = add <4 x i32> %99, %113
  %115 = getelementptr inbounds i8, i8* %100, i64 %12
  %116 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 112
  %117 = bitcast i8* %115 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = insertelement <2 x i64> undef, i64 %118, i32 0
  %120 = getelementptr inbounds i8, i8* %115, i64 %10
  %121 = bitcast i8* %120 to i64*
  %122 = load i64, i64* %121, align 1
  %123 = insertelement <2 x i64> %119, i64 %122, i32 1
  %124 = bitcast i8* %116 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 16
  %126 = bitcast <2 x i64> %123 to <16 x i8>
  %127 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %126, <16 x i8> %125) #4
  %128 = bitcast <2 x i64> %127 to <4 x i32>
  %129 = add <4 x i32> %114, %128
  %130 = bitcast <4 x i32> %129 to <16 x i8>
  %131 = extractelement <4 x i32> %129, i32 0
  %132 = shufflevector <16 x i8> %130, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %133 = bitcast <16 x i8> %132 to <4 x i32>
  %134 = extractelement <4 x i32> %133, i32 0
  %135 = add nsw i32 %134, %131
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #4
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad8x8_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [64 x i8], align 16
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 64, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 8, i32 8, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = shl nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = bitcast i8* %0 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = insertelement <2 x i64> undef, i64 %14, i32 0
  %16 = getelementptr inbounds i8, i8* %0, i64 %10
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 1
  %19 = insertelement <2 x i64> %15, i64 %18, i32 1
  %20 = bitcast [64 x i8]* %7 to <16 x i8>*
  %21 = load <16 x i8>, <16 x i8>* %20, align 16
  %22 = bitcast <2 x i64> %19 to <16 x i8>
  %23 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %22, <16 x i8> %21) #4
  %24 = bitcast <2 x i64> %23 to <4 x i32>
  %25 = getelementptr inbounds i8, i8* %0, i64 %12
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 16
  %27 = bitcast i8* %25 to i64*
  %28 = load i64, i64* %27, align 1
  %29 = insertelement <2 x i64> undef, i64 %28, i32 0
  %30 = getelementptr inbounds i8, i8* %25, i64 %10
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 1
  %33 = insertelement <2 x i64> %29, i64 %32, i32 1
  %34 = bitcast i8* %26 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 16
  %36 = bitcast <2 x i64> %33 to <16 x i8>
  %37 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %36, <16 x i8> %35) #4
  %38 = bitcast <2 x i64> %37 to <4 x i32>
  %39 = add <4 x i32> %24, %38
  %40 = getelementptr inbounds i8, i8* %25, i64 %12
  %41 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 32
  %42 = bitcast i8* %40 to i64*
  %43 = load i64, i64* %42, align 1
  %44 = insertelement <2 x i64> undef, i64 %43, i32 0
  %45 = getelementptr inbounds i8, i8* %40, i64 %10
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 1
  %48 = insertelement <2 x i64> %44, i64 %47, i32 1
  %49 = bitcast i8* %41 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 16
  %51 = bitcast <2 x i64> %48 to <16 x i8>
  %52 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %51, <16 x i8> %50) #4
  %53 = bitcast <2 x i64> %52 to <4 x i32>
  %54 = add <4 x i32> %39, %53
  %55 = getelementptr inbounds i8, i8* %40, i64 %12
  %56 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 48
  %57 = bitcast i8* %55 to i64*
  %58 = load i64, i64* %57, align 1
  %59 = insertelement <2 x i64> undef, i64 %58, i32 0
  %60 = getelementptr inbounds i8, i8* %55, i64 %10
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 1
  %63 = insertelement <2 x i64> %59, i64 %62, i32 1
  %64 = bitcast i8* %56 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 16
  %66 = bitcast <2 x i64> %63 to <16 x i8>
  %67 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %66, <16 x i8> %65) #4
  %68 = bitcast <2 x i64> %67 to <4 x i32>
  %69 = add <4 x i32> %54, %68
  %70 = bitcast <4 x i32> %69 to <16 x i8>
  %71 = extractelement <4 x i32> %69, i32 0
  %72 = shufflevector <16 x i8> %70, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %73 = bitcast <16 x i8> %72 to <4 x i32>
  %74 = extractelement <4 x i32> %73, i32 0
  %75 = add nsw i32 %74, %71
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #4
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad8x4_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [32 x i8], align 16
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 32, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 8, i32 4, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = shl nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = bitcast i8* %0 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = insertelement <2 x i64> undef, i64 %14, i32 0
  %16 = getelementptr inbounds i8, i8* %0, i64 %10
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 1
  %19 = insertelement <2 x i64> %15, i64 %18, i32 1
  %20 = bitcast [32 x i8]* %7 to <16 x i8>*
  %21 = load <16 x i8>, <16 x i8>* %20, align 16
  %22 = bitcast <2 x i64> %19 to <16 x i8>
  %23 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %22, <16 x i8> %21) #4
  %24 = bitcast <2 x i64> %23 to <4 x i32>
  %25 = getelementptr inbounds i8, i8* %0, i64 %12
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 16
  %27 = bitcast i8* %25 to i64*
  %28 = load i64, i64* %27, align 1
  %29 = insertelement <2 x i64> undef, i64 %28, i32 0
  %30 = getelementptr inbounds i8, i8* %25, i64 %10
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 1
  %33 = insertelement <2 x i64> %29, i64 %32, i32 1
  %34 = bitcast i8* %26 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 16
  %36 = bitcast <2 x i64> %33 to <16 x i8>
  %37 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %36, <16 x i8> %35) #4
  %38 = bitcast <2 x i64> %37 to <4 x i32>
  %39 = add <4 x i32> %24, %38
  %40 = bitcast <4 x i32> %39 to <16 x i8>
  %41 = extractelement <4 x i32> %39, i32 0
  %42 = shufflevector <16 x i8> %40, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = bitcast <16 x i8> %42 to <4 x i32>
  %44 = extractelement <4 x i32> %43, i32 0
  %45 = add nsw i32 %44, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #4
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad4x8_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [32 x i8], align 16
  %8 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 32, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 4, i32 8, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = shl nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = mul nsw i32 %1, 3
  %14 = sext i32 %13 to i64
  %15 = shl nsw i32 %1, 2
  %16 = sext i32 %15 to i64
  %17 = bitcast i8* %0 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = insertelement <4 x i32> undef, i32 %18, i32 0
  %20 = getelementptr inbounds i8, i8* %0, i64 %10
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 1
  %23 = getelementptr inbounds i8, i8* %0, i64 %12
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = insertelement <4 x i32> undef, i32 %25, i32 0
  %27 = getelementptr inbounds i8, i8* %0, i64 %14
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = insertelement <4 x i32> %19, i32 %22, i32 1
  %31 = bitcast <4 x i32> %30 to <2 x i64>
  %32 = insertelement <4 x i32> %26, i32 %29, i32 1
  %33 = bitcast <4 x i32> %32 to <2 x i64>
  %34 = shufflevector <2 x i64> %31, <2 x i64> %33, <2 x i32> <i32 0, i32 2>
  %35 = bitcast [32 x i8]* %7 to <2 x i32>*
  %36 = load <2 x i32>, <2 x i32>* %35, align 16
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 8
  %38 = bitcast i8* %37 to <2 x i32>*
  %39 = load <2 x i32>, <2 x i32>* %38, align 8
  %40 = shufflevector <2 x i32> %36, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %41 = bitcast <4 x i32> %40 to <2 x i64>
  %42 = shufflevector <2 x i32> %39, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %43 = bitcast <4 x i32> %42 to <2 x i64>
  %44 = shufflevector <2 x i64> %41, <2 x i64> %43, <2 x i32> <i32 0, i32 2>
  %45 = bitcast <2 x i64> %34 to <16 x i8>
  %46 = bitcast <2 x i64> %44 to <16 x i8>
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %45, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = getelementptr inbounds i8, i8* %0, i64 %16
  %50 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 16
  %51 = bitcast i8* %49 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = insertelement <4 x i32> undef, i32 %52, i32 0
  %54 = getelementptr inbounds i8, i8* %49, i64 %10
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 1
  %57 = getelementptr inbounds i8, i8* %49, i64 %12
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 1
  %60 = insertelement <4 x i32> undef, i32 %59, i32 0
  %61 = getelementptr inbounds i8, i8* %49, i64 %14
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 1
  %64 = insertelement <4 x i32> %53, i32 %56, i32 1
  %65 = bitcast <4 x i32> %64 to <2 x i64>
  %66 = insertelement <4 x i32> %60, i32 %63, i32 1
  %67 = bitcast <4 x i32> %66 to <2 x i64>
  %68 = shufflevector <2 x i64> %65, <2 x i64> %67, <2 x i32> <i32 0, i32 2>
  %69 = bitcast i8* %50 to <2 x i32>*
  %70 = load <2 x i32>, <2 x i32>* %69, align 16
  %71 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 24
  %72 = bitcast i8* %71 to <2 x i32>*
  %73 = load <2 x i32>, <2 x i32>* %72, align 8
  %74 = shufflevector <2 x i32> %70, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %75 = bitcast <4 x i32> %74 to <2 x i64>
  %76 = shufflevector <2 x i32> %73, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %77 = bitcast <4 x i32> %76 to <2 x i64>
  %78 = shufflevector <2 x i64> %75, <2 x i64> %77, <2 x i32> <i32 0, i32 2>
  %79 = bitcast <2 x i64> %68 to <16 x i8>
  %80 = bitcast <2 x i64> %78 to <16 x i8>
  %81 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %79, <16 x i8> %80) #4
  %82 = bitcast <2 x i64> %81 to <4 x i32>
  %83 = add <4 x i32> %48, %82
  %84 = bitcast <4 x i32> %83 to <16 x i8>
  %85 = extractelement <4 x i32> %83, i32 0
  %86 = shufflevector <16 x i8> %84, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %87 = bitcast <16 x i8> %86 to <4 x i32>
  %88 = extractelement <4 x i32> %87, i32 0
  %89 = add nsw i32 %88, %85
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #4
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad4x4_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [16 x i8], align 16
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 16, i1 false)
  %10 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %10(i8* nonnull %8, i8* %4, i32 4, i32 4, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %11 = sext i32 %1 to i64
  %12 = shl nsw i32 %1, 1
  %13 = sext i32 %12 to i64
  %14 = mul nsw i32 %1, 3
  %15 = sext i32 %14 to i64
  %16 = bitcast i8* %0 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = insertelement <4 x i32> undef, i32 %17, i32 0
  %19 = getelementptr inbounds i8, i8* %0, i64 %11
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %13
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = insertelement <4 x i32> undef, i32 %24, i32 0
  %26 = getelementptr inbounds i8, i8* %0, i64 %15
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 1
  %29 = insertelement <4 x i32> %18, i32 %21, i32 1
  %30 = bitcast <4 x i32> %29 to <2 x i64>
  %31 = insertelement <4 x i32> %25, i32 %28, i32 1
  %32 = bitcast <4 x i32> %31 to <2 x i64>
  %33 = shufflevector <2 x i64> %30, <2 x i64> %32, <2 x i32> <i32 0, i32 2>
  %34 = bitcast [16 x i8]* %7 to <2 x i32>*
  %35 = load <2 x i32>, <2 x i32>* %34, align 16
  %36 = bitcast i8* %9 to <2 x i32>*
  %37 = load <2 x i32>, <2 x i32>* %36, align 8
  %38 = shufflevector <2 x i32> %35, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %39 = bitcast <4 x i32> %38 to <2 x i64>
  %40 = shufflevector <2 x i32> %37, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %41 = bitcast <4 x i32> %40 to <2 x i64>
  %42 = shufflevector <2 x i64> %39, <2 x i64> %41, <2 x i32> <i32 0, i32 2>
  %43 = bitcast <2 x i64> %33 to <16 x i8>
  %44 = bitcast <2 x i64> %42 to <16 x i8>
  %45 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %44) #4
  %46 = bitcast <2 x i64> %45 to <4 x i32>
  %47 = bitcast <2 x i64> %45 to <16 x i8>
  %48 = extractelement <4 x i32> %46, i32 0
  %49 = shufflevector <16 x i8> %47, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %50 = bitcast <16 x i8> %49 to <4 x i32>
  %51 = extractelement <4 x i32> %50, i32 0
  %52 = add nsw i32 %51, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad4x16_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [64 x i8], align 16
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 64, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 4, i32 16, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = shl nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = mul nsw i32 %1, 3
  %14 = sext i32 %13 to i64
  %15 = shl nsw i32 %1, 2
  %16 = sext i32 %15 to i64
  %17 = bitcast i8* %0 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = insertelement <4 x i32> undef, i32 %18, i32 0
  %20 = getelementptr inbounds i8, i8* %0, i64 %10
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 1
  %23 = getelementptr inbounds i8, i8* %0, i64 %12
  %24 = bitcast i8* %23 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = insertelement <4 x i32> undef, i32 %25, i32 0
  %27 = getelementptr inbounds i8, i8* %0, i64 %14
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = insertelement <4 x i32> %19, i32 %22, i32 1
  %31 = bitcast <4 x i32> %30 to <2 x i64>
  %32 = insertelement <4 x i32> %26, i32 %29, i32 1
  %33 = bitcast <4 x i32> %32 to <2 x i64>
  %34 = shufflevector <2 x i64> %31, <2 x i64> %33, <2 x i32> <i32 0, i32 2>
  %35 = bitcast [64 x i8]* %7 to <2 x i32>*
  %36 = load <2 x i32>, <2 x i32>* %35, align 16
  %37 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 8
  %38 = bitcast i8* %37 to <2 x i32>*
  %39 = load <2 x i32>, <2 x i32>* %38, align 8
  %40 = shufflevector <2 x i32> %36, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %41 = bitcast <4 x i32> %40 to <2 x i64>
  %42 = shufflevector <2 x i32> %39, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %43 = bitcast <4 x i32> %42 to <2 x i64>
  %44 = shufflevector <2 x i64> %41, <2 x i64> %43, <2 x i32> <i32 0, i32 2>
  %45 = bitcast <2 x i64> %34 to <16 x i8>
  %46 = bitcast <2 x i64> %44 to <16 x i8>
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %45, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = getelementptr inbounds i8, i8* %0, i64 %16
  %50 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 16
  %51 = bitcast i8* %49 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = insertelement <4 x i32> undef, i32 %52, i32 0
  %54 = getelementptr inbounds i8, i8* %49, i64 %10
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 1
  %57 = getelementptr inbounds i8, i8* %49, i64 %12
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 1
  %60 = insertelement <4 x i32> undef, i32 %59, i32 0
  %61 = getelementptr inbounds i8, i8* %49, i64 %14
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 1
  %64 = insertelement <4 x i32> %53, i32 %56, i32 1
  %65 = bitcast <4 x i32> %64 to <2 x i64>
  %66 = insertelement <4 x i32> %60, i32 %63, i32 1
  %67 = bitcast <4 x i32> %66 to <2 x i64>
  %68 = shufflevector <2 x i64> %65, <2 x i64> %67, <2 x i32> <i32 0, i32 2>
  %69 = bitcast i8* %50 to <2 x i32>*
  %70 = load <2 x i32>, <2 x i32>* %69, align 16
  %71 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 24
  %72 = bitcast i8* %71 to <2 x i32>*
  %73 = load <2 x i32>, <2 x i32>* %72, align 8
  %74 = shufflevector <2 x i32> %70, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %75 = bitcast <4 x i32> %74 to <2 x i64>
  %76 = shufflevector <2 x i32> %73, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %77 = bitcast <4 x i32> %76 to <2 x i64>
  %78 = shufflevector <2 x i64> %75, <2 x i64> %77, <2 x i32> <i32 0, i32 2>
  %79 = bitcast <2 x i64> %68 to <16 x i8>
  %80 = bitcast <2 x i64> %78 to <16 x i8>
  %81 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %79, <16 x i8> %80) #4
  %82 = bitcast <2 x i64> %81 to <4 x i32>
  %83 = add <4 x i32> %48, %82
  %84 = getelementptr inbounds i8, i8* %49, i64 %16
  %85 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 32
  %86 = bitcast i8* %84 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = insertelement <4 x i32> undef, i32 %87, i32 0
  %89 = getelementptr inbounds i8, i8* %84, i64 %10
  %90 = bitcast i8* %89 to i32*
  %91 = load i32, i32* %90, align 1
  %92 = getelementptr inbounds i8, i8* %84, i64 %12
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 1
  %95 = insertelement <4 x i32> undef, i32 %94, i32 0
  %96 = getelementptr inbounds i8, i8* %84, i64 %14
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 1
  %99 = insertelement <4 x i32> %88, i32 %91, i32 1
  %100 = bitcast <4 x i32> %99 to <2 x i64>
  %101 = insertelement <4 x i32> %95, i32 %98, i32 1
  %102 = bitcast <4 x i32> %101 to <2 x i64>
  %103 = shufflevector <2 x i64> %100, <2 x i64> %102, <2 x i32> <i32 0, i32 2>
  %104 = bitcast i8* %85 to <2 x i32>*
  %105 = load <2 x i32>, <2 x i32>* %104, align 16
  %106 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 40
  %107 = bitcast i8* %106 to <2 x i32>*
  %108 = load <2 x i32>, <2 x i32>* %107, align 8
  %109 = shufflevector <2 x i32> %105, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %110 = bitcast <4 x i32> %109 to <2 x i64>
  %111 = shufflevector <2 x i32> %108, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %112 = bitcast <4 x i32> %111 to <2 x i64>
  %113 = shufflevector <2 x i64> %110, <2 x i64> %112, <2 x i32> <i32 0, i32 2>
  %114 = bitcast <2 x i64> %103 to <16 x i8>
  %115 = bitcast <2 x i64> %113 to <16 x i8>
  %116 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %114, <16 x i8> %115) #4
  %117 = bitcast <2 x i64> %116 to <4 x i32>
  %118 = add <4 x i32> %83, %117
  %119 = getelementptr inbounds i8, i8* %84, i64 %16
  %120 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 48
  %121 = bitcast i8* %119 to i32*
  %122 = load i32, i32* %121, align 1
  %123 = insertelement <4 x i32> undef, i32 %122, i32 0
  %124 = getelementptr inbounds i8, i8* %119, i64 %10
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 1
  %127 = getelementptr inbounds i8, i8* %119, i64 %12
  %128 = bitcast i8* %127 to i32*
  %129 = load i32, i32* %128, align 1
  %130 = insertelement <4 x i32> undef, i32 %129, i32 0
  %131 = getelementptr inbounds i8, i8* %119, i64 %14
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %132, align 1
  %134 = insertelement <4 x i32> %123, i32 %126, i32 1
  %135 = bitcast <4 x i32> %134 to <2 x i64>
  %136 = insertelement <4 x i32> %130, i32 %133, i32 1
  %137 = bitcast <4 x i32> %136 to <2 x i64>
  %138 = shufflevector <2 x i64> %135, <2 x i64> %137, <2 x i32> <i32 0, i32 2>
  %139 = bitcast i8* %120 to <2 x i32>*
  %140 = load <2 x i32>, <2 x i32>* %139, align 16
  %141 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 56
  %142 = bitcast i8* %141 to <2 x i32>*
  %143 = load <2 x i32>, <2 x i32>* %142, align 8
  %144 = shufflevector <2 x i32> %140, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %145 = bitcast <4 x i32> %144 to <2 x i64>
  %146 = shufflevector <2 x i32> %143, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %147 = bitcast <4 x i32> %146 to <2 x i64>
  %148 = shufflevector <2 x i64> %145, <2 x i64> %147, <2 x i32> <i32 0, i32 2>
  %149 = bitcast <2 x i64> %138 to <16 x i8>
  %150 = bitcast <2 x i64> %148 to <16 x i8>
  %151 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %149, <16 x i8> %150) #4
  %152 = bitcast <2 x i64> %151 to <4 x i32>
  %153 = add <4 x i32> %118, %152
  %154 = bitcast <4 x i32> %153 to <16 x i8>
  %155 = extractelement <4 x i32> %153, i32 0
  %156 = shufflevector <16 x i8> %154, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %157 = bitcast <16 x i8> %156 to <4 x i32>
  %158 = extractelement <4 x i32> %157, i32 0
  %159 = add nsw i32 %158, %155
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #4
  ret i32 %159
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad16x4_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [64 x i8], align 16
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 64, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 16, i32 4, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = bitcast i8* %0 to <16 x i8>*
  %12 = load <16 x i8>, <16 x i8>* %11, align 1
  %13 = bitcast [64 x i8]* %7 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 16
  %15 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %12, <16 x i8> %14) #4
  %16 = bitcast <2 x i64> %15 to <4 x i32>
  %17 = getelementptr inbounds i8, i8* %0, i64 %10
  %18 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 16
  %19 = bitcast i8* %17 to <16 x i8>*
  %20 = load <16 x i8>, <16 x i8>* %19, align 1
  %21 = bitcast i8* %18 to <16 x i8>*
  %22 = load <16 x i8>, <16 x i8>* %21, align 16
  %23 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %20, <16 x i8> %22) #4
  %24 = bitcast <2 x i64> %23 to <4 x i32>
  %25 = add <4 x i32> %16, %24
  %26 = getelementptr inbounds i8, i8* %17, i64 %10
  %27 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 32
  %28 = bitcast i8* %26 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 1
  %30 = bitcast i8* %27 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 16
  %32 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %29, <16 x i8> %31) #4
  %33 = bitcast <2 x i64> %32 to <4 x i32>
  %34 = add <4 x i32> %25, %33
  %35 = getelementptr inbounds i8, i8* %26, i64 %10
  %36 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 48
  %37 = bitcast i8* %35 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = bitcast i8* %36 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 16
  %41 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %38, <16 x i8> %40) #4
  %42 = bitcast <2 x i64> %41 to <4 x i32>
  %43 = add <4 x i32> %34, %42
  %44 = bitcast <4 x i32> %43 to <16 x i8>
  %45 = extractelement <4 x i32> %43, i32 0
  %46 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %47 = bitcast <16 x i8> %46 to <4 x i32>
  %48 = extractelement <4 x i32> %47, i32 0
  %49 = add nsw i32 %48, %45
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #4
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad8x32_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [256 x i8], align 16
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 256, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 8, i32 32, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = shl nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  br label %13

13:                                               ; preds = %13, %6
  %14 = phi i8* [ %0, %6 ], [ %46, %13 ]
  %15 = phi i8* [ %8, %6 ], [ %47, %13 ]
  %16 = phi i32 [ 0, %6 ], [ %48, %13 ]
  %17 = phi <4 x i32> [ zeroinitializer, %6 ], [ %45, %13 ]
  %18 = bitcast i8* %14 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = insertelement <2 x i64> undef, i64 %19, i32 0
  %21 = getelementptr inbounds i8, i8* %14, i64 %10
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = insertelement <2 x i64> %20, i64 %23, i32 1
  %25 = bitcast i8* %15 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = bitcast <2 x i64> %24 to <16 x i8>
  %28 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %27, <16 x i8> %26) #4
  %29 = bitcast <2 x i64> %28 to <4 x i32>
  %30 = add <4 x i32> %17, %29
  %31 = getelementptr inbounds i8, i8* %14, i64 %12
  %32 = getelementptr inbounds i8, i8* %15, i64 16
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 1
  %35 = insertelement <2 x i64> undef, i64 %34, i32 0
  %36 = getelementptr inbounds i8, i8* %31, i64 %10
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 1
  %39 = insertelement <2 x i64> %35, i64 %38, i32 1
  %40 = bitcast i8* %32 to <16 x i8>*
  %41 = load <16 x i8>, <16 x i8>* %40, align 1
  %42 = bitcast <2 x i64> %39 to <16 x i8>
  %43 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %42, <16 x i8> %41) #4
  %44 = bitcast <2 x i64> %43 to <4 x i32>
  %45 = add <4 x i32> %30, %44
  %46 = getelementptr inbounds i8, i8* %31, i64 %12
  %47 = getelementptr inbounds i8, i8* %15, i64 32
  %48 = add nuw nsw i32 %16, 4
  %49 = icmp ult i32 %48, 32
  br i1 %49, label %13, label %50

50:                                               ; preds = %13
  %51 = bitcast <4 x i32> %45 to <16 x i8>
  %52 = extractelement <4 x i32> %45, i32 0
  %53 = shufflevector <16 x i8> %51, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %54 = bitcast <16 x i8> %53 to <4 x i32>
  %55 = extractelement <4 x i32> %54, i32 0
  %56 = add nsw i32 %55, %52
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #4
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad32x8_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [256 x i8], align 16
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 256, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 32, i32 8, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  %11 = bitcast i8* %0 to <16 x i8>*
  %12 = load <16 x i8>, <16 x i8>* %11, align 1
  %13 = bitcast [256 x i8]* %7 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 16
  %15 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %12, <16 x i8> %14) #4
  %16 = bitcast <2 x i64> %15 to <4 x i32>
  %17 = getelementptr inbounds i8, i8* %0, i64 16
  %18 = bitcast i8* %17 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 16
  %21 = bitcast i8* %20 to <16 x i8>*
  %22 = load <16 x i8>, <16 x i8>* %21, align 16
  %23 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %19, <16 x i8> %22) #4
  %24 = bitcast <2 x i64> %23 to <4 x i32>
  %25 = add <4 x i32> %16, %24
  %26 = getelementptr inbounds i8, i8* %0, i64 %10
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 32
  %28 = bitcast i8* %26 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 1
  %30 = bitcast i8* %27 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 16
  %32 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %29, <16 x i8> %31) #4
  %33 = bitcast <2 x i64> %32 to <4 x i32>
  %34 = add <4 x i32> %25, %33
  %35 = getelementptr inbounds i8, i8* %26, i64 16
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 48
  %39 = bitcast i8* %38 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 16
  %41 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %37, <16 x i8> %40) #4
  %42 = bitcast <2 x i64> %41 to <4 x i32>
  %43 = add <4 x i32> %34, %42
  %44 = getelementptr inbounds i8, i8* %26, i64 %10
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 64
  %46 = bitcast i8* %44 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = bitcast i8* %45 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 16
  %50 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %47, <16 x i8> %49) #4
  %51 = bitcast <2 x i64> %50 to <4 x i32>
  %52 = add <4 x i32> %43, %51
  %53 = getelementptr inbounds i8, i8* %44, i64 16
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 80
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 16
  %59 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %55, <16 x i8> %58) #4
  %60 = bitcast <2 x i64> %59 to <4 x i32>
  %61 = add <4 x i32> %52, %60
  %62 = getelementptr inbounds i8, i8* %44, i64 %10
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 96
  %64 = bitcast i8* %62 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = bitcast i8* %63 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 16
  %68 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %65, <16 x i8> %67) #4
  %69 = bitcast <2 x i64> %68 to <4 x i32>
  %70 = add <4 x i32> %61, %69
  %71 = getelementptr inbounds i8, i8* %62, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 112
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 16
  %77 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %73, <16 x i8> %76) #4
  %78 = bitcast <2 x i64> %77 to <4 x i32>
  %79 = add <4 x i32> %70, %78
  %80 = getelementptr inbounds i8, i8* %62, i64 %10
  %81 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 128
  %82 = bitcast i8* %80 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1
  %84 = bitcast i8* %81 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 16
  %86 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %83, <16 x i8> %85) #4
  %87 = bitcast <2 x i64> %86 to <4 x i32>
  %88 = add <4 x i32> %79, %87
  %89 = getelementptr inbounds i8, i8* %80, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 144
  %93 = bitcast i8* %92 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 16
  %95 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %91, <16 x i8> %94) #4
  %96 = bitcast <2 x i64> %95 to <4 x i32>
  %97 = add <4 x i32> %88, %96
  %98 = getelementptr inbounds i8, i8* %80, i64 %10
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 160
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1
  %102 = bitcast i8* %99 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 16
  %104 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %101, <16 x i8> %103) #4
  %105 = bitcast <2 x i64> %104 to <4 x i32>
  %106 = add <4 x i32> %97, %105
  %107 = getelementptr inbounds i8, i8* %98, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 176
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 16
  %113 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %109, <16 x i8> %112) #4
  %114 = bitcast <2 x i64> %113 to <4 x i32>
  %115 = add <4 x i32> %106, %114
  %116 = getelementptr inbounds i8, i8* %98, i64 %10
  %117 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 192
  %118 = bitcast i8* %116 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1
  %120 = bitcast i8* %117 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 16
  %122 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %119, <16 x i8> %121) #4
  %123 = bitcast <2 x i64> %122 to <4 x i32>
  %124 = add <4 x i32> %115, %123
  %125 = getelementptr inbounds i8, i8* %116, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  %127 = load <16 x i8>, <16 x i8>* %126, align 1
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 208
  %129 = bitcast i8* %128 to <16 x i8>*
  %130 = load <16 x i8>, <16 x i8>* %129, align 16
  %131 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %127, <16 x i8> %130) #4
  %132 = bitcast <2 x i64> %131 to <4 x i32>
  %133 = add <4 x i32> %124, %132
  %134 = getelementptr inbounds i8, i8* %116, i64 %10
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 224
  %136 = bitcast i8* %134 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = bitcast i8* %135 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 16
  %140 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %137, <16 x i8> %139) #4
  %141 = bitcast <2 x i64> %140 to <4 x i32>
  %142 = add <4 x i32> %133, %141
  %143 = getelementptr inbounds i8, i8* %134, i64 16
  %144 = bitcast i8* %143 to <16 x i8>*
  %145 = load <16 x i8>, <16 x i8>* %144, align 1
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 240
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 16
  %149 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %145, <16 x i8> %148) #4
  %150 = bitcast <2 x i64> %149 to <4 x i32>
  %151 = add <4 x i32> %142, %150
  %152 = bitcast <4 x i32> %151 to <16 x i8>
  %153 = extractelement <4 x i32> %151, i32 0
  %154 = shufflevector <16 x i8> %152, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %155 = bitcast <16 x i8> %154 to <4 x i32>
  %156 = extractelement <4 x i32> %155, i32 0
  %157 = add nsw i32 %156, %153
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #4
  ret i32 %157
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad16x64_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [1024 x i8], align 16
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 16, i32 64, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 %10
  %24 = getelementptr inbounds i8, i8* %13, i64 16
  %25 = bitcast i8* %23 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = bitcast i8* %24 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %26, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %23, i64 %10
  %33 = getelementptr inbounds i8, i8* %13, i64 32
  %34 = bitcast i8* %32 to <16 x i8>*
  %35 = load <16 x i8>, <16 x i8>* %34, align 1
  %36 = bitcast i8* %33 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %35, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %32, i64 %10
  %42 = getelementptr inbounds i8, i8* %13, i64 48
  %43 = bitcast i8* %41 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = bitcast i8* %42 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %44, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %41, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 4
  %53 = icmp eq i32 %52, 64
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_dist_wtd_sad64x16_avg_ssse3(i8* nocapture readonly, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*) local_unnamed_addr #2 {
  %7 = alloca [1024 x i8], align 16
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  %9 = load void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)*, void (i8*, i8*, i32, i32, i8*, i32, %struct.dist_wtd_comp_params*)** @aom_dist_wtd_comp_avg_pred, align 8
  call void %9(i8* nonnull %8, i8* %4, i32 64, i32 16, i8* %2, i32 %3, %struct.dist_wtd_comp_params* %5) #4
  %10 = sext i32 %1 to i64
  br label %11

11:                                               ; preds = %11, %6
  %12 = phi i8* [ %0, %6 ], [ %50, %11 ]
  %13 = phi i8* [ %8, %6 ], [ %51, %11 ]
  %14 = phi i32 [ 0, %6 ], [ %52, %11 ]
  %15 = phi <4 x i32> [ zeroinitializer, %6 ], [ %49, %11 ]
  %16 = bitcast i8* %12 to <16 x i8>*
  %17 = load <16 x i8>, <16 x i8>* %16, align 1
  %18 = bitcast i8* %13 to <16 x i8>*
  %19 = load <16 x i8>, <16 x i8>* %18, align 1
  %20 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %17, <16 x i8> %19) #4
  %21 = bitcast <2 x i64> %20 to <4 x i32>
  %22 = add <4 x i32> %15, %21
  %23 = getelementptr inbounds i8, i8* %12, i64 16
  %24 = bitcast i8* %23 to <16 x i8>*
  %25 = load <16 x i8>, <16 x i8>* %24, align 1
  %26 = getelementptr inbounds i8, i8* %13, i64 16
  %27 = bitcast i8* %26 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 1
  %29 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %25, <16 x i8> %28) #4
  %30 = bitcast <2 x i64> %29 to <4 x i32>
  %31 = add <4 x i32> %22, %30
  %32 = getelementptr inbounds i8, i8* %12, i64 32
  %33 = bitcast i8* %32 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 1
  %35 = getelementptr inbounds i8, i8* %13, i64 32
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %34, <16 x i8> %37) #4
  %39 = bitcast <2 x i64> %38 to <4 x i32>
  %40 = add <4 x i32> %31, %39
  %41 = getelementptr inbounds i8, i8* %12, i64 48
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 48
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = call <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8> %43, <16 x i8> %46) #4
  %48 = bitcast <2 x i64> %47 to <4 x i32>
  %49 = add <4 x i32> %40, %48
  %50 = getelementptr inbounds i8, i8* %12, i64 %10
  %51 = getelementptr inbounds i8, i8* %13, i64 64
  %52 = add nuw nsw i32 %14, 1
  %53 = icmp eq i32 %52, 16
  br i1 %53, label %54, label %11

54:                                               ; preds = %11
  %55 = bitcast <4 x i32> %49 to <16 x i8>
  %56 = extractelement <4 x i32> %49, i32 0
  %57 = shufflevector <16 x i8> %55, <16 x i8> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %58 = bitcast <16 x i8> %57 to <4 x i32>
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = add nsw i32 %59, %56
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #4
  ret i32 %60
}

; Function Attrs: nounwind readnone
declare <2 x i64> @llvm.x86.sse2.psad.bw(<16 x i8>, <16 x i8>) #3

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
