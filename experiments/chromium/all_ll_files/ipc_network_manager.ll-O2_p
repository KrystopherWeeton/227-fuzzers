; ModuleID = '../../third_party/blink/renderer/platform/p2p/ipc_network_manager.cc'
source_filename = "../../third_party/blink/renderer/platform/p2p/ipc_network_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.in6_addr = type { %union.anon.9 }
%union.anon.9 = type { [4 x i32] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.32", i32, [4 x i8], %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.205", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.150", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { i64 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.68" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.128", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.143", [4 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { float }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.153", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.173" }
%"class.WTF::VectorBuffer.173" = type { %"class.WTF::VectorBufferBase.174" }
%"class.WTF::VectorBufferBase.174" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.79"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.86"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.93"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.100"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.107"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.226", i64 }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.228" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.205" = type { %"struct.std::__1::__atomic_base.206" }
%"struct.std::__1::__atomic_base.206" = type { %"struct.std::__1::__cxx_atomic_impl.207" }
%"struct.std::__1::__cxx_atomic_impl.207" = type { %"struct.std::__1::__cxx_atomic_base_impl.208" }
%"struct.std::__1::__cxx_atomic_base_impl.208" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.blink::IpcNetworkManager" = type { %"class.rtc::NetworkManagerBase.base", %"class.blink::NetworkListObserver", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.209", i32, i8, %"class.base::WeakPtrFactory" }
%"class.rtc::NetworkManagerBase.base" = type <{ %"class.rtc::NetworkManager", i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::map", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.rtc::IPAddress", %"class.rtc::IPAddress", i16, i8 }>
%"class.rtc::NetworkManager" = type { %"class.rtc::DefaultLocalAddressProvider", %"class.rtc::MdnsResponderProvider", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy" }
%"class.rtc::DefaultLocalAddressProvider" = type { i32 (...)** }
%"class.rtc::MdnsResponderProvider" = type { i32 (...)** }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.rtc::Network"**, %"class.rtc::Network"**, %"class.std::__1::__compressed_pair.17" }
%"class.rtc::Network" = type { %"class.sigslot::signal_with_thread_policy.1", %"class.sigslot::signal_with_thread_policy.1", %"class.rtc::DefaultLocalAddressProvider"*, %"class.rtc::MdnsResponderProvider"*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::IPAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::vector.10", i32, i8, i32, i32, i32, i8, i16, i8, i32 }
%"class.sigslot::signal_with_thread_policy.1" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"*, %"class.std::__1::__compressed_pair.12" }
%"class.rtc::InterfaceAddress" = type { %"class.rtc::IPAddress.base", i32 }
%"class.rtc::IPAddress.base" = type <{ i32 (...)**, i32, %union.anon.8 }>
%union.anon.8 = type { %struct.in6_addr }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.rtc::InterfaceAddress"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.rtc::Network"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.rtc::Network"* }
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.8, [4 x i8] }>
%"class.blink::NetworkListObserver" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::NetworkListManager"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.webrtc::MdnsResponderInterface"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.215 }
%class.scoped_refptr.215 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.216" }
%"struct.std::__1::atomic.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__cxx_atomic_impl.219" }
%"struct.std::__1::__cxx_atomic_impl.219" = type { %"struct.std::__1::__cxx_atomic_base_impl.220" }
%"struct.std::__1::__cxx_atomic_base_impl.220" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.221" }
%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i8 }
%"class.blink::NetworkListManager" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.webrtc::MdnsResponderInterface" = type { i32 (...)** }
%"class.rtc::NetworkManagerBase" = type <{ %"class.rtc::NetworkManager", i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::map", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.rtc::IPAddress", %"class.rtc::IPAddress", i16, i8, [5 x i8] }>
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.233 }
%class.scoped_refptr.233 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.237", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.237" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.scoped_refptr.234 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.235" }>
%"class.base::RefCountedThreadSafe.235" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.235", [4 x i8] }>
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.sigslot::_opaque_connection" }
%"class.sigslot::_opaque_connection" = type { void (%"class.sigslot::_opaque_connection"*)*, %"class.sigslot::has_slots_interface"*, [16 x i8] }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"*, %"class.std::__1::__compressed_pair.240" }
%"struct.net::NetworkInterface" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::IPAddress", [3 x i8], i32, i32, [4 x i8] }>
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.net::NetworkInterface"* }
%"struct.rtc::NetworkManager::Stats" = type { i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::Platform" = type { i32 (...)** }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.245", [4 x i8] }>
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__cxx_atomic_impl.248" }
%"struct.std::__1::__cxx_atomic_impl.248" = type { %"struct.std::__1::__cxx_atomic_base_impl.249" }
%"struct.std::__1::__cxx_atomic_base_impl.249" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.253", %"class.blink::FreeList", %"class.WTF::Vector.258" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.252" }
%"struct.std::__1::array.252" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }

$_ZN3rtc9IPAddressD2Ev = comdat any

$_ZN3rtc14NetworkManager10InitializeEv = comdat any

$_ZN3rtc14NetworkManager12DumpNetworksEv = comdat any

$_ZN3rtc16InterfaceAddressD0Ev = comdat any

$_ZN3rtc9IPAddressD0Ev = comdat any

$_ZNSt3__16vectorIN3rtc16InterfaceAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3rtc16InterfaceAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18NetworkListManagerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_18NetworkListManagerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZTVN3rtc16InterfaceAddressE = comdat any

$_ZTVN3rtc9IPAddressE = comdat any

@_ZTVN5blink17IpcNetworkManagerE = hidden unnamed_addr constant { [14 x i8*], [5 x i8*], [5 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZN5blink17IpcNetworkManagerD2Ev to i8*), i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZN5blink17IpcNetworkManagerD0Ev to i8*), i8* bitcast (i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)* @_ZNK3rtc18NetworkManagerBase22GetDefaultLocalAddressEiPNS_9IPAddressE to i8*), i8* bitcast (void (%"class.rtc::NetworkManager"*)* @_ZN3rtc14NetworkManager10InitializeEv to i8*), i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZN5blink17IpcNetworkManager13StartUpdatingEv to i8*), i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZN5blink17IpcNetworkManager12StopUpdatingEv to i8*), i8* bitcast (void (%"class.rtc::NetworkManagerBase"*, %"class.std::__1::vector"*)* @_ZNK3rtc18NetworkManagerBase11GetNetworksEPNSt3__16vectorIPNS_7NetworkENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (i32 (%"class.rtc::NetworkManagerBase"*)* @_ZNK3rtc18NetworkManagerBase22enumeration_permissionEv to i8*), i8* bitcast (void (%"class.rtc::NetworkManagerBase"*, %"class.std::__1::vector"*)* @_ZN3rtc18NetworkManagerBase21GetAnyAddressNetworksEPNSt3__16vectorIPNS_7NetworkENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.rtc::NetworkManager"*)* @_ZN3rtc14NetworkManager12DumpNetworksEv to i8*), i8* bitcast (%"class.webrtc::MdnsResponderInterface"* (%"class.blink::IpcNetworkManager"*)* @_ZNK5blink17IpcNetworkManager16GetMdnsResponderEv to i8*), i8* bitcast (void (%"class.blink::IpcNetworkManager"*, %"class.std::__1::vector.238"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)* @_ZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_ to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZThn8_N5blink17IpcNetworkManagerD1Ev to i8*), i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZThn8_N5blink17IpcNetworkManagerD0Ev to i8*), i8* bitcast (%"class.webrtc::MdnsResponderInterface"* (%"class.blink::IpcNetworkManager"*)* @_ZThn8_NK5blink17IpcNetworkManager16GetMdnsResponderEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -272 to i8*), i8* null, i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZThn272_N5blink17IpcNetworkManagerD1Ev to i8*), i8* bitcast (void (%"class.blink::IpcNetworkManager"*)* @_ZThn272_N5blink17IpcNetworkManagerD0Ev to i8*), i8* bitcast (void (%"class.blink::IpcNetworkManager"*, %"class.std::__1::vector.238"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)* @_ZThn272_N5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_ to i8*)] }, align 8
@.str = private unnamed_addr constant [14 x i8] c"StartUpdating\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/platform/p2p/ipc_network_manager.cc\00", align 1
@.str.2 = private unnamed_addr constant [94 x i8] c"IpcNetworkManager::StartUpdating called; still waiting for network list from browser process.\00", align 1
@.str.3 = private unnamed_addr constant [81 x i8] c"IpcNetworkManager received network list from browser process for the first time.\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"loopback_ipv4\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"loopback_ipv6\00", align 1
@in6addr_loopback = external local_unnamed_addr global %struct.in6_addr, align 4
@.str.6 = private unnamed_addr constant [37 x i8] c"WebRTC.PeerConnection.IPv4Interfaces\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"WebRTC.PeerConnection.IPv6Interfaces\00", align 1
@_ZTVN3rtc16InterfaceAddressE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::IPAddress"*)* @_ZN3rtc9IPAddressD2Ev to i8*), i8* bitcast (void (%"class.rtc::InterfaceAddress"*)* @_ZN3rtc16InterfaceAddressD0Ev to i8*)] }, comdat, align 8
@_ZTVN3rtc9IPAddressE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::IPAddress"*)* @_ZN3rtc9IPAddressD2Ev to i8*), i8* bitcast (void (%"class.rtc::IPAddress"*)* @_ZN3rtc9IPAddressD0Ev to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.9 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_E24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_E24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_ = private unnamed_addr constant [8 x i32] [i32 1, i32 2, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4], align 4

@_ZN5blink17IpcNetworkManagerC1EPNS_18NetworkListManagerENSt3__110unique_ptrIN6webrtc22MdnsResponderInterfaceENS3_14default_deleteIS6_EEEE = hidden unnamed_addr alias void (%"class.blink::IpcNetworkManager"*, %"class.blink::NetworkListManager"*, %"class.webrtc::MdnsResponderInterface"*), void (%"class.blink::IpcNetworkManager"*, %"class.blink::NetworkListManager"*, %"class.webrtc::MdnsResponderInterface"*)* @_ZN5blink17IpcNetworkManagerC2EPNS_18NetworkListManagerENSt3__110unique_ptrIN6webrtc22MdnsResponderInterfaceENS3_14default_deleteIS6_EEEE
@_ZN5blink17IpcNetworkManagerD1Ev = hidden unnamed_addr alias void (%"class.blink::IpcNetworkManager"*), void (%"class.blink::IpcNetworkManager"*)* @_ZN5blink17IpcNetworkManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManagerC2EPNS_18NetworkListManagerENSt3__110unique_ptrIN6webrtc22MdnsResponderInterfaceENS3_14default_deleteIS6_EEEE(%"class.blink::IpcNetworkManager"*, %"class.blink::NetworkListManager"*, %"class.webrtc::MdnsResponderInterface"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.webrtc::MdnsResponderInterface"* %2 to i64
  %5 = bitcast %"class.blink::IpcNetworkManager"* %0 to %"class.rtc::NetworkManagerBase"*
  tail call void @_ZN3rtc18NetworkManagerBaseC2Ev(%"class.rtc::NetworkManagerBase"* %5) #12
  %6 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::NetworkListObserver", %"class.blink::NetworkListObserver"* %6, i64 0, i32 0
  %8 = bitcast %"class.blink::IpcNetworkManager"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN5blink17IpcNetworkManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN5blink17IpcNetworkManagerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN5blink17IpcNetworkManagerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %9, i64 0, i32 0, i32 0
  store %"class.blink::NetworkListManager"* %1, %"class.blink::NetworkListManager"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %13, align 8
  %14 = ptrtoint %"class.blink::NetworkListManager"* %1 to i64
  switch i64 %14, label %15 [
    i64 0, label %34
    i64 -1, label %34
  ]

15:                                               ; preds = %3
  %16 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %17 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %16, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %17) #12
  %18 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %19, align 8
  %21 = icmp eq %"class.blink::PersistentNode"* %20, null
  br i1 %21, label %22, label %25, !prof !2

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %18, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %23) #12
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %19, align 8
  br label %25

25:                                               ; preds = %22, %15
  %26 = phi %"class.blink::PersistentNode"* [ %24, %22 ], [ %20, %15 ]
  %27 = bitcast %"class.blink::PersistentNode"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::CrossThreadPersistentRegion"* %18 to i64*
  store i64 %28, i64* %29, align 8
  %30 = bitcast %"class.blink::PersistentNode"* %26 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %10, %"class.blink::PersistentBase"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18NetworkListManagerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  %32 = ptrtoint %"class.blink::PersistentNode"* %26 to i64
  %33 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  store atomic i64 %32, i64* %33 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %17) #12
  br label %34

34:                                               ; preds = %25, %3, %3
  %35 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 3
  %36 = bitcast %"class.std::__1::unique_ptr.209"* %35 to i64*
  store i64 %4, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 5
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 6, i32 0
  %40 = ptrtoint %"class.blink::IpcNetworkManager"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %39, i64 %40) #12
  %41 = bitcast %"class.blink::NetworkListManager"* %1 to void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)***
  %42 = load void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)**, void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)*, void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)** %42, i64 1
  %44 = load void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)*, void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)** %43, align 8
  tail call void %44(%"class.blink::NetworkListManager"* %1, %"class.blink::NetworkListObserver"* %6) #12
  ret void
}

declare void @_ZN3rtc18NetworkManagerBaseC2Ev(%"class.rtc::NetworkManagerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManagerD2Ev(%"class.blink::IpcNetworkManager"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::IpcNetworkManager"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN5blink17IpcNetworkManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN5blink17IpcNetworkManagerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN5blink17IpcNetworkManagerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #12
  %5 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.webrtc::MdnsResponderInterface"*, %"class.webrtc::MdnsResponderInterface"** %5, align 8
  store %"class.webrtc::MdnsResponderInterface"* null, %"class.webrtc::MdnsResponderInterface"** %5, align 8
  %7 = icmp eq %"class.webrtc::MdnsResponderInterface"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.webrtc::MdnsResponderInterface"* %6 to void (%"class.webrtc::MdnsResponderInterface"*)***
  %10 = load void (%"class.webrtc::MdnsResponderInterface"*)**, void (%"class.webrtc::MdnsResponderInterface"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.webrtc::MdnsResponderInterface"*)*, void (%"class.webrtc::MdnsResponderInterface"*)** %10, i64 1
  %12 = load void (%"class.webrtc::MdnsResponderInterface"*)*, void (%"class.webrtc::MdnsResponderInterface"*)** %11, align 8
  tail call void %12(%"class.webrtc::MdnsResponderInterface"* nonnull %6) #12
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %14 to i64*
  %16 = load atomic i64, i64* %15 acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %13
  %19 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %20 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %19, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #12
  %21 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %22 = load atomic i64, i64* %15 monotonic, align 8
  %23 = inttoptr i64 %22 to %"class.blink::PersistentNode"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %21, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::CrossThreadPersistentRegion"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %26, align 8
  br label %31

31:                                               ; preds = %25, %18
  store atomic i64 0, i64* %15 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #12
  br label %32

32:                                               ; preds = %13, %31
  %33 = bitcast %"class.blink::IpcNetworkManager"* %0 to %"class.rtc::NetworkManagerBase"*
  tail call void @_ZN3rtc18NetworkManagerBaseD2Ev(%"class.rtc::NetworkManagerBase"* %33) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc18NetworkManagerBaseD2Ev(%"class.rtc::NetworkManagerBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17IpcNetworkManagerD1Ev(%"class.blink::IpcNetworkManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 -1, i32 6, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.blink::IpcNetworkManager"*
  tail call void @_ZN5blink17IpcNetworkManagerD2Ev(%"class.blink::IpcNetworkManager"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn272_N5blink17IpcNetworkManagerD1Ev(%"class.blink::IpcNetworkManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.blink::IpcNetworkManager"*
  tail call void @_ZN5blink17IpcNetworkManagerD2Ev(%"class.blink::IpcNetworkManager"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManagerD0Ev(%"class.blink::IpcNetworkManager"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17IpcNetworkManagerD2Ev(%"class.blink::IpcNetworkManager"* %0) #12
  %2 = bitcast %"class.blink::IpcNetworkManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17IpcNetworkManagerD0Ev(%"class.blink::IpcNetworkManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 -1, i32 6, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.blink::IpcNetworkManager"*
  tail call void @_ZN5blink17IpcNetworkManagerD2Ev(%"class.blink::IpcNetworkManager"* %3) #12
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn272_N5blink17IpcNetworkManagerD0Ev(%"class.blink::IpcNetworkManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.blink::IpcNetworkManager"*
  tail call void @_ZN5blink17IpcNetworkManagerD2Ev(%"class.blink::IpcNetworkManager"* %3) #12
  %4 = bitcast %"class.std::__1::__list_iterator"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManager16ContextDestroyedEv(%"class.blink::IpcNetworkManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::NetworkListManager"*, %"class.blink::NetworkListManager"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::NetworkListManager"* %3 to void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)***
  %6 = load void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)**, void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)*, void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)** %6, i64 2
  %8 = load void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)*, void (%"class.blink::NetworkListManager"*, %"class.blink::NetworkListObserver"*)** %7, align 8
  tail call void %8(%"class.blink::NetworkListManager"* %3, %"class.blink::NetworkListObserver"* %4) #12
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #12
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #12
  store %"class.blink::NetworkListManager"* null, %"class.blink::NetworkListManager"** %2, align 8
  %11 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %11 to i64*
  %13 = load atomic i64, i64* %12 acquire, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %1
  %16 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #12
  %17 = load atomic i64, i64* %12 monotonic, align 8
  %18 = inttoptr i64 %17 to %"class.blink::PersistentNode"*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %16, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::CrossThreadPersistentRegion"* %16 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = inttoptr i64 %17 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %25, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %21, align 8
  br label %26

26:                                               ; preds = %20, %15
  store atomic i64 0, i64* %12 release, align 8
  br label %27

27:                                               ; preds = %1, %26
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManager27AsWeakPtrForSignalingThreadEv(%"class.base::WeakPtr"* noalias sret, %"class.blink::IpcNetworkManager"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12, !noalias !3
  %5 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %1, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #12, !noalias !3
  %6 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %1, i64 0, i32 6, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !3
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12, !noalias !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManager13StartUpdatingEv(%"class.blink::IpcNetworkManager"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 4, !range !6
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %1
  %11 = tail call dereferenceable(8) %class.scoped_refptr.234* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #12
  %12 = bitcast %class.scoped_refptr.234* %11 to %"class.base::TaskRunner"**
  %13 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %12, align 8
  %14 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 81) #12
  %15 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12, !noalias !7
  %17 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %17) #12, !noalias !7
  %18 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 6, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !7
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %20, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %19) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12, !noalias !7
  %21 = call i8* @_Znwm(i64 64) #13, !noalias !10
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #12, !noalias !10
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::IpcNetworkManager"*)* @_ZN5blink17IpcNetworkManager25SendNetworksChangedSignalEv to i64), i64 0>, <2 x i64>* %24, align 8, !noalias !10
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to %"class.base::internal::WeakReference"*
  %27 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %26, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %27) #12, !noalias !10
  %28 = getelementptr inbounds i8, i8* %21, i64 56
  %29 = bitcast i8* %28 to i64*
  %30 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !10
  store i64 %31, i64* %29, align 8, !noalias !10
  %32 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %21, i8** %32, align 8, !alias.scope !10
  %33 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %13, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #12
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #12
  br label %43

35:                                               ; preds = %1
  %36 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i64 69) #12
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %39) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 84, i32 -1) #12
  %40 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %40 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.2, i64 0, i64 0), i64 93) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %39) #12
  br label %43

43:                                               ; preds = %38, %35, %10
  %44 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %44, align 8
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.234* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManager25SendNetworksChangedSignalEv(%"class.blink::IpcNetworkManager"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"struct.std::__1::__list_node_base"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  %6 = bitcast %"struct.std::__1::__list_node_base"** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %8 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %7, i64 0, i32 0
  %10 = inttoptr i64 %4 to %"struct.std::__1::__list_node_base"*
  %11 = icmp eq %"struct.std::__1::__list_node_base"* %8, %10
  br i1 %11, label %27, label %12

12:                                               ; preds = %1
  %13 = inttoptr i64 %4 to %"struct.std::__1::__list_node"*
  %14 = bitcast %"class.std::__1::__list_iterator"* %7 to i64*
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi %"struct.std::__1::__list_node"* [ %13, %12 ], [ %26, %15 ]
  %17 = phi %"struct.std::__1::__list_node_base"* [ %10, %12 ], [ %24, %15 ]
  %18 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %14, align 8
  %22 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %18, i64 0, i32 0
  %23 = load void (%"class.sigslot::_opaque_connection"*)*, void (%"class.sigslot::_opaque_connection"*)** %22, align 8
  tail call void %23(%"class.sigslot::_opaque_connection"* %18) #12
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %25 = icmp eq %"struct.std::__1::__list_node_base"* %24, %8
  %26 = bitcast %"struct.std::__1::__list_node_base"* %24 to %"struct.std::__1::__list_node"*
  br i1 %25, label %27, label %15

27:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManager12StopUpdatingEv(%"class.blink::IpcNetworkManager"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_(%"class.blink::IpcNetworkManager"*, %"class.std::__1::vector.238"* nocapture readonly dereferenceable(24), %"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.rtc::InterfaceAddress", align 8
  %6 = alloca %"class.rtc::InterfaceAddress", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.rtc::IPAddress", align 8
  %10 = alloca %"class.rtc::IPAddress", align 8
  %11 = alloca %"class.rtc::InterfaceAddress", align 8
  %12 = alloca %"class.rtc::InterfaceAddress", align 8
  %13 = alloca %"class.rtc::InterfaceAddress", align 8
  %14 = alloca %"class.rtc::IPAddress", align 8
  %15 = alloca %"class.rtc::IPAddress", align 8
  %16 = alloca %"class.rtc::IPAddress", align 8
  %17 = alloca %"class.rtc::IPAddress", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.rtc::IPAddress", align 8
  %20 = alloca %"class.rtc::IPAddress", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.rtc::IPAddress", align 8
  %23 = alloca i8, align 1
  %24 = alloca %"struct.rtc::NetworkManager::Stats", align 4
  %25 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 5
  %26 = load i8, i8* %25, align 4, !range !6
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %4
  %29 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i64 69) #12
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %32) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 103, i32 -1) #12
  %33 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_ostringstream"* %33 to %"class.std::__1::basic_ostream"*
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.3, i64 0, i64 0), i64 80) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %32) #12
  br label %36

36:                                               ; preds = %28, %31
  store i8 1, i8* %25, align 4
  br label %37

37:                                               ; preds = %4, %36
  %38 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12
  %42 = getelementptr inbounds %"class.std::__1::vector.238", %"class.std::__1::vector.238"* %1, i64 0, i32 0, i32 0
  %43 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.238", %"class.std::__1::vector.238"* %1, i64 0, i32 0, i32 1
  %45 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %44, align 8
  %46 = icmp eq %"struct.net::NetworkInterface"* %43, %45
  br i1 %46, label %80, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.rtc::IPAddress"* %9 to i8*
  %49 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %9, i64 0, i32 1
  %50 = bitcast %"class.rtc::IPAddress"* %10 to i8*
  %51 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.rtc::InterfaceAddress"* %11 to i8*
  %54 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %11, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %11, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %11, i64 0, i32 1
  %57 = bitcast i32* %55 to i8*
  %58 = bitcast %"class.rtc::InterfaceAddress"* %13 to i8*
  %59 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %9, i64 0, i32 2
  %60 = bitcast %union.anon.8* %59 to i8*
  %61 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %13, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %13, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %13, i64 0, i32 0, i32 2
  %64 = bitcast %union.anon.8* %63 to i8*
  %65 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %13, i64 0, i32 1
  %66 = bitcast %"class.rtc::InterfaceAddress"* %11 to %"class.rtc::IPAddress"*
  %67 = bitcast %"class.rtc::InterfaceAddress"* %12 to i8*
  %68 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %12, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %12, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %12, i64 0, i32 0, i32 2
  %71 = bitcast %union.anon.8* %70 to i8*
  %72 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %12, i64 0, i32 1
  %73 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %11, i64 0, i32 0, i32 2
  %74 = bitcast %union.anon.8* %73 to i8*
  %75 = bitcast %"class.rtc::Network"*** %40 to i64*
  %76 = bitcast %"class.std::__1::vector"* %8 to i64*
  %77 = bitcast %"class.rtc::Network"*** %41 to i64*
  %78 = bitcast %"class.rtc::IPAddress"* %9 to i8*
  %79 = bitcast %"class.rtc::IPAddress"* %10 to i8*
  br label %95

80:                                               ; preds = %243, %37
  %81 = phi i8 [ 0, %37 ], [ %245, %243 ]
  %82 = phi i8 [ 0, %37 ], [ %244, %243 ]
  %83 = bitcast %"class.rtc::IPAddress"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %14, i64 0, i32 0
  %85 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %14, i64 0, i32 1
  %86 = bitcast %"class.rtc::IPAddress"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 32, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %87 = bitcast i32* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 20, i1 false) #12
  %88 = bitcast %"class.rtc::IPAddress"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %15, i64 0, i32 0
  %90 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %15, i64 0, i32 1
  %91 = bitcast %"class.rtc::IPAddress"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 32, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %92 = bitcast i32* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 20, i1 false) #12
  %93 = and i8 %81, 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %257, label %249

95:                                               ; preds = %47, %243
  %96 = phi i8 [ 0, %47 ], [ %244, %243 ]
  %97 = phi i8 [ 0, %47 ], [ %245, %243 ]
  %98 = phi %"struct.net::NetworkInterface"* [ %43, %47 ], [ %246, %243 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #12
  %99 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %98, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 32, i1 false)
  call void @_ZN11jingle_glue26NetIPAddressToRtcIPAddressERKN3net9IPAddressE(%"class.rtc::IPAddress"* nonnull sret %9, %"class.net::IPAddress"* dereferenceable(17) %99) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #12
  %100 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %98, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 32, i1 false)
  %101 = load i32, i32* %100, align 4
  call void @_ZN3rtc10TruncateIPERKNS_9IPAddressEi(%"class.rtc::IPAddress"* nonnull sret %10, %"class.rtc::IPAddress"* nonnull dereferenceable(32) %9, i32 %101) #12
  %102 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %98, i64 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, -1
  %105 = icmp ult i32 %104, 8
  br i1 %105, label %119, label %106

106:                                              ; preds = %119, %95
  %107 = bitcast %"struct.net::NetworkInterface"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  br label %116

114:                                              ; preds = %106
  %115 = bitcast %"struct.net::NetworkInterface"* %98 to i8*
  br label %116

116:                                              ; preds = %111, %114
  %117 = phi i8* [ %113, %111 ], [ %115, %114 ]
  %118 = call i32 @_ZN3rtc22GetAdapterTypeFromNameEPKc(i8* %117) #12
  br label %128

119:                                              ; preds = %95
  %120 = trunc i32 %104 to i8
  %121 = lshr i8 -97, %120
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %106, label %124

124:                                              ; preds = %119
  %125 = sext i32 %104 to i64
  %126 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_, i64 0, i64 %125
  %127 = load i32, i32* %126, align 4
  br label %128

128:                                              ; preds = %124, %116
  %129 = phi i32 [ %118, %116 ], [ %127, %124 ]
  %130 = call i8* @_Znwm(i64 296) #13
  %131 = bitcast i8* %130 to %"class.rtc::Network"*
  %132 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %98, i64 0, i32 0
  %133 = load i32, i32* %100, align 4
  call void @_ZN3rtc7NetworkC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS_9IPAddressEiNS_11AdapterTypeE(%"class.rtc::Network"* nonnull %131, %"class.std::__1::basic_string"* dereferenceable(24) %132, %"class.std::__1::basic_string"* dereferenceable(24) %132, %"class.rtc::IPAddress"* nonnull dereferenceable(32) %10, i32 %133, i32 %129) #12
  %134 = ptrtoint i8* %130 to i64
  %135 = getelementptr inbounds i8, i8* %130, i64 112
  %136 = bitcast i8* %135 to %"class.rtc::DefaultLocalAddressProvider"**
  store %"class.rtc::DefaultLocalAddressProvider"* %51, %"class.rtc::DefaultLocalAddressProvider"** %136, align 8
  %137 = getelementptr inbounds i8, i8* %130, i64 120
  %138 = bitcast i8* %137 to %"class.rtc::MdnsResponderProvider"**
  store %"class.rtc::MdnsResponderProvider"* %52, %"class.rtc::MdnsResponderProvider"** %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 20, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  store i32 0, i32* %56, align 4
  %139 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* %99) #12
  br i1 %139, label %140, label %147

140:                                              ; preds = %128
  %141 = call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %2, %"class.net::IPAddress"* dereferenceable(17) %99) #12
  %142 = zext i1 %141 to i8
  %143 = and i8 %97, 1
  %144 = or i8 %143, %142
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #12
  %145 = load i32, i32* %49, align 8
  store i32 %145, i32* %69, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %60, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  store i32 0, i32* %72, align 4
  %146 = call dereferenceable(32) %"class.rtc::InterfaceAddress"* @_ZN3rtc16InterfaceAddressaSERKS0_(%"class.rtc::InterfaceAddress"* nonnull %11, %"class.rtc::InterfaceAddress"* nonnull dereferenceable(32) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #12
  br label %164

147:                                              ; preds = %128
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #12
  %148 = load i32, i32* %49, align 8
  %149 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %98, i64 0, i32 7
  %150 = load i32, i32* %149, align 8
  store i32 %148, i32* %62, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %60, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  store i32 %150, i32* %65, align 4
  %151 = call dereferenceable(32) %"class.rtc::InterfaceAddress"* @_ZN3rtc16InterfaceAddressaSERKS0_(%"class.rtc::InterfaceAddress"* nonnull %11, %"class.rtc::InterfaceAddress"* nonnull dereferenceable(32) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #12
  %152 = call zeroext i1 @_ZN3rtc12IPIsMacBasedERKNS_9IPAddressE(%"class.rtc::IPAddress"* nonnull dereferenceable(32) %66) #12
  br i1 %152, label %242, label %153

153:                                              ; preds = %147
  %154 = load i32, i32* %149, align 8
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %242

157:                                              ; preds = %153
  %158 = call zeroext i1 @_ZN3rtc11IPIsPrivateERKNS_9IPAddressE(%"class.rtc::IPAddress"* nonnull dereferenceable(32) %66) #12
  br i1 %158, label %242, label %159

159:                                              ; preds = %157
  %160 = call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %3, %"class.net::IPAddress"* dereferenceable(17) %99) #12
  %161 = zext i1 %160 to i8
  %162 = and i8 %96, 1
  %163 = or i8 %162, %161
  br label %164

164:                                              ; preds = %159, %140
  %165 = phi i8 [ %144, %140 ], [ %97, %159 ]
  %166 = phi i8 [ %96, %140 ], [ %163, %159 ]
  %167 = getelementptr inbounds i8, i8* %130, i64 248
  %168 = bitcast i8* %167 to %"class.rtc::InterfaceAddress"**
  %169 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %168, align 8
  %170 = getelementptr inbounds i8, i8* %130, i64 256
  %171 = bitcast i8* %170 to %"class.rtc::InterfaceAddress"**
  %172 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %171, align 8
  %173 = icmp eq %"class.rtc::InterfaceAddress"* %169, %172
  br i1 %173, label %185, label %174

174:                                              ; preds = %164
  %175 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %169, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  %176 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %169, i64 0, i32 0, i32 1
  %177 = load i32, i32* %55, align 8
  store i32 %177, i32* %176, align 8
  %178 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %169, i64 0, i32 0, i32 2
  %179 = bitcast %union.anon.8* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %179, i8* align 4 %74, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  %180 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %169, i64 0, i32 1
  %181 = load i32, i32* %56, align 4
  store i32 %181, i32* %180, align 4
  %182 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %169, i64 1
  %183 = ptrtoint %"class.rtc::InterfaceAddress"* %182 to i64
  %184 = bitcast i8* %167 to i64*
  store i64 %183, i64* %184, align 8
  br label %188

185:                                              ; preds = %164
  %186 = getelementptr inbounds i8, i8* %130, i64 240
  %187 = bitcast i8* %186 to %"class.std::__1::vector.10"*
  call void @_ZNSt3__16vectorIN3rtc16InterfaceAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.10"* %187, %"class.rtc::InterfaceAddress"* nonnull dereferenceable(32) %11) #12
  br label %188

188:                                              ; preds = %174, %185
  %189 = load %"class.rtc::Network"**, %"class.rtc::Network"*** %40, align 8
  %190 = load %"class.rtc::Network"**, %"class.rtc::Network"*** %41, align 8
  %191 = icmp ult %"class.rtc::Network"** %189, %190
  %192 = ptrtoint %"class.rtc::Network"** %190 to i64
  br i1 %191, label %193, label %197

193:                                              ; preds = %188
  %194 = bitcast %"class.rtc::Network"** %189 to i64*
  store i64 %134, i64* %194, align 8
  %195 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %189, i64 1
  %196 = ptrtoint %"class.rtc::Network"** %195 to i64
  store i64 %196, i64* %75, align 8
  br label %241

197:                                              ; preds = %188
  %198 = ptrtoint %"class.rtc::Network"** %189 to i64
  %199 = load i64, i64* %76, align 8
  %200 = sub i64 %198, %199
  %201 = ashr exact i64 %200, 3
  %202 = add nsw i64 %201, 1
  %203 = icmp ugt i64 %202, 2305843009213693951
  br i1 %203, label %204, label %206

204:                                              ; preds = %197
  %205 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %205) #14
  unreachable

206:                                              ; preds = %197
  %207 = sub i64 %192, %199
  %208 = ashr exact i64 %207, 3
  %209 = icmp ult i64 %208, 1152921504606846975
  br i1 %209, label %210, label %218

210:                                              ; preds = %206
  %211 = ashr exact i64 %207, 2
  %212 = icmp ult i64 %211, %202
  %213 = select i1 %212, i64 %202, i64 %211
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %223, label %215

215:                                              ; preds = %210
  %216 = icmp ugt i64 %213, 2305843009213693951
  br i1 %216, label %217, label %218

217:                                              ; preds = %215
  call void @abort() #14
  unreachable

218:                                              ; preds = %215, %206
  %219 = phi i64 [ %213, %215 ], [ 2305843009213693951, %206 ]
  %220 = shl i64 %219, 3
  %221 = call i8* @_Znwm(i64 %220) #13
  %222 = bitcast i8* %221 to %"class.rtc::Network"**
  br label %223

223:                                              ; preds = %218, %210
  %224 = phi i64 [ %219, %218 ], [ 0, %210 ]
  %225 = phi i8* [ %221, %218 ], [ null, %210 ]
  %226 = phi %"class.rtc::Network"** [ %222, %218 ], [ null, %210 ]
  %227 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %226, i64 %201
  %228 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %226, i64 %224
  %229 = ptrtoint %"class.rtc::Network"** %228 to i64
  %230 = bitcast %"class.rtc::Network"** %227 to i64*
  store i64 %134, i64* %230, align 8
  %231 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %227, i64 1
  %232 = ptrtoint %"class.rtc::Network"** %231 to i64
  %233 = ptrtoint %"class.rtc::Network"** %226 to i64
  %234 = icmp sgt i64 %200, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %223
  %236 = inttoptr i64 %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %236, i64 %200, i1 false) #12
  br label %237

237:                                              ; preds = %235, %223
  store i64 %233, i64* %76, align 8
  store i64 %232, i64* %75, align 8
  store i64 %229, i64* %77, align 8
  %238 = icmp eq i64 %199, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %237
  %240 = inttoptr i64 %199 to i8*
  call void @_ZdlPv(i8* %240) #13
  br label %241

241:                                              ; preds = %193, %237, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12
  br label %243

242:                                              ; preds = %147, %157, %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12
  call void @_ZN3rtc7NetworkD1Ev(%"class.rtc::Network"* nonnull %131) #12
  call void @_ZdlPv(i8* nonnull %130) #13
  br label %243

243:                                              ; preds = %241, %242
  %244 = phi i8 [ %166, %241 ], [ %96, %242 ]
  %245 = phi i8 [ %165, %241 ], [ %97, %242 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #12
  %246 = getelementptr inbounds %"struct.net::NetworkInterface", %"struct.net::NetworkInterface"* %98, i64 1
  %247 = load %"struct.net::NetworkInterface"*, %"struct.net::NetworkInterface"** %44, align 8
  %248 = icmp eq %"struct.net::NetworkInterface"* %246, %247
  br i1 %248, label %80, label %95

249:                                              ; preds = %80
  %250 = bitcast %"class.rtc::IPAddress"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %250) #12
  call void @_ZN11jingle_glue26NetIPAddressToRtcIPAddressERKN3net9IPAddressE(%"class.rtc::IPAddress"* nonnull sret %16, %"class.net::IPAddress"* dereferenceable(17) %2) #12
  %251 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %16, i64 0, i32 1
  %252 = load i32, i32* %251, align 8
  store i32 %252, i32* %85, align 8
  %253 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %14, i64 0, i32 2
  %254 = bitcast %union.anon.8* %253 to i8*
  %255 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %16, i64 0, i32 2
  %256 = bitcast %union.anon.8* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %254, i8* align 4 %256, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %250) #12
  br label %257

257:                                              ; preds = %80, %249
  %258 = and i8 %82, 1
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %268, label %260

260:                                              ; preds = %257
  %261 = bitcast %"class.rtc::IPAddress"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #12
  call void @_ZN11jingle_glue26NetIPAddressToRtcIPAddressERKN3net9IPAddressE(%"class.rtc::IPAddress"* nonnull sret %17, %"class.net::IPAddress"* dereferenceable(17) %3) #12
  %262 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %17, i64 0, i32 1
  %263 = load i32, i32* %262, align 8
  store i32 %263, i32* %90, align 8
  %264 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %15, i64 0, i32 2
  %265 = bitcast %union.anon.8* %264 to i8*
  %266 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %17, i64 0, i32 2
  %267 = bitcast %union.anon.8* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %265, i8* align 4 %267, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #12
  br label %268

268:                                              ; preds = %257, %260
  %269 = bitcast %"class.blink::IpcNetworkManager"* %0 to %"class.rtc::NetworkManagerBase"*
  call void @_ZN3rtc18NetworkManagerBase27set_default_local_addressesERKNS_9IPAddressES3_(%"class.rtc::NetworkManagerBase"* %269, %"class.rtc::IPAddress"* nonnull dereferenceable(32) %14, %"class.rtc::IPAddress"* nonnull dereferenceable(32) %15) #12
  %270 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #12
  %271 = bitcast %"class.blink::Platform"* %270 to i1 (%"class.blink::Platform"*)***
  %272 = load i1 (%"class.blink::Platform"*)**, i1 (%"class.blink::Platform"*)*** %271, align 8
  %273 = getelementptr inbounds i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %272, i64 82
  %274 = load i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %273, align 8
  %275 = call zeroext i1 %274(%"class.blink::Platform"* %270) #12
  br i1 %275, label %276, label %516

276:                                              ; preds = %268
  %277 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #12
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %279, i64 0, i32 1, i32 0
  %281 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 -86, i64 24, i1 false)
  store i8 13, i8* %280, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %277, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13, i1 false) #12
  %282 = getelementptr inbounds i8, i8* %277, i64 13
  store i8 0, i8* %282, align 1
  %283 = bitcast %"class.rtc::IPAddress"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %283) #12
  %284 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %19, i64 0, i32 0
  %285 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %19, i64 0, i32 1
  %286 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %287 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %288 = bitcast %"class.rtc::IPAddress"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 -86, i64 32, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %284, align 8
  store i32 2, i32* %285, align 8
  %289 = bitcast i32* %287 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %289, i8 0, i64 12, i1 false) #12
  store i32 16777343, i32* %286, align 4
  %290 = call i8* @_Znwm(i64 296) #13
  %291 = bitcast i8* %290 to %"class.rtc::Network"*
  call void @_ZN3rtc7NetworkC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS_9IPAddressEiNS_11AdapterTypeE(%"class.rtc::Network"* nonnull %291, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18, %"class.rtc::IPAddress"* nonnull dereferenceable(32) %19, i32 32, i32 0) #12
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds i8, i8* %290, i64 112
  %295 = bitcast i8* %294 to %"class.rtc::DefaultLocalAddressProvider"**
  store %"class.rtc::DefaultLocalAddressProvider"* %293, %"class.rtc::DefaultLocalAddressProvider"** %295, align 8
  %296 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 1
  %297 = getelementptr inbounds i8, i8* %290, i64 120
  %298 = bitcast i8* %297 to %"class.rtc::MdnsResponderProvider"**
  store %"class.rtc::MdnsResponderProvider"* %296, %"class.rtc::MdnsResponderProvider"** %298, align 8
  %299 = bitcast %"class.rtc::InterfaceAddress"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %299) #12
  %300 = load i32, i32* %285, align 8
  %301 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %19, i64 0, i32 2
  %302 = bitcast %union.anon.8* %301 to i8*
  %303 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %5, i64 0, i32 0, i32 0
  %304 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %5, i64 0, i32 0, i32 1
  store i32 %300, i32* %304, align 8
  %305 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %5, i64 0, i32 0, i32 2
  %306 = bitcast %union.anon.8* %305 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %306, i8* align 4 %302, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8
  %307 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %5, i64 0, i32 1
  store i32 0, i32* %307, align 4
  %308 = getelementptr inbounds i8, i8* %290, i64 248
  %309 = bitcast i8* %308 to %"class.rtc::InterfaceAddress"**
  %310 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %309, align 8
  %311 = getelementptr inbounds i8, i8* %290, i64 256
  %312 = bitcast i8* %311 to %"class.rtc::InterfaceAddress"**
  %313 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %312, align 8
  %314 = icmp ult %"class.rtc::InterfaceAddress"* %310, %313
  br i1 %314, label %315, label %326

315:                                              ; preds = %276
  %316 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %310, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %316, align 8
  %317 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %310, i64 0, i32 0, i32 1
  %318 = load i32, i32* %304, align 8
  store i32 %318, i32* %317, align 8
  %319 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %310, i64 0, i32 0, i32 2
  %320 = bitcast %union.anon.8* %319 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %320, i8* align 4 %306, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %316, align 8
  %321 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %310, i64 0, i32 1
  %322 = load i32, i32* %307, align 4
  store i32 %322, i32* %321, align 4
  %323 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %310, i64 1
  %324 = ptrtoint %"class.rtc::InterfaceAddress"* %323 to i64
  %325 = bitcast i8* %308 to i64*
  store i64 %324, i64* %325, align 8
  br label %329

326:                                              ; preds = %276
  %327 = getelementptr inbounds i8, i8* %290, i64 240
  %328 = bitcast i8* %327 to %"class.std::__1::vector.10"*
  call void @_ZNSt3__16vectorIN3rtc16InterfaceAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.10"* %328, %"class.rtc::InterfaceAddress"* nonnull dereferenceable(32) %5) #12
  br label %329

329:                                              ; preds = %315, %326
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %299) #12
  %330 = load %"class.rtc::Network"**, %"class.rtc::Network"*** %40, align 8
  %331 = load %"class.rtc::Network"**, %"class.rtc::Network"*** %41, align 8
  %332 = icmp eq %"class.rtc::Network"** %330, %331
  %333 = ptrtoint %"class.rtc::Network"** %331 to i64
  br i1 %332, label %339, label %334

334:                                              ; preds = %329
  %335 = bitcast %"class.rtc::Network"** %330 to i64*
  store i64 %292, i64* %335, align 8
  %336 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %330, i64 1
  %337 = ptrtoint %"class.rtc::Network"** %336 to i64
  %338 = bitcast %"class.rtc::Network"*** %40 to i64*
  store i64 %337, i64* %338, align 8
  br label %386

339:                                              ; preds = %329
  %340 = ptrtoint %"class.rtc::Network"** %330 to i64
  %341 = bitcast %"class.rtc::Network"*** %40 to i64*
  %342 = bitcast %"class.std::__1::vector"* %8 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = sub i64 %340, %343
  %345 = ashr exact i64 %344, 3
  %346 = add nsw i64 %345, 1
  %347 = icmp ugt i64 %346, 2305843009213693951
  br i1 %347, label %348, label %350

348:                                              ; preds = %339
  %349 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %349) #14
  unreachable

350:                                              ; preds = %339
  %351 = bitcast %"class.rtc::Network"*** %41 to i64*
  %352 = sub i64 %333, %343
  %353 = ashr exact i64 %352, 3
  %354 = icmp ult i64 %353, 1152921504606846975
  br i1 %354, label %355, label %363

355:                                              ; preds = %350
  %356 = ashr exact i64 %352, 2
  %357 = icmp ult i64 %356, %346
  %358 = select i1 %357, i64 %346, i64 %356
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %368, label %360

360:                                              ; preds = %355
  %361 = icmp ugt i64 %358, 2305843009213693951
  br i1 %361, label %362, label %363

362:                                              ; preds = %360
  call void @abort() #14
  unreachable

363:                                              ; preds = %360, %350
  %364 = phi i64 [ %358, %360 ], [ 2305843009213693951, %350 ]
  %365 = shl i64 %364, 3
  %366 = call i8* @_Znwm(i64 %365) #13
  %367 = bitcast i8* %366 to %"class.rtc::Network"**
  br label %368

368:                                              ; preds = %363, %355
  %369 = phi i64 [ %364, %363 ], [ 0, %355 ]
  %370 = phi i8* [ %366, %363 ], [ null, %355 ]
  %371 = phi %"class.rtc::Network"** [ %367, %363 ], [ null, %355 ]
  %372 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %371, i64 %345
  %373 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %371, i64 %369
  %374 = ptrtoint %"class.rtc::Network"** %373 to i64
  %375 = bitcast %"class.rtc::Network"** %372 to i64*
  store i64 %292, i64* %375, align 8
  %376 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %372, i64 1
  %377 = ptrtoint %"class.rtc::Network"** %376 to i64
  %378 = ptrtoint %"class.rtc::Network"** %371 to i64
  %379 = icmp sgt i64 %344, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %368
  %381 = inttoptr i64 %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %370, i8* align 8 %381, i64 %344, i1 false) #12
  br label %382

382:                                              ; preds = %380, %368
  store i64 %378, i64* %342, align 8
  store i64 %377, i64* %341, align 8
  store i64 %374, i64* %351, align 8
  %383 = icmp eq i64 %343, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %382
  %385 = inttoptr i64 %343 to i8*
  call void @_ZdlPv(i8* %385) #13
  br label %386

386:                                              ; preds = %334, %382, %384
  %387 = bitcast %"class.rtc::IPAddress"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %387) #12
  %388 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %20, i64 0, i32 0
  %389 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %20, i64 0, i32 1
  %390 = bitcast %"class.rtc::IPAddress"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %390, i8 -86, i64 32, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %388, align 8
  %391 = bitcast i32* %389 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %391, i8 0, i64 20, i1 false) #12
  %392 = bitcast %"class.blink::IpcNetworkManager"* %0 to i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)***
  %393 = load i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)**, i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)*** %392, align 8
  %394 = getelementptr inbounds i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)*, i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)** %393, i64 2
  %395 = load i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)*, i1 (%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*)** %394, align 8
  %396 = call zeroext i1 %395(%"class.rtc::NetworkManagerBase"* %269, i32 10, %"class.rtc::IPAddress"* nonnull %20) #12
  br i1 %396, label %397, label %510

397:                                              ; preds = %386
  %398 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %398) #12
  %399 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %401 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %400, i64 0, i32 1, i32 0
  %402 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %402, i8 -86, i64 24, i1 false)
  store i8 13, i8* %401, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %398, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i64 13, i1 false) #12
  %403 = getelementptr inbounds i8, i8* %398, i64 13
  store i8 0, i8* %403, align 1
  %404 = bitcast %"class.rtc::IPAddress"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %404) #12
  %405 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %22, i64 0, i32 0
  %406 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %22, i64 0, i32 1
  %407 = bitcast %"class.rtc::IPAddress"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %407, i8 -86, i64 32, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %405, align 8
  store i32 10, i32* %406, align 8
  %408 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %22, i64 0, i32 2, i32 0
  %409 = bitcast %struct.in6_addr* %408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %409, i8* align 4 bitcast (%struct.in6_addr* @in6addr_loopback to i8*), i64 16, i1 false) #12
  %410 = call i8* @_Znwm(i64 296) #13
  %411 = bitcast i8* %410 to %"class.rtc::Network"*
  call void @_ZN3rtc7NetworkC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS_9IPAddressEiNS_11AdapterTypeE(%"class.rtc::Network"* nonnull %411, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.rtc::IPAddress"* nonnull dereferenceable(32) %22, i32 64, i32 0) #12
  %412 = ptrtoint i8* %410 to i64
  %413 = getelementptr inbounds i8, i8* %410, i64 112
  %414 = bitcast i8* %413 to %"class.rtc::DefaultLocalAddressProvider"**
  store %"class.rtc::DefaultLocalAddressProvider"* %293, %"class.rtc::DefaultLocalAddressProvider"** %414, align 8
  %415 = getelementptr inbounds i8, i8* %410, i64 120
  %416 = bitcast i8* %415 to %"class.rtc::MdnsResponderProvider"**
  store %"class.rtc::MdnsResponderProvider"* %296, %"class.rtc::MdnsResponderProvider"** %416, align 8
  %417 = bitcast %"class.rtc::InterfaceAddress"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %417) #12
  %418 = load i32, i32* %406, align 8
  %419 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %22, i64 0, i32 2
  %420 = bitcast %union.anon.8* %419 to i8*
  %421 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %6, i64 0, i32 0, i32 0
  %422 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %6, i64 0, i32 0, i32 1
  store i32 %418, i32* %422, align 8
  %423 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %6, i64 0, i32 0, i32 2
  %424 = bitcast %union.anon.8* %423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %424, i8* align 4 %420, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %421, align 8
  %425 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %6, i64 0, i32 1
  store i32 0, i32* %425, align 4
  %426 = getelementptr inbounds i8, i8* %410, i64 248
  %427 = bitcast i8* %426 to %"class.rtc::InterfaceAddress"**
  %428 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %427, align 8
  %429 = getelementptr inbounds i8, i8* %410, i64 256
  %430 = bitcast i8* %429 to %"class.rtc::InterfaceAddress"**
  %431 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %430, align 8
  %432 = icmp ult %"class.rtc::InterfaceAddress"* %428, %431
  br i1 %432, label %433, label %444

433:                                              ; preds = %397
  %434 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %428, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %434, align 8
  %435 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %428, i64 0, i32 0, i32 1
  %436 = load i32, i32* %422, align 8
  store i32 %436, i32* %435, align 8
  %437 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %428, i64 0, i32 0, i32 2
  %438 = bitcast %union.anon.8* %437 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %438, i8* align 4 %424, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %434, align 8
  %439 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %428, i64 0, i32 1
  %440 = load i32, i32* %425, align 4
  store i32 %440, i32* %439, align 4
  %441 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %428, i64 1
  %442 = ptrtoint %"class.rtc::InterfaceAddress"* %441 to i64
  %443 = bitcast i8* %426 to i64*
  store i64 %442, i64* %443, align 8
  br label %447

444:                                              ; preds = %397
  %445 = getelementptr inbounds i8, i8* %410, i64 240
  %446 = bitcast i8* %445 to %"class.std::__1::vector.10"*
  call void @_ZNSt3__16vectorIN3rtc16InterfaceAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.10"* %446, %"class.rtc::InterfaceAddress"* nonnull dereferenceable(32) %6) #12
  br label %447

447:                                              ; preds = %433, %444
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %417) #12
  %448 = load %"class.rtc::Network"**, %"class.rtc::Network"*** %40, align 8
  %449 = load %"class.rtc::Network"**, %"class.rtc::Network"*** %41, align 8
  %450 = icmp eq %"class.rtc::Network"** %448, %449
  %451 = ptrtoint %"class.rtc::Network"** %449 to i64
  br i1 %450, label %457, label %452

452:                                              ; preds = %447
  %453 = bitcast %"class.rtc::Network"** %448 to i64*
  store i64 %412, i64* %453, align 8
  %454 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %448, i64 1
  %455 = ptrtoint %"class.rtc::Network"** %454 to i64
  %456 = bitcast %"class.rtc::Network"*** %40 to i64*
  store i64 %455, i64* %456, align 8
  br label %504

457:                                              ; preds = %447
  %458 = ptrtoint %"class.rtc::Network"** %448 to i64
  %459 = bitcast %"class.rtc::Network"*** %40 to i64*
  %460 = bitcast %"class.std::__1::vector"* %8 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = sub i64 %458, %461
  %463 = ashr exact i64 %462, 3
  %464 = add nsw i64 %463, 1
  %465 = icmp ugt i64 %464, 2305843009213693951
  br i1 %465, label %466, label %468

466:                                              ; preds = %457
  %467 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %467) #14
  unreachable

468:                                              ; preds = %457
  %469 = bitcast %"class.rtc::Network"*** %41 to i64*
  %470 = sub i64 %451, %461
  %471 = ashr exact i64 %470, 3
  %472 = icmp ult i64 %471, 1152921504606846975
  br i1 %472, label %473, label %481

473:                                              ; preds = %468
  %474 = ashr exact i64 %470, 2
  %475 = icmp ult i64 %474, %464
  %476 = select i1 %475, i64 %464, i64 %474
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %486, label %478

478:                                              ; preds = %473
  %479 = icmp ugt i64 %476, 2305843009213693951
  br i1 %479, label %480, label %481

480:                                              ; preds = %478
  call void @abort() #14
  unreachable

481:                                              ; preds = %478, %468
  %482 = phi i64 [ %476, %478 ], [ 2305843009213693951, %468 ]
  %483 = shl i64 %482, 3
  %484 = call i8* @_Znwm(i64 %483) #13
  %485 = bitcast i8* %484 to %"class.rtc::Network"**
  br label %486

486:                                              ; preds = %481, %473
  %487 = phi i64 [ %482, %481 ], [ 0, %473 ]
  %488 = phi i8* [ %484, %481 ], [ null, %473 ]
  %489 = phi %"class.rtc::Network"** [ %485, %481 ], [ null, %473 ]
  %490 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %489, i64 %463
  %491 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %489, i64 %487
  %492 = ptrtoint %"class.rtc::Network"** %491 to i64
  %493 = bitcast %"class.rtc::Network"** %490 to i64*
  store i64 %412, i64* %493, align 8
  %494 = getelementptr inbounds %"class.rtc::Network"*, %"class.rtc::Network"** %490, i64 1
  %495 = ptrtoint %"class.rtc::Network"** %494 to i64
  %496 = ptrtoint %"class.rtc::Network"** %489 to i64
  %497 = icmp sgt i64 %462, 0
  br i1 %497, label %498, label %500

498:                                              ; preds = %486
  %499 = inttoptr i64 %461 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %488, i8* align 8 %499, i64 %462, i1 false) #12
  br label %500

500:                                              ; preds = %498, %486
  store i64 %496, i64* %460, align 8
  store i64 %495, i64* %459, align 8
  store i64 %492, i64* %469, align 8
  %501 = icmp eq i64 %461, 0
  br i1 %501, label %504, label %502

502:                                              ; preds = %500
  %503 = inttoptr i64 %461 to i8*
  call void @_ZdlPv(i8* %503) #13
  br label %504

504:                                              ; preds = %452, %500, %502
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %404) #12
  %505 = load i8, i8* %401, align 1
  %506 = icmp slt i8 %505, 0
  br i1 %506, label %507, label %509

507:                                              ; preds = %504
  %508 = load i8*, i8** %399, align 8
  call void @_ZdlPv(i8* %508) #13
  br label %509

509:                                              ; preds = %504, %507
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %398) #12
  br label %510

510:                                              ; preds = %509, %386
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %387) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %283) #12
  %511 = load i8, i8* %280, align 1
  %512 = icmp slt i8 %511, 0
  br i1 %512, label %513, label %515

513:                                              ; preds = %510
  %514 = load i8*, i8** %278, align 8
  call void @_ZdlPv(i8* %514) #13
  br label %515

515:                                              ; preds = %510, %513
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #12
  br label %516

516:                                              ; preds = %515, %268
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #12
  store i8 0, i8* %23, align 1
  %517 = bitcast %"struct.rtc::NetworkManager::Stats"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %517) #12
  %518 = getelementptr inbounds %"struct.rtc::NetworkManager::Stats", %"struct.rtc::NetworkManager::Stats"* %24, i64 0, i32 0
  %519 = getelementptr inbounds %"struct.rtc::NetworkManager::Stats", %"struct.rtc::NetworkManager::Stats"* %24, i64 0, i32 1
  store i32 0, i32* %518, align 4
  store i32 0, i32* %519, align 4
  call void @_ZN3rtc18NetworkManagerBase16MergeNetworkListERKNSt3__16vectorIPNS_7NetworkENS1_9allocatorIS4_EEEEPbPNS_14NetworkManager5StatsE(%"class.rtc::NetworkManagerBase"* %269, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, i8* nonnull %23, %"struct.rtc::NetworkManager::Stats"* nonnull %24) #12
  %520 = load i8, i8* %23, align 1, !range !6
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %548, label %522

522:                                              ; preds = %516
  %523 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %524 = bitcast %"struct.std::__1::__list_node_base"** %523 to i64*
  %525 = load i64, i64* %524, align 8
  %526 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  %527 = bitcast %"struct.std::__1::__list_node_base"** %526 to i64*
  store i64 %525, i64* %527, align 8
  %528 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %529 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %530 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %528, i64 0, i32 0
  %531 = inttoptr i64 %525 to %"struct.std::__1::__list_node_base"*
  %532 = icmp eq %"struct.std::__1::__list_node_base"* %529, %531
  br i1 %532, label %548, label %533

533:                                              ; preds = %522
  %534 = inttoptr i64 %525 to %"struct.std::__1::__list_node"*
  %535 = bitcast %"class.std::__1::__list_iterator"* %528 to i64*
  br label %536

536:                                              ; preds = %536, %533
  %537 = phi %"struct.std::__1::__list_node"* [ %534, %533 ], [ %547, %536 ]
  %538 = phi %"struct.std::__1::__list_node_base"* [ %531, %533 ], [ %545, %536 ]
  %539 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %537, i64 0, i32 1
  %540 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %538, i64 0, i32 1
  %541 = bitcast %"struct.std::__1::__list_node_base"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  store i64 %542, i64* %535, align 8
  %543 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %539, i64 0, i32 0
  %544 = load void (%"class.sigslot::_opaque_connection"*)*, void (%"class.sigslot::_opaque_connection"*)** %543, align 8
  call void %544(%"class.sigslot::_opaque_connection"* %539) #12
  %545 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %530, align 8
  %546 = icmp eq %"struct.std::__1::__list_node_base"* %545, %529
  %547 = bitcast %"struct.std::__1::__list_node_base"* %545 to %"struct.std::__1::__list_node"*
  br i1 %546, label %548, label %536

548:                                              ; preds = %536, %522, %516
  %549 = load atomic i64, i64* @_ZZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_E24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %550 = inttoptr i64 %549 to %"class.base::HistogramBase"*
  %551 = icmp eq i64 %549, 0
  br i1 %551, label %552, label %555

552:                                              ; preds = %548
  %553 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #12
  %554 = ptrtoint %"class.base::HistogramBase"* %553 to i64
  store atomic i64 %554, i64* @_ZZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_E24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %555

555:                                              ; preds = %548, %552
  %556 = phi %"class.base::HistogramBase"* [ %550, %548 ], [ %553, %552 ]
  %557 = load i32, i32* %518, align 4
  %558 = bitcast %"class.base::HistogramBase"* %556 to void (%"class.base::HistogramBase"*, i32)***
  %559 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %558, align 8
  %560 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %559, i64 6
  %561 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %560, align 8
  call void %561(%"class.base::HistogramBase"* %556, i32 %557) #12
  %562 = load atomic i64, i64* @_ZZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_E24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %563 = inttoptr i64 %562 to %"class.base::HistogramBase"*
  %564 = icmp eq i64 %562, 0
  br i1 %564, label %565, label %568

565:                                              ; preds = %555
  %566 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #12
  %567 = ptrtoint %"class.base::HistogramBase"* %566 to i64
  store atomic i64 %567, i64* @_ZZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_E24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %568

568:                                              ; preds = %555, %565
  %569 = phi %"class.base::HistogramBase"* [ %563, %555 ], [ %566, %565 ]
  %570 = load i32, i32* %519, align 4
  %571 = bitcast %"class.base::HistogramBase"* %569 to void (%"class.base::HistogramBase"*, i32)***
  %572 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %571, align 8
  %573 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %572, i64 6
  %574 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %573, align 8
  call void %574(%"class.base::HistogramBase"* %569, i32 %570) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %517) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #12
  %575 = load %"class.rtc::Network"**, %"class.rtc::Network"*** %39, align 8
  %576 = icmp eq %"class.rtc::Network"** %575, null
  br i1 %576, label %581, label %577

577:                                              ; preds = %568
  %578 = ptrtoint %"class.rtc::Network"** %575 to i64
  %579 = bitcast %"class.rtc::Network"*** %40 to i64*
  store i64 %578, i64* %579, align 8
  %580 = bitcast %"class.rtc::Network"** %575 to i8*
  call void @_ZdlPv(i8* %580) #13
  br label %581

581:                                              ; preds = %568, %577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  ret void
}

declare void @_ZN11jingle_glue26NetIPAddressToRtcIPAddressERKN3net9IPAddressE(%"class.rtc::IPAddress"* sret, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare void @_ZN3rtc10TruncateIPERKNS_9IPAddressEi(%"class.rtc::IPAddress"* sret, %"class.rtc::IPAddress"* dereferenceable(32), i32) local_unnamed_addr #1

declare i32 @_ZN3rtc22GetAdapterTypeFromNameEPKc(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN3rtc7NetworkC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS_9IPAddressEiNS_11AdapterTypeE(%"class.rtc::Network"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.rtc::IPAddress"* dereferenceable(32), i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare dereferenceable(32) %"class.rtc::InterfaceAddress"* @_ZN3rtc16InterfaceAddressaSERKS0_(%"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc9IPAddressD2Ev(%"class.rtc::IPAddress"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN3rtc12IPIsMacBasedERKNS_9IPAddressE(%"class.rtc::IPAddress"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZN3rtc11IPIsPrivateERKNS_9IPAddressE(%"class.rtc::IPAddress"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3rtc18NetworkManagerBase27set_default_local_addressesERKNS_9IPAddressES3_(%"class.rtc::NetworkManagerBase"*, %"class.rtc::IPAddress"* dereferenceable(32), %"class.rtc::IPAddress"* dereferenceable(32)) local_unnamed_addr #1

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

declare void @_ZN3rtc18NetworkManagerBase16MergeNetworkListERKNSt3__16vectorIPNS_7NetworkENS1_9allocatorIS4_EEEEPbPNS_14NetworkManager5StatsE(%"class.rtc::NetworkManagerBase"*, %"class.std::__1::vector"* dereferenceable(24), i8*, %"struct.rtc::NetworkManager::Stats"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn272_N5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_(%"class.blink::IpcNetworkManager"*, %"class.std::__1::vector.238"* nocapture readonly dereferenceable(24), %"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 2
  %6 = bitcast %"class.std::__1::__list_iterator"* %5 to %"class.blink::IpcNetworkManager"*
  tail call void @_ZN5blink17IpcNetworkManager20OnNetworkListChangedERKNSt3__16vectorIN3net16NetworkInterfaceENS1_9allocatorIS4_EEEERKNS3_9IPAddressESC_(%"class.blink::IpcNetworkManager"* %6, %"class.std::__1::vector.238"* dereferenceable(24) %1, %"class.net::IPAddress"* dereferenceable(17) %2, %"class.net::IPAddress"* dereferenceable(17) %3)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.webrtc::MdnsResponderInterface"* @_ZNK5blink17IpcNetworkManager16GetMdnsResponderEv(%"class.blink::IpcNetworkManager"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::MdnsResponderInterface"*, %"class.webrtc::MdnsResponderInterface"** %2, align 8
  ret %"class.webrtc::MdnsResponderInterface"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.webrtc::MdnsResponderInterface"* @_ZThn8_NK5blink17IpcNetworkManager16GetMdnsResponderEv(%"class.blink::IpcNetworkManager"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcNetworkManager", %"class.blink::IpcNetworkManager"* %0, i64 -1, i32 6, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 37
  %4 = bitcast i64* %3 to %"class.webrtc::MdnsResponderInterface"**
  %5 = load %"class.webrtc::MdnsResponderInterface"*, %"class.webrtc::MdnsResponderInterface"** %4, align 8
  ret %"class.webrtc::MdnsResponderInterface"* %5
}

declare zeroext i1 @_ZNK3rtc18NetworkManagerBase22GetDefaultLocalAddressEiPNS_9IPAddressE(%"class.rtc::NetworkManagerBase"*, i32, %"class.rtc::IPAddress"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc14NetworkManager10InitializeEv(%"class.rtc::NetworkManager"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK3rtc18NetworkManagerBase11GetNetworksEPNSt3__16vectorIPNS_7NetworkENS1_9allocatorIS4_EEEE(%"class.rtc::NetworkManagerBase"*, %"class.std::__1::vector"*) unnamed_addr #1

declare i32 @_ZNK3rtc18NetworkManagerBase22enumeration_permissionEv(%"class.rtc::NetworkManagerBase"*) unnamed_addr #1

declare void @_ZN3rtc18NetworkManagerBase21GetAnyAddressNetworksEPNSt3__16vectorIPNS_7NetworkENS1_9allocatorIS4_EEEE(%"class.rtc::NetworkManagerBase"*, %"class.std::__1::vector"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc14NetworkManager12DumpNetworksEv(%"class.rtc::NetworkManager"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc16InterfaceAddressD0Ev(%"class.rtc::InterfaceAddress"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.rtc::InterfaceAddress"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc9IPAddressD0Ev(%"class.rtc::IPAddress"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.rtc::IPAddress"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3rtc16InterfaceAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.10"*, %"class.rtc::InterfaceAddress"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rtc::InterfaceAddress"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rtc::InterfaceAddress"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.rtc::InterfaceAddress"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rtc::InterfaceAddress"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %35
  %39 = ptrtoint %"class.rtc::InterfaceAddress"* %38 to i64
  %40 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9, i32 0, i32 1
  %42 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %1, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9, i32 0, i32 2
  %45 = bitcast %union.anon.8* %44 to i8*
  %46 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %1, i64 0, i32 0, i32 2
  %47 = bitcast %union.anon.8* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %47, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %48 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9, i32 1
  %49 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 1
  %52 = ptrtoint %"class.rtc::InterfaceAddress"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %53, align 8
  %55 = ptrtoint %"class.rtc::InterfaceAddress"* %54 to i64
  %56 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %3, align 8
  %57 = icmp eq %"class.rtc::InterfaceAddress"* %56, %54
  br i1 %57, label %115, label %58

58:                                               ; preds = %34
  %59 = getelementptr %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 0, i32 0
  %60 = ptrtoint i32 (...)*** %59 to i64
  %61 = sub i64 %60, %55
  %62 = and i64 %61, 32
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1
  %66 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 0, i32 1
  %68 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %67, align 8
  %70 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 0, i32 2
  %71 = bitcast %union.anon.8* %70 to i8*
  %72 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 0, i32 2
  %73 = bitcast %union.anon.8* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %73, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %74 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 1
  %75 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1
  br label %78

78:                                               ; preds = %64, %58
  %79 = phi %"class.rtc::InterfaceAddress"* [ undef, %58 ], [ %77, %64 ]
  %80 = phi %"class.rtc::InterfaceAddress"* [ %37, %58 ], [ %77, %64 ]
  %81 = phi %"class.rtc::InterfaceAddress"* [ %56, %58 ], [ %65, %64 ]
  %82 = icmp ult i64 %61, 32
  br i1 %82, label %111, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"class.rtc::InterfaceAddress"* [ %109, %83 ], [ %80, %78 ]
  %85 = phi %"class.rtc::InterfaceAddress"* [ %97, %83 ], [ %81, %78 ]
  %86 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 0, i32 1
  %88 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -1, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 0, i32 2
  %91 = bitcast %union.anon.8* %90 to i8*
  %92 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -1, i32 0, i32 2
  %93 = bitcast %union.anon.8* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %93, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %94 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 1
  %95 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -1, i32 1
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2
  %98 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 0, i32 1
  %100 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  store i32 %101, i32* %99, align 8
  %102 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 0, i32 2
  %103 = bitcast %union.anon.8* %102 to i8*
  %104 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2, i32 0, i32 2
  %105 = bitcast %union.anon.8* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %105, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %106 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 1
  %107 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2, i32 1
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2
  %110 = icmp eq %"class.rtc::InterfaceAddress"* %97, %54
  br i1 %110, label %111, label %83

111:                                              ; preds = %83, %78
  %112 = phi %"class.rtc::InterfaceAddress"* [ %79, %78 ], [ %109, %83 ]
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %3, align 8
  br label %115

115:                                              ; preds = %34, %111
  %116 = phi %"class.rtc::InterfaceAddress"* [ %114, %111 ], [ %54, %34 ]
  %117 = phi %"class.rtc::InterfaceAddress"* [ %112, %111 ], [ %37, %34 ]
  %118 = phi i64 [ %113, %111 ], [ %55, %34 ]
  %119 = ptrtoint %"class.rtc::InterfaceAddress"* %117 to i64
  store i64 %119, i64* %6, align 8
  store i64 %52, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %120 = inttoptr i64 %118 to %"class.rtc::InterfaceAddress"*
  %121 = icmp eq %"class.rtc::InterfaceAddress"* %116, %120
  br i1 %121, label %129, label %122

122:                                              ; preds = %115, %122
  %123 = phi %"class.rtc::InterfaceAddress"* [ %124, %122 ], [ %116, %115 ]
  %124 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %123, i64 -1
  %125 = bitcast %"class.rtc::InterfaceAddress"* %124 to void (%"class.rtc::InterfaceAddress"*)***
  %126 = load void (%"class.rtc::InterfaceAddress"*)**, void (%"class.rtc::InterfaceAddress"*)*** %125, align 8
  %127 = load void (%"class.rtc::InterfaceAddress"*)*, void (%"class.rtc::InterfaceAddress"*)** %126, align 8
  tail call void %127(%"class.rtc::InterfaceAddress"* %124) #12
  %128 = icmp eq %"class.rtc::InterfaceAddress"* %124, %120
  br i1 %128, label %129, label %122

129:                                              ; preds = %122, %115
  %130 = icmp eq i64 %118, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %118 to i8*
  tail call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %129, %131
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3rtc16InterfaceAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.10"*, %"class.rtc::InterfaceAddress"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rtc::InterfaceAddress"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rtc::InterfaceAddress"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.rtc::InterfaceAddress"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rtc::InterfaceAddress"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %35
  %39 = ptrtoint %"class.rtc::InterfaceAddress"* %38 to i64
  %40 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9, i32 0, i32 1
  %42 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %1, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9, i32 0, i32 2
  %45 = bitcast %union.anon.8* %44 to i8*
  %46 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %1, i64 0, i32 0, i32 2
  %47 = bitcast %union.anon.8* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %47, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %48 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %36, i64 %9, i32 1
  %49 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 1
  %52 = ptrtoint %"class.rtc::InterfaceAddress"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %53, align 8
  %55 = ptrtoint %"class.rtc::InterfaceAddress"* %54 to i64
  %56 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %3, align 8
  %57 = icmp eq %"class.rtc::InterfaceAddress"* %56, %54
  br i1 %57, label %115, label %58

58:                                               ; preds = %34
  %59 = getelementptr %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 0, i32 0
  %60 = ptrtoint i32 (...)*** %59 to i64
  %61 = sub i64 %60, %55
  %62 = and i64 %61, 32
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1
  %66 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 0, i32 1
  %68 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %67, align 8
  %70 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 0, i32 2
  %71 = bitcast %union.anon.8* %70 to i8*
  %72 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 0, i32 2
  %73 = bitcast %union.anon.8* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %73, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %74 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1, i32 1
  %75 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %56, i64 -1, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %37, i64 -1
  br label %78

78:                                               ; preds = %64, %58
  %79 = phi %"class.rtc::InterfaceAddress"* [ undef, %58 ], [ %77, %64 ]
  %80 = phi %"class.rtc::InterfaceAddress"* [ %37, %58 ], [ %77, %64 ]
  %81 = phi %"class.rtc::InterfaceAddress"* [ %56, %58 ], [ %65, %64 ]
  %82 = icmp ult i64 %61, 32
  br i1 %82, label %111, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"class.rtc::InterfaceAddress"* [ %109, %83 ], [ %80, %78 ]
  %85 = phi %"class.rtc::InterfaceAddress"* [ %97, %83 ], [ %81, %78 ]
  %86 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 0, i32 1
  %88 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -1, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  store i32 %89, i32* %87, align 8
  %90 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 0, i32 2
  %91 = bitcast %union.anon.8* %90 to i8*
  %92 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -1, i32 0, i32 2
  %93 = bitcast %union.anon.8* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %93, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %94 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -1, i32 1
  %95 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -1, i32 1
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2
  %98 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 0, i32 1
  %100 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  store i32 %101, i32* %99, align 8
  %102 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 0, i32 2
  %103 = bitcast %union.anon.8* %102 to i8*
  %104 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2, i32 0, i32 2
  %105 = bitcast %union.anon.8* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %105, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc16InterfaceAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %106 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2, i32 1
  %107 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %85, i64 -2, i32 1
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %84, i64 -2
  %110 = icmp eq %"class.rtc::InterfaceAddress"* %97, %54
  br i1 %110, label %111, label %83

111:                                              ; preds = %83, %78
  %112 = phi %"class.rtc::InterfaceAddress"* [ %79, %78 ], [ %109, %83 ]
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"** %3, align 8
  br label %115

115:                                              ; preds = %34, %111
  %116 = phi %"class.rtc::InterfaceAddress"* [ %114, %111 ], [ %54, %34 ]
  %117 = phi %"class.rtc::InterfaceAddress"* [ %112, %111 ], [ %37, %34 ]
  %118 = phi i64 [ %113, %111 ], [ %55, %34 ]
  %119 = ptrtoint %"class.rtc::InterfaceAddress"* %117 to i64
  store i64 %119, i64* %6, align 8
  store i64 %52, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %120 = inttoptr i64 %118 to %"class.rtc::InterfaceAddress"*
  %121 = icmp eq %"class.rtc::InterfaceAddress"* %116, %120
  br i1 %121, label %129, label %122

122:                                              ; preds = %115, %122
  %123 = phi %"class.rtc::InterfaceAddress"* [ %124, %122 ], [ %116, %115 ]
  %124 = getelementptr inbounds %"class.rtc::InterfaceAddress", %"class.rtc::InterfaceAddress"* %123, i64 -1
  %125 = bitcast %"class.rtc::InterfaceAddress"* %124 to void (%"class.rtc::InterfaceAddress"*)***
  %126 = load void (%"class.rtc::InterfaceAddress"*)**, void (%"class.rtc::InterfaceAddress"*)*** %125, align 8
  %127 = load void (%"class.rtc::InterfaceAddress"*)*, void (%"class.rtc::InterfaceAddress"*)** %126, align 8
  tail call void %127(%"class.rtc::InterfaceAddress"* %124) #12
  %128 = icmp eq %"class.rtc::InterfaceAddress"* %124, %120
  br i1 %128, label %129, label %122

129:                                              ; preds = %122, %115
  %130 = icmp eq i64 %118, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %118 to i8*
  tail call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %129, %131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18NetworkListManagerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase"*
  tail call void @_ZNK5blink14PersistentBaseINS_18NetworkListManagerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_18NetworkListManagerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  %5 = load %"class.blink::NetworkListManager"*, %"class.blink::NetworkListManager"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::NetworkListManager"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::NetworkListManager"* %5 to i8*
  %10 = ptrtoint %"class.blink::NetworkListManager"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #12, !range !17
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::IpcNetworkManager"**
  %10 = load %"class.blink::IpcNetworkManager"*, %"class.blink::IpcNetworkManager"** %9, align 8
  %11 = icmp eq %"class.blink::IpcNetworkManager"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::IpcNetworkManager"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::IpcNetworkManager"*)**
  %37 = load void (%"class.blink::IpcNetworkManager"*)*, void (%"class.blink::IpcNetworkManager"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::IpcNetworkManager"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::IpcNetworkManager"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::IpcNetworkManager"* %28) #12
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::IpcNetworkManager"**
  %9 = load %"class.blink::IpcNetworkManager"*, %"class.blink::IpcNetworkManager"** %8, align 8
  %10 = icmp ne %"class.blink::IpcNetworkManager"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3rtc7NetworkD1Ev(%"class.rtc::Network"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN5blink17IpcNetworkManagerEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN5blink17IpcNetworkManagerEE10GetWeakPtrEv"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryIN5blink17IpcNetworkManagerEE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryIN5blink17IpcNetworkManagerEE10GetWeakPtrEv"}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN5blink17IpcNetworkManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!15 = distinct !{!15, !16, !"_ZN3WTF4BindIMN5blink17IpcNetworkManagerEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF4BindIMN5blink17IpcNetworkManagerEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
!17 = !{i32 24, i32 33}
