; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/BackendVk.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/BackendVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.dawn_native::vulkan::Backend" = type { %"class.dawn_native::BackendConnection.base", %class.DynamicLib, %"struct.dawn_native::vulkan::VulkanGlobalInfo", %struct.VkInstance_T*, %"struct.dawn_native::vulkan::VulkanFunctions", %"class.dawn_native::vulkan::detail::VkHandle", %"class.std::__1::vector.72" }
%"class.dawn_native::BackendConnection.base" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32 }>
%class.DynamicLib = type { i8* }
%"struct.dawn_native::vulkan::VulkanGlobalInfo" = type <{ %"struct.dawn_native::vulkan::VulkanGlobalKnobs", i32, [4 x i8] }>
%"struct.dawn_native::vulkan::VulkanGlobalKnobs" = type { %"class.ityp::bitset", %"class.ityp::array", %"class.ityp::bitset.69" }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.67" }
%"class.std::__1::bitset.67" = type { %"class.std::__1::__bitset.68" }
%"class.std::__1::__bitset.68" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x %"class.ityp::bitset.69"] }
%"class.ityp::bitset.69" = type { %"class.std::__1::bitset.70" }
%"class.std::__1::bitset.70" = type { %"class.std::__1::__bitset.71" }
%"class.std::__1::__bitset.71" = type { i64 }
%struct.VkInstance_T = type opaque
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkDevice_T = type opaque
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkDebugUtilsMessengerEXT_T* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T**, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %struct.VkPhysicalDevice_T** }
%"class.dawn_native::InstanceBase" = type { %class.RefCounted, i8, i8, i8, i32, %"class.dawn_platform::Platform"*, %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.dawn_native::ExtensionsInfo", %"class.dawn_native::TogglesInfo", %"class.std::__1::unique_ptr.61" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_platform::Platform" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.dawn_native::AdapterBase"* }
%"class.dawn_native::AdapterBase" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr.4"* }
%"class.dawn_native::ExtensionsInfo" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { float }
%"class.dawn_native::TogglesInfo" = type { i8, [7 x i8], %"class.std::__1::unordered_map.37" }
%"class.std::__1::unordered_map.37" = type { %"class.std::__1::__hash_table.38" }
%"class.std::__1::__hash_table.38" = type <{ %"class.std::__1::unique_ptr.39", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.57", [4 x i8] }>
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base.42"** }
%"struct.std::__1::__hash_node_base.42" = type { %"struct.std::__1::__hash_node_base.42"* }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__bucket_list_deallocator.44" }
%"class.std::__1::__bucket_list_deallocator.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.42" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.dawn_native::XlibXcbFunctions"* }
%"class.dawn_native::XlibXcbFunctions" = type opaque
%"class.dawn_native::BackendConnection" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%class.Result = type { %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.82" }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.84" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.dawn::LogMessage" = type { i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.ScopedEnvironmentVar = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%class.Result.92 = type { i32, %"class.std::__1::unique_ptr.79", %"struct.dawn_native::vulkan::VulkanGlobalInfo" }
%class.Result.93 = type { i32, %"class.std::__1::unique_ptr.79", %"struct.dawn_native::vulkan::VulkanGlobalKnobs" }
%class.Result.94 = type { i32, %"class.std::__1::unique_ptr.79", %"class.std::__1::vector.72" }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { i8**, i8**, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { i8** }
%"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator" = type { %"class.std::__1::bitset.70", i64, i64 }
%struct.VkValidationFeaturesEXT = type { i32, i8*, i32, i32*, i32, i32* }
%"struct.dawn_native::vulkan::VulkanLayerInfo" = type { i32, i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.dawn_native::vulkan::InstanceExtInfo" = type { i32, i8*, i32 }
%struct.VkBaseOutStructure = type { i32, %struct.VkBaseOutStructure* }
%"class.dawn_native::vulkan::Adapter" = type { %"class.dawn_native::AdapterBase.base", %struct.VkPhysicalDevice_T*, %"class.dawn_native::vulkan::Backend"*, %"struct.dawn_native::vulkan::VulkanDeviceInfo" }
%"class.dawn_native::AdapterBase.base" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32 }>
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector.101", %"class.std::__1::vector.108", %"class.std::__1::vector.115", %"class.std::__1::vector.122" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset.98" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset.98" = type { %"class.std::__1::bitset.99" }
%"class.std::__1::bitset.99" = type { %"class.std::__1::__bitset.100" }
%"class.std::__1::__bitset.100" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %struct.VkLayerProperties* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN11dawn_native11AdapterBaseENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZZN14BitSetIteratorILm12EN11dawn_native6vulkan11InstanceExtEE8Iterator10getNextBitEvE8wordMask = comdat any

@_ZTVN11dawn_native6vulkan7BackendE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::vulkan::Backend"*)* @_ZN11dawn_native6vulkan7BackendD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::vulkan::Backend"*)* @_ZN11dawn_native6vulkan7BackendD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector.2"*, %"class.dawn_native::vulkan::Backend"*)* @_ZN11dawn_native6vulkan7Backend23DiscoverDefaultAdaptersEv to i8*), i8* bitcast (void ()* @_ZN11dawn_native17BackendConnection16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE to i8*)] }, align 8
@_ZL14kVulkanLibName = internal constant [15 x i8] c"libvulkan.so.1\00", align 1
@.str = private unnamed_addr constant [15 x i8] c"Couldn't open \00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Couldn't load Vulkan\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/BackendVk.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan7Backend10LoadVulkanEb = private unnamed_addr constant [11 x i8] c"LoadVulkan\00", align 1
@__func__._ZN11dawn_native6vulkan7Backend10InitializeEb = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"Swiftshader enabled but Dawn was not built with DAWN_SWIFTSHADER_VK_ICD_JSON.\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"angledata\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"VK_LAYER_PATH\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"Couldn't set VK_LAYER_PATH\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"vkCreateInstance\00", align 1
@__func__._ZN11dawn_native6vulkan7Backend14CreateInstanceEv = private unnamed_addr constant [15 x i8] c"CreateInstance\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"vkCreateDebugUtilsMessengerEXT\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.11 = private unnamed_addr constant [55 x i8] c"UNASSIGNED-CoreValidation-DrawState-InvalidImageLayout\00", align 1
@_ZZN14BitSetIteratorILm12EN11dawn_native6vulkan11InstanceExtEE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 4095 }, comdat, align 8

@_ZN11dawn_native6vulkan7BackendC1EPNS_12InstanceBaseE = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::Backend"*, %"class.dawn_native::InstanceBase"*), void (%"class.dawn_native::vulkan::Backend"*, %"class.dawn_native::InstanceBase"*)* @_ZN11dawn_native6vulkan7BackendC2EPNS_12InstanceBaseE
@_ZN11dawn_native6vulkan7BackendD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::Backend"*), void (%"class.dawn_native::vulkan::Backend"*)* @_ZN11dawn_native6vulkan7BackendD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7BackendC2EPNS_12InstanceBaseE(%"class.dawn_native::vulkan::Backend"*, %"class.dawn_native::InstanceBase"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.dawn_native::vulkan::Backend"* %0 to %"class.dawn_native::BackendConnection"*
  tail call void @_ZN11dawn_native17BackendConnectionC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::BackendConnection"* %3, %"class.dawn_native::InstanceBase"* %1, i32 4) #13
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan7BackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 1, i32 0
  %6 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 1512, i1 false)
  ret void
}

declare void @_ZN11dawn_native17BackendConnectionC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::BackendConnection"*, %"class.dawn_native::InstanceBase"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7BackendD2Ev(%"class.dawn_native::vulkan::Backend"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan7BackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle", %"class.dawn_native::vulkan::detail::VkHandle"* %3, i64 0, i32 0
  %5 = load %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugUtilsMessengerEXT_T** %4, align 8
  %6 = icmp eq %struct.VkDebugUtilsMessengerEXT_T* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 4, i32 23
  %9 = load void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)** %8, align 8
  %10 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 3
  %11 = load %struct.VkInstance_T*, %struct.VkInstance_T** %10, align 8
  tail call void %9(%struct.VkInstance_T* %11, %struct.VkDebugUtilsMessengerEXT_T* nonnull %5, %struct.VkAllocationCallbacks* null) #13
  %12 = bitcast %"class.dawn_native::vulkan::detail::VkHandle"* %3 to i64*
  store i64 0, i64* %12, align 8
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 3
  %15 = load %struct.VkInstance_T*, %struct.VkInstance_T** %14, align 8
  %16 = icmp eq %struct.VkInstance_T* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 4, i32 4
  %19 = load void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)** %18, align 8
  tail call void %19(%struct.VkInstance_T* nonnull %15, %struct.VkAllocationCallbacks* null) #13
  store %struct.VkInstance_T* null, %struct.VkInstance_T** %14, align 8
  br label %20

20:                                               ; preds = %13, %17
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 6, i32 0, i32 0
  %22 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %21, align 8
  %23 = icmp eq %struct.VkPhysicalDevice_T** %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %struct.VkPhysicalDevice_T** %22 to i64
  %26 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 6, i32 0, i32 1
  %27 = bitcast %struct.VkPhysicalDevice_T*** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %struct.VkPhysicalDevice_T** %22 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 1
  tail call void @_ZN10DynamicLibD1Ev(%class.DynamicLib* %30) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN10DynamicLibD1Ev(%class.DynamicLib*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7BackendD0Ev(%"class.dawn_native::vulkan::Backend"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan7BackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle", %"class.dawn_native::vulkan::detail::VkHandle"* %3, i64 0, i32 0
  %5 = load %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugUtilsMessengerEXT_T** %4, align 8
  %6 = icmp eq %struct.VkDebugUtilsMessengerEXT_T* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 4, i32 23
  %9 = load void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)** %8, align 8
  %10 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 3
  %11 = load %struct.VkInstance_T*, %struct.VkInstance_T** %10, align 8
  tail call void %9(%struct.VkInstance_T* %11, %struct.VkDebugUtilsMessengerEXT_T* nonnull %5, %struct.VkAllocationCallbacks* null) #13
  %12 = bitcast %"class.dawn_native::vulkan::detail::VkHandle"* %3 to i64*
  store i64 0, i64* %12, align 8
  br label %13

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 3
  %15 = load %struct.VkInstance_T*, %struct.VkInstance_T** %14, align 8
  %16 = icmp eq %struct.VkInstance_T* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 4, i32 4
  %19 = load void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)** %18, align 8
  tail call void %19(%struct.VkInstance_T* nonnull %15, %struct.VkAllocationCallbacks* null) #13
  store %struct.VkInstance_T* null, %struct.VkInstance_T** %14, align 8
  br label %20

20:                                               ; preds = %17, %13
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 6, i32 0, i32 0
  %22 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %21, align 8
  %23 = icmp eq %struct.VkPhysicalDevice_T** %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %struct.VkPhysicalDevice_T** %22 to i64
  %26 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 6, i32 0, i32 1
  %27 = bitcast %struct.VkPhysicalDevice_T*** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %struct.VkPhysicalDevice_T** %22 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 1
  tail call void @_ZN10DynamicLibD1Ev(%class.DynamicLib* %30) #13
  %31 = bitcast %"class.dawn_native::vulkan::Backend"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(1408) %"struct.dawn_native::vulkan::VulkanFunctions"* @_ZNK11dawn_native6vulkan7Backend12GetFunctionsEv(%"class.dawn_native::vulkan::Backend"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 4
  ret %"struct.dawn_native::vulkan::VulkanFunctions"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.VkInstance_T* @_ZNK11dawn_native6vulkan7Backend13GetVkInstanceEv(%"class.dawn_native::vulkan::Backend"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 3
  %3 = load %struct.VkInstance_T*, %struct.VkInstance_T** %2, align 8
  ret %struct.VkInstance_T* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(56) %"struct.dawn_native::vulkan::VulkanGlobalInfo"* @_ZNK11dawn_native6vulkan7Backend13GetGlobalInfoEv(%"class.dawn_native::vulkan::Backend"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %0, i64 0, i32 2
  ret %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Backend10LoadVulkanEb(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Backend"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.dawn::LogMessage", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 14, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @_ZL14kVulkanLibName, i64 0, i64 0), i64 14, i1 false) #13
  %13 = getelementptr inbounds i8, i8* %10, i64 14
  store i8 0, i8* %13, align 2
  %14 = call zeroext i1 @_ZN10DynamicLib4OpenERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib* %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* null) #13
  %15 = load i8, i8* %12, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %3, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  br i1 %14, label %21, label %23

21:                                               ; preds = %20
  %22 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %70

23:                                               ; preds = %20
  %24 = bitcast %"class.dawn::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %24) #13
  call void @_ZN4dawn10WarningLogEv(%"class.dawn::LogMessage"* nonnull sret %5) #13
  %25 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 14, i8* %28, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i64 14, i1 false) #13
  %29 = getelementptr inbounds i8, i8* %26, i64 14
  store i8 0, i8* %29, align 2
  %30 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZL14kVulkanLibName, i64 0, i64 0)) #13, !noalias !2
  %31 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %31, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #13, !noalias !2
  %32 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %5, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %32 to %"class.std::__1::basic_ostream"*
  %34 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %36 to i64
  %43 = select i1 %37, i8* %39, i8* %25
  %44 = select i1 %37, i64 %41, i64 %42
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* %43, i64 %44) #13
  %46 = load i8, i8* %35, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %23
  %49 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %23, %48
  %51 = load i8, i8* %28, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  call void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %24) #13
  %57 = xor i1 %2, true
  call void @llvm.assume(i1 %57)
  %58 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 20, i8* %59, align 1
  %60 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20, i1 false) #13
  %61 = getelementptr inbounds i8, i8* %60, i64 20
  store i8 0, i8* %61, align 4
  %62 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10LoadVulkanEb, i64 0, i64 0), i32 148) #13
  %63 = ptrtoint %"class.dawn_native::ErrorData"* %62 to i64
  %64 = bitcast %class.Result* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load i8, i8* %59, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %67, %56, %21
  ret void
}

declare zeroext i1 @_ZN10DynamicLib4OpenERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN4dawn10WarningLogEv(%"class.dawn::LogMessage"* sret) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"*) unnamed_addr #3

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Backend10InitializeEb(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Backend"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkDebugUtilsMessengerCreateInfoEXT, align 8
  %5 = alloca %class.Result, align 8
  %6 = alloca %class.ScopedEnvironmentVar, align 8
  %7 = alloca %class.ScopedEnvironmentVar, align 8
  %8 = alloca %"class.dawn::LogMessage", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %class.Result, align 8
  %13 = alloca %class.Result.92, align 8
  %14 = alloca %"struct.dawn_native::vulkan::VulkanGlobalKnobs", align 8
  %15 = alloca %class.Result.93, align 8
  %16 = alloca %class.Result, align 8
  %17 = alloca %class.Result, align 8
  %18 = alloca %class.Result.94, align 8
  %19 = bitcast %class.Result* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %class.Result, %class.Result* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %20, align 8
  call void @_ZN11dawn_native6vulkan7Backend10LoadVulkanEb(%class.Result* nonnull sret %5, %"class.dawn_native::vulkan::Backend"* %1, i1 zeroext %2)
  %21 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %20, align 8
  %22 = icmp eq %"class.dawn_native::ErrorData"* %21, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %20, align 8
  br i1 %22, label %26, label %23, !prof !5

23:                                               ; preds = %3
  %24 = ptrtoint %"class.dawn_native::ErrorData"* %21 to i64
  tail call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %21, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 152) #13
  %25 = bitcast %class.Result* %0 to i64*
  store i64 %24, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %391

26:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %27 = bitcast %class.ScopedEnvironmentVar* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %27) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 56, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 49, i1 false) #13
  %28 = bitcast %class.ScopedEnvironmentVar* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %28) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 56, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 49, i1 false) #13
  br i1 %2, label %29, label %34

29:                                               ; preds = %26
  %30 = bitcast %"class.dawn::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %30) #13
  call void @_ZN4dawn10WarningLogEv(%"class.dawn::LogMessage"* nonnull sret %8) #13
  %31 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %8, i64 0, i32 1
  %32 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i64 77) #13
  call void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %30) #13
  br label %34

34:                                               ; preds = %29, %26
  %35 = bitcast %"class.dawn_native::vulkan::Backend"* %1 to %"class.dawn_native::BackendConnection"*
  %36 = call %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"* %35) #13
  %37 = call zeroext i1 @_ZNK11dawn_native12InstanceBase26IsBackendValidationEnabledEv(%"class.dawn_native::InstanceBase"* %36) #13
  br i1 %37, label %38, label %87

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #13
  call void @_Z22GetExecutableDirectoryv(%"class.std::__1::basic_string"* nonnull sret %10) #13
  %43 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #13, !noalias !6
  %44 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %44, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #13, !noalias !6
  %45 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %38, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #13
  %53 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i8*, i8** %40, align 8
  %58 = select i1 %56, i8* %57, i8* %39
  %59 = call zeroext i1 @_ZN20ScopedEnvironmentVar3SetEPKcS1_(%class.ScopedEnvironmentVar* nonnull %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* %58) #13
  br i1 %59, label %81, label %60

60:                                               ; preds = %52
  %61 = call i8* @_Znwm(i64 32) #14
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast i64* %63 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %64, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i64 26, i1 false) #13
  %65 = getelementptr inbounds i8, i8* %61, i64 26
  store i8 0, i8* %65, align 1
  %66 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 176) #13
  %67 = ptrtoint %"class.dawn_native::ErrorData"* %66 to i64
  %68 = bitcast %class.Result* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %60
  %74 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %60, %73
  %76 = load i8, i8* %54, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13
  br label %390

81:                                               ; preds = %52
  %82 = load i8, i8* %54, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %81, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13
  br label %87

87:                                               ; preds = %86, %34
  %88 = bitcast %class.Result* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13
  %89 = getelementptr inbounds %class.Result, %class.Result* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %89, align 8
  %90 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 4
  %91 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 1
  call void @_ZN11dawn_native6vulkan15VulkanFunctions15LoadGlobalProcsERK10DynamicLib(%class.Result* nonnull sret %12, %"struct.dawn_native::vulkan::VulkanFunctions"* %90, %class.DynamicLib* dereferenceable(8) %91) #13
  %92 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %89, align 8
  %93 = icmp eq %"class.dawn_native::ErrorData"* %92, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %89, align 8
  br i1 %93, label %120, label %94, !prof !5

94:                                               ; preds = %87
  %95 = ptrtoint %"class.dawn_native::ErrorData"* %92 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %92, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 184) #13
  %96 = bitcast %class.Result* %0 to i64*
  store i64 %95, i64* %96, align 8
  %97 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %89, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %89, align 8
  %98 = icmp eq %"class.dawn_native::ErrorData"* %97, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %97, i64 0, i32 2, i32 0, i32 0
  %101 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %100, align 8
  %102 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %101 to i64
  %105 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %97, i64 0, i32 2, i32 0, i32 1
  %106 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %101 to i8*
  call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %103, %99
  %109 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %97, i64 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %114, %108
  %118 = bitcast %"class.dawn_native::ErrorData"* %97 to i8*
  call void @_ZdlPv(i8* %118) #14
  br label %119

119:                                              ; preds = %94, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  br label %390

120:                                              ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  %121 = bitcast %class.Result.92* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %121) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 72, i1 false)
  call void @_ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE(%class.Result.92* nonnull sret %13, %"class.dawn_native::vulkan::Backend"* dereferenceable(1536) %1) #13
  %122 = getelementptr inbounds %class.Result.92, %class.Result.92* %13, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 1
  store i32 2, i32* %122, align 8
  br i1 %124, label %125, label %153, !prof !9

125:                                              ; preds = %120
  %126 = getelementptr inbounds %class.Result.92, %class.Result.92* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %127 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %126, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %126, align 8
  %128 = ptrtoint %"class.dawn_native::ErrorData"* %127 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %127, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 186) #13
  %129 = bitcast %class.Result* %0 to i64*
  store i64 %128, i64* %129, align 8
  %130 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %126, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %126, align 8
  %131 = icmp eq %"class.dawn_native::ErrorData"* %130, null
  br i1 %131, label %152, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %130, i64 0, i32 2, i32 0, i32 0
  %134 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %133, align 8
  %135 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %134 to i64
  %138 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %130, i64 0, i32 2, i32 0, i32 1
  %139 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %134 to i8*
  call void @_ZdlPv(i8* %140) #14
  br label %141

141:                                              ; preds = %136, %132
  %142 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %130, i64 0, i32 1
  %143 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #14
  br label %150

150:                                              ; preds = %147, %141
  %151 = bitcast %"class.dawn_native::ErrorData"* %130 to i8*
  call void @_ZdlPv(i8* %151) #14
  br label %152

152:                                              ; preds = %125, %150
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %121) #13
  br label %390

153:                                              ; preds = %120
  %154 = getelementptr inbounds %class.Result.92, %class.Result.92* %13, i64 0, i32 2
  %155 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 2
  %156 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %155 to i8*
  %157 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 52, i1 false)
  %158 = getelementptr inbounds %class.Result.92, %class.Result.92* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %159 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %158, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %158, align 8
  %160 = icmp eq %"class.dawn_native::ErrorData"* %159, null
  br i1 %160, label %181, label %161

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %159, i64 0, i32 2, i32 0, i32 0
  %163 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %162, align 8
  %164 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %163 to i64
  %167 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %159, i64 0, i32 2, i32 0, i32 1
  %168 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %163 to i8*
  call void @_ZdlPv(i8* %169) #14
  br label %170

170:                                              ; preds = %165, %161
  %171 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %159, i64 0, i32 1
  %172 = bitcast %"class.std::__1::basic_string"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #14
  br label %179

179:                                              ; preds = %176, %170
  %180 = bitcast %"class.dawn_native::ErrorData"* %159 to i8*
  call void @_ZdlPv(i8* %180) #14
  br label %181

181:                                              ; preds = %153, %179
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %121) #13
  %182 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %182) #13
  %183 = bitcast %class.Result.93* %15 to i8*
  %184 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 0, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %183) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 64, i1 false)
  call void @_ZN11dawn_native6vulkan7Backend14CreateInstanceEv(%class.Result.93* nonnull sret %15, %"class.dawn_native::vulkan::Backend"* %1)
  %185 = getelementptr inbounds %class.Result.93, %class.Result.93* %15, i64 0, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = icmp eq i32 %186, 1
  store i32 2, i32* %185, align 8
  br i1 %187, label %188, label %193, !prof !9

188:                                              ; preds = %181
  %189 = getelementptr inbounds %class.Result.93, %class.Result.93* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %190 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %189, align 8
  %191 = ptrtoint %"class.dawn_native::ErrorData"* %190 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %190, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 189) #13
  %192 = bitcast %class.Result* %0 to i64*
  store i64 %191, i64* %192, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %183) #13
  br label %389

193:                                              ; preds = %181
  %194 = getelementptr inbounds %class.Result.93, %class.Result.93* %15, i64 0, i32 2
  %195 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %182, i8* align 8 %195, i64 48, i1 false)
  %196 = getelementptr inbounds %class.Result.93, %class.Result.93* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %196, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %196, align 8
  %198 = icmp eq %"class.dawn_native::ErrorData"* %197, null
  br i1 %198, label %219, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %197, i64 0, i32 2, i32 0, i32 0
  %201 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %200, align 8
  %202 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %199
  %204 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %201 to i64
  %205 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %197, i64 0, i32 2, i32 0, i32 1
  %206 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %205 to i64*
  store i64 %204, i64* %206, align 8
  %207 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %201 to i8*
  call void @_ZdlPv(i8* %207) #14
  br label %208

208:                                              ; preds = %203, %199
  %209 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %197, i64 0, i32 1
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #14
  br label %217

217:                                              ; preds = %214, %208
  %218 = bitcast %"class.dawn_native::ErrorData"* %197 to i8*
  call void @_ZdlPv(i8* %218) #14
  br label %219

219:                                              ; preds = %193, %217
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %183) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %182, i64 48, i1 false)
  %220 = bitcast %class.Result* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #13
  %221 = getelementptr inbounds %class.Result, %class.Result* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %221, align 8
  %222 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 3
  %223 = load %struct.VkInstance_T*, %struct.VkInstance_T** %222, align 8
  call void @_ZN11dawn_native6vulkan15VulkanFunctions17LoadInstanceProcsEP12VkInstance_TRKNS0_16VulkanGlobalInfoE(%class.Result* nonnull sret %16, %"struct.dawn_native::vulkan::VulkanFunctions"* %90, %struct.VkInstance_T* %223, %"struct.dawn_native::vulkan::VulkanGlobalInfo"* dereferenceable(56) %155) #13
  %224 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %221, align 8
  %225 = icmp eq %"class.dawn_native::ErrorData"* %224, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %221, align 8
  br i1 %225, label %252, label %226, !prof !5

226:                                              ; preds = %219
  %227 = ptrtoint %"class.dawn_native::ErrorData"* %224 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %224, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 192) #13
  %228 = bitcast %class.Result* %0 to i64*
  store i64 %227, i64* %228, align 8
  %229 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %221, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %221, align 8
  %230 = icmp eq %"class.dawn_native::ErrorData"* %229, null
  br i1 %230, label %251, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %229, i64 0, i32 2, i32 0, i32 0
  %233 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %232, align 8
  %234 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %233, null
  br i1 %234, label %240, label %235

235:                                              ; preds = %231
  %236 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %233 to i64
  %237 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %229, i64 0, i32 2, i32 0, i32 1
  %238 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %237 to i64*
  store i64 %236, i64* %238, align 8
  %239 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %233 to i8*
  call void @_ZdlPv(i8* %239) #14
  br label %240

240:                                              ; preds = %235, %231
  %241 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %229, i64 0, i32 1
  %242 = bitcast %"class.std::__1::basic_string"* %241 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %240
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  call void @_ZdlPv(i8* %248) #14
  br label %249

249:                                              ; preds = %246, %240
  %250 = bitcast %"class.dawn_native::ErrorData"* %229 to i8*
  call void @_ZdlPv(i8* %250) #14
  br label %251

251:                                              ; preds = %226, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #13
  br label %389

252:                                              ; preds = %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #13
  %253 = call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanGlobalKnobs6HasExtENS0_11InstanceExtE(%"struct.dawn_native::vulkan::VulkanGlobalKnobs"* nonnull %14, i32 10) #13
  br i1 %253, label %254, label %299

254:                                              ; preds = %252
  %255 = bitcast %class.Result* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #13
  %256 = getelementptr inbounds %class.Result, %class.Result* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %256, align 8
  %257 = bitcast %struct.VkDebugUtilsMessengerCreateInfoEXT* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %257) #13, !noalias !10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 -86, i64 32, i1 false) #13, !noalias !10
  %258 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %4, i64 0, i32 0
  store i32 1000128004, i32* %258, align 8, !noalias !10
  %259 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %4, i64 0, i32 1
  store i8* null, i8** %259, align 8, !noalias !10
  %260 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %4, i64 0, i32 2
  store i32 0, i32* %260, align 8, !noalias !10
  %261 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %4, i64 0, i32 3
  store i32 4352, i32* %261, align 4, !noalias !10
  %262 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %4, i64 0, i32 4
  store i32 3, i32* %262, align 8, !noalias !10
  %263 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %4, i64 0, i32 5
  store i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)* @_ZN11dawn_native6vulkan12_GLOBAL__N_120OnDebugUtilsCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)** %263, align 8, !noalias !10
  %264 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %4, i64 0, i32 6
  store i8* null, i8** %264, align 8, !noalias !10
  %265 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 4, i32 22
  %266 = load i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)** %265, align 8, !noalias !10
  %267 = load %struct.VkInstance_T*, %struct.VkInstance_T** %222, align 8, !noalias !10
  %268 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 5, i32 0
  %269 = call i32 %266(%struct.VkInstance_T* %267, %struct.VkDebugUtilsMessengerCreateInfoEXT* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkDebugUtilsMessengerEXT_T** %268) #13, !noalias !10
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result* nonnull sret %17, i32 %269, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0)) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %257) #13, !noalias !10
  %270 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %256, align 8
  %271 = icmp eq %"class.dawn_native::ErrorData"* %270, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %256, align 8
  br i1 %271, label %298, label %272, !prof !5

272:                                              ; preds = %254
  %273 = ptrtoint %"class.dawn_native::ErrorData"* %270 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %270, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 195) #13
  %274 = bitcast %class.Result* %0 to i64*
  store i64 %273, i64* %274, align 8
  %275 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %256, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %256, align 8
  %276 = icmp eq %"class.dawn_native::ErrorData"* %275, null
  br i1 %276, label %297, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %275, i64 0, i32 2, i32 0, i32 0
  %279 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %278, align 8
  %280 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %277
  %282 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %279 to i64
  %283 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %275, i64 0, i32 2, i32 0, i32 1
  %284 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %283 to i64*
  store i64 %282, i64* %284, align 8
  %285 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %279 to i8*
  call void @_ZdlPv(i8* %285) #14
  br label %286

286:                                              ; preds = %281, %277
  %287 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %275, i64 0, i32 1
  %288 = bitcast %"class.std::__1::basic_string"* %287 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %289 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %288, i64 0, i32 1, i32 0
  %290 = load i8, i8* %289, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %286
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %287, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  call void @_ZdlPv(i8* %294) #14
  br label %295

295:                                              ; preds = %292, %286
  %296 = bitcast %"class.dawn_native::ErrorData"* %275 to i8*
  call void @_ZdlPv(i8* %296) #14
  br label %297

297:                                              ; preds = %272, %295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #13
  br label %389

298:                                              ; preds = %254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #13
  br label %299

299:                                              ; preds = %298, %252
  %300 = bitcast %class.Result.94* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %300) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %300, i8 -86, i64 40, i1 false)
  call void @_ZN11dawn_native6vulkan18GetPhysicalDevicesERKNS0_7BackendE(%class.Result.94* nonnull sret %18, %"class.dawn_native::vulkan::Backend"* dereferenceable(1536) %1) #13
  %301 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = icmp eq i32 %302, 1
  store i32 2, i32* %301, align 8
  br i1 %303, label %304, label %341, !prof !9

304:                                              ; preds = %299
  %305 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %306 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %305, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %305, align 8
  %307 = ptrtoint %"class.dawn_native::ErrorData"* %306 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %306, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan7Backend10InitializeEb, i64 0, i64 0), i32 198) #13
  %308 = bitcast %class.Result* %0 to i64*
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 2, i32 0, i32 0
  %310 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %309, align 8
  %311 = icmp eq %struct.VkPhysicalDevice_T** %310, null
  br i1 %311, label %317, label %312

312:                                              ; preds = %304
  %313 = ptrtoint %struct.VkPhysicalDevice_T** %310 to i64
  %314 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 2, i32 0, i32 1
  %315 = bitcast %struct.VkPhysicalDevice_T*** %314 to i64*
  store i64 %313, i64* %315, align 8
  %316 = bitcast %struct.VkPhysicalDevice_T** %310 to i8*
  call void @_ZdlPv(i8* %316) #14
  br label %317

317:                                              ; preds = %312, %304
  %318 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %305, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %305, align 8
  %319 = icmp eq %"class.dawn_native::ErrorData"* %318, null
  br i1 %319, label %340, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %318, i64 0, i32 2, i32 0, i32 0
  %322 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %321, align 8
  %323 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %322, null
  br i1 %323, label %329, label %324

324:                                              ; preds = %320
  %325 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %322 to i64
  %326 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %318, i64 0, i32 2, i32 0, i32 1
  %327 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %326 to i64*
  store i64 %325, i64* %327, align 8
  %328 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %322 to i8*
  call void @_ZdlPv(i8* %328) #14
  br label %329

329:                                              ; preds = %324, %320
  %330 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %318, i64 0, i32 1
  %331 = bitcast %"class.std::__1::basic_string"* %330 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %329
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %330, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #14
  br label %338

338:                                              ; preds = %335, %329
  %339 = bitcast %"class.dawn_native::ErrorData"* %318 to i8*
  call void @_ZdlPv(i8* %339) #14
  br label %340

340:                                              ; preds = %317, %338
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %300) #13
  br label %389

341:                                              ; preds = %299
  %342 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 2
  %343 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 6
  %344 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %343, i64 0, i32 0, i32 0
  %345 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %344, align 8
  %346 = icmp eq %struct.VkPhysicalDevice_T** %345, null
  br i1 %346, label %353, label %347

347:                                              ; preds = %341
  %348 = ptrtoint %struct.VkPhysicalDevice_T** %345 to i64
  %349 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 6, i32 0, i32 1
  %350 = bitcast %struct.VkPhysicalDevice_T*** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = bitcast %struct.VkPhysicalDevice_T** %345 to i8*
  call void @_ZdlPv(i8* %351) #14
  %352 = bitcast %"class.std::__1::vector.72"* %343 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %352, i8 0, i64 24, i1 false) #13
  br label %353

353:                                              ; preds = %341, %347
  %354 = bitcast %"class.std::__1::vector.72"* %342 to <2 x i64>*
  %355 = load <2 x i64>, <2 x i64>* %354, align 8
  %356 = bitcast %"class.std::__1::vector.72"* %343 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %356, align 8
  %357 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %358 = bitcast %struct.VkPhysicalDevice_T*** %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %361 = bitcast %struct.VkPhysicalDevice_T*** %360 to i64*
  store i64 %359, i64* %361, align 8
  %362 = bitcast %"class.std::__1::vector.72"* %342 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %362, i8 0, i64 24, i1 false) #13
  %363 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %364 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %363, align 8
  %365 = bitcast %"class.dawn_native::ErrorData"* %364 to i8*
  %366 = getelementptr inbounds %class.Result.94, %class.Result.94* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %366, align 8
  %367 = icmp eq %"class.dawn_native::ErrorData"* %364, null
  br i1 %367, label %387, label %368

368:                                              ; preds = %353
  %369 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %364, i64 0, i32 2, i32 0, i32 0
  %370 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %369, align 8
  %371 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %370, null
  br i1 %371, label %377, label %372

372:                                              ; preds = %368
  %373 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %370 to i64
  %374 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %364, i64 0, i32 2, i32 0, i32 1
  %375 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %374 to i64*
  store i64 %373, i64* %375, align 8
  %376 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %370 to i8*
  call void @_ZdlPv(i8* %376) #14
  br label %377

377:                                              ; preds = %372, %368
  %378 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %364, i64 0, i32 1
  %379 = bitcast %"class.std::__1::basic_string"* %378 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %380 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %379, i64 0, i32 1, i32 0
  %381 = load i8, i8* %380, align 1
  %382 = icmp slt i8 %381, 0
  br i1 %382, label %383, label %386

383:                                              ; preds = %377
  %384 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %378, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  call void @_ZdlPv(i8* %385) #14
  br label %386

386:                                              ; preds = %383, %377
  call void @_ZdlPv(i8* %365) #14
  br label %387

387:                                              ; preds = %353, %386
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %300) #13
  %388 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %388, align 8
  br label %389

389:                                              ; preds = %340, %297, %251, %188, %387
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %182) #13
  br label %390

390:                                              ; preds = %152, %119, %80, %389
  call void @_ZN20ScopedEnvironmentVarD1Ev(%class.ScopedEnvironmentVar* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %28) #13
  call void @_ZN20ScopedEnvironmentVarD1Ev(%class.ScopedEnvironmentVar* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %27) #13
  br label %391

391:                                              ; preds = %23, %390
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #1

declare %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native12InstanceBase26IsBackendValidationEnabledEv(%"class.dawn_native::InstanceBase"*) local_unnamed_addr #1

declare void @_Z22GetExecutableDirectoryv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #1

declare zeroext i1 @_ZN20ScopedEnvironmentVar3SetEPKcS1_(%class.ScopedEnvironmentVar*, i8*, i8*) local_unnamed_addr #1

declare void @_ZN11dawn_native6vulkan15VulkanFunctions15LoadGlobalProcsERK10DynamicLib(%class.Result* sret, %"struct.dawn_native::vulkan::VulkanFunctions"*, %class.DynamicLib* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE(%class.Result.92* sret, %"class.dawn_native::vulkan::Backend"* dereferenceable(1536)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Backend14CreateInstanceEv(%class.Result.93* noalias nocapture sret, %"class.dawn_native::vulkan::Backend"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__bit_iterator", align 8
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"struct.dawn_native::vulkan::VulkanGlobalKnobs", align 8
  %12 = alloca %"class.std::__1::vector.132", align 8
  %13 = alloca %"class.std::__1::vector.132", align 8
  %14 = alloca %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator", align 8
  %15 = alloca %struct.VkApplicationInfo, align 8
  %16 = alloca %struct.VkInstanceCreateInfo, align 8
  %17 = alloca %struct.VkDebugUtilsMessengerCreateInfoEXT, align 8
  %18 = alloca %struct.VkValidationFeaturesEXT, align 8
  %19 = alloca i32, align 4
  %20 = alloca %class.Result, align 8
  %21 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalKnobs", %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalKnobs", %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::vector.132"* %12 to i8*
  %25 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %26 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %12, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %12, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #13
  %29 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.dawn_native::vulkan::Backend"* %1 to %"class.dawn_native::BackendConnection"*
  %32 = tail call %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"* %31) #13
  %33 = tail call zeroext i1 @_ZNK11dawn_native12InstanceBase26IsBackendValidationEnabledEv(%"class.dawn_native::InstanceBase"* %32) #13
  br i1 %33, label %34, label %57

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %57, label %39

39:                                               ; preds = %34
  %40 = tail call dereferenceable(16) %"struct.dawn_native::vulkan::VulkanLayerInfo"* @_ZN11dawn_native6vulkan18GetVulkanLayerInfoENS0_11VulkanLayerE(i32 0) #13
  %41 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanLayerInfo", %"struct.dawn_native::vulkan::VulkanLayerInfo"* %40, i64 0, i32 1
  %42 = bitcast i8*** %27 to i64*
  %43 = bitcast %"class.std::__1::vector.132"* %12 to i64*
  %44 = bitcast i8*** %28 to i64*
  %45 = tail call i8* @_Znwm(i64 8) #14
  %46 = bitcast i8* %45 to i8**
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i8**
  %49 = ptrtoint i8* %47 to i64
  %50 = bitcast i8** %41 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8* %45 to i64*
  store i64 %51, i64* %52, align 8
  %53 = ptrtoint i8* %45 to i64
  store i64 %53, i64* %43, align 8
  store i64 %49, i64* %42, align 8
  store i64 %49, i64* %44, align 8
  %54 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  store i64 1, i64* %22, align 8
  %56 = or i64 %55, %30
  br label %57

57:                                               ; preds = %39, %34, %2
  %58 = phi i64 [ 8, %2 ], [ 8, %34 ], [ 9, %39 ]
  %59 = phi i64 [ 0, %2 ], [ 0, %34 ], [ %49, %39 ]
  %60 = phi i8* [ null, %2 ], [ null, %34 ], [ %45, %39 ]
  %61 = phi i8** [ null, %2 ], [ null, %34 ], [ %46, %39 ]
  %62 = phi i64 [ 0, %2 ], [ 0, %34 ], [ %53, %39 ]
  %63 = phi i8** [ null, %2 ], [ null, %34 ], [ %48, %39 ]
  %64 = phi i64 [ %30, %2 ], [ %30, %34 ], [ %56, %39 ]
  %65 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %124, label %69

69:                                               ; preds = %57
  %70 = tail call dereferenceable(16) %"struct.dawn_native::vulkan::VulkanLayerInfo"* @_ZN11dawn_native6vulkan18GetVulkanLayerInfoENS0_11VulkanLayerE(i32 3) #13
  %71 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanLayerInfo", %"struct.dawn_native::vulkan::VulkanLayerInfo"* %70, i64 0, i32 1
  %72 = ptrtoint i8** %63 to i64
  %73 = bitcast i8*** %27 to i64*
  %74 = bitcast %"class.std::__1::vector.132"* %12 to i64*
  %75 = sub i64 %72, %62
  %76 = ashr exact i64 %75, 3
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %69
  %80 = bitcast %"class.std::__1::vector.132"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %80) #15
  unreachable

81:                                               ; preds = %69
  %82 = bitcast i8*** %28 to i64*
  %83 = icmp ult i64 %76, 1152921504606846975
  br i1 %83, label %84, label %92

84:                                               ; preds = %81
  %85 = ashr exact i64 %75, 2
  %86 = icmp ult i64 %85, %77
  %87 = select i1 %86, i64 %77, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 2305843009213693951
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call void @abort() #15
  unreachable

92:                                               ; preds = %89, %81
  %93 = phi i64 [ %87, %89 ], [ 2305843009213693951, %81 ]
  %94 = shl i64 %93, 3
  %95 = tail call i8* @_Znwm(i64 %94) #14
  %96 = bitcast i8* %95 to i8**
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi i8** [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds i8*, i8** %99, i64 %76
  %101 = getelementptr inbounds i8*, i8** %99, i64 %98
  %102 = ptrtoint i8** %101 to i64
  %103 = bitcast i8** %71 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i8** %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i8*, i8** %100, i64 1
  %107 = ptrtoint i8** %106 to i64
  %108 = ptrtoint i8** %61 to i64
  %109 = sub i64 %59, %108
  %110 = ashr exact i64 %109, 3
  %111 = sub nsw i64 0, %110
  %112 = getelementptr inbounds i8*, i8** %100, i64 %111
  %113 = ptrtoint i8** %112 to i64
  %114 = icmp sgt i64 %109, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %97
  %116 = bitcast i8** %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %60, i64 %109, i1 false) #13
  br label %117

117:                                              ; preds = %115, %97
  store i64 %113, i64* %74, align 8
  store i64 %107, i64* %73, align 8
  store i64 %102, i64* %82, align 8
  %118 = icmp eq i8** %61, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %117
  tail call void @_ZdlPv(i8* %60) #14
  br label %120

120:                                              ; preds = %117, %119
  store i64 %58, i64* %22, align 8
  %121 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = or i64 %122, %64
  br label %124

124:                                              ; preds = %57, %120
  %125 = phi i64 [ %64, %57 ], [ %123, %120 ]
  store i64 %125, i64* %23, align 8
  %126 = bitcast %"class.std::__1::vector.132"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %13, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %13, i64 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 24, i1 false) #13
  %130 = bitcast %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #13
  %131 = getelementptr inbounds %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator", %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator"* %14, i64 0, i32 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator", %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator"* %14, i64 0, i32 1
  %133 = getelementptr inbounds %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator", %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator"* %14, i64 0, i32 2
  store i64 %125, i64* %131, align 8, !alias.scope !13
  %134 = bitcast i64* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #13, !alias.scope !13
  %135 = and i64 %125, 4095
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %170, label %137

137:                                              ; preds = %124
  %138 = ptrtoint %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator"* %14 to i64
  %139 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %140 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %141 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %142 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %143 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  %144 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  %145 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %146 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %147 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %148 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  br label %149

149:                                              ; preds = %161, %137
  %150 = phi i64 [ %125, %137 ], [ %163, %161 ]
  %151 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm12EN11dawn_native6vulkan11InstanceExtEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %152 = and i64 %151, %150
  %153 = and i64 %152, 4294967295
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %161, label %155

155:                                              ; preds = %149
  %156 = trunc i64 %152 to i32
  %157 = call i32 @_Z11ScanForwardj(i32 %156) #13
  %158 = zext i32 %157 to i64
  %159 = load i64, i64* %133, align 8, !alias.scope !13
  %160 = add i64 %159, %158
  br label %167

161:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #13, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #13, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #13, !noalias !13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #13, !noalias !13
  store i64 %138, i64* %143, align 8, !noalias !16
  store i32 12, i32* %144, align 8, !noalias !16
  store i64 %138, i64* %145, align 8, !noalias !16
  store i32 12, i32* %146, align 8, !noalias !16
  store i64 %138, i64* %147, align 8, !noalias !16
  store i32 0, i32* %148, align 8, !noalias !16
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %10, %"class.std::__1::__bit_iterator"* nonnull %7, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #13, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #13, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #13, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #13, !noalias !13
  %162 = load i64, i64* %131, align 8, !alias.scope !13
  %163 = and i64 %162, -4096
  store i64 %163, i64* %131, align 8, !alias.scope !13
  %164 = load i64, i64* %133, align 8, !alias.scope !13
  %165 = add i64 %164, 32
  store i64 %165, i64* %133, align 8, !alias.scope !13
  %166 = icmp ult i64 %165, 12
  br i1 %166, label %149, label %167

167:                                              ; preds = %161, %155
  %168 = phi i64 [ %159, %155 ], [ %165, %161 ]
  %169 = phi i64 [ %160, %155 ], [ 0, %161 ]
  store i64 %169, i64* %132, align 8, !alias.scope !13
  br label %172

170:                                              ; preds = %124
  store i64 32, i64* %133, align 8, !alias.scope !13
  %171 = ptrtoint %"class.BitSetIterator<12, dawn_native::vulkan::InstanceExt>::Iterator"* %14 to i64
  br label %172

172:                                              ; preds = %167, %170
  %173 = phi i64 [ %138, %167 ], [ %171, %170 ]
  %174 = phi i64 [ %169, %167 ], [ 0, %170 ]
  %175 = phi i64 [ %168, %167 ], [ 32, %170 ]
  %176 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 2, i32 1
  %177 = bitcast i8*** %128 to i64*
  %178 = bitcast %"class.std::__1::vector.132"* %13 to i64*
  %179 = bitcast i8*** %129 to i64*
  %180 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %181 = bitcast %"class.std::__1::__bit_iterator"* %3 to i8*
  %182 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %183 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %184 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %185 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %186 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %187 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %188 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  br label %190

190:                                              ; preds = %293, %172
  %191 = phi i64 [ %295, %293 ], [ %174, %172 ]
  %192 = phi i64 [ %294, %293 ], [ %175, %172 ]
  %193 = icmp eq i64 %192, 32
  br i1 %193, label %194, label %198

194:                                              ; preds = %190
  %195 = load i64, i64* %131, align 8
  %196 = and i64 %195, 4095
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %296, label %198

198:                                              ; preds = %194, %190
  %199 = trunc i64 %191 to i32
  %200 = call dereferenceable(24) %"struct.dawn_native::vulkan::InstanceExtInfo"* @_ZN11dawn_native6vulkan18GetInstanceExtInfoENS0_11InstanceExtE(i32 %199) #13
  %201 = getelementptr inbounds %"struct.dawn_native::vulkan::InstanceExtInfo", %"struct.dawn_native::vulkan::InstanceExtInfo"* %200, i64 0, i32 2
  %202 = load i32, i32* %201, align 8
  %203 = load i32, i32* %176, align 8
  %204 = icmp ugt i32 %202, %203
  br i1 %204, label %205, label %263

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"struct.dawn_native::vulkan::InstanceExtInfo", %"struct.dawn_native::vulkan::InstanceExtInfo"* %200, i64 0, i32 1
  %207 = load i8**, i8*** %128, align 8
  %208 = load i8**, i8*** %129, align 8
  %209 = icmp eq i8** %207, %208
  %210 = ptrtoint i8** %208 to i64
  br i1 %209, label %217, label %211

211:                                              ; preds = %205
  %212 = bitcast i8** %206 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast i8** %207 to i64*
  store i64 %213, i64* %214, align 8
  %215 = getelementptr inbounds i8*, i8** %207, i64 1
  %216 = ptrtoint i8** %215 to i64
  store i64 %216, i64* %177, align 8
  br label %263

217:                                              ; preds = %205
  %218 = ptrtoint i8** %207 to i64
  %219 = load i64, i64* %178, align 8
  %220 = sub i64 %218, %219
  %221 = ashr exact i64 %220, 3
  %222 = add nsw i64 %221, 1
  %223 = icmp ugt i64 %222, 2305843009213693951
  br i1 %223, label %224, label %226

224:                                              ; preds = %217
  %225 = bitcast %"class.std::__1::vector.132"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %225) #15
  unreachable

226:                                              ; preds = %217
  %227 = sub i64 %210, %219
  %228 = ashr exact i64 %227, 3
  %229 = icmp ult i64 %228, 1152921504606846975
  br i1 %229, label %230, label %238

230:                                              ; preds = %226
  %231 = ashr exact i64 %227, 2
  %232 = icmp ult i64 %231, %222
  %233 = select i1 %232, i64 %222, i64 %231
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %243, label %235

235:                                              ; preds = %230
  %236 = icmp ugt i64 %233, 2305843009213693951
  br i1 %236, label %237, label %238

237:                                              ; preds = %235
  call void @abort() #15
  unreachable

238:                                              ; preds = %235, %226
  %239 = phi i64 [ %233, %235 ], [ 2305843009213693951, %226 ]
  %240 = shl i64 %239, 3
  %241 = call i8* @_Znwm(i64 %240) #14
  %242 = bitcast i8* %241 to i8**
  br label %243

243:                                              ; preds = %238, %230
  %244 = phi i64 [ %239, %238 ], [ 0, %230 ]
  %245 = phi i8* [ %241, %238 ], [ null, %230 ]
  %246 = phi i8** [ %242, %238 ], [ null, %230 ]
  %247 = getelementptr inbounds i8*, i8** %246, i64 %221
  %248 = getelementptr inbounds i8*, i8** %246, i64 %244
  %249 = ptrtoint i8** %248 to i64
  %250 = bitcast i8** %206 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast i8** %247 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds i8*, i8** %247, i64 1
  %254 = ptrtoint i8** %253 to i64
  %255 = ptrtoint i8** %246 to i64
  %256 = icmp sgt i64 %220, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %243
  %258 = inttoptr i64 %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %258, i64 %220, i1 false) #13
  br label %259

259:                                              ; preds = %257, %243
  store i64 %255, i64* %178, align 8
  store i64 %254, i64* %177, align 8
  store i64 %249, i64* %179, align 8
  %260 = icmp eq i64 %219, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %259
  %262 = inttoptr i64 %219 to i8*
  call void @_ZdlPv(i8* %262) #14
  br label %263

263:                                              ; preds = %261, %259, %211, %198
  %264 = load i64, i64* %132, align 8
  %265 = load i64, i64* %133, align 8
  %266 = sub i64 %264, %265
  %267 = icmp ugt i64 %266, 11
  br i1 %267, label %268, label %269

268:                                              ; preds = %263
  call void @abort() #15
  unreachable

269:                                              ; preds = %263
  %270 = shl i64 1, %266
  %271 = xor i64 %270, -1
  %272 = load i64, i64* %131, align 8
  %273 = and i64 %272, %271
  store i64 %273, i64* %131, align 8
  %274 = icmp ult i64 %265, 12
  br i1 %274, label %275, label %293

275:                                              ; preds = %269, %287
  %276 = phi i64 [ %289, %287 ], [ %273, %269 ]
  %277 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm12EN11dawn_native6vulkan11InstanceExtEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %278 = and i64 %277, %276
  %279 = and i64 %278, 4294967295
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %287, label %281

281:                                              ; preds = %275
  %282 = trunc i64 %278 to i32
  %283 = call i32 @_Z11ScanForwardj(i32 %282) #13
  %284 = zext i32 %283 to i64
  %285 = load i64, i64* %133, align 8
  %286 = add i64 %285, %284
  br label %293

287:                                              ; preds = %275
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %181) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183) #13
  store i64 %173, i64* %184, align 8, !noalias !19
  store i32 12, i32* %185, align 8, !noalias !19
  store i64 %173, i64* %186, align 8, !noalias !19
  store i32 12, i32* %187, align 8, !noalias !19
  store i64 %173, i64* %188, align 8, !noalias !19
  store i32 0, i32* %189, align 8, !noalias !19
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %6, %"class.std::__1::__bit_iterator"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %181) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180) #13
  %288 = load i64, i64* %131, align 8
  %289 = and i64 %288, -4096
  store i64 %289, i64* %131, align 8
  %290 = load i64, i64* %133, align 8
  %291 = add i64 %290, 32
  store i64 %291, i64* %133, align 8
  %292 = icmp ult i64 %291, 12
  br i1 %292, label %275, label %293

293:                                              ; preds = %287, %269, %281
  %294 = phi i64 [ %285, %281 ], [ %265, %269 ], [ %291, %287 ]
  %295 = phi i64 [ %286, %281 ], [ 0, %269 ], [ 0, %287 ]
  store i64 %295, i64* %132, align 8
  br label %190

296:                                              ; preds = %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #13
  %297 = bitcast %struct.VkApplicationInfo* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %297) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 -86, i64 32, i1 false)
  %298 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %15, i64 0, i32 0
  store i32 0, i32* %298, align 8
  %299 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %15, i64 0, i32 1
  %300 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %15, i64 0, i32 4
  store i8* null, i8** %300, align 8
  %301 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %15, i64 0, i32 5
  store i32 0, i32* %301, align 8
  %302 = bitcast i8** %299 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %302, i8 0, i64 20, i1 false)
  %303 = load i32, i32* %176, align 8
  %304 = icmp eq i32 %303, 4194304
  %305 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %15, i64 0, i32 6
  %306 = select i1 %304, i32 4194304, i32 4202496
  store i32 %306, i32* %305, align 4
  %307 = bitcast %struct.VkInstanceCreateInfo* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %307) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %307, i8 -86, i64 56, i1 false)
  %308 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 0
  store i32 1, i32* %308, align 8
  %309 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 1
  store i8* null, i8** %309, align 8
  %310 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 2
  store i32 0, i32* %310, align 8
  %311 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 3
  store %struct.VkApplicationInfo* %15, %struct.VkApplicationInfo** %311, align 8
  %312 = bitcast i8*** %27 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.std::__1::vector.132"* %12 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = lshr exact i64 %316, 3
  %318 = trunc i64 %317 to i32
  %319 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 4
  store i32 %318, i32* %319, align 8
  %320 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 5
  %321 = bitcast i8*** %320 to i64*
  store i64 %315, i64* %321, align 8
  %322 = load i64, i64* %177, align 8
  %323 = load i64, i64* %178, align 8
  %324 = sub i64 %322, %323
  %325 = lshr exact i64 %324, 3
  %326 = trunc i64 %325 to i32
  %327 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 6
  store i32 %326, i32* %327, align 8
  %328 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 7
  %329 = bitcast i8*** %328 to i64*
  store i64 %323, i64* %329, align 8
  %330 = ptrtoint %struct.VkInstanceCreateInfo* %16 to i64
  %331 = bitcast %struct.VkDebugUtilsMessengerCreateInfoEXT* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %331) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %331, i8 -86, i64 48, i1 false)
  %332 = call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanGlobalKnobs6HasExtENS0_11InstanceExtE(%"struct.dawn_native::vulkan::VulkanGlobalKnobs"* nonnull %11, i32 10) #13
  br i1 %332, label %333, label %344

333:                                              ; preds = %296
  %334 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, i64 0, i32 2
  store i32 0, i32* %334, align 8
  %335 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, i64 0, i32 3
  store i32 4352, i32* %335, align 4
  %336 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, i64 0, i32 4
  store i32 3, i32* %336, align 8
  %337 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, i64 0, i32 5
  store i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)* @_ZN11dawn_native6vulkan12_GLOBAL__N_136OnInstanceCreationDebugUtilsCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)** %337, align 8
  %338 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, i64 0, i32 6
  store i8* null, i8** %338, align 8
  %339 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, i64 0, i32 0
  store i32 1000128004, i32* %339, align 8
  %340 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, i64 0, i32 1
  store i8* null, i8** %340, align 8
  %341 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %16, i64 0, i32 1
  %342 = bitcast i8** %341 to %struct.VkDebugUtilsMessengerCreateInfoEXT**
  store %struct.VkDebugUtilsMessengerCreateInfoEXT* %17, %struct.VkDebugUtilsMessengerCreateInfoEXT** %342, align 8
  %343 = ptrtoint %struct.VkDebugUtilsMessengerCreateInfoEXT* %17 to i64
  br label %344

344:                                              ; preds = %333, %296
  %345 = phi i64 [ %343, %333 ], [ %330, %296 ]
  %346 = bitcast %struct.VkValidationFeaturesEXT* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %346) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %346, i8 -86, i64 48, i1 false)
  %347 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %347) #13
  store i32 4, i32* %19, align 4
  %348 = call %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"* %31) #13
  %349 = call zeroext i1 @_ZNK11dawn_native12InstanceBase26IsBackendValidationEnabledEv(%"class.dawn_native::InstanceBase"* %348) #13
  br i1 %349, label %350, label %362

350:                                              ; preds = %344
  %351 = call zeroext i1 @_ZNK11dawn_native6vulkan17VulkanGlobalKnobs6HasExtENS0_11InstanceExtE(%"struct.dawn_native::vulkan::VulkanGlobalKnobs"* nonnull %11, i32 11) #13
  br i1 %351, label %352, label %362

352:                                              ; preds = %350
  %353 = getelementptr inbounds %struct.VkValidationFeaturesEXT, %struct.VkValidationFeaturesEXT* %18, i64 0, i32 2
  store i32 1, i32* %353, align 8
  %354 = getelementptr inbounds %struct.VkValidationFeaturesEXT, %struct.VkValidationFeaturesEXT* %18, i64 0, i32 3
  store i32* %19, i32** %354, align 8
  %355 = getelementptr inbounds %struct.VkValidationFeaturesEXT, %struct.VkValidationFeaturesEXT* %18, i64 0, i32 4
  store i32 0, i32* %355, align 8
  %356 = getelementptr inbounds %struct.VkValidationFeaturesEXT, %struct.VkValidationFeaturesEXT* %18, i64 0, i32 5
  store i32* null, i32** %356, align 8
  %357 = getelementptr inbounds %struct.VkValidationFeaturesEXT, %struct.VkValidationFeaturesEXT* %18, i64 0, i32 0
  store i32 1000247000, i32* %357, align 8
  %358 = getelementptr inbounds %struct.VkValidationFeaturesEXT, %struct.VkValidationFeaturesEXT* %18, i64 0, i32 1
  store i8* null, i8** %358, align 8
  %359 = inttoptr i64 %345 to %struct.VkBaseOutStructure*
  %360 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %359, i64 0, i32 1
  %361 = bitcast %struct.VkBaseOutStructure** %360 to %struct.VkValidationFeaturesEXT**
  store %struct.VkValidationFeaturesEXT* %18, %struct.VkValidationFeaturesEXT** %361, align 8
  br label %362

362:                                              ; preds = %352, %350, %344
  %363 = bitcast %class.Result* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363) #13
  %364 = getelementptr inbounds %class.Result, %class.Result* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %364, align 8
  %365 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 4, i32 1
  %366 = load i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)** %365, align 8
  %367 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 3
  %368 = call i32 %366(%struct.VkInstanceCreateInfo* nonnull %16, %struct.VkAllocationCallbacks* null, %struct.VkInstance_T** %367) #13
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result* nonnull sret %20, i32 %368, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #13
  %369 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %364, align 8
  %370 = icmp eq %"class.dawn_native::ErrorData"* %369, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %364, align 8
  br i1 %370, label %401, label %371, !prof !5

371:                                              ; preds = %362
  %372 = ptrtoint %"class.dawn_native::ErrorData"* %369 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %369, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__._ZN11dawn_native6vulkan7Backend14CreateInstanceEv, i64 0, i64 0), i32 330) #13
  %373 = getelementptr inbounds %class.Result.93, %class.Result.93* %0, i64 0, i32 0
  store i32 1, i32* %373, align 8
  %374 = getelementptr inbounds %class.Result.93, %class.Result.93* %0, i64 0, i32 1
  %375 = bitcast %"class.std::__1::unique_ptr.79"* %374 to i64*
  store i64 %372, i64* %375, align 8
  %376 = getelementptr inbounds %class.Result.93, %class.Result.93* %0, i64 0, i32 2
  %377 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %376 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %377, i8 0, i64 48, i1 false) #13
  %378 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %364, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %364, align 8
  %379 = icmp eq %"class.dawn_native::ErrorData"* %378, null
  br i1 %379, label %400, label %380

380:                                              ; preds = %371
  %381 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %378, i64 0, i32 2, i32 0, i32 0
  %382 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %381, align 8
  %383 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %382, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %380
  %385 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %382 to i64
  %386 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %378, i64 0, i32 2, i32 0, i32 1
  %387 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %386 to i64*
  store i64 %385, i64* %387, align 8
  %388 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %382 to i8*
  call void @_ZdlPv(i8* %388) #14
  br label %389

389:                                              ; preds = %384, %380
  %390 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %378, i64 0, i32 1
  %391 = bitcast %"class.std::__1::basic_string"* %390 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %392 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %391, i64 0, i32 1, i32 0
  %393 = load i8, i8* %392, align 1
  %394 = icmp slt i8 %393, 0
  br i1 %394, label %395, label %398

395:                                              ; preds = %389
  %396 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %390, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load i8*, i8** %396, align 8
  call void @_ZdlPv(i8* %397) #14
  br label %398

398:                                              ; preds = %395, %389
  %399 = bitcast %"class.dawn_native::ErrorData"* %378 to i8*
  call void @_ZdlPv(i8* %399) #14
  br label %400

400:                                              ; preds = %371, %398
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #13
  br label %407

401:                                              ; preds = %362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #13
  %402 = getelementptr inbounds %class.Result.93, %class.Result.93* %0, i64 0, i32 0
  store i32 0, i32* %402, align 8
  %403 = getelementptr inbounds %class.Result.93, %class.Result.93* %0, i64 0, i32 1
  %404 = bitcast %"class.std::__1::unique_ptr.79"* %403 to i64*
  store i64 0, i64* %404, align 8
  %405 = getelementptr inbounds %class.Result.93, %class.Result.93* %0, i64 0, i32 2
  %406 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %406, i8* nonnull align 8 %21, i64 48, i1 false) #13
  br label %407

407:                                              ; preds = %400, %401
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %347) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %346) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %331) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %307) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %297) #13
  %408 = load i8**, i8*** %127, align 8
  %409 = icmp eq i8** %408, null
  br i1 %409, label %413, label %410

410:                                              ; preds = %407
  %411 = ptrtoint i8** %408 to i64
  store i64 %411, i64* %177, align 8
  %412 = bitcast i8** %408 to i8*
  call void @_ZdlPv(i8* %412) #14
  br label %413

413:                                              ; preds = %407, %410
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  %414 = load i8**, i8*** %26, align 8
  %415 = icmp eq i8** %414, null
  br i1 %415, label %419, label %416

416:                                              ; preds = %413
  %417 = ptrtoint i8** %414 to i64
  store i64 %417, i64* %312, align 8
  %418 = bitcast i8** %414 to i8*
  call void @_ZdlPv(i8* %418) #14
  br label %419

419:                                              ; preds = %413, %416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #13
  ret void
}

declare void @_ZN11dawn_native6vulkan15VulkanFunctions17LoadInstanceProcsEP12VkInstance_TRKNS0_16VulkanGlobalInfoE(%class.Result* sret, %"struct.dawn_native::vulkan::VulkanFunctions"*, %struct.VkInstance_T*, %"struct.dawn_native::vulkan::VulkanGlobalInfo"* dereferenceable(56)) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6vulkan17VulkanGlobalKnobs6HasExtENS0_11InstanceExtE(%"struct.dawn_native::vulkan::VulkanGlobalKnobs"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Backend18RegisterDebugUtilsEv(%class.Result* noalias sret, %"class.dawn_native::vulkan::Backend"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkDebugUtilsMessengerCreateInfoEXT, align 8
  %4 = bitcast %struct.VkDebugUtilsMessengerCreateInfoEXT* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %3, i64 0, i32 0
  store i32 1000128004, i32* %5, align 8
  %6 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %3, i64 0, i32 1
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %3, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %3, i64 0, i32 3
  store i32 4352, i32* %8, align 4
  %9 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %3, i64 0, i32 4
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %3, i64 0, i32 5
  store i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)* @_ZN11dawn_native6vulkan12_GLOBAL__N_120OnDebugUtilsCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)** %10, align 8
  %11 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %3, i64 0, i32 6
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 4, i32 22
  %13 = load i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)** %12, align 8
  %14 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 3
  %15 = load %struct.VkInstance_T*, %struct.VkInstance_T** %14, align 8
  %16 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 5, i32 0
  %17 = call i32 %13(%struct.VkInstance_T* %15, %struct.VkDebugUtilsMessengerCreateInfoEXT* nonnull %3, %struct.VkAllocationCallbacks* null, %struct.VkDebugUtilsMessengerEXT_T** %16) #13
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result* sret %0, i32 %17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0)) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #13
  ret void
}

declare void @_ZN11dawn_native6vulkan18GetPhysicalDevicesERKNS0_7BackendE(%class.Result.94* sret, %"class.dawn_native::vulkan::Backend"* dereferenceable(1536)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20ScopedEnvironmentVarD1Ev(%class.ScopedEnvironmentVar*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan7Backend23DiscoverDefaultAdaptersEv(%"class.std::__1::vector.2"* noalias sret, %"class.dawn_native::vulkan::Backend"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.Result, align 8
  %4 = alloca %"class.std::__1::unique_ptr.4", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.2"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 6, i32 0, i32 0
  %9 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %8, align 8
  %10 = getelementptr inbounds %"class.dawn_native::vulkan::Backend", %"class.dawn_native::vulkan::Backend"* %1, i64 0, i32 6, i32 0, i32 1
  %11 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %10, align 8
  %12 = icmp eq %struct.VkPhysicalDevice_T** %9, %11
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.dawn_native::vulkan::Backend"* %1 to %"class.dawn_native::BackendConnection"*
  %15 = getelementptr inbounds %class.Result, %class.Result* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4"* %4 to i8*
  %17 = bitcast %"class.std::__1::unique_ptr.4"* %4 to i64*
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.4"** %5 to i64*
  br label %21

20:                                               ; preds = %75, %2
  ret void

21:                                               ; preds = %13, %75
  %22 = phi %struct.VkPhysicalDevice_T** [ %9, %13 ], [ %76, %75 ]
  %23 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %22, align 8
  %24 = call i8* @_Znwm(i64 1912) #14
  %25 = bitcast i8* %24 to %"class.dawn_native::vulkan::Adapter"*
  call void @_ZN11dawn_native6vulkan7AdapterC1EPNS0_7BackendEP18VkPhysicalDevice_T(%"class.dawn_native::vulkan::Adapter"* nonnull %25, %"class.dawn_native::vulkan::Backend"* %1, %struct.VkPhysicalDevice_T* %23) #13
  %26 = ptrtoint i8* %24 to i64
  %27 = call %"class.dawn_native::InstanceBase"* @_ZNK11dawn_native17BackendConnection11GetInstanceEv(%"class.dawn_native::BackendConnection"* %14) #13
  call void @_ZN11dawn_native6vulkan7Adapter10InitializeEv(%class.Result* nonnull sret %3, %"class.dawn_native::vulkan::Adapter"* nonnull %25) #13
  %28 = call zeroext i1 @_ZN11dawn_native12InstanceBase13ConsumedErrorE6ResultIvNS_9ErrorDataEE(%"class.dawn_native::InstanceBase"* %27, %class.Result* nonnull %3) #13
  %29 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %15, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %15, align 8
  %30 = icmp eq %"class.dawn_native::ErrorData"* %29, null
  br i1 %30, label %51, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %29, i64 0, i32 2, i32 0, i32 0
  %33 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %32, align 8
  %34 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %33 to i64
  %37 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %29, i64 0, i32 2, i32 0, i32 1
  %38 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %33 to i8*
  call void @_ZdlPv(i8* %39) #14
  br label %40

40:                                               ; preds = %35, %31
  %41 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %29, i64 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %46, %40
  %50 = bitcast %"class.dawn_native::ErrorData"* %29 to i8*
  call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %21, %49
  br i1 %28, label %70, label %52

52:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store i64 %26, i64* %17, align 8
  %53 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %5, align 8
  %54 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %6, align 8
  %55 = icmp ult %"class.std::__1::unique_ptr.4"* %53, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %18, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.4"* %53 to i64*
  store i64 %26, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %53, i64 1
  %59 = ptrtoint %"class.std::__1::unique_ptr.4"* %58 to i64
  store i64 %59, i64* %19, align 8
  br label %61

60:                                               ; preds = %52
  call void @_ZNSt3__16vectorINS_10unique_ptrIN11dawn_native11AdapterBaseENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.2"* %0, %"class.std::__1::unique_ptr.4"* nonnull dereferenceable(8) %4) #13
  br label %61

61:                                               ; preds = %56, %60
  %62 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %18, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %18, align 8
  %63 = icmp eq %"class.dawn_native::AdapterBase"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.dawn_native::AdapterBase"* %62 to void (%"class.dawn_native::AdapterBase"*)***
  %66 = load void (%"class.dawn_native::AdapterBase"*)**, void (%"class.dawn_native::AdapterBase"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %66, i64 1
  %68 = load void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %67, align 8
  call void %68(%"class.dawn_native::AdapterBase"* nonnull %62) #13
  br label %69

69:                                               ; preds = %64, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %75

70:                                               ; preds = %51
  %71 = bitcast i8* %24 to void (%"class.dawn_native::vulkan::Adapter"*)***
  %72 = load void (%"class.dawn_native::vulkan::Adapter"*)**, void (%"class.dawn_native::vulkan::Adapter"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.dawn_native::vulkan::Adapter"*)*, void (%"class.dawn_native::vulkan::Adapter"*)** %72, i64 1
  %74 = load void (%"class.dawn_native::vulkan::Adapter"*)*, void (%"class.dawn_native::vulkan::Adapter"*)** %73, align 8
  call void %74(%"class.dawn_native::vulkan::Adapter"* nonnull %25) #13
  br label %75

75:                                               ; preds = %70, %69
  %76 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %22, i64 1
  %77 = icmp eq %struct.VkPhysicalDevice_T** %76, %11
  br i1 %77, label %20, label %21
}

declare zeroext i1 @_ZN11dawn_native12InstanceBase13ConsumedErrorE6ResultIvNS_9ErrorDataEE(%"class.dawn_native::InstanceBase"*, %class.Result*) local_unnamed_addr #1

declare void @_ZN11dawn_native6vulkan7Adapter10InitializeEv(%class.Result* sret, %"class.dawn_native::vulkan::Adapter"*) local_unnamed_addr #1

declare dereferenceable(24) %"struct.dawn_native::vulkan::InstanceExtInfo"* @_ZN11dawn_native6vulkan18GetInstanceExtInfoENS0_11InstanceExtE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN11dawn_native6vulkan12_GLOBAL__N_136OnInstanceCreationDebugUtilsCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv(i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT* nocapture readonly, i8* nocapture readnone) #0 {
  %5 = alloca %"class.dawn::LogMessage", align 8
  %6 = bitcast %"class.dawn::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %6) #13
  call void @_ZN4dawn10WarningLogEv(%"class.dawn::LogMessage"* nonnull sret %5) #13
  %7 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %2, i64 0, i32 5
  %8 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %5, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %10 = load i8*, i8** %7, align 8
  %11 = call i64 @strlen(i8* %10) #13
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* %10, i64 %11) #13
  call void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %6) #13
  ret i32 0
}

declare void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result* sret, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN11dawn_native6vulkan12_GLOBAL__N_120OnDebugUtilsCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv(i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT* nocapture readonly, i8* nocapture readnone) #0 {
  %5 = alloca %"class.dawn::LogMessage", align 8
  %6 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %2, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i8* @strstr(i8* %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0)) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %18

10:                                               ; preds = %4
  %11 = bitcast %"class.dawn::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %11) #13
  call void @_ZN4dawn10WarningLogEv(%"class.dawn::LogMessage"* nonnull sret %5) #13
  %12 = getelementptr inbounds %struct.VkDebugUtilsMessengerCallbackDataEXT, %struct.VkDebugUtilsMessengerCallbackDataEXT* %2, i64 0, i32 5
  %13 = getelementptr inbounds %"class.dawn::LogMessage", %"class.dawn::LogMessage"* %5, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %13 to %"class.std::__1::basic_ostream"*
  %15 = load i8*, i8** %12, align 8
  %16 = call i64 @strlen(i8* %15) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* %15, i64 %16) #13
  call void @_ZN4dawn10LogMessageD1Ev(%"class.dawn::LogMessage"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %11) #13
  br label %18

18:                                               ; preds = %4, %10
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.dawn_native::BackendConnection"* @_ZN11dawn_native6vulkan7ConnectEPNS_12InstanceBaseEb(%"class.dawn_native::InstanceBase"*, i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca %class.Result, align 8
  %4 = tail call i8* @_Znwm(i64 1536) #14
  %5 = bitcast i8* %4 to %"class.dawn_native::vulkan::Backend"*
  %6 = bitcast i8* %4 to %"class.dawn_native::BackendConnection"*
  tail call void @_ZN11dawn_native17BackendConnectionC2EPNS_12InstanceBaseEN4wgpu11BackendTypeE(%"class.dawn_native::BackendConnection"* nonnull %6, %"class.dawn_native::InstanceBase"* %0, i32 4) #13
  %7 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6vulkan7BackendE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 1512, i1 false) #13
  call void @_ZN11dawn_native6vulkan7Backend10InitializeEb(%class.Result* nonnull sret %3, %"class.dawn_native::vulkan::Backend"* nonnull %5, i1 zeroext %1)
  %9 = call zeroext i1 @_ZN11dawn_native12InstanceBase13ConsumedErrorE6ResultIvNS_9ErrorDataEE(%"class.dawn_native::InstanceBase"* %0, %class.Result* nonnull %3) #13
  %10 = getelementptr inbounds %class.Result, %class.Result* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %10, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %10, align 8
  %12 = icmp eq %"class.dawn_native::ErrorData"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %11, i64 0, i32 2, i32 0, i32 0
  %15 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %14, align 8
  %16 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %15 to i64
  %19 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %11, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %15 to i8*
  call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %11, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %28, %22
  %32 = bitcast %"class.dawn_native::ErrorData"* %11 to i8*
  call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %2, %31
  br i1 %9, label %34, label %39

34:                                               ; preds = %33
  %35 = bitcast i8* %4 to void (%"class.dawn_native::vulkan::Backend"*)***
  %36 = load void (%"class.dawn_native::vulkan::Backend"*)**, void (%"class.dawn_native::vulkan::Backend"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.dawn_native::vulkan::Backend"*)*, void (%"class.dawn_native::vulkan::Backend"*)** %36, i64 1
  %38 = load void (%"class.dawn_native::vulkan::Backend"*)*, void (%"class.dawn_native::vulkan::Backend"*)** %37, align 8
  call void %38(%"class.dawn_native::vulkan::Backend"* nonnull %5) #13
  br label %39

39:                                               ; preds = %33, %34
  %40 = phi %"class.dawn_native::BackendConnection"* [ null, %34 ], [ %6, %33 ]
  ret %"class.dawn_native::BackendConnection"* %40
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN11dawn_native17BackendConnection16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE() unnamed_addr

declare dereferenceable(16) %"struct.dawn_native::vulkan::VulkanLayerInfo"* @_ZN11dawn_native6vulkan18GetVulkanLayerInfoENS0_11VulkanLayerE(i32) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !22
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare void @_ZN11dawn_native6vulkan7AdapterC1EPNS0_7BackendEP18VkPhysicalDevice_T(%"class.dawn_native::vulkan::Adapter"*, %"class.dawn_native::vulkan::Backend"*, %struct.VkPhysicalDevice_T*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN11dawn_native11AdapterBaseENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.2"*, %"class.std::__1::unique_ptr.4"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.dawn_native::AdapterBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !23

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %142, align 8
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %142, align 8
  %144 = icmp eq %"class.dawn_native::AdapterBase"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.dawn_native::AdapterBase"* %143 to void (%"class.dawn_native::AdapterBase"*)***
  %147 = load void (%"class.dawn_native::AdapterBase"*)**, void (%"class.dawn_native::AdapterBase"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %147, i64 1
  %149 = load void (%"class.dawn_native::AdapterBase"*)*, void (%"class.dawn_native::AdapterBase"*)** %148, align 8
  tail call void %149(%"class.dawn_native::AdapterBase"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN11dawn_native6vulkan7Backend18RegisterDebugUtilsEv: argument 0"}
!12 = distinct !{!12, !"_ZN11dawn_native6vulkan7Backend18RegisterDebugUtilsEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK14BitSetIteratorILm12EN11dawn_native6vulkan11InstanceExtEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK14BitSetIteratorILm12EN11dawn_native6vulkan11InstanceExtEE5beginEv"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_ZNSt3__14copyINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__14copyINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__14copyINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__14copyINS_8__bitsetILm1ELm12EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!22 = !{i8 0, i8 2}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
