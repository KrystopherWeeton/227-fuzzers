; ModuleID = '../../third_party/swiftshader/src/Renderer/Plane.cpp'
source_filename = "../../third_party/swiftshader/src/Renderer/Plane.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.sw::Plane" = type { float, float, float, float }
%"struct.sw::Matrix" = type { [4 x [4 x float]] }

@_ZN2sw5PlaneC1Ev = hidden unnamed_addr alias void (%"struct.sw::Plane"*), void (%"struct.sw::Plane"*)* @_ZN2sw5PlaneC2Ev
@_ZN2sw5PlaneC1Effff = hidden unnamed_addr alias void (%"struct.sw::Plane"*, float, float, float, float), void (%"struct.sw::Plane"*, float, float, float, float)* @_ZN2sw5PlaneC2Effff
@_ZN2sw5PlaneC1EPKf = hidden unnamed_addr alias void (%"struct.sw::Plane"*, float*), void (%"struct.sw::Plane"*, float*)* @_ZN2sw5PlaneC2EPKf

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2sw5PlaneC2Ev(%"struct.sw::Plane"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw5PlaneC2Effff(%"struct.sw::Plane"* nocapture, float, float, float, float) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 0
  store float %1, float* %6, align 4
  %7 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 1
  store float %2, float* %7, align 4
  %8 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 2
  store float %3, float* %8, align 4
  %9 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 3
  store float %4, float* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw5PlaneC2EPKf(%"struct.sw::Plane"* nocapture, float* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = bitcast float* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %"struct.sw::Plane"* %0 to i32*
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds float, float* %1, i64 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 1
  %10 = bitcast float* %9 to i32*
  store i32 %8, i32* %10, align 4
  %11 = getelementptr inbounds float, float* %1, i64 2
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 2
  %15 = bitcast float* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds float, float* %1, i64 3
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 3
  %20 = bitcast float* %19 to i32*
  store i32 %18, i32* %20, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN2swmlERKNS_5PlaneERKNS_6MatrixE(%"struct.sw::Plane"* nocapture readonly dereferenceable(16), %"struct.sw::Matrix"* dereferenceable(64)) local_unnamed_addr #3 {
  %3 = alloca %"struct.sw::Matrix", align 4
  %4 = bitcast %"struct.sw::Matrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -1, i64 64, i1 false)
  call void @_ZNK2sw6MatrixntEv(%"struct.sw::Matrix"* nonnull sret %3, %"struct.sw::Matrix"* %1) #7
  %5 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %0, i64 0, i32 3
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 3
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 0
  %22 = load float, float* %21, align 4
  %23 = insertelement <2 x float> undef, float %6, i32 0
  %24 = shufflevector <2 x float> %23, <2 x float> undef, <2 x i32> zeroinitializer
  %25 = insertelement <2 x float> undef, float %8, i32 0
  %26 = insertelement <2 x float> %25, float %22, i32 1
  %27 = fmul <2 x float> %24, %26
  %28 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 1
  %29 = load float, float* %28, align 4
  %30 = insertelement <2 x float> undef, float %10, i32 0
  %31 = shufflevector <2 x float> %30, <2 x float> undef, <2 x i32> zeroinitializer
  %32 = insertelement <2 x float> undef, float %12, i32 0
  %33 = insertelement <2 x float> %32, float %29, i32 1
  %34 = fmul <2 x float> %31, %33
  %35 = fadd <2 x float> %27, %34
  %36 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 2
  %37 = load float, float* %36, align 4
  %38 = insertelement <2 x float> undef, float %14, i32 0
  %39 = shufflevector <2 x float> %38, <2 x float> undef, <2 x i32> zeroinitializer
  %40 = insertelement <2 x float> undef, float %16, i32 0
  %41 = insertelement <2 x float> %40, float %37, i32 1
  %42 = fmul <2 x float> %39, %41
  %43 = fadd <2 x float> %35, %42
  %44 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 3
  %45 = load float, float* %44, align 4
  %46 = insertelement <2 x float> undef, float %18, i32 0
  %47 = shufflevector <2 x float> %46, <2 x float> undef, <2 x i32> zeroinitializer
  %48 = insertelement <2 x float> undef, float %20, i32 0
  %49 = insertelement <2 x float> %48, float %45, i32 1
  %50 = fmul <2 x float> %47, %49
  %51 = fadd <2 x float> %43, %50
  %52 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 0
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 1
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 2
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 3
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 0
  %61 = load float, float* %60, align 4
  %62 = insertelement <2 x float> undef, float %53, i32 0
  %63 = insertelement <2 x float> %62, float %61, i32 1
  %64 = fmul <2 x float> %24, %63
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 1
  %66 = load float, float* %65, align 4
  %67 = insertelement <2 x float> undef, float %55, i32 0
  %68 = insertelement <2 x float> %67, float %66, i32 1
  %69 = fmul <2 x float> %31, %68
  %70 = fadd <2 x float> %64, %69
  %71 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 2
  %72 = load float, float* %71, align 4
  %73 = insertelement <2 x float> undef, float %57, i32 0
  %74 = insertelement <2 x float> %73, float %72, i32 1
  %75 = fmul <2 x float> %39, %74
  %76 = fadd <2 x float> %70, %75
  %77 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 3
  %78 = load float, float* %77, align 4
  %79 = insertelement <2 x float> undef, float %59, i32 0
  %80 = insertelement <2 x float> %79, float %78, i32 1
  %81 = fmul <2 x float> %47, %80
  %82 = fadd <2 x float> %76, %81
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #6
  %83 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %51, 0
  %84 = insertvalue { <2 x float>, <2 x float> } %83, <2 x float> %82, 1
  ret { <2 x float>, <2 x float> } %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: optsize
declare void @_ZNK2sw6MatrixntEv(%"struct.sw::Matrix"* sret, %"struct.sw::Matrix"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN2swmlERKNS_6MatrixERKNS_5PlaneE(%"struct.sw::Matrix"* dereferenceable(64), %"struct.sw::Plane"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 {
  %3 = alloca %"struct.sw::Matrix", align 8
  %4 = bitcast %"struct.sw::Matrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -1, i64 64, i1 false)
  call void @_ZNK2sw6MatrixntEv(%"struct.sw::Matrix"* nonnull sret %3, %"struct.sw::Matrix"* %0) #7
  %5 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 0
  %8 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 0
  %11 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %1, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 0
  %14 = getelementptr inbounds %"struct.sw::Plane", %"struct.sw::Plane"* %1, i64 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = bitcast %"struct.sw::Matrix"* %3 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 8
  %18 = insertelement <2 x float> undef, float %6, i32 0
  %19 = shufflevector <2 x float> %18, <2 x float> undef, <2 x i32> zeroinitializer
  %20 = fmul <2 x float> %17, %19
  %21 = bitcast float* %7 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 8
  %23 = insertelement <2 x float> undef, float %9, i32 0
  %24 = shufflevector <2 x float> %23, <2 x float> undef, <2 x i32> zeroinitializer
  %25 = fmul <2 x float> %22, %24
  %26 = fadd <2 x float> %20, %25
  %27 = bitcast float* %10 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 8
  %29 = insertelement <2 x float> undef, float %12, i32 0
  %30 = shufflevector <2 x float> %29, <2 x float> undef, <2 x i32> zeroinitializer
  %31 = fmul <2 x float> %28, %30
  %32 = fadd <2 x float> %26, %31
  %33 = bitcast float* %13 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 8
  %35 = insertelement <2 x float> undef, float %15, i32 0
  %36 = shufflevector <2 x float> %35, <2 x float> undef, <2 x i32> zeroinitializer
  %37 = fmul <2 x float> %34, %36
  %38 = fadd <2 x float> %32, %37
  %39 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 0, i64 2
  %40 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 2
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 2
  %42 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 2
  %43 = bitcast float* %39 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 8
  %45 = fmul <2 x float> %19, %44
  %46 = bitcast float* %40 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 8
  %48 = fmul <2 x float> %24, %47
  %49 = fadd <2 x float> %45, %48
  %50 = bitcast float* %41 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 8
  %52 = fmul <2 x float> %30, %51
  %53 = fadd <2 x float> %49, %52
  %54 = bitcast float* %42 to <2 x float>*
  %55 = load <2 x float>, <2 x float>* %54, align 8
  %56 = fmul <2 x float> %36, %55
  %57 = fadd <2 x float> %53, %56
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #6
  %58 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %38, 0
  %59 = insertvalue { <2 x float>, <2 x float> } %58, <2 x float> %57, 1
  ret { <2 x float>, <2 x float> } %59
}

attributes #0 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
