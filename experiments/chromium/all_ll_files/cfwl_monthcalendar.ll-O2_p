; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_monthcalendar.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_monthcalendar.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_RectF = type { float, float, float, float }
%"class.fxcrt::UnownedPtr.33" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.34" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%struct.FDE_TextStyle = type { i8, i8, i8 }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::UnownedPtr.43" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.25" }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.16" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { float*, float*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.23", %"class.fxcrt::UnownedPtr.24" }
%"class.fxcrt::UnownedPtr.23" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.24" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr.27"* }
%"class.fxcrt::UnownedPtr.35" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.38" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.FX_PATHPOINT* }
%class.CFWL_MonthCalendar = type { %class.CFWL_Widget, i8, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.std::__1::vector", i32, i32, i32, i32, i32, i32, i32, i32, %"struct.CFWL_MonthCalendar::DATE", %"struct.CFWL_MonthCalendar::DATE", %class.CFX_STemplate, %class.CFX_STemplate, %class.CFX_STemplate, %"class.std::__1::vector.9", %class.CFX_RectF }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.CFWL_MonthCalendar::DATEINFO"* }
%"struct.CFWL_MonthCalendar::DATEINFO" = type { i32, i32, i32, %class.CFX_RectF, %"class.fxcrt::WideString" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%"struct.CFWL_MonthCalendar::DATE" = type { i32, i32, i32 }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { i32*, i32*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i32* }
%class.CFWL_App = type opaque
%class.CFX_DateTime = type { i32, i8, i8, i8, i8, i8, i16 }
%class.CFWL_ThemeText = type { %class.CFWL_ThemePart, i8, %struct.FDE_TextStyle, %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.34" }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }
%class.IFWL_ThemeProvider = type { %"class.cppgc::GarbageCollectedMixin", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44", %"class.cppgc::internal::BasicMember.44" }
%"class.cppgc::internal::BasicMember.44" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr.34", %"class.fxcrt::UnownedPtr.34" }
%class.CFWL_MessageMouse = type <{ %class.CFWL_Message, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>
%class.CFWL_DateTimePicker = type { %class.CFWL_Widget, i8, i32, i32, i32, i32, float, %class.CFX_RectF, %class.CFX_RectF, %"class.cppgc::internal::BasicMember.50", %"class.cppgc::internal::BasicMember.51" }
%"class.cppgc::internal::BasicMember.50" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.51" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }

$_ZNSt3__16vectorINS_10unique_ptrIN18CFWL_MonthCalendar8DATEINFOENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTV18CFWL_MonthCalendar = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)* @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CFWL_MonthCalendar*)* @_ZN18CFWL_MonthCalendarD2Ev to i8*), i8* bitcast (void (%class.CFWL_MonthCalendar*)* @_ZN18CFWL_MonthCalendarD0Ev to i8*), i8* bitcast (void (%class.CFWL_MonthCalendar*, %class.CFWL_Message*)* @_ZN18CFWL_MonthCalendar16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFWL_Event*)* @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN18CFWL_MonthCalendar12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Widget*)* @_ZN11CFWL_Widget11PreFinalizeEv to i8*), i8* bitcast (i32 (%class.CFWL_MonthCalendar*)* @_ZNK18CFWL_MonthCalendar10GetClassIDEv to i8*), i8* bitcast (i1 (%class.CFWL_Widget*)* @_ZNK11CFWL_Widget6IsFormEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_MonthCalendar*)* @_ZN18CFWL_MonthCalendar22GetAutosizedWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetClientRectEv to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32, i32)* @_ZN11CFWL_Widget14ModifyStylesExEjj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget9SetStatesEj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget12RemoveStatesEj to i8*), i8* bitcast (void (%class.CFWL_MonthCalendar*)* @_ZN18CFWL_MonthCalendar6UpdateEv to i8*), i8* bitcast (i32 (%class.CFWL_Widget*, %class.CFX_PTemplate*)* @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN18CFWL_MonthCalendar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*)] }, align 8
@__const._ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix.params = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr.33" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.34" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, i8 -86, %struct.FDE_TextStyle { i8 -86, i8 -86, i8 -86 }, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::WideString" { %"class.fxcrt::RetainPtr" { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*) } } } } }, %"class.fxcrt::UnownedPtr.43" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8
@__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr.33" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.34" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, %"class.fxcrt::UnownedPtr.35" { %class.CFGAS_GEPath* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEPath*) }, %"class.fxcrt::UnownedPtr.43" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8
@.str = private unnamed_addr constant [3 x i32] [i32 37, i32 100, i32 0], align 4
@_ZZN18CFWL_MonthCalendar11GetHeadTextEiiE6pMonth = internal unnamed_addr constant [12 x i32*] [i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.1, i32 0, i32 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.2, i32 0, i32 0), i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.3, i32 0, i32 0), i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.4, i32 0, i32 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.5, i32 0, i32 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.6, i32 0, i32 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.7, i32 0, i32 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.8, i32 0, i32 0), i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.9, i32 0, i32 0), i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.10, i32 0, i32 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.11, i32 0, i32 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.12, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [8 x i32] [i32 74, i32 97, i32 110, i32 117, i32 97, i32 114, i32 121, i32 0], align 4
@.str.2 = private unnamed_addr constant [9 x i32] [i32 70, i32 101, i32 98, i32 114, i32 117, i32 97, i32 114, i32 121, i32 0], align 4
@.str.3 = private unnamed_addr constant [6 x i32] [i32 77, i32 97, i32 114, i32 99, i32 104, i32 0], align 4
@.str.4 = private unnamed_addr constant [6 x i32] [i32 65, i32 112, i32 114, i32 105, i32 108, i32 0], align 4
@.str.5 = private unnamed_addr constant [4 x i32] [i32 77, i32 97, i32 121, i32 0], align 4
@.str.6 = private unnamed_addr constant [5 x i32] [i32 74, i32 117, i32 110, i32 101, i32 0], align 4
@.str.7 = private unnamed_addr constant [5 x i32] [i32 74, i32 117, i32 108, i32 121, i32 0], align 4
@.str.8 = private unnamed_addr constant [7 x i32] [i32 65, i32 117, i32 103, i32 117, i32 115, i32 116, i32 0], align 4
@.str.9 = private unnamed_addr constant [10 x i32] [i32 83, i32 101, i32 112, i32 116, i32 101, i32 109, i32 98, i32 101, i32 114, i32 0], align 4
@.str.10 = private unnamed_addr constant [8 x i32] [i32 79, i32 99, i32 116, i32 111, i32 98, i32 101, i32 114, i32 0], align 4
@.str.11 = private unnamed_addr constant [9 x i32] [i32 78, i32 111, i32 118, i32 101, i32 109, i32 98, i32 101, i32 114, i32 0], align 4
@.str.12 = private unnamed_addr constant [9 x i32] [i32 68, i32 101, i32 99, i32 101, i32 109, i32 98, i32 101, i32 114, i32 0], align 4
@.str.13 = private unnamed_addr constant [8 x i32] [i32 37, i32 108, i32 115, i32 44, i32 32, i32 37, i32 100, i32 0], align 4
@.str.14 = private unnamed_addr constant [16 x i32] [i32 84, i32 111, i32 100, i32 97, i32 121, i32 44, i32 32, i32 37, i32 100, i32 47, i32 37, i32 100, i32 47, i32 37, i32 100, i32 0], align 4
@.str.15 = private unnamed_addr constant [4 x i32] [i32 83, i32 117, i32 110, i32 0], align 4
@.str.16 = private unnamed_addr constant [4 x i32] [i32 77, i32 111, i32 110, i32 0], align 4
@.str.17 = private unnamed_addr constant [4 x i32] [i32 84, i32 117, i32 101, i32 0], align 4
@.str.18 = private unnamed_addr constant [4 x i32] [i32 87, i32 101, i32 100, i32 0], align 4
@.str.19 = private unnamed_addr constant [4 x i32] [i32 84, i32 104, i32 117, i32 0], align 4
@.str.20 = private unnamed_addr constant [4 x i32] [i32 70, i32 114, i32 105, i32 0], align 4
@.str.21 = private unnamed_addr constant [4 x i32] [i32 83, i32 97, i32 116, i32 0], align 4
@.str.22 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@switch.table._ZN18CFWL_MonthCalendar8CalcSizeEv = private unnamed_addr constant [12 x i32*] [i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.1, i64 0, i64 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.3, i64 0, i64 0), i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.5, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.6, i64 0, i64 0), i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.7, i64 0, i64 0), i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.9, i64 0, i64 0), i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.10, i64 0, i64 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.11, i64 0, i64 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.12, i64 0, i64 0)], align 8
@switch.table._ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi = private unnamed_addr constant [7 x i32*] [i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.15, i64 0, i64 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.16, i64 0, i64 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.17, i64 0, i64 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.18, i64 0, i64 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.19, i64 0, i64 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.20, i64 0, i64 0), i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.21, i64 0, i64 0)], align 8

@_ZN18CFWL_MonthCalendarC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_ = hidden unnamed_addr alias void (%class.CFWL_MonthCalendar*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*), void (%class.CFWL_MonthCalendar*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*)* @_ZN18CFWL_MonthCalendarC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_
@_ZN18CFWL_MonthCalendarD1Ev = hidden unnamed_addr alias void (%class.CFWL_MonthCalendar*), void (%class.CFWL_MonthCalendar*)* @_ZN18CFWL_MonthCalendarD2Ev
@_ZN18CFWL_MonthCalendar8DATEINFOC1Eiij9CFX_RectFRKN5fxcrt10WideStringE = hidden unnamed_addr alias void (%"struct.CFWL_MonthCalendar::DATEINFO"*, i32, i32, i32, <2 x float>, <2 x float>, %"class.fxcrt::WideString"*), void (%"struct.CFWL_MonthCalendar::DATEINFO"*, i32, i32, i32, <2 x float>, <2 x float>, %"class.fxcrt::WideString"*)* @_ZN18CFWL_MonthCalendar8DATEINFOC2Eiij9CFX_RectFRKN5fxcrt10WideStringE
@_ZN18CFWL_MonthCalendar8DATEINFOD1Ev = hidden unnamed_addr alias void (%"struct.CFWL_MonthCalendar::DATEINFO"*), void (%"struct.CFWL_MonthCalendar::DATEINFO"*)* @_ZN18CFWL_MonthCalendar8DATEINFOD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendarC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_MonthCalendar*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget* %5, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* dereferenceable(12) %2, %class.CFWL_Widget* %3) #13
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV18CFWL_MonthCalendar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 11
  %10 = bitcast %class.CFX_RectF* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 144, i1 false)
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %9) #13
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 12
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %11) #13
  %12 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  %14 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 2011, i32 1, i32 2011, i32 1>, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 20
  %19 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 96, i1 false)
  ret void
}

declare void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendarD2Ev(%class.CFWL_MonthCalendar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV18CFWL_MonthCalendar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.5"* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::unique_ptr.5"* %14 to i8*
  %18 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.5"* %19, %14
  br i1 %20, label %35, label %21

21:                                               ; preds = %16, %30
  %22 = phi %"class.std::__1::unique_ptr.5"* [ %23, %30 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %22, i64 -1
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %24, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %24, align 8
  %26 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %25, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %28) #13
  %29 = bitcast %"struct.CFWL_MonthCalendar::DATEINFO"* %25 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %27, %21
  %31 = icmp eq %"class.std::__1::unique_ptr.5"* %23, %14
  br i1 %31, label %32, label %21

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %12 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %16
  %36 = phi i8* [ %34, %32 ], [ %17, %16 ]
  store %"class.std::__1::unique_ptr.5"* %14, %"class.std::__1::unique_ptr.5"** %18, align 8
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %11, %35
  %38 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 12
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %38) #13
  %39 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 11
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %39) #13
  %40 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %40) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendarD0Ev(%class.CFWL_MonthCalendar*) unnamed_addr #0 align 2 {
  tail call void @_ZN18CFWL_MonthCalendarD2Ev(%class.CFWL_MonthCalendar* %0) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK18CFWL_MonthCalendar10GetClassIDEv(%class.CFWL_MonthCalendar* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 10
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN18CFWL_MonthCalendar22GetAutosizedWidgetRectEv(%class.CFWL_MonthCalendar*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_RectF*
  %4 = alloca %class.CFX_STemplate, align 4
  %5 = bitcast %class.CFX_STemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %7 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  call void @_ZN18CFWL_MonthCalendar8CalcSizeEv(%class.CFX_STemplate* nonnull sret %4, %class.CFWL_MonthCalendar* %0)
  %8 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 1
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1, i64 0
  %11 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 3
  %12 = bitcast %class.CFX_STemplate* %4 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = bitcast float* %7 to i32*
  %15 = load i32, i32* %14, align 4
  store float 0.000000e+00, float* %8, align 8
  store float 0.000000e+00, float* %9, align 4
  %16 = bitcast float* %10 to i32*
  store i32 %13, i32* %16, align 8
  %17 = bitcast float* %11 to i32*
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN11CFWL_Widget17InflateWidgetRectER9CFX_RectF(%class.CFWL_Widget* %18, %class.CFX_RectF* nonnull dereferenceable(16) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %20 = load <2 x float>, <2 x float>* %19, align 8
  %21 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %20, 0
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %23 = load <2 x float>, <2 x float>* %22, align 8
  %24 = insertvalue { <2 x float>, <2 x float> } %21, <2 x float> %23, 1
  ret { <2 x float>, <2 x float> } %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar8CalcSizeEv(%class.CFX_STemplate* noalias nocapture sret, %class.CFWL_MonthCalendar*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_STemplate, align 4
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %class.CFX_STemplate, align 4
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = alloca float, align 4
  %8 = alloca %class.CFX_STemplate, align 4
  %9 = alloca %"class.fxcrt::WideString", align 8
  %10 = alloca %class.CFX_STemplate, align 4
  %11 = alloca %"class.fxcrt::WideString", align 8
  %12 = alloca %"class.fxcrt::WideString", align 8
  %13 = alloca %class.CFX_STemplate, align 4
  %14 = bitcast %class.CFX_STemplate* %3 to i8*
  %15 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %3, i64 0, i32 0
  %16 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %3, i64 0, i32 1
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 0
  %18 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %4, i32 0)
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %3, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %19 = load float, float* %15, align 4
  %20 = fcmp ole float %19, 0.000000e+00
  %21 = select i1 %20, float 0.000000e+00, float %19
  %22 = load float, float* %16, align 4
  %23 = fcmp ole float %22, 0.000000e+00
  %24 = select i1 %23, float 0.000000e+00, float %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %4, i32 1)
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %3, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %25 = load float, float* %15, align 4
  %26 = fcmp oge float %21, %25
  %27 = select i1 %26, float %21, float %25
  %28 = load float, float* %16, align 4
  %29 = fcmp oge float %24, %28
  %30 = select i1 %29, float %24, float %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %4, i32 2)
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %3, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %31 = load float, float* %15, align 4
  %32 = fcmp oge float %27, %31
  %33 = select i1 %32, float %27, float %31
  %34 = load float, float* %16, align 4
  %35 = fcmp oge float %30, %34
  %36 = select i1 %35, float %30, float %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %4, i32 3)
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %3, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %37 = load float, float* %15, align 4
  %38 = fcmp oge float %33, %37
  %39 = select i1 %38, float %33, float %37
  %40 = load float, float* %16, align 4
  %41 = fcmp oge float %36, %40
  %42 = select i1 %41, float %36, float %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %4, i32 4)
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %3, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %43 = load float, float* %15, align 4
  %44 = fcmp oge float %39, %43
  %45 = select i1 %44, float %39, float %43
  %46 = load float, float* %16, align 4
  %47 = fcmp oge float %42, %46
  %48 = select i1 %47, float %42, float %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %4, i32 5)
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %3, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %49 = load float, float* %15, align 4
  %50 = fcmp oge float %45, %49
  %51 = select i1 %50, float %45, float %49
  %52 = load float, float* %16, align 4
  %53 = fcmp oge float %48, %52
  %54 = select i1 %53, float %48, float %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %4, i32 6)
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %3, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %55 = load float, float* %15, align 4
  %56 = fcmp oge float %51, %55
  %57 = select i1 %56, float %51, float %55
  %58 = load float, float* %16, align 4
  %59 = fcmp oge float %54, %58
  %60 = select i1 %59, float %54, float %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %61 = bitcast %class.CFX_STemplate* %5 to i8*
  %62 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %5, i64 0, i32 0
  %63 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %5, i64 0, i32 1
  %64 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  br label %86

65:                                               ; preds = %86
  %66 = fcmp oge float %57, %92
  %67 = select i1 %66, float %57, float %92
  %68 = fpext float %67 to double
  %69 = fadd double %68, 5.000000e-01
  %70 = fptosi double %69 to i32
  %71 = sitofp i32 %70 to float
  %72 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 25, i32 0
  store float %71, float* %72, align 8
  %73 = fcmp oge float %60, %95
  %74 = select i1 %73, float %60, float %95
  %75 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 25, i32 1
  store float %74, float* %75, align 4
  %76 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 0
  %77 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 1
  store float 0.000000e+00, float* %77, align 4
  %78 = fmul float %71, 7.000000e+00
  %79 = fadd float %78, 4.200000e+01
  %80 = fadd float %79, 1.000000e+01
  store float %80, float* %76, align 4
  %81 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81)
  store float 0.000000e+00, float* %7, align 4
  %82 = bitcast %class.CFX_STemplate* %8 to i8*
  %83 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %8, i64 0, i32 0
  %84 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %8, i64 0, i32 1
  %85 = bitcast %"class.fxcrt::WideString"* %9 to i8*
  br label %162

86:                                               ; preds = %86, %2
  %87 = phi i32 [ 10, %2 ], [ %96, %86 ]
  %88 = phi float [ 0.000000e+00, %2 ], [ %95, %86 ]
  %89 = phi float [ 0.000000e+00, %2 ], [ %92, %86 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  store float 0xFFFFFFFFE0000000, float* %62, align 4
  store float 0xFFFFFFFFE0000000, float* %63, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %6, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str, i64 0, i64 0), i32 %87) #13
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %5, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %90 = load float, float* %62, align 4
  %91 = fcmp oge float %89, %90
  %92 = select i1 %91, float %89, float %90
  %93 = load float, float* %63, align 4
  %94 = fcmp oge float %88, %93
  %95 = select i1 %94, float %88, float %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  %96 = add nuw nsw i32 %87, 1
  %97 = icmp eq i32 %96, 32
  br i1 %97, label %65, label %86

98:                                               ; preds = %171
  %99 = bitcast %class.CFX_STemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #13
  %100 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %10, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %100, align 4
  %101 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %101, align 4
  %102 = bitcast %"class.fxcrt::WideString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  %103 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 16
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 17
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %106, -1
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [12 x i32*], [12 x i32*]* @_ZZN18CFWL_MonthCalendar11GetHeadTextEiiE6pMonth, i64 0, i64 %108
  %110 = load i32*, i32** %109, align 8, !noalias !2
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %11, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.13, i64 0, i64 0), i32* %110, i32 %104) #13
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %10, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %11, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  %111 = load float, float* %101, align 4
  %112 = fcmp olt float %178, %111
  %113 = select i1 %112, float %111, float %178
  %114 = load float, float* %100, align 4
  %115 = fadd float %175, %114
  %116 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 24, i32 0
  store float %115, float* %116, align 4
  %117 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 24, i32 1
  store float %113, float* %117, align 4
  %118 = fadd float %115, 1.000000e+01
  %119 = load float, float* %72, align 8
  %120 = fmul float %119, 2.000000e+00
  %121 = fadd float %118, %120
  store float %121, float* %7, align 4
  %122 = fcmp olt float %80, %121
  %123 = select i1 %122, float* %7, float* %76
  %124 = bitcast float* %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = bitcast %class.CFX_STemplate* %0 to i32*
  store i32 %125, i32* %126, align 4
  %127 = bitcast %"class.fxcrt::WideString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #13
  %128 = load i32, i32* %103, align 8
  %129 = load i32, i32* %105, align 4
  %130 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 18
  %131 = load i32, i32* %130, align 8
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %12, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @.str.14, i64 0, i64 0), i32 %131, i32 %129, i32 %128) #13
  %132 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 12
  %133 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %132, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %12) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #13
  %134 = bitcast %class.CFX_STemplate* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #13
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %13, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* dereferenceable(8) %132, i1 zeroext false) #13
  %135 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 26
  %136 = icmp eq %class.CFX_STemplate* %135, %13
  br i1 %136, label %137, label %140

137:                                              ; preds = %98
  %138 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 26, i32 1
  %139 = load float, float* %138, align 4
  br label %150

140:                                              ; preds = %98
  %141 = bitcast %class.CFX_STemplate* %13 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %class.CFX_STemplate* %135 to i32*
  store i32 %142, i32* %143, align 4
  %144 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %13, i64 0, i32 1
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 26, i32 1
  %148 = bitcast float* %147 to i32*
  store i32 %146, i32* %148, align 4
  %149 = bitcast i32 %146 to float
  br label %150

150:                                              ; preds = %137, %140
  %151 = phi float [ %139, %137 ], [ %149, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #13
  %152 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %1, i64 0, i32 26, i32 1
  %153 = load float, float* %75, align 4
  %154 = fcmp oge float %151, %153
  %155 = select i1 %154, float %151, float %153
  store float %155, float* %152, align 4
  %156 = load float, float* %72, align 8
  %157 = fmul float %153, 7.000000e+00
  %158 = fadd float %157, %156
  %159 = fadd float %155, %158
  %160 = fadd float %159, 3.600000e+01
  %161 = fadd float %160, 2.800000e+01
  store float %161, float* %77, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81)
  ret void

162:                                              ; preds = %171, %65
  %163 = phi float [ 0.000000e+00, %65 ], [ %178, %171 ]
  %164 = phi float [ 0.000000e+00, %65 ], [ %175, %171 ]
  %165 = phi i32 [ 0, %65 ], [ %179, %171 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store float 0xFFFFFFFFE0000000, float* %83, align 4
  store float 0xFFFFFFFFE0000000, float* %84, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  %166 = icmp ult i32 %165, 12
  br i1 %166, label %167, label %171

167:                                              ; preds = %162
  %168 = zext i32 %165 to i64
  %169 = getelementptr inbounds [12 x i32*], [12 x i32*]* @switch.table._ZN18CFWL_MonthCalendar8CalcSizeEv, i64 0, i64 %168
  %170 = load i32*, i32** %169, align 8
  br label %171

171:                                              ; preds = %162, %167
  %172 = phi i32* [ %170, %167 ], [ getelementptr inbounds ([1 x i32], [1 x i32]* @.str.22, i64 0, i64 0), %162 ]
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %9, i32* %172) #13
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %8, %class.CFWL_Widget* %17, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %9, i1 zeroext false) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  %173 = load float, float* %83, align 4
  %174 = fcmp oge float %164, %173
  %175 = select i1 %174, float %164, float %173
  %176 = load float, float* %84, align 4
  %177 = fcmp oge float %163, %176
  %178 = select i1 %177, float %163, float %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  %179 = add nuw nsw i32 %165, 1
  %180 = icmp eq i32 %179, 12
  br i1 %180, label %98, label %162
}

declare void @_ZN11CFWL_Widget17InflateWidgetRectER9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar6UpdateEv(%class.CFWL_MonthCalendar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @_ZN18CFWL_MonthCalendar8InitDateEv(%class.CFWL_MonthCalendar* %0)
  store i8 1, i8* %6, align 8
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %11, align 8
  %13 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.5"* %14, %12
  br i1 %15, label %27, label %16

16:                                               ; preds = %10, %25
  %17 = phi %"class.std::__1::unique_ptr.5"* [ %18, %25 ], [ %14, %10 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %17, i64 -1
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %19, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %19, align 8
  %21 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %20, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %23) #13
  %24 = bitcast %"struct.CFWL_MonthCalendar::DATEINFO"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %22, %16
  %26 = icmp eq %"class.std::__1::unique_ptr.5"* %18, %12
  br i1 %26, label %27, label %16

27:                                               ; preds = %25, %10
  store %"class.std::__1::unique_ptr.5"* %12, %"class.std::__1::unique_ptr.5"** %13, align 8
  tail call void @_ZN18CFWL_MonthCalendar13ResetDateItemEv(%class.CFWL_MonthCalendar* %0)
  tail call void @_ZN18CFWL_MonthCalendar6LayoutEv(%class.CFWL_MonthCalendar* %0)
  br label %28

28:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar8InitDateEv(%class.CFWL_MonthCalendar*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::WideString", align 8
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = tail call { i64, i32 } @_ZN12CFX_DateTime3NowEv() #13
  %5 = extractvalue { i64, i32 } %4, 0
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %5, 40
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 16
  store i32 %6, i32* %11, align 8
  %12 = and i32 %8, 255
  %13 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 17
  store i32 %12, i32* %13, align 4
  %14 = and i32 %10, 255
  %15 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  store i32 %6, i32* %16, align 8
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  store i32 %12, i32* %17, align 4
  %18 = bitcast %"class.fxcrt::WideString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %2, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @.str.14, i64 0, i64 0), i32 %14, i32 %12, i32 %6) #13
  %19 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 12
  %20 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %19, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %2) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %21 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = load i32, i32* %16, align 8
  %23 = load i32, i32* %17, align 4
  %24 = add nsw i32 %23, -1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [12 x i32*], [12 x i32*]* @_ZZN18CFWL_MonthCalendar11GetHeadTextEiiE6pMonth, i64 0, i64 %25
  %27 = load i32*, i32** %26, align 8, !noalias !6
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %3, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.13, i64 0, i64 0), i32* %27, i32 %22) #13
  %28 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 11
  %29 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %28, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %3) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %30 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 22, i32 0
  %31 = bitcast i32* %30 to <4 x i32>*
  store <4 x i32> <i32 1500, i32 12, i32 1, i32 2200>, <4 x i32>* %31, align 8
  %32 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 1
  store i32 1, i32* %32, align 4
  %33 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 2
  store i32 1, i32* %33, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar13ClearDateItemEv(%class.CFWL_MonthCalendar* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %2, align 8
  %4 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.5"* %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.std::__1::unique_ptr.5"* [ %9, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %10, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %10, align 8
  %12 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %11, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %14) #13
  %15 = bitcast %"struct.CFWL_MonthCalendar::DATEINFO"* %11 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %13, %7
  %17 = icmp eq %"class.std::__1::unique_ptr.5"* %9, %3
  br i1 %17, label %18, label %7

18:                                               ; preds = %16, %1
  store %"class.std::__1::unique_ptr.5"* %3, %"class.std::__1::unique_ptr.5"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar13ResetDateItemEv(%class.CFWL_MonthCalendar*) local_unnamed_addr #5 align 2 {
  %2 = alloca %class.CFX_DateTime, align 4
  %3 = alloca %"class.std::__1::unique_ptr.5", align 8
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i8
  %10 = tail call zeroext i8 @_Z14FX_DaysInMonthih(i32 %6, i8 zeroext %9) #13
  %11 = zext i8 %10 to i32
  %12 = bitcast %class.CFX_DateTime* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12) #13
  %13 = load i32, i32* %5, align 8
  %14 = load i32, i32* %7, align 4
  %15 = trunc i32 %14 to i8
  %16 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 0
  store i32 %13, i32* %16, align 4
  %17 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 1
  store i8 %15, i8* %17, align 4
  %18 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 2
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 3
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 4
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 5
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %class.CFX_DateTime, %class.CFX_DateTime* %2, i64 0, i32 6
  store i16 0, i16* %22, align 2
  %23 = call i32 @_ZNK12CFX_DateTime12GetDayOfWeekEv(%class.CFX_DateTime* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12) #13
  %24 = icmp eq i8 %10, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 16
  %27 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 17
  %28 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  %29 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 0
  %30 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 1
  %31 = bitcast %"class.std::__1::unique_ptr.5"* %3 to i8*
  %32 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr.5"* %3 to i8**
  %35 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %36 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %37 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %38 = bitcast %"class.std::__1::unique_ptr.5"** %35 to i64*
  br label %40

39:                                               ; preds = %101, %1
  ret void

40:                                               ; preds = %101, %25
  %41 = phi i32 [ 0, %25 ], [ %59, %101 ]
  %42 = phi i32 [ %23, %25 ], [ %102, %101 ]
  %43 = icmp sgt i32 %42, 6
  %44 = select i1 %43, i32 0, i32 %42
  %45 = load i32, i32* %26, align 8
  %46 = load i32, i32* %5, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %57

48:                                               ; preds = %40
  %49 = load i32, i32* %27, align 4
  %50 = load i32, i32* %7, align 4
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = load i32, i32* %28, align 8
  %54 = add nuw nsw i32 %41, 1
  %55 = icmp eq i32 %53, %54
  %56 = zext i1 %55 to i32
  br label %57

57:                                               ; preds = %52, %48, %40
  %58 = phi i32 [ 0, %48 ], [ 0, %40 ], [ %56, %52 ]
  %59 = add nuw nsw i32 %41, 1
  %60 = load i32*, i32** %29, align 8
  %61 = load i32*, i32** %30, align 8
  %62 = icmp eq i32* %60, %61
  br i1 %62, label %70, label %63

63:                                               ; preds = %57, %67
  %64 = phi i32* [ %68, %67 ], [ %60, %57 ]
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %59
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i32, i32* %64, i64 1
  %69 = icmp eq i32* %68, %61
  br i1 %69, label %75, label %63

70:                                               ; preds = %63, %57
  %71 = phi i32* [ %60, %57 ], [ %64, %63 ]
  %72 = icmp eq i32* %71, %61
  %73 = or i32 %58, 2
  %74 = select i1 %72, i32 %58, i32 %73
  br label %75

75:                                               ; preds = %67, %70
  %76 = phi i32 [ %74, %70 ], [ %58, %67 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %4, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str, i64 0, i64 0), i32 %59) #13
  %77 = call i8* @_Znwm(i64 40) #14
  %78 = bitcast i8* %77 to i32*
  store i32 %59, i32* %78, align 8
  %79 = getelementptr inbounds i8, i8* %77, i64 4
  %80 = bitcast i8* %79 to i32*
  store i32 %44, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %77, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 %76, i32* %82, align 8
  %83 = getelementptr inbounds i8, i8* %77, i64 12
  %84 = getelementptr inbounds i8, i8* %77, i64 32
  %85 = bitcast i8* %84 to %"class.fxcrt::WideString"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 16, i1 false)
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %85, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #13
  store i8* %77, i8** %34, align 8
  %86 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %35, align 8
  %87 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %36, align 8
  %88 = icmp ult %"class.std::__1::unique_ptr.5"* %86, %87
  br i1 %88, label %89, label %94

89:                                               ; preds = %75
  %90 = ptrtoint i8* %77 to i64
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %33, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.5"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %86, i64 1
  %93 = ptrtoint %"class.std::__1::unique_ptr.5"* %92 to i64
  store i64 %93, i64* %38, align 8
  br label %95

94:                                               ; preds = %75
  call void @_ZNSt3__16vectorINS_10unique_ptrIN18CFWL_MonthCalendar8DATEINFOENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %37, %"class.std::__1::unique_ptr.5"* nonnull dereferenceable(8) %3) #13
  br label %95

95:                                               ; preds = %89, %94
  %96 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %33, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %33, align 8
  %97 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %96, i64 0, i32 4
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %99) #13
  %100 = bitcast %"struct.CFWL_MonthCalendar::DATEINFO"* %96 to i8*
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %95, %98
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %102 = add nsw i32 %44, 1
  %103 = icmp eq i32 %59, %11
  br i1 %103, label %39, label %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar6LayoutEv(%class.CFWL_MonthCalendar*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  %3 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget* %2) #13
  %4 = extractvalue { <2 x float>, <2 x float> } %3, 0
  %5 = shufflevector <2 x float> %4, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %6 = extractvalue { <2 x float>, <2 x float> } %3, 1
  %7 = shufflevector <2 x float> %6, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28
  %9 = bitcast %class.CFX_RectF* %8 to <2 x float>*
  store <2 x float> %4, <2 x float>* %9, align 8
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 2
  %11 = bitcast float* %10 to <2 x float>*
  store <2 x float> %6, <2 x float>* %11, align 8
  %12 = extractelement <2 x float> %4, i32 0
  %13 = extractelement <2 x float> %4, i32 1
  %14 = extractelement <2 x float> %6, i32 0
  %15 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %16 = load float, float* %15, align 8
  %17 = fadd float %16, 1.800000e+01
  %18 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 1
  %20 = load float, float* %19, align 4
  %21 = insertelement <4 x float> undef, float %14, i32 0
  %22 = insertelement <4 x float> %21, float %20, i32 1
  %23 = shufflevector <4 x float> %22, <4 x float> %5, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %24 = fadd <4 x float> %23, <float -1.000000e+01, float 4.000000e+00, float 5.000000e+00, float 7.000000e+00>
  %25 = extractelement <4 x float> %24, i32 2
  store float %25, float* %18, align 4
  %26 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 2, i32 1
  store float %13, float* %26, align 4
  %27 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 2, i32 2
  %28 = extractelement <4 x float> %24, i32 0
  store float %28, float* %27, align 4
  %29 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 2, i32 3
  store float %17, float* %29, align 4
  %30 = fadd float %13, %17
  %31 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 3, i32 0
  store float %25, float* %31, align 4
  %32 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 3, i32 1
  store float %30, float* %32, align 4
  %33 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 3, i32 2
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %24, <4 x float>* %34, align 4
  %35 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 2
  store float %16, float* %35, align 4
  %36 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 3
  store float %16, float* %36, align 4
  %37 = fadd float %14, %12
  %38 = fadd float %37, -5.000000e+00
  %39 = fsub float %38, %16
  %40 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 0
  store float %39, float* %40, align 4
  %41 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 1
  %42 = extractelement <4 x float> %24, i32 3
  store float %42, float* %41, align 4
  %43 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 2
  store float %16, float* %43, align 4
  %44 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 3
  store float %16, float* %44, align 4
  %45 = extractelement <4 x float> %24, i32 1
  %46 = fadd float %30, %45
  %47 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 7, i32 3
  store float 1.000000e+00, float* %47, align 4
  %48 = fmul float %20, 6.000000e+00
  %49 = insertelement <4 x float> undef, float %48, i32 0
  %50 = insertelement <4 x float> %49, float %25, i32 1
  %51 = insertelement <4 x float> %50, float %46, i32 2
  %52 = shufflevector <4 x float> %51, <4 x float> %7, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  %53 = fadd <4 x float> %52, <float 2.400000e+01, float 3.000000e+00, float -2.000000e+00, float -1.600000e+01>
  %54 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 0
  store float %25, float* %54, align 4
  %55 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 1
  store float %46, float* %55, align 4
  %56 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 2
  store float %28, float* %56, align 4
  %57 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 3
  %58 = bitcast float* %57 to <4 x float>*
  store <4 x float> %53, <4 x float>* %58, align 4
  %59 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %60 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %59, align 8
  %61 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.5"* %60, %62
  br i1 %63, label %102, label %64

64:                                               ; preds = %1, %93
  %65 = phi float [ %101, %93 ], [ %20, %1 ]
  %66 = phi float [ %100, %93 ], [ %16, %1 ]
  %67 = phi i8 [ %99, %93 ], [ 0, %1 ]
  %68 = phi i32 [ %74, %93 ], [ 0, %1 ]
  %69 = phi %"class.std::__1::unique_ptr.5"* [ %91, %93 ], [ %60, %1 ]
  %70 = and i8 %67, 1
  %71 = icmp eq i8 %70, 0
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = add nuw nsw i32 %68, %73
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %69, i64 0, i32 0, i32 0, i32 0
  %76 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %75, align 8
  %77 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %76, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sitofp i32 %78 to float
  %80 = fadd float %66, 6.000000e+00
  %81 = fmul float %80, %79
  %82 = fadd float %25, %81
  %83 = sitofp i32 %74 to float
  %84 = fadd float %65, 4.000000e+00
  %85 = fmul float %84, %83
  %86 = fadd float %46, %85
  %87 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %76, i64 0, i32 3, i32 0
  store float %82, float* %87, align 4
  %88 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %76, i64 0, i32 3, i32 1
  store float %86, float* %88, align 4
  %89 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %76, i64 0, i32 3, i32 2
  store float %80, float* %89, align 4
  %90 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %76, i64 0, i32 3, i32 3
  store float %84, float* %90, align 4
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %69, i64 1
  %92 = icmp eq %"class.std::__1::unique_ptr.5"* %91, %62
  br i1 %92, label %102, label %93

93:                                               ; preds = %64
  %94 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %75, align 8
  %95 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %94, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, 5
  %98 = select i1 %71, i8 %67, i8 0
  %99 = select i1 %97, i8 1, i8 %98
  %100 = load float, float* %15, align 8
  %101 = load float, float* %19, align 4
  br label %64

102:                                              ; preds = %64, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeText, align 8
  %5 = alloca %class.CFWL_ThemeBackground, align 8
  %6 = alloca %class.CFWL_ThemeBackground, align 8
  %7 = alloca %class.CFWL_ThemeBackground, align 8
  %8 = alloca %class.CFWL_ThemeBackground, align 8
  %9 = alloca %class.CFWL_ThemeBackground, align 8
  %10 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %10, label %86, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget* %12) #13
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget* %12, %class.CFGAS_GEGraphics* nonnull %1, i8 zeroext 3, %class.CFX_Matrix* dereferenceable(24) %2) #13
  br label %15

15:                                               ; preds = %14, %11
  %16 = bitcast %class.CFWL_ThemeBackground* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false) #13
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %9, %class.CFWL_Widget* %12, %class.CFGAS_GEGraphics* nonnull %1) #13
  %17 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %9, i64 0, i32 0, i32 4
  store i8 2, i8* %17, align 4
  %18 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28
  %19 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %9, i64 0, i32 0, i32 1
  %20 = bitcast %class.CFX_RectF* %19 to i8*
  %21 = bitcast %class.CFX_RectF* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 4 %21, i64 16, i1 false) #13
  %22 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 4 %22, i64 24, i1 false) #13
  %23 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %12) #13
  %24 = bitcast %class.IFWL_ThemeProvider* %23 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %25 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %25, i64 3
  %27 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %26, align 8
  call void %27(%class.IFWL_ThemeProvider* %23, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %9) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #13
  %28 = bitcast %class.CFWL_ThemeBackground* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %28) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false) #13
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %8, %class.CFWL_Widget* %12, %class.CFGAS_GEGraphics* nonnull %1) #13
  %29 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %8, i64 0, i32 0, i32 4
  store i8 18, i8* %29, align 4
  %30 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 2
  %31 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %8, i64 0, i32 0, i32 1
  %32 = bitcast %class.CFX_RectF* %31 to i8*
  %33 = bitcast %class.CFX_RectF* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %33, i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 4 %22, i64 24, i1 false) #13
  %34 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %12) #13
  %35 = bitcast %class.IFWL_ThemeProvider* %34 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %36 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %36, i64 3
  %38 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %37, align 8
  call void %38(%class.IFWL_ThemeProvider* %34, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %8) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %28) #13
  %39 = bitcast %class.CFWL_ThemeBackground* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %39) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false) #13
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %7, %class.CFWL_Widget* %12, %class.CFGAS_GEGraphics* nonnull %1) #13
  %40 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %7, i64 0, i32 0, i32 4
  store i8 21, i8* %40, align 4
  %41 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 20
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %7, i64 0, i32 0, i32 3
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4
  %45 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %7, i64 0, i32 0, i32 1
  %46 = bitcast %class.CFX_RectF* %45 to i8*
  %47 = bitcast %class.CFX_RectF* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 4 %47, i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 4 %22, i64 24, i1 false) #13
  %48 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %12) #13
  %49 = bitcast %class.IFWL_ThemeProvider* %48 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %50 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %50, i64 3
  %52 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %51, align 8
  call void %52(%class.IFWL_ThemeProvider* %48, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %7) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %39) #13
  %53 = bitcast %class.CFWL_ThemeBackground* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %53) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false) #13
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %6, %class.CFWL_Widget* %12, %class.CFGAS_GEGraphics* nonnull %1) #13
  %54 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 4
  store i8 27, i8* %54, align 4
  %55 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 21
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 3
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5
  %59 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 1
  %60 = bitcast %class.CFX_RectF* %59 to i8*
  %61 = bitcast %class.CFX_RectF* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 4 %61, i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 4 %22, i64 24, i1 false) #13
  %62 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %12) #13
  %63 = bitcast %class.IFWL_ThemeProvider* %62 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %64 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %64, i64 3
  %66 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %65, align 8
  call void %66(%class.IFWL_ThemeProvider* %62, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %6) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %53) #13
  %67 = bitcast %class.CFWL_ThemeBackground* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %67) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false) #13
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %5, %class.CFWL_Widget* %12, %class.CFGAS_GEGraphics* nonnull %1) #13
  %68 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 4
  store i8 16, i8* %68, align 4
  %69 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 7
  %70 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1
  %71 = bitcast %class.CFX_RectF* %70 to i8*
  %72 = bitcast %class.CFX_RectF* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 4 %72, i64 16, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 4 %22, i64 24, i1 false) #13
  %73 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %12) #13
  %74 = bitcast %class.IFWL_ThemeProvider* %73 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %75 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %75, i64 3
  %77 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %76, align 8
  call void %77(%class.IFWL_ThemeProvider* %73, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %5) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %67) #13
  call void @_ZN18CFWL_MonthCalendar13DrawDatesInBKEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %0, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* dereferenceable(24) %2)
  call void @_ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %0, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* dereferenceable(24) %2)
  call void @_ZN18CFWL_MonthCalendar11DrawCaptionEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %0, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* dereferenceable(24) %2)
  call void @_ZN18CFWL_MonthCalendar8DrawWeekEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %0, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* dereferenceable(24) %2)
  call void @_ZN18CFWL_MonthCalendar11DrawDatesInEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %0, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* dereferenceable(24) %2)
  %78 = bitcast %class.CFWL_ThemeText* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %78) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 88, i1 false) #13
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %4, %class.CFWL_Widget* %12, %class.CFGAS_GEGraphics* nonnull %1) #13
  %79 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 4
  store i8 12, i8* %79, align 4
  %80 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 1
  store i8 2, i8* %80, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 4 %22, i64 24, i1 false) #13
  %81 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %12) #13
  %82 = bitcast %class.IFWL_ThemeProvider* %81 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)***
  %83 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %83, i64 4
  %85 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %84, align 8
  call void %85(%class.IFWL_ThemeProvider* %81, %class.CFWL_ThemeText* nonnull dereferenceable(88) %4) #13
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %78) #13
  call void @_ZN18CFWL_MonthCalendar9DrawTodayEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %0, %class.CFGAS_GEGraphics* nonnull %1, %class.CFX_Matrix* dereferenceable(24) %2)
  br label %86

86:                                               ; preds = %3, %15
  ret void
}

declare zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget*) local_unnamed_addr #1

declare void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget*, %class.CFGAS_GEGraphics*, i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar14DrawBackgroundEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 2, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28
  %9 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %10 = bitcast %class.CFX_RectF* %9 to i8*
  %11 = bitcast %class.CFX_RectF* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false)
  %12 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %12, i64 24, i1 false)
  %13 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %14 = bitcast %class.IFWL_ThemeProvider* %13 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %15 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %15, i64 3
  %17 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %16, align 8
  call void %17(%class.IFWL_ThemeProvider* %13, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar10DrawHeadBKEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 18, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %10 = bitcast %class.CFX_RectF* %9 to i8*
  %11 = bitcast %class.CFX_RectF* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false)
  %12 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %12, i64 24, i1 false)
  %13 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %14 = bitcast %class.IFWL_ThemeProvider* %13 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %15 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %15, i64 3
  %17 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %16, align 8
  call void %17(%class.IFWL_ThemeProvider* %13, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11DrawLButtonEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 21, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 20
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %13 = bitcast %class.CFX_RectF* %12 to i8*
  %14 = bitcast %class.CFX_RectF* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 4 %14, i64 16, i1 false)
  %15 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %15, i64 24, i1 false)
  %16 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %17 = bitcast %class.IFWL_ThemeProvider* %16 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %18 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %18, i64 3
  %20 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %19, align 8
  call void %20(%class.IFWL_ThemeProvider* %16, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11DrawRButtonEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 27, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 21
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %13 = bitcast %class.CFX_RectF* %12 to i8*
  %14 = bitcast %class.CFX_RectF* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 4 %14, i64 16, i1 false)
  %15 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %15, i64 24, i1 false)
  %16 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %17 = bitcast %class.IFWL_ThemeProvider* %16 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %18 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %18, i64 3
  %20 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %19, align 8
  call void %20(%class.IFWL_ThemeProvider* %16, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar13DrawSeparatorEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 16, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 7
  %9 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %10 = bitcast %class.CFX_RectF* %9 to i8*
  %11 = bitcast %class.CFX_RectF* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false)
  %12 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %12, i64 24, i1 false)
  %13 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %14 = bitcast %class.IFWL_ThemeProvider* %13 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %15 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %15, i64 3
  %17 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %16, align 8
  call void %17(%class.IFWL_ThemeProvider* %13, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar13DrawDatesInBKEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 9, i8* %7, align 4
  %8 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %8, i64 24, i1 false)
  %9 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.5"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp ult i64 %17, 2147483648
  %19 = inttoptr i64 %15 to %"class.std::__1::unique_ptr.5"*
  br i1 %18, label %21, label %20, !prof !9

20:                                               ; preds = %3
  call void @llvm.trap() #13
  unreachable

21:                                               ; preds = %3
  %22 = trunc i64 %17 to i32
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  %27 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  %28 = bitcast %class.IFWL_ThemeProvider* %9 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %29 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %30 = bitcast %class.CFX_RectF* %29 to i8*
  %31 = and i64 %17, 4294967295
  br label %33

32:                                               ; preds = %66, %21
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #13
  ret void

33:                                               ; preds = %74, %24
  %34 = phi %"class.std::__1::unique_ptr.5"* [ %19, %24 ], [ %75, %74 ]
  %35 = phi i64 [ 0, %24 ], [ %72, %74 ]
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %34, i64 %35, i32 0, i32 0, i32 0
  %37 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %36, align 8
  %38 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %37, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = and i64 %40, 2
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %33
  %44 = load i32, i32* %26, align 8
  %45 = or i32 %44, 16384
  store i32 %45, i32* %26, align 8
  %46 = load i32, i32* %38, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %43
  %50 = or i32 %44, 16400
  store i32 %50, i32* %26, align 8
  br label %66

51:                                               ; preds = %33
  %52 = load i32, i32* %27, align 4
  %53 = add nsw i32 %52, -1
  %54 = zext i32 %53 to i64
  %55 = icmp eq i64 %35, %54
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = load i32, i32* %26, align 8
  %58 = or i32 %57, 128
  store i32 %58, i32* %26, align 8
  br label %66

59:                                               ; preds = %51
  %60 = and i64 %40, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  store i32 16, i32* %26, align 8
  %63 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %28, align 8
  %64 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %63, i64 3
  %65 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %64, align 8
  call void %65(%class.IFWL_ThemeProvider* %9, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  br label %66

66:                                               ; preds = %43, %59, %56, %62, %49
  %67 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %37, i64 0, i32 3
  %68 = bitcast %class.CFX_RectF* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %68, i64 16, i1 false)
  %69 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %28, align 8
  %70 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %69, i64 3
  %71 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %70, align 8
  call void %71(%class.IFWL_ThemeProvider* %9, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  store i32 0, i32* %26, align 8
  %72 = add nuw nsw i64 %35, 1
  %73 = icmp eq i64 %72, %31
  br i1 %73, label %32, label %74

74:                                               ; preds = %66
  %75 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %25, align 8
  br label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 17
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %55

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 16
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %55

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %55, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %22 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr.5"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, 2147483648
  %30 = inttoptr i64 %26 to %"class.std::__1::unique_ptr.5"*
  br i1 %29, label %32, label %31, !prof !9

31:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

32:                                               ; preds = %20
  %33 = trunc i64 %28 to i32
  %34 = icmp sgt i32 %18, %33
  br i1 %34, label %55, label %35

35:                                               ; preds = %32
  %36 = add nsw i32 %18, -1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %30, i64 %37, i32 0, i32 0, i32 0
  %39 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %38, align 8
  %40 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %39, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %35
  %42 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %42) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar17DrawDatesInCircleEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 80, i1 false)
  %43 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %43, %class.CFGAS_GEGraphics* %1) #13
  %44 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 10, i8* %44, align 4
  %45 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %39, i64 0, i32 3
  %46 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %47 = bitcast %class.CFX_RectF* %46 to i8*
  %48 = bitcast %class.CFX_RectF* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 4 %48, i64 16, i1 false)
  %49 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 4 %49, i64 24, i1 false)
  %50 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %43) #13
  %51 = bitcast %class.IFWL_ThemeProvider* %50 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %52 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %52, i64 3
  %54 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %53, align 8
  call void %54(%class.IFWL_ThemeProvider* %50, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #13
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %42) #13
  br label %55

55:                                               ; preds = %41, %35, %10, %3, %16, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11DrawCaptionEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeText, align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %class.CFX_STemplate, align 4
  %7 = bitcast %class.CFWL_ThemeText* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 88, i1 false)
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %4, %class.CFWL_Widget* %8, %class.CFGAS_GEGraphics* %1) #13
  %9 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 4
  store i8 4, i8* %9, align 4
  %10 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, -1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [12 x i32*], [12 x i32*]* @_ZZN18CFWL_MonthCalendar11GetHeadTextEiiE6pMonth, i64 0, i64 %16
  %18 = load i32*, i32** %17, align 8, !noalias !10
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %5, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.13, i64 0, i64 0), i32* %18, i32 %12) #13
  %19 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 3
  %20 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %19, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %21 = bitcast %class.CFX_STemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %6, %class.CFWL_Widget* %8, %"class.fxcrt::WideString"* dereferenceable(8) %19, i1 zeroext false) #13
  %22 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 24
  %23 = icmp eq %class.CFX_STemplate* %22, %6
  br i1 %23, label %24, label %29

24:                                               ; preds = %3
  %25 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 24, i32 0
  %26 = load float, float* %25, align 8
  %27 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 24, i32 1
  %28 = load float, float* %27, align 4
  br label %40

29:                                               ; preds = %3
  %30 = bitcast %class.CFX_STemplate* %6 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %class.CFX_STemplate* %22 to i32*
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %6, i64 0, i32 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 24, i32 1
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = bitcast i32 %31 to float
  %39 = bitcast i32 %35 to float
  br label %40

40:                                               ; preds = %24, %29
  %41 = phi float [ %28, %24 ], [ %39, %29 ]
  %42 = phi float [ %26, %24 ], [ %38, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %43 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 2
  %44 = load float, float* %43, align 8
  %45 = fsub float %44, %42
  %46 = fmul float %45, 5.000000e-01
  %47 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %48 = load float, float* %47, align 8
  %49 = fsub float %48, %41
  %50 = fmul float %49, 5.000000e-01
  %51 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 0
  %52 = load float, float* %51, align 8
  %53 = fadd float %46, %52
  %54 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 1
  %55 = load float, float* %54, align 4
  %56 = fadd float %55, 7.000000e+00
  %57 = fadd float %56, 2.000000e+00
  %58 = fadd float %50, %57
  %59 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 0
  store float %53, float* %59, align 4
  %60 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 1
  store float %58, float* %60, align 4
  %61 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 2
  store float %42, float* %61, align 4
  %62 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 3
  store float %41, float* %62, align 4
  %63 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8
  %64 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 1
  %65 = bitcast %class.CFX_RectF* %64 to i8*
  %66 = bitcast %class.CFX_RectF* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 4 %66, i64 16, i1 false)
  %67 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 2, i32 0
  store i8 1, i8* %67, align 1
  %68 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 1
  store i8 2, i8* %68, align 8
  %69 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %69, i64 24, i1 false)
  %70 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %8) #13
  %71 = bitcast %class.IFWL_ThemeProvider* %70 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)***
  %72 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %72, i64 4
  %74 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %73, align 8
  call void %74(%class.IFWL_ThemeProvider* %70, %class.CFWL_ThemeText* nonnull dereferenceable(88) %4) #13
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar8DrawWeekEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeText, align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = bitcast %class.CFWL_ThemeText* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 88, i1 false)
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %4, %class.CFWL_Widget* %7, %class.CFGAS_GEGraphics* %1) #13
  %8 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 4
  store i8 39, i8* %8, align 4
  %9 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 1
  store i8 2, i8* %9, align 8
  %10 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 2, i32 0
  store i8 1, i8* %10, align 1
  %11 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %11, i64 24, i1 false)
  %12 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %7) #13
  %13 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 3, i32 0
  %14 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %15 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 3, i32 1
  %16 = bitcast float* %15 to i32*
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 1, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 1, i32 2
  %23 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 1, i32 3
  %24 = bitcast float* %23 to i32*
  %25 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  %26 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 3
  %27 = bitcast %class.IFWL_ThemeProvider* %12 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)***
  br label %29

28:                                               ; preds = %29
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #13
  ret void

29:                                               ; preds = %29, %3
  %30 = phi i32 [ 0, %3 ], [ %43, %29 ]
  %31 = load float, float* %13, align 4
  %32 = sitofp i32 %30 to float
  %33 = load float, float* %14, align 8
  %34 = fadd float %33, 6.000000e+00
  %35 = fmul float %34, %32
  %36 = fadd float %31, %35
  %37 = load i32, i32* %16, align 4
  %38 = load i32, i32* %18, align 4
  store float %36, float* %19, align 8
  store i32 %37, i32* %21, align 4
  store float %33, float* %22, align 8
  store i32 %38, i32* %24, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  call fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* nonnull sret %5, i32 %30)
  %39 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %26, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %40 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*** %27, align 8
  %41 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %40, i64 4
  %42 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %41, align 8
  call void %42(%class.IFWL_ThemeProvider* %12, %class.CFWL_ThemeText* nonnull dereferenceable(88) %4) #13
  %43 = add nuw nsw i32 %30, 1
  %44 = icmp eq i32 %43, 7
  br i1 %44, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11DrawDatesInEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeText, align 8
  %5 = bitcast %class.CFWL_ThemeText* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 88, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 4
  store i8 11, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 1
  store i8 2, i8* %8, align 8
  %9 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %9, i64 24, i1 false)
  %10 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %12 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.5"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %18, 2147483648
  %20 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.5"*
  br i1 %19, label %22, label %21, !prof !9

21:                                               ; preds = %3
  call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %3
  %23 = trunc i64 %18 to i32
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 3
  %28 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 1
  %29 = bitcast %class.CFX_RectF* %28 to i8*
  %30 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 3
  %31 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  %32 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 2, i32 0
  %33 = bitcast %class.IFWL_ThemeProvider* %10 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)***
  %34 = and i64 %18, 4294967295
  br label %36

35:                                               ; preds = %53, %22
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #13
  ret void

36:                                               ; preds = %58, %25
  %37 = phi %"class.std::__1::unique_ptr.5"* [ %20, %25 ], [ %59, %58 ]
  %38 = phi i64 [ 0, %25 ], [ %47, %58 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %37, i64 %38, i32 0, i32 0, i32 0
  %40 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %39, align 8
  %41 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %40, i64 0, i32 4
  %42 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %27, %"class.fxcrt::WideString"* dereferenceable(8) %41) #13
  %43 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %40, i64 0, i32 3
  %44 = bitcast %class.CFX_RectF* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %40, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %30, align 8
  %47 = add nuw nsw i64 %38, 1
  %48 = load i32, i32* %31, align 4
  %49 = zext i32 %48 to i64
  %50 = icmp eq i64 %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %36
  %52 = or i32 %46, 128
  store i32 %52, i32* %30, align 8
  br label %53

53:                                               ; preds = %51, %36
  store i8 1, i8* %32, align 1
  %54 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*** %33, align 8
  %55 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %54, i64 4
  %56 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %55, align 8
  call void %56(%class.IFWL_ThemeProvider* %10, %class.CFWL_ThemeText* nonnull dereferenceable(88) %4) #13
  %57 = icmp eq i64 %47, %34
  br i1 %57, label %35, label %58

58:                                               ; preds = %53
  %59 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %26, align 8
  br label %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeText, align 8
  %5 = bitcast %class.CFWL_ThemeText* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 88, i1 false)
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #13
  %7 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 4
  store i8 12, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 1
  store i8 2, i8* %8, align 8
  %9 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %9, i64 24, i1 false)
  %10 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #13
  %11 = bitcast %class.IFWL_ThemeProvider* %10 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)***
  %12 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %12, i64 4
  %14 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %13, align 8
  call void %14(%class.IFWL_ThemeProvider* %10, %class.CFWL_ThemeText* nonnull dereferenceable(88) %4) #13
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar9DrawTodayEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeText, align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %class.CFX_STemplate, align 4
  %7 = bitcast %class.CFWL_ThemeText* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.33", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.43" }* @__const._ZN18CFWL_MonthCalendar12DrawDatesOutEP16CFGAS_GEGraphicsRK10CFX_Matrix.params to i8*), i64 88, i1 false)
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %4, %class.CFWL_Widget* %8, %class.CFGAS_GEGraphics* %1) #13
  %9 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 4
  store i8 34, i8* %9, align 4
  %10 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 1
  store i8 1, i8* %10, align 8
  %11 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 17
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  %17 = load i32, i32* %16, align 8
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %5, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @.str.14, i64 0, i64 0), i32 %17, i32 %15, i32 %13) #13
  %18 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 3
  %19 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %18, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  %20 = bitcast %class.CFX_STemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* nonnull sret %6, %class.CFWL_Widget* %8, %"class.fxcrt::WideString"* dereferenceable(8) %18, i1 zeroext false) #13
  %21 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 26
  %22 = icmp eq %class.CFX_STemplate* %21, %6
  br i1 %22, label %23, label %29

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 26, i32 1
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = bitcast %class.CFX_STemplate* %6 to i32*
  %28 = load i32, i32* %27, align 4
  br label %38

29:                                               ; preds = %3
  %30 = bitcast %class.CFX_STemplate* %6 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %class.CFX_STemplate* %21 to i32*
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %6, i64 0, i32 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 26, i32 1
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 4
  br label %38

38:                                               ; preds = %23, %29
  %39 = phi i32 [ %28, %23 ], [ %31, %29 ]
  %40 = phi i32 [ %26, %23 ], [ %35, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %41 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 0
  %42 = load float, float* %41, align 8
  %43 = fadd float %42, 5.000000e+00
  %44 = fadd float %43, 3.000000e+00
  %45 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 1
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 3
  %48 = load float, float* %47, align 4
  %49 = fadd float %46, %48
  %50 = fadd float %49, 7.000000e+00
  %51 = fadd float %50, 2.000000e+00
  %52 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %53 = load float, float* %52, align 8
  %54 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 0
  store float %44, float* %54, align 4
  %55 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 1
  store float %51, float* %55, align 4
  %56 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 2
  store float %53, float* %56, align 4
  %57 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 3
  %58 = bitcast float* %57 to i32*
  store i32 %40, i32* %58, align 4
  %59 = fadd float %43, %53
  %60 = fadd float %59, 6.000000e+00
  %61 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 0
  store float %60, float* %61, align 4
  %62 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 1
  store float %51, float* %62, align 4
  %63 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 2
  %64 = bitcast float* %63 to i32*
  store i32 %39, i32* %64, align 4
  %65 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 3
  %66 = bitcast float* %65 to i32*
  store i32 %40, i32* %66, align 4
  %67 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9
  %68 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 0, i32 1
  %69 = bitcast %class.CFX_RectF* %68 to i8*
  %70 = bitcast %class.CFX_RectF* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 4 %70, i64 16, i1 false)
  %71 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %4, i64 0, i32 2, i32 0
  store i8 1, i8* %71, align 1
  %72 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %72, i64 24, i1 false)
  %73 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %8) #13
  %74 = bitcast %class.IFWL_ThemeProvider* %73 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)***
  %75 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %75, i64 4
  %77 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*)** %76, align 8
  call void %77(%class.IFWL_ThemeProvider* %73, %class.CFWL_ThemeText* nonnull dereferenceable(88) %4) #13
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar9SetSelectEiii(%class.CFWL_MonthCalendar*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar* %0, i32 %1, i32 %2)
  tail call void @_ZN18CFWL_MonthCalendar9AddSelDayEi(%class.CFWL_MonthCalendar* %0, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %8, align 8
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.5"* %11, %9
  br i1 %12, label %24, label %13

13:                                               ; preds = %3, %22
  %14 = phi %"class.std::__1::unique_ptr.5"* [ %15, %22 ], [ %11, %3 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %16, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %16, align 8
  %18 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %17, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %20) #13
  %21 = bitcast %"struct.CFWL_MonthCalendar::DATEINFO"* %17 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %19, %13
  %23 = icmp eq %"class.std::__1::unique_ptr.5"* %15, %9
  br i1 %23, label %24, label %13

24:                                               ; preds = %22, %3
  store %"class.std::__1::unique_ptr.5"* %9, %"class.std::__1::unique_ptr.5"** %10, align 8
  tail call void @_ZN18CFWL_MonthCalendar13ResetDateItemEv(%class.CFWL_MonthCalendar* %0)
  %25 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 1
  %28 = load float, float* %27, align 4
  %29 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %8, align 8
  %30 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %10, align 8
  %31 = icmp eq %"class.std::__1::unique_ptr.5"* %29, %30
  br i1 %31, label %70, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %34 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 1
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi i8 [ 0, %32 ], [ %67, %35 ]
  %37 = phi i32 [ 0, %32 ], [ %43, %35 ]
  %38 = phi %"class.std::__1::unique_ptr.5"* [ %29, %32 ], [ %68, %35 ]
  %39 = and i8 %36, 1
  %40 = icmp eq i8 %39, 0
  %41 = xor i1 %40, true
  %42 = zext i1 %41 to i32
  %43 = add nuw nsw i32 %37, %42
  %44 = select i1 %40, i8 %36, i8 0
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %38, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %45, align 8
  %47 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = load float, float* %33, align 8
  %51 = fadd float %50, 6.000000e+00
  %52 = fmul float %51, %49
  %53 = fadd float %26, %52
  %54 = sitofp i32 %43 to float
  %55 = load float, float* %34, align 4
  %56 = fadd float %55, 4.000000e+00
  %57 = fmul float %56, %54
  %58 = fadd float %28, %57
  %59 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %46, i64 0, i32 3, i32 0
  store float %53, float* %59, align 4
  %60 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %46, i64 0, i32 3, i32 1
  store float %58, float* %60, align 4
  %61 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %46, i64 0, i32 3, i32 2
  store float %51, float* %61, align 4
  %62 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %46, i64 0, i32 3, i32 3
  store float %56, float* %62, align 4
  %63 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %45, align 8
  %64 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 5
  %67 = select i1 %66, i8 1, i8 %44
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %38, i64 1
  %69 = icmp eq %"class.std::__1::unique_ptr.5"* %68, %30
  br i1 %69, label %70, label %35

70:                                               ; preds = %35, %24
  %71 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  %72 = load i32, i32* %5, align 8
  %73 = load i32, i32* %6, align 4
  %74 = add nsw i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [12 x i32*], [12 x i32*]* @_ZZN18CFWL_MonthCalendar11GetHeadTextEiiE6pMonth, i64 0, i64 %75
  %77 = load i32*, i32** %76, align 8, !noalias !13
  call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* nonnull sret %4, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.13, i64 0, i64 0), i32* %77, i32 %72) #13
  %78 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 11
  %79 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %78, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar9AddSelDayEi(%class.CFWL_MonthCalendar*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27
  %4 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %3, i64 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = ptrtoint i32* %5 to i64
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %5, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %14
  %11 = phi i32* [ %15, %14 ], [ %5, %2 ]
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, %1
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i32, i32* %11, i64 1
  %16 = icmp eq i32* %15, %8
  br i1 %16, label %164, label %10

17:                                               ; preds = %10, %2
  %18 = phi i32* [ %5, %2 ], [ %11, %10 ]
  %19 = icmp eq i32* %18, %8
  br i1 %19, label %164, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %22 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr.5"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, 2147483648
  br i1 %29, label %31, label %30, !prof !9

30:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

31:                                               ; preds = %20
  %32 = trunc i64 %28 to i32
  br i1 %9, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast i32** %7 to i64*
  store i64 %6, i64* %34, align 8
  br label %86

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %37 = getelementptr i32, i32* %8, i64 -1
  %38 = ptrtoint i32* %37 to i64
  %39 = sub i64 %38, %6
  %40 = and i64 %39, 4
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %56

42:                                               ; preds = %35
  %43 = load i32, i32* %5, align 4
  %44 = icmp sgt i32 %43, %32
  br i1 %44, label %54, label %45

45:                                               ; preds = %42
  %46 = add nsw i32 %43, -1
  %47 = sext i32 %46 to i64
  %48 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %36, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %48, i64 %47, i32 0, i32 0, i32 0
  %50 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %49, align 8
  %51 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %50, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, -3
  store i32 %53, i32* %51, align 8
  br label %54

54:                                               ; preds = %45, %42
  %55 = getelementptr inbounds i32, i32* %5, i64 1
  br label %56

56:                                               ; preds = %54, %35
  %57 = phi i32* [ %5, %35 ], [ %55, %54 ]
  %58 = icmp ult i64 %39, 4
  br i1 %58, label %76, label %59

59:                                               ; preds = %56, %174
  %60 = phi i32* [ %175, %174 ], [ %57, %56 ]
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, %32
  br i1 %62, label %72, label %63

63:                                               ; preds = %59
  %64 = add nsw i32 %61, -1
  %65 = sext i32 %64 to i64
  %66 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %36, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %66, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %67, align 8
  %69 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %68, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, -3
  store i32 %71, i32* %69, align 8
  br label %72

72:                                               ; preds = %63, %59
  %73 = getelementptr inbounds i32, i32* %60, i64 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, %32
  br i1 %75, label %174, label %165

76:                                               ; preds = %174, %56
  %77 = bitcast %"class.std::__1::vector.9"* %3 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* %23, align 8
  %80 = load i64, i64* %25, align 8
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = bitcast i32** %7 to i64*
  store i64 %78, i64* %83, align 8
  %84 = icmp ult i64 %82, 2147483648
  br i1 %84, label %86, label %85, !prof !9

85:                                               ; preds = %76
  tail call void @llvm.trap() #13
  unreachable

86:                                               ; preds = %33, %76
  %87 = phi i64* [ %34, %33 ], [ %83, %76 ]
  %88 = phi i64 [ %26, %33 ], [ %80, %76 ]
  %89 = phi i64 [ %6, %33 ], [ %78, %76 ]
  %90 = phi i64 [ %28, %33 ], [ %82, %76 ]
  %91 = inttoptr i64 %89 to i32*
  %92 = trunc i64 %90 to i32
  %93 = icmp slt i32 %92, %1
  br i1 %93, label %104, label %94

94:                                               ; preds = %86
  %95 = inttoptr i64 %88 to %"class.std::__1::unique_ptr.5"*
  %96 = add nsw i32 %1, -1
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %95, i64 %97, i32 0, i32 0, i32 0
  %99 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %98, align 8
  %100 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %99, i64 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = or i32 %101, 2
  store i32 %102, i32* %100, align 8
  %103 = load i32*, i32** %7, align 8
  br label %104

104:                                              ; preds = %86, %94
  %105 = phi i32* [ %91, %86 ], [ %103, %94 ]
  %106 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 2, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = icmp eq i32* %105, %107
  br i1 %108, label %112, label %109

109:                                              ; preds = %104
  store i32 %1, i32* %105, align 4
  %110 = getelementptr inbounds i32, i32* %105, i64 1
  %111 = ptrtoint i32* %110 to i64
  store i64 %111, i64* %87, align 8
  br label %164

112:                                              ; preds = %104
  %113 = ptrtoint i32* %107 to i64
  %114 = bitcast %"class.std::__1::vector.9"* %3 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %113, %115
  %117 = ashr exact i64 %116, 2
  %118 = add nsw i64 %117, 1
  %119 = icmp ugt i64 %118, 4611686018427387903
  br i1 %119, label %120, label %122

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::vector.9"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %121) #15
  unreachable

122:                                              ; preds = %112
  %123 = bitcast i32** %106 to i64*
  %124 = icmp ult i64 %117, 2305843009213693951
  br i1 %124, label %125, label %133

125:                                              ; preds = %122
  %126 = ashr exact i64 %116, 1
  %127 = icmp ult i64 %126, %118
  %128 = select i1 %127, i64 %118, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 4611686018427387903
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  tail call void @abort() #15
  unreachable

133:                                              ; preds = %130, %122
  %134 = phi i64 [ %128, %130 ], [ 4611686018427387903, %122 ]
  %135 = shl i64 %134, 2
  %136 = tail call i8* @_Znwm(i64 %135) #14
  %137 = bitcast i8* %136 to i32*
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi i32* [ %137, %133 ], [ null, %125 ]
  %141 = getelementptr inbounds i32, i32* %140, i64 %117
  %142 = getelementptr inbounds i32, i32* %140, i64 %139
  %143 = ptrtoint i32* %142 to i64
  store i32 %1, i32* %141, align 4
  %144 = getelementptr inbounds i32, i32* %141, i64 1
  %145 = ptrtoint i32* %144 to i64
  %146 = load i32*, i32** %4, align 8
  %147 = load i64, i64* %87, align 8
  %148 = ptrtoint i32* %146 to i64
  %149 = sub i64 %147, %148
  %150 = ashr exact i64 %149, 2
  %151 = sub nsw i64 0, %150
  %152 = getelementptr inbounds i32, i32* %141, i64 %151
  %153 = ptrtoint i32* %152 to i64
  %154 = icmp sgt i64 %149, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %138
  %156 = bitcast i32* %152 to i8*
  %157 = bitcast i32* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %156, i8* align 4 %157, i64 %149, i1 false) #13
  %158 = load i32*, i32** %4, align 8
  br label %159

159:                                              ; preds = %155, %138
  %160 = phi i32* [ %146, %138 ], [ %158, %155 ]
  store i64 %153, i64* %114, align 8
  store i64 %145, i64* %87, align 8
  store i64 %143, i64* %123, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %159
  %163 = bitcast i32* %160 to i8*
  tail call void @_ZdlPv(i8* %163) #14
  br label %164

164:                                              ; preds = %14, %17, %162, %159, %109
  ret void

165:                                              ; preds = %72
  %166 = add nsw i32 %74, -1
  %167 = sext i32 %166 to i64
  %168 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %36, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %168, i64 %167, i32 0, i32 0, i32 0
  %170 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %169, align 8
  %171 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %170, i64 0, i32 2
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, -3
  store i32 %173, i32* %171, align 8
  br label %174

174:                                              ; preds = %165, %72
  %175 = getelementptr inbounds i32, i32* %60, i64 2
  %176 = icmp eq i32* %175, %8
  br i1 %176, label %76, label %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #1

declare %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground*) unnamed_addr #2

declare void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11GetHeadTextEii(%"class.fxcrt::WideString"* noalias sret, %class.CFWL_MonthCalendar* nocapture readnone, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = add nsw i32 %3, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [12 x i32*], [12 x i32*]* @_ZZN18CFWL_MonthCalendar11GetHeadTextEiiE6pMonth, i64 0, i64 %6
  %8 = load i32*, i32** %7, align 8
  tail call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret %0, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.13, i64 0, i64 0), i32* %8, i32 %2) #13
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* sret, %class.CFWL_Widget*, %"class.fxcrt::WideString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar12CalcHeadSizeEv(%class.CFWL_MonthCalendar* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 2
  %3 = load float, float* %2, align 8
  %4 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 24, i32 0
  %5 = load float, float* %4, align 8
  %6 = fsub float %3, %5
  %7 = fmul float %6, 5.000000e-01
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %9 = load float, float* %8, align 8
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 24, i32 1
  %11 = load float, float* %10, align 4
  %12 = fsub float %9, %11
  %13 = fmul float %12, 5.000000e-01
  %14 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 0
  %15 = load float, float* %14, align 8
  %16 = fadd float %7, %15
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 1
  %18 = load float, float* %17, align 4
  %19 = fadd float %18, 7.000000e+00
  %20 = fadd float %19, 2.000000e+00
  %21 = fadd float %13, %20
  %22 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 0
  store float %16, float* %22, align 4
  %23 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 1
  store float %21, float* %23, align 4
  %24 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 2
  store float %5, float* %24, align 4
  %25 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 8, i32 3
  store float %11, float* %25, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi(%"class.fxcrt::WideString"* noalias sret, i32) unnamed_addr #0 {
  %3 = icmp ult i32 %1, 7
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds [7 x i32*], [7 x i32*]* @switch.table._ZN12_GLOBAL__N_123GetAbbreviatedDayOfWeekEi, i64 0, i64 %5
  %7 = load i32*, i32** %6, align 8
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i32* [ %7, %4 ], [ getelementptr inbounds ([1 x i32], [1 x i32]* @.str.22, i64 0, i64 0), %2 ]
  tail call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* %0, i32* %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar12GetTodayTextEiii(%"class.fxcrt::WideString"* noalias sret, %class.CFWL_MonthCalendar* nocapture readnone, i32, i32, i32) local_unnamed_addr #0 align 2 {
  tail call void (%"class.fxcrt::WideString"*, i32*, ...) @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret %0, i32* getelementptr inbounds ([16 x i32], [16 x i32]* @.str.14, i64 0, i64 0), i32 %4, i32 %3, i32 %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar13CalcTodaySizeEv(%class.CFWL_MonthCalendar* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28, i32 0
  %3 = load float, float* %2, align 8
  %4 = fadd float %3, 5.000000e+00
  %5 = fadd float %4, 3.000000e+00
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 3
  %9 = load float, float* %8, align 4
  %10 = fadd float %7, %9
  %11 = fadd float %10, 7.000000e+00
  %12 = fadd float %11, 2.000000e+00
  %13 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %14 = load float, float* %13, align 8
  %15 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 26
  %16 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 26, i32 1
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 0
  store float %5, float* %19, align 4
  %20 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 1
  store float %12, float* %20, align 4
  %21 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 2
  store float %14, float* %21, align 4
  %22 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 10, i32 3
  %23 = bitcast float* %22 to i32*
  store i32 %18, i32* %23, align 4
  %24 = fadd float %4, %14
  %25 = fadd float %24, 6.000000e+00
  %26 = bitcast %class.CFX_STemplate* %15 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 0
  store float %25, float* %28, align 4
  %29 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 1
  store float %12, float* %29, align 4
  %30 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 2
  %31 = bitcast float* %30 to i32*
  store i32 %27, i32* %31, align 4
  %32 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 3
  %33 = bitcast float* %32 to i32*
  store i32 %18, i32* %33, align 4
  ret void
}

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideString6FormatEPKwz(%"class.fxcrt::WideString"* sret, i32*, ...) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11CalDateItemEv(%class.CFWL_MonthCalendar* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 1
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %6, align 8
  %8 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.5"* %7, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 0
  %13 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 25, i32 1
  br label %15

14:                                               ; preds = %15, %1
  ret void

15:                                               ; preds = %11, %15
  %16 = phi i8 [ 0, %11 ], [ %47, %15 ]
  %17 = phi i32 [ 0, %11 ], [ %23, %15 ]
  %18 = phi %"class.std::__1::unique_ptr.5"* [ %7, %11 ], [ %48, %15 ]
  %19 = and i8 %16, 1
  %20 = icmp eq i8 %19, 0
  %21 = xor i1 %20, true
  %22 = zext i1 %21 to i32
  %23 = add nuw nsw i32 %17, %22
  %24 = select i1 %20, i8 %16, i8 0
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %18, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %25, align 8
  %27 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sitofp i32 %28 to float
  %30 = load float, float* %12, align 8
  %31 = fadd float %30, 6.000000e+00
  %32 = fmul float %31, %29
  %33 = fadd float %3, %32
  %34 = sitofp i32 %23 to float
  %35 = load float, float* %13, align 4
  %36 = fadd float %35, 4.000000e+00
  %37 = fmul float %36, %34
  %38 = fadd float %5, %37
  %39 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %26, i64 0, i32 3, i32 0
  store float %33, float* %39, align 4
  %40 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %26, i64 0, i32 3, i32 1
  store float %38, float* %40, align 4
  %41 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %26, i64 0, i32 3, i32 2
  store float %31, float* %41, align 4
  %42 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %26, i64 0, i32 3, i32 3
  store float %36, float* %42, align 4
  %43 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %25, align 8
  %44 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 5
  %47 = select i1 %46, i8 1, i8 %24
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %18, i64 1
  %49 = icmp eq %"class.std::__1::unique_ptr.5"* %48, %9
  br i1 %49, label %14, label %15
}

declare { i64, i32 } @_ZN12CFX_DateTime3NowEv() local_unnamed_addr #1

declare zeroext i8 @_Z14FX_DaysInMonthih(i32, i8 zeroext) local_unnamed_addr #1

declare i32 @_ZNK12CFX_DateTime12GetDayOfWeekEv(%class.CFX_DateTime*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar9NextMonthEv(%class.CFWL_MonthCalendar*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 11
  %7 = add nsw i32 %5, 1
  %8 = zext i1 %6 to i32
  %9 = add nsw i32 %3, %8
  %10 = select i1 %6, i32 1, i32 %7
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %3, %12
  br i1 %13, label %26, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %3, %12
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %5, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = icmp eq i32 %5, %18
  br i1 %21, label %22, label %27

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %27

26:                                               ; preds = %16, %1, %22
  store i32 %9, i32* %2, align 8
  store i32 %10, i32* %4, align 4
  tail call void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar* %0, i32 %9, i32 %10)
  br label %27

27:                                               ; preds = %14, %20, %22, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar9PrevMonthEv(%class.CFWL_MonthCalendar*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 2
  %7 = add nsw i32 %5, -1
  %8 = zext i1 %6 to i32
  %9 = sub i32 %3, %8
  %10 = select i1 %6, i32 12, i32 %7
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 22, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %3, %12
  br i1 %13, label %26, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %3, %12
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 22, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %5, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = icmp eq i32 %5, %18
  br i1 %21, label %22, label %27

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 22, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %27

26:                                               ; preds = %16, %1, %22
  store i32 %9, i32* %2, align 8
  store i32 %10, i32* %4, align 4
  tail call void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar* %0, i32 %9, i32 %10)
  br label %27

27:                                               ; preds = %14, %20, %22, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar12RemoveSelDayEv(%class.CFWL_MonthCalendar* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %3 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.5"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, 2147483648
  br i1 %10, label %12, label %11, !prof !9

11:                                               ; preds = %1
  tail call void @llvm.trap() #13
  unreachable

12:                                               ; preds = %1
  %13 = trunc i64 %9 to i32
  %14 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27
  %15 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = ptrtoint i32* %16 to i64
  %18 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %16, %19
  br i1 %20, label %48, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %23 = getelementptr i32, i32* %19, i64 -1
  %24 = ptrtoint i32* %23 to i64
  %25 = sub i64 %24, %17
  %26 = and i64 %25, 4
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %21
  %29 = load i32, i32* %16, align 4
  %30 = icmp sgt i32 %29, %13
  br i1 %30, label %40, label %31

31:                                               ; preds = %28
  %32 = add nsw i32 %29, -1
  %33 = sext i32 %32 to i64
  %34 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %22, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %34, i64 %33, i32 0, i32 0, i32 0
  %36 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %35, align 8
  %37 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, -3
  store i32 %39, i32* %37, align 8
  br label %40

40:                                               ; preds = %31, %28
  %41 = getelementptr inbounds i32, i32* %16, i64 1
  br label %42

42:                                               ; preds = %40, %21
  %43 = phi i32* [ %16, %21 ], [ %41, %40 ]
  %44 = icmp ult i64 %25, 4
  br i1 %44, label %45, label %51

45:                                               ; preds = %77, %42
  %46 = bitcast %"class.std::__1::vector.9"* %14 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %12, %45
  %49 = phi i64 [ %47, %45 ], [ %17, %12 ]
  %50 = bitcast i32** %18 to i64*
  store i64 %49, i64* %50, align 8
  ret void

51:                                               ; preds = %42, %77
  %52 = phi i32* [ %78, %77 ], [ %43, %42 ]
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, %13
  br i1 %54, label %64, label %55

55:                                               ; preds = %51
  %56 = add nsw i32 %53, -1
  %57 = sext i32 %56 to i64
  %58 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %22, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %58, i64 %57, i32 0, i32 0, i32 0
  %60 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %59, align 8
  %61 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, -3
  store i32 %63, i32* %61, align 8
  br label %64

64:                                               ; preds = %51, %55
  %65 = getelementptr inbounds i32, i32* %52, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, %13
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = add nsw i32 %66, -1
  %70 = sext i32 %69 to i64
  %71 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %22, align 8
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %71, i64 %70, i32 0, i32 0, i32 0
  %73 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %72, align 8
  %74 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %73, i64 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, -3
  store i32 %76, i32* %74, align 8
  br label %77

77:                                               ; preds = %68, %64
  %78 = getelementptr inbounds i32, i32* %52, i64 2
  %79 = icmp eq i32* %78, %19
  br i1 %79, label %45, label %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11JumpToTodayEv(%class.CFWL_MonthCalendar*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 16
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %3, %5
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 17
  %8 = load i32, i32* %7, align 4
  br i1 %6, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %1, %9
  store i32 %3, i32* %4, align 8
  %14 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  store i32 %8, i32* %14, align 4
  tail call void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar* %0, i32 %3, i32 %8)
  %15 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  br label %35

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  %18 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %19, %21
  br i1 %22, label %32, label %23

23:                                               ; preds = %16
  %24 = load i32, i32* %17, align 4
  br label %25

25:                                               ; preds = %29, %23
  %26 = phi i32* [ %19, %23 ], [ %30, %29 ]
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %24
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %26, i64 1
  %31 = icmp eq i32* %30, %21
  br i1 %31, label %38, label %25

32:                                               ; preds = %25, %16
  %33 = phi i32* [ %19, %16 ], [ %26, %25 ]
  %34 = icmp eq i32* %33, %21
  br i1 %34, label %35, label %40

35:                                               ; preds = %32, %13
  %36 = phi i32* [ %15, %13 ], [ %17, %32 ]
  %37 = load i32, i32* %36, align 8
  br label %38

38:                                               ; preds = %29, %35
  %39 = phi i32 [ %37, %35 ], [ %24, %29 ]
  tail call void @_ZN18CFWL_MonthCalendar9AddSelDayEi(%class.CFWL_MonthCalendar* %0, i32 %39)
  br label %40

40:                                               ; preds = %38, %32
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK18CFWL_MonthCalendar13GetDayAtPointERK13CFX_PTemplateIfE(%class.CFWL_MonthCalendar* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.5"* %4, %6
  br i1 %7, label %39, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  br label %13

13:                                               ; preds = %8, %35
  %14 = phi i32 [ 1, %8 ], [ %36, %35 ]
  %15 = phi %"class.std::__1::unique_ptr.5"* [ %4, %8 ], [ %37, %35 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %16, align 8
  %18 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %17, i64 0, i32 3, i32 0
  %19 = load float, float* %18, align 4
  %20 = fcmp ult float %10, %19
  br i1 %20, label %35, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %17, i64 0, i32 3, i32 2
  %23 = load float, float* %22, align 4
  %24 = fadd float %19, %23
  %25 = fcmp olt float %10, %24
  br i1 %25, label %26, label %35

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %17, i64 0, i32 3, i32 1
  %28 = load float, float* %27, align 4
  %29 = fcmp ult float %12, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %17, i64 0, i32 3, i32 3
  %32 = load float, float* %31, align 4
  %33 = fadd float %28, %32
  %34 = fcmp olt float %12, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %13, %21, %26, %30
  %36 = add nuw nsw i32 %14, 1
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %15, i64 1
  %38 = icmp eq %"class.std::__1::unique_ptr.5"* %37, %6
  br i1 %38, label %39, label %13

39:                                               ; preds = %35, %30, %2
  %40 = phi i32 [ -1, %2 ], [ %14, %30 ], [ -1, %35 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN18CFWL_MonthCalendar10GetDayRectEi(%class.CFWL_MonthCalendar* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 1
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %6 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.5"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  %14 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.5"*
  br i1 %13, label %16, label %15, !prof !9

15:                                               ; preds = %4
  tail call void @llvm.trap() #13
  unreachable

16:                                               ; preds = %4
  %17 = trunc i64 %12 to i32
  %18 = icmp slt i32 %17, %1
  br i1 %18, label %32, label %19

19:                                               ; preds = %16
  %20 = add nsw i32 %1, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %14, i64 %21, i32 0, i32 0, i32 0
  %23 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %22, align 8
  %24 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %23, i64 0, i32 3
  %27 = bitcast %class.CFX_RectF* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4
  %29 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %23, i64 0, i32 3, i32 2
  %30 = bitcast float* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  br label %32

32:                                               ; preds = %19, %2, %16, %25
  %33 = phi <2 x float> [ %31, %25 ], [ zeroinitializer, %16 ], [ zeroinitializer, %2 ], [ zeroinitializer, %19 ]
  %34 = phi <2 x float> [ %28, %25 ], [ zeroinitializer, %16 ], [ zeroinitializer, %2 ], [ zeroinitializer, %19 ]
  %35 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %34, 0
  %36 = insertvalue { <2 x float>, <2 x float> } %35, <2 x float> %33, 1
  ret { <2 x float>, <2 x float> } %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar16OnProcessMessageEP12CFWL_Message(%class.CFWL_MonthCalendar*, %class.CFWL_Message*) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %79 [
    i32 4, label %6
    i32 1, label %6
    i32 2, label %20
  ]

6:                                                ; preds = %2, %2
  %7 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0, i32 9
  %8 = bitcast %"class.cppgc::internal::BasicMember.3"* %7 to %class.CFWL_Widget**
  %9 = load %class.CFWL_Widget*, %class.CFWL_Widget** %8, align 8
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %9, i64 0, i32 8
  %11 = bitcast %"class.cppgc::internal::BasicMember.2"* %10 to %class.IFWL_WidgetDelegate**
  %12 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %11, align 8
  %13 = icmp eq %class.IFWL_WidgetDelegate* %12, null
  %14 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %9, i64 0, i32 0
  %15 = select i1 %13, %class.IFWL_WidgetDelegate* %14, %class.IFWL_WidgetDelegate* %12
  %16 = bitcast %class.IFWL_WidgetDelegate* %15 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %17 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %17, i64 3
  %19 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %18, align 8
  tail call void %19(%class.IFWL_WidgetDelegate* %15, %class.CFWL_Message* %1) #13
  br label %79

20:                                               ; preds = %2
  %21 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouse*
  %22 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %23 = bitcast %class.CFWL_Message* %22 to i8*
  %24 = load i8, i8* %23, align 8
  switch i8 %24, label %79 [
    i8 0, label %25
    i8 1, label %26
    i8 6, label %27
    i8 8, label %28
  ]

25:                                               ; preds = %20
  tail call void @_ZN18CFWL_MonthCalendar13OnLButtonDownEP17CFWL_MessageMouse(%class.CFWL_MonthCalendar* %0, %class.CFWL_MessageMouse* %21)
  br label %79

26:                                               ; preds = %20
  tail call void @_ZN18CFWL_MonthCalendar11OnLButtonUpEP17CFWL_MessageMouse(%class.CFWL_MonthCalendar* %0, %class.CFWL_MessageMouse* %21)
  br label %79

27:                                               ; preds = %20
  tail call void @_ZN18CFWL_MonthCalendar11OnMouseMoveEP17CFWL_MessageMouse(%class.CFWL_MonthCalendar* %0, %class.CFWL_MessageMouse* %21)
  br label %79

28:                                               ; preds = %20
  %29 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_RectF*
  %30 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %79, label %33

33:                                               ; preds = %28
  %34 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %36 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr.5"** %36 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -1, i64 16, i1 false) #13
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, 2147483648
  %44 = inttoptr i64 %40 to %"class.std::__1::unique_ptr.5"*
  br i1 %43, label %46, label %45, !prof !9

45:                                               ; preds = %33
  tail call void @llvm.trap() #13
  unreachable

46:                                               ; preds = %33
  %47 = trunc i64 %42 to i32
  %48 = icmp sgt i32 %31, %47
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = add nsw i32 %31, -1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %44, i64 %51, i32 0, i32 0, i32 0
  %53 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %52, align 8
  %54 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %53, i64 0, i32 3
  %57 = bitcast %class.CFX_RectF* %56 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 4
  %59 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %53, i64 0, i32 3, i32 2
  %60 = bitcast float* %59 to i64*
  %61 = load i64, i64* %60, align 4
  br label %62

62:                                               ; preds = %55, %49, %46
  %63 = phi i64 [ %61, %55 ], [ 0, %46 ], [ 0, %49 ]
  %64 = phi <2 x float> [ %58, %55 ], [ zeroinitializer, %46 ], [ zeroinitializer, %49 ]
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %64, <2 x float>* %65, align 8
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %67 = bitcast <2 x float>* %66 to i64*
  store i64 %63, i64* %67, align 8
  store i32 -1, i32* %30, align 4
  %68 = trunc i64 %63 to i32
  %69 = bitcast i32 %68 to float
  %70 = fcmp ole float %69, 0.000000e+00
  %71 = lshr i64 %63, 32
  %72 = trunc i64 %71 to i32
  %73 = bitcast i32 %72 to float
  %74 = fcmp ole float %73, 0.000000e+00
  %75 = or i1 %70, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %62
  %77 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %77, %class.CFX_RectF* nonnull dereferenceable(16) %29) #13
  br label %78

78:                                               ; preds = %76, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %79

79:                                               ; preds = %78, %28, %25, %26, %27, %20, %2, %6
  %80 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %81 = load %class.CFWL_Widget*, %class.CFWL_Widget** %80, align 8
  %82 = icmp eq %class.CFWL_Widget* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message(%class.CFWL_Widget* %84, %class.CFWL_Message* %1) #13
  br label %85

85:                                               ; preds = %79, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar13OnLButtonDownEP17CFWL_MessageMouse(%class.CFWL_MonthCalendar*, %class.CFWL_MessageMouse* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp ult float %4, %6
  br i1 %7, label %54, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 2
  %10 = load float, float* %9, align 4
  %11 = fadd float %6, %10
  %12 = fcmp olt float %4, %11
  br i1 %12, label %13, label %54

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 1
  %17 = load float, float* %16, align 4
  %18 = fcmp ult float %15, %17
  br i1 %18, label %54, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 3
  %21 = load float, float* %20, align 4
  %22 = fadd float %17, %21
  %23 = fcmp olt float %15, %22
  br i1 %23, label %24, label %54

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 20
  store i32 1024, i32* %25, align 8
  %26 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 2
  %31 = add nsw i32 %29, -1
  %32 = zext i1 %30 to i32
  %33 = sub i32 %27, %32
  %34 = select i1 %30, i32 12, i32 %31
  %35 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 22, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %27, %36
  br i1 %37, label %50, label %38

38:                                               ; preds = %24
  %39 = icmp eq i32 %27, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %38
  %41 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 22, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %29, %42
  br i1 %43, label %50, label %44

44:                                               ; preds = %40
  %45 = icmp eq i32 %29, %42
  br i1 %45, label %46, label %51

46:                                               ; preds = %44
  %47 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 22, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %50, label %51

50:                                               ; preds = %46, %40, %24
  store i32 %33, i32* %26, align 8
  store i32 %34, i32* %28, align 4
  tail call void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar* %0, i32 %33, i32 %34) #13
  br label %51

51:                                               ; preds = %38, %44, %46, %50
  %52 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  %53 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %52, %class.CFX_RectF* dereferenceable(16) %53) #13
  br label %168

54:                                               ; preds = %2, %8, %13, %19
  %55 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 0
  %56 = load float, float* %55, align 4
  %57 = fcmp ult float %4, %56
  br i1 %57, label %106, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 2
  %60 = load float, float* %59, align 4
  %61 = fadd float %56, %60
  %62 = fcmp olt float %4, %61
  br i1 %62, label %63, label %106

63:                                               ; preds = %58
  %64 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 1
  %67 = load float, float* %66, align 4
  %68 = fcmp ult float %65, %67
  br i1 %68, label %106, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 3
  %71 = load float, float* %70, align 4
  %72 = fadd float %67, %71
  %73 = fcmp olt float %65, %72
  br i1 %73, label %74, label %106

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 21
  %76 = load i32, i32* %75, align 4
  %77 = or i32 %76, 1024
  store i32 %77, i32* %75, align 4
  %78 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, 11
  %83 = add nsw i32 %81, 1
  %84 = zext i1 %82 to i32
  %85 = add nsw i32 %79, %84
  %86 = select i1 %82, i32 1, i32 %83
  %87 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %79, %88
  br i1 %89, label %102, label %90

90:                                               ; preds = %74
  %91 = icmp eq i32 %79, %88
  br i1 %91, label %92, label %103

92:                                               ; preds = %90
  %93 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %81, %94
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = icmp eq i32 %81, %94
  br i1 %97, label %98, label %103

98:                                               ; preds = %96
  %99 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 23, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %100, 1
  br i1 %101, label %102, label %103

102:                                              ; preds = %98, %92, %74
  store i32 %85, i32* %78, align 8
  store i32 %86, i32* %80, align 4
  tail call void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar* %0, i32 %85, i32 %86) #13
  br label %103

103:                                              ; preds = %90, %96, %98, %102
  %104 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  %105 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %104, %class.CFX_RectF* dereferenceable(16) %105) #13
  br label %168

106:                                              ; preds = %54, %58, %63, %69
  %107 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 0
  %108 = load float, float* %107, align 4
  %109 = fcmp ult float %4, %108
  br i1 %109, label %168, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 2
  %112 = load float, float* %111, align 4
  %113 = fadd float %108, %112
  %114 = fcmp olt float %4, %113
  br i1 %114, label %115, label %168

115:                                              ; preds = %110
  %116 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %117 = load float, float* %116, align 4
  %118 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 1
  %119 = load float, float* %118, align 4
  %120 = fcmp ult float %117, %119
  br i1 %120, label %168, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 3
  %123 = load float, float* %122, align 4
  %124 = fadd float %119, %123
  %125 = fcmp olt float %117, %124
  br i1 %125, label %126, label %168

126:                                              ; preds = %121
  %127 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 16
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %128, %130
  %132 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 17
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %138

134:                                              ; preds = %126
  %135 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %133, %136
  br i1 %137, label %141, label %138

138:                                              ; preds = %134, %126
  store i32 %128, i32* %129, align 8
  %139 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  store i32 %133, i32* %139, align 4
  tail call void @_ZN18CFWL_MonthCalendar13ChangeToMonthEii(%class.CFWL_MonthCalendar* %0, i32 %128, i32 %133) #13
  %140 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  br label %160

141:                                              ; preds = %134
  %142 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 18
  %143 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 1
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %144, %146
  br i1 %147, label %157, label %148

148:                                              ; preds = %141
  %149 = load i32, i32* %142, align 4
  br label %150

150:                                              ; preds = %154, %148
  %151 = phi i32* [ %144, %148 ], [ %155, %154 ]
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, %149
  br i1 %153, label %157, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp eq i32* %155, %146
  br i1 %156, label %163, label %150

157:                                              ; preds = %150, %141
  %158 = phi i32* [ %144, %141 ], [ %151, %150 ]
  %159 = icmp eq i32* %158, %146
  br i1 %159, label %160, label %165

160:                                              ; preds = %157, %138
  %161 = phi i32* [ %140, %138 ], [ %142, %157 ]
  %162 = load i32, i32* %161, align 8
  br label %163

163:                                              ; preds = %154, %160
  %164 = phi i32 [ %162, %160 ], [ %149, %154 ]
  tail call void @_ZN18CFWL_MonthCalendar9AddSelDayEi(%class.CFWL_MonthCalendar* %0, i32 %164) #13
  br label %165

165:                                              ; preds = %163, %157
  %166 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  %167 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 28
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %166, %class.CFX_RectF* dereferenceable(16) %167) #13
  br label %168

168:                                              ; preds = %106, %110, %115, %103, %165, %121, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11OnLButtonUpEP17CFWL_MessageMouse(%class.CFWL_MonthCalendar*, %class.CFWL_MessageMouse* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4
  %4 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fcmp ult float %5, %7
  br i1 %8, label %28, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 2
  %11 = load float, float* %10, align 4
  %12 = fadd float %7, %11
  %13 = fcmp olt float %5, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp ult float %16, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 4, i32 3
  %22 = load float, float* %21, align 4
  %23 = fadd float %18, %22
  %24 = fcmp olt float %16, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 20
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %27, %class.CFX_RectF* dereferenceable(16) %3) #13
  br label %133

28:                                               ; preds = %2, %9, %14, %20
  %29 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5
  %30 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %29, i64 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = fcmp ult float %5, %31
  br i1 %32, label %52, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 2
  %35 = load float, float* %34, align 4
  %36 = fadd float %31, %35
  %37 = fcmp olt float %5, %36
  br i1 %37, label %38, label %52

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 1
  %42 = load float, float* %41, align 4
  %43 = fcmp ult float %40, %42
  br i1 %43, label %52, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 5, i32 3
  %46 = load float, float* %45, align 4
  %47 = fadd float %42, %46
  %48 = fcmp olt float %40, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 21
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %51, %class.CFX_RectF* dereferenceable(16) %29) #13
  br label %133

52:                                               ; preds = %28, %33, %38, %44
  %53 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 0
  %54 = load float, float* %53, align 4
  %55 = fcmp ult float %5, %54
  br i1 %55, label %72, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 2
  %58 = load float, float* %57, align 4
  %59 = fadd float %54, %58
  %60 = fcmp olt float %5, %59
  br i1 %60, label %61, label %72

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 1
  %65 = load float, float* %64, align 4
  %66 = fcmp ult float %63, %65
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 9, i32 3
  %69 = load float, float* %68, align 4
  %70 = fadd float %65, %69
  %71 = fcmp olt float %63, %70
  br i1 %71, label %133, label %72

72:                                               ; preds = %52, %56, %61, %67
  %73 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 27, i32 0, i32 1
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %74, %76
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  %79 = load i32, i32* %74, align 4
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i32 [ 0, %72 ], [ %79, %78 ]
  %82 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %83 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %82, align 8
  %84 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %85 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %84, align 8
  %86 = icmp eq %"class.std::__1::unique_ptr.5"* %83, %85
  %87 = ptrtoint %"class.std::__1::unique_ptr.5"* %85 to i64
  %88 = ptrtoint %"class.std::__1::unique_ptr.5"* %83 to i64
  br i1 %86, label %133, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %91 = load float, float* %90, align 4
  br label %92

92:                                               ; preds = %114, %89
  %93 = phi i32 [ 1, %89 ], [ %115, %114 ]
  %94 = phi %"class.std::__1::unique_ptr.5"* [ %83, %89 ], [ %116, %114 ]
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %95, align 8
  %97 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %96, i64 0, i32 3, i32 0
  %98 = load float, float* %97, align 4
  %99 = fcmp ult float %5, %98
  br i1 %99, label %114, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %96, i64 0, i32 3, i32 2
  %102 = load float, float* %101, align 4
  %103 = fadd float %98, %102
  %104 = fcmp olt float %5, %103
  br i1 %104, label %105, label %114

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %96, i64 0, i32 3, i32 1
  %107 = load float, float* %106, align 4
  %108 = fcmp ult float %91, %107
  br i1 %108, label %114, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %96, i64 0, i32 3, i32 3
  %111 = load float, float* %110, align 4
  %112 = fadd float %107, %111
  %113 = fcmp olt float %91, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %109, %105, %100, %92
  %115 = add nuw nsw i32 %93, 1
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %94, i64 1
  %117 = icmp eq %"class.std::__1::unique_ptr.5"* %116, %85
  br i1 %117, label %133, label %92

118:                                              ; preds = %109
  %119 = icmp sgt i32 %81, 0
  br i1 %119, label %120, label %125

120:                                              ; preds = %118
  %121 = sub i64 %87, %88
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, 2147483648
  br i1 %123, label %125, label %124, !prof !9

124:                                              ; preds = %120
  tail call void @llvm.trap() #13
  unreachable

125:                                              ; preds = %120, %118
  tail call void @_ZN18CFWL_MonthCalendar9AddSelDayEi(%class.CFWL_MonthCalendar* %0, i32 %93)
  %126 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0, i32 9
  %127 = bitcast %"class.cppgc::internal::BasicMember.3"* %126 to %class.CFWL_DateTimePicker**
  %128 = load %class.CFWL_DateTimePicker*, %class.CFWL_DateTimePicker** %127, align 8
  %129 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 14
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 15
  %132 = load i32, i32* %131, align 4
  tail call void @_ZN19CFWL_DateTimePicker17ProcessSelChangedEiii(%class.CFWL_DateTimePicker* %128, i32 %130, i32 %132, i32 %93) #13
  tail call void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker* %128, i1 zeroext false) #13
  br label %133

133:                                              ; preds = %114, %80, %125, %67, %49, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar11OnMouseMoveEP17CFWL_MessageMouse(%class.CFWL_MonthCalendar*, %class.CFWL_MessageMouse* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_RectF, align 8
  %4 = bitcast %class.CFX_RectF* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 0
  %6 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 1
  %7 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 2
  %8 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 0
  %12 = load float, float* %11, align 4
  %13 = fcmp ult float %10, %12
  br i1 %13, label %173, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 2
  %16 = load float, float* %15, align 4
  %17 = fadd float %12, %16
  %18 = fcmp olt float %10, %17
  br i1 %18, label %19, label %173

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp ult float %21, %23
  br i1 %24, label %173, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 6, i32 3
  %27 = load float, float* %26, align 4
  %28 = fadd float %23, %27
  %29 = fcmp olt float %21, %28
  br i1 %29, label %30, label %173

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 0
  %32 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %31, align 8
  %33 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.5"* %32, %34
  %36 = ptrtoint %"class.std::__1::unique_ptr.5"* %34 to i64
  %37 = ptrtoint %"class.std::__1::unique_ptr.5"* %32 to i64
  br i1 %35, label %64, label %38

38:                                               ; preds = %30, %60
  %39 = phi i32 [ %61, %60 ], [ 1, %30 ]
  %40 = phi %"class.std::__1::unique_ptr.5"* [ %62, %60 ], [ %32, %30 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %41, align 8
  %43 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %42, i64 0, i32 3, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp ult float %10, %44
  br i1 %45, label %60, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %42, i64 0, i32 3, i32 2
  %48 = load float, float* %47, align 4
  %49 = fadd float %44, %48
  %50 = fcmp olt float %10, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %42, i64 0, i32 3, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp ult float %21, %53
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %42, i64 0, i32 3, i32 3
  %57 = load float, float* %56, align 4
  %58 = fadd float %53, %57
  %59 = fcmp olt float %21, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %55, %51, %46, %38
  %61 = add nuw nsw i32 %39, 1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %40, i64 1
  %63 = icmp eq %"class.std::__1::unique_ptr.5"* %62, %34
  br i1 %63, label %64, label %38

64:                                               ; preds = %55, %60, %30
  %65 = phi i32 [ -1, %30 ], [ -1, %60 ], [ %39, %55 ]
  %66 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %65
  br i1 %68, label %172, label %69

69:                                               ; preds = %64
  %70 = icmp sgt i32 %67, 0
  br i1 %70, label %71, label %107

71:                                               ; preds = %69
  %72 = sub i64 %36, %37
  %73 = ashr exact i64 %72, 3
  %74 = icmp ult i64 %73, 2147483648
  br i1 %74, label %76, label %75, !prof !9

75:                                               ; preds = %71
  tail call void @llvm.trap() #13
  unreachable

76:                                               ; preds = %71
  %77 = trunc i64 %73 to i32
  %78 = icmp sgt i32 %67, %77
  br i1 %78, label %92, label %79

79:                                               ; preds = %76
  %80 = add nsw i32 %67, -1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %32, i64 %81, i32 0, i32 0, i32 0
  %83 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %82, align 8
  %84 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %83, null
  br i1 %84, label %92, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %83, i64 0, i32 3
  %87 = bitcast %class.CFX_RectF* %86 to i64*
  %88 = load i64, i64* %87, align 4
  %89 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %83, i64 0, i32 3, i32 2
  %90 = bitcast float* %89 to i64*
  %91 = load i64, i64* %90, align 4
  br label %92

92:                                               ; preds = %76, %79, %85
  %93 = phi i64 [ %91, %85 ], [ 0, %76 ], [ 0, %79 ]
  %94 = phi i64 [ %88, %85 ], [ 0, %76 ], [ 0, %79 ]
  %95 = bitcast %class.CFX_RectF* %3 to i64*
  store i64 %94, i64* %95, align 8
  %96 = bitcast float* %7 to i64*
  store i64 %93, i64* %96, align 8
  %97 = trunc i64 %93 to i32
  %98 = bitcast i32 %97 to float
  %99 = lshr i64 %93, 32
  %100 = trunc i64 %99 to i32
  %101 = bitcast i32 %100 to float
  %102 = trunc i64 %94 to i32
  %103 = bitcast i32 %102 to float
  %104 = lshr i64 %94, 32
  %105 = trunc i64 %104 to i32
  %106 = bitcast i32 %105 to float
  br label %107

107:                                              ; preds = %92, %69
  %108 = phi float [ %101, %92 ], [ 0.000000e+00, %69 ]
  %109 = phi float [ %98, %92 ], [ 0.000000e+00, %69 ]
  %110 = phi float [ %106, %92 ], [ 0.000000e+00, %69 ]
  %111 = phi float [ %103, %92 ], [ 0.000000e+00, %69 ]
  %112 = icmp sgt i32 %65, 0
  br i1 %112, label %113, label %169

113:                                              ; preds = %107
  %114 = sub i64 %36, %37
  %115 = ashr exact i64 %114, 3
  %116 = icmp ult i64 %115, 2147483648
  br i1 %116, label %118, label %117, !prof !9

117:                                              ; preds = %113
  tail call void @llvm.trap() #13
  unreachable

118:                                              ; preds = %113
  %119 = trunc i64 %115 to i32
  %120 = icmp sgt i32 %65, %119
  br i1 %120, label %135, label %121

121:                                              ; preds = %118
  %122 = add nsw i32 %65, -1
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %32, i64 %123, i32 0, i32 0, i32 0
  %125 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %124, align 8
  %126 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %125, null
  br i1 %126, label %135, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %125, i64 0, i32 3
  %129 = bitcast %class.CFX_RectF* %128 to <2 x float>*
  %130 = load <2 x float>, <2 x float>* %129, align 4
  %131 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %125, i64 0, i32 3, i32 2
  %132 = bitcast float* %131 to <2 x float>*
  %133 = load <2 x float>, <2 x float>* %132, align 4
  %134 = bitcast <2 x float> %133 to i64
  br label %135

135:                                              ; preds = %118, %121, %127
  %136 = phi i64 [ %134, %127 ], [ 0, %118 ], [ 0, %121 ]
  %137 = phi <2 x float> [ %133, %127 ], [ zeroinitializer, %118 ], [ zeroinitializer, %121 ]
  %138 = phi <2 x float> [ %130, %127 ], [ zeroinitializer, %118 ], [ zeroinitializer, %121 ]
  %139 = fcmp ole float %109, 0.000000e+00
  %140 = fcmp ole float %108, 0.000000e+00
  %141 = or i1 %139, %140
  br i1 %141, label %142, label %150

142:                                              ; preds = %135
  %143 = bitcast %class.CFX_RectF* %3 to <2 x float>*
  store <2 x float> %138, <2 x float>* %143, align 8
  %144 = bitcast float* %7 to i64*
  store i64 %136, i64* %144, align 8
  %145 = trunc i64 %136 to i32
  %146 = bitcast i32 %145 to float
  %147 = lshr i64 %136, 32
  %148 = trunc i64 %147 to i32
  %149 = bitcast i32 %148 to float
  br label %169

150:                                              ; preds = %135
  %151 = fadd float %109, %111
  %152 = fadd float %110, %108
  %153 = extractelement <2 x float> %138, i32 0
  %154 = fcmp olt float %153, %111
  %155 = select i1 %154, float %153, float %111
  store float %155, float* %5, align 8
  %156 = extractelement <2 x float> %138, i32 1
  %157 = fcmp olt float %156, %110
  %158 = select i1 %157, float %156, float %110
  store float %158, float* %6, align 4
  %159 = extractelement <2 x float> %137, i32 0
  %160 = fadd float %159, %153
  %161 = fcmp olt float %151, %160
  %162 = select i1 %161, float %160, float %151
  %163 = extractelement <2 x float> %137, i32 1
  %164 = fadd float %163, %156
  %165 = fcmp olt float %152, %164
  %166 = select i1 %165, float %164, float %152
  %167 = fsub float %162, %155
  store float %167, float* %7, align 8
  %168 = fsub float %166, %158
  store float %168, float* %8, align 4
  br label %169

169:                                              ; preds = %142, %150, %107
  %170 = phi float [ %149, %142 ], [ %168, %150 ], [ %108, %107 ]
  %171 = phi float [ %146, %142 ], [ %167, %150 ], [ %109, %107 ]
  store i32 %65, i32* %66, align 4
  br label %216

172:                                              ; preds = %64
  store i32 %65, i32* %66, align 4
  br label %224

173:                                              ; preds = %2, %14, %19, %25
  %174 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  %175 = load i32, i32* %174, align 4
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %215

177:                                              ; preds = %173
  %178 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %179 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %180 = bitcast %"class.std::__1::unique_ptr.5"** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::vector"* %178 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = sub i64 %181, %183
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 2147483648
  %187 = inttoptr i64 %183 to %"class.std::__1::unique_ptr.5"*
  br i1 %186, label %189, label %188, !prof !9

188:                                              ; preds = %177
  tail call void @llvm.trap() #13
  unreachable

189:                                              ; preds = %177
  %190 = trunc i64 %185 to i32
  %191 = icmp sgt i32 %175, %190
  br i1 %191, label %205, label %192

192:                                              ; preds = %189
  %193 = add nsw i32 %175, -1
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %187, i64 %194, i32 0, i32 0, i32 0
  %196 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %195, align 8
  %197 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %196, null
  br i1 %197, label %205, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %196, i64 0, i32 3
  %200 = bitcast %class.CFX_RectF* %199 to <2 x float>*
  %201 = load <2 x float>, <2 x float>* %200, align 4
  %202 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %196, i64 0, i32 3, i32 2
  %203 = bitcast float* %202 to i64*
  %204 = load i64, i64* %203, align 4
  br label %205

205:                                              ; preds = %198, %192, %189
  %206 = phi i64 [ %204, %198 ], [ 0, %189 ], [ 0, %192 ]
  %207 = phi <2 x float> [ %201, %198 ], [ zeroinitializer, %189 ], [ zeroinitializer, %192 ]
  %208 = bitcast %class.CFX_RectF* %3 to <2 x float>*
  store <2 x float> %207, <2 x float>* %208, align 8
  %209 = bitcast float* %7 to i64*
  store i64 %206, i64* %209, align 8
  store i32 -1, i32* %174, align 4
  %210 = trunc i64 %206 to i32
  %211 = bitcast i32 %210 to float
  %212 = lshr i64 %206, 32
  %213 = trunc i64 %212 to i32
  %214 = bitcast i32 %213 to float
  br label %216

215:                                              ; preds = %173
  store i32 -1, i32* %174, align 4
  br label %224

216:                                              ; preds = %169, %205
  %217 = phi float [ %170, %169 ], [ %214, %205 ]
  %218 = phi float [ %171, %169 ], [ %211, %205 ]
  %219 = fcmp ole float %218, 0.000000e+00
  %220 = fcmp ole float %217, 0.000000e+00
  %221 = or i1 %219, %220
  br i1 %221, label %224, label %222

222:                                              ; preds = %216
  %223 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %223, %class.CFX_RectF* nonnull dereferenceable(16) %3) #13
  br label %224

224:                                              ; preds = %216, %172, %215, %222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar12OnMouseLeaveEP17CFWL_MessageMouse(%class.CFWL_MonthCalendar*, %class.CFWL_MessageMouse* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_RectF*
  %5 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 19
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %55, label %8

8:                                                ; preds = %2
  %9 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13
  %11 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 13, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.5"** %11 to i64*
  %13 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -1, i64 16, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %18, 2147483648
  %20 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.5"*
  br i1 %19, label %22, label %21, !prof !9

21:                                               ; preds = %8
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %8
  %23 = trunc i64 %18 to i32
  %24 = icmp sgt i32 %6, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = add nsw i32 %6, -1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %20, i64 %27, i32 0, i32 0, i32 0
  %29 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %28, align 8
  %30 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %29, i64 0, i32 3
  %33 = bitcast %class.CFX_RectF* %32 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  %35 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %29, i64 0, i32 3, i32 2
  %36 = bitcast float* %35 to i64*
  %37 = load i64, i64* %36, align 4
  br label %38

38:                                               ; preds = %22, %25, %31
  %39 = phi i64 [ %37, %31 ], [ 0, %22 ], [ 0, %25 ]
  %40 = phi <2 x float> [ %34, %31 ], [ zeroinitializer, %22 ], [ zeroinitializer, %25 ]
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %40, <2 x float>* %41, align 8
  %42 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %43 = bitcast <2 x float>* %42 to i64*
  store i64 %39, i64* %43, align 8
  store i32 -1, i32* %5, align 4
  %44 = trunc i64 %39 to i32
  %45 = bitcast i32 %44 to float
  %46 = fcmp ole float %45, 0.000000e+00
  %47 = lshr i64 %39, 32
  %48 = trunc i64 %47 to i32
  %49 = bitcast i32 %48 to float
  %50 = fcmp ole float %49, 0.000000e+00
  %51 = or i1 %46, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %38
  %53 = getelementptr inbounds %class.CFWL_MonthCalendar, %class.CFWL_MonthCalendar* %0, i64 0, i32 0
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %53, %class.CFX_RectF* nonnull dereferenceable(16) %4) #13
  br label %54

54:                                               ; preds = %38, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br label %55

55:                                               ; preds = %2, %54
  ret void
}

declare void @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message(%class.CFWL_Widget*, %class.CFWL_Message*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN18CFWL_MonthCalendar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_MonthCalendar* %0, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* dereferenceable(24) %2)
  ret void
}

declare void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN19CFWL_DateTimePicker17ProcessSelChangedEiii(%class.CFWL_DateTimePicker*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN19CFWL_DateTimePicker17ShowMonthCalendarEb(%class.CFWL_DateTimePicker*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar8DATEINFOC2Eiij9CFX_RectFRKN5fxcrt10WideStringE(%"struct.CFWL_MonthCalendar::DATEINFO"*, i32, i32, i32, <2 x float>, <2 x float>, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #5 align 2 {
  %8 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %0, i64 0, i32 1
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %0, i64 0, i32 2
  store i32 %3, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %0, i64 0, i32 3
  %12 = bitcast %class.CFX_RectF* %11 to <2 x float>*
  store <2 x float> %4, <2 x float>* %12, align 4
  %13 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %0, i64 0, i32 3, i32 2
  %14 = bitcast float* %13 to <2 x float>*
  store <2 x float> %5, <2 x float>* %14, align 4
  %15 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %15, %"class.fxcrt::WideString"* dereferenceable(8) %6) #13
  ret void
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFWL_MonthCalendar8DATEINFOD2Ev(%"struct.CFWL_MonthCalendar::DATEINFO"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %2) #13
  ret void
}

declare void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) unnamed_addr #1

declare void @_ZN11CFWL_Widget11PreFinalizeEv(%class.CFWL_Widget*) unnamed_addr #1

declare zeroext i1 @_ZNK11CFWL_Widget6IsFormEv(%class.CFWL_Widget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget*, i32, i32) unnamed_addr #1

declare void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #1

declare void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #1

declare i32 @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE(%class.CFWL_Widget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"*, i32*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN18CFWL_MonthCalendar8DATEINFOENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.5"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.5"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.5"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.5"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.5"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.5"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.5"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.5"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.5"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.5"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.5"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.CFWL_MonthCalendar::DATEINFO"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.5"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.5"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.5"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.5"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !16

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.5"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.5"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.5"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.5"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.5"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.5"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.5"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.5"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.5"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.5"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.5"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.5"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.5"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.5"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.5"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.5"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.5"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.5"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.5"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.5"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.5"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.5"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.5"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.5"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.5"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.5"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.5"*
  %138 = icmp eq %"class.std::__1::unique_ptr.5"* %133, %137
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %148
  %140 = phi %"class.std::__1::unique_ptr.5"* [ %141, %148 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.CFWL_MonthCalendar::DATEINFO"*, %"struct.CFWL_MonthCalendar::DATEINFO"** %142, align 8
  store %"struct.CFWL_MonthCalendar::DATEINFO"* null, %"struct.CFWL_MonthCalendar::DATEINFO"** %142, align 8
  %144 = icmp eq %"struct.CFWL_MonthCalendar::DATEINFO"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"struct.CFWL_MonthCalendar::DATEINFO", %"struct.CFWL_MonthCalendar::DATEINFO"* %143, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %146) #13
  %147 = bitcast %"struct.CFWL_MonthCalendar::DATEINFO"* %143 to i8*
  tail call void @_ZdlPv(i8* %147) #14
  br label %148

148:                                              ; preds = %145, %139
  %149 = icmp eq %"class.std::__1::unique_ptr.5"* %141, %137
  br i1 %149, label %150, label %139

150:                                              ; preds = %148, %132
  %151 = icmp eq i64 %135, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %150
  %153 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %150, %152
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii: argument 0"}
!4 = distinct !{!4, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii: argument 0"}
!8 = distinct !{!8, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii: argument 0"}
!12 = distinct !{!12, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii: argument 0"}
!15 = distinct !{!15, !"_ZN18CFWL_MonthCalendar11GetHeadTextEii"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
