; ModuleID = 'gen/services/network/public/mojom/mdns_responder.mojom-test-utils.cc'
source_filename = "gen/services/network/public/mojom/mdns_responder.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::MdnsResponderAsyncWaiter" = type { %"class.network::mojom::MdnsResponder"* }
%"class.network::mojom::MdnsResponder" = type { i32 (...)** }
%"class.network::mojom::MdnsResponderInterceptorForTesting" = type { %"class.network::mojom::MdnsResponder" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.1" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.15, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.8", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.10" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.15 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.18", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN7network5mojom13MdnsResponderD2Ev = comdat any

$_ZN7network5mojom34MdnsResponderInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [21 x i8] c"CreateNameForAddress\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"gen/services/network/public/mojom/mdns_responder.mojom-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"RemoveNameForAddress\00", align 1
@_ZTVN7network5mojom34MdnsResponderInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::MdnsResponder"*)* @_ZN7network5mojom13MdnsResponderD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)* @_ZN7network5mojom34MdnsResponderInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::MdnsResponderInterceptorForTesting"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)* @_ZN7network5mojom34MdnsResponderInterceptorForTesting20CreateNameForAddressERKN3net9IPAddressEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbEEE to i8*), i8* bitcast (void (%"class.network::mojom::MdnsResponderInterceptorForTesting"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)* @_ZN7network5mojom34MdnsResponderInterceptorForTesting20RemoveNameForAddressERKN3net9IPAddressEN4base12OnceCallbackIFvbbEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7network5mojom24MdnsResponderAsyncWaiterC1EPNS0_13MdnsResponderE = hidden unnamed_addr alias void (%"class.network::mojom::MdnsResponderAsyncWaiter"*, %"class.network::mojom::MdnsResponder"*), void (%"class.network::mojom::MdnsResponderAsyncWaiter"*, %"class.network::mojom::MdnsResponder"*)* @_ZN7network5mojom24MdnsResponderAsyncWaiterC2EPNS0_13MdnsResponderE
@_ZN7network5mojom24MdnsResponderAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::MdnsResponderAsyncWaiter"*), void (%"class.network::mojom::MdnsResponderAsyncWaiter"*)* @_ZN7network5mojom24MdnsResponderAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom34MdnsResponderInterceptorForTesting20CreateNameForAddressERKN3net9IPAddressEN4base12OnceCallbackIFvRKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbEEE(%"class.network::mojom::MdnsResponderInterceptorForTesting"*, %"class.net::IPAddress"* dereferenceable(17), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.network::mojom::MdnsResponderInterceptorForTesting"* %0 to %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)**, %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)*, %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)*, %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::MdnsResponder"* %8(%"class.network::mojom::MdnsResponderInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.network::mojom::MdnsResponder"* %9 to void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)** %15, i64 2
  %17 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.network::mojom::MdnsResponder"* %9, %"class.net::IPAddress"* dereferenceable(17) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom34MdnsResponderInterceptorForTesting20RemoveNameForAddressERKN3net9IPAddressEN4base12OnceCallbackIFvbbEEE(%"class.network::mojom::MdnsResponderInterceptorForTesting"*, %"class.net::IPAddress"* dereferenceable(17), %"class.base::OnceCallback.1"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.1", align 8
  %5 = bitcast %"class.network::mojom::MdnsResponderInterceptorForTesting"* %0 to %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)**, %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)*, %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)*, %"class.network::mojom::MdnsResponder"* (%"class.network::mojom::MdnsResponderInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::MdnsResponder"* %8(%"class.network::mojom::MdnsResponderInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.1"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.1"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.network::mojom::MdnsResponder"* %9 to void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)***
  %15 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)**, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)** %15, i64 3
  %17 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)** %16, align 8
  call void %17(%"class.network::mojom::MdnsResponder"* %9, %"class.net::IPAddress"* dereferenceable(17) %1, %"class.base::OnceCallback.1"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom24MdnsResponderAsyncWaiterC2EPNS0_13MdnsResponderE(%"class.network::mojom::MdnsResponderAsyncWaiter"* nocapture, %"class.network::mojom::MdnsResponder"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::MdnsResponderAsyncWaiter", %"class.network::mojom::MdnsResponderAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::MdnsResponder"* %1, %"class.network::mojom::MdnsResponder"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom24MdnsResponderAsyncWaiterD2Ev(%"class.network::mojom::MdnsResponderAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEPb(%"class.network::mojom::MdnsResponderAsyncWaiter"* nocapture readonly, %"class.net::IPAddress"* dereferenceable(17), %"class.std::__1::basic_string"*, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %9 = ptrtoint i8* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.network::mojom::MdnsResponderAsyncWaiter", %"class.network::mojom::MdnsResponderAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.network::mojom::MdnsResponder"*, %"class.network::mojom::MdnsResponder"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopESH_SI_EEEFvRKSG_bEE7RunOnceEPNS0_13BindStateBaseESO_b" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopESG_SH_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !2
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !2
  %22 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !2
  %23 = bitcast %"class.network::mojom::MdnsResponder"* %12 to void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)***
  %24 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)** %24, i64 2
  %26 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback"*)** %25, align 8
  call void %26(%"class.network::mojom::MdnsResponder"* %12, %"class.net::IPAddress"* dereferenceable(17) %1, %"class.base::OnceCallback"* nonnull %6) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 59) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbS6_(%"class.network::mojom::MdnsResponderAsyncWaiter"* nocapture readonly, %"class.net::IPAddress"* dereferenceable(17), i8*, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.1", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i8* %2 to i64
  %9 = ptrtoint i8* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.network::mojom::MdnsResponderAsyncWaiter", %"class.network::mojom::MdnsResponderAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.network::mojom::MdnsResponder"*, %"class.network::mojom::MdnsResponder"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #11, !noalias !7
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbSA_E3$_1JPNS_7RunLoopESA_SA_EEEFvbbEE7RunOnceEPNS0_13BindStateBaseEbb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbS9_E3$_1JPNS_7RunLoopES9_S9_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !7
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !7
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !7
  %22 = bitcast %"class.base::OnceCallback.1"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !7
  %23 = bitcast %"class.network::mojom::MdnsResponder"* %12 to void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)***
  %24 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)**, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)** %24, i64 3
  %26 = load void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)*, void (%"class.network::mojom::MdnsResponder"*, %"class.net::IPAddress"*, %"class.base::OnceCallback.1"*)** %25, align 8
  call void %26(%"class.network::mojom::MdnsResponder"* %12, %"class.net::IPAddress"* dereferenceable(17) %1, %"class.base::OnceCallback.1"* nonnull %6) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback.1", %"class.base::OnceCallback.1"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 78) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom13MdnsResponderD2Ev(%"class.network::mojom::MdnsResponder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom34MdnsResponderInterceptorForTestingD0Ev(%"class.network::mojom::MdnsResponderInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopESH_SI_EEEFvRKSG_bEE7RunOnceEPNS0_13BindStateBaseESO_b"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to %"class.std::__1::basic_string"**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to i8**
  %11 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %13 = load i8*, i8** %10, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %12, %1
  br i1 %14, label %44, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %19, label %34, label %24

24:                                               ; preds = %15
  br i1 %23, label %28, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #10
  br label %44

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %30, i64 %32) #10
  br label %44

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %40 = zext i8 %22 to i64
  %41 = select i1 %23, i8* %36, i8* %39
  %42 = select i1 %23, i64 %38, i64 %40
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %41, i64 %42) #10
  br label %44

44:                                               ; preds = %3, %25, %28, %34
  store i8 %4, i8* %13, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %11) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopESG_SH_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbSA_E3$_1JPNS_7RunLoopESA_SA_EEEFvbbEE7RunOnceEPNS0_13BindStateBaseEbb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext, i1 zeroext) #0 align 2 {
  %4 = zext i1 %1 to i8
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RunLoop"**
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to i8**
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = bitcast void ()** %10 to i8**
  %12 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %7, align 8
  %13 = load i8*, i8** %9, align 8
  %14 = load i8*, i8** %11, align 8
  store i8 %4, i8* %13, align 1
  store i8 %5, i8* %14, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbS9_E3$_1JPNS_7RunLoopES9_S9_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopERSH_RSI_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopERSH_RSI_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopERSF_RSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN7network5mojom24MdnsResponderAsyncWaiter20CreateNameForAddressERKN3net9IPAddressEPNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEPbE3$_0JPNS_7RunLoopERSF_RSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbSA_E3$_1JPNS_7RunLoopERSA_SE_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbSA_E3$_1JPNS_7RunLoopERSA_SE_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbS8_E3$_1JPNS_7RunLoopERS8_SC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN7network5mojom24MdnsResponderAsyncWaiter20RemoveNameForAddressERKN3net9IPAddressEPbS8_E3$_1JPNS_7RunLoopERS8_SC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
