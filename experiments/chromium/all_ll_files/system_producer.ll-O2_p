; ModuleID = '../../services/tracing/public/cpp/perfetto/system_producer.cc'
source_filename = "../../services/tracing/public/cpp/perfetto/system_producer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tracing::SystemProducer" = type { %"class.tracing::PerfettoProducer", %"class.perfetto::Producer" }
%"class.tracing::PerfettoProducer" = type { i32 (...)**, %"class.base::TimeDelta", %"class.base::tracing::PerfettoTaskRunner"*, %"struct.std::__1::atomic.5", %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::tracing::PerfettoTaskRunner" = type { %"class.perfetto::base::TaskRunner", %class.scoped_refptr, %"class.std::__1::map" }
%"class.perfetto::base::TaskRunner" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.10", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%"class.perfetto::Producer" = type { i32 (...)** }

@_ZTVN7tracing14SystemProducerE = hidden unnamed_addr constant { [15 x i8*], [12 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tracing::SystemProducer"*)* @_ZN7tracing14SystemProducerD2Ev to i8*), i8* bitcast (void (%"class.tracing::SystemProducer"*)* @_ZN7tracing14SystemProducerD0Ev to i8*), i8* bitcast (void (%"class.tracing::PerfettoProducer"*, i16, i16)* @_ZN7tracing16PerfettoProducer23BindStartupTargetBufferEtt to i8*), i8* bitcast (void (%"class.tracing::PerfettoProducer"*, i16)* @_ZN7tracing16PerfettoProducer33AbortStartupTracingForReservationEt to i8*), i8* bitcast (void ()* @_ZN7tracing16PerfettoProducer17CreateTraceWriterEtN8perfetto21BufferExhaustedPolicyE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.tracing::SystemProducer"*)* @_ZN7tracing14SystemProducer31IsDummySystemProducerForTestingEv to i8*)], [12 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%"class.tracing::SystemProducer"*)* @_ZThn48_N7tracing14SystemProducerD1Ev to i8*), i8* bitcast (void (%"class.tracing::SystemProducer"*)* @_ZThn48_N7tracing14SystemProducerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7tracing14SystemProducerD1Ev = hidden unnamed_addr alias void (%"class.tracing::SystemProducer"*), void (%"class.tracing::SystemProducer"*)* @_ZN7tracing14SystemProducerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing14SystemProducerC2EPN4base7tracing18PerfettoTaskRunnerE(%"class.tracing::SystemProducer"*, %"class.base::tracing::PerfettoTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tracing::SystemProducer", %"class.tracing::SystemProducer"* %0, i64 0, i32 0
  tail call void @_ZN7tracing16PerfettoProducerC2EPN4base7tracing18PerfettoTaskRunnerE(%"class.tracing::PerfettoProducer"* %3, %"class.base::tracing::PerfettoTaskRunner"* %1) #6
  %4 = getelementptr inbounds %"class.tracing::SystemProducer", %"class.tracing::SystemProducer"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.tracing::SystemProducer", %"class.tracing::SystemProducer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [12 x i8*] }, { [15 x i8*], [12 x i8*] }* @_ZTVN7tracing14SystemProducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [12 x i8*] }, { [15 x i8*], [12 x i8*] }* @_ZTVN7tracing14SystemProducerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN7tracing16PerfettoProducerC2EPN4base7tracing18PerfettoTaskRunnerE(%"class.tracing::PerfettoProducer"*, %"class.base::tracing::PerfettoTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7tracing14SystemProducerD2Ev(%"class.tracing::SystemProducer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::SystemProducer", %"class.tracing::SystemProducer"* %0, i64 0, i32 1
  tail call void @_ZN8perfetto8ProducerD2Ev(%"class.perfetto::Producer"* %2) #6
  %3 = getelementptr inbounds %"class.tracing::SystemProducer", %"class.tracing::SystemProducer"* %0, i64 0, i32 0
  tail call void @_ZN7tracing16PerfettoProducerD2Ev(%"class.tracing::PerfettoProducer"* %3) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8perfetto8ProducerD2Ev(%"class.perfetto::Producer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7tracing16PerfettoProducerD2Ev(%"class.tracing::PerfettoProducer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N7tracing14SystemProducerD1Ev(%"class.tracing::SystemProducer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tracing::SystemProducer", %"class.tracing::SystemProducer"* %0, i64 -1, i32 0, i32 1
  %3 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 6
  %4 = bitcast %"class.base::TimeDelta"* %3 to %"class.perfetto::Producer"*
  tail call void @_ZN8perfetto8ProducerD2Ev(%"class.perfetto::Producer"* %4) #6
  %5 = bitcast %"class.base::TimeDelta"* %2 to %"class.tracing::PerfettoProducer"*
  tail call void @_ZN7tracing16PerfettoProducerD2Ev(%"class.tracing::PerfettoProducer"* %5) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7tracing14SystemProducerD0Ev(%"class.tracing::SystemProducer"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn48_N7tracing14SystemProducerD0Ev(%"class.tracing::SystemProducer"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN7tracing14SystemProducer31IsDummySystemProducerForTestingEv(%"class.tracing::SystemProducer"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

declare void @_ZN7tracing16PerfettoProducer23BindStartupTargetBufferEtt(%"class.tracing::PerfettoProducer"*, i16 zeroext, i16 zeroext) unnamed_addr #1

declare void @_ZN7tracing16PerfettoProducer33AbortStartupTracingForReservationEt(%"class.tracing::PerfettoProducer"*, i16 zeroext) unnamed_addr #1

declare void @_ZN7tracing16PerfettoProducer17CreateTraceWriterEtN8perfetto21BufferExhaustedPolicyE() unnamed_addr

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
