; ModuleID = '../../media/gpu/gpu_video_decode_accelerator_helpers.cc'
source_filename = "../../media/gpu/gpu_video_decode_accelerator_helpers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::GpuVideoDecodeGLClient" = type <{ %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1", %"class.base::RepeatingCallback.2", %"class.base::RepeatingCallback.3", %"class.base::RepeatingCallback.4", i8, i8, [6 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.1" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.2" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.3" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.4" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"*, %"class.std::__1::__compressed_pair.8" }
%"struct.media::SupportedVideoDecoderConfig" = type <{ i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, i8, [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.media::SupportedVideoDecoderConfig"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::VideoDecodeAccelerator::SupportedProfile"*, %"struct.media::VideoDecodeAccelerator::SupportedProfile"*, %"class.std::__1::__compressed_pair" }
%"struct.media::VideoDecodeAccelerator::SupportedProfile" = type <{ i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::VideoDecodeAccelerator::SupportedProfile"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN5media22GpuVideoDecodeGLClientC1Ev = hidden unnamed_addr alias void (%"struct.media::GpuVideoDecodeGLClient"*), void (%"struct.media::GpuVideoDecodeGLClient"*)* @_ZN5media22GpuVideoDecodeGLClientC2Ev
@_ZN5media22GpuVideoDecodeGLClientD1Ev = hidden unnamed_addr alias void (%"struct.media::GpuVideoDecodeGLClient"*), void (%"struct.media::GpuVideoDecodeGLClient"*)* @_ZN5media22GpuVideoDecodeGLClientD2Ev
@_ZN5media22GpuVideoDecodeGLClientC1ERKS0_ = hidden unnamed_addr alias void (%"struct.media::GpuVideoDecodeGLClient"*, %"struct.media::GpuVideoDecodeGLClient"*), void (%"struct.media::GpuVideoDecodeGLClient"*, %"struct.media::GpuVideoDecodeGLClient"*)* @_ZN5media22GpuVideoDecodeGLClientC2ERKS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media22GpuVideoDecodeGLClientC2Ev(%"struct.media::GpuVideoDecodeGLClient"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.media::GpuVideoDecodeGLClient"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 42, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22GpuVideoDecodeGLClientD2Ev(%"struct.media::GpuVideoDecodeGLClient"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #8
  %3 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #8
  %4 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #8
  %5 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media22GpuVideoDecodeGLClientC2ERKS0_(%"struct.media::GpuVideoDecodeGLClient"*, %"struct.media::GpuVideoDecodeGLClient"* dereferenceable(48)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #8
  %5 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %5, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %6) #8
  %7 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %7, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %8) #8
  %9 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 3, i32 0
  %10 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %9, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %10) #8
  %11 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %11, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %12) #8
  %13 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 5
  %15 = bitcast i8* %14 to i16*
  %16 = bitcast i8* %13 to i16*
  %17 = load i16, i16* %15, align 8
  store i16 %17, i16* %16, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.media::GpuVideoDecodeGLClient"* @_ZN5media22GpuVideoDecodeGLClientaSERKS0_(%"struct.media::GpuVideoDecodeGLClient"* returned, %"struct.media::GpuVideoDecodeGLClient"* dereferenceable(48)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #8
  %6 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 1, i32 0
  %8 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %6, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %7) #8
  %9 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 2, i32 0
  %11 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %9, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %10) #8
  %12 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 3, i32 0
  %14 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %12, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %13) #8
  %15 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 4, i32 0
  %16 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 4, i32 0
  %17 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %15, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %16) #8
  %18 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.media::GpuVideoDecodeGLClient", %"struct.media::GpuVideoDecodeGLClient"* %1, i64 0, i32 5
  %20 = bitcast i8* %19 to i16*
  %21 = bitcast i8* %18 to i16*
  %22 = load i16, i16* %20, align 8
  store i16 %22, i16* %21, align 8
  ret %"struct.media::GpuVideoDecodeGLClient"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media28ConvertFromSupportedProfilesERKNSt3__16vectorINS_22VideoDecodeAccelerator16SupportedProfileENS0_9allocatorIS3_EEEEb(%"class.std::__1::vector.6"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #1 {
  %4 = alloca %"struct.media::SupportedVideoDecoderConfig", align 4
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %9 = load %"struct.media::VideoDecodeAccelerator::SupportedProfile"*, %"struct.media::VideoDecodeAccelerator::SupportedProfile"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = load %"struct.media::VideoDecodeAccelerator::SupportedProfile"*, %"struct.media::VideoDecodeAccelerator::SupportedProfile"** %10, align 8
  %12 = icmp eq %"struct.media::VideoDecodeAccelerator::SupportedProfile"* %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %4 to i8*
  %15 = bitcast %"struct.media::SupportedVideoDecoderConfig"** %5 to i64*
  %16 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %17 = bitcast %"struct.media::SupportedVideoDecoderConfig"** %6 to i64*
  br label %19

18:                                               ; preds = %98, %3
  ret void

19:                                               ; preds = %101, %13
  %20 = phi i64 [ 0, %13 ], [ %105, %101 ]
  %21 = phi i64 [ 0, %13 ], [ %104, %101 ]
  %22 = phi %"struct.media::SupportedVideoDecoderConfig"* [ null, %13 ], [ %103, %101 ]
  %23 = phi %"struct.media::SupportedVideoDecoderConfig"* [ null, %13 ], [ %102, %101 ]
  %24 = phi %"struct.media::VideoDecodeAccelerator::SupportedProfile"* [ %9, %13 ], [ %99, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %14) #8
  %25 = getelementptr inbounds %"struct.media::VideoDecodeAccelerator::SupportedProfile", %"struct.media::VideoDecodeAccelerator::SupportedProfile"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.media::VideoDecodeAccelerator::SupportedProfile", %"struct.media::VideoDecodeAccelerator::SupportedProfile"* %24, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.media::VideoDecodeAccelerator::SupportedProfile", %"struct.media::VideoDecodeAccelerator::SupportedProfile"* %24, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.media::VideoDecodeAccelerator::SupportedProfile", %"struct.media::VideoDecodeAccelerator::SupportedProfile"* %24, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp ne i8 %30, 0
  call void @_ZN5media27SupportedVideoDecoderConfigC1ENS_17VideoCodecProfileES1_RKN3gfx4SizeES5_bb(%"struct.media::SupportedVideoDecoderConfig"* nonnull %4, i32 %26, i32 %26, %"class.gfx::Size"* dereferenceable(8) %27, %"class.gfx::Size"* dereferenceable(8) %28, i1 zeroext %2, i1 zeroext %31) #8
  %32 = icmp ult %"struct.media::SupportedVideoDecoderConfig"* %23, %22
  br i1 %32, label %33, label %37

33:                                               ; preds = %19
  %34 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 4 %14, i64 28, i1 false) #8
  %35 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %23, i64 1
  %36 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %35 to i64
  store i64 %36, i64* %15, align 8
  br label %98

37:                                               ; preds = %19
  %38 = load i64, i64* %16, align 8
  %39 = sub i64 %21, %38
  %40 = sdiv exact i64 %39, 28
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 658812288346769700
  %43 = inttoptr i64 %38 to %"struct.media::SupportedVideoDecoderConfig"*
  br i1 %42, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #9
  unreachable

46:                                               ; preds = %37
  %47 = sub i64 %20, %38
  %48 = sdiv exact i64 %47, 28
  %49 = icmp ult i64 %48, 329406144173384850
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = shl nsw i64 %48, 1
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50, %46
  %56 = phi i64 [ %53, %50 ], [ 658812288346769700, %46 ]
  %57 = mul i64 %56, 28
  %58 = call i8* @_Znwm(i64 %57) #10
  %59 = bitcast i8* %58 to %"struct.media::SupportedVideoDecoderConfig"*
  br label %60

60:                                               ; preds = %55, %50
  %61 = phi i64 [ %56, %55 ], [ 0, %50 ]
  %62 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %59, %55 ], [ null, %50 ]
  %63 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %62, i64 %40
  %64 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %62, i64 %61
  %65 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %64 to i64
  %66 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* nonnull align 4 %14, i64 28, i1 false) #8
  %67 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %63, i64 1
  %68 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %67 to i64
  %69 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %23, %43
  br i1 %69, label %70, label %72

70:                                               ; preds = %60
  %71 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %23 to i64
  br label %83

72:                                               ; preds = %60, %72
  %73 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %75, %72 ], [ %63, %60 ]
  %74 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %76, %72 ], [ %23, %60 ]
  %75 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %73, i64 -1
  %76 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %74, i64 -1
  %77 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %75 to i8*
  %78 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 28, i1 false) #8
  %79 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %76, %43
  br i1 %79, label %80, label %72

80:                                               ; preds = %72
  %81 = load i64, i64* %16, align 8
  %82 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %5, align 8
  br label %83

83:                                               ; preds = %80, %70
  %84 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %23, %70 ], [ %82, %80 ]
  %85 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %63, %70 ], [ %75, %80 ]
  %86 = phi i64 [ %71, %70 ], [ %81, %80 ]
  %87 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %85 to i64
  store i64 %87, i64* %16, align 8
  store i64 %68, i64* %15, align 8
  store i64 %65, i64* %17, align 8
  %88 = inttoptr i64 %86 to %"struct.media::SupportedVideoDecoderConfig"*
  %89 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %84, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %83, %90
  %91 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %92, %90 ], [ %84, %83 ]
  %92 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %91, i64 -1
  call void @_ZN5media27SupportedVideoDecoderConfigD1Ev(%"struct.media::SupportedVideoDecoderConfig"* %92) #8
  %93 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %92, %88
  br i1 %93, label %94, label %90

94:                                               ; preds = %90, %83
  %95 = icmp eq i64 %86, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %86 to i8*
  call void @_ZdlPv(i8* %97) #10
  br label %98

98:                                               ; preds = %96, %94, %33
  call void @_ZN5media27SupportedVideoDecoderConfigD1Ev(%"struct.media::SupportedVideoDecoderConfig"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %14) #8
  %99 = getelementptr inbounds %"struct.media::VideoDecodeAccelerator::SupportedProfile", %"struct.media::VideoDecodeAccelerator::SupportedProfile"* %24, i64 1
  %100 = icmp eq %"struct.media::VideoDecodeAccelerator::SupportedProfile"* %99, %11
  br i1 %100, label %18, label %101

101:                                              ; preds = %98
  %102 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %5, align 8
  %103 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %6, align 8
  %104 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %102 to i64
  %105 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %103 to i64
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5media27SupportedVideoDecoderConfigC1ENS_17VideoCodecProfileES1_RKN3gfx4SizeES5_bb(%"struct.media::SupportedVideoDecoderConfig"*, i32, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5media27SupportedVideoDecoderConfigD1Ev(%"struct.media::SupportedVideoDecoderConfig"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
