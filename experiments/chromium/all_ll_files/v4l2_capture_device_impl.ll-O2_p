; ModuleID = '../../media/capture/video/linux/v4l2_capture_device_impl.cc'
source_filename = "../../media/capture/video/linux/v4l2_capture_device_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.media::V4L2CaptureDeviceImpl" = type { %"class.media::V4L2CaptureDevice.base", [4 x i8] }
%"class.media::V4L2CaptureDevice.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.pollfd = type { i32, i16, i16 }

@_ZTVN5media21V4L2CaptureDeviceImplE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.media::V4L2CaptureDeviceImpl"*, i8*, i32)* @_ZN5media21V4L2CaptureDeviceImpl4openEPKci to i8*), i8* bitcast (i32 (%"class.media::V4L2CaptureDeviceImpl"*, i32)* @_ZN5media21V4L2CaptureDeviceImpl5closeEi to i8*), i8* bitcast (i32 (%"class.media::V4L2CaptureDeviceImpl"*, i32, i32, i8*)* @_ZN5media21V4L2CaptureDeviceImpl5ioctlEiiPv to i8*), i8* bitcast (i8* (%"class.media::V4L2CaptureDeviceImpl"*, i8*, i64, i32, i32, i32, i64)* @_ZN5media21V4L2CaptureDeviceImpl4mmapEPvmiiil to i8*), i8* bitcast (i32 (%"class.media::V4L2CaptureDeviceImpl"*, i8*, i64)* @_ZN5media21V4L2CaptureDeviceImpl6munmapEPvm to i8*), i8* bitcast (i32 (%"class.media::V4L2CaptureDeviceImpl"*, %struct.pollfd*, i32, i32)* @_ZN5media21V4L2CaptureDeviceImpl4pollEP6pollfdji to i8*), i8* bitcast (void (%"class.media::V4L2CaptureDeviceImpl"*)* @_ZN5media21V4L2CaptureDeviceImplD2Ev to i8*), i8* bitcast (void (%"class.media::V4L2CaptureDeviceImpl"*)* @_ZN5media21V4L2CaptureDeviceImplD0Ev to i8*)] }, align 8

@_ZN5media21V4L2CaptureDeviceImplD1Ev = hidden unnamed_addr alias void (%"class.media::V4L2CaptureDeviceImpl"*), void (%"class.media::V4L2CaptureDeviceImpl"*)* @_ZN5media21V4L2CaptureDeviceImplD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media21V4L2CaptureDeviceImplD2Ev(%"class.media::V4L2CaptureDeviceImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21V4L2CaptureDeviceImplD0Ev(%"class.media::V4L2CaptureDeviceImpl"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.media::V4L2CaptureDeviceImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN5media21V4L2CaptureDeviceImpl4openEPKci(%"class.media::V4L2CaptureDeviceImpl"* nocapture readnone, i8* nocapture readonly, i32) unnamed_addr #3 align 2 {
  %4 = tail call i32 (i8*, i32, ...) @open64(i8* %1, i32 %2) #8
  ret i32 %4
}

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media21V4L2CaptureDeviceImpl5closeEi(%"class.media::V4L2CaptureDeviceImpl"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  %3 = tail call i32 @close(i32 %1) #8
  ret i32 %3
}

declare i32 @close(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media21V4L2CaptureDeviceImpl5ioctlEiiPv(%"class.media::V4L2CaptureDeviceImpl"* nocapture readnone, i32, i32, i8*) unnamed_addr #1 align 2 {
  %5 = sext i32 %2 to i64
  %6 = tail call i32 (i32, i64, ...) @ioctl(i32 %1, i64 %5, i8* %3) #8
  ret i32 %6
}

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN5media21V4L2CaptureDeviceImpl4mmapEPvmiiil(%"class.media::V4L2CaptureDeviceImpl"* nocapture readnone, i8*, i64, i32, i32, i32, i64) unnamed_addr #1 align 2 {
  %8 = tail call i8* @mmap64(i8* %1, i64 %2, i32 %3, i32 %4, i32 %5, i64 %6) #8
  ret i8* %8
}

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media21V4L2CaptureDeviceImpl6munmapEPvm(%"class.media::V4L2CaptureDeviceImpl"* nocapture readnone, i8*, i64) unnamed_addr #1 align 2 {
  %4 = tail call i32 @munmap(i8* %1, i64 %2) #8
  ret i32 %4
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media21V4L2CaptureDeviceImpl4pollEP6pollfdji(%"class.media::V4L2CaptureDeviceImpl"* nocapture readnone, %struct.pollfd*, i32, i32) unnamed_addr #1 align 2 {
  %5 = zext i32 %2 to i64
  %6 = tail call i32 @poll(%struct.pollfd* %1, i64 %5, i32 %3) #8
  ret i32 %6
}

declare i32 @poll(%struct.pollfd*, i64, i32) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
