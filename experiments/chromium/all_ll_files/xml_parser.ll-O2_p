; ModuleID = '../../services/data_decoder/xml_parser.cc'
source_filename = "../../services/data_decoder/xml_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.data_decoder::XmlParser" = type { %"class.data_decoder::mojom::XmlParser" }
%"class.data_decoder::mojom::XmlParser" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"class.std::__1::basic_string" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.36 }
%union.anon.36 = type { %"class.std::__1::basic_string" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"struct.std::__1::pair.54" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.XmlReader = type { %struct._xmlTextReader* }
%struct._xmlTextReader = type opaque
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.base::Value"**, %"class.base::Value"**, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::Value"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.54" }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::Value"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNK4base25CheckedContiguousIteratorINS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorINS_5ValueEEC2EPKS1_PS1_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base25CheckedContiguousIteratorINS_5ValueEEmIEl = comdat any

@_ZTVN12data_decoder9XmlParserE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.data_decoder::XmlParser"*)* @_ZN12data_decoder9XmlParserD2Ev to i8*), i8* bitcast (void (%"class.data_decoder::XmlParser"*)* @_ZN12data_decoder9XmlParserD0Ev to i8*), i8* bitcast (void (%"class.data_decoder::XmlParser"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)* @_ZN12data_decoder9XmlParser5ParseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base12OnceCallbackIFvN4absl8optionalINSA_5ValueEEERKNSD_IS7_EEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [28 x i8] c"Invalid XML: failed to load\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Invalid XML: unbalanced elements\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"Invalid XML: invalid UTF8 text.\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Invalid XML: bad content\00", align 1
@_ZN12data_decoder5mojom9XmlParser8kTypeKeyE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser13kTextNodeTypeE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser14kCDataNodeTypeE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser8kTextKeyE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser12kElementTypeE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser7kTagKeyE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser14kNamespacesKeyE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser14kAttributesKeyE = external constant [0 x i8], align 1
@_ZN12data_decoder5mojom9XmlParser12kChildrenKeyE = external constant [0 x i8], align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"-rhs <= end_ - current_\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"rhs <= current_ - start_\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1

@_ZN12data_decoder9XmlParserC1Ev = hidden unnamed_addr alias void (%"class.data_decoder::XmlParser"*), void (%"class.data_decoder::XmlParser"*)* @_ZN12data_decoder9XmlParserC2Ev
@_ZN12data_decoder9XmlParserD1Ev = hidden unnamed_addr alias void (%"class.data_decoder::XmlParser"*), void (%"class.data_decoder::XmlParser"*)* @_ZN12data_decoder9XmlParserD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12data_decoder9XmlParserC2Ev(%"class.data_decoder::XmlParser"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.data_decoder::XmlParser", %"class.data_decoder::XmlParser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12data_decoder9XmlParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12data_decoder9XmlParserD2Ev(%"class.data_decoder::XmlParser"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder9XmlParserD0Ev(%"class.data_decoder::XmlParser"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.data_decoder::XmlParser"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder9XmlParser5ParseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base12OnceCallbackIFvN4absl8optionalINSA_5ValueEEERKNSD_IS7_EEEEE(%"class.data_decoder::XmlParser"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.absl::optional.37", align 8
  %7 = alloca %"class.absl::optional", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.absl::optional.37", align 8
  %10 = alloca %"class.absl::optional", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.base::Value", align 8
  %14 = alloca %"class.std::__1::map", align 8
  %15 = alloca %"class.base::Value", align 8
  %16 = alloca %"struct.std::__1::pair.54", align 8
  %17 = alloca %"class.base::Value", align 8
  %18 = alloca %"class.std::__1::map", align 8
  %19 = alloca %"class.base::Value", align 8
  %20 = alloca %"struct.std::__1::pair.54", align 8
  %21 = alloca %"class.base::Value", align 8
  %22 = alloca %"class.base::Value", align 8
  %23 = alloca %"class.base::Value", align 8
  %24 = alloca %"class.base::Value", align 8
  %25 = alloca %"class.base::Value", align 8
  %26 = alloca %"class.base::OnceCallback", align 8
  %27 = alloca %"class.absl::optional.37", align 8
  %28 = alloca %"class.absl::optional", align 8
  %29 = alloca %"class.base::OnceCallback", align 8
  %30 = alloca %"class.absl::optional.37", align 8
  %31 = alloca %"class.absl::optional", align 8
  %32 = alloca %"class.base::OnceCallback", align 8
  %33 = alloca %"class.absl::optional.37", align 8
  %34 = alloca %"class.absl::optional", align 8
  %35 = alloca %class.XmlReader, align 8
  %36 = alloca %"class.base::OnceCallback", align 8
  %37 = alloca %"class.base::Value", align 8
  %38 = alloca %"class.std::__1::vector.29", align 8
  %39 = alloca %"class.base::OnceCallback", align 8
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = alloca %"class.base::Value", align 8
  %42 = alloca %"class.base::OnceCallback", align 8
  %43 = alloca %"class.base::Value", align 8
  %44 = alloca %"class.base::Value", align 8
  %45 = alloca %"class.std::__1::basic_string", align 8
  %46 = alloca %"class.base::Value", align 8
  %47 = alloca %"class.base::OnceCallback", align 8
  %48 = alloca %"class.base::OnceCallback", align 8
  %49 = alloca %"class.absl::optional.37", align 8
  %50 = alloca %"class.absl::optional", align 8
  %51 = bitcast %class.XmlReader* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  %52 = getelementptr inbounds %class.XmlReader, %class.XmlReader* %35, i64 0, i32 0
  store %struct._xmlTextReader* inttoptr (i64 -6148914691236517206 to %struct._xmlTextReader*), %struct._xmlTextReader** %52, align 8
  call void @_ZN9XmlReaderC1Ev(%class.XmlReader* nonnull %35) #13
  %53 = call zeroext i1 @_ZN9XmlReader4LoadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XmlReader* nonnull %35, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  br i1 %53, label %93, label %54

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.base::OnceCallback"* %36 to i64*
  store i64 %57, i64* %58, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %59 = call i8* @_Znwm(i64 32) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i64 27, i1 false) #13
  %60 = getelementptr inbounds i8, i8* %59, i64 27
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61)
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %33, i64 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %union.anon.41* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #13
  %64 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #13
  store i8 1, i8* %64, align 8, !alias.scope !2
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %65, i8* nonnull %59, i64 27) #13
  %66 = load i64, i64* %58, align 8
  %67 = inttoptr i64 %66 to %"class.base::internal::BindStateBase"*
  %68 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %67, i64 0, i32 1
  %69 = bitcast void ()** %68 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)**
  %70 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)** %69, align 8
  %71 = bitcast %"class.base::OnceCallback"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.base::OnceCallback"* %32 to i64*
  store i64 %66, i64* %73, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %72, align 8
  %74 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 0, i32 0
  call void %70(%"class.base::internal::BindStateBase"* %67, %"class.absl::optional.37"* nonnull dereferenceable(40) %33, %"class.absl::optional"* nonnull dereferenceable(32) %34) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %74) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  %75 = load i8, i8* %64, align 8, !range !5
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %54
  %78 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %82, %77
  store i8 0, i8* %64, align 8
  br label %86

86:                                               ; preds = %85, %54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #13
  %87 = load i8, i8* %61, align 8, !range !5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %33, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %90) #13
  store i8 0, i8* %61, align 8
  br label %91

91:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61)
  call void @_ZdlPv(i8* nonnull %59) #12
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #13
  br label %730

93:                                               ; preds = %3
  %94 = bitcast %"class.base::Value"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #13
  %95 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::Value"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %37) #13
  %97 = bitcast %"class.std::__1::vector.29"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #13
  %98 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %38, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %38, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %38, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 24, i1 false) #13
  %101 = call zeroext i1 @_ZN9XmlReader4ReadEv(%class.XmlReader* nonnull %35) #13
  br i1 %101, label %102, label %645

102:                                              ; preds = %93
  %103 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = bitcast %"class.base::Value"* %41 to i8*
  %107 = bitcast %"class.base::Value"* %44 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %109 = bitcast %"class.base::Value"* %22 to i8*
  %110 = bitcast %"class.base::Value"* %23 to i8*
  %111 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast %"class.std::__1::map"* %18 to i8*
  %116 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %120 = bitcast %"class.std::__1::__tree_node_base"** %117 to i8*
  %121 = bitcast %"class.base::Value"* %19 to i8*
  %122 = bitcast %"struct.std::__1::pair.54"* %20 to i8*
  %123 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %20, i64 0, i32 1
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %20, i64 0, i32 0
  %129 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %130 = bitcast %"struct.std::__1::pair.54"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = bitcast %"class.base::Value"* %21 to i8*
  %133 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %18, i64 0, i32 0
  %136 = bitcast %"class.std::__1::__tree_end_node"* %119 to %"class.std::__1::__tree_node"**
  %137 = bitcast %"class.std::__1::map"* %14 to i8*
  %138 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %141 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %142 = bitcast %"class.std::__1::__tree_node_base"** %139 to i8*
  %143 = bitcast %"class.base::Value"* %15 to i8*
  %144 = bitcast %"struct.std::__1::pair.54"* %16 to i8*
  %145 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 1
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 0
  %151 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  %152 = bitcast %"struct.std::__1::pair.54"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = bitcast %"class.base::Value"* %17 to i8*
  %155 = bitcast %"class.std::__1::basic_string"* %147 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0
  %158 = bitcast %"class.std::__1::__tree_end_node"* %141 to %"class.std::__1::__tree_node"**
  %159 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %162 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %163 = bitcast %"class.base::OnceCallback"* %42 to i64*
  %164 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %27, i64 0, i32 0, i32 0, i32 0, i32 1
  %166 = bitcast %union.anon.41* %165 to i8*
  %167 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %169 = bitcast %"class.base::OnceCallback"* %26 to i8*
  %170 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %42, i64 0, i32 0, i32 0, i32 0
  %171 = bitcast %"class.base::OnceCallback"* %26 to i64*
  %172 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %26, i64 0, i32 0
  %173 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %177 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %42, i64 0, i32 0
  %178 = bitcast %"class.base::Value"* %43 to i8*
  %179 = bitcast %"class.base::Value"* %24 to i8*
  %180 = bitcast %"class.base::Value"* %25 to i8*
  %181 = bitcast %"class.base::Value"* %13 to i8*
  %182 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  %183 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  %184 = bitcast %"class.base::Value"*** %99 to i64*
  %185 = bitcast %"class.std::__1::vector.29"* %38 to i64*
  %186 = bitcast %"class.base::Value"*** %100 to i64*
  %187 = bitcast %"class.base::Value"* %41 to i8*
  br label %188

188:                                              ; preds = %102, %233
  %189 = call zeroext i1 @_ZN9XmlReader16IsClosingElementEv(%class.XmlReader* nonnull %35) #13
  br i1 %189, label %190, label %235

190:                                              ; preds = %188
  %191 = load %"class.base::Value"**, %"class.base::Value"*** %98, align 8
  %192 = load %"class.base::Value"**, %"class.base::Value"*** %99, align 8
  %193 = icmp eq %"class.base::Value"** %191, %192
  br i1 %193, label %194, label %231

194:                                              ; preds = %190
  %195 = load i64, i64* %162, align 8
  %196 = bitcast %"class.base::OnceCallback"* %39 to i64*
  store i64 %195, i64* %196, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %161, align 8
  %197 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %197, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i64 32, i1 false) #13
  %198 = getelementptr inbounds i8, i8* %197, i64 32
  store i8 0, i8* %198, align 1
  %199 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %199)
  store i8 0, i8* %199, align 8
  %200 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %30, i64 0, i32 0, i32 0, i32 0, i32 1
  %201 = bitcast %union.anon.41* %200 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 32, i1 false) #13
  %202 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #13
  store i8 1, i8* %202, align 8, !alias.scope !6
  %203 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %203, i8* nonnull %197, i64 32) #13
  %204 = load i64, i64* %196, align 8
  %205 = inttoptr i64 %204 to %"class.base::internal::BindStateBase"*
  %206 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %205, i64 0, i32 1
  %207 = bitcast void ()** %206 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)**
  %208 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)** %207, align 8
  %209 = bitcast %"class.base::OnceCallback"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #13
  %210 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %39, i64 0, i32 0, i32 0, i32 0
  %211 = bitcast %"class.base::OnceCallback"* %29 to i64*
  store i64 %204, i64* %211, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %210, align 8
  %212 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %29, i64 0, i32 0
  call void %208(%"class.base::internal::BindStateBase"* %205, %"class.absl::optional.37"* nonnull dereferenceable(40) %30, %"class.absl::optional"* nonnull dereferenceable(32) %31) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %212) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #13
  %213 = load i8, i8* %202, align 8, !range !5
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %224, label %215

215:                                              ; preds = %194
  %216 = bitcast %"class.std::__1::basic_string"* %203 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %222) #12
  br label %223

223:                                              ; preds = %220, %215
  store i8 0, i8* %202, align 8
  br label %224

224:                                              ; preds = %223, %194
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #13
  %225 = load i8, i8* %199, align 8, !range !5
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %228) #13
  store i8 0, i8* %199, align 8
  br label %229

229:                                              ; preds = %224, %227
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %199)
  call void @_ZdlPv(i8* nonnull %197) #12
  %230 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %39, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %230) #13
  br label %722

231:                                              ; preds = %190
  %232 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %192, i64 -1
  store %"class.base::Value"** %232, %"class.base::Value"*** %99, align 8
  br label %233

233:                                              ; preds = %231, %601, %601
  %234 = call zeroext i1 @_ZN9XmlReader4ReadEv(%class.XmlReader* nonnull %35) #13
  br i1 %234, label %188, label %602

235:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 24, i1 false) #13
  %236 = load %"class.base::Value"**, %"class.base::Value"*** %98, align 8
  %237 = load %"class.base::Value"**, %"class.base::Value"*** %99, align 8
  %238 = icmp eq %"class.base::Value"** %236, %237
  br i1 %238, label %242, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %237, i64 -1
  %241 = load %"class.base::Value"*, %"class.base::Value"** %240, align 8
  br label %242

242:                                              ; preds = %235, %239
  %243 = phi %"class.base::Value"* [ %241, %239 ], [ null, %235 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %41) #13
  %244 = call zeroext i1 @_ZN9XmlReader20GetTextIfTextElementEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XmlReader* nonnull %35, %"class.std::__1::basic_string"* nonnull %40) #13
  br i1 %244, label %247, label %245

245:                                              ; preds = %242
  %246 = call zeroext i1 @_ZN9XmlReader21GetTextIfCDataElementEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XmlReader* nonnull %35, %"class.std::__1::basic_string"* nonnull %40) #13
  br i1 %246, label %247, label %293

247:                                              ; preds = %245, %242
  %248 = phi i32 [ 0, %242 ], [ 1, %245 ]
  %249 = load i8, i8* %160, align 1
  %250 = icmp slt i8 %249, 0
  %251 = load i8*, i8** %104, align 8
  %252 = select i1 %250, i8* %251, i8* %103
  %253 = load i64, i64* %105, align 8
  %254 = zext i8 %249 to i64
  %255 = select i1 %250, i64 %253, i64 %254
  %256 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %252, i64 %255) #13
  br i1 %256, label %279, label %257

257:                                              ; preds = %247
  %258 = load i64, i64* %162, align 8
  store i64 %258, i64* %163, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %161, align 8
  %259 = call i8* @_Znwm(i64 32) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %259, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i64 31, i1 false) #13
  %260 = getelementptr inbounds i8, i8* %259, i64 31
  store i8 0, i8* %260, align 1
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %164)
  store i8 0, i8* %164, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 32, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #13
  store i8 1, i8* %167, align 8, !alias.scope !9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %168, i8* nonnull %259, i64 31) #13
  %261 = load i64, i64* %163, align 8
  %262 = inttoptr i64 %261 to %"class.base::internal::BindStateBase"*
  %263 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %262, i64 0, i32 1
  %264 = bitcast void ()** %263 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)**
  %265 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)** %264, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #13
  store i64 %261, i64* %171, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %170, align 8
  call void %265(%"class.base::internal::BindStateBase"* %262, %"class.absl::optional.37"* nonnull dereferenceable(40) %27, %"class.absl::optional"* nonnull dereferenceable(32) %28) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %172) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #13
  %266 = load i8, i8* %167, align 8, !range !5
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %274, label %268

268:                                              ; preds = %257
  %269 = load i8, i8* %174, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %268
  %272 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %272) #12
  br label %273

273:                                              ; preds = %271, %268
  store i8 0, i8* %167, align 8
  br label %274

274:                                              ; preds = %273, %257
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #13
  %275 = load i8, i8* %164, align 8, !range !5
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %278, label %277

277:                                              ; preds = %274
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %176) #13
  store i8 0, i8* %164, align 8
  br label %278

278:                                              ; preds = %274, %277
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %164)
  call void @_ZdlPv(i8* nonnull %259) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %177) #13
  br label %595

279:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %178) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 -86, i64 32, i1 false) #13, !alias.scope !12
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %43, i8 zeroext 6) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %179) #13, !noalias !12
  %280 = icmp eq i32 %248, 0
  %281 = select i1 %280, [0 x i8]* @_ZN12data_decoder5mojom9XmlParser13kTextNodeTypeE, [0 x i8]* @_ZN12data_decoder5mojom9XmlParser14kCDataNodeTypeE
  %282 = getelementptr inbounds [0 x i8], [0 x i8]* %281, i64 0, i64 0
  call void @_ZN4base5ValueC1EPKc(%"class.base::Value"* nonnull %24, i8* nonnull %282) #13
  %283 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %43, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser8kTypeKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %24) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %179) #13, !noalias !12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %180) #13, !noalias !12
  %284 = load i8, i8* %160, align 1, !noalias !12
  %285 = icmp slt i8 %284, 0
  %286 = load i8*, i8** %104, align 8, !noalias !12
  %287 = select i1 %285, i8* %286, i8* %103
  %288 = load i64, i64* %105, align 8, !noalias !12
  %289 = zext i8 %284 to i64
  %290 = select i1 %285, i64 %288, i64 %289
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %25, i8* %287, i64 %290) #13
  %291 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %43, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser8kTextKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %25) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %180) #13, !noalias !12
  %292 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* nonnull %41, %"class.base::Value"* nonnull dereferenceable(32) %43) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %178) #13
  br label %507

293:                                              ; preds = %245
  %294 = call zeroext i1 @_ZN9XmlReader9IsElementEv(%class.XmlReader* nonnull %35) #13
  br i1 %294, label %295, label %595

295:                                              ; preds = %293
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #13
  call void @_ZN9XmlReader12NodeFullNameEv(%"class.std::__1::basic_string"* nonnull sret %45, %class.XmlReader* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 32, i1 false) #13, !alias.scope !15
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %44, i8 zeroext 6) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #13, !noalias !15
  call void @_ZN4base5ValueC1EPKc(%"class.base::Value"* nonnull %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser12kElementTypeE, i64 0, i64 0)) #13
  %296 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %44, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser8kTypeKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %22) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #13, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #13, !noalias !15
  %297 = load i8, i8* %112, align 1, !noalias !15
  %298 = icmp slt i8 %297, 0
  %299 = load i8*, i8** %113, align 8, !noalias !15
  %300 = select i1 %298, i8* %299, i8* %108
  %301 = load i64, i64* %114, align 8, !noalias !15
  %302 = zext i8 %297 to i64
  %303 = select i1 %298, i64 %301, i64 %302
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %23, i8* %300, i64 %303) #13
  %304 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %44, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser7kTagKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %23) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #13, !noalias !15
  %305 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* nonnull %41, %"class.base::Value"* nonnull dereferenceable(32) %44) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %44) #13
  %306 = load i8, i8* %112, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %295
  %309 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %309) #12
  br label %310

310:                                              ; preds = %295, %308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %116, align 8
  %311 = call zeroext i1 @_ZN9XmlReader24GetAllDeclaredNamespacesEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%class.XmlReader* nonnull %35, %"class.std::__1::map"* nonnull %18) #13
  %312 = xor i1 %311, true
  %313 = load i64, i64* %118, align 8
  %314 = icmp eq i64 %313, 0
  %315 = or i1 %314, %312
  br i1 %315, label %406, label %316

316:                                              ; preds = %310
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 32, i1 false) #13
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %19, i8 zeroext 6) #13
  %317 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %318 = icmp eq %"class.std::__1::__tree_end_node"* %317, %119
  br i1 %318, label %319, label %321

319:                                              ; preds = %403, %316
  %320 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %41, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser14kNamespacesKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %19) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #13
  br label %406

321:                                              ; preds = %316, %403
  %322 = phi %"class.std::__1::__tree_end_node"* [ %404, %403 ], [ %317, %316 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %122) #13
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 4
  %324 = bitcast %"class.std::__1::__tree_end_node"* %323 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %325 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %324, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 48, i1 false) #13
  %326 = load i8, i8* %325, align 1
  %327 = icmp slt i8 %326, 0
  br i1 %327, label %330, label %328

328:                                              ; preds = %321
  %329 = bitcast %"class.std::__1::__tree_end_node"* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* align 8 %329, i64 24, i1 false) #13
  br label %336

330:                                              ; preds = %321
  %331 = bitcast %"class.std::__1::__tree_end_node"* %323 to i8**
  %332 = load i8*, i8** %331, align 8
  %333 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 5
  %334 = bitcast %"class.std::__1::__tree_end_node"* %333 to i64*
  %335 = load i64, i64* %334, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %128, i8* %332, i64 %335) #13
  br label %336

336:                                              ; preds = %330, %328
  %337 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 7
  %338 = bitcast %"class.std::__1::__tree_end_node"* %337 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %339 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %338, i64 0, i32 1, i32 0
  %340 = load i8, i8* %339, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %336
  %343 = bitcast %"class.std::__1::__tree_end_node"* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %343, i64 24, i1 false) #13
  br label %350

344:                                              ; preds = %336
  %345 = bitcast %"class.std::__1::__tree_end_node"* %337 to i8**
  %346 = load i8*, i8** %345, align 8
  %347 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 8
  %348 = bitcast %"class.std::__1::__tree_end_node"* %347 to i64*
  %349 = load i64, i64* %348, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %125, i8* %346, i64 %349) #13
  br label %350

350:                                              ; preds = %344, %342
  %351 = load i8, i8* %131, align 1
  %352 = icmp slt i8 %351, 0
  %353 = load i8*, i8** %123, align 8
  %354 = select i1 %352, i8* %353, i8* %122
  %355 = load i64, i64* %124, align 8
  %356 = zext i8 %351 to i64
  %357 = select i1 %352, i64 %355, i64 %356
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #13
  %358 = load i8, i8* %134, align 1
  %359 = icmp slt i8 %358, 0
  %360 = load i8*, i8** %126, align 8
  %361 = select i1 %359, i8* %360, i8* %129
  %362 = load i64, i64* %127, align 8
  %363 = zext i8 %358 to i64
  %364 = select i1 %359, i64 %362, i64 %363
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %21, i8* %361, i64 %364) #13
  %365 = call %"class.base::Value"* @_ZN4base5Value6SetKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEOS0_(%"class.base::Value"* nonnull %19, i8* %354, i64 %357, %"class.base::Value"* nonnull dereferenceable(32) %21) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #13
  %366 = load i8, i8* %134, align 1
  %367 = icmp slt i8 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %350
  %369 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %369) #12
  br label %370

370:                                              ; preds = %368, %350
  %371 = load i8, i8* %131, align 1
  %372 = icmp slt i8 %371, 0
  br i1 %372, label %373, label %375

373:                                              ; preds = %370
  %374 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %374) #12
  br label %375

375:                                              ; preds = %373, %370
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %122) #13
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 1, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, null
  br i1 %378, label %379, label %387

379:                                              ; preds = %375
  %380 = bitcast %"class.std::__1::__tree_end_node"* %322 to %"class.std::__1::__tree_node_base"*
  %381 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 2
  %382 = bitcast %"class.std::__1::__tree_end_node"* %381 to %"class.std::__1::__tree_end_node"**
  %383 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %382, align 8
  %384 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %383, i64 0, i32 0
  %385 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %384, align 8
  %386 = icmp eq %"class.std::__1::__tree_node_base"* %385, %380
  br i1 %386, label %403, label %394

387:                                              ; preds = %375, %387
  %388 = phi %"class.std::__1::__tree_node_base"* [ %390, %387 ], [ %377, %375 ]
  %389 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %388, i64 0, i32 0, i32 0
  %390 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %389, align 8
  %391 = icmp eq %"class.std::__1::__tree_node_base"* %390, null
  br i1 %391, label %392, label %387

392:                                              ; preds = %387
  %393 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %388, i64 0, i32 0
  br label %403

394:                                              ; preds = %379, %394
  %395 = phi %"class.std::__1::__tree_end_node"** [ %398, %394 ], [ %382, %379 ]
  %396 = bitcast %"class.std::__1::__tree_end_node"** %395 to %"class.std::__1::__tree_node_base"**
  %397 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %396, align 8
  %398 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %397, i64 0, i32 2
  %399 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %398, align 8
  %400 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %399, i64 0, i32 0
  %401 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %400, align 8
  %402 = icmp eq %"class.std::__1::__tree_node_base"* %401, %397
  br i1 %402, label %403, label %394

403:                                              ; preds = %394, %392, %379
  %404 = phi %"class.std::__1::__tree_end_node"* [ %393, %392 ], [ %383, %379 ], [ %399, %394 ]
  %405 = icmp eq %"class.std::__1::__tree_end_node"* %404, %119
  br i1 %405, label %319, label %321

406:                                              ; preds = %310, %319
  %407 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %136, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* nonnull %135, %"class.std::__1::__tree_node"* %407) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %141, %"class.std::__1::__tree_end_node"** %138, align 8
  %408 = call zeroext i1 @_ZN9XmlReader20GetAllNodeAttributesEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%class.XmlReader* nonnull %35, %"class.std::__1::map"* nonnull %14) #13
  %409 = xor i1 %408, true
  %410 = load i64, i64* %140, align 8
  %411 = icmp eq i64 %410, 0
  %412 = or i1 %411, %409
  br i1 %412, label %503, label %413

413:                                              ; preds = %406
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %143) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 32, i1 false) #13
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %15, i8 zeroext 6) #13
  %414 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %138, align 8
  %415 = icmp eq %"class.std::__1::__tree_end_node"* %414, %141
  br i1 %415, label %416, label %418

416:                                              ; preds = %500, %413
  %417 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %41, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser14kAttributesKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %15) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %143) #13
  br label %503

418:                                              ; preds = %413, %500
  %419 = phi %"class.std::__1::__tree_end_node"* [ %501, %500 ], [ %414, %413 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %144) #13
  %420 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %419, i64 4
  %421 = bitcast %"class.std::__1::__tree_end_node"* %420 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 48, i1 false) #13
  %423 = load i8, i8* %422, align 1
  %424 = icmp slt i8 %423, 0
  br i1 %424, label %427, label %425

425:                                              ; preds = %418
  %426 = bitcast %"class.std::__1::__tree_end_node"* %420 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %144, i8* align 8 %426, i64 24, i1 false) #13
  br label %433

427:                                              ; preds = %418
  %428 = bitcast %"class.std::__1::__tree_end_node"* %420 to i8**
  %429 = load i8*, i8** %428, align 8
  %430 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %419, i64 5
  %431 = bitcast %"class.std::__1::__tree_end_node"* %430 to i64*
  %432 = load i64, i64* %431, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %150, i8* %429, i64 %432) #13
  br label %433

433:                                              ; preds = %427, %425
  %434 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %419, i64 7
  %435 = bitcast %"class.std::__1::__tree_end_node"* %434 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %436 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %435, i64 0, i32 1, i32 0
  %437 = load i8, i8* %436, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %433
  %440 = bitcast %"class.std::__1::__tree_end_node"* %434 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %440, i64 24, i1 false) #13
  br label %447

441:                                              ; preds = %433
  %442 = bitcast %"class.std::__1::__tree_end_node"* %434 to i8**
  %443 = load i8*, i8** %442, align 8
  %444 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %419, i64 8
  %445 = bitcast %"class.std::__1::__tree_end_node"* %444 to i64*
  %446 = load i64, i64* %445, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %147, i8* %443, i64 %446) #13
  br label %447

447:                                              ; preds = %441, %439
  %448 = load i8, i8* %153, align 1
  %449 = icmp slt i8 %448, 0
  %450 = load i8*, i8** %145, align 8
  %451 = select i1 %449, i8* %450, i8* %144
  %452 = load i64, i64* %146, align 8
  %453 = zext i8 %448 to i64
  %454 = select i1 %449, i64 %452, i64 %453
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #13
  %455 = load i8, i8* %156, align 1
  %456 = icmp slt i8 %455, 0
  %457 = load i8*, i8** %148, align 8
  %458 = select i1 %456, i8* %457, i8* %151
  %459 = load i64, i64* %149, align 8
  %460 = zext i8 %455 to i64
  %461 = select i1 %456, i64 %459, i64 %460
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %17, i8* %458, i64 %461) #13
  %462 = call %"class.base::Value"* @_ZN4base5Value6SetKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEOS0_(%"class.base::Value"* nonnull %15, i8* %451, i64 %454, %"class.base::Value"* nonnull dereferenceable(32) %17) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #13
  %463 = load i8, i8* %156, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %467

465:                                              ; preds = %447
  %466 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %466) #12
  br label %467

467:                                              ; preds = %465, %447
  %468 = load i8, i8* %153, align 1
  %469 = icmp slt i8 %468, 0
  br i1 %469, label %470, label %472

470:                                              ; preds = %467
  %471 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %471) #12
  br label %472

472:                                              ; preds = %470, %467
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %144) #13
  %473 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %419, i64 1, i32 0
  %474 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %473, align 8
  %475 = icmp eq %"class.std::__1::__tree_node_base"* %474, null
  br i1 %475, label %476, label %484

476:                                              ; preds = %472
  %477 = bitcast %"class.std::__1::__tree_end_node"* %419 to %"class.std::__1::__tree_node_base"*
  %478 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %419, i64 2
  %479 = bitcast %"class.std::__1::__tree_end_node"* %478 to %"class.std::__1::__tree_end_node"**
  %480 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %479, align 8
  %481 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %480, i64 0, i32 0
  %482 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %481, align 8
  %483 = icmp eq %"class.std::__1::__tree_node_base"* %482, %477
  br i1 %483, label %500, label %491

484:                                              ; preds = %472, %484
  %485 = phi %"class.std::__1::__tree_node_base"* [ %487, %484 ], [ %474, %472 ]
  %486 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %485, i64 0, i32 0, i32 0
  %487 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %486, align 8
  %488 = icmp eq %"class.std::__1::__tree_node_base"* %487, null
  br i1 %488, label %489, label %484

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %485, i64 0, i32 0
  br label %500

491:                                              ; preds = %476, %491
  %492 = phi %"class.std::__1::__tree_end_node"** [ %495, %491 ], [ %479, %476 ]
  %493 = bitcast %"class.std::__1::__tree_end_node"** %492 to %"class.std::__1::__tree_node_base"**
  %494 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %493, align 8
  %495 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %494, i64 0, i32 2
  %496 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %495, align 8
  %497 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %496, i64 0, i32 0
  %498 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %497, align 8
  %499 = icmp eq %"class.std::__1::__tree_node_base"* %498, %494
  br i1 %499, label %500, label %491

500:                                              ; preds = %491, %489, %476
  %501 = phi %"class.std::__1::__tree_end_node"* [ %490, %489 ], [ %480, %476 ], [ %496, %491 ]
  %502 = icmp eq %"class.std::__1::__tree_end_node"* %501, %141
  br i1 %502, label %416, label %418

503:                                              ; preds = %406, %416
  %504 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %158, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* nonnull %157, %"class.std::__1::__tree_node"* %504) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #13
  %505 = call zeroext i1 @_ZN9XmlReader14IsEmptyElementEv(%class.XmlReader* nonnull %35) #13
  %506 = xor i1 %505, true
  br label %507

507:                                              ; preds = %503, %279
  %508 = phi i1 [ false, %279 ], [ %506, %503 ]
  %509 = icmp eq %"class.base::Value"* %243, null
  br i1 %509, label %537, label %510

510:                                              ; preds = %507
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %46, %"class.base::Value"* nonnull dereferenceable(32) %41) #13
  %511 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser12kChildrenKeyE, i64 0, i64 0)) #13
  %512 = call %"class.base::Value"* @_ZN4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %243, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser12kChildrenKeyE, i64 0, i64 0), i64 %511) #13
  %513 = icmp eq %"class.base::Value"* %512, null
  br i1 %513, label %514, label %516

514:                                              ; preds = %510
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %181) #13
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %13, i8 zeroext 7) #13
  %515 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %243, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12data_decoder5mojom9XmlParser12kChildrenKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %13) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %181) #13
  br label %516

516:                                              ; preds = %514, %510
  %517 = phi %"class.base::Value"* [ %512, %510 ], [ %515, %514 ]
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* %517, %"class.base::Value"* nonnull dereferenceable(32) %46) #13
  %518 = call %"class.std::__1::vector.21"* @_ZN4base5Value7GetListEv(%"class.base::Value"* %517) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #13
  %519 = icmp eq %"class.std::__1::vector.21"* %518, null
  br i1 %519, label %530, label %520

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %518, i64 0, i32 0, i32 0
  %522 = load %"class.base::Value"*, %"class.base::Value"** %521, align 8
  %523 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %518, i64 0, i32 0, i32 1
  %524 = bitcast %"class.base::Value"** %523 to i64*
  %525 = load i64, i64* %524, align 8
  %526 = ptrtoint %"class.base::Value"* %522 to i64
  %527 = sub i64 %525, %526
  %528 = ashr exact i64 %527, 5
  %529 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %522, i64 %528
  br label %530

530:                                              ; preds = %516, %520
  %531 = phi %"class.base::Value"* [ %522, %520 ], [ null, %516 ]
  %532 = phi %"class.base::Value"* [ %529, %520 ], [ null, %516 ]
  %533 = phi i64 [ %528, %520 ], [ 0, %516 ]
  %534 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %531, i64 %533
  call void @_ZN4base25CheckedContiguousIteratorINS_5ValueEEC2EPKS1_PS1_S4_(%"class.base::CheckedContiguousIterator"* nonnull %12, %"class.base::Value"* %531, %"class.base::Value"* %532, %"class.base::Value"* %534) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %182, i8* nonnull align 8 %183, i64 24, i1 false) #13
  %535 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorINS_5ValueEEmIEl(%"class.base::CheckedContiguousIterator"* nonnull %11, i64 1) #13
  %536 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorINS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %46) #13
  br label %539

537:                                              ; preds = %507
  %538 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* nonnull %37, %"class.base::Value"* nonnull dereferenceable(32) %41) #13
  br label %539

539:                                              ; preds = %537, %530
  %540 = phi %"class.base::Value"* [ %37, %537 ], [ %536, %530 ]
  %541 = ptrtoint %"class.base::Value"* %540 to i64
  br i1 %508, label %542, label %595

542:                                              ; preds = %539
  %543 = load %"class.base::Value"**, %"class.base::Value"*** %99, align 8
  %544 = load %"class.base::Value"**, %"class.base::Value"*** %100, align 8
  %545 = icmp eq %"class.base::Value"** %543, %544
  %546 = ptrtoint %"class.base::Value"** %544 to i64
  br i1 %545, label %551, label %547

547:                                              ; preds = %542
  %548 = bitcast %"class.base::Value"** %543 to i64*
  store i64 %541, i64* %548, align 8
  %549 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %543, i64 1
  %550 = ptrtoint %"class.base::Value"** %549 to i64
  store i64 %550, i64* %184, align 8
  br label %595

551:                                              ; preds = %542
  %552 = ptrtoint %"class.base::Value"** %543 to i64
  %553 = load i64, i64* %185, align 8
  %554 = sub i64 %552, %553
  %555 = ashr exact i64 %554, 3
  %556 = add nsw i64 %555, 1
  %557 = icmp ugt i64 %556, 2305843009213693951
  br i1 %557, label %558, label %560

558:                                              ; preds = %551
  %559 = bitcast %"class.std::__1::vector.29"* %38 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %559) #14
  unreachable

560:                                              ; preds = %551
  %561 = sub i64 %546, %553
  %562 = ashr exact i64 %561, 3
  %563 = icmp ult i64 %562, 1152921504606846975
  br i1 %563, label %564, label %572

564:                                              ; preds = %560
  %565 = ashr exact i64 %561, 2
  %566 = icmp ult i64 %565, %556
  %567 = select i1 %566, i64 %556, i64 %565
  %568 = icmp eq i64 %567, 0
  br i1 %568, label %577, label %569

569:                                              ; preds = %564
  %570 = icmp ugt i64 %567, 2305843009213693951
  br i1 %570, label %571, label %572

571:                                              ; preds = %569
  call void @abort() #14
  unreachable

572:                                              ; preds = %569, %560
  %573 = phi i64 [ %567, %569 ], [ 2305843009213693951, %560 ]
  %574 = shl i64 %573, 3
  %575 = call i8* @_Znwm(i64 %574) #12
  %576 = bitcast i8* %575 to %"class.base::Value"**
  br label %577

577:                                              ; preds = %572, %564
  %578 = phi i64 [ %573, %572 ], [ 0, %564 ]
  %579 = phi i8* [ %575, %572 ], [ null, %564 ]
  %580 = phi %"class.base::Value"** [ %576, %572 ], [ null, %564 ]
  %581 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %580, i64 %555
  %582 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %580, i64 %578
  %583 = ptrtoint %"class.base::Value"** %582 to i64
  %584 = bitcast %"class.base::Value"** %581 to i64*
  store i64 %541, i64* %584, align 8
  %585 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %581, i64 1
  %586 = ptrtoint %"class.base::Value"** %585 to i64
  %587 = ptrtoint %"class.base::Value"** %580 to i64
  %588 = icmp sgt i64 %554, 0
  br i1 %588, label %589, label %591

589:                                              ; preds = %577
  %590 = inttoptr i64 %553 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %579, i8* align 8 %590, i64 %554, i1 false) #13
  br label %591

591:                                              ; preds = %589, %577
  store i64 %587, i64* %185, align 8
  store i64 %586, i64* %184, align 8
  store i64 %583, i64* %186, align 8
  %592 = icmp eq i64 %553, 0
  br i1 %592, label %595, label %593

593:                                              ; preds = %591
  %594 = inttoptr i64 %553 to i8*
  call void @_ZdlPv(i8* %594) #12
  br label %595

595:                                              ; preds = %539, %547, %591, %593, %293, %278
  %596 = phi i32 [ 1, %278 ], [ 2, %293 ], [ 0, %593 ], [ 0, %591 ], [ 0, %547 ], [ 0, %539 ]
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #13
  %597 = load i8, i8* %160, align 1
  %598 = icmp slt i8 %597, 0
  br i1 %598, label %599, label %601

599:                                              ; preds = %595
  %600 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %600) #12
  br label %601

601:                                              ; preds = %595, %599
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #13
  switch i32 %596, label %722 [
    i32 0, label %233
    i32 2, label %233
  ]

602:                                              ; preds = %233
  %603 = load %"class.base::Value"**, %"class.base::Value"*** %98, align 8
  %604 = load %"class.base::Value"**, %"class.base::Value"*** %99, align 8
  %605 = icmp eq %"class.base::Value"** %603, %604
  br i1 %605, label %645, label %606

606:                                              ; preds = %602
  %607 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %608 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = bitcast %"class.base::OnceCallback"* %47 to i64*
  store i64 %609, i64* %610, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %607, align 8
  %611 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %611, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i64 32, i1 false) #13
  %612 = getelementptr inbounds i8, i8* %611, i64 32
  store i8 0, i8* %612, align 1
  %613 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %613)
  store i8 0, i8* %613, align 8
  %614 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %615 = bitcast %union.anon.41* %614 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %615, i8 0, i64 32, i1 false) #13
  %616 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %616) #13
  store i8 1, i8* %616, align 8, !alias.scope !18
  %617 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %617, i8* nonnull %611, i64 32) #13
  %618 = load i64, i64* %610, align 8
  %619 = inttoptr i64 %618 to %"class.base::internal::BindStateBase"*
  %620 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %619, i64 0, i32 1
  %621 = bitcast void ()** %620 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)**
  %622 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)** %621, align 8
  %623 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %623) #13
  %624 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %47, i64 0, i32 0, i32 0, i32 0
  %625 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %618, i64* %625, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %624, align 8
  %626 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void %622(%"class.base::internal::BindStateBase"* %619, %"class.absl::optional.37"* nonnull dereferenceable(40) %9, %"class.absl::optional"* nonnull dereferenceable(32) %10) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %626) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %623) #13
  %627 = load i8, i8* %616, align 8, !range !5
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %638, label %629

629:                                              ; preds = %606
  %630 = bitcast %"class.std::__1::basic_string"* %617 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %629
  %635 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %617, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #12
  br label %637

637:                                              ; preds = %634, %629
  store i8 0, i8* %616, align 8
  br label %638

638:                                              ; preds = %637, %606
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %616) #13
  %639 = load i8, i8* %613, align 8, !range !5
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %643, label %641

641:                                              ; preds = %638
  %642 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %642) #13
  store i8 0, i8* %613, align 8
  br label %643

643:                                              ; preds = %638, %641
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %613)
  call void @_ZdlPv(i8* nonnull %611) #12
  %644 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %47, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %644) #13
  br label %722

645:                                              ; preds = %93, %602
  %646 = load i64, i64* %95, align 8
  %647 = trunc i64 %646 to i8
  %648 = icmp eq i8 %647, 6
  br i1 %648, label %649, label %651

649:                                              ; preds = %645
  %650 = call zeroext i1 @_ZNK4base5Value9DictEmptyEv(%"class.base::Value"* nonnull %37) #13
  br i1 %650, label %651, label %690

651:                                              ; preds = %649, %645
  %652 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %653 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %654 = load i64, i64* %653, align 8
  %655 = bitcast %"class.base::OnceCallback"* %48 to i64*
  store i64 %654, i64* %655, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %652, align 8
  %656 = call i8* @_Znwm(i64 32) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %656, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i64 24, i1 false) #13
  %657 = getelementptr inbounds i8, i8* %656, i64 24
  store i8 0, i8* %657, align 1
  %658 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %658)
  store i8 0, i8* %658, align 8
  %659 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %660 = bitcast %union.anon.41* %659 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %660, i8 0, i64 32, i1 false) #13
  %661 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %661) #13
  store i8 1, i8* %661, align 8, !alias.scope !21
  %662 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %662, i8* nonnull %656, i64 24) #13
  %663 = load i64, i64* %655, align 8
  %664 = inttoptr i64 %663 to %"class.base::internal::BindStateBase"*
  %665 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %664, i64 0, i32 1
  %666 = bitcast void ()** %665 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)**
  %667 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)** %666, align 8
  %668 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %668) #13
  %669 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %48, i64 0, i32 0, i32 0, i32 0
  %670 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %663, i64* %670, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %669, align 8
  %671 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void %667(%"class.base::internal::BindStateBase"* %664, %"class.absl::optional.37"* nonnull dereferenceable(40) %6, %"class.absl::optional"* nonnull dereferenceable(32) %7) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %671) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %668) #13
  %672 = load i8, i8* %661, align 8, !range !5
  %673 = icmp eq i8 %672, 0
  br i1 %673, label %683, label %674

674:                                              ; preds = %651
  %675 = bitcast %"class.std::__1::basic_string"* %662 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %676 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %675, i64 0, i32 1, i32 0
  %677 = load i8, i8* %676, align 1
  %678 = icmp slt i8 %677, 0
  br i1 %678, label %679, label %682

679:                                              ; preds = %674
  %680 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %662, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %681 = load i8*, i8** %680, align 8
  call void @_ZdlPv(i8* %681) #12
  br label %682

682:                                              ; preds = %679, %674
  store i8 0, i8* %661, align 8
  br label %683

683:                                              ; preds = %682, %651
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %661) #13
  %684 = load i8, i8* %658, align 8, !range !5
  %685 = icmp eq i8 %684, 0
  br i1 %685, label %688, label %686

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %687) #13
  store i8 0, i8* %658, align 8
  br label %688

688:                                              ; preds = %683, %686
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %658)
  call void @_ZdlPv(i8* nonnull %656) #12
  %689 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %48, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %689) #13
  br label %722

690:                                              ; preds = %649
  %691 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %691, align 8, !alias.scope !24
  %692 = getelementptr inbounds %"class.absl::optional.37", %"class.absl::optional.37"* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %692, %"class.base::Value"* nonnull dereferenceable(32) %37) #13
  %693 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %693) #13
  store i8 0, i8* %693, align 8
  %694 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %50, i64 0, i32 0, i32 0, i32 0, i32 1
  %695 = bitcast %union.anon.36* %694 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %695, i8 0, i64 24, i1 false) #13
  %696 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %696) #13
  %697 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %698 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %699 = load i64, i64* %698, align 8
  %700 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %699, i64* %700, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %697, align 8
  %701 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %702 = inttoptr i64 %699 to %"class.base::internal::BindStateBase"*
  %703 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %702, i64 0, i32 1
  %704 = bitcast void ()** %703 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)**
  %705 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.37"*, %"class.absl::optional"*)** %704, align 8
  call void %705(%"class.base::internal::BindStateBase"* %702, %"class.absl::optional.37"* nonnull dereferenceable(40) %49, %"class.absl::optional"* nonnull dereferenceable(32) %50) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %701) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %696) #13
  %706 = load i8, i8* %693, align 8, !range !5
  %707 = icmp eq i8 %706, 0
  br i1 %707, label %718, label %708

708:                                              ; preds = %690
  %709 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %710 = bitcast %"class.std::__1::basic_string"* %709 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %711 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %710, i64 0, i32 1, i32 0
  %712 = load i8, i8* %711, align 1
  %713 = icmp slt i8 %712, 0
  br i1 %713, label %714, label %717

714:                                              ; preds = %708
  %715 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %709, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %716 = load i8*, i8** %715, align 8
  call void @_ZdlPv(i8* %716) #12
  br label %717

717:                                              ; preds = %714, %708
  store i8 0, i8* %693, align 8
  br label %718

718:                                              ; preds = %690, %717
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %693) #13
  %719 = load i8, i8* %691, align 8, !range !5
  %720 = icmp eq i8 %719, 0
  br i1 %720, label %722, label %721

721:                                              ; preds = %718
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %692) #13
  store i8 0, i8* %691, align 8
  br label %722

722:                                              ; preds = %601, %721, %718, %688, %643, %229
  %723 = load %"class.base::Value"**, %"class.base::Value"*** %98, align 8
  %724 = icmp eq %"class.base::Value"** %723, null
  br i1 %724, label %729, label %725

725:                                              ; preds = %722
  %726 = ptrtoint %"class.base::Value"** %723 to i64
  %727 = bitcast %"class.base::Value"*** %99 to i64*
  store i64 %726, i64* %727, align 8
  %728 = bitcast %"class.base::Value"** %723 to i8*
  call void @_ZdlPv(i8* %728) #12
  br label %729

729:                                              ; preds = %722, %725
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #13
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #13
  br label %730

730:                                              ; preds = %729, %91
  call void @_ZN9XmlReaderD1Ev(%class.XmlReader* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN9XmlReaderC1Ev(%class.XmlReader*) unnamed_addr #5

declare zeroext i1 @_ZN9XmlReader4LoadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XmlReader*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #6

declare zeroext i1 @_ZN9XmlReader4ReadEv(%class.XmlReader*) local_unnamed_addr #5

declare zeroext i1 @_ZN9XmlReader16IsClosingElementEv(%class.XmlReader*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #6

declare zeroext i1 @_ZN9XmlReader9IsElementEv(%class.XmlReader*) local_unnamed_addr #5

declare void @_ZN9XmlReader12NodeFullNameEv(%"class.std::__1::basic_string"* sret, %class.XmlReader*) local_unnamed_addr #5

declare zeroext i1 @_ZN9XmlReader14IsEmptyElementEv(%class.XmlReader*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #6

declare zeroext i1 @_ZNK4base5Value9DictEmptyEv(%"class.base::Value"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9XmlReaderD1Ev(%class.XmlReader*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN9XmlReader20GetTextIfTextElementEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XmlReader*, %"class.std::__1::basic_string"*) local_unnamed_addr #5

declare zeroext i1 @_ZN9XmlReader21GetTextIfCDataElementEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XmlReader*, %"class.std::__1::basic_string"*) local_unnamed_addr #5

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #5

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base5ValueC1EPKc(%"class.base::Value"*, i8*) unnamed_addr #5

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #5

declare zeroext i1 @_ZN9XmlReader24GetAllDeclaredNamespacesEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%class.XmlReader*, %"class.std::__1::map"*) local_unnamed_addr #5

declare %"class.base::Value"* @_ZN4base5Value6SetKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEOS0_(%"class.base::Value"*, i8*, i64, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair.54"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

declare zeroext i1 @_ZN9XmlReader20GetAllNodeAttributesEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES7_NS0_4lessIS7_EENS5_INS0_4pairIKS7_S7_EEEEEE(%class.XmlReader*, %"class.std::__1::map"*) local_unnamed_addr #5

declare %"class.base::Value"* @_ZN4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #5

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #5

declare %"class.std::__1::vector.21"* @_ZN4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorINS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #13
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorINS_5ValueEEC2EPKS1_PS1_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #13
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorINS_5ValueEEmIEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp slt i64 %1, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = sub i64 0, %1
  %14 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %15 = bitcast %"class.base::Value"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %18 = bitcast %"class.base::Value"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 5
  %22 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp slt i64 %21, %13
  br i1 %23, label %25, label %24

24:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %12, align 8
  br label %34

25:                                               ; preds = %10
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %13) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %12, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 151, %"class.logging::CheckOpResult"* nonnull %5) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  br label %59

35:                                               ; preds = %2
  %36 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  %37 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %37, align 8
  %38 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %39 = bitcast %"class.base::Value"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 5
  %45 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = icmp slt i64 %44, %1
  br i1 %46, label %48, label %47

47:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  store i8* null, i8** %37, align 8
  br label %57

48:                                               ; preds = %35
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  %50 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %44) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8* %49, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  store i8* %52, i8** %37, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 153, %"class.logging::CheckOpResult"* nonnull %7) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %47, %48, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  %58 = sub nsw i64 0, %1
  br label %59

59:                                               ; preds = %57, %34
  %60 = phi i64 [ %58, %57 ], [ %13, %34 ]
  %61 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %62 = load %"class.base::Value"*, %"class.base::Value"** %61, align 8
  %63 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %62, i64 %60
  store %"class.base::Value"* %63, %"class.base::Value"** %61, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_: argument 0"}
!4 = distinct !{!4, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_: argument 0"}
!8 = distinct !{!8, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_: argument 0"}
!11 = distinct !{!11, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN12data_decoder12_GLOBAL__N_114CreateTextNodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_12TextNodeTypeE: argument 0"}
!14 = distinct !{!14, !"_ZN12data_decoder12_GLOBAL__N_114CreateTextNodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_12TextNodeTypeE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN12data_decoder12_GLOBAL__N_116CreateNewElementERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!17 = distinct !{!17, !"_ZN12data_decoder12_GLOBAL__N_116CreateNewElementERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_: argument 0"}
!20 = distinct !{!20, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_: argument 0"}
!23 = distinct !{!23, !"_ZN4absl13make_optionalIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOSC_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4absl13make_optionalIN4base5ValueEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!26 = distinct !{!26, !"_ZN4absl13make_optionalIN4base5ValueEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
