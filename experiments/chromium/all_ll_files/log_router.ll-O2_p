; ModuleID = '../../components/autofill/core/browser/logging/log_router.cc'
source_filename = "../../components/autofill/core/browser/logging/log_router.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::LogRouter" = type { %class.KeyedService, %"class.base::ObserverList", %"class.base::ObserverList.1", %"class.std::__1::vector.5" }
%class.KeyedService = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.1" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.2", i64, i32, [4 x i8] }>
%"class.base::LinkedList.2" = type { %"class.base::LinkNode.3" }
%"class.base::LinkNode.3" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.12" }
%"union.absl::variant_internal::DestructibleUnionImpl.12" = type { %"union.absl::variant_internal::DestructibleUnionImpl.13" }
%"union.absl::variant_internal::DestructibleUnionImpl.13" = type { %"union.absl::variant_internal::DestructibleUnionImpl.14" }
%"union.absl::variant_internal::DestructibleUnionImpl.14" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::Value"* }
%"class.autofill::LogBuffer" = type <{ %"class.std::__1::vector.5", i8, [7 x i8] }>
%"struct.autofill::Tag" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.41" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::BasicStringPiece"* }
%"struct.autofill::Br" = type { i8 }
%"struct.autofill::CTag" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode.3", %"class.base::ObserverList.1"* }
%"class.autofill::LogReceiver" = type { i32 (...)** }
%"class.autofill::LogManager" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode.46", i64, i64 }
%"class.base::internal::WeakLinkNode.46" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

@_ZTVN8autofill9LogRouterE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::LogRouter"*)* @_ZN8autofill9LogRouterD2Ev to i8*), i8* bitcast (void (%"class.autofill::LogRouter"*)* @_ZN8autofill9LogRouterD0Ev to i8*), i8* bitcast (void (%class.KeyedService*)* @_ZN12KeyedService8ShutdownEv to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"div\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

@_ZN8autofill9LogRouterC1Ev = hidden unnamed_addr alias void (%"class.autofill::LogRouter"*), void (%"class.autofill::LogRouter"*)* @_ZN8autofill9LogRouterC2Ev
@_ZN8autofill9LogRouterD1Ev = hidden unnamed_addr alias void (%"class.autofill::LogRouter"*), void (%"class.autofill::LogRouter"*)* @_ZN8autofill9LogRouterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouterC2Ev(%"class.autofill::LogRouter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceC2Ev(%class.KeyedService* %2) #9
  %3 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill9LogRouterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #9
  %7 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2
  %10 = bitcast %"class.base::ObserverList.1"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #9
  %11 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %11, %"class.base::internal::LinkNodeBase"* %11, %"class.base::internal::LinkNodeBase"* %11) #9
  %12 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 2
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3
  %15 = bitcast %"class.std::__1::vector.5"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #9
  ret void
}

declare void @_ZN12KeyedServiceC2Ev(%class.KeyedService*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouterD2Ev(%"class.autofill::LogRouter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill9LogRouterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.base::Value"*, %"class.base::Value"** %4, align 8
  %6 = icmp eq %"class.base::Value"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::Value"* %5 to i8*
  %9 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %11 = icmp eq %"class.base::Value"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.base::Value"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %13, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %14) #9
  %15 = icmp eq %"class.base::Value"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.5"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.base::Value"* %5, %"class.base::Value"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %23 = bitcast %"class.base::internal::LinkNodeBase"** %22 to %"class.base::LinkNode.3"**
  %24 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 1, i32 0
  %25 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %23, align 8
  %26 = icmp eq %"class.base::LinkNode.3"* %25, %24
  br i1 %26, label %39, label %27

27:                                               ; preds = %21, %36
  %28 = phi %"class.base::LinkNode.3"* [ %37, %36 ], [ %25, %21 ]
  %29 = getelementptr inbounds %"class.base::LinkNode.3", %"class.base::LinkNode.3"* %28, i64 1
  %30 = bitcast %"class.base::LinkNode.3"* %29 to %"class.base::ObserverList.1"**
  %31 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %30, align 8
  %32 = icmp eq %"class.base::ObserverList.1"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  store %"class.base::ObserverList.1"* null, %"class.base::ObserverList.1"** %30, align 8
  %34 = getelementptr inbounds %"class.base::LinkNode.3", %"class.base::LinkNode.3"* %28, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %34) #9
  %35 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %23, align 8
  br label %36

36:                                               ; preds = %33, %27
  %37 = phi %"class.base::LinkNode.3"* [ %28, %27 ], [ %35, %33 ]
  %38 = icmp eq %"class.base::LinkNode.3"* %37, %24
  br i1 %38, label %39, label %27

39:                                               ; preds = %36, %21
  %40 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %40, align 8
  %42 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %42, align 8
  %44 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %41, %43
  br i1 %44, label %53, label %45

45:                                               ; preds = %39, %50
  %46 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %51, %50 ], [ %41, %39 ]
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %46, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %46, i64 1
  %52 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %51, %43
  br i1 %52, label %117, label %45

53:                                               ; preds = %45, %39
  %54 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %41, %39 ], [ %46, %45 ]
  %55 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %54 to i64
  %56 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %54, %43
  br i1 %56, label %117, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 1
  %59 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %58, %43
  br i1 %59, label %112, label %60

60:                                               ; preds = %57
  %61 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %43, i64 -2, i32 0
  %62 = ptrtoint i8** %61 to i64
  %63 = sub i64 %62, %55
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %60, %81
  %69 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %83, %81 ], [ %58, %60 ]
  %70 = phi i64 [ %82, %81 ], [ %55, %60 ]
  %71 = phi i64 [ %84, %81 ], [ %66, %60 ]
  %72 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %69, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %68
  %76 = ptrtoint i8* %73 to i64
  %77 = inttoptr i64 %70 to %"class.base::internal::UncheckedObserverAdapter"*
  %78 = inttoptr i64 %70 to i64*
  store i64 %76, i64* %78, align 8
  %79 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %77, i64 1
  %80 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %79 to i64
  br label %81

81:                                               ; preds = %75, %68
  %82 = phi i64 [ %70, %68 ], [ %80, %75 ]
  %83 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %69, i64 1
  %84 = add i64 %71, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %68, !llvm.loop !2

86:                                               ; preds = %81, %60
  %87 = phi i64 [ undef, %60 ], [ %82, %81 ]
  %88 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %58, %60 ], [ %83, %81 ]
  %89 = phi i64 [ %55, %60 ], [ %82, %81 ]
  %90 = icmp ult i64 %63, 24
  br i1 %90, label %108, label %91

91:                                               ; preds = %86, %289
  %92 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %291, %289 ], [ %88, %86 ]
  %93 = phi i64 [ %290, %289 ], [ %89, %86 ]
  %94 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %92, i64 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %91
  %98 = ptrtoint i8* %95 to i64
  %99 = inttoptr i64 %93 to %"class.base::internal::UncheckedObserverAdapter"*
  %100 = inttoptr i64 %93 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %99, i64 1
  %102 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %101 to i64
  br label %103

103:                                              ; preds = %97, %91
  %104 = phi i64 [ %93, %91 ], [ %102, %97 ]
  %105 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %92, i64 1, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %267, label %261

108:                                              ; preds = %289, %86
  %109 = phi i64 [ %87, %86 ], [ %290, %289 ]
  %110 = inttoptr i64 %109 to %"class.base::internal::UncheckedObserverAdapter"*
  %111 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %42, align 8
  br label %112

112:                                              ; preds = %108, %57
  %113 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %43, %57 ], [ %111, %108 ]
  %114 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %54, %57 ], [ %110, %108 ]
  %115 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %114, %113
  br i1 %115, label %117, label %116

116:                                              ; preds = %112
  store %"class.base::internal::UncheckedObserverAdapter"* %114, %"class.base::internal::UncheckedObserverAdapter"** %42, align 8
  br label %117

117:                                              ; preds = %50, %116, %112, %53
  %118 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %40, align 8
  %119 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %118 to i64
  %122 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %42 to i64*
  store i64 %121, i64* %122, align 8
  %123 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %118 to i8*
  tail call void @_ZdlPv(i8* %123) #10
  br label %124

124:                                              ; preds = %117, %120
  %125 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %126 = bitcast %"class.base::internal::LinkNodeBase"** %125 to %"class.base::LinkNode"**
  %127 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 1, i32 0
  %128 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %126, align 8
  %129 = icmp eq %"class.base::LinkNode"* %128, %127
  br i1 %129, label %142, label %130

130:                                              ; preds = %124, %139
  %131 = phi %"class.base::LinkNode"* [ %140, %139 ], [ %128, %124 ]
  %132 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %131, i64 1
  %133 = bitcast %"class.base::LinkNode"* %132 to %"class.base::ObserverList"**
  %134 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %133, align 8
  %135 = icmp eq %"class.base::ObserverList"* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %133, align 8
  %137 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %131, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %137) #9
  %138 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %126, align 8
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi %"class.base::LinkNode"* [ %131, %130 ], [ %138, %136 ]
  %141 = icmp eq %"class.base::LinkNode"* %140, %127
  br i1 %141, label %142, label %130

142:                                              ; preds = %139, %124
  %143 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %144 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %143, align 8
  %145 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %146 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %145, align 8
  %147 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %144, %146
  br i1 %147, label %156, label %148

148:                                              ; preds = %142, %153
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %154, %153 ], [ %144, %142 ]
  %150 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = icmp eq i8* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %155 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %154, %146
  br i1 %155, label %220, label %148

156:                                              ; preds = %148, %142
  %157 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %144, %142 ], [ %149, %148 ]
  %158 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %157 to i64
  %159 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %157, %146
  br i1 %159, label %220, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %162 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %161, %146
  br i1 %162, label %215, label %163

163:                                              ; preds = %160
  %164 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %146, i64 -2, i32 0
  %165 = ptrtoint i8** %164 to i64
  %166 = sub i64 %165, %158
  %167 = lshr i64 %166, 3
  %168 = add nuw nsw i64 %167, 1
  %169 = and i64 %168, 3
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %189, label %171

171:                                              ; preds = %163, %184
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %186, %184 ], [ %161, %163 ]
  %173 = phi i64 [ %185, %184 ], [ %158, %163 ]
  %174 = phi i64 [ %187, %184 ], [ %169, %163 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %171
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %173 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %171
  %185 = phi i64 [ %173, %171 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1
  %187 = add i64 %174, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %171, !llvm.loop !4

189:                                              ; preds = %184, %163
  %190 = phi i64 [ undef, %163 ], [ %185, %184 ]
  %191 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %161, %163 ], [ %186, %184 ]
  %192 = phi i64 [ %158, %163 ], [ %185, %184 ]
  %193 = icmp ult i64 %166, 24
  br i1 %193, label %211, label %194

194:                                              ; preds = %189, %257
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %259, %257 ], [ %191, %189 ]
  %196 = phi i64 [ %258, %257 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = icmp eq i8* %198, null
  br i1 %199, label %206, label %200

200:                                              ; preds = %194
  %201 = ptrtoint i8* %198 to i64
  %202 = inttoptr i64 %196 to %"class.base::internal::UncheckedObserverAdapter"*
  %203 = inttoptr i64 %196 to i64*
  store i64 %201, i64* %203, align 8
  %204 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %202, i64 1
  %205 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %204 to i64
  br label %206

206:                                              ; preds = %200, %194
  %207 = phi i64 [ %196, %194 ], [ %205, %200 ]
  %208 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 1, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %235, label %229

211:                                              ; preds = %257, %189
  %212 = phi i64 [ %190, %189 ], [ %258, %257 ]
  %213 = inttoptr i64 %212 to %"class.base::internal::UncheckedObserverAdapter"*
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %145, align 8
  br label %215

215:                                              ; preds = %211, %160
  %216 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %146, %160 ], [ %214, %211 ]
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %157, %160 ], [ %213, %211 ]
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %217, %216
  br i1 %218, label %220, label %219

219:                                              ; preds = %215
  store %"class.base::internal::UncheckedObserverAdapter"* %217, %"class.base::internal::UncheckedObserverAdapter"** %145, align 8
  br label %220

220:                                              ; preds = %153, %219, %215, %156
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %143, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %221, null
  br i1 %222, label %227, label %223

223:                                              ; preds = %220
  %224 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %221 to i64
  %225 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %145 to i64*
  store i64 %224, i64* %225, align 8
  %226 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %221 to i8*
  tail call void @_ZdlPv(i8* %226) #10
  br label %227

227:                                              ; preds = %220, %223
  %228 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %228) #9
  ret void

229:                                              ; preds = %206
  %230 = ptrtoint i8* %209 to i64
  %231 = inttoptr i64 %207 to %"class.base::internal::UncheckedObserverAdapter"*
  %232 = inttoptr i64 %207 to i64*
  store i64 %230, i64* %232, align 8
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1
  %234 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %233 to i64
  br label %235

235:                                              ; preds = %229, %206
  %236 = phi i64 [ %207, %206 ], [ %234, %229 ]
  %237 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 2, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %246, label %240

240:                                              ; preds = %235
  %241 = ptrtoint i8* %238 to i64
  %242 = inttoptr i64 %236 to %"class.base::internal::UncheckedObserverAdapter"*
  %243 = inttoptr i64 %236 to i64*
  store i64 %241, i64* %243, align 8
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %245 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %244 to i64
  br label %246

246:                                              ; preds = %240, %235
  %247 = phi i64 [ %236, %235 ], [ %245, %240 ]
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 3, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = icmp eq i8* %249, null
  br i1 %250, label %257, label %251

251:                                              ; preds = %246
  %252 = ptrtoint i8* %249 to i64
  %253 = inttoptr i64 %247 to %"class.base::internal::UncheckedObserverAdapter"*
  %254 = inttoptr i64 %247 to i64*
  store i64 %252, i64* %254, align 8
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %253, i64 1
  %256 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %255 to i64
  br label %257

257:                                              ; preds = %251, %246
  %258 = phi i64 [ %247, %246 ], [ %256, %251 ]
  %259 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %195, i64 4
  %260 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %259, %146
  br i1 %260, label %211, label %194

261:                                              ; preds = %103
  %262 = ptrtoint i8* %106 to i64
  %263 = inttoptr i64 %104 to %"class.base::internal::UncheckedObserverAdapter"*
  %264 = inttoptr i64 %104 to i64*
  store i64 %262, i64* %264, align 8
  %265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %263, i64 1
  %266 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %265 to i64
  br label %267

267:                                              ; preds = %261, %103
  %268 = phi i64 [ %104, %103 ], [ %266, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %92, i64 2, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %267
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %268 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %268 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %267
  %279 = phi i64 [ %268, %267 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %92, i64 3, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %289, label %283

283:                                              ; preds = %278
  %284 = ptrtoint i8* %281 to i64
  %285 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = inttoptr i64 %279 to i64*
  store i64 %284, i64* %286, align 8
  %287 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 1
  %288 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %287 to i64
  br label %289

289:                                              ; preds = %283, %278
  %290 = phi i64 [ %279, %278 ], [ %288, %283 ]
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %92, i64 4
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %43
  br i1 %292, label %108, label %91
}

; Function Attrs: nounwind
declare void @_ZN12KeyedServiceD2Ev(%class.KeyedService*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouterD0Ev(%"class.autofill::LogRouter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8autofill9LogRouterD2Ev(%"class.autofill::LogRouter"* %0) #9
  %2 = bitcast %"class.autofill::LogRouter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouter18CreateEntryForTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.autofill::LogBuffer", align 8
  %4 = alloca %"struct.autofill::Tag", align 8
  %5 = alloca %"class.std::__1::vector.39", align 8
  %6 = alloca %"struct.autofill::Br", align 1
  %7 = alloca %"struct.autofill::CTag", align 1
  %8 = bitcast %"class.autofill::LogBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #9
  %9 = bitcast %"class.autofill::LogBuffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @_ZN8autofill9LogBufferC1Ev(%"class.autofill::LogBuffer"* nonnull %3) #9
  %10 = bitcast %"struct.autofill::Tag"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = bitcast %"struct.autofill::Tag"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 3, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #9
  %13 = getelementptr inbounds i8, i8* %10, i64 3
  store i8 0, i8* %13, align 1
  %14 = call dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEONS_3TagE(%"class.autofill::LogBuffer"* nonnull dereferenceable(32) %3, %"struct.autofill::Tag"* nonnull dereferenceable(24) %4) #9
  %15 = load i8, i8* %12, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.autofill::Tag", %"struct.autofill::Tag"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  %21 = bitcast %"class.std::__1::vector.39"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %24 to i64
  %33 = select i1 %25, i64 %31, i64 %32
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.39"* nonnull sret %5, i8* %29, i64 %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 1, i32 1) #9
  %34 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 0
  %35 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 1
  %37 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %36, align 8
  %38 = icmp eq %"class.base::BasicStringPiece"* %35, %37
  br i1 %38, label %43, label %39

39:                                               ; preds = %20
  %40 = getelementptr inbounds %"struct.autofill::Br", %"struct.autofill::Br"* %6, i64 0, i32 0
  br label %53

41:                                               ; preds = %53
  %42 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %34, align 8
  br label %43

43:                                               ; preds = %41, %20
  %44 = phi %"class.base::BasicStringPiece"* [ %42, %41 ], [ %35, %20 ]
  %45 = icmp eq %"class.base::BasicStringPiece"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = ptrtoint %"class.base::BasicStringPiece"* %44 to i64
  %48 = bitcast %"class.base::BasicStringPiece"** %36 to i64*
  store i64 %47, i64* %48, align 8
  %49 = bitcast %"class.base::BasicStringPiece"* %44 to i8*
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  %51 = getelementptr inbounds %"struct.autofill::CTag", %"struct.autofill::CTag"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %51) #9
  %52 = call dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEONS_4CTagE(%"class.autofill::LogBuffer"* nonnull dereferenceable(32) %3, %"struct.autofill::CTag"* nonnull dereferenceable(1) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %51) #9
  call void @_ZN8autofill9LogBuffer14RetrieveResultEv(%"class.base::Value"* sret %0, %"class.autofill::LogBuffer"* nonnull %3) #9
  call void @_ZN8autofill9LogBufferD1Ev(%"class.autofill::LogBuffer"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #9
  ret void

53:                                               ; preds = %39, %53
  %54 = phi %"class.base::BasicStringPiece"* [ %35, %39 ], [ %61, %53 ]
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %54, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %54, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = call dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.autofill::LogBuffer"* nonnull dereferenceable(32) %3, i8* %56, i64 %58) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #9
  %60 = call dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEONS_2BrE(%"class.autofill::LogBuffer"* dereferenceable(32) %59, %"struct.autofill::Br"* nonnull dereferenceable(1) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #9
  %61 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %54, i64 1
  %62 = icmp eq %"class.base::BasicStringPiece"* %61, %37
  br i1 %62, label %41, label %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8autofill9LogBufferC1Ev(%"class.autofill::LogBuffer"*) unnamed_addr #1

declare dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEONS_3TagE(%"class.autofill::LogBuffer"* dereferenceable(32), %"struct.autofill::Tag"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.39"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEONS_2BrE(%"class.autofill::LogBuffer"* dereferenceable(32), %"struct.autofill::Br"* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.autofill::LogBuffer"* dereferenceable(32), i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dereferenceable(32) %"class.autofill::LogBuffer"* @_ZN8autofilllsERNS_9LogBufferEONS_4CTagE(%"class.autofill::LogBuffer"* dereferenceable(32), %"struct.autofill::CTag"* dereferenceable(1)) local_unnamed_addr #1

declare void @_ZN8autofill9LogBuffer14RetrieveResultEv(%"class.base::Value"* sret, %"class.autofill::LogBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8autofill9LogBufferD1Ev(%"class.autofill::LogBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouter10ProcessLogERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::LogRouter"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #9
  call void @_ZN8autofill9LogRouter18CreateEntryForTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  call void @_ZN8autofill9LogRouter10ProcessLogEON4base5ValueE(%"class.autofill::LogRouter"* %0, %"class.base::Value"* nonnull dereferenceable(32) %3)
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouter10ProcessLogEON4base5ValueE(%"class.autofill::LogRouter"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %7 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %9 = icmp ult %"class.base::Value"* %6, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %6, %"class.base::Value"* dereferenceable(32) %1) #9
  %11 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %6, i64 1
  %12 = ptrtoint %"class.base::Value"* %11 to i64
  %13 = bitcast %"class.base::Value"** %5 to i64*
  store i64 %12, i64* %13, align 8
  br label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3
  tail call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.5"* %15, %"class.base::Value"* dereferenceable(32) %1) #9
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2
  %18 = bitcast %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %22 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %17, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 40, i1 false)
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8, !noalias !5
  %25 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %25, align 8, !noalias !5
  %27 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %26
  %28 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %28) #9
  br i1 %27, label %29, label %31

29:                                               ; preds = %16
  %30 = bitcast %"class.base::ObserverList.1"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #9, !alias.scope !5
  br label %71

31:                                               ; preds = %16
  store %"class.base::ObserverList.1"* %17, %"class.base::ObserverList.1"** %19, align 8
  %32 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %28, %"class.base::internal::LinkNodeBase"* %32) #9
  store i64 0, i64* %20, align 8
  %33 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::ObserverList.1"* %17 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 3
  br label %43

43:                                               ; preds = %36, %31
  %44 = phi i64 [ %42, %36 ], [ -1, %31 ]
  store i64 %44, i64* %21, align 8
  %45 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %19, align 8
  %46 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %45, i64 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.base::ObserverList.1"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, %44
  %54 = select i1 %53, i64 %52, i64 %44
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %43
  %57 = inttoptr i64 %50 to %"class.base::internal::UncheckedObserverAdapter"*
  %58 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %45, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %57, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %71

62:                                               ; preds = %56, %66
  %63 = phi i64 [ %64, %66 ], [ 0, %56 ]
  %64 = add nuw i64 %63, 1
  store i64 %64, i64* %20, align 8
  %65 = icmp ult i64 %64, %54
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  %67 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %58, align 8
  %68 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %67, i64 %64, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %62, label %71

71:                                               ; preds = %66, %62, %56, %43, %29
  %72 = bitcast %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %76 = getelementptr inbounds %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.base::ObserverList<autofill::LogReceiver, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %76) #9
  %78 = bitcast %"class.base::ObserverList.1"** %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #9, !alias.scope !8
  %79 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %19, align 8
  br label %80

80:                                               ; preds = %322, %71
  %81 = phi %"class.base::ObserverList.1"* [ %79, %71 ], [ %320, %322 ]
  %82 = icmp eq %"class.base::ObserverList.1"* %81, null
  br i1 %82, label %98, label %83

83:                                               ; preds = %80
  %84 = load i64, i64* %20, align 8
  %85 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %81, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.base::ObserverList.1"* %81 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 3
  %92 = load i64, i64* %21, align 8
  %93 = icmp ult i64 %91, %92
  %94 = select i1 %93, i64 %91, i64 %92
  %95 = icmp eq i64 %84, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %83
  %97 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %73, align 8
  br label %114

98:                                               ; preds = %83, %80
  %99 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %73, align 8
  %100 = icmp eq %"class.base::ObserverList.1"* %99, null
  br i1 %100, label %214, label %101

101:                                              ; preds = %98
  %102 = load i64, i64* %74, align 8
  %103 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %99, i64 0, i32 0, i32 0, i32 1
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.base::ObserverList.1"* %99 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = ashr exact i64 %108, 3
  %110 = load i64, i64* %75, align 8
  %111 = icmp ult i64 %109, %110
  %112 = select i1 %111, i64 %109, i64 %110
  %113 = icmp eq i64 %102, %112
  br i1 %113, label %123, label %114

114:                                              ; preds = %101, %96
  %115 = phi %"class.base::ObserverList.1"* [ %97, %96 ], [ %99, %101 ]
  %116 = icmp eq %"class.base::ObserverList.1"* %81, %115
  %117 = load i64, i64* %20, align 8
  %118 = load i64, i64* %74, align 8
  %119 = icmp eq i64 %117, %118
  %120 = and i1 %116, %119
  br i1 %120, label %121, label %308

121:                                              ; preds = %114
  %122 = icmp eq %"class.base::ObserverList.1"* %81, null
  br i1 %122, label %214, label %123

123:                                              ; preds = %101, %121
  %124 = phi %"class.base::ObserverList.1"* [ %81, %121 ], [ %99, %101 ]
  %125 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %124, i64 0, i32 1
  %126 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %124, i64 0, i32 1, i32 0, i32 0, i32 1
  %127 = bitcast %"class.base::internal::LinkNodeBase"** %126 to %"class.base::LinkNode.3"**
  %128 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %127, align 8
  %129 = bitcast %"class.base::LinkedList.2"* %125 to %"class.base::LinkNode.3"**
  %130 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %129, align 8
  %131 = icmp eq %"class.base::LinkNode.3"* %128, %130
  br i1 %131, label %132, label %210

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %124, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %133, align 8
  %135 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %124, i64 0, i32 0, i32 0, i32 1
  %136 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %136
  br i1 %137, label %146, label %138

138:                                              ; preds = %132, %143
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %144, %143 ], [ %134, %132 ]
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %145 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %144, %136
  br i1 %145, label %210, label %138

146:                                              ; preds = %138, %132
  %147 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %132 ], [ %139, %138 ]
  %148 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %147 to i64
  %149 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %147, %136
  br i1 %149, label %210, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %147, i64 1
  %152 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %151, %136
  br i1 %152, label %205, label %153

153:                                              ; preds = %150
  %154 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 -2, i32 0
  %155 = ptrtoint i8** %154 to i64
  %156 = sub i64 %155, %148
  %157 = lshr i64 %156, 3
  %158 = add nuw nsw i64 %157, 1
  %159 = and i64 %158, 3
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %179, label %161

161:                                              ; preds = %153, %174
  %162 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %176, %174 ], [ %151, %153 ]
  %163 = phi i64 [ %175, %174 ], [ %148, %153 ]
  %164 = phi i64 [ %177, %174 ], [ %159, %153 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = icmp eq i8* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %161
  %169 = ptrtoint i8* %166 to i64
  %170 = inttoptr i64 %163 to %"class.base::internal::UncheckedObserverAdapter"*
  %171 = inttoptr i64 %163 to i64*
  store i64 %169, i64* %171, align 8
  %172 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %170, i64 1
  %173 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %172 to i64
  br label %174

174:                                              ; preds = %168, %161
  %175 = phi i64 [ %163, %161 ], [ %173, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %177 = add i64 %164, -1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %161, !llvm.loop !11

179:                                              ; preds = %174, %153
  %180 = phi i64 [ undef, %153 ], [ %175, %174 ]
  %181 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %151, %153 ], [ %176, %174 ]
  %182 = phi i64 [ %148, %153 ], [ %175, %174 ]
  %183 = icmp ult i64 %156, 24
  br i1 %183, label %201, label %184

184:                                              ; preds = %179, %412
  %185 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %414, %412 ], [ %181, %179 ]
  %186 = phi i64 [ %413, %412 ], [ %182, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %184
  %191 = ptrtoint i8* %188 to i64
  %192 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = inttoptr i64 %186 to i64*
  store i64 %191, i64* %193, align 8
  %194 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %192, i64 1
  %195 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %194 to i64
  br label %196

196:                                              ; preds = %190, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %190 ]
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 1, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %390, label %384

201:                                              ; preds = %412, %179
  %202 = phi i64 [ %180, %179 ], [ %413, %412 ]
  %203 = inttoptr i64 %202 to %"class.base::internal::UncheckedObserverAdapter"*
  %204 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  br label %205

205:                                              ; preds = %201, %150
  %206 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %150 ], [ %204, %201 ]
  %207 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %147, %150 ], [ %203, %201 ]
  %208 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %207, %206
  br i1 %208, label %210, label %209

209:                                              ; preds = %205
  store %"class.base::internal::UncheckedObserverAdapter"* %207, %"class.base::internal::UncheckedObserverAdapter"** %135, align 8
  br label %210

210:                                              ; preds = %143, %209, %205, %146, %123
  %211 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %73, align 8
  %212 = icmp eq %"class.base::ObserverList.1"* %211, null
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  store %"class.base::ObserverList.1"* null, %"class.base::ObserverList.1"** %73, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %76) #9
  br label %214

214:                                              ; preds = %98, %121, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #9
  %215 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %19, align 8
  %216 = icmp eq %"class.base::ObserverList.1"* %215, null
  br i1 %216, label %307, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %215, i64 0, i32 1
  %219 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %215, i64 0, i32 1, i32 0, i32 0, i32 1
  %220 = bitcast %"class.base::internal::LinkNodeBase"** %219 to %"class.base::LinkNode.3"**
  %221 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %220, align 8
  %222 = bitcast %"class.base::LinkedList.2"* %218 to %"class.base::LinkNode.3"**
  %223 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %222, align 8
  %224 = icmp eq %"class.base::LinkNode.3"* %221, %223
  br i1 %224, label %225, label %303

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %215, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %226, align 8
  %228 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %215, i64 0, i32 0, i32 0, i32 1
  %229 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %229
  br i1 %230, label %239, label %231

231:                                              ; preds = %225, %236
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %237, %236 ], [ %227, %225 ]
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = icmp eq i8* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %238 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %237, %229
  br i1 %238, label %303, label %231

239:                                              ; preds = %231, %225
  %240 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %225 ], [ %232, %231 ]
  %241 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %240 to i64
  %242 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %240, %229
  br i1 %242, label %303, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 1
  %245 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %244, %229
  br i1 %245, label %298, label %246

246:                                              ; preds = %243
  %247 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 -2, i32 0
  %248 = ptrtoint i8** %247 to i64
  %249 = sub i64 %248, %241
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 3
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %272, label %254

254:                                              ; preds = %246, %267
  %255 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %269, %267 ], [ %244, %246 ]
  %256 = phi i64 [ %268, %267 ], [ %241, %246 ]
  %257 = phi i64 [ %270, %267 ], [ %252, %246 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %267, label %261

261:                                              ; preds = %254
  %262 = ptrtoint i8* %259 to i64
  %263 = inttoptr i64 %256 to %"class.base::internal::UncheckedObserverAdapter"*
  %264 = inttoptr i64 %256 to i64*
  store i64 %262, i64* %264, align 8
  %265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %263, i64 1
  %266 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %265 to i64
  br label %267

267:                                              ; preds = %261, %254
  %268 = phi i64 [ %256, %254 ], [ %266, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %270 = add i64 %257, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %254, !llvm.loop !12

272:                                              ; preds = %267, %246
  %273 = phi i64 [ undef, %246 ], [ %268, %267 ]
  %274 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %244, %246 ], [ %269, %267 ]
  %275 = phi i64 [ %241, %246 ], [ %268, %267 ]
  %276 = icmp ult i64 %249, 24
  br i1 %276, label %294, label %277

277:                                              ; preds = %272, %380
  %278 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %382, %380 ], [ %274, %272 ]
  %279 = phi i64 [ %381, %380 ], [ %275, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 0, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %289, label %283

283:                                              ; preds = %277
  %284 = ptrtoint i8* %281 to i64
  %285 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = inttoptr i64 %279 to i64*
  store i64 %284, i64* %286, align 8
  %287 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %285, i64 1
  %288 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %287 to i64
  br label %289

289:                                              ; preds = %283, %277
  %290 = phi i64 [ %279, %277 ], [ %288, %283 ]
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 1, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = icmp eq i8* %292, null
  br i1 %293, label %358, label %352

294:                                              ; preds = %380, %272
  %295 = phi i64 [ %273, %272 ], [ %381, %380 ]
  %296 = inttoptr i64 %295 to %"class.base::internal::UncheckedObserverAdapter"*
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  br label %298

298:                                              ; preds = %294, %243
  %299 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %243 ], [ %297, %294 ]
  %300 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %240, %243 ], [ %296, %294 ]
  %301 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %300, %299
  br i1 %301, label %303, label %302

302:                                              ; preds = %298
  store %"class.base::internal::UncheckedObserverAdapter"* %300, %"class.base::internal::UncheckedObserverAdapter"** %228, align 8
  br label %303

303:                                              ; preds = %236, %302, %298, %239, %217
  %304 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %19, align 8
  %305 = icmp eq %"class.base::ObserverList.1"* %304, null
  br i1 %305, label %307, label %306

306:                                              ; preds = %303
  store %"class.base::ObserverList.1"* null, %"class.base::ObserverList.1"** %19, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %28) #9
  br label %307

307:                                              ; preds = %214, %303, %306
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #9
  ret void

308:                                              ; preds = %114
  %309 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %81, i64 0, i32 0, i32 0, i32 0
  %310 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %309, align 8
  %311 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %310, i64 %117
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %311 to %"class.autofill::LogReceiver"**
  %313 = load %"class.autofill::LogReceiver"*, %"class.autofill::LogReceiver"** %312, align 8
  %314 = load %"class.base::Value"*, %"class.base::Value"** %5, align 8
  %315 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %314, i64 -1
  %316 = bitcast %"class.autofill::LogReceiver"* %313 to void (%"class.autofill::LogReceiver"*, %"class.base::Value"*)***
  %317 = load void (%"class.autofill::LogReceiver"*, %"class.base::Value"*)**, void (%"class.autofill::LogReceiver"*, %"class.base::Value"*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.autofill::LogReceiver"*, %"class.base::Value"*)*, void (%"class.autofill::LogReceiver"*, %"class.base::Value"*)** %317, i64 2
  %319 = load void (%"class.autofill::LogReceiver"*, %"class.base::Value"*)*, void (%"class.autofill::LogReceiver"*, %"class.base::Value"*)** %318, align 8
  call void %319(%"class.autofill::LogReceiver"* %313, %"class.base::Value"* dereferenceable(32) %315) #9
  %320 = load %"class.base::ObserverList.1"*, %"class.base::ObserverList.1"** %19, align 8
  %321 = icmp eq %"class.base::ObserverList.1"* %320, null
  br i1 %321, label %322, label %323

322:                                              ; preds = %347, %343, %308, %323, %337
  br label %80

323:                                              ; preds = %308
  %324 = load i64, i64* %20, align 8
  %325 = add i64 %324, 1
  store i64 %325, i64* %20, align 8
  %326 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %320, i64 0, i32 0, i32 0, i32 1
  %327 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.base::ObserverList.1"* %320 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = sub i64 %328, %330
  %332 = ashr exact i64 %331, 3
  %333 = load i64, i64* %21, align 8
  %334 = icmp ult i64 %332, %333
  %335 = select i1 %334, i64 %332, i64 %333
  %336 = icmp ult i64 %325, %335
  br i1 %336, label %337, label %322

337:                                              ; preds = %323
  %338 = inttoptr i64 %330 to %"class.base::internal::UncheckedObserverAdapter"*
  %339 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %320, i64 0, i32 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %325, i32 0
  %341 = load i8*, i8** %340, align 8
  %342 = icmp eq i8* %341, null
  br i1 %342, label %343, label %322

343:                                              ; preds = %337, %347
  %344 = phi i64 [ %345, %347 ], [ %325, %337 ]
  %345 = add nuw i64 %344, 1
  store i64 %345, i64* %20, align 8
  %346 = icmp ult i64 %345, %335
  br i1 %346, label %347, label %322

347:                                              ; preds = %343
  %348 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %339, align 8
  %349 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %348, i64 %345, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = icmp eq i8* %350, null
  br i1 %351, label %343, label %322

352:                                              ; preds = %289
  %353 = ptrtoint i8* %292 to i64
  %354 = inttoptr i64 %290 to %"class.base::internal::UncheckedObserverAdapter"*
  %355 = inttoptr i64 %290 to i64*
  store i64 %353, i64* %355, align 8
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %354, i64 1
  %357 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %356 to i64
  br label %358

358:                                              ; preds = %352, %289
  %359 = phi i64 [ %290, %289 ], [ %357, %352 ]
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 2, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp eq i8* %361, null
  br i1 %362, label %369, label %363

363:                                              ; preds = %358
  %364 = ptrtoint i8* %361 to i64
  %365 = inttoptr i64 %359 to %"class.base::internal::UncheckedObserverAdapter"*
  %366 = inttoptr i64 %359 to i64*
  store i64 %364, i64* %366, align 8
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 1
  %368 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %367 to i64
  br label %369

369:                                              ; preds = %363, %358
  %370 = phi i64 [ %359, %358 ], [ %368, %363 ]
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 3, i32 0
  %372 = load i8*, i8** %371, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %380, label %374

374:                                              ; preds = %369
  %375 = ptrtoint i8* %372 to i64
  %376 = inttoptr i64 %370 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %370 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %369
  %381 = phi i64 [ %370, %369 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 4
  %383 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %382, %229
  br i1 %383, label %294, label %277

384:                                              ; preds = %196
  %385 = ptrtoint i8* %199 to i64
  %386 = inttoptr i64 %197 to %"class.base::internal::UncheckedObserverAdapter"*
  %387 = inttoptr i64 %197 to i64*
  store i64 %385, i64* %387, align 8
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %386, i64 1
  %389 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %388 to i64
  br label %390

390:                                              ; preds = %384, %196
  %391 = phi i64 [ %197, %196 ], [ %389, %384 ]
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 2, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = icmp eq i8* %393, null
  br i1 %394, label %401, label %395

395:                                              ; preds = %390
  %396 = ptrtoint i8* %393 to i64
  %397 = inttoptr i64 %391 to %"class.base::internal::UncheckedObserverAdapter"*
  %398 = inttoptr i64 %391 to i64*
  store i64 %396, i64* %398, align 8
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %397, i64 1
  %400 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %399 to i64
  br label %401

401:                                              ; preds = %395, %390
  %402 = phi i64 [ %391, %390 ], [ %400, %395 ]
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 3, i32 0
  %404 = load i8*, i8** %403, align 8
  %405 = icmp eq i8* %404, null
  br i1 %405, label %412, label %406

406:                                              ; preds = %401
  %407 = ptrtoint i8* %404 to i64
  %408 = inttoptr i64 %402 to %"class.base::internal::UncheckedObserverAdapter"*
  %409 = inttoptr i64 %402 to i64*
  store i64 %407, i64* %409, align 8
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %408, i64 1
  %411 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %410 to i64
  br label %412

412:                                              ; preds = %406, %401
  %413 = phi i64 [ %402, %401 ], [ %411, %406 ]
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 4
  %415 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %414, %136
  br i1 %415, label %201, label %184
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill9LogRouter15RegisterManagerEPNS_10LogManagerE(%"class.autofill::LogRouter"*, %"class.autofill::LogManager"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1
  %4 = icmp eq %"class.autofill::LogManager"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.autofill::LogManager"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.autofill::LogManager"* %1 to i64
  %32 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #11
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #9
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  %100 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = icmp ne i64 %101, 0
  ret i1 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouter17UnregisterManagerEPNS_10LogManagerE(%"class.autofill::LogRouter"*, %"class.autofill::LogManager"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.autofill::LogManager"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #9
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.5"* @_ZN8autofill9LogRouter16RegisterReceiverEPNS_11LogReceiverE(%"class.autofill::LogRouter"*, %"class.autofill::LogReceiver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %343

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1
  %11 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %15 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %10, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %17 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %15, align 8, !noalias !13
  %18 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %18, align 8, !noalias !13
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %17, %19
  %21 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %21) #9
  br i1 %20, label %22, label %24

22:                                               ; preds = %9
  %23 = bitcast %"class.base::ObserverList"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9, !alias.scope !13
  br label %64

24:                                               ; preds = %9
  store %"class.base::ObserverList"* %10, %"class.base::ObserverList"** %12, align 8
  %25 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %21, %"class.base::internal::LinkNodeBase"* %25) #9
  store i64 0, i64* %13, align 8
  %26 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %18 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::ObserverList"* %10 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  br label %36

36:                                               ; preds = %29, %24
  %37 = phi i64 [ %35, %29 ], [ -1, %24 ]
  store i64 %37, i64* %14, align 8
  %38 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %12, align 8
  %39 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %38, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::ObserverList"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, %37
  %47 = select i1 %46, i64 %45, i64 %37
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %36
  %50 = inttoptr i64 %43 to %"class.base::internal::UncheckedObserverAdapter"*
  %51 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %38, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %50, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %64

55:                                               ; preds = %49, %59
  %56 = phi i64 [ %57, %59 ], [ 0, %49 ]
  %57 = add nuw i64 %56, 1
  store i64 %57, i64* %13, align 8
  %58 = icmp ult i64 %57, %47
  br i1 %58, label %59, label %64

59:                                               ; preds = %55
  %60 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %51, align 8
  %61 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %60, i64 %57, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %55, label %64

64:                                               ; preds = %59, %55, %49, %36, %22
  %65 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #9
  %66 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %68 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %69 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %69) #9
  %71 = bitcast %"class.base::ObserverList"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #9, !alias.scope !16
  %72 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %12, align 8
  br label %73

73:                                               ; preds = %313, %64
  %74 = phi %"class.base::ObserverList"* [ %72, %64 ], [ %311, %313 ]
  %75 = icmp eq %"class.base::ObserverList"* %74, null
  br i1 %75, label %91, label %76

76:                                               ; preds = %73
  %77 = load i64, i64* %13, align 8
  %78 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %74, i64 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.base::ObserverList"* %74 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %80, %82
  %84 = ashr exact i64 %83, 3
  %85 = load i64, i64* %14, align 8
  %86 = icmp ult i64 %84, %85
  %87 = select i1 %86, i64 %84, i64 %85
  %88 = icmp eq i64 %77, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %76
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %66, align 8
  br label %107

91:                                               ; preds = %76, %73
  %92 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %66, align 8
  %93 = icmp eq %"class.base::ObserverList"* %92, null
  br i1 %93, label %207, label %94

94:                                               ; preds = %91
  %95 = load i64, i64* %67, align 8
  %96 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %92, i64 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.base::ObserverList"* %92 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = ashr exact i64 %101, 3
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  %105 = select i1 %104, i64 %102, i64 %103
  %106 = icmp eq i64 %95, %105
  br i1 %106, label %116, label %107

107:                                              ; preds = %94, %89
  %108 = phi %"class.base::ObserverList"* [ %90, %89 ], [ %92, %94 ]
  %109 = icmp eq %"class.base::ObserverList"* %74, %108
  %110 = load i64, i64* %13, align 8
  %111 = load i64, i64* %67, align 8
  %112 = icmp eq i64 %110, %111
  %113 = and i1 %109, %112
  br i1 %113, label %114, label %301

114:                                              ; preds = %107
  %115 = icmp eq %"class.base::ObserverList"* %74, null
  br i1 %115, label %207, label %116

116:                                              ; preds = %94, %114
  %117 = phi %"class.base::ObserverList"* [ %74, %114 ], [ %92, %94 ]
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %117, i64 0, i32 1
  %119 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %117, i64 0, i32 1, i32 0, i32 0, i32 1
  %120 = bitcast %"class.base::internal::LinkNodeBase"** %119 to %"class.base::LinkNode"**
  %121 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %120, align 8
  %122 = bitcast %"class.base::LinkedList"* %118 to %"class.base::LinkNode"**
  %123 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %122, align 8
  %124 = icmp eq %"class.base::LinkNode"* %121, %123
  br i1 %124, label %125, label %203

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %117, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8
  %128 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %117, i64 0, i32 0, i32 0, i32 1
  %129 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %128, align 8
  %130 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %127, %129
  br i1 %130, label %139, label %131

131:                                              ; preds = %125, %136
  %132 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %137, %136 ], [ %127, %125 ]
  %133 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %132, i64 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %132, i64 1
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %137, %129
  br i1 %138, label %203, label %131

139:                                              ; preds = %131, %125
  %140 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %127, %125 ], [ %132, %131 ]
  %141 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %140 to i64
  %142 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %129
  br i1 %142, label %203, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %140, i64 1
  %145 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %144, %129
  br i1 %145, label %198, label %146

146:                                              ; preds = %143
  %147 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %129, i64 -2, i32 0
  %148 = ptrtoint i8** %147 to i64
  %149 = sub i64 %148, %141
  %150 = lshr i64 %149, 3
  %151 = add nuw nsw i64 %150, 1
  %152 = and i64 %151, 3
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %172, label %154

154:                                              ; preds = %146, %167
  %155 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %169, %167 ], [ %144, %146 ]
  %156 = phi i64 [ %168, %167 ], [ %141, %146 ]
  %157 = phi i64 [ %170, %167 ], [ %152, %146 ]
  %158 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %155, i64 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %154
  %162 = ptrtoint i8* %159 to i64
  %163 = inttoptr i64 %156 to %"class.base::internal::UncheckedObserverAdapter"*
  %164 = inttoptr i64 %156 to i64*
  store i64 %162, i64* %164, align 8
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %163, i64 1
  %166 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %165 to i64
  br label %167

167:                                              ; preds = %161, %154
  %168 = phi i64 [ %156, %154 ], [ %166, %161 ]
  %169 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %155, i64 1
  %170 = add i64 %157, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %154, !llvm.loop !19

172:                                              ; preds = %167, %146
  %173 = phi i64 [ undef, %146 ], [ %168, %167 ]
  %174 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %144, %146 ], [ %169, %167 ]
  %175 = phi i64 [ %141, %146 ], [ %168, %167 ]
  %176 = icmp ult i64 %149, 24
  br i1 %176, label %194, label %177

177:                                              ; preds = %172, %500
  %178 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %502, %500 ], [ %174, %172 ]
  %179 = phi i64 [ %501, %500 ], [ %175, %172 ]
  %180 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %178, i64 0, i32 0
  %181 = load i8*, i8** %180, align 8
  %182 = icmp eq i8* %181, null
  br i1 %182, label %189, label %183

183:                                              ; preds = %177
  %184 = ptrtoint i8* %181 to i64
  %185 = inttoptr i64 %179 to %"class.base::internal::UncheckedObserverAdapter"*
  %186 = inttoptr i64 %179 to i64*
  store i64 %184, i64* %186, align 8
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 1
  %188 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %187 to i64
  br label %189

189:                                              ; preds = %183, %177
  %190 = phi i64 [ %179, %177 ], [ %188, %183 ]
  %191 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %178, i64 1, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = icmp eq i8* %192, null
  br i1 %193, label %478, label %472

194:                                              ; preds = %500, %172
  %195 = phi i64 [ %173, %172 ], [ %501, %500 ]
  %196 = inttoptr i64 %195 to %"class.base::internal::UncheckedObserverAdapter"*
  %197 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %128, align 8
  br label %198

198:                                              ; preds = %194, %143
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %129, %143 ], [ %197, %194 ]
  %200 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %143 ], [ %196, %194 ]
  %201 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %200, %199
  br i1 %201, label %203, label %202

202:                                              ; preds = %198
  store %"class.base::internal::UncheckedObserverAdapter"* %200, %"class.base::internal::UncheckedObserverAdapter"** %128, align 8
  br label %203

203:                                              ; preds = %136, %202, %198, %139, %116
  %204 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %66, align 8
  %205 = icmp eq %"class.base::ObserverList"* %204, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %203
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %66, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %69) #9
  br label %207

207:                                              ; preds = %91, %114, %203, %206
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #9
  %208 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %12, align 8
  %209 = icmp eq %"class.base::ObserverList"* %208, null
  br i1 %209, label %300, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %208, i64 0, i32 1
  %212 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %208, i64 0, i32 1, i32 0, i32 0, i32 1
  %213 = bitcast %"class.base::internal::LinkNodeBase"** %212 to %"class.base::LinkNode"**
  %214 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %213, align 8
  %215 = bitcast %"class.base::LinkedList"* %211 to %"class.base::LinkNode"**
  %216 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %215, align 8
  %217 = icmp eq %"class.base::LinkNode"* %214, %216
  br i1 %217, label %218, label %296

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %208, i64 0, i32 0, i32 0, i32 0
  %220 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %219, align 8
  %221 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %208, i64 0, i32 0, i32 0, i32 1
  %222 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %221, align 8
  %223 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %220, %222
  br i1 %223, label %232, label %224

224:                                              ; preds = %218, %229
  %225 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %229 ], [ %220, %218 ]
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %225, i64 0, i32 0
  %227 = load i8*, i8** %226, align 8
  %228 = icmp eq i8* %227, null
  br i1 %228, label %232, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %225, i64 1
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %230, %222
  br i1 %231, label %296, label %224

232:                                              ; preds = %224, %218
  %233 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %220, %218 ], [ %225, %224 ]
  %234 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %233 to i64
  %235 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %222
  br i1 %235, label %296, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 1
  %238 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %237, %222
  br i1 %238, label %291, label %239

239:                                              ; preds = %236
  %240 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %222, i64 -2, i32 0
  %241 = ptrtoint i8** %240 to i64
  %242 = sub i64 %241, %234
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %265, label %247

247:                                              ; preds = %239, %260
  %248 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %262, %260 ], [ %237, %239 ]
  %249 = phi i64 [ %261, %260 ], [ %234, %239 ]
  %250 = phi i64 [ %263, %260 ], [ %245, %239 ]
  %251 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %248, i64 0, i32 0
  %252 = load i8*, i8** %251, align 8
  %253 = icmp eq i8* %252, null
  br i1 %253, label %260, label %254

254:                                              ; preds = %247
  %255 = ptrtoint i8* %252 to i64
  %256 = inttoptr i64 %249 to %"class.base::internal::UncheckedObserverAdapter"*
  %257 = inttoptr i64 %249 to i64*
  store i64 %255, i64* %257, align 8
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 1
  %259 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %258 to i64
  br label %260

260:                                              ; preds = %254, %247
  %261 = phi i64 [ %249, %247 ], [ %259, %254 ]
  %262 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %248, i64 1
  %263 = add i64 %250, -1
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %265, label %247, !llvm.loop !20

265:                                              ; preds = %260, %239
  %266 = phi i64 [ undef, %239 ], [ %261, %260 ]
  %267 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %237, %239 ], [ %262, %260 ]
  %268 = phi i64 [ %234, %239 ], [ %261, %260 ]
  %269 = icmp ult i64 %242, 24
  br i1 %269, label %287, label %270

270:                                              ; preds = %265, %468
  %271 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %470, %468 ], [ %267, %265 ]
  %272 = phi i64 [ %469, %468 ], [ %268, %265 ]
  %273 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = icmp eq i8* %274, null
  br i1 %275, label %282, label %276

276:                                              ; preds = %270
  %277 = ptrtoint i8* %274 to i64
  %278 = inttoptr i64 %272 to %"class.base::internal::UncheckedObserverAdapter"*
  %279 = inttoptr i64 %272 to i64*
  store i64 %277, i64* %279, align 8
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 1
  %281 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %280 to i64
  br label %282

282:                                              ; preds = %276, %270
  %283 = phi i64 [ %272, %270 ], [ %281, %276 ]
  %284 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 1, i32 0
  %285 = load i8*, i8** %284, align 8
  %286 = icmp eq i8* %285, null
  br i1 %286, label %446, label %440

287:                                              ; preds = %468, %265
  %288 = phi i64 [ %266, %265 ], [ %469, %468 ]
  %289 = inttoptr i64 %288 to %"class.base::internal::UncheckedObserverAdapter"*
  %290 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %221, align 8
  br label %291

291:                                              ; preds = %287, %236
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %222, %236 ], [ %290, %287 ]
  %293 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %236 ], [ %289, %287 ]
  %294 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %293, %292
  br i1 %294, label %296, label %295

295:                                              ; preds = %291
  store %"class.base::internal::UncheckedObserverAdapter"* %293, %"class.base::internal::UncheckedObserverAdapter"** %221, align 8
  br label %296

296:                                              ; preds = %229, %295, %291, %232, %210
  %297 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %12, align 8
  %298 = icmp eq %"class.base::ObserverList"* %297, null
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %12, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %21) #9
  br label %300

300:                                              ; preds = %207, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  br label %343

301:                                              ; preds = %107
  %302 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %74, i64 0, i32 0, i32 0, i32 0
  %303 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %302, align 8
  %304 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %303, i64 %110
  %305 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %304 to %"class.autofill::LogManager"**
  %306 = load %"class.autofill::LogManager"*, %"class.autofill::LogManager"** %305, align 8
  %307 = bitcast %"class.autofill::LogManager"* %306 to void (%"class.autofill::LogManager"*, i1)***
  %308 = load void (%"class.autofill::LogManager"*, i1)**, void (%"class.autofill::LogManager"*, i1)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.autofill::LogManager"*, i1)*, void (%"class.autofill::LogManager"*, i1)** %308, i64 2
  %310 = load void (%"class.autofill::LogManager"*, i1)*, void (%"class.autofill::LogManager"*, i1)** %309, align 8
  call void %310(%"class.autofill::LogManager"* %306, i1 zeroext true) #9
  %311 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %12, align 8
  %312 = icmp eq %"class.base::ObserverList"* %311, null
  br i1 %312, label %313, label %314

313:                                              ; preds = %338, %334, %301, %314, %328
  br label %73

314:                                              ; preds = %301
  %315 = load i64, i64* %13, align 8
  %316 = add i64 %315, 1
  store i64 %316, i64* %13, align 8
  %317 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %311, i64 0, i32 0, i32 0, i32 1
  %318 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"class.base::ObserverList"* %311 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = sub i64 %319, %321
  %323 = ashr exact i64 %322, 3
  %324 = load i64, i64* %14, align 8
  %325 = icmp ult i64 %323, %324
  %326 = select i1 %325, i64 %323, i64 %324
  %327 = icmp ult i64 %316, %326
  br i1 %327, label %328, label %313

328:                                              ; preds = %314
  %329 = inttoptr i64 %321 to %"class.base::internal::UncheckedObserverAdapter"*
  %330 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %311, i64 0, i32 0, i32 0, i32 0
  %331 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %329, i64 %316, i32 0
  %332 = load i8*, i8** %331, align 8
  %333 = icmp eq i8* %332, null
  br i1 %333, label %334, label %313

334:                                              ; preds = %328, %338
  %335 = phi i64 [ %336, %338 ], [ %316, %328 ]
  %336 = add nuw i64 %335, 1
  store i64 %336, i64* %13, align 8
  %337 = icmp ult i64 %336, %326
  br i1 %337, label %338, label %313

338:                                              ; preds = %334
  %339 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %330, align 8
  %340 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 %336, i32 0
  %341 = load i8*, i8** %340, align 8
  %342 = icmp eq i8* %341, null
  br i1 %342, label %334, label %313

343:                                              ; preds = %300, %2
  %344 = icmp eq %"class.autofill::LogReceiver"* %1, null
  br i1 %344, label %345, label %348

345:                                              ; preds = %343
  %346 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %347 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %346, align 8
  br label %366

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %5, i64 0, i32 0, i32 0, i32 0
  %350 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %349, align 8
  %351 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %352 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %351, align 8
  %353 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %350, %352
  %354 = bitcast %"class.autofill::LogReceiver"* %1 to i8*
  br i1 %353, label %363, label %355

355:                                              ; preds = %348, %360
  %356 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %361, %360 ], [ %350, %348 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 0, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, %354
  br i1 %359, label %363, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 1
  %362 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %361, %352
  br i1 %362, label %366, label %355

363:                                              ; preds = %355, %348
  %364 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %350, %348 ], [ %356, %355 ]
  %365 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %364, %352
  br i1 %365, label %366, label %438

366:                                              ; preds = %360, %345, %363
  %367 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %347, %345 ], [ %352, %363 ], [ %352, %360 ]
  %368 = load i64, i64* %6, align 8
  %369 = add i64 %368, 1
  store i64 %369, i64* %6, align 8
  %370 = ptrtoint %"class.autofill::LogReceiver"* %1 to i64
  %371 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %372 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %373 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %372, align 8
  %374 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %367, %373
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br i1 %374, label %376, label %381

376:                                              ; preds = %366
  %377 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %367 to i64*
  store i64 %370, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %367, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  %380 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %371 to i64*
  store i64 %379, i64* %380, align 8
  br label %438

381:                                              ; preds = %366
  %382 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %367 to i64
  %383 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %371 to i64*
  %384 = bitcast %"class.base::ObserverList.1"* %5 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = sub i64 %382, %385
  %387 = ashr exact i64 %386, 3
  %388 = add nsw i64 %387, 1
  %389 = icmp ugt i64 %388, 2305843009213693951
  br i1 %389, label %390, label %392

390:                                              ; preds = %381
  %391 = bitcast %"class.base::ObserverList.1"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %391) #11
  unreachable

392:                                              ; preds = %381
  %393 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %372 to i64*
  %394 = sub i64 %375, %385
  %395 = ashr exact i64 %394, 3
  %396 = icmp ult i64 %395, 1152921504606846975
  br i1 %396, label %397, label %405

397:                                              ; preds = %392
  %398 = ashr exact i64 %394, 2
  %399 = icmp ult i64 %398, %388
  %400 = select i1 %399, i64 %388, i64 %398
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %410, label %402

402:                                              ; preds = %397
  %403 = icmp ugt i64 %400, 2305843009213693951
  br i1 %403, label %404, label %405

404:                                              ; preds = %402
  call void @abort() #11
  unreachable

405:                                              ; preds = %402, %392
  %406 = phi i64 [ %400, %402 ], [ 2305843009213693951, %392 ]
  %407 = shl i64 %406, 3
  %408 = call i8* @_Znwm(i64 %407) #10
  %409 = bitcast i8* %408 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %410

410:                                              ; preds = %405, %397
  %411 = phi i64 [ %406, %405 ], [ 0, %397 ]
  %412 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %409, %405 ], [ null, %397 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %412, i64 %387
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %412, i64 %411
  %415 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %414 to i64
  %416 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %413 to i64*
  store i64 %370, i64* %416, align 8
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %413, i64 1
  %418 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %417 to i64
  %419 = getelementptr inbounds %"class.base::ObserverList.1", %"class.base::ObserverList.1"* %5, i64 0, i32 0, i32 0, i32 0
  %420 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %419, align 8
  %421 = load i64, i64* %383, align 8
  %422 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %420 to i64
  %423 = sub i64 %421, %422
  %424 = ashr exact i64 %423, 3
  %425 = sub nsw i64 0, %424
  %426 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %413, i64 %425
  %427 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %426 to i64
  %428 = icmp sgt i64 %423, 0
  br i1 %428, label %429, label %433

429:                                              ; preds = %410
  %430 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %426 to i8*
  %431 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %420 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %430, i8* align 8 %431, i64 %423, i1 false) #9
  %432 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %419, align 8
  br label %433

433:                                              ; preds = %429, %410
  %434 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %420, %410 ], [ %432, %429 ]
  store i64 %427, i64* %384, align 8
  store i64 %418, i64* %383, align 8
  store i64 %415, i64* %393, align 8
  %435 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %434, null
  br i1 %435, label %438, label %436

436:                                              ; preds = %433
  %437 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %434 to i8*
  call void @_ZdlPv(i8* %437) #10
  br label %438

438:                                              ; preds = %436, %433, %376, %363
  %439 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3
  ret %"class.std::__1::vector.5"* %439

440:                                              ; preds = %282
  %441 = ptrtoint i8* %285 to i64
  %442 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %443 = inttoptr i64 %283 to i64*
  store i64 %441, i64* %443, align 8
  %444 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %442, i64 1
  %445 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %444 to i64
  br label %446

446:                                              ; preds = %440, %282
  %447 = phi i64 [ %283, %282 ], [ %445, %440 ]
  %448 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 2, i32 0
  %449 = load i8*, i8** %448, align 8
  %450 = icmp eq i8* %449, null
  br i1 %450, label %457, label %451

451:                                              ; preds = %446
  %452 = ptrtoint i8* %449 to i64
  %453 = inttoptr i64 %447 to %"class.base::internal::UncheckedObserverAdapter"*
  %454 = inttoptr i64 %447 to i64*
  store i64 %452, i64* %454, align 8
  %455 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %453, i64 1
  %456 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %455 to i64
  br label %457

457:                                              ; preds = %451, %446
  %458 = phi i64 [ %447, %446 ], [ %456, %451 ]
  %459 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 3, i32 0
  %460 = load i8*, i8** %459, align 8
  %461 = icmp eq i8* %460, null
  br i1 %461, label %468, label %462

462:                                              ; preds = %457
  %463 = ptrtoint i8* %460 to i64
  %464 = inttoptr i64 %458 to %"class.base::internal::UncheckedObserverAdapter"*
  %465 = inttoptr i64 %458 to i64*
  store i64 %463, i64* %465, align 8
  %466 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %464, i64 1
  %467 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %466 to i64
  br label %468

468:                                              ; preds = %462, %457
  %469 = phi i64 [ %458, %457 ], [ %467, %462 ]
  %470 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %271, i64 4
  %471 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %470, %222
  br i1 %471, label %287, label %270

472:                                              ; preds = %189
  %473 = ptrtoint i8* %192 to i64
  %474 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %475 = inttoptr i64 %190 to i64*
  store i64 %473, i64* %475, align 8
  %476 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %474, i64 1
  %477 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %476 to i64
  br label %478

478:                                              ; preds = %472, %189
  %479 = phi i64 [ %190, %189 ], [ %477, %472 ]
  %480 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %178, i64 2, i32 0
  %481 = load i8*, i8** %480, align 8
  %482 = icmp eq i8* %481, null
  br i1 %482, label %489, label %483

483:                                              ; preds = %478
  %484 = ptrtoint i8* %481 to i64
  %485 = inttoptr i64 %479 to %"class.base::internal::UncheckedObserverAdapter"*
  %486 = inttoptr i64 %479 to i64*
  store i64 %484, i64* %486, align 8
  %487 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %485, i64 1
  %488 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %487 to i64
  br label %489

489:                                              ; preds = %483, %478
  %490 = phi i64 [ %479, %478 ], [ %488, %483 ]
  %491 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %178, i64 3, i32 0
  %492 = load i8*, i8** %491, align 8
  %493 = icmp eq i8* %492, null
  br i1 %493, label %500, label %494

494:                                              ; preds = %489
  %495 = ptrtoint i8* %492 to i64
  %496 = inttoptr i64 %490 to %"class.base::internal::UncheckedObserverAdapter"*
  %497 = inttoptr i64 %490 to i64*
  store i64 %495, i64* %497, align 8
  %498 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %496, i64 1
  %499 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %498 to i64
  br label %500

500:                                              ; preds = %494, %489
  %501 = phi i64 [ %490, %489 ], [ %499, %494 ]
  %502 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %178, i64 4
  %503 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %502, %129
  br i1 %503, label %194, label %177
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill9LogRouter18UnregisterReceiverEPNS_11LogReceiverE(%"class.autofill::LogRouter"*, %"class.autofill::LogReceiver"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %6, %8
  %10 = bitcast %"class.autofill::LogReceiver"* %1 to i8*
  %11 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %8 to i64
  br i1 %9, label %20, label %12

12:                                               ; preds = %2, %17
  %13 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %18, %17 ], [ %6, %2 ]
  %14 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %10
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %13, i64 1
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %18, %8
  br i1 %19, label %49, label %12

20:                                               ; preds = %12, %2
  %21 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %6, %2 ], [ %13, %12 ]
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %8
  br i1 %22, label %49, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  store i64 %30, i64* %28, align 8
  br label %31

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %33 = bitcast %"class.base::internal::LinkNodeBase"** %32 to %"class.base::LinkNode.3"**
  %34 = load %"class.base::LinkNode.3"*, %"class.base::LinkNode.3"** %33, align 8
  %35 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 1, i32 0
  %36 = icmp eq %"class.base::LinkNode.3"* %34, %35
  br i1 %36, label %37, label %48

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 1
  %39 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %38 to i64
  %40 = sub i64 %11, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %38 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 %40, i1 false) #9
  br label %46

46:                                               ; preds = %43, %37
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 %41
  store %"class.base::internal::UncheckedObserverAdapter"* %47, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  br label %49

48:                                               ; preds = %31
  store i8* null, i8** %24, align 8
  br label %49

49:                                               ; preds = %17, %20, %46, %48
  %50 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 2, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %404

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3
  %55 = bitcast %"class.std::__1::vector.5"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 0, i64* %55, align 8
  %57 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 3, i32 0, i32 1
  %58 = load %"class.base::Value"*, %"class.base::Value"** %57, align 8
  %59 = inttoptr i64 %56 to %"class.base::Value"*
  %60 = icmp eq i64 %56, 0
  %61 = bitcast %"class.base::Value"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  br i1 %60, label %70, label %62

62:                                               ; preds = %53
  %63 = icmp eq %"class.base::Value"* %58, %59
  br i1 %63, label %68, label %64

64:                                               ; preds = %62, %64
  %65 = phi %"class.base::Value"* [ %66, %64 ], [ %58, %62 ]
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %65, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %66) #9
  %67 = icmp eq %"class.base::Value"* %66, %59
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %62
  %69 = inttoptr i64 %56 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  br label %70

70:                                               ; preds = %53, %68
  %71 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1
  %72 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %76 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %71, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 40, i1 false)
  %78 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %76, align 8, !noalias !21
  %79 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %80 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %79, align 8, !noalias !21
  %81 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %78, %80
  %82 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %82) #9
  br i1 %81, label %83, label %85

83:                                               ; preds = %70
  %84 = bitcast %"class.base::ObserverList"** %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9, !alias.scope !21
  br label %125

85:                                               ; preds = %70
  store %"class.base::ObserverList"* %71, %"class.base::ObserverList"** %73, align 8
  %86 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %82, %"class.base::internal::LinkNodeBase"* %86) #9
  store i64 0, i64* %74, align 8
  %87 = getelementptr inbounds %"class.autofill::LogRouter", %"class.autofill::LogRouter"* %0, i64 0, i32 1, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %79 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %71 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  br label %97

97:                                               ; preds = %90, %85
  %98 = phi i64 [ %96, %90 ], [ -1, %85 ]
  store i64 %98, i64* %75, align 8
  %99 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %100 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %99, i64 0, i32 0, i32 0, i32 1
  %101 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.base::ObserverList"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %102, %104
  %106 = ashr exact i64 %105, 3
  %107 = icmp ult i64 %106, %98
  %108 = select i1 %107, i64 %106, i64 %98
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %125, label %110

110:                                              ; preds = %97
  %111 = inttoptr i64 %104 to %"class.base::internal::UncheckedObserverAdapter"*
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %99, i64 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %111, i64 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %125

116:                                              ; preds = %110, %120
  %117 = phi i64 [ %118, %120 ], [ 0, %110 ]
  %118 = add nuw i64 %117, 1
  store i64 %118, i64* %74, align 8
  %119 = icmp ult i64 %118, %108
  br i1 %119, label %120, label %125

120:                                              ; preds = %116
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %112, align 8
  %122 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %121, i64 %118, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %116, label %125

125:                                              ; preds = %120, %116, %110, %97, %83
  %126 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %126) #9
  %127 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %129 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %130 = getelementptr inbounds %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.base::ObserverList<autofill::LogManager, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %130) #9
  %132 = bitcast %"class.base::ObserverList"** %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #9, !alias.scope !24
  %133 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  br label %134

134:                                              ; preds = %374, %125
  %135 = phi %"class.base::ObserverList"* [ %133, %125 ], [ %372, %374 ]
  %136 = icmp eq %"class.base::ObserverList"* %135, null
  br i1 %136, label %152, label %137

137:                                              ; preds = %134
  %138 = load i64, i64* %74, align 8
  %139 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 0, i32 0, i32 1
  %140 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.base::ObserverList"* %135 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %141, %143
  %145 = ashr exact i64 %144, 3
  %146 = load i64, i64* %75, align 8
  %147 = icmp ult i64 %145, %146
  %148 = select i1 %147, i64 %145, i64 %146
  %149 = icmp eq i64 %138, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %137
  %151 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %127, align 8
  br label %168

152:                                              ; preds = %137, %134
  %153 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %127, align 8
  %154 = icmp eq %"class.base::ObserverList"* %153, null
  br i1 %154, label %268, label %155

155:                                              ; preds = %152
  %156 = load i64, i64* %128, align 8
  %157 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %153, i64 0, i32 0, i32 0, i32 1
  %158 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.base::ObserverList"* %153 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %159, %161
  %163 = ashr exact i64 %162, 3
  %164 = load i64, i64* %129, align 8
  %165 = icmp ult i64 %163, %164
  %166 = select i1 %165, i64 %163, i64 %164
  %167 = icmp eq i64 %156, %166
  br i1 %167, label %177, label %168

168:                                              ; preds = %155, %150
  %169 = phi %"class.base::ObserverList"* [ %151, %150 ], [ %153, %155 ]
  %170 = icmp eq %"class.base::ObserverList"* %135, %169
  %171 = load i64, i64* %74, align 8
  %172 = load i64, i64* %128, align 8
  %173 = icmp eq i64 %171, %172
  %174 = and i1 %170, %173
  br i1 %174, label %175, label %362

175:                                              ; preds = %168
  %176 = icmp eq %"class.base::ObserverList"* %135, null
  br i1 %176, label %268, label %177

177:                                              ; preds = %155, %175
  %178 = phi %"class.base::ObserverList"* [ %135, %175 ], [ %153, %155 ]
  %179 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %178, i64 0, i32 1
  %180 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %178, i64 0, i32 1, i32 0, i32 0, i32 1
  %181 = bitcast %"class.base::internal::LinkNodeBase"** %180 to %"class.base::LinkNode"**
  %182 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %181, align 8
  %183 = bitcast %"class.base::LinkedList"* %179 to %"class.base::LinkNode"**
  %184 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %183, align 8
  %185 = icmp eq %"class.base::LinkNode"* %182, %184
  br i1 %185, label %186, label %264

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %178, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %187, align 8
  %189 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %178, i64 0, i32 0, i32 0, i32 1
  %190 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %189, align 8
  %191 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %188, %190
  br i1 %191, label %200, label %192

192:                                              ; preds = %186, %197
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %198, %197 ], [ %188, %186 ]
  %194 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %193, i64 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = icmp eq i8* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %193, i64 1
  %199 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %198, %190
  br i1 %199, label %264, label %192

200:                                              ; preds = %192, %186
  %201 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %188, %186 ], [ %193, %192 ]
  %202 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %201 to i64
  %203 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %201, %190
  br i1 %203, label %264, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %201, i64 1
  %206 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %205, %190
  br i1 %206, label %259, label %207

207:                                              ; preds = %204
  %208 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %190, i64 -2, i32 0
  %209 = ptrtoint i8** %208 to i64
  %210 = sub i64 %209, %202
  %211 = lshr i64 %210, 3
  %212 = add nuw nsw i64 %211, 1
  %213 = and i64 %212, 3
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %233, label %215

215:                                              ; preds = %207, %228
  %216 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %230, %228 ], [ %205, %207 ]
  %217 = phi i64 [ %229, %228 ], [ %202, %207 ]
  %218 = phi i64 [ %231, %228 ], [ %213, %207 ]
  %219 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 0, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %220, null
  br i1 %221, label %228, label %222

222:                                              ; preds = %215
  %223 = ptrtoint i8* %220 to i64
  %224 = inttoptr i64 %217 to %"class.base::internal::UncheckedObserverAdapter"*
  %225 = inttoptr i64 %217 to i64*
  store i64 %223, i64* %225, align 8
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %227 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %226 to i64
  br label %228

228:                                              ; preds = %222, %215
  %229 = phi i64 [ %217, %215 ], [ %227, %222 ]
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 1
  %231 = add i64 %218, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %215, !llvm.loop !27

233:                                              ; preds = %228, %207
  %234 = phi i64 [ undef, %207 ], [ %229, %228 ]
  %235 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %205, %207 ], [ %230, %228 ]
  %236 = phi i64 [ %202, %207 ], [ %229, %228 ]
  %237 = icmp ult i64 %210, 24
  br i1 %237, label %255, label %238

238:                                              ; preds = %233, %465
  %239 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %467, %465 ], [ %235, %233 ]
  %240 = phi i64 [ %466, %465 ], [ %236, %233 ]
  %241 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = icmp eq i8* %242, null
  br i1 %243, label %250, label %244

244:                                              ; preds = %238
  %245 = ptrtoint i8* %242 to i64
  %246 = inttoptr i64 %240 to %"class.base::internal::UncheckedObserverAdapter"*
  %247 = inttoptr i64 %240 to i64*
  store i64 %245, i64* %247, align 8
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %246, i64 1
  %249 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %248 to i64
  br label %250

250:                                              ; preds = %244, %238
  %251 = phi i64 [ %240, %238 ], [ %249, %244 ]
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 1, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = icmp eq i8* %253, null
  br i1 %254, label %443, label %437

255:                                              ; preds = %465, %233
  %256 = phi i64 [ %234, %233 ], [ %466, %465 ]
  %257 = inttoptr i64 %256 to %"class.base::internal::UncheckedObserverAdapter"*
  %258 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %189, align 8
  br label %259

259:                                              ; preds = %255, %204
  %260 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %190, %204 ], [ %258, %255 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %201, %204 ], [ %257, %255 ]
  %262 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %261, %260
  br i1 %262, label %264, label %263

263:                                              ; preds = %259
  store %"class.base::internal::UncheckedObserverAdapter"* %261, %"class.base::internal::UncheckedObserverAdapter"** %189, align 8
  br label %264

264:                                              ; preds = %197, %263, %259, %200, %177
  %265 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %127, align 8
  %266 = icmp eq %"class.base::ObserverList"* %265, null
  br i1 %266, label %268, label %267

267:                                              ; preds = %264
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %127, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %130) #9
  br label %268

268:                                              ; preds = %152, %175, %264, %267
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %126) #9
  %269 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %270 = icmp eq %"class.base::ObserverList"* %269, null
  br i1 %270, label %361, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %269, i64 0, i32 1
  %273 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %269, i64 0, i32 1, i32 0, i32 0, i32 1
  %274 = bitcast %"class.base::internal::LinkNodeBase"** %273 to %"class.base::LinkNode"**
  %275 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %274, align 8
  %276 = bitcast %"class.base::LinkedList"* %272 to %"class.base::LinkNode"**
  %277 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %276, align 8
  %278 = icmp eq %"class.base::LinkNode"* %275, %277
  br i1 %278, label %279, label %357

279:                                              ; preds = %271
  %280 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %269, i64 0, i32 0, i32 0, i32 0
  %281 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %280, align 8
  %282 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %269, i64 0, i32 0, i32 0, i32 1
  %283 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %282, align 8
  %284 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %281, %283
  br i1 %284, label %293, label %285

285:                                              ; preds = %279, %290
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %291, %290 ], [ %281, %279 ]
  %287 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 0, i32 0
  %288 = load i8*, i8** %287, align 8
  %289 = icmp eq i8* %288, null
  br i1 %289, label %293, label %290

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 1
  %292 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %291, %283
  br i1 %292, label %357, label %285

293:                                              ; preds = %285, %279
  %294 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %281, %279 ], [ %286, %285 ]
  %295 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %294 to i64
  %296 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %294, %283
  br i1 %296, label %357, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %294, i64 1
  %299 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %298, %283
  br i1 %299, label %352, label %300

300:                                              ; preds = %297
  %301 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %283, i64 -2, i32 0
  %302 = ptrtoint i8** %301 to i64
  %303 = sub i64 %302, %295
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 3
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %326, label %308

308:                                              ; preds = %300, %321
  %309 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %323, %321 ], [ %298, %300 ]
  %310 = phi i64 [ %322, %321 ], [ %295, %300 ]
  %311 = phi i64 [ %324, %321 ], [ %306, %300 ]
  %312 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %309, i64 0, i32 0
  %313 = load i8*, i8** %312, align 8
  %314 = icmp eq i8* %313, null
  br i1 %314, label %321, label %315

315:                                              ; preds = %308
  %316 = ptrtoint i8* %313 to i64
  %317 = inttoptr i64 %310 to %"class.base::internal::UncheckedObserverAdapter"*
  %318 = inttoptr i64 %310 to i64*
  store i64 %316, i64* %318, align 8
  %319 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %317, i64 1
  %320 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %319 to i64
  br label %321

321:                                              ; preds = %315, %308
  %322 = phi i64 [ %310, %308 ], [ %320, %315 ]
  %323 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %309, i64 1
  %324 = add i64 %311, -1
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %308, !llvm.loop !28

326:                                              ; preds = %321, %300
  %327 = phi i64 [ undef, %300 ], [ %322, %321 ]
  %328 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %298, %300 ], [ %323, %321 ]
  %329 = phi i64 [ %295, %300 ], [ %322, %321 ]
  %330 = icmp ult i64 %303, 24
  br i1 %330, label %348, label %331

331:                                              ; preds = %326, %433
  %332 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %435, %433 ], [ %328, %326 ]
  %333 = phi i64 [ %434, %433 ], [ %329, %326 ]
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 0, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %343, label %337

337:                                              ; preds = %331
  %338 = ptrtoint i8* %335 to i64
  %339 = inttoptr i64 %333 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %333 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %331
  %344 = phi i64 [ %333, %331 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 1, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %411, label %405

348:                                              ; preds = %433, %326
  %349 = phi i64 [ %327, %326 ], [ %434, %433 ]
  %350 = inttoptr i64 %349 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %282, align 8
  br label %352

352:                                              ; preds = %348, %297
  %353 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %283, %297 ], [ %351, %348 ]
  %354 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %294, %297 ], [ %350, %348 ]
  %355 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %354, %353
  br i1 %355, label %357, label %356

356:                                              ; preds = %352
  store %"class.base::internal::UncheckedObserverAdapter"* %354, %"class.base::internal::UncheckedObserverAdapter"** %282, align 8
  br label %357

357:                                              ; preds = %290, %356, %352, %293, %271
  %358 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %359 = icmp eq %"class.base::ObserverList"* %358, null
  br i1 %359, label %361, label %360

360:                                              ; preds = %357
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %73, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %82) #9
  br label %361

361:                                              ; preds = %268, %357, %360
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #9
  br label %404

362:                                              ; preds = %168
  %363 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 0, i32 0, i32 0
  %364 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %363, align 8
  %365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 %171
  %366 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %365 to %"class.autofill::LogManager"**
  %367 = load %"class.autofill::LogManager"*, %"class.autofill::LogManager"** %366, align 8
  %368 = bitcast %"class.autofill::LogManager"* %367 to void (%"class.autofill::LogManager"*, i1)***
  %369 = load void (%"class.autofill::LogManager"*, i1)**, void (%"class.autofill::LogManager"*, i1)*** %368, align 8
  %370 = getelementptr inbounds void (%"class.autofill::LogManager"*, i1)*, void (%"class.autofill::LogManager"*, i1)** %369, i64 2
  %371 = load void (%"class.autofill::LogManager"*, i1)*, void (%"class.autofill::LogManager"*, i1)** %370, align 8
  call void %371(%"class.autofill::LogManager"* %367, i1 zeroext false) #9
  %372 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %73, align 8
  %373 = icmp eq %"class.base::ObserverList"* %372, null
  br i1 %373, label %374, label %375

374:                                              ; preds = %399, %395, %362, %375, %389
  br label %134

375:                                              ; preds = %362
  %376 = load i64, i64* %74, align 8
  %377 = add i64 %376, 1
  store i64 %377, i64* %74, align 8
  %378 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %372, i64 0, i32 0, i32 0, i32 1
  %379 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %378 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = bitcast %"class.base::ObserverList"* %372 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = sub i64 %380, %382
  %384 = ashr exact i64 %383, 3
  %385 = load i64, i64* %75, align 8
  %386 = icmp ult i64 %384, %385
  %387 = select i1 %386, i64 %384, i64 %385
  %388 = icmp ult i64 %377, %387
  br i1 %388, label %389, label %374

389:                                              ; preds = %375
  %390 = inttoptr i64 %382 to %"class.base::internal::UncheckedObserverAdapter"*
  %391 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %372, i64 0, i32 0, i32 0, i32 0
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %390, i64 %377, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = icmp eq i8* %393, null
  br i1 %394, label %395, label %374

395:                                              ; preds = %389, %399
  %396 = phi i64 [ %397, %399 ], [ %377, %389 ]
  %397 = add nuw i64 %396, 1
  store i64 %397, i64* %74, align 8
  %398 = icmp ult i64 %397, %387
  br i1 %398, label %399, label %374

399:                                              ; preds = %395
  %400 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %391, align 8
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 %397, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = icmp eq i8* %402, null
  br i1 %403, label %395, label %374

404:                                              ; preds = %361, %49
  ret void

405:                                              ; preds = %343
  %406 = ptrtoint i8* %346 to i64
  %407 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = inttoptr i64 %344 to i64*
  store i64 %406, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 1
  %410 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %409 to i64
  br label %411

411:                                              ; preds = %405, %343
  %412 = phi i64 [ %344, %343 ], [ %410, %405 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 2, i32 0
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, null
  br i1 %415, label %422, label %416

416:                                              ; preds = %411
  %417 = ptrtoint i8* %414 to i64
  %418 = inttoptr i64 %412 to %"class.base::internal::UncheckedObserverAdapter"*
  %419 = inttoptr i64 %412 to i64*
  store i64 %417, i64* %419, align 8
  %420 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %418, i64 1
  %421 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %420 to i64
  br label %422

422:                                              ; preds = %416, %411
  %423 = phi i64 [ %412, %411 ], [ %421, %416 ]
  %424 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 3, i32 0
  %425 = load i8*, i8** %424, align 8
  %426 = icmp eq i8* %425, null
  br i1 %426, label %433, label %427

427:                                              ; preds = %422
  %428 = ptrtoint i8* %425 to i64
  %429 = inttoptr i64 %423 to %"class.base::internal::UncheckedObserverAdapter"*
  %430 = inttoptr i64 %423 to i64*
  store i64 %428, i64* %430, align 8
  %431 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %429, i64 1
  %432 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %431 to i64
  br label %433

433:                                              ; preds = %427, %422
  %434 = phi i64 [ %423, %422 ], [ %432, %427 ]
  %435 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 4
  %436 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %435, %283
  br i1 %436, label %348, label %331

437:                                              ; preds = %250
  %438 = ptrtoint i8* %253 to i64
  %439 = inttoptr i64 %251 to %"class.base::internal::UncheckedObserverAdapter"*
  %440 = inttoptr i64 %251 to i64*
  store i64 %438, i64* %440, align 8
  %441 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %439, i64 1
  %442 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %441 to i64
  br label %443

443:                                              ; preds = %437, %250
  %444 = phi i64 [ %251, %250 ], [ %442, %437 ]
  %445 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 2, i32 0
  %446 = load i8*, i8** %445, align 8
  %447 = icmp eq i8* %446, null
  br i1 %447, label %454, label %448

448:                                              ; preds = %443
  %449 = ptrtoint i8* %446 to i64
  %450 = inttoptr i64 %444 to %"class.base::internal::UncheckedObserverAdapter"*
  %451 = inttoptr i64 %444 to i64*
  store i64 %449, i64* %451, align 8
  %452 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %450, i64 1
  %453 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %452 to i64
  br label %454

454:                                              ; preds = %448, %443
  %455 = phi i64 [ %444, %443 ], [ %453, %448 ]
  %456 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 3, i32 0
  %457 = load i8*, i8** %456, align 8
  %458 = icmp eq i8* %457, null
  br i1 %458, label %465, label %459

459:                                              ; preds = %454
  %460 = ptrtoint i8* %457 to i64
  %461 = inttoptr i64 %455 to %"class.base::internal::UncheckedObserverAdapter"*
  %462 = inttoptr i64 %455 to i64*
  store i64 %460, i64* %462, align 8
  %463 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %461, i64 1
  %464 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %463 to i64
  br label %465

465:                                              ; preds = %459, %454
  %466 = phi i64 [ %455, %454 ], [ %464, %459 ]
  %467 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %239, i64 4
  %468 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %467, %190
  br i1 %468, label %255, label %238
}

declare void @_ZN12KeyedService8ShutdownEv(%class.KeyedService*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.5"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.5"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.5"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.base::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %35
  %39 = ptrtoint %"class.base::Value"* %38 to i64
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* dereferenceable(32) %1) #9
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 1
  %41 = ptrtoint %"class.base::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %45 = icmp eq %"class.base::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %51, %"class.base::Value"* dereferenceable(32) %52) #9
  %53 = icmp eq %"class.base::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::Value"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::Value"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::Value"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::Value"*
  %63 = icmp eq %"class.base::Value"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::Value"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %65, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %66) #9
  %67 = icmp eq %"class.base::Value"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN8autofill11LogReceiverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN8autofill11LogReceiverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base12ObserverListIN8autofill11LogReceiverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base12ObserverListIN8autofill11LogReceiverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base12ObserverListIN8autofill10LogManagerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!27 = distinct !{!27, !3}
!28 = distinct !{!28, !3}
