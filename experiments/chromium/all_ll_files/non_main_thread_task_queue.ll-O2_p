; ModuleID = '../../third_party/blink/renderer/platform/scheduler/worker/non_main_thread_task_queue.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/worker/non_main_thread_task_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::NonMainThreadTaskQueue" = type { %"class.base::sequence_manager::TaskQueue", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.absl::optional.74" }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %class.scoped_refptr, %class.scoped_refptr.64, i32, i32, i8*, %"class.base::WeakPtrFactory.65" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.41", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.1", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.64 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.27" }>
%"class.base::RefCountedThreadSafe.27" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.65" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { i32 }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.2, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.2 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.3", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.4", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.9, i8, [7 x i8] }>
%class.scoped_refptr.9 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.10", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.14", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.19", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.47", %"class.base::RepeatingCallback.48", %"class.absl::optional.49", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector", %"struct.std::__1::less" }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.28" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.26, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.26 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.35" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.47" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.48" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.54", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.79", i64, [64 x %"class.base::RepeatingCallback.84"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.54", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i64 }
%"class.base::RepeatingCallback.84" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.base::sequence_manager::TaskQueue::Spec" = type <{ i8*, i8, [7 x i8], %"class.base::sequence_manager::TimeDomain"*, i8, i8, [6 x i8] }>
%"class.blink::scheduler::NonMainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::NonMainThreadSchedulerHelper" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::NonMainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %class.scoped_refptr.73, %class.scoped_refptr.73 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr.64, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional.66" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.64, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%class.scoped_refptr.73 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.85" }
%"class.base::time_internal::TimeBase.85" = type { i64 }
%"class.base::sequence_manager::LazyNow" = type { %"class.base::TickClock"*, %"class.absl::optional" }
%"class.base::TickClock" = type { i32 (...)** }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS6_9TaskQueue10TaskTimingEPNS6_7LazyNowEEJNS0_17UnretainedWrapperIS5_EEEEEFvS9_SC_SE_EE3RunEPNS0_13BindStateBaseES9_SC_SE_ = comdat any

$_ZN4base8internal9BindStateIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS5_9TaskQueue10TaskTimingEPNS5_7LazyNowEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN5blink9scheduler22NonMainThreadTaskQueueE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::sequence_manager::TaskQueue"*)* @_ZN4base16sequence_manager9TaskQueue17ShutdownTaskQueueEv to i8*), i8* bitcast (i8* (%"class.base::sequence_manager::TaskQueue"*)* @_ZNK4base16sequence_manager9TaskQueue7GetNameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::NonMainThreadTaskQueue"*)* @_ZN5blink9scheduler22NonMainThreadTaskQueueD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::NonMainThreadTaskQueue"*)* @_ZN5blink9scheduler22NonMainThreadTaskQueueD0Ev to i8*)] }, align 8

@_ZN5blink9scheduler22NonMainThreadTaskQueueC1ENSt3__110unique_ptrIN4base16sequence_manager8internal13TaskQueueImplENS2_14default_deleteIS7_EEEERKNS5_9TaskQueue4SpecEPNS0_26NonMainThreadSchedulerImplE = hidden unnamed_addr alias void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"*), void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"*)* @_ZN5blink9scheduler22NonMainThreadTaskQueueC2ENSt3__110unique_ptrIN4base16sequence_manager8internal13TaskQueueImplENS2_14default_deleteIS7_EEEERKNS5_9TaskQueue4SpecEPNS0_26NonMainThreadSchedulerImplE
@_ZN5blink9scheduler22NonMainThreadTaskQueueD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::NonMainThreadTaskQueue"*), void (%"class.blink::scheduler::NonMainThreadTaskQueue"*)* @_ZN5blink9scheduler22NonMainThreadTaskQueueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler22NonMainThreadTaskQueueC2ENSt3__110unique_ptrIN4base16sequence_manager8internal13TaskQueueImplENS2_14default_deleteIS7_EEEERKNS5_9TaskQueue4SpecEPNS0_26NonMainThreadSchedulerImplE(%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"* dereferenceable(32), %"class.blink::scheduler::NonMainThreadSchedulerImpl"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback.48", align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueueC2ENSt3__110unique_ptrINS0_8internal13TaskQueueImplENS2_14default_deleteIS5_EEEERKNS1_4SpecE(%"class.base::sequence_manager::TaskQueue"* %6, %"class.base::sequence_manager::internal::TaskQueueImpl"* %1, %"struct.base::sequence_manager::TaskQueue::Spec"* dereferenceable(32) %2) #6
  %7 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink9scheduler22NonMainThreadTaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 1
  store %"class.blink::scheduler::NonMainThreadSchedulerImpl"* %3, %"class.blink::scheduler::NonMainThreadSchedulerImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %10, align 8
  %12 = icmp eq %"class.base::sequence_manager::internal::TaskQueueImpl"* %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %2, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"class.blink::scheduler::NonMainThreadTaskQueue"* %0 to i64
  %19 = tail call i8* @_Znwm(i64 56) #7, !noalias !3
  %20 = bitcast i8* %19 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %20, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS6_9TaskQueue10TaskTimingEPNS6_7LazyNowEEJNS0_17UnretainedWrapperIS5_EEEEEFvS9_SC_SE_EE3RunEPNS0_13BindStateBaseES9_SC_SE_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS5_9TaskQueue10TaskTimingEPNS5_7LazyNowEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !3
  %21 = getelementptr inbounds i8, i8* %19, i64 32
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)* @_ZN5blink9scheduler22NonMainThreadTaskQueue15OnTaskCompletedERKN4base16sequence_manager4TaskEPNS3_9TaskQueue10TaskTimingEPNS3_7LazyNowE to i64), i64 0>, <2 x i64>* %22, align 8, !noalias !3
  %23 = getelementptr inbounds i8, i8* %19, i64 48
  %24 = bitcast i8* %23 to i64*
  store i64 %18, i64* %24, align 8, !noalias !3
  %25 = bitcast %"class.base::RepeatingCallback.48"* %5 to i8**
  store i8* %19, i8** %25, align 8, !alias.scope !3
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl25SetOnTaskCompletedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEPNS0_9TaskQueue10TaskTimingEPNS0_7LazyNowEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* nonnull %11, %"class.base::RepeatingCallback.48"* nonnull %5) #6
  %26 = getelementptr inbounds %"class.base::RepeatingCallback.48", %"class.base::RepeatingCallback.48"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #6
  br label %27

27:                                               ; preds = %17, %4, %13
  ret void
}

declare void @_ZN4base16sequence_manager9TaskQueueC2ENSt3__110unique_ptrINS0_8internal13TaskQueueImplENS2_14default_deleteIS5_EEEERKNS1_4SpecE(%"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl25SetOnTaskCompletedHandlerENS_17RepeatingCallbackIFvRKNS0_4TaskEPNS0_9TaskQueue10TaskTimingEPNS0_7LazyNowEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::RepeatingCallback.48"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler22NonMainThreadTaskQueue15OnTaskCompletedERKN4base16sequence_manager4TaskEPNS3_9TaskQueue10TaskTimingEPNS3_7LazyNowE(%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"* dereferenceable(128), %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*) #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 1
  %6 = load %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"** %5, align 8
  %7 = icmp eq %"class.blink::scheduler::NonMainThreadSchedulerImpl"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.blink::scheduler::NonMainThreadSchedulerImpl"* %6 to void (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)***
  %10 = load void (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)**, void (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)*, void (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)** %10, i64 35
  %12 = load void (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)*, void (%"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)** %11, align 8
  tail call void %12(%"class.blink::scheduler::NonMainThreadSchedulerImpl"* nonnull %6, %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1, %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, %"class.base::sequence_manager::LazyNow"* %3) #6
  br label %13

13:                                               ; preds = %4, %8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager9TaskQueueD2Ev(%"class.base::sequence_manager::TaskQueue"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler22NonMainThreadTaskQueueD2Ev(%"class.blink::scheduler::NonMainThreadTaskQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueueD2Ev(%"class.base::sequence_manager::TaskQueue"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler22NonMainThreadTaskQueueD0Ev(%"class.blink::scheduler::NonMainThreadTaskQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueueD2Ev(%"class.base::sequence_manager::TaskQueue"* %2) #6
  %3 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler22NonMainThreadTaskQueue24SetWebSchedulingPriorityENS_21WebSchedulingPriorityE(%"class.blink::scheduler::NonMainThreadTaskQueue"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.absl::optional.74", %"class.absl::optional.74"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %7, %2
  %12 = bitcast %"class.absl::optional.74"* %3 to i64*
  %13 = zext i32 %1 to i64
  %14 = shl nuw i64 %13, 32
  %15 = or i64 %14, 1
  store i64 %15, i64* %12, align 8
  switch i32 %1, label %22 [
    i32 0, label %16
    i32 1, label %18
    i32 2, label %20
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"* %17, i8 zeroext 3) #6
  br label %22

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"* %19, i8 zeroext 4) #6
  br label %22

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"* %21, i8 zeroext 5) #6
  br label %22

22:                                               ; preds = %20, %18, %16, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler22NonMainThreadTaskQueue30OnWebSchedulingPriorityChangedEv(%"class.blink::scheduler::NonMainThreadTaskQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #8
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = trunc i32 %8 to i8
  %12 = add i8 %11, 3
  %13 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"* %13, i8 zeroext %12) #6
  br label %14

14:                                               ; preds = %6, %10
  ret void
}

declare void @_ZN4base16sequence_manager9TaskQueue16SetQueuePriorityENS1_13QueuePriorityE(%"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4base16sequence_manager9TaskQueue17ShutdownTaskQueueEv(%"class.base::sequence_manager::TaskQueue"*) unnamed_addr #1

declare i8* @_ZNK4base16sequence_manager9TaskQueue7GetNameEv(%"class.base::sequence_manager::TaskQueue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS6_9TaskQueue10TaskTimingEPNS6_7LazyNowEEJNS0_17UnretainedWrapperIS5_EEEEEFvS9_SC_SE_EE3RunEPNS0_13BindStateBaseES9_SC_SE_(%"class.base::internal::BindStateBase"*, %"struct.base::sequence_manager::Task"* dereferenceable(128), %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::scheduler::NonMainThreadTaskQueue"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %4
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)**
  %24 = load void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)*, void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)** %23, align 8
  br label %27

25:                                               ; preds = %4
  %26 = inttoptr i64 %10 to void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"struct.base::sequence_manager::Task"*, %"class.base::sequence_manager::TaskQueue::TaskTiming"*, %"class.base::sequence_manager::LazyNow"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::scheduler::NonMainThreadTaskQueue"* %15, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1, %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, %"class.base::sequence_manager::LazyNow"* %3) #6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS5_9TaskQueue10TaskTimingEPNS5_7LazyNowEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS6_9TaskQueue10TaskTimingEPNS6_7LazyNowEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS6_9TaskQueue10TaskTimingEPNS6_7LazyNowEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS4_9TaskQueue10TaskTimingEPNS4_7LazyNowEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIMN5blink9scheduler22NonMainThreadTaskQueueEFvRKNS_16sequence_manager4TaskEPNS4_9TaskQueue10TaskTimingEPNS4_7LazyNowEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
