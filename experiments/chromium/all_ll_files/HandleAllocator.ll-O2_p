; ModuleID = '../../third_party/angle/src/libANGLE/HandleAllocator.cpp'
source_filename = "../../third_party/angle/src/libANGLE/HandleAllocator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.3" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::allocator.6"* }
%"class.std::__1::allocator.6" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorIN2gl15HandleAllocator11HandleRangeENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EEOS3_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__114__split_bufferIN2gl15HandleAllocator11HandleRangeERNS_9allocatorIS3_EEE9push_backEOS3_ = comdat any

@.str = private unnamed_addr constant [57 x i8] c"../../third_party/angle/src/libANGLE/HandleAllocator.cpp\00", align 1
@__FUNCTION__._ZN2gl15HandleAllocator8allocateEv = private unnamed_addr constant [9 x i8] c"allocate\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"HandleAllocator::allocate reusing \00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"HandleAllocator::allocate allocating \00", align 1
@__FUNCTION__._ZN2gl15HandleAllocator7releaseEj = private unnamed_addr constant [8 x i8] c"release\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"HandleAllocator::release releasing \00", align 1
@__FUNCTION__._ZN2gl15HandleAllocator7reserveEj = private unnamed_addr constant [8 x i8] c"reserve\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"HandleAllocator::reserve reserving \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2gl15HandleAllocatorC1Ev = hidden unnamed_addr alias void (%"class.gl::HandleAllocator"*), void (%"class.gl::HandleAllocator"*)* @_ZN2gl15HandleAllocatorC2Ev
@_ZN2gl15HandleAllocatorC1Ej = hidden unnamed_addr alias void (%"class.gl::HandleAllocator"*, i32), void (%"class.gl::HandleAllocator"*, i32)* @_ZN2gl15HandleAllocatorC2Ej
@_ZN2gl15HandleAllocatorD1Ev = hidden unnamed_addr alias void (%"class.gl::HandleAllocator"*), void (%"class.gl::HandleAllocator"*)* @_ZN2gl15HandleAllocatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15HandleAllocatorC2Ev(%"class.gl::HandleAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 1
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 73, i1 false)
  %7 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3
  %9 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %7 to i64*
  %10 = bitcast %"class.std::__1::vector.1"* %8 to i64*
  %11 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %5 to i64*
  %12 = tail call i8* @_Znwm(i64 8) #9
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8* %12 to i64*
  store i64 -4294967295, i64* %15, align 4
  %16 = ptrtoint i8* %12 to i64
  store i64 %16, i64* %10, align 8
  store i64 %14, i64* %9, align 8
  store i64 %14, i64* %11, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15HandleAllocatorC2Ej(%"class.gl::HandleAllocator"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 0
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 1
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 73, i1 false)
  %8 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3
  %10 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %8 to i64*
  %11 = bitcast %"class.std::__1::vector.1"* %9 to i64*
  %12 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %6 to i64*
  %13 = tail call i8* @_Znwm(i64 8) #9
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8* %13 to i64*
  %17 = zext i32 %1 to i64
  %18 = shl nuw i64 %17, 32
  %19 = or i64 %18, 1
  store i64 %19, i64* %16, align 4
  %20 = ptrtoint i8* %13 to i64
  store i64 %20, i64* %11, align 8
  store i64 %15, i64* %10, align 8
  store i64 %15, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15HandleAllocatorD2Ev(%"class.gl::HandleAllocator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %11, align 8
  %13 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %12 to i64
  %16 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i32* %21 to i64
  %25 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i32* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15HandleAllocator13setBaseHandleEj(%"class.gl::HandleAllocator"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl15HandleAllocator8allocateEv(%"class.gl::HandleAllocator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.gl::LogMessage", align 8
  %5 = alloca %"class.gl::LogMessage", align 8
  %6 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %7, %9
  br i1 %10, label %107, label %11

11:                                               ; preds = %1
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %9 to i64
  %14 = sub i64 %13, %12
  %15 = ashr exact i64 %14, 2
  %16 = icmp sgt i64 %14, 4
  br i1 %16, label %17, label %74

17:                                               ; preds = %11
  %18 = getelementptr inbounds i32, i32* %9, i64 -1
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %7, align 4
  store i32 %19, i32* %18, align 4
  %21 = add nsw i64 %15, -1
  %22 = icmp eq i64 %14, 8
  br i1 %22, label %74, label %23

23:                                               ; preds = %17
  %24 = add nsw i64 %15, -3
  %25 = sdiv i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %7, i64 1
  %27 = ptrtoint i32* %26 to i64
  %28 = icmp sgt i64 %21, 2
  br i1 %28, label %29, label %37

29:                                               ; preds = %23
  %30 = getelementptr inbounds i32, i32* %7, i64 2
  %31 = load i32, i32* %26, align 4
  %32 = load i32, i32* %30, align 4
  %33 = icmp ugt i32 %31, %32
  %34 = ptrtoint i32* %30 to i64
  %35 = select i1 %33, i64 %34, i64 %27
  %36 = select i1 %33, i64 2, i64 1
  br label %37

37:                                               ; preds = %29, %23
  %38 = phi i64 [ %27, %23 ], [ %35, %29 ]
  %39 = phi i64 [ 1, %23 ], [ %36, %29 ]
  %40 = inttoptr i64 %38 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %7, align 4
  %43 = icmp ugt i32 %41, %42
  br i1 %43, label %74, label %44

44:                                               ; preds = %37, %66
  %45 = phi i32 [ %70, %66 ], [ %41, %37 ]
  %46 = phi i64 [ %67, %66 ], [ %38, %37 ]
  %47 = phi i32* [ %49, %66 ], [ %7, %37 ]
  %48 = phi i64 [ %68, %66 ], [ %39, %37 ]
  %49 = inttoptr i64 %46 to i32*
  store i32 %45, i32* %47, align 4
  %50 = icmp slt i64 %25, %48
  br i1 %50, label %72, label %51

51:                                               ; preds = %44
  %52 = shl nsw i64 %48, 1
  %53 = or i64 %52, 1
  %54 = getelementptr inbounds i32, i32* %7, i64 %53
  %55 = ptrtoint i32* %54 to i64
  %56 = add nsw i64 %53, 1
  %57 = icmp slt i64 %56, %21
  br i1 %57, label %58, label %66

58:                                               ; preds = %51
  %59 = getelementptr inbounds i32, i32* %54, i64 1
  %60 = load i32, i32* %54, align 4
  %61 = load i32, i32* %59, align 4
  %62 = icmp ugt i32 %60, %61
  %63 = ptrtoint i32* %59 to i64
  %64 = select i1 %62, i64 %63, i64 %55
  %65 = select i1 %62, i64 %56, i64 %53
  br label %66

66:                                               ; preds = %58, %51
  %67 = phi i64 [ %55, %51 ], [ %64, %58 ]
  %68 = phi i64 [ %53, %51 ], [ %65, %58 ]
  %69 = inttoptr i64 %67 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp ugt i32 %70, %42
  br i1 %71, label %72, label %44

72:                                               ; preds = %66, %44
  %73 = inttoptr i64 %46 to i32*
  store i32 %42, i32* %73, align 4
  br label %74

74:                                               ; preds = %11, %17, %37, %72
  %75 = load i32*, i32** %8, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 -1
  %77 = load i32, i32* %76, align 4
  store i32* %76, i32** %8, align 8
  %78 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 5
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %161, label %81

81:                                               ; preds = %74
  %82 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #10
  br i1 %82, label %83, label %161

83:                                               ; preds = %81
  %84 = bitcast %"class.gl::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %84) #10
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl15HandleAllocator8allocateEv, i64 0, i64 0), i32 58, i32 2) #10
  %85 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %4, i64 0, i32 4
  %86 = bitcast %"class.std::__1::basic_ostringstream"* %85 to %"class.std::__1::basic_ostream"*
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 34) #10
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %87, i32 %77) #10
  %89 = bitcast %"class.std::__1::basic_ostream"* %88 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr i8, i8* %90, i64 -24
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::basic_ostream"* %88 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %93
  %96 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #10
  %97 = bitcast i8* %95 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %97) #10
  %98 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %99 = bitcast %"class.std::__1::locale::facet"* %98 to %"class.std::__1::ctype"*
  %100 = bitcast %"class.std::__1::locale::facet"* %98 to i8 (%"class.std::__1::ctype"*, i8)***
  %101 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %100, align 8
  %102 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %101, i64 7
  %103 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %102, align 8
  %104 = call signext i8 %103(%"class.std::__1::ctype"* %99, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #10
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %88, i8 signext %104) #10
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %88) #10
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %84) #10
  br label %161

107:                                              ; preds = %1
  %108 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 0
  %109 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %108, align 8
  %110 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %129

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %109, i64 1
  %117 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 1
  %118 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %116 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 3
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %115
  %125 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %109 to i8*
  %126 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %116 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 %121, i1 false) #10
  br label %127

127:                                              ; preds = %115, %124
  %128 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %109, i64 %122
  store %"struct.gl::HandleAllocator::HandleRange"* %128, %"struct.gl::HandleAllocator::HandleRange"** %117, align 8
  br label %131

129:                                              ; preds = %107
  %130 = add i32 %111, 1
  store i32 %130, i32* %110, align 4
  br label %131

131:                                              ; preds = %129, %127
  %132 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 5
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %161, label %135

135:                                              ; preds = %131
  %136 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #10
  br i1 %136, label %137, label %161

137:                                              ; preds = %135
  %138 = bitcast %"class.gl::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %138) #10
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %5, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__._ZN2gl15HandleAllocator8allocateEv, i64 0, i64 0), i32 81, i32 2) #10
  %139 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %5, i64 0, i32 4
  %140 = bitcast %"class.std::__1::basic_ostringstream"* %139 to %"class.std::__1::basic_ostream"*
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %140, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37) #10
  %142 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %141, i32 %111) #10
  %143 = bitcast %"class.std::__1::basic_ostream"* %142 to i8**
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr i8, i8* %144, i64 -24
  %146 = bitcast i8* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.std::__1::basic_ostream"* %142 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 %147
  %150 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #10
  %151 = bitcast i8* %149 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %151) #10
  %152 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %153 = bitcast %"class.std::__1::locale::facet"* %152 to %"class.std::__1::ctype"*
  %154 = bitcast %"class.std::__1::locale::facet"* %152 to i8 (%"class.std::__1::ctype"*, i8)***
  %155 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %154, align 8
  %156 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %155, i64 7
  %157 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %156, align 8
  %158 = call signext i8 %157(%"class.std::__1::ctype"* %153, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #10
  %159 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %142, i8 signext %158) #10
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %142) #10
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %138) #10
  br label %161

161:                                              ; preds = %131, %135, %137, %83, %81, %74
  %162 = phi i32 [ %77, %74 ], [ %77, %81 ], [ %77, %83 ], [ %111, %137 ], [ %111, %135 ], [ %111, %131 ]
  ret i32 %162
}

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15HandleAllocator7releaseEj(%"class.gl::HandleAllocator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.gl::LogMessage", align 8
  %5 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #10
  br i1 %9, label %10, label %34

10:                                               ; preds = %8
  %11 = bitcast %"class.gl::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %11) #10
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__FUNCTION__._ZN2gl15HandleAllocator7releaseEj, i64 0, i64 0), i32 91, i32 2) #10
  %12 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %4, i64 0, i32 4
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i64 35) #10
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %14, i32 %1) #10
  %16 = bitcast %"class.std::__1::basic_ostream"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_ostream"* %15 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = bitcast i8* %22 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %24) #10
  %25 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %26 = bitcast %"class.std::__1::locale::facet"* %25 to %"class.std::__1::ctype"*
  %27 = bitcast %"class.std::__1::locale::facet"* %25 to i8 (%"class.std::__1::ctype"*, i8)***
  %28 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %27, align 8
  %29 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %28, i64 7
  %30 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %29, align 8
  %31 = call signext i8 %30(%"class.std::__1::ctype"* %26, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %15, i8 signext %31) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %15) #10
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %11) #10
  br label %34

34:                                               ; preds = %10, %8, %2
  %35 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %37, %39
  %41 = ptrtoint i32* %39 to i64
  br i1 %40, label %46, label %42

42:                                               ; preds = %34
  store i32 %1, i32* %37, align 4
  %43 = getelementptr inbounds i32, i32* %37, i64 1
  %44 = ptrtoint i32* %43 to i64
  %45 = bitcast i32** %36 to i64*
  store i64 %44, i64* %45, align 8
  br label %104

46:                                               ; preds = %34
  %47 = ptrtoint i32* %37 to i64
  %48 = bitcast i32** %36 to i64*
  %49 = bitcast %"class.std::__1::vector"* %35 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = ashr exact i64 %51, 2
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 4611686018427387903
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #11
  unreachable

57:                                               ; preds = %46
  %58 = bitcast i32** %38 to i64*
  %59 = sub i64 %41, %50
  %60 = ashr exact i64 %59, 2
  %61 = icmp ult i64 %60, 2305843009213693951
  br i1 %61, label %62, label %70

62:                                               ; preds = %57
  %63 = ashr exact i64 %59, 1
  %64 = icmp ult i64 %63, %53
  %65 = select i1 %64, i64 %53, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  call void @abort() #11
  unreachable

70:                                               ; preds = %67, %57
  %71 = phi i64 [ %65, %67 ], [ 4611686018427387903, %57 ]
  %72 = shl i64 %71, 2
  %73 = call i8* @_Znwm(i64 %72) #9
  %74 = bitcast i8* %73 to i32*
  br label %75

75:                                               ; preds = %70, %62
  %76 = phi i64 [ %71, %70 ], [ 0, %62 ]
  %77 = phi i32* [ %74, %70 ], [ null, %62 ]
  %78 = getelementptr inbounds i32, i32* %77, i64 %52
  %79 = getelementptr inbounds i32, i32* %77, i64 %76
  %80 = ptrtoint i32* %79 to i64
  store i32 %1, i32* %78, align 4
  %81 = getelementptr inbounds i32, i32* %78, i64 1
  %82 = ptrtoint i32* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = load i64, i64* %48, align 8
  %86 = ptrtoint i32* %84 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 2
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds i32, i32* %78, i64 %89
  %91 = ptrtoint i32* %90 to i64
  %92 = icmp sgt i64 %87, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %75
  %94 = bitcast i32* %90 to i8*
  %95 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 %87, i1 false) #10
  %96 = load i32*, i32** %83, align 8
  br label %97

97:                                               ; preds = %93, %75
  %98 = phi i32* [ %84, %75 ], [ %96, %93 ]
  store i64 %91, i64* %49, align 8
  store i64 %82, i64* %48, align 8
  store i64 %80, i64* %58, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %101) #9
  %102 = load i32*, i32** %36, align 8
  %103 = ptrtoint i32* %102 to i64
  br label %104

104:                                              ; preds = %42, %97, %100
  %105 = phi i64 [ %44, %42 ], [ %82, %97 ], [ %103, %100 ]
  %106 = phi i32* [ %43, %42 ], [ %81, %97 ], [ %102, %100 ]
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = ptrtoint i32* %108 to i64
  %110 = sub i64 %105, %109
  %111 = icmp sgt i64 %110, 4
  br i1 %111, label %112, label %134

112:                                              ; preds = %104
  %113 = lshr exact i64 %110, 2
  %114 = add nsw i64 %113, -2
  %115 = sdiv i64 %114, 2
  %116 = getelementptr inbounds i32, i32* %108, i64 %115
  %117 = getelementptr inbounds i32, i32* %106, i64 -1
  %118 = load i32, i32* %116, align 4
  %119 = load i32, i32* %117, align 4
  %120 = icmp ugt i32 %118, %119
  br i1 %120, label %121, label %134

121:                                              ; preds = %112, %127
  %122 = phi i32 [ %131, %127 ], [ %118, %112 ]
  %123 = phi i32* [ %124, %127 ], [ %117, %112 ]
  %124 = phi i32* [ %130, %127 ], [ %116, %112 ]
  %125 = phi i64 [ %129, %127 ], [ %115, %112 ]
  store i32 %122, i32* %123, align 4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %121
  %128 = add nsw i64 %125, -1
  %129 = sdiv i64 %128, 2
  %130 = getelementptr inbounds i32, i32* %108, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = icmp ugt i32 %131, %119
  br i1 %132, label %121, label %133

133:                                              ; preds = %127, %121
  store i32 %119, i32* %124, align 4
  br label %134

134:                                              ; preds = %104, %112, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15HandleAllocator7reserveEj(%"class.gl::HandleAllocator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.gl::LogMessage", align 8
  %5 = alloca %"struct.gl::HandleAllocator::HandleRange", align 4
  %6 = alloca %"struct.gl::HandleAllocator::HandleRange", align 4
  %7 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #10
  br i1 %11, label %12, label %36

12:                                               ; preds = %10
  %13 = bitcast %"class.gl::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %13) #10
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__FUNCTION__._ZN2gl15HandleAllocator7reserveEj, i64 0, i64 0), i32 103, i32 2) #10
  %14 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %4, i64 0, i32 4
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i64 35) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %16, i32 %1) #10
  %18 = bitcast %"class.std::__1::basic_ostream"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::basic_ostream"* %17 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = bitcast i8* %24 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %26) #10
  %27 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %28 = bitcast %"class.std::__1::locale::facet"* %27 to %"class.std::__1::ctype"*
  %29 = bitcast %"class.std::__1::locale::facet"* %27 to i8 (%"class.std::__1::ctype"*, i8)***
  %30 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %29, align 8
  %31 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %30, i64 7
  %32 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %31, align 8
  %33 = call signext i8 %32(%"class.std::__1::ctype"* %28, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %17, i8 signext %33) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %17) #10
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %13) #10
  br label %36

36:                                               ; preds = %12, %10, %2
  %37 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %38, %40
  %42 = ptrtoint i32* %40 to i64
  br i1 %41, label %136, label %43

43:                                               ; preds = %36, %47
  %44 = phi i32* [ %48, %47 ], [ %38, %36 ]
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %1
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds i32, i32* %44, i64 1
  %49 = icmp eq i32* %48, %40
  br i1 %49, label %136, label %43

50:                                               ; preds = %43
  %51 = icmp eq i32* %44, %40
  br i1 %51, label %136, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds i32, i32* %44, i64 1
  %54 = ptrtoint i32* %53 to i64
  %55 = sub i64 %42, %54
  %56 = ashr exact i64 %55, 2
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = bitcast i32* %44 to i8*
  %60 = bitcast i32* %53 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 %55, i1 false) #10
  %61 = load i32*, i32** %37, align 8
  br label %62

62:                                               ; preds = %52, %58
  %63 = phi i32* [ %38, %52 ], [ %61, %58 ]
  %64 = getelementptr inbounds i32, i32* %44, i64 %56
  store i32* %64, i32** %39, align 8
  %65 = ptrtoint i32* %63 to i64
  %66 = ptrtoint i32* %64 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 2
  %69 = icmp sgt i64 %67, 4
  br i1 %69, label %70, label %210

70:                                               ; preds = %62
  %71 = add nsw i64 %68, -2
  %72 = sdiv i64 %71, 2
  %73 = icmp slt i64 %67, 8
  br label %74

74:                                               ; preds = %133, %70
  %75 = phi i64 [ %134, %133 ], [ %72, %70 ]
  %76 = getelementptr inbounds i32, i32* %63, i64 %75
  %77 = shl nuw i64 %75, 2
  %78 = ashr exact i64 %77, 2
  %79 = icmp slt i64 %72, %78
  %80 = or i1 %73, %79
  br i1 %80, label %133, label %81

81:                                               ; preds = %74
  %82 = ashr exact i64 %77, 1
  %83 = or i64 %82, 1
  %84 = getelementptr inbounds i32, i32* %63, i64 %83
  %85 = ptrtoint i32* %84 to i64
  %86 = add nsw i64 %83, 1
  %87 = icmp slt i64 %86, %68
  br i1 %87, label %88, label %96

88:                                               ; preds = %81
  %89 = getelementptr inbounds i32, i32* %84, i64 1
  %90 = load i32, i32* %84, align 4
  %91 = load i32, i32* %89, align 4
  %92 = icmp ugt i32 %90, %91
  %93 = ptrtoint i32* %89 to i64
  %94 = select i1 %92, i64 %93, i64 %85
  %95 = select i1 %92, i64 %86, i64 %83
  br label %96

96:                                               ; preds = %88, %81
  %97 = phi i64 [ %85, %81 ], [ %94, %88 ]
  %98 = phi i64 [ %83, %81 ], [ %95, %88 ]
  %99 = inttoptr i64 %97 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = load i32, i32* %76, align 4
  %102 = icmp ugt i32 %100, %101
  br i1 %102, label %133, label %103

103:                                              ; preds = %96, %125
  %104 = phi i32 [ %129, %125 ], [ %100, %96 ]
  %105 = phi i64 [ %126, %125 ], [ %97, %96 ]
  %106 = phi i32* [ %108, %125 ], [ %76, %96 ]
  %107 = phi i64 [ %127, %125 ], [ %98, %96 ]
  %108 = inttoptr i64 %105 to i32*
  store i32 %104, i32* %106, align 4
  %109 = icmp slt i64 %72, %107
  br i1 %109, label %131, label %110

110:                                              ; preds = %103
  %111 = shl nsw i64 %107, 1
  %112 = or i64 %111, 1
  %113 = getelementptr inbounds i32, i32* %63, i64 %112
  %114 = ptrtoint i32* %113 to i64
  %115 = add nsw i64 %112, 1
  %116 = icmp slt i64 %115, %68
  br i1 %116, label %117, label %125

117:                                              ; preds = %110
  %118 = getelementptr inbounds i32, i32* %113, i64 1
  %119 = load i32, i32* %113, align 4
  %120 = load i32, i32* %118, align 4
  %121 = icmp ugt i32 %119, %120
  %122 = ptrtoint i32* %118 to i64
  %123 = select i1 %121, i64 %122, i64 %114
  %124 = select i1 %121, i64 %115, i64 %112
  br label %125

125:                                              ; preds = %117, %110
  %126 = phi i64 [ %114, %110 ], [ %123, %117 ]
  %127 = phi i64 [ %112, %110 ], [ %124, %117 ]
  %128 = inttoptr i64 %126 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ugt i32 %129, %101
  br i1 %130, label %131, label %103

131:                                              ; preds = %125, %103
  %132 = inttoptr i64 %105 to i32*
  store i32 %101, i32* %132, align 4
  br label %133

133:                                              ; preds = %131, %96, %74
  %134 = add nsw i64 %75, -1
  %135 = icmp sgt i64 %75, 0
  br i1 %135, label %74, label %210

136:                                              ; preds = %47, %50, %36
  %137 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3
  %138 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %137, i64 0, i32 0, i32 0
  %139 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %138, align 8
  %140 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 1
  %141 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %139 to i64
  %144 = sub i64 %142, %143
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %162, label %146

146:                                              ; preds = %136
  %147 = ashr exact i64 %144, 3
  br label %148

148:                                              ; preds = %148, %146
  %149 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %139, %146 ], [ %160, %148 ]
  %150 = phi i64 [ %147, %146 ], [ %159, %148 ]
  %151 = lshr i64 %150, 1
  %152 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %149, i64 1
  %153 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %149, i64 %151, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = icmp ult i32 %154, %1
  %156 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %152, i64 %151
  %157 = xor i64 %151, -1
  %158 = add i64 %150, %157
  %159 = select i1 %155, i64 %158, i64 %151
  %160 = select i1 %155, %"struct.gl::HandleAllocator::HandleRange"* %156, %"struct.gl::HandleAllocator::HandleRange"* %149
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %162, label %148

162:                                              ; preds = %148, %136
  %163 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %139, %136 ], [ %160, %148 ]
  %164 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %163, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %165, %1
  %169 = icmp eq i32 %167, %1
  %170 = or i1 %168, %169
  br i1 %170, label %171, label %189

171:                                              ; preds = %162
  %172 = icmp eq i32 %165, %167
  br i1 %172, label %173, label %184

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %163, i64 1
  %175 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %174 to i64
  %176 = sub i64 %142, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp eq i64 %176, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %163 to i8*
  %181 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %174 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 %176, i1 false) #10
  br label %182

182:                                              ; preds = %173, %179
  %183 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %163, i64 %177
  store %"struct.gl::HandleAllocator::HandleRange"* %183, %"struct.gl::HandleAllocator::HandleRange"** %140, align 8
  br label %210

184:                                              ; preds = %171
  br i1 %168, label %185, label %187

185:                                              ; preds = %184
  %186 = add i32 %1, 1
  store i32 %186, i32* %164, align 4
  br label %210

187:                                              ; preds = %184
  %188 = add i32 %167, -1
  store i32 %188, i32* %166, align 4
  br label %210

189:                                              ; preds = %162
  %190 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %163, i64 1
  %191 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %190 to i64
  %192 = sub i64 %142, %191
  %193 = ashr exact i64 %192, 3
  %194 = icmp eq i64 %192, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %189
  %196 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %163 to i8*
  %197 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %190 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %196, i8* align 4 %197, i64 %192, i1 false) #10
  br label %198

198:                                              ; preds = %189, %195
  %199 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %163, i64 %193
  store %"struct.gl::HandleAllocator::HandleRange"* %199, %"struct.gl::HandleAllocator::HandleRange"** %140, align 8
  %200 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #10
  %201 = add i32 %1, 1
  %202 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %5, i64 0, i32 0
  store i32 %201, i32* %202, align 4
  %203 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %5, i64 0, i32 1
  store i32 %167, i32* %203, align 4
  %204 = call %"struct.gl::HandleAllocator::HandleRange"* @_ZNSt3__16vectorIN2gl15HandleAllocator11HandleRangeENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EEOS3_(%"class.std::__1::vector.1"* %137, %"struct.gl::HandleAllocator::HandleRange"* %163, %"struct.gl::HandleAllocator::HandleRange"* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #10
  %205 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #10
  %206 = add i32 %1, -1
  %207 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %6, i64 0, i32 0
  store i32 %165, i32* %207, align 4
  %208 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %6, i64 0, i32 1
  store i32 %206, i32* %208, align 4
  %209 = call %"struct.gl::HandleAllocator::HandleRange"* @_ZNSt3__16vectorIN2gl15HandleAllocator11HandleRangeENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EEOS3_(%"class.std::__1::vector.1"* %137, %"struct.gl::HandleAllocator::HandleRange"* %204, %"struct.gl::HandleAllocator::HandleRange"* nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #10
  br label %210

210:                                              ; preds = %133, %198, %185, %187, %182, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.gl::HandleAllocator::HandleRange"* @_ZNSt3__16vectorIN2gl15HandleAllocator11HandleRangeENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EEOS3_(%"class.std::__1::vector.1"*, %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %9, align 8
  %11 = icmp ult %"struct.gl::HandleAllocator::HandleRange"* %8, %10
  %12 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %8 to i64
  %13 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %10 to i64
  br i1 %11, label %14, label %165

14:                                               ; preds = %3
  %15 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %8, %1
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %2 to i64*
  %18 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %1 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %1, i64 1
  %21 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %20 to i64
  %22 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %321

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %1, i64 1
  %25 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %1, i64 %27
  %29 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %7 to i64*
  %30 = icmp ult %"struct.gl::HandleAllocator::HandleRange"* %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %32, i32 0
  %34 = bitcast i32* %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %45, i32 0
  %47 = bitcast i32* %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %1, i64 %55
  %57 = icmp ult %"struct.gl::HandleAllocator::HandleRange"* %8, %56
  %58 = icmp ult %"struct.gl::HandleAllocator::HandleRange"* %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %61
  %63 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %72
  %75 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %28, i64 %72
  %76 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 4, !alias.scope !3
  %78 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %75, i64 2
  %79 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 4, !alias.scope !3
  %81 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 4, !alias.scope !6, !noalias !3
  %82 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %74, i64 2
  %83 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 4, !alias.scope !6, !noalias !3
  %84 = or i64 %72, 4
  %85 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %84
  %86 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %28, i64 %84
  %87 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 4, !alias.scope !3
  %89 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %86, i64 2
  %90 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 4, !alias.scope !3
  %92 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 4, !alias.scope !6, !noalias !3
  %93 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %85, i64 2
  %94 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 4, !alias.scope !6, !noalias !3
  %95 = or i64 %72, 8
  %96 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %95
  %97 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %28, i64 %95
  %98 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 4, !alias.scope !3
  %100 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %97, i64 2
  %101 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 4, !alias.scope !3
  %103 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 4, !alias.scope !6, !noalias !3
  %104 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %96, i64 2
  %105 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 4, !alias.scope !6, !noalias !3
  %106 = or i64 %72, 12
  %107 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %106
  %108 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %28, i64 %106
  %109 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 4, !alias.scope !3
  %111 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %108, i64 2
  %112 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 4, !alias.scope !3
  %114 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 4, !alias.scope !6, !noalias !3
  %115 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %107, i64 2
  %116 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 4, !alias.scope !6, !noalias !3
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !8

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %124
  %127 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %28, i64 %124
  %128 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 4, !alias.scope !3
  %130 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %127, i64 2
  %131 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 4, !alias.scope !3
  %133 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 4, !alias.scope !6, !noalias !3
  %134 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %126, i64 2
  %135 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 4, !alias.scope !6, !noalias !3
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !10

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %8, i64 %148
  %150 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %149 to i8*
  %151 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %151, i64 %26, i1 false) #10
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %154 to i64*
  %156 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %153 to i64*
  %157 = load i64, i64* %155, align 4
  store i64 %157, i64* %156, align 4
  %158 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %154, i64 1
  %159 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %153, i64 1
  %160 = icmp ult %"struct.gl::HandleAllocator::HandleRange"* %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !12

161:                                              ; preds = %144, %147
  %162 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %2 to i64*
  %163 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %1 to i64*
  %164 = load i64, i64* %162, align 4
  store i64 %164, i64* %163, align 4
  br label %321

165:                                              ; preds = %3
  %166 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2
  %167 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %167) #10
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %171 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %173 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %7 to i64*
  %174 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %175 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 40, i1 false)
  %176 = load i64, i64* %174, align 8
  %177 = sub i64 %12, %176
  %178 = ashr exact i64 %177, 3
  %179 = add nsw i64 %178, 1
  %180 = icmp ugt i64 %179, 2305843009213693951
  br i1 %180, label %181, label %183

181:                                              ; preds = %165
  %182 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %182) #11
  unreachable

183:                                              ; preds = %165
  %184 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %9 to i64*
  %185 = sub i64 %13, %176
  %186 = ashr exact i64 %185, 3
  %187 = icmp ult i64 %186, 1152921504606846975
  br i1 %187, label %192, label %188

188:                                              ; preds = %183
  %189 = sub i64 %4, %176
  %190 = ashr exact i64 %189, 3
  store %"struct.gl::HandleAllocator::HandleRange"* null, %"struct.gl::HandleAllocator::HandleRange"** %171, align 8
  %191 = bitcast %"class.std::__1::allocator.6"** %172 to %"class.std::__1::__compressed_pair.3"**
  store %"class.std::__1::__compressed_pair.3"* %166, %"class.std::__1::__compressed_pair.3"** %191, align 8
  br label %203

192:                                              ; preds = %183
  %193 = ashr exact i64 %185, 2
  %194 = icmp ult i64 %193, %179
  %195 = select i1 %194, i64 %179, i64 %193
  %196 = sub i64 %4, %176
  %197 = ashr exact i64 %196, 3
  store %"struct.gl::HandleAllocator::HandleRange"* null, %"struct.gl::HandleAllocator::HandleRange"** %171, align 8
  %198 = bitcast %"class.std::__1::allocator.6"** %172 to %"class.std::__1::__compressed_pair.3"**
  store %"class.std::__1::__compressed_pair.3"* %166, %"class.std::__1::__compressed_pair.3"** %198, align 8
  %199 = icmp eq i64 %195, 0
  br i1 %199, label %209, label %200

200:                                              ; preds = %192
  %201 = icmp ugt i64 %195, 2305843009213693951
  br i1 %201, label %202, label %203

202:                                              ; preds = %200
  tail call void @abort() #11
  unreachable

203:                                              ; preds = %188, %200
  %204 = phi i64 [ 2305843009213693951, %188 ], [ %195, %200 ]
  %205 = phi i64 [ %190, %188 ], [ %197, %200 ]
  %206 = shl i64 %204, 3
  %207 = tail call i8* @_Znwm(i64 %206) #9
  %208 = bitcast i8* %207 to %"struct.gl::HandleAllocator::HandleRange"*
  br label %209

209:                                              ; preds = %192, %203
  %210 = phi i64 [ %205, %203 ], [ %197, %192 ]
  %211 = phi i64 [ %204, %203 ], [ 0, %192 ]
  %212 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %208, %203 ], [ null, %192 ]
  store %"struct.gl::HandleAllocator::HandleRange"* %212, %"struct.gl::HandleAllocator::HandleRange"** %168, align 8
  %213 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %212, i64 %210
  store %"struct.gl::HandleAllocator::HandleRange"* %213, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  store %"struct.gl::HandleAllocator::HandleRange"* %213, %"struct.gl::HandleAllocator::HandleRange"** %169, align 8
  %214 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %212, i64 %211
  store %"struct.gl::HandleAllocator::HandleRange"* %214, %"struct.gl::HandleAllocator::HandleRange"** %171, align 8
  call void @_ZNSt3__114__split_bufferIN2gl15HandleAllocator11HandleRangeERNS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"* nonnull %5, %"struct.gl::HandleAllocator::HandleRange"* dereferenceable(8) %2)
  %215 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %169, align 8
  %216 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %6, align 8
  %217 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %216 to i64
  %218 = sub i64 %4, %217
  %219 = ashr exact i64 %218, 3
  %220 = sub nsw i64 0, %219
  %221 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %215, i64 %220
  store %"struct.gl::HandleAllocator::HandleRange"* %221, %"struct.gl::HandleAllocator::HandleRange"** %169, align 8
  %222 = icmp sgt i64 %218, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %209
  %224 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %221 to i8*
  %225 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %225, i64 %218, i1 false) #10
  br label %226

226:                                              ; preds = %223, %209
  %227 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %7, align 8
  %228 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %227, %1
  br i1 %228, label %229, label %233

229:                                              ; preds = %226
  %230 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %227 to i64
  %231 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %170 to i64*
  %232 = load i64, i64* %231, align 8
  br label %295

233:                                              ; preds = %226
  %234 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %170 to i64**
  %235 = load i64*, i64** %234, align 8
  %236 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %227, i64 -1, i32 0
  %237 = ptrtoint i32* %236 to i64
  %238 = sub i64 %237, %4
  %239 = lshr i64 %238, 3
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 3
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %257, label %243

243:                                              ; preds = %233, %243
  %244 = phi i64* [ %252, %243 ], [ %235, %233 ]
  %245 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %249, %243 ], [ %1, %233 ]
  %246 = phi i64 [ %253, %243 ], [ %241, %233 ]
  %247 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %245 to i64*
  %248 = load i64, i64* %247, align 4
  store i64 %248, i64* %244, align 4
  %249 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %245, i64 1
  %250 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %251 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %250, i64 1
  store %"struct.gl::HandleAllocator::HandleRange"* %251, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %252 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %251 to i64*
  %253 = add i64 %246, -1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %243, !llvm.loop !13

255:                                              ; preds = %243
  %256 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %251 to i64*
  br label %257

257:                                              ; preds = %233, %255
  %258 = phi %"struct.gl::HandleAllocator::HandleRange"* [ undef, %233 ], [ %251, %255 ]
  %259 = phi i64* [ %235, %233 ], [ %256, %255 ]
  %260 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %1, %233 ], [ %249, %255 ]
  %261 = icmp ult i64 %238, 24
  br i1 %261, label %290, label %262

262:                                              ; preds = %257, %262
  %263 = phi i64* [ %289, %262 ], [ %259, %257 ]
  %264 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %285, %262 ], [ %260, %257 ]
  %265 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %264 to i64*
  %266 = load i64, i64* %265, align 4
  store i64 %266, i64* %263, align 4
  %267 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %264, i64 1
  %268 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %269 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %268, i64 1
  store %"struct.gl::HandleAllocator::HandleRange"* %269, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %270 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %269 to i64*
  %271 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %267 to i64*
  %272 = load i64, i64* %271, align 4
  store i64 %272, i64* %270, align 4
  %273 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %264, i64 2
  %274 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %275 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %274, i64 1
  store %"struct.gl::HandleAllocator::HandleRange"* %275, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %276 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %275 to i64*
  %277 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %273 to i64*
  %278 = load i64, i64* %277, align 4
  store i64 %278, i64* %276, align 4
  %279 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %264, i64 3
  %280 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %281 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %280, i64 1
  store %"struct.gl::HandleAllocator::HandleRange"* %281, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %282 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %281 to i64*
  %283 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %279 to i64*
  %284 = load i64, i64* %283, align 4
  store i64 %284, i64* %282, align 4
  %285 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %264, i64 4
  %286 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %287 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %286, i64 1
  store %"struct.gl::HandleAllocator::HandleRange"* %287, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  %288 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %285, %227
  %289 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %287 to i64*
  br i1 %288, label %290, label %262

290:                                              ; preds = %262, %257
  %291 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %258, %257 ], [ %287, %262 ]
  %292 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %291 to i64
  %293 = load i64, i64* %173, align 8
  %294 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %170 to i64*
  br label %295

295:                                              ; preds = %229, %290
  %296 = phi i64* [ %231, %229 ], [ %294, %290 ]
  %297 = phi i64 [ %232, %229 ], [ %292, %290 ]
  %298 = phi i64 [ %230, %229 ], [ %293, %290 ]
  %299 = load i64, i64* %174, align 8
  %300 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %169 to i64*
  %301 = load i64, i64* %300, align 8
  store i64 %301, i64* %174, align 8
  store i64 %299, i64* %300, align 8
  store i64 %297, i64* %173, align 8
  store i64 %298, i64* %296, align 8
  %302 = load i64, i64* %184, align 8
  %303 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %171 to i64*
  %304 = load i64, i64* %303, align 8
  store i64 %304, i64* %184, align 8
  store i64 %302, i64* %303, align 8
  %305 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %299, i64* %305, align 8
  %306 = inttoptr i64 %299 to %"struct.gl::HandleAllocator::HandleRange"*
  %307 = inttoptr i64 %298 to %"struct.gl::HandleAllocator::HandleRange"*
  %308 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %307, %306
  br i1 %308, label %316, label %309

309:                                              ; preds = %295
  %310 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %307, i64 -1, i32 0
  %311 = ptrtoint i32* %310 to i64
  %312 = sub i64 %311, %299
  %313 = lshr i64 %312, 3
  %314 = xor i64 %313, -1
  %315 = getelementptr %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %307, i64 %314
  store %"struct.gl::HandleAllocator::HandleRange"* %315, %"struct.gl::HandleAllocator::HandleRange"** %170, align 8
  br label %316

316:                                              ; preds = %309, %295
  %317 = icmp eq i64 %299, 0
  br i1 %317, label %320, label %318

318:                                              ; preds = %316
  %319 = inttoptr i64 %299 to i8*
  call void @_ZdlPv(i8* %319) #9
  br label %320

320:                                              ; preds = %316, %318
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %167) #10
  br label %321

321:                                              ; preds = %16, %161, %320
  %322 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %1, %16 ], [ %1, %161 ], [ %215, %320 ]
  ret %"struct.gl::HandleAllocator::HandleRange"* %322
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15HandleAllocator5resetEv(%"class.gl::HandleAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::vector.1"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = inttoptr i64 %4 to %"struct.gl::HandleAllocator::HandleRange"*
  %8 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %9 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %8, align 8
  %10 = icmp ugt %"struct.gl::HandleAllocator::HandleRange"* %9, %7
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = inttoptr i64 %4 to i64*
  store i64 -4294967295, i64* %12, align 4
  %13 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %7, i64 1
  %14 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %13 to i64
  store i64 %14, i64* %6, align 8
  br label %61

15:                                               ; preds = %1
  %16 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %9 to i64
  %17 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %8 to i64*
  %18 = sub i64 %16, %4
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %15
  %22 = ashr exact i64 %18, 2
  %23 = icmp eq i64 %18, 0
  %24 = select i1 %23, i64 1, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %26, %15
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %15 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #9
  %33 = bitcast i8* %32 to %"struct.gl::HandleAllocator::HandleRange"*
  br label %34

34:                                               ; preds = %29, %21
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %36, i64 %35
  %38 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %37 to i64
  %39 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %36 to i64*
  store i64 -4294967295, i64* %39, align 4
  %40 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %36, i64 1
  %41 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %43 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %42, align 8
  %44 = load i64, i64* %6, align 8
  %45 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %43 to i64
  %46 = sub i64 %44, %45
  %47 = ashr exact i64 %46, 3
  %48 = sub nsw i64 0, %47
  %49 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %36, i64 %48
  %50 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %49 to i64
  %51 = icmp sgt i64 %46, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %34
  %53 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %49 to i8*
  %54 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %54, i64 %46, i1 false) #10
  %55 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %42, align 8
  br label %56

56:                                               ; preds = %52, %34
  %57 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %43, %34 ], [ %55, %52 ]
  store i64 %50, i64* %3, align 8
  store i64 %41, i64* %6, align 8
  store i64 %38, i64* %17, align 8
  %58 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %57 to i8*
  tail call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %11, %56, %59
  %62 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4
  %63 = bitcast %"class.std::__1::vector"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %66 = bitcast i32** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 0
  store i32 1, i32* %67, align 8
  %68 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 1
  store i32 1, i32* %68, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15HandleAllocator13enableLoggingEb(%"class.gl::HandleAllocator"* nocapture, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.gl::HandleAllocator", %"class.gl::HandleAllocator"* %0, i64 0, i32 5
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN2gl15HandleAllocator11HandleRangeERNS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"*, %"struct.gl::HandleAllocator::HandleRange"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %5, align 8
  %7 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %4, %6
  %8 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %6 to i64
  %9 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %13, align 8
  %15 = icmp ugt %"struct.gl::HandleAllocator::HandleRange"* %12, %14
  %16 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %12, i64 %22
  %24 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %23 to i8*
  %30 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 %25, i1 false) #10
  %31 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %23, i64 %26
  store %"struct.gl::HandleAllocator::HandleRange"* %34, %"struct.gl::HandleAllocator::HandleRange"** %3, align 8
  %35 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %33, i64 %22
  store %"struct.gl::HandleAllocator::HandleRange"* %35, %"struct.gl::HandleAllocator::HandleRange"** %11, align 8
  %36 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #9
  %50 = bitcast i8* %49 to %"struct.gl::HandleAllocator::HandleRange"*
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %50, i64 %47
  %53 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %52 to i64
  %54 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %50, i64 %43
  %55 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %54 to i64
  %56 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %12 to i64
  %57 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %71 to i64*
  %74 = inttoptr i64 %70 to i64*
  %75 = load i64, i64* %73, align 4
  store i64 %75, i64* %74, align 4
  %76 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %69, i64 1
  %77 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %76 to i64
  %78 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !14

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %91 to i64*
  %93 = inttoptr i64 %90 to i64*
  %94 = load i64, i64* %92, align 4
  store i64 %94, i64* %93, align 4
  %95 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 1
  %96 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 1
  %97 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %96 to i64*
  %98 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %95 to i64*
  %99 = load i64, i64* %97, align 4
  store i64 %99, i64* %98, align 4
  %100 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 2
  %101 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 2
  %102 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %101 to i64*
  %103 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %100 to i64*
  %104 = load i64, i64* %102, align 4
  store i64 %104, i64* %103, align 4
  %105 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 3
  %106 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 3
  %107 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %106 to i64*
  %108 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %105 to i64*
  %109 = load i64, i64* %107, align 4
  store i64 %109, i64* %108, align 4
  %110 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 4
  %111 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 4
  %112 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %111 to i64*
  %113 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %110 to i64*
  %114 = load i64, i64* %112, align 4
  store i64 %114, i64* %113, align 4
  %115 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 5
  %116 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 5
  %117 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %116 to i64*
  %118 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %115 to i64*
  %119 = load i64, i64* %117, align 4
  store i64 %119, i64* %118, align 4
  %120 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 6
  %121 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 6
  %122 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %121 to i64*
  %123 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %120 to i64*
  %124 = load i64, i64* %122, align 4
  store i64 %124, i64* %123, align 4
  %125 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 7
  %126 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 7
  %127 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %126 to i64*
  %128 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %125 to i64*
  %129 = load i64, i64* %127, align 4
  store i64 %129, i64* %128, align 4
  %130 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %89, i64 8
  %131 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %130 to i64
  %132 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %91, i64 8
  %133 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.gl::HandleAllocator::HandleRange"* %60 to i64
  %136 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.gl::HandleAllocator::HandleRange"* [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.gl::HandleAllocator::HandleRange"* %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %138 to i8*
  tail call void @_ZdlPv(i8* %145) #9
  %146 = bitcast %"struct.gl::HandleAllocator::HandleRange"** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.gl::HandleAllocator::HandleRange"* %1 to i64*
  %151 = load i64, i64* %150, align 4
  store i64 %151, i64* %149, align 4
  %152 = load %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"** %3, align 8
  %153 = getelementptr inbounds %"struct.gl::HandleAllocator::HandleRange", %"struct.gl::HandleAllocator::HandleRange"* %152, i64 1
  store %"struct.gl::HandleAllocator::HandleRange"* %153, %"struct.gl::HandleAllocator::HandleRange"** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
