; ModuleID = '../../gpu/command_buffer/client/client_discardable_manager.cc'
source_filename = "../../gpu/command_buffer/client/client_discardable_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::ClientDiscardableManager" = type { i32, i64, i32, %"class.std::__1::vector", %"class.std::__1::map", %"class.std::__1::queue" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gpu::ClientDiscardableManager::Allocation"* }
%"struct.gpu::ClientDiscardableManager::Allocation" = type { %class.scoped_refptr, i32, %"class.gpu::(anonymous namespace)::FreeOffsetSet" }
%class.scoped_refptr = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr.1", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"class.gpu::(anonymous namespace)::FreeOffsetSet" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.5" }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"class.std::__1::__compressed_pair.7" }
%"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.gpu::ClientDiscardableHandle"*, i64 }
%"class.gpu::ClientDiscardableHandle" = type { %"class.gpu::DiscardableHandleBase" }
%"class.gpu::DiscardableHandleBase" = type { %class.scoped_refptr, i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.26" }
%"struct.std::__1::pair.26" = type { %"class.util::IdType", %"class.gpu::ClientDiscardableHandle" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.gpu::CommandBuffer" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN3gpu24ClientDiscardableManager10AllocationENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5eraseENS_11__wrap_iterIPKS7_EE = comdat any

$_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE13DestructRangeIS3_Li0EEEvPS3_S6_ = comdat any

$_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN3gpu23ClientDiscardableHandleEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS6_JRS6_RS5_EEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_ = comdat any

$_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_ = comdat any

$_ZNK4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3gpu24ClientDiscardableManager10AllocationENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE25ShrinkCapacityIfNecessaryEv = comdat any

@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@_ZZN3gpu12_GLOBAL__N_115GetNextHandleIdEvE16g_next_handle_id = internal global { { { i32 } } } zeroinitializer, align 4
@.str.3 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN3gpu24ClientDiscardableManagerC1Ev = hidden unnamed_addr alias void (%"class.gpu::ClientDiscardableManager"*), void (%"class.gpu::ClientDiscardableManager"*)* @_ZN3gpu24ClientDiscardableManagerC2Ev
@_ZN3gpu24ClientDiscardableManagerD1Ev = hidden unnamed_addr alias void (%"class.gpu::ClientDiscardableManager"*), void (%"class.gpu::ClientDiscardableManager"*)* @_ZN3gpu24ClientDiscardableManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24ClientDiscardableManagerC2Ev(%"class.gpu::ClientDiscardableManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 0
  %3 = tail call i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() #13
  %4 = trunc i64 %3 to i32
  %5 = icmp ugt i32 %4, 2048
  %6 = select i1 %5, i32 %4, i32 2048
  store i32 %6, i32* %2, align 8
  %7 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 1
  store i64 4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 2
  %9 = lshr i32 %6, 2
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #13
  %12 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5
  %17 = bitcast %"class.std::__1::queue"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24ClientDiscardableManagerD2Ev(%"class.gpu::ClientDiscardableManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE13DestructRangeEmm(%"class.base::circular_deque"* %3, i64 %5, i64 %7) #13
  %8 = bitcast %"class.std::__1::queue"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #13
  %10 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %10, %"class.std::__1::__tree_node"* %13) #13
  %14 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr"* %16, null
  br i1 %17, label %57, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.std::__1::unique_ptr"* %16 to i8*
  %20 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr"* %21, %16
  br i1 %22, label %55, label %23

23:                                               ; preds = %18, %50
  %24 = phi %"class.std::__1::unique_ptr"* [ %25, %50 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %26, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %26, align 8
  %28 = icmp eq %"struct.gpu::ClientDiscardableManager::Allocation"* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %27, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %30, align 8
  %32 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %31 to i64
  %35 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %27, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %36 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %33, %29
  %39 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %27, i64 0, i32 0, i32 0
  %40 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %39, align 8
  %41 = icmp eq %"class.gpu::Buffer"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %40) #13
  %47 = bitcast %"class.gpu::Buffer"* %40 to i8*
  tail call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %46, %42, %38
  %49 = bitcast %"struct.gpu::ClientDiscardableManager::Allocation"* %27 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %48, %23
  %51 = icmp eq %"class.std::__1::unique_ptr"* %25, %16
  br i1 %51, label %52, label %23

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector"* %14 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %18, %52
  %56 = phi i8* [ %54, %52 ], [ %19, %18 ]
  store %"class.std::__1::unique_ptr"* %16, %"class.std::__1::unique_ptr"** %20, align 8
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %1, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu24ClientDiscardableManager12CreateHandleEPNS_13CommandBufferE(%"class.gpu::ClientDiscardableManager"*, %"class.gpu::CommandBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.gpu::ClientDiscardableHandle", align 8
  %7 = alloca %"class.util::IdType", align 4
  %8 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  store %"class.gpu::Buffer"* null, %"class.gpu::Buffer"** %9, align 8
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 -1431655766, i32* %4, align 4
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #13
  store i32 0, i32* %5, align 4
  %12 = call zeroext i1 @_ZN3gpu24ClientDiscardableManager14FindAllocationEPNS_13CommandBufferEP13scoped_refptrINS_6BufferEEPiPj(%"class.gpu::ClientDiscardableManager"* %0, %"class.gpu::CommandBuffer"* %1, %class.scoped_refptr* nonnull %3, i32* nonnull %4, i32* nonnull %5)
  br i1 %12, label %13, label %31

13:                                               ; preds = %2
  %14 = load i32, i32* %5, align 4
  %15 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = mul i32 %14, %17
  %19 = bitcast %"class.gpu::ClientDiscardableHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = bitcast %"class.gpu::ClientDiscardableHandle"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %9, align 8
  store %"class.gpu::Buffer"* null, %"class.gpu::Buffer"** %9, align 8
  %22 = load i32, i32* %4, align 4
  call void @_ZN3gpu23ClientDiscardableHandleC1E13scoped_refptrINS_6BufferEEji(%"class.gpu::ClientDiscardableHandle"* nonnull %6, %"class.gpu::Buffer"* %21, i32 %18, i32 %22) #13
  %23 = bitcast %"class.util::IdType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %7, i64 0, i32 0, i32 0
  %25 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN3gpu12_GLOBAL__N_115GetNextHandleIdEvE16g_next_handle_id, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0
  %28 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS6_JRS6_RS5_EEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %27, %"class.util::IdType"* nonnull dereferenceable(4) %7, %"class.util::IdType"* nonnull dereferenceable(4) %7, %"class.gpu::ClientDiscardableHandle"* nonnull dereferenceable(16) %6) #13
  %29 = load i32, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #13
  %30 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %6, i64 0, i32 0
  call void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  br label %40

31:                                               ; preds = %2
  %32 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %9, align 8
  %33 = bitcast %"class.gpu::Buffer"* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  %34 = icmp eq %"class.gpu::Buffer"* %32, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %32) #13
  call void @_ZdlPv(i8* %33) #14
  br label %40

40:                                               ; preds = %13, %31, %35, %39
  %41 = phi i32 [ %29, %13 ], [ 0, %31 ], [ 0, %35 ], [ 0, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret i32 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24ClientDiscardableManager14FindAllocationEPNS_13CommandBufferEP13scoped_refptrINS_6BufferEEPiPj(%"class.gpu::ClientDiscardableManager"*, %"class.gpu::CommandBuffer"*, %class.scoped_refptr* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  tail call void @_ZN3gpu24ClientDiscardableManager12CheckPendingEPNS_13CommandBufferE(%"class.gpu::ClientDiscardableManager"* %0, %"class.gpu::CommandBuffer"* %1)
  %7 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %8, %10
  br i1 %11, label %50, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.std::__1::unique_ptr"* %23, %10
  br i1 %13, label %50, label %14

14:                                               ; preds = %5, %12
  %15 = phi %"class.std::__1::unique_ptr"* [ %23, %12 ], [ %8, %5 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %16, align 8
  %18 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %17, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %18, align 8
  %20 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %17, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %21 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %20, align 8
  %22 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %19, %21
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  br i1 %22, label %12, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %17, i64 0, i32 2
  %27 = tail call fastcc i32 @_ZN3gpu12_GLOBAL__N_113FreeOffsetSet14TakeFreeOffsetEv(%"class.gpu::(anonymous namespace)::FreeOffsetSet"* %26) #13
  store i32 %27, i32* %4, align 4
  %28 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %25, align 8
  %29 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %3, align 4
  %31 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %25, align 8
  %32 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %32, align 8
  %34 = icmp eq %"class.gpu::Buffer"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %35, %24
  %39 = ptrtoint %"class.gpu::Buffer"* %33 to i64
  %40 = bitcast %class.scoped_refptr* %2 to i64*
  %41 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %42 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.gpu::Buffer"* %42, null
  br i1 %43, label %206, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %206

48:                                               ; preds = %44
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %42) #13
  %49 = bitcast %"class.gpu::Buffer"* %42 to i8*
  tail call void @_ZdlPv(i8* %49) #14
  br label %206

50:                                               ; preds = %12, %5
  %51 = tail call zeroext i1 @_ZN3gpu24ClientDiscardableManager12CheckDeletedEPNS_13CommandBufferE(%"class.gpu::ClientDiscardableManager"* %0, %"class.gpu::CommandBuffer"* %1)
  br i1 %51, label %52, label %94

52:                                               ; preds = %50
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %55 = icmp eq %"class.std::__1::unique_ptr"* %53, %54
  br i1 %55, label %94, label %58

56:                                               ; preds = %58
  %57 = icmp eq %"class.std::__1::unique_ptr"* %67, %54
  br i1 %57, label %94, label %58

58:                                               ; preds = %52, %56
  %59 = phi %"class.std::__1::unique_ptr"* [ %67, %56 ], [ %53, %52 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %60, align 8
  %62 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %61, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %62, align 8
  %64 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %61, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %65 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %64, align 8
  %66 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, %65
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  br i1 %66, label %56, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %61, i64 0, i32 2
  %71 = tail call fastcc i32 @_ZN3gpu12_GLOBAL__N_113FreeOffsetSet14TakeFreeOffsetEv(%"class.gpu::(anonymous namespace)::FreeOffsetSet"* %70) #13
  store i32 %71, i32* %4, align 4
  %72 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %69, align 8
  %73 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %3, align 4
  %75 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %69, align 8
  %76 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %76, align 8
  %78 = icmp eq %"class.gpu::Buffer"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %68
  %80 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 1 monotonic
  br label %82

82:                                               ; preds = %79, %68
  %83 = ptrtoint %"class.gpu::Buffer"* %77 to i64
  %84 = bitcast %class.scoped_refptr* %2 to i64*
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %86 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.gpu::Buffer"* %86, null
  br i1 %87, label %206, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %206

92:                                               ; preds = %88
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %86) #13
  %93 = bitcast %"class.gpu::Buffer"* %86 to i8*
  tail call void @_ZdlPv(i8* %93) #14
  br label %206

94:                                               ; preds = %56, %52, %50
  %95 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 2
  %98 = tail call i8* @_Znwm(i64 48) #14
  %99 = load i32, i32* %97, align 4
  %100 = bitcast i8* %98 to %"class.gpu::Buffer"**
  store %"class.gpu::Buffer"* null, %"class.gpu::Buffer"** %100, align 8
  %101 = getelementptr inbounds i8, i8* %98, i64 8
  %102 = bitcast i8* %101 to i32*
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds i8, i8* %98, i64 16
  %104 = bitcast i8* %103 to i32*
  store i32 %99, i32* %104, align 8
  %105 = getelementptr inbounds i8, i8* %98, i64 24
  %106 = getelementptr inbounds i8, i8* %98, i64 32
  %107 = bitcast i8* %106 to i64*
  %108 = getelementptr inbounds i8, i8* %98, i64 40
  %109 = bitcast i8* %105 to i64*
  %110 = bitcast i8* %108 to i64*
  %111 = tail call i8* @_Znwm(i64 8) #14
  %112 = getelementptr inbounds i8, i8* %111, i64 8
  %113 = ptrtoint i8* %112 to i64
  %114 = bitcast i8* %111 to i64*
  %115 = zext i32 %99 to i64
  %116 = shl nuw i64 %115, 32
  store i64 %116, i64* %114, align 4
  %117 = ptrtoint i8* %111 to i64
  store i64 %117, i64* %109, align 8
  store i64 %113, i64* %107, align 8
  store i64 %113, i64* %110, align 8
  %118 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %98, i8** %118, align 8
  %119 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = bitcast %"class.gpu::CommandBuffer"* %1 to %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)***
  %122 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)**, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*** %121, align 8
  %123 = getelementptr inbounds %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)** %122, i64 8
  %124 = load %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)*, %"class.gpu::Buffer"* (%"class.gpu::CommandBuffer"*, i32, i32*, i8)** %123, align 8
  %125 = tail call %"class.gpu::Buffer"* %124(%"class.gpu::CommandBuffer"* %1, i32 %120, i32* %102, i8 signext 0) #13
  %126 = ptrtoint %"class.gpu::Buffer"* %125 to i64
  %127 = bitcast i8* %98 to i64*
  %128 = bitcast i8* %98 to %"class.gpu::Buffer"**
  %129 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %128, align 8
  store i64 %126, i64* %127, align 8
  %130 = icmp eq %"class.gpu::Buffer"* %129, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %94
  %132 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw sub i32* %132, i32 1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %129) #13
  %136 = bitcast %"class.gpu::Buffer"* %129 to i8*
  tail call void @_ZdlPv(i8* %136) #14
  br label %137

137:                                              ; preds = %94, %131, %135
  %138 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %96, align 8
  %139 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %139, align 8
  %141 = icmp eq %"class.gpu::Buffer"* %140, null
  br i1 %141, label %180, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %138, i64 0, i32 2
  %144 = tail call fastcc i32 @_ZN3gpu12_GLOBAL__N_113FreeOffsetSet14TakeFreeOffsetEv(%"class.gpu::(anonymous namespace)::FreeOffsetSet"* %143)
  store i32 %144, i32* %4, align 4
  %145 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %138, i64 0, i32 1
  %146 = load i32, i32* %145, align 8
  store i32 %146, i32* %3, align 4
  %147 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %139, align 8
  %148 = icmp eq %"class.gpu::Buffer"* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw add i32* %150, i32 1 monotonic
  br label %152

152:                                              ; preds = %142, %149
  %153 = ptrtoint %"class.gpu::Buffer"* %147 to i64
  %154 = bitcast %class.scoped_refptr* %2 to i64*
  %155 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %156 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %155, align 8
  store i64 %153, i64* %154, align 8
  %157 = icmp eq %"class.gpu::Buffer"* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw sub i32* %159, i32 1 acq_rel
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %156) #13
  %163 = bitcast %"class.gpu::Buffer"* %156 to i8*
  tail call void @_ZdlPv(i8* %163) #14
  br label %164

164:                                              ; preds = %152, %158, %162
  %165 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %166 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %167 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %166, align 8
  %168 = icmp ult %"class.std::__1::unique_ptr"* %165, %167
  br i1 %168, label %169, label %176

169:                                              ; preds = %164
  %170 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %171 = load i64, i64* %170, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %96, align 8
  %172 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 1
  %174 = ptrtoint %"class.std::__1::unique_ptr"* %173 to i64
  %175 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  store i64 %174, i64* %175, align 8
  br label %178

176:                                              ; preds = %164
  %177 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3gpu24ClientDiscardableManager10AllocationENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"* %177, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #13
  br label %178

178:                                              ; preds = %169, %176
  %179 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %96, align 8
  br label %180

180:                                              ; preds = %137, %178
  %181 = phi %"struct.gpu::ClientDiscardableManager::Allocation"* [ %179, %178 ], [ %138, %137 ]
  %182 = phi i1 [ true, %178 ], [ false, %137 ]
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %96, align 8
  %183 = icmp eq %"struct.gpu::ClientDiscardableManager::Allocation"* %181, null
  br i1 %183, label %205, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %181, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %186 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %185, align 8
  %187 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %184
  %189 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %186 to i64
  %190 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %181, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %191 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %186 to i8*
  call void @_ZdlPv(i8* %192) #14
  br label %193

193:                                              ; preds = %188, %184
  %194 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %181, i64 0, i32 0, i32 0
  %195 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %194, align 8
  %196 = icmp eq %"class.gpu::Buffer"* %195, null
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw sub i32* %198, i32 1 acq_rel
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %195) #13
  %202 = bitcast %"class.gpu::Buffer"* %195 to i8*
  call void @_ZdlPv(i8* %202) #14
  br label %203

203:                                              ; preds = %201, %197, %193
  %204 = bitcast %"struct.gpu::ClientDiscardableManager::Allocation"* %181 to i8*
  call void @_ZdlPv(i8* %204) #14
  br label %205

205:                                              ; preds = %180, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #13
  br label %206

206:                                              ; preds = %92, %88, %82, %48, %44, %38, %205
  %207 = phi i1 [ %182, %205 ], [ true, %38 ], [ true, %44 ], [ true, %48 ], [ true, %82 ], [ true, %88 ], [ true, %92 ]
  ret i1 %207
}

declare void @_ZN3gpu23ClientDiscardableHandleC1E13scoped_refptrINS_6BufferEEji(%"class.gpu::ClientDiscardableHandle"*, %"class.gpu::Buffer"*, i32, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24ClientDiscardableManager10LockHandleEN4util6IdTypeINS_23ClientDiscardableHandleEiLi0ELi1EEE(%"class.gpu::ClientDiscardableManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.gpu::ClientDiscardableHandle"*
  %31 = tail call zeroext i1 @_ZN3gpu23ClientDiscardableHandle4LockEv(%"class.gpu::ClientDiscardableHandle"* %30) #13
  br label %32

32:                                               ; preds = %23, %21, %2, %28
  %33 = phi i1 [ %31, %28 ], [ false, %2 ], [ false, %21 ], [ false, %23 ]
  ret i1 %33
}

declare zeroext i1 @_ZN3gpu23ClientDiscardableHandle4LockEv(%"class.gpu::ClientDiscardableHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24ClientDiscardableManager10FreeHandleEN4util6IdTypeINS_23ClientDiscardableHandleEiLi0ELi1EEE(%"class.gpu::ClientDiscardableManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %95, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %4, %2 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %20, %8 ], [ %6, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %1
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %18 = select i1 %13, %"class.std::__1::__tree_node"** %15, %"class.std::__1::__tree_node"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %16
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %4
  br i1 %23, label %95, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, %1
  br i1 %28, label %95, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.gpu::ClientDiscardableHandle"*
  %33 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %30, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %33, i64 1) #13
  %34 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %30, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %34, i64 %36) #13
  tail call void @_ZN3gpu23ClientDiscardableHandleC1ERKS0_(%"class.gpu::ClientDiscardableHandle"* %37, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16) %32) #13
  %38 = load i64, i64* %35, align 8
  %39 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  %42 = icmp eq i64 %38, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %29
  store i64 0, i64* %35, align 8
  br label %47

44:                                               ; preds = %29
  %45 = add i64 %38, 1
  store i64 %45, i64* %35, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44, %43
  br label %48

48:                                               ; preds = %44, %47
  %49 = phi i64 [ %41, %47 ], [ %38, %44 ]
  %50 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZNK4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %34, i64 %49) #13
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %62

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.std::__1::__tree_end_node"**
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, %55
  br i1 %61, label %78, label %69

62:                                               ; preds = %48, %62
  %63 = phi %"class.std::__1::__tree_node_base"* [ %65, %62 ], [ %52, %48 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %62

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 0
  br label %78

69:                                               ; preds = %54, %69
  %70 = phi %"class.std::__1::__tree_end_node"** [ %73, %69 ], [ %57, %54 ]
  %71 = bitcast %"class.std::__1::__tree_end_node"** %70 to %"class.std::__1::__tree_node_base"**
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %72, i64 0, i32 2
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, %72
  br i1 %77, label %78, label %69

78:                                               ; preds = %69, %67, %54
  %79 = phi %"class.std::__1::__tree_end_node"* [ %68, %67 ], [ %58, %54 ], [ %74, %69 ]
  %80 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_end_node"* %81, %19
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = ptrtoint %"class.std::__1::__tree_end_node"* %79 to i64
  %85 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %84, i64* %85, align 8
  br label %86

86:                                               ; preds = %78, %83
  %87 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %92) #13
  %93 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.gpu::DiscardableHandleBase"*
  tail call void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"* %93) #13
  %94 = bitcast %"class.std::__1::__tree_end_node"* %19 to i8*
  tail call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %24, %22, %2, %86
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu24ClientDiscardableManager13HandleIsValidEN4util6IdTypeINS_23ClientDiscardableHandleEiLi0ELi1EEE(%"class.gpu::ClientDiscardableManager"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %21, %2
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.std::__1::__tree_end_node"* [ %3, %28 ], [ %18, %23 ]
  %31 = icmp ne %"class.std::__1::__tree_end_node"* %30, %3
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24ClientDiscardableManager9GetHandleEN4util6IdTypeINS_23ClientDiscardableHandleEiLi0ELi1EEE(%"class.gpu::ClientDiscardableHandle"* noalias sret, %"class.gpu::ClientDiscardableManager"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %3, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %4, %3 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %20, %8 ], [ %6, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %2
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %18 = select i1 %13, %"class.std::__1::__tree_node"** %15, %"class.std::__1::__tree_node"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %16
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %4
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, %2
  br i1 %28, label %29, label %30

29:                                               ; preds = %24, %22, %3
  tail call void @_ZN3gpu23ClientDiscardableHandleC1Ev(%"class.gpu::ClientDiscardableHandle"* %0) #13
  br label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.gpu::ClientDiscardableHandle"*
  tail call void @_ZN3gpu23ClientDiscardableHandleC1ERKS0_(%"class.gpu::ClientDiscardableHandle"* %0, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16) %32) #13
  br label %33

33:                                               ; preds = %30, %29
  ret void
}

declare void @_ZN3gpu23ClientDiscardableHandleC1Ev(%"class.gpu::ClientDiscardableHandle"*) unnamed_addr #2

declare void @_ZN3gpu23ClientDiscardableHandleC1ERKS0_(%"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24ClientDiscardableManager15HandleIsDeletedEN4util6IdTypeINS_23ClientDiscardableHandleEiLi0ELi1EEE(%"class.gpu::ClientDiscardableManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %78, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %4, %2 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %20, %8 ], [ %6, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %1
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %18 = select i1 %13, %"class.std::__1::__tree_node"** %15, %"class.std::__1::__tree_node"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %16
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %4
  br i1 %23, label %78, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, %1
  br i1 %28, label %78, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.gpu::ClientDiscardableHandle"*
  %32 = tail call zeroext i1 @_ZNK3gpu23ClientDiscardableHandle11CanBeReUsedEv(%"class.gpu::ClientDiscardableHandle"* %31) #13
  br i1 %32, label %33, label %78

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_end_node"**
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, %38
  br i1 %44, label %61, label %52

45:                                               ; preds = %33, %45
  %46 = phi %"class.std::__1::__tree_node_base"* [ %48, %45 ], [ %35, %33 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0
  br label %61

52:                                               ; preds = %37, %52
  %53 = phi %"class.std::__1::__tree_end_node"** [ %56, %52 ], [ %40, %37 ]
  %54 = bitcast %"class.std::__1::__tree_end_node"** %53 to %"class.std::__1::__tree_node_base"**
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 2
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, %55
  br i1 %60, label %61, label %52

61:                                               ; preds = %52, %50, %37
  %62 = phi %"class.std::__1::__tree_end_node"* [ %51, %50 ], [ %41, %37 ], [ %57, %52 ]
  %63 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %64, %19
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = ptrtoint %"class.std::__1::__tree_end_node"* %62 to i64
  %68 = bitcast %"class.std::__1::map"* %3 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %61, %66
  %70 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, -1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %74, %"class.std::__1::__tree_node_base"* %75) #13
  %76 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.gpu::DiscardableHandleBase"*
  tail call void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"* %76) #13
  %77 = bitcast %"class.std::__1::__tree_end_node"* %19 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %24, %22, %2, %29, %69
  %79 = phi i1 [ true, %69 ], [ false, %29 ], [ true, %2 ], [ true, %22 ], [ true, %24 ]
  ret i1 %79
}

declare zeroext i1 @_ZNK3gpu23ClientDiscardableHandle11CanBeReUsedEv(%"class.gpu::ClientDiscardableHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gpu24ClientDiscardableManager25HandleIsDeletedForTracingEN4util6IdTypeINS_23ClientDiscardableHandleEiLi0ELi1EEE(%"class.gpu::ClientDiscardableManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.gpu::DiscardableHandleBase"*
  %31 = tail call zeroext i1 @_ZNK3gpu21DiscardableHandleBase19IsDeletedForTracingEv(%"class.gpu::DiscardableHandleBase"* %30) #13
  br label %32

32:                                               ; preds = %23, %21, %2, %28
  %33 = phi i1 [ %31, %28 ], [ true, %2 ], [ true, %21 ], [ true, %23 ]
  ret i1 %33
}

declare zeroext i1 @_ZNK3gpu21DiscardableHandleBase19IsDeletedForTracingEv(%"class.gpu::DiscardableHandleBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24ClientDiscardableManager12CheckPendingEPNS_13CommandBufferE(%"class.gpu::ClientDiscardableManager"*, %"class.gpu::CommandBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5, i32 0, i32 1
  %5 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5, i32 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %3, i64 0, i32 0
  br label %9

9:                                                ; preds = %25, %2
  %10 = load i64, i64* %4, align 8
  %11 = load i64, i64* %5, align 8
  %12 = icmp ult i64 %11, %10
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = sub i64 %11, %10
  br label %19

15:                                               ; preds = %9
  %16 = load i64, i64* %6, align 8
  %17 = sub i64 %11, %10
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi i64 [ %14, %13 ], [ %18, %15 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %10) #13
  %24 = tail call zeroext i1 @_ZNK3gpu23ClientDiscardableHandle11CanBeReUsedEv(%"class.gpu::ClientDiscardableHandle"* %23) #13
  br i1 %24, label %25, label %38

25:                                               ; preds = %22
  %26 = load i64, i64* %4, align 8
  %27 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %26) #13
  tail call void @_ZN3gpu24ClientDiscardableManager16ReturnAllocationEPNS_13CommandBufferERKNS_23ClientDiscardableHandleE(%"class.gpu::ClientDiscardableManager"* %0, %"class.gpu::CommandBuffer"* %1, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16) %27)
  %28 = load i64, i64* %4, align 8
  %29 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %28) #13
  %30 = load i64, i64* %4, align 8
  %31 = add i64 %30, 1
  %32 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %31) #13
  tail call void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"* %7, %"class.gpu::ClientDiscardableHandle"* %29, %"class.gpu::ClientDiscardableHandle"* %32) #13
  %33 = load i64, i64* %4, align 8
  %34 = add i64 %33, 1
  %35 = load i64, i64* %6, align 8
  %36 = icmp eq i64 %34, %35
  %37 = select i1 %36, i64 0, i64 %34
  store i64 %37, i64* %4, align 8
  tail call void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %8) #13
  br label %9

38:                                               ; preds = %19, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24ClientDiscardableManager22FindExistingAllocationEPNS_13CommandBufferEP13scoped_refptrINS_6BufferEEPiPj(%"class.gpu::ClientDiscardableManager"* nocapture readonly, %"class.gpu::CommandBuffer"* nocapture readnone, %class.scoped_refptr* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %7, %9
  br i1 %10, label %49, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.std::__1::unique_ptr"* %22, %9
  br i1 %12, label %49, label %13

13:                                               ; preds = %5, %11
  %14 = phi %"class.std::__1::unique_ptr"* [ %22, %11 ], [ %7, %5 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %15, align 8
  %17 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %16, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %18 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %17, align 8
  %19 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %16, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %20 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %19, align 8
  %21 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %18, %20
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br i1 %21, label %11, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %16, i64 0, i32 2
  %26 = tail call fastcc i32 @_ZN3gpu12_GLOBAL__N_113FreeOffsetSet14TakeFreeOffsetEv(%"class.gpu::(anonymous namespace)::FreeOffsetSet"* %25)
  store i32 %26, i32* %4, align 4
  %27 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %24, align 8
  %28 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %3, align 4
  %30 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %24, align 8
  %31 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %31, align 8
  %33 = icmp eq %"class.gpu::Buffer"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %23, %34
  %38 = ptrtoint %"class.gpu::Buffer"* %32 to i64
  %39 = bitcast %class.scoped_refptr* %2 to i64*
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %41 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.gpu::Buffer"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %41) #13
  %48 = bitcast %"class.gpu::Buffer"* %41 to i8*
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %11, %5, %47, %43, %37
  %50 = phi i1 [ true, %37 ], [ true, %43 ], [ true, %47 ], [ false, %5 ], [ false, %11 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu24ClientDiscardableManager12CheckDeletedEPNS_13CommandBufferE(%"class.gpu::ClientDiscardableManager"*, %"class.gpu::CommandBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::map"* %3 to i64*
  %10 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %16

12:                                               ; preds = %91, %2
  %13 = phi i8 [ 0, %2 ], [ %93, %91 ]
  %14 = and i8 %13, 1
  %15 = icmp ne i8 %14, 0
  ret i1 %15

16:                                               ; preds = %8, %91
  %17 = phi i8 [ 0, %8 ], [ %93, %91 ]
  %18 = phi %"class.std::__1::__tree_end_node"* [ %5, %8 ], [ %92, %91 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.gpu::ClientDiscardableHandle"*
  %21 = tail call zeroext i1 @_ZNK3gpu23ClientDiscardableHandle11CanBeReUsedEv(%"class.gpu::ClientDiscardableHandle"* %20) #13
  br i1 %21, label %22, label %63

22:                                               ; preds = %16
  tail call void @_ZN3gpu24ClientDiscardableManager16ReturnAllocationEPNS_13CommandBufferERKNS_23ClientDiscardableHandleE(%"class.gpu::ClientDiscardableManager"* %0, %"class.gpu::CommandBuffer"* %1, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16) %20)
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_end_node"**
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, %27
  br i1 %33, label %50, label %41

34:                                               ; preds = %22, %34
  %35 = phi %"class.std::__1::__tree_node_base"* [ %37, %34 ], [ %24, %22 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0
  br label %50

41:                                               ; preds = %26, %41
  %42 = phi %"class.std::__1::__tree_end_node"** [ %45, %41 ], [ %29, %26 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"** %42 to %"class.std::__1::__tree_node_base"**
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 2
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %44
  br i1 %49, label %50, label %41

50:                                               ; preds = %41, %39, %26
  %51 = phi %"class.std::__1::__tree_end_node"* [ %40, %39 ], [ %30, %26 ], [ %46, %41 ]
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %53 = icmp eq %"class.std::__1::__tree_end_node"* %52, %18
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = ptrtoint %"class.std::__1::__tree_end_node"* %51 to i64
  store i64 %55, i64* %9, align 8
  br label %56

56:                                               ; preds = %50, %54
  %57 = load i64, i64* %10, align 8
  %58 = add i64 %57, -1
  store i64 %58, i64* %10, align 8
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %60 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %59, %"class.std::__1::__tree_node_base"* %60) #13
  %61 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.gpu::DiscardableHandleBase"*
  tail call void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"* %61) #13
  %62 = bitcast %"class.std::__1::__tree_end_node"* %18 to i8*
  tail call void @_ZdlPv(i8* %62) #14
  br label %91

63:                                               ; preds = %16
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %75

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_end_node"**
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %68
  br i1 %74, label %91, label %82

75:                                               ; preds = %63, %75
  %76 = phi %"class.std::__1::__tree_node_base"* [ %78, %75 ], [ %65, %63 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %75

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 0
  br label %91

82:                                               ; preds = %67, %82
  %83 = phi %"class.std::__1::__tree_end_node"** [ %86, %82 ], [ %70, %67 ]
  %84 = bitcast %"class.std::__1::__tree_end_node"** %83 to %"class.std::__1::__tree_node_base"**
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %85, i64 0, i32 2
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, %85
  br i1 %90, label %91, label %82

91:                                               ; preds = %82, %80, %67, %56
  %92 = phi %"class.std::__1::__tree_end_node"* [ %51, %56 ], [ %81, %80 ], [ %71, %67 ], [ %87, %82 ]
  %93 = phi i8 [ 1, %56 ], [ %17, %80 ], [ %17, %67 ], [ %17, %82 ]
  %94 = icmp eq %"class.std::__1::__tree_end_node"* %92, %6
  br i1 %94, label %12, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3gpu12_GLOBAL__N_113FreeOffsetSet14TakeFreeOffsetEv(%"class.gpu::(anonymous namespace)::FreeOffsetSet"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", align 4
  %4 = getelementptr inbounds %"class.gpu::(anonymous namespace)::FreeOffsetSet", %"class.gpu::(anonymous namespace)::FreeOffsetSet"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %5, align 8
  %7 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %3, i64 0, i32 1
  %12 = add i32 %8, 1
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %6, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %11, align 4
  %15 = getelementptr inbounds %"class.gpu::(anonymous namespace)::FreeOffsetSet", %"class.gpu::(anonymous namespace)::FreeOffsetSet"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %15, align 8
  %17 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %16, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %1
  %19 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %16 to i64
  br label %25

20:                                               ; preds = %1
  %21 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %23 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %15 to i64*
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %20, %18
  %26 = phi i64 [ %19, %18 ], [ %24, %20 ]
  %27 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %6, i64 1
  %28 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %27 to i64
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %6 to i8*
  %34 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %27 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 %29, i1 false) #13
  br label %35

35:                                               ; preds = %25, %32
  %36 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %6, i64 %30
  store %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %36, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %15, align 8
  %37 = icmp eq i32 %12, %14
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call fastcc void @_ZN4base8internal9flat_treeIN3gpu12_GLOBAL__N_113FreeOffsetSet9FreeRangeENS_8identityENS4_17CompareFreeRangesENSt3__16vectorIS5_NS8_9allocatorIS5_EEEEE6insertERKS5_(%"class.base::internal::flat_tree"* %4, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* nonnull dereferenceable(8) %3)
  br label %39

39:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24ClientDiscardableManager16ReturnAllocationEPNS_13CommandBufferERKNS_23ClientDiscardableHandleE(%"class.gpu::ClientDiscardableManager"*, %"class.gpu::CommandBuffer"*, %"class.gpu::ClientDiscardableHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", align 4
  %5 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %7, %9
  br i1 %10, label %131, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %2, i64 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gpu::ClientDiscardableManager", %"class.gpu::ClientDiscardableManager"* %0, i64 0, i32 1
  %15 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %4 to i8*
  %16 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %4, i64 0, i32 1
  br label %18

18:                                               ; preds = %11, %127
  %19 = phi %"class.std::__1::unique_ptr"* [ %7, %11 ], [ %128, %127 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %20, align 8
  %22 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = load i32, i32* %12, align 4
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %127

26:                                               ; preds = %18
  %27 = load i32, i32* %13, align 8
  %28 = zext i32 %27 to i64
  %29 = load i64, i64* %14, align 8
  %30 = udiv i64 %28, %29
  %31 = trunc i64 %30 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  store i32 %31, i32* %16, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %17, align 4
  %33 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %21, i64 0, i32 2, i32 1
  %34 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %34, align 8
  %36 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %21, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35 to i64
  %40 = sub i64 %38, %39
  %41 = icmp eq i64 %40, 0
  %42 = inttoptr i64 %38 to %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*
  br i1 %41, label %80, label %43

43:                                               ; preds = %26
  %44 = ashr exact i64 %40, 3
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %35, %43 ], [ %57, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %56, %45 ]
  %48 = lshr i64 %47, 1
  %49 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %46, i64 %48
  %50 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %51, %31
  %53 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %49, i64 1
  %54 = xor i64 %48, -1
  %55 = add i64 %47, %54
  %56 = select i1 %52, i64 %55, i64 %48
  %57 = select i1 %52, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %53, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %46
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %59, label %45

59:                                               ; preds = %45
  %60 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %57, %35
  br i1 %60, label %80, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %57, i64 -1
  %63 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %62, %42
  br i1 %63, label %80, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %57, i64 -1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %31
  br i1 %67, label %68, label %80

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %16, align 4
  %71 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %57 to i64
  %72 = sub i64 %38, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %68
  %76 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %62 to i8*
  %77 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %57 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %72, i1 false) #13
  br label %78

78:                                               ; preds = %75, %68
  %79 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %62, i64 %73
  store %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %79, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %36, align 8
  br label %80

80:                                               ; preds = %78, %64, %61, %59, %26
  %81 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %79, %78 ], [ %42, %64 ], [ %42, %61 ], [ %42, %59 ], [ %42, %26 ]
  %82 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %62, %78 ], [ %57, %64 ], [ %57, %61 ], [ %35, %59 ], [ %35, %26 ]
  %83 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %82, %81
  br i1 %83, label %102, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %82, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, %32
  br i1 %87, label %88, label %102

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %82, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %17, align 4
  %91 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %81 to i64
  %92 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %82, i64 1
  %93 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %92 to i64
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 3
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %88
  %98 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %82 to i8*
  %99 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %92 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %94, i1 false) #13
  br label %100

100:                                              ; preds = %97, %88
  %101 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %82, i64 %95
  store %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %101, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %36, align 8
  br label %102

102:                                              ; preds = %80, %84, %100
  call fastcc void @_ZN4base8internal9flat_treeIN3gpu12_GLOBAL__N_113FreeOffsetSet9FreeRangeENS_8identityENS4_17CompareFreeRangesENSt3__16vectorIS5_NS8_9allocatorIS5_EEEEE6insertERKS5_(%"class.base::internal::flat_tree"* %33, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* nonnull dereferenceable(8) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %103 = load i64, i64* %37, align 8
  %104 = bitcast %"class.base::internal::flat_tree"* %33 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = icmp eq i64 %106, 8
  %108 = inttoptr i64 %105 to %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*
  br i1 %107, label %109, label %127

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %108, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %127

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %108, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %21, i64 0, i32 2, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %115, %117
  br i1 %118, label %119, label %127

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %21, i64 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = bitcast %"class.gpu::CommandBuffer"* %1 to void (%"class.gpu::CommandBuffer"*, i32)***
  %123 = load void (%"class.gpu::CommandBuffer"*, i32)**, void (%"class.gpu::CommandBuffer"*, i32)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %123, i64 9
  %125 = load void (%"class.gpu::CommandBuffer"*, i32)*, void (%"class.gpu::CommandBuffer"*, i32)** %124, align 8
  tail call void %125(%"class.gpu::CommandBuffer"* %1, i32 %121) #13
  %126 = tail call %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIN3gpu24ClientDiscardableManager10AllocationENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5eraseENS_11__wrap_iterIPKS7_EE(%"class.std::__1::vector"* %5, %"class.std::__1::unique_ptr"* %19)
  br label %131

127:                                              ; preds = %113, %102, %109, %18
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 1
  %129 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %130 = icmp eq %"class.std::__1::unique_ptr"* %128, %129
  br i1 %130, label %131, label %18

131:                                              ; preds = %127, %3, %119
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIN3gpu24ClientDiscardableManager10AllocationENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5eraseENS_11__wrap_iterIPKS7_EE(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %3, %5
  br i1 %6, label %45, label %7

7:                                                ; preds = %2, %38
  %8 = phi %"class.std::__1::unique_ptr"* [ %40, %38 ], [ %1, %2 ]
  %9 = phi %"class.std::__1::unique_ptr"* [ %39, %38 ], [ %3, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %10, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %12, i64* %15, align 8
  %16 = icmp eq %"struct.gpu::ClientDiscardableManager::Allocation"* %14, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %14, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %18, align 8
  %20 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %19 to i64
  %23 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %14, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %21, %17
  %27 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %14, i64 0, i32 0, i32 0
  %28 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %27, align 8
  %29 = icmp eq %"class.gpu::Buffer"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %28) #13
  %35 = bitcast %"class.gpu::Buffer"* %28 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %34, %30, %26
  %37 = bitcast %"struct.gpu::ClientDiscardableManager::Allocation"* %14 to i8*
  tail call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %36, %7
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 1
  %41 = icmp eq %"class.std::__1::unique_ptr"* %39, %5
  br i1 %41, label %42, label %7

42:                                               ; preds = %38
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %44 = icmp eq %"class.std::__1::unique_ptr"* %43, %40
  br i1 %44, label %77, label %45

45:                                               ; preds = %2, %42
  %46 = phi %"class.std::__1::unique_ptr"* [ %40, %42 ], [ %1, %2 ]
  %47 = phi %"class.std::__1::unique_ptr"* [ %43, %42 ], [ %3, %2 ]
  br label %48

48:                                               ; preds = %45, %75
  %49 = phi %"class.std::__1::unique_ptr"* [ %50, %75 ], [ %47, %45 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %51, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %51, align 8
  %53 = icmp eq %"struct.gpu::ClientDiscardableManager::Allocation"* %52, null
  br i1 %53, label %75, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %52, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %56 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %55, align 8
  %57 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %56 to i64
  %60 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %52, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %61 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %56 to i8*
  tail call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %58, %54
  %64 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %52, i64 0, i32 0, i32 0
  %65 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %64, align 8
  %66 = icmp eq %"class.gpu::Buffer"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw sub i32* %68, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %65) #13
  %72 = bitcast %"class.gpu::Buffer"* %65 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %67, %63
  %74 = bitcast %"struct.gpu::ClientDiscardableManager::Allocation"* %52 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %73, %48
  %76 = icmp eq %"class.std::__1::unique_ptr"* %50, %46
  br i1 %76, label %77, label %48

77:                                               ; preds = %75, %42
  %78 = phi %"class.std::__1::unique_ptr"* [ %40, %42 ], [ %46, %75 ]
  store %"class.std::__1::unique_ptr"* %78, %"class.std::__1::unique_ptr"** %4, align 8
  ret %"class.std::__1::unique_ptr"* %1
}

declare i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"* %7, %"class.gpu::ClientDiscardableHandle"* %8, %"class.gpu::ClientDiscardableHandle"* %12)
  %13 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.gpu::ClientDiscardableHandle"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"* %7, %"class.gpu::ClientDiscardableHandle"* %15, %"class.gpu::ClientDiscardableHandle"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"*, %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.gpu::ClientDiscardableHandle"*, align 8
  %6 = alloca %"class.gpu::ClientDiscardableHandle"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.gpu::ClientDiscardableHandle"* %1, %"class.gpu::ClientDiscardableHandle"** %5, align 8
  store %"class.gpu::ClientDiscardableHandle"* %2, %"class.gpu::ClientDiscardableHandle"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.gpu::ClientDiscardableHandle"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.gpu::ClientDiscardableHandle"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3gpu23ClientDiscardableHandleEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #13
  %17 = bitcast %"class.gpu::ClientDiscardableHandle"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN3gpu23ClientDiscardableHandleEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %5, align 8
  %27 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %6, align 8
  %28 = icmp eq %"class.gpu::ClientDiscardableHandle"* %26, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"class.gpu::ClientDiscardableHandle"* [ %33, %29 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %30, i64 0, i32 0
  call void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"* %31) #13
  %32 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %5, align 8
  %33 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %32, i64 1
  store %"class.gpu::ClientDiscardableHandle"* %33, %"class.gpu::ClientDiscardableHandle"** %5, align 8
  %34 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %6, align 8
  %35 = icmp eq %"class.gpu::ClientDiscardableHandle"* %33, %34
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %23, align 8
  %25 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %24, i64 %1
  ret %"class.gpu::ClientDiscardableHandle"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN3gpu23ClientDiscardableHandleEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base8internal9flat_treeIN3gpu12_GLOBAL__N_113FreeOffsetSet9FreeRangeENS_8identityENS4_17CompareFreeRangesENSt3__16vectorIS5_NS8_9allocatorIS5_EEEEE6insertERKS5_(%"class.base::internal::flat_tree"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*
  %12 = inttoptr i64 %7 to i8*
  br i1 %10, label %33, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %9, 3
  %15 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %17, %13
  %18 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %4, %13 ], [ %29, %17 ]
  %19 = phi i64 [ %14, %13 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp ult i32 %23, %16
  %25 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %25, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %29 to i64
  br label %33

33:                                               ; preds = %31, %2
  %34 = phi i64 [ %32, %31 ], [ %8, %2 ]
  %35 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %29, %31 ], [ %4, %2 ]
  %36 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35 to i64
  %37 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35 to i8*
  %38 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, %11
  br i1 %38, label %45, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %1, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %41, %43
  br i1 %44, label %45, label %461

45:                                               ; preds = %39, %33
  %46 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %46, align 8
  %48 = icmp ugt %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %47, %11
  %49 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %47 to i64
  br i1 %48, label %50, label %197

50:                                               ; preds = %45
  %51 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %1 to i64*
  br i1 %38, label %52, label %57

52:                                               ; preds = %50
  %53 = inttoptr i64 %7 to i64*
  %54 = load i64, i64* %51, align 4
  store i64 %54, i64* %53, align 4
  %55 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 1
  %56 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %55 to i64
  store i64 %56, i64* %6, align 8
  br label %461

57:                                               ; preds = %50
  %58 = load i64, i64* %51, align 4
  %59 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 1
  %60 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %59 to i64
  %61 = sub i64 %7, %60
  %62 = ashr exact i64 %61, 3
  %63 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %62
  %64 = icmp ult %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, %11
  br i1 %64, label %65, label %179

65:                                               ; preds = %57
  %66 = sub nsw i64 0, %62
  %67 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %66, i32 0
  %68 = bitcast i32* %67 to i8*
  %69 = xor i64 %36, -1
  %70 = getelementptr i8, i8* %68, i64 %69
  %71 = ptrtoint i8* %70 to i64
  %72 = lshr i64 %71, 3
  %73 = add nuw nsw i64 %72, 1
  %74 = icmp ult i64 %73, 4
  br i1 %74, label %75, label %78

75:                                               ; preds = %174, %78, %65
  %76 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %11, %78 ], [ %11, %65 ], [ %97, %174 ]
  %77 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %63, %78 ], [ %63, %65 ], [ %98, %174 ]
  br label %186

78:                                               ; preds = %65
  %79 = sub nsw i64 0, %62
  %80 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %79, i32 0
  %81 = bitcast i32* %80 to i8*
  %82 = xor i64 %36, -1
  %83 = getelementptr i8, i8* %81, i64 %82
  %84 = ptrtoint i8* %83 to i64
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %86
  %88 = add nsw i64 %62, %85
  %89 = add nsw i64 %88, 1
  %90 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %89
  %91 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %90 to i8*
  %92 = icmp ult i8* %12, %91
  %93 = icmp ult %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, %87
  %94 = and i1 %92, %93
  br i1 %94, label %75, label %95

95:                                               ; preds = %78
  %96 = and i64 %73, 4611686018427387900
  %97 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %96
  %98 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, i64 %96
  %99 = add nsw i64 %96, -4
  %100 = lshr exact i64 %99, 2
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp ult i64 %99, 12
  br i1 %103, label %155, label %104

104:                                              ; preds = %95
  %105 = sub nsw i64 %101, %102
  br label %106

106:                                              ; preds = %106, %104
  %107 = phi i64 [ 0, %104 ], [ %152, %106 ]
  %108 = phi i64 [ %105, %104 ], [ %153, %106 ]
  %109 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %107
  %110 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, i64 %107
  %111 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 4, !alias.scope !2
  %113 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %110, i64 2
  %114 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 4, !alias.scope !2
  %116 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 4, !alias.scope !5, !noalias !2
  %117 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %109, i64 2
  %118 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 4, !alias.scope !5, !noalias !2
  %119 = or i64 %107, 4
  %120 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %119
  %121 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, i64 %119
  %122 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 4, !alias.scope !2
  %124 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %121, i64 2
  %125 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 4, !alias.scope !2
  %127 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 4, !alias.scope !5, !noalias !2
  %128 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %120, i64 2
  %129 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 4, !alias.scope !5, !noalias !2
  %130 = or i64 %107, 8
  %131 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %130
  %132 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, i64 %130
  %133 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 4, !alias.scope !2
  %135 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %132, i64 2
  %136 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 4, !alias.scope !2
  %138 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 4, !alias.scope !5, !noalias !2
  %139 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %131, i64 2
  %140 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 4, !alias.scope !5, !noalias !2
  %141 = or i64 %107, 12
  %142 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %141
  %143 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, i64 %141
  %144 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 4, !alias.scope !2
  %146 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %143, i64 2
  %147 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 4, !alias.scope !2
  %149 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %142 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %149, align 4, !alias.scope !5, !noalias !2
  %150 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %142, i64 2
  %151 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %150 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %151, align 4, !alias.scope !5, !noalias !2
  %152 = add i64 %107, 16
  %153 = add i64 %108, -4
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %106, !llvm.loop !7

155:                                              ; preds = %106, %95
  %156 = phi i64 [ 0, %95 ], [ %152, %106 ]
  %157 = icmp eq i64 %102, 0
  br i1 %157, label %174, label %158

158:                                              ; preds = %155, %158
  %159 = phi i64 [ %171, %158 ], [ %156, %155 ]
  %160 = phi i64 [ %172, %158 ], [ %102, %155 ]
  %161 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %159
  %162 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %63, i64 %159
  %163 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 4, !alias.scope !2
  %165 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %162, i64 2
  %166 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 4, !alias.scope !2
  %168 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %161 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 4, !alias.scope !5, !noalias !2
  %169 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %161, i64 2
  %170 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 4, !alias.scope !5, !noalias !2
  %171 = add i64 %159, 4
  %172 = add i64 %160, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %158, !llvm.loop !9

174:                                              ; preds = %158, %155
  %175 = icmp eq i64 %73, %96
  br i1 %175, label %176, label %75

176:                                              ; preds = %186, %174
  %177 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %97, %174 ], [ %193, %186 ]
  %178 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %177 to i64
  br label %179

179:                                              ; preds = %176, %57
  %180 = phi i64 [ %178, %176 ], [ %7, %57 ]
  store i64 %180, i64* %6, align 8
  %181 = icmp eq i64 %61, 0
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = sub nsw i64 0, %62
  %184 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %11, i64 %183
  %185 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %184 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %185, i8* align 4 %37, i64 %61, i1 false) #13
  br label %195

186:                                              ; preds = %75, %186
  %187 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %193, %186 ], [ %76, %75 ]
  %188 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %192, %186 ], [ %77, %75 ]
  %189 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %188 to i64*
  %190 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %187 to i64*
  %191 = load i64, i64* %189, align 4
  store i64 %191, i64* %190, align 4
  %192 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %188, i64 1
  %193 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %187, i64 1
  %194 = icmp ult %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %192, %11
  br i1 %194, label %186, label %176, !llvm.loop !11

195:                                              ; preds = %182, %179
  %196 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35 to i64*
  store i64 %58, i64* %196, align 4
  br label %461

197:                                              ; preds = %45
  %198 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %199 = ashr exact i64 %9, 3
  %200 = add nsw i64 %199, 1
  %201 = icmp ugt i64 %200, 2305843009213693951
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = bitcast %"class.base::internal::flat_tree"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %203) #15
  unreachable

204:                                              ; preds = %197
  %205 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %46 to i64*
  %206 = sub i64 %49, %8
  %207 = ashr exact i64 %206, 3
  %208 = icmp ult i64 %207, 1152921504606846975
  br i1 %208, label %212, label %209

209:                                              ; preds = %204
  %210 = sub i64 %34, %8
  %211 = ashr exact i64 %210, 3
  br label %222

212:                                              ; preds = %204
  %213 = ashr exact i64 %206, 2
  %214 = icmp ult i64 %213, %200
  %215 = select i1 %214, i64 %200, i64 %213
  %216 = sub i64 %34, %8
  %217 = ashr exact i64 %216, 3
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %228, label %219

219:                                              ; preds = %212
  %220 = icmp ugt i64 %215, 2305843009213693951
  br i1 %220, label %221, label %222

221:                                              ; preds = %219
  tail call void @abort() #15
  unreachable

222:                                              ; preds = %219, %209
  %223 = phi i64 [ 2305843009213693951, %209 ], [ %215, %219 ]
  %224 = phi i64 [ %211, %209 ], [ %217, %219 ]
  %225 = shl i64 %223, 3
  %226 = tail call i8* @_Znwm(i64 %225) #14
  %227 = bitcast i8* %226 to %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*
  br label %228

228:                                              ; preds = %222, %212
  %229 = phi i64 [ %224, %222 ], [ %217, %212 ]
  %230 = phi i64 [ %223, %222 ], [ 0, %212 ]
  %231 = phi i8* [ %226, %222 ], [ null, %212 ]
  %232 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %227, %222 ], [ null, %212 ]
  %233 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %232, i64 %229
  %234 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %232, i64 %230
  %235 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %234 to i64
  %236 = icmp eq i64 %229, %230
  %237 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %233 to i64*
  br i1 %236, label %238, label %262

238:                                              ; preds = %228
  %239 = icmp sgt i64 %229, 0
  br i1 %239, label %240, label %245

240:                                              ; preds = %238
  %241 = add nuw nsw i64 %229, 1
  %242 = sdiv i64 %241, -2
  %243 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %233, i64 %242
  %244 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %243 to i64*
  br label %262

245:                                              ; preds = %238
  %246 = shl nsw i64 %229, 1
  %247 = icmp eq i64 %229, 0
  %248 = select i1 %247, i64 1, i64 %246
  %249 = icmp ugt i64 %248, 2305843009213693951
  br i1 %249, label %250, label %251

250:                                              ; preds = %245
  tail call void @abort() #15
  unreachable

251:                                              ; preds = %245
  %252 = lshr i64 %248, 2
  %253 = shl i64 %248, 3
  %254 = tail call i8* @_Znwm(i64 %253) #14
  %255 = bitcast i8* %254 to %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*
  %256 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %255, i64 %252
  %257 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %255, i64 %248
  %258 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %257 to i64
  %259 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %232, null
  %260 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %256 to i64*
  br i1 %259, label %262, label %261

261:                                              ; preds = %251
  tail call void @_ZdlPv(i8* %231) #14
  br label %262

262:                                              ; preds = %261, %251, %240, %228
  %263 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %243, %240 ], [ %256, %251 ], [ %256, %261 ], [ %233, %228 ]
  %264 = phi i64 [ %235, %240 ], [ %258, %251 ], [ %258, %261 ], [ %235, %228 ]
  %265 = phi i64* [ %244, %240 ], [ %260, %251 ], [ %260, %261 ], [ %237, %228 ]
  %266 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %1 to i64*
  %267 = load i64, i64* %266, align 4
  store i64 %267, i64* %265, align 4
  %268 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %263, i64 1
  %269 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %3, align 8
  %270 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %269 to i64
  %271 = sub i64 %34, %270
  %272 = ashr exact i64 %271, 3
  %273 = sub nsw i64 0, %272
  %274 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %263, i64 %273
  %275 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %274 to i64
  %276 = icmp sgt i64 %271, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %262
  %278 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %274 to i8*
  %279 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %269 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %278, i8* align 4 %279, i64 %271, i1 false) #13
  br label %280

280:                                              ; preds = %277, %262
  %281 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %5, align 8
  %282 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %281, %35
  br i1 %282, label %454, label %283

283:                                              ; preds = %280
  %284 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %281, i64 -1, i32 0
  %285 = ptrtoint i32* %284 to i64
  %286 = sub i64 %285, %36
  %287 = lshr i64 %286, 3
  %288 = add nuw nsw i64 %287, 1
  %289 = icmp ult i64 %288, 4
  br i1 %289, label %383, label %290

290:                                              ; preds = %283
  %291 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %281, i64 -1, i32 0
  %292 = ptrtoint i32* %291 to i64
  %293 = sub i64 %292, %36
  %294 = lshr i64 %293, 3
  %295 = add nuw nsw i64 %294, 2
  %296 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %263, i64 %295
  %297 = add nuw nsw i64 %294, 1
  %298 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %297
  %299 = icmp ult %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %268, %298
  %300 = icmp ult %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, %296
  %301 = and i1 %299, %300
  br i1 %301, label %383, label %302

302:                                              ; preds = %290
  %303 = and i64 %288, 4611686018427387900
  %304 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %268, i64 %303
  %305 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %303
  %306 = add nsw i64 %303, -4
  %307 = lshr exact i64 %306, 2
  %308 = add nuw nsw i64 %307, 1
  %309 = and i64 %308, 3
  %310 = icmp ult i64 %306, 12
  br i1 %310, label %362, label %311

311:                                              ; preds = %302
  %312 = sub nsw i64 %308, %309
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %359, %313 ]
  %315 = phi i64 [ %312, %311 ], [ %360, %313 ]
  %316 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %268, i64 %314
  %317 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %314
  %318 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %317 to <2 x i64>*
  %319 = load <2 x i64>, <2 x i64>* %318, align 4, !alias.scope !12
  %320 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %317, i64 2
  %321 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 4, !alias.scope !12
  %323 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %316 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %323, align 4, !alias.scope !15, !noalias !12
  %324 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %316, i64 2
  %325 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %324 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %325, align 4, !alias.scope !15, !noalias !12
  %326 = or i64 %314, 4
  %327 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %268, i64 %326
  %328 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %326
  %329 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %328 to <2 x i64>*
  %330 = load <2 x i64>, <2 x i64>* %329, align 4, !alias.scope !12
  %331 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %328, i64 2
  %332 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 4, !alias.scope !12
  %334 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %327 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %334, align 4, !alias.scope !15, !noalias !12
  %335 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %327, i64 2
  %336 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %335 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %336, align 4, !alias.scope !15, !noalias !12
  %337 = or i64 %314, 8
  %338 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %268, i64 %337
  %339 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %337
  %340 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %339 to <2 x i64>*
  %341 = load <2 x i64>, <2 x i64>* %340, align 4, !alias.scope !12
  %342 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %339, i64 2
  %343 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %342 to <2 x i64>*
  %344 = load <2 x i64>, <2 x i64>* %343, align 4, !alias.scope !12
  %345 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %338 to <2 x i64>*
  store <2 x i64> %341, <2 x i64>* %345, align 4, !alias.scope !15, !noalias !12
  %346 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %338, i64 2
  %347 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %346 to <2 x i64>*
  store <2 x i64> %344, <2 x i64>* %347, align 4, !alias.scope !15, !noalias !12
  %348 = or i64 %314, 12
  %349 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %268, i64 %348
  %350 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %348
  %351 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %350 to <2 x i64>*
  %352 = load <2 x i64>, <2 x i64>* %351, align 4, !alias.scope !12
  %353 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %350, i64 2
  %354 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %353 to <2 x i64>*
  %355 = load <2 x i64>, <2 x i64>* %354, align 4, !alias.scope !12
  %356 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %349 to <2 x i64>*
  store <2 x i64> %352, <2 x i64>* %356, align 4, !alias.scope !15, !noalias !12
  %357 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %349, i64 2
  %358 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %357 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %358, align 4, !alias.scope !15, !noalias !12
  %359 = add i64 %314, 16
  %360 = add i64 %315, -4
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %313, !llvm.loop !17

362:                                              ; preds = %313, %302
  %363 = phi i64 [ 0, %302 ], [ %359, %313 ]
  %364 = icmp eq i64 %309, 0
  br i1 %364, label %381, label %365

365:                                              ; preds = %362, %365
  %366 = phi i64 [ %378, %365 ], [ %363, %362 ]
  %367 = phi i64 [ %379, %365 ], [ %309, %362 ]
  %368 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %268, i64 %366
  %369 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %35, i64 %366
  %370 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %369 to <2 x i64>*
  %371 = load <2 x i64>, <2 x i64>* %370, align 4, !alias.scope !12
  %372 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %369, i64 2
  %373 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %372 to <2 x i64>*
  %374 = load <2 x i64>, <2 x i64>* %373, align 4, !alias.scope !12
  %375 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %368 to <2 x i64>*
  store <2 x i64> %371, <2 x i64>* %375, align 4, !alias.scope !15, !noalias !12
  %376 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %368, i64 2
  %377 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %376 to <2 x i64>*
  store <2 x i64> %374, <2 x i64>* %377, align 4, !alias.scope !15, !noalias !12
  %378 = add i64 %366, 4
  %379 = add i64 %367, -1
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %365, !llvm.loop !18

381:                                              ; preds = %365, %362
  %382 = icmp eq i64 %288, %303
  br i1 %382, label %454, label %383

383:                                              ; preds = %381, %290, %283
  %384 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %268, %290 ], [ %268, %283 ], [ %304, %381 ]
  %385 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %35, %290 ], [ %35, %283 ], [ %305, %381 ]
  %386 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %385 to i64
  %387 = getelementptr %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %281, i64 -1, i32 0
  %388 = ptrtoint i32* %387 to i64
  %389 = sub i64 %388, %386
  %390 = lshr i64 %389, 3
  %391 = add nuw nsw i64 %390, 1
  %392 = and i64 %391, 7
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %405, label %394

394:                                              ; preds = %383, %394
  %395 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %402, %394 ], [ %384, %383 ]
  %396 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %401, %394 ], [ %385, %383 ]
  %397 = phi i64 [ %403, %394 ], [ %392, %383 ]
  %398 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %395 to i64*
  %399 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %396 to i64*
  %400 = load i64, i64* %399, align 4
  store i64 %400, i64* %398, align 4
  %401 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %396, i64 1
  %402 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %395, i64 1
  %403 = add i64 %397, -1
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %394, !llvm.loop !19

405:                                              ; preds = %394, %383
  %406 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ undef, %383 ], [ %402, %394 ]
  %407 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %384, %383 ], [ %402, %394 ]
  %408 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %385, %383 ], [ %401, %394 ]
  %409 = icmp ult i64 %389, 56
  br i1 %409, label %454, label %410

410:                                              ; preds = %405, %410
  %411 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %452, %410 ], [ %407, %405 ]
  %412 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %451, %410 ], [ %408, %405 ]
  %413 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411 to i64*
  %414 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412 to i64*
  %415 = load i64, i64* %414, align 4
  store i64 %415, i64* %413, align 4
  %416 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 1
  %417 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 1
  %418 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %417 to i64*
  %419 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %416 to i64*
  %420 = load i64, i64* %419, align 4
  store i64 %420, i64* %418, align 4
  %421 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 2
  %422 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 2
  %423 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %422 to i64*
  %424 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %421 to i64*
  %425 = load i64, i64* %424, align 4
  store i64 %425, i64* %423, align 4
  %426 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 3
  %427 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 3
  %428 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %427 to i64*
  %429 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %426 to i64*
  %430 = load i64, i64* %429, align 4
  store i64 %430, i64* %428, align 4
  %431 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 4
  %432 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 4
  %433 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %432 to i64*
  %434 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %431 to i64*
  %435 = load i64, i64* %434, align 4
  store i64 %435, i64* %433, align 4
  %436 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 5
  %437 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 5
  %438 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %437 to i64*
  %439 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %436 to i64*
  %440 = load i64, i64* %439, align 4
  store i64 %440, i64* %438, align 4
  %441 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 6
  %442 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 6
  %443 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %442 to i64*
  %444 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %441 to i64*
  %445 = load i64, i64* %444, align 4
  store i64 %445, i64* %443, align 4
  %446 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 7
  %447 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 7
  %448 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %447 to i64*
  %449 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %446 to i64*
  %450 = load i64, i64* %449, align 4
  store i64 %450, i64* %448, align 4
  %451 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %412, i64 8
  %452 = getelementptr inbounds %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange", %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %411, i64 8
  %453 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %451, %281
  br i1 %453, label %454, label %410, !llvm.loop !20

454:                                              ; preds = %405, %410, %381, %280
  %455 = phi %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* [ %268, %280 ], [ %304, %381 ], [ %406, %405 ], [ %452, %410 ]
  %456 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %455 to i64
  %457 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %3, align 8
  store i64 %275, i64* %198, align 8
  store i64 %456, i64* %6, align 8
  store i64 %264, i64* %205, align 8
  %458 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %457, null
  br i1 %458, label %461, label %459

459:                                              ; preds = %454
  %460 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %457 to i8*
  tail call void @_ZdlPv(i8* %460) #14
  br label %461

461:                                              ; preds = %39, %52, %195, %454, %459
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  tail call void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"* %10) #13
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS6_JRS6_RS5_EEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.util::IdType"* dereferenceable(4), %"class.util::IdType"* dereferenceable(4), %"class.gpu::ClientDiscardableHandle"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %39, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %35, %9
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %7, %9 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %10, %9 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %12, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp slt i32 %17, %12
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %41

41:                                               ; preds = %23, %31, %33, %39
  %42 = phi %"class.std::__1::__tree_end_node"* [ %5, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %76

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 56) #14, !noalias !21
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %2, i64 0, i32 0, i32 0
  %51 = bitcast i8* %49 to i32*
  %52 = load i32, i32* %50, align 4, !noalias !21
  store i32 %52, i32* %51, align 8, !noalias !21
  %53 = getelementptr inbounds i8, i8* %48, i64 40
  %54 = bitcast i8* %53 to %"class.gpu::ClientDiscardableHandle"*
  tail call void @_ZN3gpu23ClientDiscardableHandleC1ERKS0_(%"class.gpu::ClientDiscardableHandle"* %54, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16) %3) #13, !noalias !21
  %55 = bitcast i8* %48 to %"class.std::__1::__tree_node"*
  %56 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %57 = getelementptr inbounds i8, i8* %48, i64 16
  %58 = bitcast i8* %57 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %58, align 8
  %59 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %47
  %66 = ptrtoint %"class.std::__1::__tree_node_base"* %63 to i64
  %67 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %66, i64* %67, align 8
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %69

69:                                               ; preds = %65, %47
  %70 = phi %"class.std::__1::__tree_node_base"* [ %56, %47 ], [ %68, %65 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %72, %"class.std::__1::__tree_node_base"* %70) #13
  %73 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %69, %41
  %77 = phi i8 [ 1, %69 ], [ 0, %41 ]
  %78 = phi %"class.std::__1::__tree_node"* [ %55, %69 ], [ %45, %41 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %78, i64 0, i32 0, i32 0
  %80 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %79, 0
  %81 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %80, i8 %77, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !24
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !24
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !24
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 16) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !25

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"class.gpu::ClientDiscardableHandle"* %11, %"class.gpu::ClientDiscardableHandle"* %12, %"class.gpu::ClientDiscardableHandle"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"class.gpu::ClientDiscardableHandle"* %19, %"class.gpu::ClientDiscardableHandle"* %20, %"class.gpu::ClientDiscardableHandle"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"class.gpu::ClientDiscardableHandle"* %24, %"class.gpu::ClientDiscardableHandle"* %25, %"class.gpu::ClientDiscardableHandle"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEE9MoveRangeIS3_Li0EEEvPS3_S6_S6_(%"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.gpu::ClientDiscardableHandle"* %0 to i64
  %6 = icmp ult %"class.gpu::ClientDiscardableHandle"* %2, %1
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = ptrtoint %"class.gpu::ClientDiscardableHandle"* %2 to i64
  %9 = ptrtoint %"class.gpu::ClientDiscardableHandle"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #13
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !25

16:                                               ; preds = %7
  tail call void @llvm.trap() #13
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %3, %17, %20
  %24 = icmp eq %"class.gpu::ClientDiscardableHandle"* %0, %1
  br i1 %24, label %32, label %25

25:                                               ; preds = %23, %25
  %26 = phi %"class.gpu::ClientDiscardableHandle"* [ %30, %25 ], [ %2, %23 ]
  %27 = phi %"class.gpu::ClientDiscardableHandle"* [ %29, %25 ], [ %0, %23 ]
  call void @_ZN3gpu23ClientDiscardableHandleC1EOS0_(%"class.gpu::ClientDiscardableHandle"* %26, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16) %27) #13
  %28 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %27, i64 0, i32 0
  call void @_ZN3gpu21DiscardableHandleBaseD2Ev(%"class.gpu::DiscardableHandleBase"* %28) #13
  %29 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %27, i64 1
  %30 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %26, i64 1
  %31 = icmp eq %"class.gpu::ClientDiscardableHandle"* %29, %1
  br i1 %31, label %32, label %25

32:                                               ; preds = %25, %23
  ret void
}

declare void @_ZN3gpu23ClientDiscardableHandleC1EOS0_(%"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.gpu::ClientDiscardableHandle"* @_ZNK4base8internal12VectorBufferIN3gpu23ClientDiscardableHandleEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.gpu::ClientDiscardableHandle"*, %"class.gpu::ClientDiscardableHandle"** %23, align 8
  %25 = getelementptr inbounds %"class.gpu::ClientDiscardableHandle", %"class.gpu::ClientDiscardableHandle"* %24, i64 %1
  ret %"class.gpu::ClientDiscardableHandle"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !24
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !24
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !24
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !24
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !24
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !24
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !24
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !24
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !24
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !24
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !24
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !24
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !24
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3gpu24ClientDiscardableManager10AllocationENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.gpu::ClientDiscardableManager::Allocation"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !26

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %168, label %139

139:                                              ; preds = %132, %166
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %166 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.gpu::ClientDiscardableManager::Allocation"*, %"struct.gpu::ClientDiscardableManager::Allocation"** %142, align 8
  store %"struct.gpu::ClientDiscardableManager::Allocation"* null, %"struct.gpu::ClientDiscardableManager::Allocation"** %142, align 8
  %144 = icmp eq %"struct.gpu::ClientDiscardableManager::Allocation"* %143, null
  br i1 %144, label %166, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %143, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %147 = load %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"*, %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %146, align 8
  %148 = icmp eq %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = ptrtoint %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %147 to i64
  %151 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %143, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %152 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"struct.gpu::(anonymous namespace)::FreeOffsetSet::FreeRange"* %147 to i8*
  tail call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %149, %145
  %155 = getelementptr inbounds %"struct.gpu::ClientDiscardableManager::Allocation", %"struct.gpu::ClientDiscardableManager::Allocation"* %143, i64 0, i32 0, i32 0
  %156 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %155, align 8
  %157 = icmp eq %"class.gpu::Buffer"* %156, null
  br i1 %157, label %164, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw sub i32* %159, i32 1 acq_rel
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  tail call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %156) #13
  %163 = bitcast %"class.gpu::Buffer"* %156 to i8*
  tail call void @_ZdlPv(i8* %163) #14
  br label %164

164:                                              ; preds = %162, %158, %154
  %165 = bitcast %"struct.gpu::ClientDiscardableManager::Allocation"* %143 to i8*
  tail call void @_ZdlPv(i8* %165) #14
  br label %166

166:                                              ; preds = %164, %139
  %167 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %167, label %168, label %139

168:                                              ; preds = %166, %132
  %169 = icmp eq i64 %135, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %171) #14
  br label %172

172:                                              ; preds = %168, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 16) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !25

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3gpu23ClientDiscardableHandleEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !8}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRS6_RS5_EEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISL_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12__value_typeIN4util6IdTypeIN3gpu23ClientDiscardableHandleEiLi0ELi1EEES5_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRS6_RS5_EEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISL_EEEEEEDpOT_"}
!24 = !{i8 0, i8 2}
!25 = !{!"branch_weights", i32 1, i32 2000}
!26 = distinct !{!26, !10}
