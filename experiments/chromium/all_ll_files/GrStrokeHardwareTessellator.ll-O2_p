; ModuleID = '../../third_party/skia/src/gpu/tessellate/GrStrokeHardwareTessellator.cpp'
source_filename = "../../third_party/skia/src/gpu/tessellate/GrStrokeHardwareTessellator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrCullTest = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec" }
%"struct.skvx::Vec" = type { %"struct.skvx::Vec.17", %"struct.skvx::Vec.17" }
%"struct.skvx::Vec.17" = type { %"struct.skvx::Vec.18", %"struct.skvx::Vec.18" }
%"struct.skvx::Vec.18" = type { float }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkSTArray.13 = type { %class.SkAlignedSTStorage.14, %class.SkTArray.15 }
%class.SkAlignedSTStorage.14 = type { [16 x i8] }
%class.SkTArray.15 = type { %struct.GrVertexChunk*, i64 }
%struct.GrVertexChunk = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%struct.GrVertexWriter = type { i8* }
%struct.SkPoint = type { float, float }
%"struct.GrStrokeShader::DynamicStroke" = type { float, float }
%class.GrVertexColor = type <{ [4 x i32], i8, [3 x i8] }>
%class.GrStrokeHardwareTessellator = type { %class.GrStrokeTessellator, %class.SkSTArray.13 }
%class.GrStrokeTessellator = type { i32 (...)**, %class.GrStrokeShader, %"struct.GrStrokeTessellator::PathStrokeList"*, %"struct.std::__1::array", %struct.SkRect }
%class.GrStrokeShader = type <{ %class.GrPathShader.base, i32, i32, %class.SkStrokeRec, %struct.SkRGBA4f, [4 x i8], %class.SkSTArray, float, [4 x i8] }>
%class.GrPathShader.base = type { %class.GrGeometryProcessor.base, %class.SkMatrix, i8, i32 }
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkStrokeRec = type { float, float, float, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [80 x i8] }
%class.SkTArray = type { %"class.GrGeometryProcessor::Attribute"*, i64 }
%"struct.GrStrokeTessellator::PathStrokeList" = type { %class.SkPath, %class.SkStrokeRec, %struct.SkRGBA4f, %"struct.GrStrokeTessellator::PathStrokeList"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"struct.std::__1::array" = type { [2 x float] }
%struct.SkRect = type { float, float, float, float }
%"class.(anonymous namespace)::PatchWriter" = type { i32, [12 x i8], %class.GrCullTest, %class.GrVertexChunkBuilder, i32, float, float, [2 x float], [2 x float], float, i8, i32, i8, %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, %"struct.GrStrokeShader::DynamicStroke", %class.GrVertexColor }
%class.GrVertexChunkBuilder = type { %"class.GrMeshDrawOp::Target"*, %class.SkSTArray.13*, i64, i32, %struct.GrVertexWriter, i32, i32 }
%class.GrStrokeToleranceBuffer = type { %"struct.skvx::Vec", [4 x float], float, i32, [8 x i8] }
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.73, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.73 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.28, %class.SkArenaAllocList.29, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.94*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.21, %class.sk_sp.23, %class.sk_sp.25, %class.GrGpu*, i32, i8* }
%class.SkTArray.21 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.22 }
%class.sk_sp.22 = type { %class.GrBuffer* }
%class.sk_sp.23 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.24, [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%class.GrNonAtomicRef.24 = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.25, i8, [7 x i8] }>
%class.sk_sp.25 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.26, i8*, i64 }
%class.GrNonAtomicRef.26 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.28 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.29 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.30", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.GrOp* }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.36, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.36 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.37, %class.sk_sp.38, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.75" }
%class.SkNVRefCnt.37 = type { %"struct.std::__1::atomic" }
%class.sk_sp.38 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.42 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.39, [4 x i8] }>
%union.anon.39 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.40, i8* }
%class.sk_sp.40 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.41, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.41 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.42 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.43, void (i8*)*, i8* }
%class.SkNVRefCnt.43 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.44, i32, [4 x i8] }
%union.anon.44 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.38, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.80, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.80 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.81, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.81 = type { %"struct.std::__1::atomic" }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.82 }
%class.SkFibBlockSizes.82 = type { i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.85" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.83 }
%union.anon.83 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.84, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.84 = type { i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.88, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.88 = type { %class.SkAlignedSTStorage.89, %class.SkTArray.90 }
%class.SkAlignedSTStorage.89 = type { [8 x i8] }
%class.SkTArray.90 = type { %"class.std::__1::unique_ptr.85"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%struct.SkIPoint = type { i32, i32 }
%class.SkTArray.94 = type opaque
%class.GrGpu = type opaque
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.72, %class.sk_sp.74, %class.sk_sp.74 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.46, %class.SkTMultiMap, %class.SkTDynamicHash.53, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.46 }
%class.SkTDArray.46 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.53 = type { %class.SkTHashTable.54 }
%class.SkTHashTable.54 = type { i32, i32, %class.SkAutoTArray.55 }
%class.SkAutoTArray.55 = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.62, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.62 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.63, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.63 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.64 }
%class.SkTHashTable.64 = type { i32, i32, %class.SkAutoTArray.65 }
%class.SkAutoTArray.65 = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.72 = type { %class.GrCaps* }
%class.sk_sp.74 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.16, %class.sk_sp.16, %class.sk_sp.16, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }

$_ZN27GrStrokeHardwareTessellatorD2Ev = comdat any

$_ZN27GrStrokeHardwareTessellatorD0Ev = comdat any

$_ZN20GrVertexChunkBuilder10allocChunkEi = comdat any

$_ZN8SkTArrayI13GrVertexChunkLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZNK10GrCullTest11areVisible3EPK7SkPoint = comdat any

$_ZNK10GrCullTest11areVisible4EPK7SkPoint = comdat any

$_ZN19GrStrokeTessellatorD2Ev = comdat any

$_ZN19GrStrokeTessellatorD0Ev = comdat any

$_ZTV19GrStrokeTessellator = comdat any

@__const._ZN27GrStrokeHardwareTessellator7prepareEPN12GrMeshDrawOp6TargetEi.patchWriter = private unnamed_addr constant { i32, [12 x i8], %class.GrCullTest, { %"class.GrMeshDrawOp::Target"*, %class.SkSTArray.13*, i64, i32, [4 x i8], %struct.GrVertexWriter, i32, i32 }, i32, float, float, [2 x float], [2 x float], float, i8, [3 x i8], i32, i8, [3 x i8], %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, %"struct.GrStrokeShader::DynamicStroke", %class.GrVertexColor } { i32 -1431655766, [12 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %class.GrCullTest { %"struct.skvx::Vec" { %"struct.skvx::Vec.17" { %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.17" { %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.17" { %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.17" { %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.17" { %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.17" { %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.18" { float 0xFFFFFFFFE0000000 } } } }, { %"class.GrMeshDrawOp::Target"*, %class.SkSTArray.13*, i64, i32, [4 x i8], %struct.GrVertexWriter, i32, i32 } { %"class.GrMeshDrawOp::Target"* inttoptr (i64 -6148914691236517206 to %"class.GrMeshDrawOp::Target"*), %class.SkSTArray.13* inttoptr (i64 -6148914691236517206 to %class.SkSTArray.13*), i64 -6148914691236517206, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.GrVertexWriter { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.GrStrokeShader::DynamicStroke" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.GrVertexColor <{ [4 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 16
@_ZTV27GrStrokeHardwareTessellator = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrStrokeHardwareTessellator*, %"class.GrMeshDrawOp::Target"*, i32)* @_ZN27GrStrokeHardwareTessellator7prepareEPN12GrMeshDrawOp6TargetEi to i8*), i8* bitcast (void (%class.GrStrokeHardwareTessellator*, %class.GrOpFlushState*)* @_ZNK27GrStrokeHardwareTessellator4drawEP14GrOpFlushState to i8*), i8* bitcast (void (%class.GrStrokeHardwareTessellator*)* @_ZN27GrStrokeHardwareTessellatorD2Ev to i8*), i8* bitcast (void (%class.GrStrokeHardwareTessellator*)* @_ZN27GrStrokeHardwareTessellatorD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [52 x i8] c"../../third_party/skia/src/gpu/GrVertexChunkArray.h\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"WARNING: Failed to allocate vertex buffer for GrVertexChunk.\0A\00", align 1
@_ZTV19GrStrokeTessellator = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrStrokeTessellator*)* @_ZN19GrStrokeTessellatorD2Ev to i8*), i8* bitcast (void (%class.GrStrokeTessellator*)* @_ZN19GrStrokeTessellatorD0Ev to i8*)] }, comdat, align 8
@_ZTV14GrStrokeShader = external unnamed_addr constant { [8 x i8*] }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27GrStrokeHardwareTessellator7prepareEPN12GrMeshDrawOp6TargetEi(%class.GrStrokeHardwareTessellator*, %"class.GrMeshDrawOp::Target"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca [4 x %struct.SkPoint], align 16
  %5 = alloca [10 x %struct.SkPoint], align 16
  %6 = alloca [2 x float], align 4
  %7 = alloca i8, align 1
  %8 = alloca %"class.(anonymous namespace)::PatchWriter", align 16
  %9 = alloca %class.GrStrokeToleranceBuffer, align 16
  %10 = alloca [4 x %struct.SkPoint], align 16
  %11 = alloca %struct.SkConic, align 4
  %12 = mul nsw i32 %2, 5
  %13 = sdiv i32 %12, 4
  %14 = add nsw i32 %13, 8
  %15 = bitcast %"class.(anonymous namespace)::PatchWriter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %15) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %15, i8* align 16 bitcast ({ i32, [12 x i8], %class.GrCullTest, { %"class.GrMeshDrawOp::Target"*, %class.SkSTArray.13*, i64, i32, [4 x i8], %struct.GrVertexWriter, i32, i32 }, i32, float, float, [2 x float], [2 x float], float, i8, [3 x i8], i32, i8, [3 x i8], %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, %"struct.GrStrokeShader::DynamicStroke", %class.GrVertexColor }* @__const._ZN27GrStrokeHardwareTessellator7prepareEPN12GrMeshDrawOp6TargetEi.patchWriter to i8*), i64 208, i1 false)
  %16 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 3, i32 0, i64 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 1
  %22 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 0
  store i32 %17, i32* %24, align 16
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 3
  %28 = load float, float* %27, align 4
  %29 = fsub float -0.000000e+00, %26
  %30 = fsub float -0.000000e+00, %28
  %31 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store float %26, float* %31, align 16
  %32 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0
  store float %28, float* %32, align 4
  %33 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store float %29, float* %33, align 8
  %34 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0
  store float %30, float* %34, align 4
  %35 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 1
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 4
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  store float %36, float* %39, align 16
  %40 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 1, i32 0, i32 1, i32 0
  store float %38, float* %40, align 4
  %41 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 1, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 4, i32 0
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 2
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 4, i32 1
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 5
  %49 = load float, float* %48, align 4
  %50 = insertelement <4 x float> <float -0.000000e+00, float -0.000000e+00, float undef, float undef>, float %43, i32 2
  %51 = insertelement <4 x float> %50, float %47, i32 3
  %52 = insertelement <4 x float> undef, float %36, i32 0
  %53 = insertelement <4 x float> %52, float %38, i32 1
  %54 = insertelement <4 x float> %53, float %45, i32 2
  %55 = insertelement <4 x float> %54, float %49, i32 3
  %56 = fsub <4 x float> %51, %55
  %57 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 4, i32 2
  %58 = load float, float* %57, align 4
  %59 = fsub float %45, %58
  %60 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 4, i32 3
  %61 = load float, float* %60, align 4
  %62 = fsub float %49, %61
  %63 = bitcast float* %41 to <4 x float>*
  store <4 x float> %56, <4 x float>* %63, align 8
  %64 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 2, i32 1, i32 0, i32 0
  store float %59, float* %64, align 8
  %65 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 2, i32 2, i32 1, i32 1, i32 0
  store float %62, float* %65, align 4
  %66 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3, i32 0
  store %"class.GrMeshDrawOp::Target"* %1, %"class.GrMeshDrawOp::Target"** %66, align 16
  %67 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3, i32 1
  store %class.SkSTArray.13* %21, %class.SkSTArray.13** %67, align 8
  %68 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3, i32 2
  store i64 %23, i64* %68, align 16
  %69 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3, i32 3
  store i32 %14, i32* %69, align 8
  %70 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3, i32 5
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3, i32 6
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 4
  %73 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)***
  %74 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)**, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*** %73, align 8
  %75 = getelementptr inbounds %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %74, i64 27
  %76 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %75, align 8
  %77 = tail call dereferenceable(232) %class.GrCaps* %76(%"class.GrMeshDrawOp::Target"* %1) #11
  %78 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %77, i64 0, i32 2, i32 0
  %79 = load %class.GrShaderCaps*, %class.GrShaderCaps** %78, align 8
  %80 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %79, i64 0, i32 17
  %81 = load i32, i32* %80, align 4
  %82 = add nsw i32 %81, -2
  store i32 %82, i32* %72, align 16
  %83 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 5
  %84 = fmul float %20, 4.000000e+00
  store float %84, float* %83, align 4
  %85 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 12
  store i8 0, i8* %85, align 8
  %86 = load i32, i32* %16, align 8
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %class.SkSTArray.13, %class.SkSTArray.13* %21, i64 0, i32 0, i32 0, i64 0
  br i1 %88, label %90, label %194

90:                                               ; preds = %3
  %91 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 2
  %92 = load %"struct.GrStrokeTessellator::PathStrokeList"*, %"struct.GrStrokeTessellator::PathStrokeList"** %91, align 8
  %93 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %92, i64 0, i32 1, i32 1
  %94 = load float, float* %93, align 4
  %95 = fcmp oeq float %94, 0.000000e+00
  br i1 %95, label %96, label %106

96:                                               ; preds = %90
  %97 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 3, i32 0, i64 0
  %98 = load float, float* %97, align 4
  %99 = load float, float* %19, align 4
  %100 = fmul float %99, 2.500000e-01
  %101 = fcmp olt float %98, %100
  %102 = select i1 %101, float %100, float %98
  %103 = fdiv float 1.000000e+00, %102
  %104 = fcmp oeq float %103, 0.000000e+00
  %105 = select i1 %104, float 0x3F30000000000000, float %103
  br label %106

106:                                              ; preds = %90, %96
  %107 = phi float [ %105, %96 ], [ %94, %90 ]
  %108 = fmul float %84, %107
  %109 = fdiv float 2.000000e+00, %108
  %110 = fsub float 1.000000e+00, %109
  %111 = fcmp olt float %110, -1.000000e+00
  %112 = select i1 %111, float -1.000000e+00, float %110
  %113 = tail call float @acosf(float %112) #11
  %114 = fdiv float 5.000000e-01, %113
  %115 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %92, i64 0, i32 1, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = lshr i32 %116, 16
  %118 = trunc i32 %117 to i8
  %119 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 6
  store float %114, float* %119, align 8
  %120 = insertelement <2 x float> undef, float %114, i32 0
  %121 = shufflevector <2 x float> %120, <2 x float> undef, <2 x i32> zeroinitializer
  %122 = fmul <2 x float> %121, <float 0x400921FB60000000, float 0x401921FB60000000>
  %123 = extractelement <2 x float> %122, i32 0
  %124 = tail call float @ceilf(float %123) #11
  %125 = extractelement <2 x float> %122, i32 1
  %126 = tail call float @ceilf(float %125) #11
  %127 = insertelement <2 x float> undef, float %124, i32 0
  %128 = insertelement <2 x float> %127, float %126, i32 1
  %129 = fcmp uge <2 x float> %128, <float 1.000000e+00, float 1.000000e+00>
  %130 = bitcast float %124 to i32
  %131 = bitcast float %126 to i32
  %132 = insertelement <2 x i32> undef, i32 %130, i32 0
  %133 = insertelement <2 x i32> %132, i32 %131, i32 1
  %134 = select <2 x i1> %129, <2 x i32> %133, <2 x i32> <i32 1065353216, i32 1065353216>
  %135 = extractelement <2 x i32> %134, i32 0
  %136 = extractelement <2 x i32> %134, i32 1
  %137 = zext i32 %136 to i64
  %138 = shl nuw i64 %137, 32
  %139 = zext i32 %135 to i64
  %140 = or i64 %138, %139
  %141 = bitcast i64 %140 to <2 x float>
  %142 = add nsw i32 %81, -1
  %143 = sitofp i32 %142 to float
  %144 = insertelement <2 x float> undef, float %143, i32 0
  %145 = shufflevector <2 x float> %144, <2 x float> undef, <2 x i32> zeroinitializer
  %146 = fsub <2 x float> %145, %141
  %147 = fcmp uge <2 x float> %146, zeroinitializer
  %148 = bitcast <2 x float> %146 to <2 x i32>
  %149 = select <2 x i1> %147, <2 x i32> %148, <2 x i32> zeroinitializer
  %150 = extractelement <2 x i32> %149, i32 0
  %151 = extractelement <2 x i32> %149, i32 1
  %152 = zext i32 %151 to i64
  %153 = shl nuw i64 %152, 32
  %154 = zext i32 %150 to i64
  %155 = or i64 %153, %154
  %156 = bitcast i64 %155 to <2 x float>
  %157 = fmul <2 x float> %156, %156
  %158 = fmul <2 x float> %157, %157
  %159 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 7, i64 0
  %160 = bitcast float* %159 to <2 x float>*
  store <2 x float> %158, <2 x float>* %160, align 4
  %161 = extractelement <2 x float> %141, i32 0
  %162 = and i32 %117, 255
  switch i8 %118, label %166 [
    i8 2, label %163
    i8 0, label %164
    i8 1, label %165
  ]

163:                                              ; preds = %106
  br label %166

164:                                              ; preds = %106
  br label %166

165:                                              ; preds = %106
  br label %166

166:                                              ; preds = %106, %163, %164, %165
  %167 = phi float [ 0xFFFFFFFFE0000000, %106 ], [ %161, %165 ], [ 2.000000e+00, %164 ], [ 1.000000e+00, %163 ]
  %168 = insertelement <2 x float> undef, float %167, i32 0
  %169 = shufflevector <2 x float> %168, <2 x float> undef, <2 x i32> zeroinitializer
  %170 = fsub <2 x float> %156, %169
  %171 = fadd <2 x float> %170, <float -1.000000e+00, float -1.000000e+00>
  %172 = fcmp uge <2 x float> %171, zeroinitializer
  %173 = bitcast <2 x float> %171 to <2 x i32>
  %174 = select <2 x i1> %172, <2 x i32> %173, <2 x i32> zeroinitializer
  %175 = extractelement <2 x i32> %174, i32 0
  %176 = extractelement <2 x i32> %174, i32 1
  %177 = zext i32 %176 to i64
  %178 = shl nuw i64 %177, 32
  %179 = zext i32 %175 to i64
  %180 = or i64 %178, %179
  %181 = bitcast i64 %180 to <2 x float>
  %182 = fmul <2 x float> %181, %181
  %183 = fmul <2 x float> %182, %182
  %184 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 8, i64 0
  %185 = bitcast float* %184 to <2 x float>*
  store <2 x float> %183, <2 x float>* %185, align 4
  %186 = sitofp i32 %82 to float
  %187 = fsub float %186, %167
  %188 = fadd float %187, -1.000000e+00
  %189 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 9
  store float %188, float* %189, align 4
  %190 = fcmp ole float %161, %186
  %191 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 10
  %192 = zext i1 %190 to i8
  store i8 %192, i8* %191, align 16
  %193 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 11
  store i32 %162, i32* %193, align 4
  br label %194

194:                                              ; preds = %3, %166
  %195 = bitcast %class.GrStrokeToleranceBuffer* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %195) #11
  %196 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 0, i32 0, i32 1, i32 0
  %197 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %198 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 0, i32 1, i32 1, i32 0
  %199 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 2
  %200 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 3
  %201 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 1
  %202 = bitcast [4 x float]* %201 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %202, i8 -1, i64 16, i1 false)
  %203 = getelementptr inbounds i32, i32* %200, i64 1
  %204 = bitcast i32* %203 to i64*
  store i64 -6148914691236517206, i64* %204, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %195, i8 0, i64 16, i1 false) #11
  store float %84, float* %199, align 16
  store i32 4, i32* %200, align 4
  %205 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 2
  %206 = load %"struct.GrStrokeTessellator::PathStrokeList"*, %"struct.GrStrokeTessellator::PathStrokeList"** %205, align 8
  %207 = icmp eq %"struct.GrStrokeTessellator::PathStrokeList"* %206, null
  br i1 %207, label %208, label %210

208:                                              ; preds = %194
  %209 = bitcast %class.SkSTArray.13** %67 to i8**
  br label %313

210:                                              ; preds = %194
  %211 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 1, i64 2
  %212 = bitcast %class.GrStrokeToleranceBuffer* %9 to <2 x float>*
  %213 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 0, i32 1
  %214 = bitcast %"struct.skvx::Vec.17"* %213 to <2 x float>*
  %215 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 1
  %216 = bitcast [4 x float]* %215 to <2 x float>*
  %217 = bitcast float* %211 to <2 x float>*
  %218 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 6
  %219 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 7, i64 0
  %220 = bitcast float* %219 to <2 x float>*
  %221 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 8, i64 0
  %222 = bitcast float* %221 to <2 x float>*
  %223 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 9
  %224 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 10
  %225 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 11
  %226 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 16, i32 0
  %227 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 16, i32 1
  %228 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 17
  %229 = bitcast %class.GrVertexColor* %228 to i8*
  %230 = getelementptr inbounds %class.GrVertexColor, %class.GrVertexColor* %228, i64 0, i32 0, i64 0
  %231 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 17, i32 1
  %232 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %233 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 0
  %234 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 1
  %235 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 2
  %236 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 3
  %237 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 3, i32 1
  %238 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 7, i64 1
  %239 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 8, i64 1
  %240 = bitcast [10 x %struct.SkPoint]* %5 to i8*
  %241 = bitcast [2 x float]* %6 to i8*
  %242 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 0, i64 0
  %243 = getelementptr inbounds [2 x float], [2 x float]* %6, i64 0, i64 1
  %244 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %5, i64 0, i64 0
  %245 = bitcast [10 x %struct.SkPoint]* %5 to <2 x float>*
  %246 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %5, i64 0, i64 3
  %247 = bitcast %struct.SkPoint* %246 to <2 x float>*
  %248 = bitcast [4 x %struct.SkPoint]* %4 to i8*
  %249 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0
  %250 = bitcast [4 x %struct.SkPoint]* %4 to <2 x float>*
  %251 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 1
  %252 = bitcast %struct.SkPoint* %251 to <2 x float>*
  %253 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 2
  %254 = bitcast %struct.SkPoint* %253 to <2 x float>*
  %255 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 3
  %256 = bitcast %struct.SkPoint* %255 to <2 x float>*
  %257 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %5, i64 0, i64 6
  %258 = bitcast %struct.SkPoint* %257 to <2 x float>*
  %259 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %5, i64 0, i64 9
  %260 = bitcast %struct.SkPoint* %259 to <2 x float>*
  %261 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %5, i64 0, i64 4
  %262 = bitcast %struct.SkPoint* %246 to i64*
  %263 = bitcast %struct.SkPoint* %261 to i64*
  %264 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %5, i64 0, i64 2
  %265 = bitcast %struct.SkPoint* %264 to i64*
  %266 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 3, i32 0
  %267 = bitcast float* %266 to i32*
  %268 = bitcast float* %237 to i32*
  %269 = bitcast %struct.SkConic* %11 to i8*
  %270 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %11, i64 0, i32 1
  %271 = bitcast float* %270 to i32*
  %272 = bitcast [4 x %struct.SkPoint]* %10 to <2 x float>*
  %273 = bitcast %struct.SkPoint* %234 to <2 x float>*
  %274 = bitcast %struct.SkPoint* %235 to <2 x float>*
  %275 = bitcast %struct.SkPoint* %236 to <2 x float>*
  %276 = bitcast %struct.SkPoint* %234 to i64*
  %277 = bitcast [4 x %struct.SkPoint]* %10 to i64*
  %278 = bitcast %struct.SkPoint* %236 to i64*
  %279 = bitcast %struct.SkPoint* %235 to i64*
  %280 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 13
  %281 = bitcast %struct.SkPoint* %280 to <2 x float>*
  %282 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 14
  %283 = bitcast %struct.SkPoint* %282 to <2 x float>*
  %284 = bitcast %struct.SkPoint* %280 to i64*
  %285 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 15
  %286 = bitcast %struct.SkPoint* %285 to i64*
  %287 = bitcast %struct.SkPoint* %282 to i64*
  %288 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3
  %289 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 3, i32 4
  %290 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %289, i64 0, i32 0
  %291 = bitcast %struct.GrVertexWriter* %289 to i64*
  %292 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 16
  %293 = bitcast %"struct.GrStrokeShader::DynamicStroke"* %292 to i64*
  %294 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 17, i32 0, i64 0
  %295 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 17, i32 0, i64 1
  %296 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 17, i32 0, i64 2
  %297 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %8, i64 0, i32 17, i32 0, i64 3
  %298 = bitcast %struct.SkPoint* %285 to <2 x float>*
  %299 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %300 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %301 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %302 = bitcast %struct.SkConic* %11 to i8*
  %303 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %304 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %305 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %306 = bitcast %class.GrStrokeToleranceBuffer* %9 to i32*
  %307 = bitcast float* %196 to i32*
  %308 = bitcast float* %197 to i32*
  %309 = bitcast float* %198 to i32*
  br label %344

310:                                              ; preds = %1245
  %311 = bitcast %class.SkSTArray.13** %67 to i8**
  %312 = load i8*, i8** %311, align 8
  br label %313

313:                                              ; preds = %208, %310
  %314 = phi i8** [ %209, %208 ], [ %311, %310 ]
  %315 = phi i8* [ %89, %208 ], [ %312, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %195) #11
  %316 = getelementptr inbounds i8, i8* %315, i64 24
  %317 = bitcast i8* %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = and i64 %318, 4294967294
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %343, label %321

321:                                              ; preds = %313
  %322 = load %"class.GrMeshDrawOp::Target"*, %"class.GrMeshDrawOp::Target"** %66, align 16
  %323 = load i32, i32* %71, align 4
  %324 = load i32, i32* %70, align 8
  %325 = sub nsw i32 %323, %324
  %326 = load i64, i64* %68, align 16
  %327 = bitcast %"class.GrMeshDrawOp::Target"* %322 to void (%"class.GrMeshDrawOp::Target"*, i32, i64)***
  %328 = load void (%"class.GrMeshDrawOp::Target"*, i32, i64)**, void (%"class.GrMeshDrawOp::Target"*, i32, i64)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.GrMeshDrawOp::Target"*, i32, i64)*, void (%"class.GrMeshDrawOp::Target"*, i32, i64)** %328, i64 10
  %330 = load void (%"class.GrMeshDrawOp::Target"*, i32, i64)*, void (%"class.GrMeshDrawOp::Target"*, i32, i64)** %329, align 8
  call void %330(%"class.GrMeshDrawOp::Target"* %322, i32 %325, i64 %326) #11
  %331 = load i32, i32* %70, align 8
  %332 = load i8*, i8** %314, align 8
  %333 = getelementptr inbounds i8, i8* %332, i64 16
  %334 = bitcast i8* %333 to %struct.GrVertexChunk**
  %335 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %334, align 8
  %336 = getelementptr inbounds i8, i8* %332, i64 24
  %337 = bitcast i8* %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = lshr i64 %338, 1
  %340 = and i64 %339, 2147483647
  %341 = add nsw i64 %340, -1
  %342 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %335, i64 %341, i32 1
  store i32 %331, i32* %342, align 8
  br label %343

343:                                              ; preds = %313, %321
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %15) #11
  ret void

344:                                              ; preds = %210, %1245
  %345 = phi %"struct.GrStrokeTessellator::PathStrokeList"* [ %206, %210 ], [ %1247, %1245 ]
  %346 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 1
  %347 = load i32, i32* %16, align 8
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %530, label %350

350:                                              ; preds = %344
  %351 = load i32, i32* %200, align 4
  %352 = icmp eq i32 %351, 4
  br i1 %352, label %353, label %439

353:                                              ; preds = %350
  %354 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 1, i32 1
  %355 = bitcast float* %354 to i32*
  %356 = load i32, i32* %355, align 4
  store i32 %356, i32* %306, align 16
  %357 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 3
  %358 = load %"struct.GrStrokeTessellator::PathStrokeList"*, %"struct.GrStrokeTessellator::PathStrokeList"** %357, align 8
  %359 = icmp eq %"struct.GrStrokeTessellator::PathStrokeList"* %358, null
  br i1 %359, label %360, label %1249

360:                                              ; preds = %1256, %1249, %353, %1263
  %361 = load float, float* %199, align 16
  %362 = load <2 x float>, <2 x float>* %212, align 16
  %363 = load <2 x float>, <2 x float>* %214, align 8
  %364 = shufflevector <2 x float> %362, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %365 = shufflevector <2 x float> %363, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %366 = shufflevector <4 x float> %364, <4 x float> %365, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %367 = insertelement <4 x float> undef, float %361, i32 0
  %368 = shufflevector <4 x float> %367, <4 x float> undef, <4 x i32> zeroinitializer
  %369 = fmul <4 x float> %368, %366
  %370 = fdiv <4 x float> <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>, %369
  %371 = fsub <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %370
  %372 = fcmp olt <4 x float> %371, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %373 = sext <4 x i1> %372 to <4 x i32>
  %374 = bitcast <4 x i32> %373 to <2 x i64>
  %375 = extractelement <2 x i64> %374, i32 0
  %376 = extractelement <2 x i64> %374, i32 1
  %377 = bitcast i64 %375 to <2 x i32>
  %378 = shufflevector <2 x i32> %377, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %379 = bitcast i64 %376 to <2 x i32>
  %380 = shufflevector <2 x i32> %379, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %381 = shufflevector <4 x i32> %378, <4 x i32> %380, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %382 = bitcast <4 x i32> %381 to <2 x i64>
  %383 = and <2 x i64> %382, <i64 -4647714812233515008, i64 -4647714812233515008>
  %384 = extractelement <2 x i64> %383, i32 0
  %385 = extractelement <2 x i64> %383, i32 1
  %386 = bitcast i64 %384 to <2 x i32>
  %387 = shufflevector <2 x i32> %386, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %388 = bitcast i64 %385 to <2 x i32>
  %389 = shufflevector <2 x i32> %388, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %390 = shufflevector <4 x i32> %387, <4 x i32> %389, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %391 = xor <2 x i64> %382, <i64 -1, i64 -1>
  %392 = extractelement <2 x i64> %391, i32 0
  %393 = extractelement <2 x i64> %391, i32 1
  %394 = bitcast i64 %392 to <2 x i32>
  %395 = shufflevector <2 x i32> %394, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %396 = bitcast i64 %393 to <2 x i32>
  %397 = shufflevector <2 x i32> %396, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %398 = shufflevector <4 x i32> %395, <4 x i32> %397, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %399 = bitcast <4 x float> %371 to <2 x i64>
  %400 = extractelement <2 x i64> %399, i32 0
  %401 = bitcast i64 %400 to <2 x i32>
  %402 = shufflevector <4 x float> %371, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %403 = bitcast <2 x float> %402 to <2 x i32>
  %404 = shufflevector <2 x i32> %401, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %405 = shufflevector <2 x i32> %403, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %406 = shufflevector <4 x i32> %404, <4 x i32> %405, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %407 = and <4 x i32> %398, %406
  %408 = bitcast <4 x i32> %407 to <2 x i64>
  %409 = extractelement <2 x i64> %408, i32 0
  %410 = extractelement <2 x i64> %408, i32 1
  %411 = bitcast i64 %409 to <2 x i32>
  %412 = shufflevector <2 x i32> %411, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %413 = bitcast i64 %410 to <2 x i32>
  %414 = shufflevector <2 x i32> %413, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %415 = shufflevector <4 x i32> %412, <4 x i32> %414, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %416 = or <4 x i32> %415, %390
  %417 = bitcast <4 x i32> %416 to <2 x i64>
  %418 = extractelement <2 x i64> %417, i32 0
  %419 = extractelement <2 x i64> %417, i32 1
  %420 = bitcast i64 %418 to <2 x float>
  %421 = bitcast i64 %419 to <2 x float>
  %422 = shufflevector <2 x float> %420, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %423 = shufflevector <2 x float> %421, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %424 = shufflevector <4 x float> %422, <4 x float> %423, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %425 = fmul <4 x float> %424, %424
  %426 = fmul <4 x float> %425, <float 0x3FED7F4180000000, float 0x3FED7F4180000000, float 0x3FED7F4180000000, float 0x3FED7F4180000000>
  %427 = fadd <4 x float> %426, <float 0xBFEE0D3C20000000, float 0xBFEE0D3C20000000, float 0xBFEE0D3C20000000, float 0xBFEE0D3C20000000>
  %428 = fmul <4 x float> %425, <float 0x3FD2EB8180000000, float 0x3FD2EB8180000000, float 0x3FD2EB8180000000, float 0x3FD2EB8180000000>
  %429 = fadd <4 x float> %428, <float 0xBFF48DAEE0000000, float 0xBFF48DAEE0000000, float 0xBFF48DAEE0000000, float 0xBFF48DAEE0000000>
  %430 = fmul <4 x float> %425, %429
  %431 = fadd <4 x float> %430, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %432 = fdiv <4 x float> %427, %431
  %433 = fmul <4 x float> %424, %432
  %434 = fadd <4 x float> %433, <float 0x3FF921FB60000000, float 0x3FF921FB60000000, float 0x3FF921FB60000000, float 0x3FF921FB60000000>
  %435 = fadd <4 x float> %434, <float 0xBF912843C0000000, float 0xBF912843C0000000, float 0xBF912843C0000000, float 0xBF912843C0000000>
  %436 = fdiv <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, %435
  %437 = shufflevector <4 x float> %436, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %438 = shufflevector <4 x float> %436, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  store <2 x float> %437, <2 x float>* %216, align 16
  store <2 x float> %438, <2 x float>* %217, align 8
  store i32 0, i32* %200, align 4
  br label %439

439:                                              ; preds = %350, %360
  %440 = phi i32 [ 0, %360 ], [ %351, %350 ]
  %441 = add nsw i32 %440, 1
  store i32 %441, i32* %200, align 4
  %442 = sext i32 %440 to i64
  %443 = getelementptr inbounds %class.GrStrokeToleranceBuffer, %class.GrStrokeToleranceBuffer* %9, i64 0, i32 1, i64 %442
  %444 = load float, float* %443, align 4
  %445 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 1, i32 3
  %446 = load i32, i32* %445, align 4
  %447 = lshr i32 %446, 16
  %448 = trunc i32 %447 to i8
  store float %444, float* %218, align 8
  %449 = insertelement <2 x float> undef, float %444, i32 0
  %450 = shufflevector <2 x float> %449, <2 x float> undef, <2 x i32> zeroinitializer
  %451 = fmul <2 x float> %450, <float 0x400921FB60000000, float 0x401921FB60000000>
  %452 = extractelement <2 x float> %451, i32 0
  %453 = call float @ceilf(float %452) #11
  %454 = extractelement <2 x float> %451, i32 1
  %455 = call float @ceilf(float %454) #11
  %456 = insertelement <2 x float> undef, float %453, i32 0
  %457 = insertelement <2 x float> %456, float %455, i32 1
  %458 = fcmp uge <2 x float> %457, <float 1.000000e+00, float 1.000000e+00>
  %459 = bitcast float %453 to i32
  %460 = bitcast float %455 to i32
  %461 = insertelement <2 x i32> undef, i32 %459, i32 0
  %462 = insertelement <2 x i32> %461, i32 %460, i32 1
  %463 = select <2 x i1> %458, <2 x i32> %462, <2 x i32> <i32 1065353216, i32 1065353216>
  %464 = extractelement <2 x i32> %463, i32 0
  %465 = extractelement <2 x i32> %463, i32 1
  %466 = zext i32 %465 to i64
  %467 = shl nuw i64 %466, 32
  %468 = zext i32 %464 to i64
  %469 = or i64 %467, %468
  %470 = bitcast i64 %469 to <2 x float>
  %471 = load i32, i32* %72, align 16
  %472 = add nsw i32 %471, 1
  %473 = sitofp i32 %472 to float
  %474 = insertelement <2 x float> undef, float %473, i32 0
  %475 = shufflevector <2 x float> %474, <2 x float> undef, <2 x i32> zeroinitializer
  %476 = fsub <2 x float> %475, %470
  %477 = fcmp uge <2 x float> %476, zeroinitializer
  %478 = bitcast <2 x float> %476 to <2 x i32>
  %479 = select <2 x i1> %477, <2 x i32> %478, <2 x i32> zeroinitializer
  %480 = extractelement <2 x i32> %479, i32 0
  %481 = extractelement <2 x i32> %479, i32 1
  %482 = zext i32 %481 to i64
  %483 = shl nuw i64 %482, 32
  %484 = zext i32 %480 to i64
  %485 = or i64 %483, %484
  %486 = bitcast i64 %485 to <2 x float>
  %487 = fmul <2 x float> %486, %486
  %488 = fmul <2 x float> %487, %487
  store <2 x float> %488, <2 x float>* %220, align 4
  %489 = extractelement <2 x float> %470, i32 0
  %490 = and i32 %447, 255
  switch i8 %448, label %494 [
    i8 2, label %491
    i8 0, label %492
    i8 1, label %493
  ]

491:                                              ; preds = %439
  br label %494

492:                                              ; preds = %439
  br label %494

493:                                              ; preds = %439
  br label %494

494:                                              ; preds = %439, %491, %492, %493
  %495 = phi float [ 0xFFFFFFFFE0000000, %439 ], [ %489, %493 ], [ 2.000000e+00, %492 ], [ 1.000000e+00, %491 ]
  %496 = insertelement <2 x float> undef, float %495, i32 0
  %497 = shufflevector <2 x float> %496, <2 x float> undef, <2 x i32> zeroinitializer
  %498 = fsub <2 x float> %486, %497
  %499 = fadd <2 x float> %498, <float -1.000000e+00, float -1.000000e+00>
  %500 = fcmp uge <2 x float> %499, zeroinitializer
  %501 = bitcast <2 x float> %499 to <2 x i32>
  %502 = select <2 x i1> %500, <2 x i32> %501, <2 x i32> zeroinitializer
  %503 = extractelement <2 x i32> %502, i32 0
  %504 = extractelement <2 x i32> %502, i32 1
  %505 = zext i32 %504 to i64
  %506 = shl nuw i64 %505, 32
  %507 = zext i32 %503 to i64
  %508 = or i64 %506, %507
  %509 = bitcast i64 %508 to <2 x float>
  %510 = fmul <2 x float> %509, %509
  %511 = fmul <2 x float> %510, %510
  store <2 x float> %511, <2 x float>* %222, align 4
  %512 = sitofp i32 %471 to float
  %513 = fsub float %512, %495
  %514 = fadd float %513, -1.000000e+00
  store float %514, float* %223, align 4
  %515 = fcmp ole float %489, %512
  %516 = zext i1 %515 to i8
  store i8 %516, i8* %224, align 16
  store i32 %490, i32* %225, align 4
  %517 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 1, i32 1
  %518 = load float, float* %517, align 4
  %519 = fmul float %518, 5.000000e-01
  store float %519, float* %226, align 4
  %520 = load i32, i32* %445, align 4
  %521 = lshr i32 %520, 16
  %522 = trunc i32 %521 to i8
  switch i8 %522, label %527 [
    i8 1, label %528
    i8 2, label %523
    i8 0, label %524
  ]

523:                                              ; preds = %494
  br label %528

524:                                              ; preds = %494
  %525 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 1, i32 2
  %526 = load float, float* %525, align 4
  br label %528

527:                                              ; preds = %494
  call void @llvm.trap() #11
  unreachable

528:                                              ; preds = %494, %523, %524
  %529 = phi float [ %526, %524 ], [ 0.000000e+00, %523 ], [ -1.000000e+00, %494 ]
  store float %529, float* %227, align 4
  br label %530

530:                                              ; preds = %344, %528
  %531 = and i32 %347, 4
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %544, label %533

533:                                              ; preds = %530
  %534 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 2
  %535 = load i32, i32* %24, align 16
  %536 = and i32 %535, 1
  %537 = icmp eq i32 %536, 0
  %538 = trunc i32 %536 to i8
  br i1 %537, label %541, label %539

539:                                              ; preds = %533
  %540 = bitcast %struct.SkRGBA4f* %534 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %229, i8* align 4 %540, i64 16, i1 false) #11
  br label %543

541:                                              ; preds = %533
  %542 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f* %534) #11
  store i32 %542, i32* %230, align 4
  br label %543

543:                                              ; preds = %539, %541
  store i8 %538, i8* %231, align 4
  br label %544

544:                                              ; preds = %530, %543
  %545 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 0
  %546 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 0, i32 0, i32 0
  %547 = load %class.SkPathRef*, %class.SkPathRef** %546, align 8
  %548 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %547, i64 0, i32 4, i32 0
  %549 = bitcast i8** %548 to i64*
  %550 = load i64, i64* %549, align 8
  %551 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %547, i64 0, i32 9
  %552 = load i8, i8* %551, align 8
  %553 = icmp eq i8 %552, 0
  br i1 %553, label %554, label %558

554:                                              ; preds = %544
  %555 = inttoptr i64 %550 to i8*
  %556 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %547, i64 0, i32 10
  %557 = load i8, i8* %556, align 1, !range !2
  br label %570

558:                                              ; preds = %544
  %559 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %547, i64 0, i32 1
  %560 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %547, i64 0, i32 3, i32 0
  %561 = load %struct.SkPoint*, %struct.SkPoint** %560, align 8
  %562 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %547, i64 0, i32 3, i32 2
  %563 = load i32, i32* %562, align 4
  %564 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %559, %struct.SkPoint* %561, i32 %563) #11
  %565 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %547, i64 0, i32 10
  %566 = zext i1 %564 to i8
  store i8 %566, i8* %565, align 1
  store i8 0, i8* %551, align 8
  %567 = load %class.SkPathRef*, %class.SkPathRef** %546, align 8
  %568 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %567, i64 0, i32 4, i32 0
  %569 = load i8*, i8** %568, align 8
  br label %570

570:                                              ; preds = %558, %554
  %571 = phi i8* [ %555, %554 ], [ %569, %558 ]
  %572 = phi %class.SkPathRef* [ %547, %554 ], [ %567, %558 ]
  %573 = phi i8 [ %557, %554 ], [ %566, %558 ]
  %574 = icmp eq i8 %573, 0
  br i1 %574, label %582, label %575

575:                                              ; preds = %570
  %576 = icmp eq i8* %571, null
  br i1 %576, label %582, label %577

577:                                              ; preds = %575
  %578 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %572, i64 0, i32 4, i32 2
  %579 = load i32, i32* %578, align 4
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds i8, i8* %571, i64 %580
  br label %582

582:                                              ; preds = %570, %575, %577
  %583 = phi i8* [ %581, %577 ], [ null, %575 ], [ %571, %570 ]
  %584 = inttoptr i64 %550 to i8*
  %585 = icmp eq i8* %583, %584
  br i1 %585, label %1245, label %586

586:                                              ; preds = %582
  %587 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %572, i64 0, i32 5, i32 0
  %588 = bitcast float** %587 to i64*
  %589 = load i64, i64* %588, align 8
  %590 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %572, i64 0, i32 3, i32 0
  %591 = load %struct.SkPoint*, %struct.SkPoint** %590, align 8
  br label %594

592:                                              ; preds = %1231
  %593 = icmp eq i8 %1216, 0
  br i1 %593, label %1235, label %1245

594:                                              ; preds = %586, %1231
  %595 = phi i8* [ %1217, %1231 ], [ %584, %586 ]
  %596 = phi i8 [ %1216, %1231 ], [ 1, %586 ]
  %597 = phi i64 [ %1233, %1231 ], [ %589, %586 ]
  %598 = phi %struct.SkPoint* [ %1232, %1231 ], [ %591, %586 ]
  %599 = load i8, i8* %595, align 1, !noalias !3
  switch i8 %599, label %600 [
    i8 0, label %601
    i8 1, label %637
    i8 2, label %659
    i8 3, label %779
    i8 4, label %904
    i8 5, label %611
  ]

600:                                              ; preds = %594
  call void @llvm.trap() #11, !noalias !3
  unreachable

601:                                              ; preds = %594
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %232) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %305, i8 -1, i64 32, i1 false)
  %602 = and i8 %596, 1
  %603 = icmp eq i8 %602, 0
  br i1 %603, label %604, label %608

604:                                              ; preds = %601
  %605 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1
  %606 = bitcast %struct.SkPoint* %605 to <2 x float>*
  %607 = load <2 x float>, <2 x float>* %606, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter9writeCapsE7SkPointRK8SkMatrixRK11SkStrokeRec(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, <2 x float> %607, %class.SkMatrix* dereferenceable(40) %18, %class.SkStrokeRec* dereferenceable(16) %346)
  br label %608

608:                                              ; preds = %601, %604
  %609 = bitcast %struct.SkPoint* %598 to i64*
  %610 = load i64, i64* %609, align 4
  store i64 %610, i64* %284, align 4
  store i8 0, i8* %85, align 8
  br label %1215

611:                                              ; preds = %594
  %612 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %232) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %299, i8 -1, i64 32, i1 false)
  %613 = bitcast %struct.SkPoint* %612 to <2 x float>*
  %614 = load <2 x float>, <2 x float>* %613, align 4
  %615 = load i8, i8* %85, align 8, !range !2
  %616 = icmp eq i8 %615, 0
  br i1 %616, label %617, label %618

617:                                              ; preds = %611
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter9writeCapsE7SkPointRK8SkMatrixRK11SkStrokeRec(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, <2 x float> %614, %class.SkMatrix* dereferenceable(40) %18, %class.SkStrokeRec* dereferenceable(16) %346) #11
  br label %1215

618:                                              ; preds = %611
  %619 = load <2 x float>, <2 x float>* %281, align 4
  %620 = load i32, i32* %225, align 4
  %621 = extractelement <2 x float> %614, i32 0
  %622 = extractelement <2 x float> %619, i32 0
  %623 = fcmp oeq float %621, %622
  br i1 %623, label %624, label %628

624:                                              ; preds = %618
  %625 = extractelement <2 x float> %614, i32 1
  %626 = extractelement <2 x float> %619, i32 1
  %627 = fcmp oeq float %625, %626
  br i1 %627, label %633, label %628

628:                                              ; preds = %624, %618
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %614, <2 x float>* %250, align 16
  store <2 x float> %614, <2 x float>* %252, align 8
  store <2 x float> %619, <2 x float>* %254, align 16
  store <2 x float> %619, <2 x float>* %256, align 8
  %629 = load float, float* %223, align 4
  %630 = fcmp oge float %629, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %620, i1 zeroext %630, %struct.SkPoint* nonnull %249, <2 x float> %619) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  %631 = load i32, i32* %225, align 4
  %632 = load <2 x float>, <2 x float>* %281, align 4
  br label %633

633:                                              ; preds = %628, %624
  %634 = phi <2 x float> [ %619, %624 ], [ %632, %628 ]
  %635 = phi i32 [ %620, %624 ], [ %631, %628 ]
  %636 = load <2 x float>, <2 x float>* %283, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %635, <2 x float> %634, <2 x float> %636, i32 -1) #11
  store i8 0, i8* %85, align 8
  br label %1215

637:                                              ; preds = %594
  %638 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %232) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %304, i8 -1, i64 32, i1 false)
  %639 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %638, i64 0, i32 0
  %640 = load float, float* %639, align 4
  %641 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 0
  %642 = load float, float* %641, align 4
  %643 = fcmp oeq float %640, %642
  br i1 %643, label %644, label %650

644:                                              ; preds = %637
  %645 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1, i32 1
  %646 = load float, float* %645, align 4
  %647 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 1
  %648 = load float, float* %647, align 4
  %649 = fcmp oeq float %646, %648
  br i1 %649, label %1215, label %650

650:                                              ; preds = %637, %644
  %651 = load float, float* %223, align 4
  %652 = fcmp oge float %651, 1.000000e+00
  %653 = bitcast %struct.SkPoint* %638 to i64*
  %654 = load i64, i64* %653, align 4
  store i64 %654, i64* %276, align 8
  store i64 %654, i64* %277, align 16
  %655 = bitcast %struct.SkPoint* %598 to i64*
  %656 = load i64, i64* %655, align 4
  store i64 %656, i64* %278, align 8
  store i64 %656, i64* %279, align 16
  %657 = bitcast %struct.SkPoint* %638 to <2 x float>*
  %658 = load <2 x float>, <2 x float>* %657, align 4
  br label %1116

659:                                              ; preds = %594
  %660 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %232) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %303, i8 -1, i64 32, i1 false)
  %661 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 0
  %662 = load float, float* %661, align 4
  %663 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %660, i64 0, i32 0
  %664 = load float, float* %663, align 4
  %665 = fcmp oeq float %662, %664
  br i1 %665, label %666, label %672

666:                                              ; preds = %659
  %667 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 1
  %668 = load float, float* %667, align 4
  %669 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1, i32 1
  %670 = load float, float* %669, align 4
  %671 = fcmp oeq float %668, %670
  br i1 %671, label %683, label %672

672:                                              ; preds = %659, %666
  %673 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 1
  %674 = bitcast %struct.SkPoint* %673 to <2 x float>*
  %675 = load <2 x float>, <2 x float>* %674, align 4
  %676 = extractelement <2 x float> %675, i32 0
  %677 = fcmp oeq float %662, %676
  %678 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 1
  %679 = load float, float* %678, align 4
  %680 = extractelement <2 x float> %675, i32 1
  %681 = fcmp oeq float %679, %680
  %682 = and i1 %677, %681
  br i1 %682, label %683, label %700

683:                                              ; preds = %672, %666
  %684 = bitcast %struct.SkPoint* %660 to <2 x float>*
  %685 = load <2 x float>, <2 x float>* %684, align 4
  %686 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 1
  %687 = bitcast %struct.SkPoint* %686 to <2 x float>*
  %688 = load <2 x float>, <2 x float>* %687, align 4
  %689 = load i32, i32* %225, align 4
  %690 = extractelement <2 x float> %685, i32 0
  %691 = extractelement <2 x float> %688, i32 0
  %692 = fcmp oeq float %690, %691
  br i1 %692, label %693, label %697

693:                                              ; preds = %683
  %694 = extractelement <2 x float> %685, i32 1
  %695 = extractelement <2 x float> %688, i32 1
  %696 = fcmp oeq float %694, %695
  br i1 %696, label %1215, label %697

697:                                              ; preds = %693, %683
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %685, <2 x float>* %250, align 16
  store <2 x float> %685, <2 x float>* %252, align 8
  store <2 x float> %688, <2 x float>* %254, align 16
  store <2 x float> %688, <2 x float>* %256, align 8
  %698 = load float, float* %223, align 4
  %699 = fcmp oge float %698, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %689, i1 zeroext %699, %struct.SkPoint* nonnull %249, <2 x float> %688) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %1215

700:                                              ; preds = %672
  %701 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1, i32 1
  %702 = load float, float* %701, align 4
  %703 = insertelement <2 x float> undef, float %662, i32 0
  %704 = insertelement <2 x float> %703, float %679, i32 1
  %705 = insertelement <2 x float> undef, float %664, i32 0
  %706 = insertelement <2 x float> %705, float %702, i32 1
  %707 = fsub <2 x float> %704, %706
  %708 = fsub <2 x float> %675, %704
  %709 = shufflevector <2 x float> %708, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %710 = fmul <2 x float> %707, %709
  %711 = extractelement <2 x float> %710, i32 0
  %712 = extractelement <2 x float> %710, i32 1
  %713 = fsub float %711, %712
  %714 = fcmp oeq float %713, 0.000000e+00
  br i1 %714, label %715, label %749

715:                                              ; preds = %700
  %716 = fmul <2 x float> %707, %708
  %717 = extractelement <2 x float> %716, i32 0
  %718 = extractelement <2 x float> %716, i32 1
  %719 = fadd float %717, %718
  %720 = fcmp olt float %719, 0.000000e+00
  br i1 %720, label %721, label %749

721:                                              ; preds = %715
  %722 = call float @_Z20SkFindQuadMidTangentPK7SkPoint(%struct.SkPoint* %660) #11
  %723 = call <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint* %660, float %722) #11
  %724 = bitcast %struct.SkPoint* %660 to <2 x float>*
  %725 = load <2 x float>, <2 x float>* %724, align 4
  %726 = load i32, i32* %225, align 4
  %727 = extractelement <2 x float> %725, i32 0
  %728 = extractelement <2 x float> %723, i32 0
  %729 = fcmp oeq float %727, %728
  br i1 %729, label %730, label %734

730:                                              ; preds = %721
  %731 = extractelement <2 x float> %725, i32 1
  %732 = extractelement <2 x float> %723, i32 1
  %733 = fcmp oeq float %731, %732
  br i1 %733, label %737, label %734

734:                                              ; preds = %730, %721
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %725, <2 x float>* %250, align 16
  store <2 x float> %725, <2 x float>* %252, align 8
  store <2 x float> %723, <2 x float>* %254, align 16
  store <2 x float> %723, <2 x float>* %256, align 8
  %735 = load float, float* %223, align 4
  %736 = fcmp oge float %735, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %726, i1 zeroext %736, %struct.SkPoint* nonnull %249, <2 x float> %723) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %737

737:                                              ; preds = %730, %734
  %738 = bitcast %struct.SkPoint* %673 to <2 x float>*
  %739 = load <2 x float>, <2 x float>* %738, align 4
  %740 = extractelement <2 x float> %739, i32 0
  %741 = fcmp oeq float %728, %740
  br i1 %741, label %742, label %746

742:                                              ; preds = %737
  %743 = extractelement <2 x float> %723, i32 1
  %744 = extractelement <2 x float> %739, i32 1
  %745 = fcmp oeq float %743, %744
  br i1 %745, label %1215, label %746

746:                                              ; preds = %742, %737
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %723, <2 x float>* %250, align 16
  store <2 x float> %723, <2 x float>* %252, align 8
  store <2 x float> %739, <2 x float>* %254, align 16
  store <2 x float> %739, <2 x float>* %256, align 8
  %747 = load float, float* %223, align 4
  %748 = fcmp oge float %747, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 3, i1 zeroext %748, %struct.SkPoint* nonnull %249, <2 x float> %739) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %1215

749:                                              ; preds = %700, %715
  %750 = load float, float* %83, align 4
  %751 = bitcast %struct.SkPoint* %660 to <2 x float>*
  %752 = load <2 x float>, <2 x float>* %751, align 4
  %753 = bitcast %struct.SkPoint* %598 to <2 x float>*
  %754 = load <2 x float>, <2 x float>* %753, align 4
  %755 = bitcast %struct.SkPoint* %673 to <2 x float>*
  %756 = load <2 x float>, <2 x float>* %755, align 4
  %757 = fmul <2 x float> %754, <float -2.000000e+00, float -2.000000e+00>
  %758 = fadd <2 x float> %752, %757
  %759 = fadd <2 x float> %756, %758
  %760 = fmul <2 x float> %759, %759
  %761 = extractelement <2 x float> %760, i32 0
  %762 = extractelement <2 x float> %760, i32 1
  %763 = fadd float %761, %762
  %764 = fmul float %750, %750
  %765 = fmul float %764, 6.250000e-02
  %766 = fmul float %765, %763
  %767 = load float, float* %219, align 4
  %768 = fcmp ult float %767, %766
  br i1 %768, label %777, label %769

769:                                              ; preds = %749
  %770 = load float, float* %221, align 4
  %771 = fcmp oge float %770, %766
  %772 = fmul <2 x float> %754, <float 0x3FE5555560000000, float 0x3FE5555560000000>
  %773 = fmul <2 x float> %752, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %774 = fadd <2 x float> %773, %772
  %775 = fmul <2 x float> %756, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %776 = fadd <2 x float> %772, %775
  store <2 x float> %752, <2 x float>* %272, align 16
  store <2 x float> %774, <2 x float>* %273, align 8
  store <2 x float> %776, <2 x float>* %274, align 16
  store <2 x float> %756, <2 x float>* %275, align 8
  br label %1116

777:                                              ; preds = %749
  %778 = load i32, i32* %225, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter22internalConicPatchesToENS0_8JoinTypeEPK7SkPointfi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %778, %struct.SkPoint* %660, float 1.000000e+00, i32 -1) #11
  br label %1215

779:                                              ; preds = %594
  %780 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %232) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %301, i8 -1, i64 32, i1 false)
  %781 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 0
  %782 = load float, float* %781, align 4
  %783 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %780, i64 0, i32 0
  %784 = load float, float* %783, align 4
  %785 = fcmp oeq float %782, %784
  br i1 %785, label %786, label %792

786:                                              ; preds = %779
  %787 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 1
  %788 = load float, float* %787, align 4
  %789 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1, i32 1
  %790 = load float, float* %789, align 4
  %791 = fcmp oeq float %788, %790
  br i1 %791, label %803, label %792

792:                                              ; preds = %779, %786
  %793 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 1
  %794 = bitcast %struct.SkPoint* %793 to <2 x float>*
  %795 = load <2 x float>, <2 x float>* %794, align 4
  %796 = extractelement <2 x float> %795, i32 0
  %797 = fcmp oeq float %782, %796
  %798 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 1
  %799 = load float, float* %798, align 4
  %800 = extractelement <2 x float> %795, i32 1
  %801 = fcmp oeq float %799, %800
  %802 = and i1 %797, %801
  br i1 %802, label %803, label %820

803:                                              ; preds = %792, %786
  %804 = bitcast %struct.SkPoint* %780 to <2 x float>*
  %805 = load <2 x float>, <2 x float>* %804, align 4
  %806 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 1
  %807 = bitcast %struct.SkPoint* %806 to <2 x float>*
  %808 = load <2 x float>, <2 x float>* %807, align 4
  %809 = load i32, i32* %225, align 4
  %810 = extractelement <2 x float> %805, i32 0
  %811 = extractelement <2 x float> %808, i32 0
  %812 = fcmp oeq float %810, %811
  br i1 %812, label %813, label %817

813:                                              ; preds = %803
  %814 = extractelement <2 x float> %805, i32 1
  %815 = extractelement <2 x float> %808, i32 1
  %816 = fcmp oeq float %814, %815
  br i1 %816, label %1215, label %817

817:                                              ; preds = %813, %803
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %805, <2 x float>* %250, align 16
  store <2 x float> %805, <2 x float>* %252, align 8
  store <2 x float> %808, <2 x float>* %254, align 16
  store <2 x float> %808, <2 x float>* %256, align 8
  %818 = load float, float* %223, align 4
  %819 = fcmp oge float %818, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %809, i1 zeroext %819, %struct.SkPoint* nonnull %249, <2 x float> %808) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %1215

820:                                              ; preds = %792
  %821 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1, i32 1
  %822 = load float, float* %821, align 4
  %823 = insertelement <2 x float> undef, float %782, i32 0
  %824 = insertelement <2 x float> %823, float %799, i32 1
  %825 = insertelement <2 x float> undef, float %784, i32 0
  %826 = insertelement <2 x float> %825, float %822, i32 1
  %827 = fsub <2 x float> %824, %826
  %828 = fsub <2 x float> %795, %824
  %829 = shufflevector <2 x float> %828, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %830 = fmul <2 x float> %827, %829
  %831 = extractelement <2 x float> %830, i32 0
  %832 = extractelement <2 x float> %830, i32 1
  %833 = fsub float %831, %832
  %834 = fcmp oeq float %833, 0.000000e+00
  br i1 %834, label %835, label %873

835:                                              ; preds = %820
  %836 = fmul <2 x float> %827, %828
  %837 = extractelement <2 x float> %836, i32 0
  %838 = extractelement <2 x float> %836, i32 1
  %839 = fadd float %837, %838
  %840 = fcmp olt float %839, 0.000000e+00
  br i1 %840, label %841, label %873

841:                                              ; preds = %835
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %269) #11
  %842 = inttoptr i64 %597 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %302, i8 -1, i64 28, i1 false)
  %843 = load i32, i32* %842, align 4
  %844 = bitcast %struct.SkPoint* %780 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %269, i8* align 4 %844, i64 24, i1 false) #11
  store i32 %843, i32* %271, align 4
  %845 = call float @_ZNK7SkConic14findMidTangentEv(%struct.SkConic* nonnull %11) #11
  %846 = call <2 x float> @_ZNK7SkConic6evalAtEf(%struct.SkConic* nonnull %11, float %845) #11
  %847 = bitcast %struct.SkPoint* %780 to <2 x float>*
  %848 = load <2 x float>, <2 x float>* %847, align 4
  %849 = load i32, i32* %225, align 4
  %850 = extractelement <2 x float> %848, i32 0
  %851 = extractelement <2 x float> %846, i32 0
  %852 = fcmp oeq float %850, %851
  br i1 %852, label %853, label %857

853:                                              ; preds = %841
  %854 = extractelement <2 x float> %848, i32 1
  %855 = extractelement <2 x float> %846, i32 1
  %856 = fcmp oeq float %854, %855
  br i1 %856, label %860, label %857

857:                                              ; preds = %853, %841
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %848, <2 x float>* %250, align 16
  store <2 x float> %848, <2 x float>* %252, align 8
  store <2 x float> %846, <2 x float>* %254, align 16
  store <2 x float> %846, <2 x float>* %256, align 8
  %858 = load float, float* %223, align 4
  %859 = fcmp oge float %858, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %849, i1 zeroext %859, %struct.SkPoint* nonnull %249, <2 x float> %846) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %860

860:                                              ; preds = %853, %857
  %861 = bitcast %struct.SkPoint* %793 to <2 x float>*
  %862 = load <2 x float>, <2 x float>* %861, align 4
  %863 = extractelement <2 x float> %862, i32 0
  %864 = fcmp oeq float %851, %863
  br i1 %864, label %865, label %869

865:                                              ; preds = %860
  %866 = extractelement <2 x float> %846, i32 1
  %867 = extractelement <2 x float> %862, i32 1
  %868 = fcmp oeq float %866, %867
  br i1 %868, label %872, label %869

869:                                              ; preds = %865, %860
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %846, <2 x float>* %250, align 16
  store <2 x float> %846, <2 x float>* %252, align 8
  store <2 x float> %862, <2 x float>* %254, align 16
  store <2 x float> %862, <2 x float>* %256, align 8
  %870 = load float, float* %223, align 4
  %871 = fcmp oge float %870, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 3, i1 zeroext %871, %struct.SkPoint* nonnull %249, <2 x float> %862) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %872

872:                                              ; preds = %865, %869
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %269) #11
  br label %1215

873:                                              ; preds = %820, %835
  %874 = load float, float* %83, align 4
  %875 = bitcast %struct.SkPoint* %780 to <2 x float>*
  %876 = load <2 x float>, <2 x float>* %875, align 4
  %877 = bitcast %struct.SkPoint* %598 to <2 x float>*
  %878 = load <2 x float>, <2 x float>* %877, align 4
  %879 = bitcast %struct.SkPoint* %793 to <2 x float>*
  %880 = load <2 x float>, <2 x float>* %879, align 4
  %881 = fmul <2 x float> %878, <float -2.000000e+00, float -2.000000e+00>
  %882 = fadd <2 x float> %876, %881
  %883 = fadd <2 x float> %880, %882
  %884 = fmul <2 x float> %883, %883
  %885 = extractelement <2 x float> %884, i32 0
  %886 = extractelement <2 x float> %884, i32 1
  %887 = fadd float %885, %886
  %888 = fmul float %874, %874
  %889 = fmul float %888, 6.250000e-02
  %890 = fmul float %889, %887
  %891 = load float, float* %219, align 4
  %892 = fcmp ult float %891, %890
  br i1 %892, label %900, label %893

893:                                              ; preds = %873
  %894 = load float, float* %221, align 4
  %895 = fcmp oge float %894, %890
  %896 = inttoptr i64 %597 to i32*
  %897 = load i32, i32* %896, align 4
  %898 = bitcast %struct.SkPoint* %780 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %232, i8* align 4 %898, i64 24, i1 false) #11
  store i32 %897, i32* %267, align 8
  store i32 2139095040, i32* %268, align 4
  %899 = load <2 x float>, <2 x float>* %877, align 4
  br label %1116

900:                                              ; preds = %873
  %901 = inttoptr i64 %597 to float*
  %902 = load float, float* %901, align 4
  %903 = load i32, i32* %225, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter22internalConicPatchesToENS0_8JoinTypeEPK7SkPointfi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %903, %struct.SkPoint* %780, float %902, i32 -1) #11
  br label %1215

904:                                              ; preds = %594
  %905 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %232) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %300, i8 -1, i64 32, i1 false)
  %906 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 1
  %907 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 0
  %908 = load float, float* %907, align 4
  %909 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %906, i64 0, i32 0
  %910 = load float, float* %909, align 4
  %911 = fcmp oeq float %908, %910
  br i1 %911, label %912, label %951

912:                                              ; preds = %904
  %913 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 0, i32 1
  %914 = load float, float* %913, align 4
  %915 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 1, i32 1
  %916 = load float, float* %915, align 4
  %917 = fcmp oeq float %914, %916
  br i1 %917, label %918, label %951

918:                                              ; preds = %912
  %919 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %905, i64 0, i32 0
  %920 = load float, float* %919, align 4
  %921 = fcmp oeq float %908, %920
  br i1 %921, label %922, label %926

922:                                              ; preds = %918
  %923 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 -1, i32 1
  %924 = load float, float* %923, align 4
  %925 = fcmp oeq float %914, %924
  br i1 %925, label %934, label %926

926:                                              ; preds = %918, %922
  %927 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 2, i32 0
  %928 = load float, float* %927, align 4
  %929 = fcmp oeq float %908, %928
  br i1 %929, label %930, label %951

930:                                              ; preds = %926
  %931 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 2, i32 1
  %932 = load float, float* %931, align 4
  %933 = fcmp oeq float %914, %932
  br i1 %933, label %934, label %951

934:                                              ; preds = %930, %922
  %935 = bitcast %struct.SkPoint* %905 to <2 x float>*
  %936 = load <2 x float>, <2 x float>* %935, align 4
  %937 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 2
  %938 = bitcast %struct.SkPoint* %937 to <2 x float>*
  %939 = load <2 x float>, <2 x float>* %938, align 4
  %940 = load i32, i32* %225, align 4
  %941 = extractelement <2 x float> %936, i32 0
  %942 = extractelement <2 x float> %939, i32 0
  %943 = fcmp oeq float %941, %942
  br i1 %943, label %944, label %948

944:                                              ; preds = %934
  %945 = extractelement <2 x float> %936, i32 1
  %946 = extractelement <2 x float> %939, i32 1
  %947 = fcmp oeq float %945, %946
  br i1 %947, label %1215, label %948

948:                                              ; preds = %944, %934
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %936, <2 x float>* %250, align 16
  store <2 x float> %936, <2 x float>* %252, align 8
  store <2 x float> %939, <2 x float>* %254, align 16
  store <2 x float> %939, <2 x float>* %256, align 8
  %949 = load float, float* %223, align 4
  %950 = fcmp oge float %949, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %940, i1 zeroext %950, %struct.SkPoint* nonnull %249, <2 x float> %939) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %1215

951:                                              ; preds = %926, %904, %912, %930
  %952 = load float, float* %83, align 4
  %953 = bitcast %struct.SkPoint* %905 to <2 x float>*
  %954 = load <2 x float>, <2 x float>* %953, align 1
  %955 = bitcast %struct.SkPoint* %598 to <2 x float>*
  %956 = load <2 x float>, <2 x float>* %955, align 1
  %957 = bitcast %struct.SkPoint* %906 to <2 x float>*
  %958 = load <2 x float>, <2 x float>* %957, align 1
  %959 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 2
  %960 = bitcast %struct.SkPoint* %959 to <2 x float>*
  %961 = load <2 x float>, <2 x float>* %960, align 1
  %962 = shufflevector <2 x float> %958, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %963 = shufflevector <2 x float> %961, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %964 = shufflevector <4 x float> %962, <4 x float> %963, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %965 = shufflevector <2 x float> %956, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %966 = shufflevector <2 x float> %958, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %967 = shufflevector <4 x float> %965, <4 x float> %966, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %968 = shufflevector <2 x float> %954, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %969 = shufflevector <2 x float> %956, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %970 = shufflevector <4 x float> %968, <4 x float> %969, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %971 = fmul <4 x float> %967, <float -2.000000e+00, float -2.000000e+00, float -2.000000e+00, float -2.000000e+00>
  %972 = fadd <4 x float> %970, %971
  %973 = fadd <4 x float> %964, %972
  %974 = fmul <4 x float> %973, %973
  %975 = shufflevector <4 x float> %974, <4 x float> undef, <2 x i32> <i32 0, i32 2>
  %976 = shufflevector <4 x float> %974, <4 x float> undef, <2 x i32> <i32 1, i32 3>
  %977 = fadd <2 x float> %975, %976
  %978 = extractelement <2 x float> %977, i32 0
  %979 = extractelement <2 x float> %977, i32 1
  %980 = fcmp olt float %978, %979
  %981 = select i1 %980, float %979, float %978
  %982 = fmul float %952, %952
  %983 = fmul float %982, 5.625000e-01
  %984 = fmul float %983, %981
  %985 = load float, float* %238, align 4
  %986 = fcmp ult float %985, %984
  %987 = extractelement <2 x float> %961, i32 0
  br i1 %986, label %1039, label %988

988:                                              ; preds = %951
  %989 = fsub <2 x float> %956, %954
  %990 = fsub <2 x float> %958, %956
  %991 = fsub <2 x float> %961, %954
  %992 = fsub <2 x float> %990, %989
  %993 = fmul <2 x float> %990, <float -3.000000e+00, float -3.000000e+00>
  %994 = fadd <2 x float> %993, %991
  %995 = shufflevector <2 x float> %992, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %996 = fmul <2 x float> %995, %994
  %997 = extractelement <2 x float> %996, i32 0
  %998 = extractelement <2 x float> %996, i32 1
  %999 = fsub float %997, %998
  %1000 = shufflevector <2 x float> %989, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %1001 = fmul <2 x float> %1000, %994
  %1002 = extractelement <2 x float> %1001, i32 0
  %1003 = extractelement <2 x float> %1001, i32 1
  %1004 = fsub float %1002, %1003
  %1005 = fmul <2 x float> %1000, %992
  %1006 = extractelement <2 x float> %1005, i32 0
  %1007 = extractelement <2 x float> %1005, i32 1
  %1008 = fsub float %1006, %1007
  %1009 = fmul float %1004, %1004
  %1010 = fmul float %999, 4.000000e+00
  %1011 = fmul float %1008, %1010
  %1012 = fsub float %1009, %1011
  %1013 = fmul float %999, 0x3F50000000000000
  %1014 = fmul float %1013, %1013
  %1015 = call float @llvm.fabs.f32(float %1012) #11
  %1016 = fcmp ugt float %1015, %1014
  br i1 %1016, label %1104, label %1017

1017:                                             ; preds = %988
  %1018 = fcmp oeq <2 x float> %954, %956
  %1019 = sext <2 x i1> %1018 to <2 x i32>
  %1020 = extractelement <2 x i32> %1019, i32 0
  %1021 = extractelement <2 x i32> %1019, i32 1
  %1022 = icmp ne i32 %1020, 0
  %1023 = icmp ne i32 %1021, 0
  %1024 = and i1 %1022, %1023
  br i1 %1024, label %1033, label %1025

1025:                                             ; preds = %1017
  %1026 = fcmp oeq <2 x float> %958, %961
  %1027 = sext <2 x i1> %1026 to <2 x i32>
  %1028 = extractelement <2 x i32> %1027, i32 0
  %1029 = extractelement <2 x i32> %1027, i32 1
  %1030 = icmp ne i32 %1028, 0
  %1031 = icmp ne i32 %1029, 0
  %1032 = and i1 %1030, %1031
  br i1 %1032, label %1033, label %1039

1033:                                             ; preds = %1017, %1025
  %1034 = fcmp oeq float %999, 0.000000e+00
  %1035 = fcmp oeq float %1004, 0.000000e+00
  %1036 = and i1 %1034, %1035
  %1037 = fcmp oeq float %1008, 0.000000e+00
  %1038 = and i1 %1037, %1036
  br i1 %1038, label %1039, label %1104

1039:                                             ; preds = %951, %1025, %1033
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %240) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %240, i8 -1, i64 80, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #11
  store float 0xFFFFFFFFE0000000, float* %242, align 4
  store float 0xFFFFFFFFE0000000, float* %243, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 -86, i8* %7, align 1
  %1040 = call i32 @_ZN11GrPathUtils23findCubicConvex180ChopsEPK7SkPointPfPb(%struct.SkPoint* %905, float* nonnull %242, i8* nonnull %7) #11
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1039
  %1043 = load i32, i32* %225, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %1043, %struct.SkPoint* %905, i32 -1) #11
  br label %1115

1044:                                             ; preds = %1039
  %1045 = icmp eq i32 %1040, 1
  %1046 = load float, float* %242, align 4
  br i1 %1045, label %1047, label %1054

1047:                                             ; preds = %1044
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* %905, %struct.SkPoint* nonnull %244, float %1046) #11
  %1048 = load i8, i8* %7, align 1, !range !2
  %1049 = icmp eq i8 %1048, 0
  br i1 %1049, label %1052, label %1050

1050:                                             ; preds = %1047
  %1051 = load i64, i64* %262, align 8
  store i64 %1051, i64* %263, align 16
  store i64 %1051, i64* %265, align 16
  br label %1052

1052:                                             ; preds = %1050, %1047
  %1053 = load i32, i32* %225, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %1053, %struct.SkPoint* nonnull %244, i32 -1) #11
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 3, %struct.SkPoint* %246, i32 -1) #11
  br label %1115

1054:                                             ; preds = %1044
  %1055 = load float, float* %243, align 4
  call void @_Z13SkChopCubicAtPK7SkPointPS_ff(%struct.SkPoint* %905, %struct.SkPoint* nonnull %244, float %1046, float %1055) #11
  %1056 = load i8, i8* %7, align 1, !range !2
  %1057 = icmp eq i8 %1056, 0
  br i1 %1057, label %1102, label %1058

1058:                                             ; preds = %1054
  %1059 = load <2 x float>, <2 x float>* %245, align 16
  %1060 = load <2 x float>, <2 x float>* %247, align 8
  %1061 = load i32, i32* %225, align 4
  %1062 = extractelement <2 x float> %1059, i32 0
  %1063 = extractelement <2 x float> %1060, i32 0
  %1064 = fcmp oeq float %1062, %1063
  br i1 %1064, label %1065, label %1069

1065:                                             ; preds = %1058
  %1066 = extractelement <2 x float> %1059, i32 1
  %1067 = extractelement <2 x float> %1060, i32 1
  %1068 = fcmp oeq float %1066, %1067
  br i1 %1068, label %1074, label %1069

1069:                                             ; preds = %1065, %1058
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %1059, <2 x float>* %250, align 16
  store <2 x float> %1059, <2 x float>* %252, align 8
  store <2 x float> %1060, <2 x float>* %254, align 16
  store <2 x float> %1060, <2 x float>* %256, align 8
  %1070 = load float, float* %223, align 4
  %1071 = fcmp oge float %1070, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %1061, i1 zeroext %1071, %struct.SkPoint* nonnull %249, <2 x float> %1060) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  %1072 = load <2 x float>, <2 x float>* %247, align 8
  %1073 = extractelement <2 x float> %1072, i32 0
  br label %1074

1074:                                             ; preds = %1069, %1065
  %1075 = phi float [ %1063, %1065 ], [ %1073, %1069 ]
  %1076 = phi <2 x float> [ %1060, %1065 ], [ %1072, %1069 ]
  %1077 = load <2 x float>, <2 x float>* %258, align 16
  %1078 = extractelement <2 x float> %1077, i32 0
  %1079 = fcmp oeq float %1075, %1078
  br i1 %1079, label %1080, label %1084

1080:                                             ; preds = %1074
  %1081 = extractelement <2 x float> %1076, i32 1
  %1082 = extractelement <2 x float> %1077, i32 1
  %1083 = fcmp oeq float %1081, %1082
  br i1 %1083, label %1089, label %1084

1084:                                             ; preds = %1080, %1074
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %1076, <2 x float>* %250, align 16
  store <2 x float> %1076, <2 x float>* %252, align 8
  store <2 x float> %1077, <2 x float>* %254, align 16
  store <2 x float> %1077, <2 x float>* %256, align 8
  %1085 = load float, float* %223, align 4
  %1086 = fcmp oge float %1085, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 3, i1 zeroext %1086, %struct.SkPoint* nonnull %249, <2 x float> %1077) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  %1087 = load <2 x float>, <2 x float>* %258, align 16
  %1088 = extractelement <2 x float> %1087, i32 0
  br label %1089

1089:                                             ; preds = %1084, %1080
  %1090 = phi float [ %1078, %1080 ], [ %1088, %1084 ]
  %1091 = phi <2 x float> [ %1077, %1080 ], [ %1087, %1084 ]
  %1092 = load <2 x float>, <2 x float>* %260, align 8
  %1093 = extractelement <2 x float> %1092, i32 0
  %1094 = fcmp oeq float %1090, %1093
  br i1 %1094, label %1095, label %1099

1095:                                             ; preds = %1089
  %1096 = extractelement <2 x float> %1091, i32 1
  %1097 = extractelement <2 x float> %1092, i32 1
  %1098 = fcmp oeq float %1096, %1097
  br i1 %1098, label %1115, label %1099

1099:                                             ; preds = %1095, %1089
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  store <2 x float> %1091, <2 x float>* %250, align 16
  store <2 x float> %1091, <2 x float>* %252, align 8
  store <2 x float> %1092, <2 x float>* %254, align 16
  store <2 x float> %1092, <2 x float>* %256, align 8
  %1100 = load float, float* %223, align 4
  %1101 = fcmp oge float %1100, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 3, i1 zeroext %1101, %struct.SkPoint* nonnull %249, <2 x float> %1092) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  br label %1115

1102:                                             ; preds = %1054
  %1103 = load i32, i32* %225, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %1103, %struct.SkPoint* nonnull %244, i32 -1) #11
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 3, %struct.SkPoint* %246, i32 -1) #11
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 3, %struct.SkPoint* %257, i32 -1) #11
  br label %1115

1104:                                             ; preds = %988, %1033
  %1105 = load float, float* %239, align 4
  %1106 = fcmp oge float %1105, %984
  %1107 = fcmp une float %910, %987
  br i1 %1107, label %1114, label %1108

1108:                                             ; preds = %1104
  %1109 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 1, i32 1
  %1110 = load float, float* %1109, align 4
  %1111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 2, i32 1
  %1112 = load float, float* %1111, align 4
  %1113 = fcmp une float %1110, %1112
  br i1 %1113, label %1114, label %1116

1114:                                             ; preds = %1104, %1108
  br label %1116

1115:                                             ; preds = %1102, %1099, %1095, %1052, %1042
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %240) #11
  br label %1215

1116:                                             ; preds = %1108, %1114, %893, %769, %650
  %1117 = phi <2 x float> [ %658, %650 ], [ %776, %769 ], [ %899, %893 ], [ %958, %1114 ], [ %956, %1108 ]
  %1118 = phi %struct.SkPoint* [ %233, %650 ], [ %233, %769 ], [ %233, %893 ], [ %905, %1114 ], [ %905, %1108 ]
  %1119 = phi i1 [ %652, %650 ], [ %771, %769 ], [ %895, %893 ], [ %1106, %1114 ], [ %1106, %1108 ]
  %1120 = load i8, i8* %85, align 8, !range !2
  %1121 = icmp eq i8 %1120, 0
  br i1 %1121, label %1122, label %1141

1122:                                             ; preds = %1116
  store i8 1, i8* %85, align 8
  %1123 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 1
  %1124 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1123, i64 0, i32 0
  %1125 = load float, float* %1124, align 4
  %1126 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 0, i32 0
  %1127 = load float, float* %1126, align 4
  %1128 = fcmp une float %1125, %1127
  br i1 %1128, label %1136, label %1129

1129:                                             ; preds = %1122
  %1130 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 1, i32 1
  %1131 = load float, float* %1130, align 4
  %1132 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 0, i32 1
  %1133 = load float, float* %1132, align 4
  %1134 = fcmp une float %1131, %1133
  %1135 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 2
  br i1 %1134, label %1136, label %1137

1136:                                             ; preds = %1129, %1122
  br label %1137

1137:                                             ; preds = %1136, %1129
  %1138 = phi %struct.SkPoint* [ %1123, %1136 ], [ %1135, %1129 ]
  %1139 = bitcast %struct.SkPoint* %1138 to i64*
  %1140 = load i64, i64* %1139, align 4
  store i64 %1140, i64* %287, align 4
  br label %1163

1141:                                             ; preds = %1116
  br i1 %1119, label %1166, label %1142

1142:                                             ; preds = %1141
  %1143 = load i32, i32* %225, align 4
  %1144 = bitcast %struct.SkPoint* %1118 to <2 x float>*
  %1145 = load <2 x float>, <2 x float>* %1144, align 4
  %1146 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 1
  %1147 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1146, i64 0, i32 0
  %1148 = load float, float* %1147, align 4
  %1149 = extractelement <2 x float> %1145, i32 0
  %1150 = fcmp une float %1148, %1149
  br i1 %1150, label %1158, label %1151

1151:                                             ; preds = %1142
  %1152 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 1, i32 1
  %1153 = load float, float* %1152, align 4
  %1154 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 0, i32 1
  %1155 = load float, float* %1154, align 4
  %1156 = fcmp une float %1153, %1155
  %1157 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1118, i64 2
  br i1 %1156, label %1158, label %1159

1158:                                             ; preds = %1151, %1142
  br label %1159

1159:                                             ; preds = %1158, %1151
  %1160 = phi %struct.SkPoint* [ %1146, %1158 ], [ %1157, %1151 ]
  %1161 = bitcast %struct.SkPoint* %1160 to <2 x float>*
  %1162 = load <2 x float>, <2 x float>* %1161, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, i32 %1143, <2 x float> %1145, <2 x float> %1162, i32 -1) #11
  br label %1163

1163:                                             ; preds = %1137, %1159
  %1164 = bitcast %struct.SkPoint* %1118 to i64*
  %1165 = load i64, i64* %1164, align 4
  store i64 %1165, i64* %286, align 4
  br label %1166

1166:                                             ; preds = %1163, %1141
  %1167 = load i32, i32* %70, align 8, !noalias !6
  %1168 = load i32, i32* %71, align 4, !noalias !6
  %1169 = icmp slt i32 %1167, %1168
  br i1 %1169, label %1174, label %1170

1170:                                             ; preds = %1166
  %1171 = call zeroext i1 @_ZN20GrVertexChunkBuilder10allocChunkEi(%class.GrVertexChunkBuilder* %288, i32 1) #11, !noalias !6
  br i1 %1171, label %1172, label %1214

1172:                                             ; preds = %1170
  %1173 = load i32, i32* %70, align 8, !noalias !6
  br label %1174

1174:                                             ; preds = %1172, %1166
  %1175 = phi i32 [ %1173, %1172 ], [ %1167, %1166 ]
  %1176 = add nsw i32 %1175, 1
  store i32 %1176, i32* %70, align 8, !noalias !6
  %1177 = load i64, i64* %68, align 16, !noalias !6
  %1178 = load i8*, i8** %290, align 16, !noalias !6
  %1179 = getelementptr inbounds i8, i8* %1178, i64 %1177
  %1180 = ptrtoint i8* %1179 to i64
  store i64 %1180, i64* %291, align 16, !noalias !11
  %1181 = icmp eq i8* %1178, null
  br i1 %1181, label %1214, label %1182

1182:                                             ; preds = %1174
  %1183 = bitcast i8* %1178 to i64*
  %1184 = load i64, i64* %286, align 4
  store i64 %1184, i64* %1183, align 1
  %1185 = getelementptr inbounds i8, i8* %1178, i64 8
  %1186 = bitcast %struct.SkPoint* %1118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1185, i8* align 4 %1186, i64 32, i1 false) #11
  %1187 = getelementptr inbounds i8, i8* %1178, i64 40
  %1188 = load i32, i32* %24, align 16
  %1189 = and i32 %1188, 2
  %1190 = icmp eq i32 %1189, 0
  br i1 %1190, label %1195, label %1191

1191:                                             ; preds = %1182
  %1192 = bitcast i8* %1187 to i64*
  %1193 = load i64, i64* %293, align 4
  store i64 %1193, i64* %1192, align 1
  %1194 = getelementptr inbounds i8, i8* %1178, i64 48
  br label %1195

1195:                                             ; preds = %1191, %1182
  %1196 = phi i8* [ %1187, %1182 ], [ %1194, %1191 ]
  %1197 = and i32 %1188, 4
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1214, label %1199

1199:                                             ; preds = %1195
  %1200 = bitcast i8* %1196 to i32*
  %1201 = load i32, i32* %294, align 4
  store i32 %1201, i32* %1200, align 1
  %1202 = load i8, i8* %231, align 4, !range !2
  %1203 = icmp eq i8 %1202, 0
  br i1 %1203, label %1214, label %1204

1204:                                             ; preds = %1199
  %1205 = getelementptr inbounds i8, i8* %1196, i64 4
  %1206 = bitcast i8* %1205 to i32*
  %1207 = load i32, i32* %295, align 4
  store i32 %1207, i32* %1206, align 1
  %1208 = getelementptr inbounds i8, i8* %1196, i64 8
  %1209 = bitcast i8* %1208 to i32*
  %1210 = load i32, i32* %296, align 4
  store i32 %1210, i32* %1209, align 1
  %1211 = getelementptr inbounds i8, i8* %1196, i64 12
  %1212 = bitcast i8* %1211 to i32*
  %1213 = load i32, i32* %297, align 4
  store i32 %1213, i32* %1212, align 1
  br label %1214

1214:                                             ; preds = %1170, %1174, %1195, %1199, %1204
  store <2 x float> %1117, <2 x float>* %298, align 4
  br label %1215

1215:                                             ; preds = %1115, %948, %944, %900, %817, %813, %777, %746, %742, %697, %693, %633, %617, %644, %1214, %872, %608
  %1216 = phi i8 [ 0, %1214 ], [ 0, %1115 ], [ 0, %872 ], [ 0, %900 ], [ 0, %777 ], [ 1, %608 ], [ 0, %644 ], [ 1, %617 ], [ 1, %633 ], [ 0, %693 ], [ 0, %697 ], [ 0, %742 ], [ 0, %746 ], [ 0, %813 ], [ 0, %817 ], [ 0, %944 ], [ 0, %948 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %232) #11
  %1217 = getelementptr inbounds i8, i8* %595, i64 1
  %1218 = load i8, i8* %595, align 1
  switch i8 %1218, label %1222 [
    i8 0, label %1223
    i8 1, label %1223
    i8 2, label %1219
    i8 3, label %1226
    i8 4, label %1220
    i8 5, label %1221
  ]

1219:                                             ; preds = %1215
  br label %1223

1220:                                             ; preds = %1215
  br label %1223

1221:                                             ; preds = %1215
  br label %1223

1222:                                             ; preds = %1215
  call void @llvm.trap() #11
  unreachable

1223:                                             ; preds = %1221, %1220, %1219, %1215, %1215
  %1224 = phi i64 [ 1, %1215 ], [ 1, %1215 ], [ 2, %1219 ], [ 3, %1220 ], [ 0, %1221 ]
  %1225 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 %1224
  br label %1231

1226:                                             ; preds = %1215
  %1227 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %598, i64 2
  %1228 = inttoptr i64 %597 to float*
  %1229 = getelementptr inbounds float, float* %1228, i64 1
  %1230 = ptrtoint float* %1229 to i64
  br label %1231

1231:                                             ; preds = %1223, %1226
  %1232 = phi %struct.SkPoint* [ %1225, %1223 ], [ %1227, %1226 ]
  %1233 = phi i64 [ %597, %1223 ], [ %1230, %1226 ]
  %1234 = icmp eq i8* %583, %1217
  br i1 %1234, label %592, label %594

1235:                                             ; preds = %592
  %1236 = load %class.SkPathRef*, %class.SkPathRef** %546, align 8
  %1237 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1236, i64 0, i32 3, i32 0
  %1238 = load %struct.SkPoint*, %struct.SkPoint** %1237, align 8
  %1239 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %545) #11
  %1240 = add nsw i32 %1239, -1
  %1241 = sext i32 %1240 to i64
  %1242 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1238, i64 %1241
  %1243 = bitcast %struct.SkPoint* %1242 to <2 x float>*
  %1244 = load <2 x float>, <2 x float>* %1243, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter9writeCapsE7SkPointRK8SkMatrixRK11SkStrokeRec(%"class.(anonymous namespace)::PatchWriter"* nonnull %8, <2 x float> %1244, %class.SkMatrix* dereferenceable(40) %18, %class.SkStrokeRec* dereferenceable(16) %346)
  br label %1245

1245:                                             ; preds = %582, %592, %1235
  %1246 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %345, i64 0, i32 3
  %1247 = load %"struct.GrStrokeTessellator::PathStrokeList"*, %"struct.GrStrokeTessellator::PathStrokeList"** %1246, align 8
  %1248 = icmp eq %"struct.GrStrokeTessellator::PathStrokeList"* %1247, null
  br i1 %1248, label %310, label %344

1249:                                             ; preds = %353
  %1250 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %358, i64 0, i32 1, i32 1
  %1251 = bitcast float* %1250 to i32*
  %1252 = load i32, i32* %1251, align 4
  store i32 %1252, i32* %307, align 4
  %1253 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %358, i64 0, i32 3
  %1254 = load %"struct.GrStrokeTessellator::PathStrokeList"*, %"struct.GrStrokeTessellator::PathStrokeList"** %1253, align 8
  %1255 = icmp eq %"struct.GrStrokeTessellator::PathStrokeList"* %1254, null
  br i1 %1255, label %360, label %1256

1256:                                             ; preds = %1249
  %1257 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %1254, i64 0, i32 1, i32 1
  %1258 = bitcast float* %1257 to i32*
  %1259 = load i32, i32* %1258, align 4
  store i32 %1259, i32* %308, align 8
  %1260 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %1254, i64 0, i32 3
  %1261 = load %"struct.GrStrokeTessellator::PathStrokeList"*, %"struct.GrStrokeTessellator::PathStrokeList"** %1260, align 8
  %1262 = icmp eq %"struct.GrStrokeTessellator::PathStrokeList"* %1261, null
  br i1 %1262, label %360, label %1263

1263:                                             ; preds = %1256
  %1264 = getelementptr inbounds %"struct.GrStrokeTessellator::PathStrokeList", %"struct.GrStrokeTessellator::PathStrokeList"* %1261, i64 0, i32 1, i32 1
  %1265 = bitcast float* %1264 to i32*
  %1266 = load i32, i32* %1265, align 4
  store i32 %1266, i32* %309, align 4
  br label %360
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111PatchWriter9writeCapsE7SkPointRK8SkMatrixRK11SkStrokeRec(%"class.(anonymous namespace)::PatchWriter"*, <2 x float>, %class.SkMatrix* dereferenceable(40), %class.SkStrokeRec* dereferenceable(16)) unnamed_addr #2 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca [4 x %struct.SkPoint], align 16
  %8 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %42

11:                                               ; preds = %4
  %12 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %3) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %18 = load float, float* %17, align 4
  %19 = fsub float -0.000000e+00, %16
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi float [ %18, %14 ], [ 1.000000e+00, %11 ]
  %22 = phi float [ %19, %14 ], [ 0.000000e+00, %11 ]
  %23 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 13
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fsub float %25, %21
  %27 = insertelement <2 x float> undef, float %26, i32 0
  %28 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 13, i32 1
  %29 = load float, float* %28, align 4
  %30 = fsub float %29, %22
  %31 = insertelement <2 x float> %27, float %30, i32 1
  %32 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 14
  %33 = bitcast %struct.SkPoint* %32 to <2 x float>*
  store <2 x float> %31, <2 x float>* %33, align 4
  %34 = fadd float %21, %25
  %35 = insertelement <2 x float> undef, float %34, i32 0
  %36 = fadd float %22, %29
  %37 = insertelement <2 x float> %35, float %36, i32 1
  %38 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %39 = bitcast %struct.SkPoint* %38 to <2 x float>*
  store <2 x float> %37, <2 x float>* %39, align 4
  store i8 1, i8* %8, align 8
  %40 = bitcast %struct.SkPoint* %23 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  br label %42

42:                                               ; preds = %4, %20
  %43 = phi <2 x float> [ %41, %20 ], [ %1, %4 ]
  %44 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %3, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = trunc i32 %45 to i16
  switch i16 %46, label %184 [
    i16 2, label %60
    i16 1, label %47
  ]

47:                                               ; preds = %42
  %48 = and i32 %45, 16711680
  %49 = icmp eq i32 %48, 65536
  %50 = select i1 %49, i32 1, i32 3
  %51 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %52 = bitcast %struct.SkPoint* %51 to <2 x float>*
  %53 = load <2 x float>, <2 x float>* %52, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %50, <2 x float> %43, <2 x float> %53, i32 -1)
  %54 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 13
  %55 = bitcast %struct.SkPoint* %54 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  %57 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 14
  %58 = bitcast %struct.SkPoint* %57 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  store <2 x float> %59, <2 x float>* %52, align 4
  store i8 1, i8* %8, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %50, <2 x float> %56, <2 x float> %59, i32 -1)
  br label %184

60:                                               ; preds = %42
  %61 = lshr i32 %45, 16
  %62 = and i32 %61, 255
  %63 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %64 = bitcast %struct.SkPoint* %63 to <2 x float>*
  %65 = load <2 x float>, <2 x float>* %64, align 4
  %66 = fsub <2 x float> %43, %65
  %67 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %3) #11
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %3, i64 0, i32 1
  %71 = load float, float* %70, align 4
  %72 = fmul float %71, 5.000000e-01
  %73 = extractelement <2 x float> %66, i32 0
  %74 = extractelement <2 x float> %66, i32 1
  %75 = tail call float @_ZN7SkPoint6LengthEff(float %73, float %74) #11
  %76 = fdiv float %72, %75
  br label %89

77:                                               ; preds = %60
  %78 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %80 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %79, i64 0, i32 1
  %82 = extractelement <2 x float> %66, i32 0
  store float %82, float* %80, align 8
  %83 = extractelement <2 x float> %66, i32 1
  store float %83, float* %81, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %79, %struct.SkPoint* nonnull %79, i32 1) #11
  %84 = load <2 x float>, <2 x float>* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  %85 = extractelement <2 x float> %84, i32 0
  %86 = extractelement <2 x float> %84, i32 1
  %87 = call float @_ZN7SkPoint6LengthEff(float %85, float %86) #11
  %88 = fdiv float 5.000000e-01, %87
  br label %89

89:                                               ; preds = %77, %69
  %90 = phi float [ %88, %77 ], [ %76, %69 ]
  %91 = insertelement <2 x float> undef, float %90, i32 0
  %92 = shufflevector <2 x float> %91, <2 x float> undef, <2 x i32> zeroinitializer
  %93 = fmul <2 x float> %66, %92
  %94 = fadd <2 x float> %43, %93
  %95 = extractelement <2 x float> %94, i32 0
  %96 = extractelement <2 x float> %94, i32 1
  %97 = extractelement <2 x float> %43, i32 0
  %98 = fcmp oeq float %97, %95
  %99 = extractelement <2 x float> %43, i32 1
  %100 = fcmp oeq float %99, %96
  %101 = and i1 %98, %100
  br i1 %101, label %115, label %102

102:                                              ; preds = %89
  %103 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #11
  %104 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0
  %105 = bitcast [4 x %struct.SkPoint]* %7 to <2 x float>*
  store <2 x float> %43, <2 x float>* %105, align 16
  %106 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1
  %107 = bitcast %struct.SkPoint* %106 to <2 x float>*
  store <2 x float> %43, <2 x float>* %107, align 8
  %108 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2
  %109 = bitcast %struct.SkPoint* %108 to <2 x float>*
  store <2 x float> %94, <2 x float>* %109, align 16
  %110 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3
  %111 = bitcast %struct.SkPoint* %110 to <2 x float>*
  store <2 x float> %94, <2 x float>* %111, align 8
  %112 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 9
  %113 = load float, float* %112, align 4
  %114 = fcmp oge float %113, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %62, i1 zeroext %114, %struct.SkPoint* nonnull %104, <2 x float> %94) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #11
  br label %115

115:                                              ; preds = %89, %102
  %116 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 13
  %117 = bitcast %struct.SkPoint* %116 to <2 x float>*
  %118 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 14
  %119 = bitcast %struct.SkPoint* %118 to i64*
  %120 = load i64, i64* %119, align 4
  %121 = bitcast %struct.SkPoint* %63 to i64*
  store i64 %120, i64* %121, align 4
  store i8 1, i8* %8, align 8
  %122 = trunc i64 %120 to i32
  %123 = bitcast i32 %122 to float
  %124 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 14, i32 1
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 13, i32 1
  %127 = bitcast %struct.SkPoint* %116 to <2 x float>*
  %128 = load <2 x float>, <2 x float>* %127, align 4
  %129 = insertelement <2 x float> undef, float %123, i32 0
  %130 = insertelement <2 x float> %129, float %125, i32 1
  %131 = fsub <2 x float> %130, %128
  %132 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %3) #11
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %141, label %134

134:                                              ; preds = %115
  %135 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %3, i64 0, i32 1
  %136 = load float, float* %135, align 4
  %137 = fmul float %136, -5.000000e-01
  %138 = extractelement <2 x float> %131, i32 0
  %139 = extractelement <2 x float> %131, i32 1
  %140 = call float @_ZN7SkPoint6LengthEff(float %138, float %139) #11
  br label %152

141:                                              ; preds = %115
  %142 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142)
  %143 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %144 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  %145 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %143, i64 0, i32 1
  %146 = extractelement <2 x float> %131, i32 0
  store float %146, float* %144, align 8
  %147 = extractelement <2 x float> %131, i32 1
  store float %147, float* %145, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* nonnull %143, %struct.SkPoint* nonnull %143, i32 1) #11
  %148 = load <2 x float>, <2 x float>* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142)
  %149 = extractelement <2 x float> %148, i32 0
  %150 = extractelement <2 x float> %148, i32 1
  %151 = call float @_ZN7SkPoint6LengthEff(float %149, float %150) #11
  br label %152

152:                                              ; preds = %141, %134
  %153 = phi float [ %151, %141 ], [ %140, %134 ]
  %154 = phi float [ -5.000000e-01, %141 ], [ %137, %134 ]
  %155 = fdiv float %154, %153
  %156 = insertelement <2 x float> undef, float %155, i32 0
  %157 = shufflevector <2 x float> %156, <2 x float> undef, <2 x i32> zeroinitializer
  %158 = fmul <2 x float> %131, %157
  %159 = load <2 x float>, <2 x float>* %117, align 4
  %160 = extractelement <2 x float> %159, i32 0
  %161 = load float, float* %126, align 4
  %162 = insertelement <2 x float> undef, float %160, i32 0
  %163 = insertelement <2 x float> %162, float %161, i32 1
  %164 = fadd <2 x float> %158, %163
  %165 = extractelement <2 x float> %164, i32 0
  %166 = extractelement <2 x float> %164, i32 1
  %167 = fcmp oeq float %160, %165
  %168 = extractelement <2 x float> %159, i32 1
  %169 = fcmp oeq float %168, %166
  %170 = and i1 %167, %169
  br i1 %170, label %184, label %171

171:                                              ; preds = %152
  %172 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172) #11
  %173 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0
  %174 = bitcast [4 x %struct.SkPoint]* %7 to <2 x float>*
  store <2 x float> %159, <2 x float>* %174, align 16
  %175 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1
  %176 = bitcast %struct.SkPoint* %175 to <2 x float>*
  store <2 x float> %159, <2 x float>* %176, align 8
  %177 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2
  %178 = bitcast %struct.SkPoint* %177 to <2 x float>*
  store <2 x float> %164, <2 x float>* %178, align 16
  %179 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3
  %180 = bitcast %struct.SkPoint* %179 to <2 x float>*
  store <2 x float> %164, <2 x float>* %180, align 8
  %181 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 9
  %182 = load float, float* %181, align 4
  %183 = fcmp oge float %182, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %62, i1 zeroext %183, %struct.SkPoint* nonnull %173, <2 x float> %164) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %172) #11
  br label %184

184:                                              ; preds = %152, %171, %42, %47
  store i8 0, i8* %8, align 8
  ret void
}

declare <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint*, float) local_unnamed_addr #3

declare float @_Z20SkFindQuadMidTangentPK7SkPoint(%struct.SkPoint*) local_unnamed_addr #3

declare <2 x float> @_ZNK7SkConic6evalAtEf(%struct.SkConic*, float) local_unnamed_addr #3

declare float @_ZNK7SkConic14findMidTangentEv(%struct.SkConic*) local_unnamed_addr #3

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK27GrStrokeHardwareTessellator4drawEP14GrOpFlushState(%class.GrStrokeHardwareTessellator* nocapture readonly, %class.GrOpFlushState* nocapture readonly) unnamed_addr #4 align 2 {
  %3 = alloca %class.sk_sp.16, align 8
  %4 = alloca %class.sk_sp.16, align 8
  %5 = alloca %class.sk_sp.16, align 8
  %6 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %7 = bitcast i8* %6 to %struct.GrVertexChunk**
  %8 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %7, align 8
  %9 = icmp eq %struct.GrVertexChunk* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = and i64 %14, 2147483647
  %16 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %8, i64 %15
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %10
  %19 = bitcast %class.sk_sp.16* %3 to i8*
  %20 = bitcast %class.sk_sp.16* %4 to i8*
  %21 = bitcast %class.sk_sp.16* %5 to i8*
  %22 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %23 = bitcast %class.sk_sp.16* %3 to i64*
  %24 = bitcast %class.sk_sp.16* %4 to i64*
  %25 = bitcast %class.sk_sp.16* %5 to i64*
  %26 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %5, i64 0, i32 0
  %27 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %4, i64 0, i32 0
  %28 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %3, i64 0, i32 0
  br label %30

29:                                               ; preds = %66, %2, %10
  ret void

30:                                               ; preds = %18, %66
  %31 = phi %struct.GrVertexChunk* [ %8, %18 ], [ %72, %66 ]
  %32 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %31, i64 0, i32 0, i32 0
  %33 = load %class.GrBuffer*, %class.GrBuffer** %32, align 8
  %34 = icmp eq %class.GrBuffer* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.GrBuffer* %33 to void (%class.GrBuffer*)***
  %37 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %37, i64 2
  %39 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %38, align 8
  call void %39(%class.GrBuffer* nonnull %33) #11
  br label %40

40:                                               ; preds = %30, %35
  %41 = ptrtoint %class.GrBuffer* %33 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %42 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %22, align 8
  store i64 0, i64* %23, align 8
  store i64 0, i64* %24, align 8
  store i64 %41, i64* %25, align 8
  call void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass* %42, %class.sk_sp.16* nonnull %3, %class.sk_sp.16* nonnull %4, %class.sk_sp.16* nonnull %5, i1 zeroext false) #11
  %43 = load %class.GrBuffer*, %class.GrBuffer** %26, align 8
  %44 = icmp eq %class.GrBuffer* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = bitcast %class.GrBuffer* %43 to void (%class.GrBuffer*)***
  %47 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %47, i64 3
  %49 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %48, align 8
  call void %49(%class.GrBuffer* nonnull %43) #11
  br label %50

50:                                               ; preds = %45, %40
  %51 = load %class.GrBuffer*, %class.GrBuffer** %27, align 8
  %52 = icmp eq %class.GrBuffer* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = bitcast %class.GrBuffer* %51 to void (%class.GrBuffer*)***
  %55 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %55, i64 3
  %57 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %56, align 8
  call void %57(%class.GrBuffer* nonnull %51) #11
  br label %58

58:                                               ; preds = %53, %50
  %59 = load %class.GrBuffer*, %class.GrBuffer** %28, align 8
  %60 = icmp eq %class.GrBuffer* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = bitcast %class.GrBuffer* %59 to void (%class.GrBuffer*)***
  %63 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %63, i64 3
  %65 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %64, align 8
  call void %65(%class.GrBuffer* nonnull %59) #11
  br label %66

66:                                               ; preds = %61, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %67 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %31, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %31, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %22, align 8
  call void @_ZN15GrOpsRenderPass4drawEii(%class.GrOpsRenderPass* %71, i32 %68, i32 %70) #11
  %72 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %31, i64 1
  %73 = icmp eq %struct.GrVertexChunk* %72, %16
  br i1 %73, label %29, label %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrStrokeHardwareTessellatorD2Ev(%class.GrStrokeHardwareTessellator*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27GrStrokeHardwareTessellator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %struct.GrVertexChunk**
  br label %15

11:                                               ; preds = %28, %1
  %12 = phi i64 [ %6, %1 ], [ %29, %28 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %34

15:                                               ; preds = %28, %9
  %16 = phi i64 [ %6, %9 ], [ %29, %28 ]
  %17 = phi i64 [ 0, %9 ], [ %30, %28 ]
  %18 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %10, align 8
  %19 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %18, i64 %17, i32 0, i32 0
  %20 = load %class.GrBuffer*, %class.GrBuffer** %19, align 8
  %21 = icmp eq %class.GrBuffer* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = bitcast %class.GrBuffer* %20 to void (%class.GrBuffer*)***
  %24 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %24, i64 3
  %26 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %25, align 8
  tail call void %26(%class.GrBuffer* nonnull %20) #11
  %27 = load i64, i64* %5, align 8
  br label %28

28:                                               ; preds = %22, %15
  %29 = phi i64 [ %16, %15 ], [ %27, %22 ]
  %30 = add nuw nsw i64 %17, 1
  %31 = lshr i64 %29, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %15, label %11

34:                                               ; preds = %11
  %35 = bitcast i8* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #11
  br label %37

37:                                               ; preds = %11, %34
  %38 = bitcast %class.GrStrokeHardwareTessellator* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV19GrStrokeTessellator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14GrStrokeShader, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %38, align 8
  %39 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 6, i32 0, i32 0, i64 88
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 6, i32 0, i32 0, i64 80
  %46 = bitcast i8* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #11
  br label %48

48:                                               ; preds = %37, %44
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN27GrStrokeHardwareTessellatorD0Ev(%class.GrStrokeHardwareTessellator*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27GrStrokeHardwareTessellator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 1, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %struct.GrVertexChunk**
  br label %15

11:                                               ; preds = %28, %1
  %12 = phi i64 [ %6, %1 ], [ %29, %28 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %34

15:                                               ; preds = %28, %9
  %16 = phi i64 [ %6, %9 ], [ %29, %28 ]
  %17 = phi i64 [ 0, %9 ], [ %30, %28 ]
  %18 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %10, align 8
  %19 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %18, i64 %17, i32 0, i32 0
  %20 = load %class.GrBuffer*, %class.GrBuffer** %19, align 8
  %21 = icmp eq %class.GrBuffer* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = bitcast %class.GrBuffer* %20 to void (%class.GrBuffer*)***
  %24 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %24, i64 3
  %26 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %25, align 8
  tail call void %26(%class.GrBuffer* nonnull %20) #11
  %27 = load i64, i64* %5, align 8
  br label %28

28:                                               ; preds = %22, %15
  %29 = phi i64 [ %16, %15 ], [ %27, %22 ]
  %30 = add nuw nsw i64 %17, 1
  %31 = lshr i64 %29, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %15, label %11

34:                                               ; preds = %11
  %35 = bitcast i8* %3 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #11
  br label %37

37:                                               ; preds = %34, %11
  %38 = bitcast %class.GrStrokeHardwareTessellator* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV19GrStrokeTessellator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14GrStrokeShader, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %38, align 8
  %39 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 6, i32 0, i32 0, i64 88
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %class.GrStrokeHardwareTessellator, %class.GrStrokeHardwareTessellator* %0, i64 0, i32 0, i32 1, i32 6, i32 0, i32 0, i64 80
  %46 = bitcast i8* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #11
  br label %48

48:                                               ; preds = %37, %44
  %49 = bitcast %class.GrStrokeHardwareTessellator* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare float @acosf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind readnone
declare float @ceilf(float) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType2EE12toBytes_RGBAEv(%struct.SkRGBA4f*) local_unnamed_addr #3

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"*, i32, <2 x float>, <2 x float>, i32) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %158, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 10
  %11 = or i32 %1, 2
  %12 = icmp eq i32 %11, 3
  %13 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %14 = fsub <2 x float> %3, %2
  %15 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 4
  %17 = bitcast %struct.SkPoint* %13 to <2 x float>*
  %18 = bitcast %struct.SkPoint* %13 to <2 x float>*
  br label %19

19:                                               ; preds = %9, %76
  %20 = phi i32 [ %4, %9 ], [ %79, %76 ]
  %21 = load i8, i8* %10, align 16, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = icmp ne i32 %20, 0
  %24 = and i1 %23, %22
  %25 = and i1 %12, %24
  br i1 %25, label %26, label %82

26:                                               ; preds = %19
  %27 = load <2 x float>, <2 x float>* %18, align 4
  %28 = fsub <2 x float> %2, %27
  %29 = tail call float @_Z28SkMeasureAngleBetweenVectors7SkPointS_(<2 x float> %28, <2 x float> %14) #11
  %30 = load float, float* %15, align 8
  %31 = fmul float %29, %30
  %32 = load i32, i32* %16, align 16
  %33 = sitofp i32 %32 to float
  %34 = fcmp ogt float %31, %33
  br i1 %34, label %35, label %82

35:                                               ; preds = %26
  %36 = icmp slt i32 %20, 0
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = fdiv float %31, %33
  %39 = bitcast float %38 to i32
  %40 = add i32 %39, 8388607
  %41 = ashr i32 %40, 23
  %42 = add nsw i32 %41, -127
  %43 = ashr i32 %42, 31
  %44 = xor i32 %43, -1
  %45 = and i32 %42, %44
  %46 = icmp sgt i32 %45, 1
  %47 = select i1 %46, i32 %45, i32 1
  br label %48

48:                                               ; preds = %37, %35
  %49 = phi i32 [ %47, %37 ], [ %20, %35 ]
  %50 = tail call <2 x float> @_Z14SkFindBisector7SkPointS_(<2 x float> %28, <2 x float> %14) #11
  %51 = fadd <2 x float> %50, %2
  %52 = fsub <2 x float> %2, %50
  %53 = fsub <2 x float> %51, %52
  %54 = fadd <2 x float> %53, %2
  %55 = fsub <2 x float> %2, %53
  %56 = fsub <2 x float> %54, %2
  %57 = fsub <2 x float> %55, %2
  %58 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %57
  %59 = fcmp une <2 x float> %56, %58
  %60 = extractelement <2 x i1> %59, i32 0
  %61 = extractelement <2 x i1> %59, i32 1
  %62 = or i1 %60, %61
  br i1 %62, label %63, label %76

63:                                               ; preds = %48
  %64 = fadd <2 x float> %53, %2
  %65 = fsub <2 x float> %2, %53
  %66 = fsub <2 x float> %64, %65
  %67 = fadd <2 x float> %66, %2
  %68 = fsub <2 x float> %2, %66
  %69 = fsub <2 x float> %67, %2
  %70 = fsub <2 x float> %68, %2
  %71 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %70
  %72 = fcmp une <2 x float> %69, %71
  %73 = extractelement <2 x i1> %72, i32 0
  %74 = extractelement <2 x i1> %72, i32 1
  %75 = or i1 %73, %74
  br i1 %75, label %159, label %76

76:                                               ; preds = %250, %237, %224, %211, %198, %185, %172, %159, %63, %48
  %77 = phi <2 x float> [ %54, %48 ], [ %67, %63 ], [ %163, %159 ], [ %176, %172 ], [ %189, %185 ], [ %202, %198 ], [ %215, %211 ], [ %228, %224 ], [ %241, %237 ], [ %252, %250 ]
  %78 = phi <2 x float> [ %55, %48 ], [ %68, %63 ], [ %164, %159 ], [ %177, %172 ], [ %190, %185 ], [ %203, %198 ], [ %216, %211 ], [ %229, %224 ], [ %242, %237 ], [ %253, %250 ]
  %79 = add nsw i32 %49, -1
  tail call fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, <2 x float> %2, <2 x float> %77, i32 %79)
  store <2 x float> %78, <2 x float>* %17, align 4
  %80 = load i8, i8* %6, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %158, label %19

82:                                               ; preds = %26, %19
  %83 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 5
  %84 = load i32, i32* %83, align 8, !noalias !14
  %85 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 6
  %86 = load i32, i32* %85, align 4, !noalias !14
  %87 = icmp slt i32 %84, %86
  br i1 %87, label %93, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3
  %90 = tail call zeroext i1 @_ZN20GrVertexChunkBuilder10allocChunkEi(%class.GrVertexChunkBuilder* %89, i32 1) #11, !noalias !14
  br i1 %90, label %91, label %157

91:                                               ; preds = %88
  %92 = load i32, i32* %83, align 8, !noalias !14
  br label %93

93:                                               ; preds = %82, %91
  %94 = phi i32 [ %92, %91 ], [ %84, %82 ]
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %83, align 8, !noalias !14
  %96 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 4
  %97 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 2
  %98 = load i64, i64* %97, align 8, !noalias !14
  %99 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %96, i64 0, i32 0
  %100 = load i8*, i8** %99, align 8, !noalias !14
  %101 = getelementptr inbounds i8, i8* %100, i64 %98
  %102 = ptrtoint i8* %101 to i64
  %103 = bitcast %struct.GrVertexWriter* %96 to i64*
  store i64 %102, i64* %103, align 8, !noalias !19
  %104 = icmp eq i8* %100, null
  br i1 %104, label %157, label %105

105:                                              ; preds = %93
  %106 = bitcast i8* %100 to i64*
  %107 = bitcast %struct.SkPoint* %13 to i64*
  %108 = load i64, i64* %107, align 4
  store i64 %108, i64* %106, align 1
  %109 = getelementptr inbounds i8, i8* %100, i64 8
  %110 = bitcast i8* %109 to <2 x float>*
  store <2 x float> %2, <2 x float>* %110, align 1
  %111 = getelementptr inbounds i8, i8* %100, i64 16
  %112 = icmp eq i32 %1, 3
  %113 = bitcast i8* %111 to <2 x float>*
  %114 = select i1 %112, <2 x float> %2, <2 x float> %3
  %115 = select i1 %112, <2 x float> %2, <2 x float> %3
  store <2 x float> %114, <2 x float>* %113, align 1
  %116 = getelementptr inbounds i8, i8* %100, i64 24
  %117 = bitcast i8* %116 to <2 x float>*
  store <2 x float> %115, <2 x float>* %117, align 1
  %118 = getelementptr inbounds i8, i8* %100, i64 32
  %119 = bitcast i8* %118 to <2 x float>*
  store <2 x float> %3, <2 x float>* %119, align 1
  %120 = getelementptr inbounds i8, i8* %100, i64 40
  %121 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 16
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %132, label %125

125:                                              ; preds = %105
  %126 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 16
  %127 = bitcast i8* %120 to i64*
  %128 = bitcast %"struct.GrStrokeShader::DynamicStroke"* %126 to i64*
  %129 = load i64, i64* %128, align 4
  store i64 %129, i64* %127, align 1
  %130 = getelementptr inbounds i8, i8* %100, i64 48
  %131 = load i32, i32* %121, align 16
  br label %132

132:                                              ; preds = %125, %105
  %133 = phi i8* [ %120, %105 ], [ %130, %125 ]
  %134 = phi i32 [ %122, %105 ], [ %131, %125 ]
  %135 = and i32 %134, 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %157, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 0
  %139 = bitcast i8* %133 to i32*
  %140 = load i32, i32* %138, align 4
  store i32 %140, i32* %139, align 1
  %141 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 1
  %142 = load i8, i8* %141, align 4, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds i8, i8* %133, i64 4
  %146 = bitcast i8* %145 to i32*
  %147 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 1
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %146, align 1
  %149 = getelementptr inbounds i8, i8* %133, i64 8
  %150 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 2
  %151 = bitcast i8* %149 to i32*
  %152 = load i32, i32* %150, align 4
  store i32 %152, i32* %151, align 1
  %153 = getelementptr inbounds i8, i8* %133, i64 12
  %154 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 3
  %155 = bitcast i8* %153 to i32*
  %156 = load i32, i32* %154, align 4
  store i32 %156, i32* %155, align 1
  br label %157

157:                                              ; preds = %93, %88, %144, %137, %132
  store <2 x float> %3, <2 x float>* %17, align 4
  br label %158

158:                                              ; preds = %76, %5, %157
  ret void

159:                                              ; preds = %63
  %160 = fadd <2 x float> %66, %2
  %161 = fsub <2 x float> %2, %66
  %162 = fsub <2 x float> %160, %161
  %163 = fadd <2 x float> %162, %2
  %164 = fsub <2 x float> %2, %162
  %165 = fsub <2 x float> %163, %2
  %166 = fsub <2 x float> %164, %2
  %167 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %166
  %168 = fcmp une <2 x float> %165, %167
  %169 = extractelement <2 x i1> %168, i32 0
  %170 = extractelement <2 x i1> %168, i32 1
  %171 = or i1 %169, %170
  br i1 %171, label %172, label %76

172:                                              ; preds = %159
  %173 = fadd <2 x float> %162, %2
  %174 = fsub <2 x float> %2, %162
  %175 = fsub <2 x float> %173, %174
  %176 = fadd <2 x float> %175, %2
  %177 = fsub <2 x float> %2, %175
  %178 = fsub <2 x float> %176, %2
  %179 = fsub <2 x float> %177, %2
  %180 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %179
  %181 = fcmp une <2 x float> %178, %180
  %182 = extractelement <2 x i1> %181, i32 0
  %183 = extractelement <2 x i1> %181, i32 1
  %184 = or i1 %182, %183
  br i1 %184, label %185, label %76

185:                                              ; preds = %172
  %186 = fadd <2 x float> %175, %2
  %187 = fsub <2 x float> %2, %175
  %188 = fsub <2 x float> %186, %187
  %189 = fadd <2 x float> %188, %2
  %190 = fsub <2 x float> %2, %188
  %191 = fsub <2 x float> %189, %2
  %192 = fsub <2 x float> %190, %2
  %193 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %192
  %194 = fcmp une <2 x float> %191, %193
  %195 = extractelement <2 x i1> %194, i32 0
  %196 = extractelement <2 x i1> %194, i32 1
  %197 = or i1 %195, %196
  br i1 %197, label %198, label %76

198:                                              ; preds = %185
  %199 = fadd <2 x float> %188, %2
  %200 = fsub <2 x float> %2, %188
  %201 = fsub <2 x float> %199, %200
  %202 = fadd <2 x float> %201, %2
  %203 = fsub <2 x float> %2, %201
  %204 = fsub <2 x float> %202, %2
  %205 = fsub <2 x float> %203, %2
  %206 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %205
  %207 = fcmp une <2 x float> %204, %206
  %208 = extractelement <2 x i1> %207, i32 0
  %209 = extractelement <2 x i1> %207, i32 1
  %210 = or i1 %208, %209
  br i1 %210, label %211, label %76

211:                                              ; preds = %198
  %212 = fadd <2 x float> %201, %2
  %213 = fsub <2 x float> %2, %201
  %214 = fsub <2 x float> %212, %213
  %215 = fadd <2 x float> %214, %2
  %216 = fsub <2 x float> %2, %214
  %217 = fsub <2 x float> %215, %2
  %218 = fsub <2 x float> %216, %2
  %219 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %218
  %220 = fcmp une <2 x float> %217, %219
  %221 = extractelement <2 x i1> %220, i32 0
  %222 = extractelement <2 x i1> %220, i32 1
  %223 = or i1 %221, %222
  br i1 %223, label %224, label %76

224:                                              ; preds = %211
  %225 = fadd <2 x float> %214, %2
  %226 = fsub <2 x float> %2, %214
  %227 = fsub <2 x float> %225, %226
  %228 = fadd <2 x float> %227, %2
  %229 = fsub <2 x float> %2, %227
  %230 = fsub <2 x float> %228, %2
  %231 = fsub <2 x float> %229, %2
  %232 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %231
  %233 = fcmp une <2 x float> %230, %232
  %234 = extractelement <2 x i1> %233, i32 0
  %235 = extractelement <2 x i1> %233, i32 1
  %236 = or i1 %234, %235
  br i1 %236, label %237, label %76

237:                                              ; preds = %224
  %238 = fadd <2 x float> %227, %2
  %239 = fsub <2 x float> %2, %227
  %240 = fsub <2 x float> %238, %239
  %241 = fadd <2 x float> %240, %2
  %242 = fsub <2 x float> %2, %240
  %243 = fsub <2 x float> %241, %2
  %244 = fsub <2 x float> %242, %2
  %245 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %244
  %246 = fcmp une <2 x float> %243, %245
  %247 = extractelement <2 x i1> %246, i32 0
  %248 = extractelement <2 x i1> %246, i32 1
  %249 = or i1 %247, %248
  br i1 %249, label %250, label %76

250:                                              ; preds = %237
  %251 = fsub <2 x float> %241, %242
  %252 = fadd <2 x float> %251, %2
  %253 = fsub <2 x float> %2, %251
  br label %76
}

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #3

declare float @_Z28SkMeasureAngleBetweenVectors7SkPointS_(<2 x float>, <2 x float>) local_unnamed_addr #3

declare <2 x float> @_Z14SkFindBisector7SkPointS_(<2 x float>, <2 x float>) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20GrVertexChunkBuilder10allocChunkEi(%class.GrVertexChunkBuilder*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 1
  %4 = bitcast %class.SkSTArray.13** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 4294967294
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = bitcast i8* %12 to %struct.GrVertexChunk**
  %16 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %15, align 8
  %17 = lshr i64 %8, 1
  %18 = and i64 %17, 2147483647
  %19 = add nsw i64 %18, -1
  %20 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %16, i64 %19, i32 1
  store i32 %14, i32* %20, align 8
  %21 = load i8*, i8** %4, align 8
  br label %22

22:                                               ; preds = %11, %2
  %23 = phi i8* [ %21, %11 ], [ %5, %2 ]
  %24 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 5
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 16
  %26 = bitcast i8* %25 to %class.SkTArray.15*
  tail call void @_ZN8SkTArrayI13GrVertexChunkLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.15* %26, i32 1, i32 1) #11
  %27 = bitcast i8* %25 to %struct.GrVertexChunk**
  %28 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %27, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = lshr i64 %31, 1
  %33 = and i64 %32, 2147483647
  %34 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %28, i64 %33
  %35 = add i64 %31, 2
  %36 = and i64 %35, 4294967294
  %37 = and i64 %31, -4294967295
  %38 = or i64 %36, %37
  store i64 %38, i64* %30, align 8
  %39 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %34, i64 0, i32 0, i32 0
  store %class.GrBuffer* null, %class.GrBuffer** %39, align 8
  %40 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %28, i64 %33, i32 1
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, %1
  %44 = select i1 %43, i32 %42, i32 %1
  %45 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 0
  %46 = load %"class.GrMeshDrawOp::Target"*, %"class.GrMeshDrawOp::Target"** %45, align 8
  %47 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %34, i64 0, i32 0
  %50 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %28, i64 %33, i32 2
  %51 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 6
  %52 = bitcast %"class.GrMeshDrawOp::Target"* %46 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, i32, %class.sk_sp.16*, i32*, i32*)***
  %53 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, i32, %class.sk_sp.16*, i32*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, i32, %class.sk_sp.16*, i32*, i32*)*** %52, align 8
  %54 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, i32, %class.sk_sp.16*, i32*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, i32, %class.sk_sp.16*, i32*, i32*)** %53, i64 5
  %55 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, i32, %class.sk_sp.16*, i32*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, i32, %class.sk_sp.16*, i32*, i32*)** %54, align 8
  %56 = tail call i8* %55(%"class.GrMeshDrawOp::Target"* %46, i64 %48, i32 %44, i32 %44, %class.sk_sp.16* %49, i32* %50, i32* %51) #11
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr inbounds %class.GrVertexChunkBuilder, %class.GrVertexChunkBuilder* %0, i64 0, i32 4
  %59 = bitcast %struct.GrVertexWriter* %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = icmp eq i8* %56, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %22
  %62 = load %class.GrBuffer*, %class.GrBuffer** %39, align 8
  %63 = icmp eq %class.GrBuffer* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = load i32, i32* %51, align 4
  %66 = icmp slt i32 %65, %1
  br i1 %66, label %67, label %93

67:                                               ; preds = %61, %22, %64
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 94, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0)) #11
  %68 = load i8*, i8** %4, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast i8* %69 to %class.SkTArray.15*
  %71 = getelementptr inbounds i8, i8* %68, i64 24
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = lshr i64 %73, 1
  %75 = and i64 %74, 2147483647
  %76 = add nuw nsw i64 %75, 4294967295
  %77 = shl nuw nsw i64 %76, 1
  %78 = and i64 %77, 4294967294
  %79 = and i64 %73, -4294967295
  %80 = or i64 %78, %79
  store i64 %80, i64* %72, align 8
  %81 = bitcast i8* %69 to %struct.GrVertexChunk**
  %82 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %81, align 8
  %83 = and i64 %76, 2147483647
  %84 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %82, i64 %83, i32 0, i32 0
  %85 = load %class.GrBuffer*, %class.GrBuffer** %84, align 8
  %86 = icmp eq %class.GrBuffer* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %67
  %88 = bitcast %class.GrBuffer* %85 to void (%class.GrBuffer*)***
  %89 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %89, i64 3
  %91 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %90, align 8
  tail call void %91(%class.GrBuffer* nonnull %85) #11
  br label %92

92:                                               ; preds = %67, %87
  tail call void @_ZN8SkTArrayI13GrVertexChunkLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.15* %70, i32 0, i32 2) #11
  store i32 0, i32* %51, align 4
  br label %96

93:                                               ; preds = %64
  %94 = load i32, i32* %41, align 8
  %95 = shl nsw i32 %94, 1
  store i32 %95, i32* %41, align 8
  br label %96

96:                                               ; preds = %93, %92
  %97 = phi i1 [ false, %92 ], [ true, %93 ]
  ret i1 %97
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI13GrVertexChunkLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.15*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.15, %class.SkTArray.15* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %92

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %92, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.15, %class.SkTArray.15* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %74, %48
  %51 = phi i64 [ 0, %48 ], [ %75, %74 ]
  %52 = shl nuw nsw i64 %51, 4
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %49, align 8
  %55 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %54, i64 %51
  %56 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %55, i64 0, i32 0, i32 0
  %57 = bitcast %struct.GrVertexChunk* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 8
  %61 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %54, i64 %51, i32 1
  %62 = bitcast i32* %61 to i64*
  %63 = bitcast i8* %60 to i64*
  %64 = load i64, i64* %62, align 8
  store i64 %64, i64* %63, align 8
  %65 = load %struct.GrVertexChunk*, %struct.GrVertexChunk** %49, align 8
  %66 = getelementptr inbounds %struct.GrVertexChunk, %struct.GrVertexChunk* %65, i64 %51, i32 0, i32 0
  %67 = load %class.GrBuffer*, %class.GrBuffer** %66, align 8
  %68 = icmp eq %class.GrBuffer* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %50
  %70 = bitcast %class.GrBuffer* %67 to void (%class.GrBuffer*)***
  %71 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %71, i64 3
  %73 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %72, align 8
  tail call void %73(%class.GrBuffer* nonnull %67) #11
  br label %74

74:                                               ; preds = %69, %50
  %75 = add nuw nsw i64 %51, 1
  %76 = load i64, i64* %4, align 8
  %77 = lshr i64 %76, 1
  %78 = and i64 %77, 2147483647
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %50, label %80

80:                                               ; preds = %74, %35
  %81 = phi i64 [ %45, %35 ], [ %76, %74 ]
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  %84 = bitcast %class.SkTArray.15* %0 to i8**
  br i1 %83, label %88, label %85

85:                                               ; preds = %80
  %86 = load i8*, i8** %84, align 8
  tail call void @_Z7sk_freePv(i8* %86) #11
  %87 = load i64, i64* %4, align 8
  br label %88

88:                                               ; preds = %80, %85
  %89 = phi i64 [ %87, %85 ], [ %81, %80 ]
  store i8* %44, i8** %84, align 8
  %90 = and i64 %89, -4294967298
  %91 = or i64 %90, 1
  store i64 %91, i64* %4, align 8
  br label %92

92:                                               ; preds = %88, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #3

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"*, i32, i1 zeroext, %struct.SkPoint* readonly, <2 x float>) unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %1, 3
  br i1 %6, label %7, label %63

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %10, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %16 = load float, float* %15, align 4
  br label %25

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp oeq float %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 2
  br label %25

25:                                               ; preds = %14, %17, %23
  %26 = phi float [ %21, %23 ], [ %21, %17 ], [ %16, %14 ]
  %27 = phi %struct.SkPoint* [ %24, %23 ], [ %8, %17 ], [ %8, %14 ]
  %28 = bitcast %struct.SkPoint* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fsub float %12, %32
  %34 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15, i32 1
  %35 = load float, float* %34, align 4
  %36 = fsub float %26, %35
  %37 = extractelement <2 x float> %29, i32 0
  %38 = fsub float %37, %12
  %39 = extractelement <2 x float> %29, i32 1
  %40 = fsub float %39, %26
  %41 = fmul float %33, %38
  %42 = fmul float %40, %36
  %43 = fadd float %41, %42
  %44 = fmul float %33, %33
  %45 = fmul float %36, %36
  %46 = fadd float %44, %45
  %47 = fmul float %38, %38
  %48 = fmul float %40, %40
  %49 = fadd float %47, %48
  %50 = fmul float %49, %46
  %51 = tail call float @llvm.fabs.f32(float %43)
  %52 = fmul float %43, %51
  %53 = fmul float %50, 0x3F30000000000000
  %54 = fsub float %50, %52
  %55 = tail call float @llvm.fabs.f32(float %54) #11
  %56 = fcmp ugt float %55, %53
  br i1 %56, label %57, label %63

57:                                               ; preds = %25
  %58 = bitcast %struct.SkPoint* %3 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"* %0, i32 3, <2 x float> %59, <2 x float> %29, i32 -1)
  %60 = bitcast %struct.SkPoint* %3 to i64*
  %61 = bitcast %struct.SkPoint* %30 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 4
  br label %63

63:                                               ; preds = %25, %57, %5
  %64 = phi i1 [ %2, %5 ], [ %2, %25 ], [ true, %57 ]
  %65 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 2
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %65, i64 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = extractelement <2 x float> %4, i32 0
  %69 = fcmp une float %67, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1
  br label %78

72:                                               ; preds = %63
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 2, i32 1
  %74 = load float, float* %73, align 4
  %75 = extractelement <2 x float> %4, i32 1
  %76 = fcmp une float %74, %75
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1
  br i1 %76, label %78, label %80

78:                                               ; preds = %70, %72
  %79 = phi %struct.SkPoint* [ %71, %70 ], [ %77, %72 ]
  br label %80

80:                                               ; preds = %72, %78
  %81 = phi %struct.SkPoint* [ %79, %78 ], [ %77, %72 ]
  %82 = phi %struct.SkPoint* [ %65, %78 ], [ %77, %72 ]
  %83 = bitcast %struct.SkPoint* %82 to i64*
  %84 = load i64, i64* %83, align 4
  %85 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 12
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %107

88:                                               ; preds = %80
  store i8 1, i8* %85, align 8
  %89 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %81, i64 0, i32 0
  %90 = load float, float* %89, align 4
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %92 = load float, float* %91, align 4
  %93 = fcmp une float %90, %92
  br i1 %93, label %100, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1, i32 1
  %96 = load float, float* %95, align 4
  %97 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %98 = load float, float* %97, align 4
  %99 = fcmp une float %96, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %94, %88
  br label %101

101:                                              ; preds = %100, %94
  %102 = phi %struct.SkPoint* [ %81, %100 ], [ %65, %94 ]
  %103 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 14
  %104 = bitcast %struct.SkPoint* %102 to i64*
  %105 = bitcast %struct.SkPoint* %103 to i64*
  %106 = load i64, i64* %104, align 4
  store i64 %106, i64* %105, align 4
  br label %128

107:                                              ; preds = %80
  br i1 %64, label %133, label %108

108:                                              ; preds = %107
  %109 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 11
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %struct.SkPoint* %3 to <2 x float>*
  %112 = load <2 x float>, <2 x float>* %111, align 4
  %113 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %81, i64 0, i32 0
  %114 = load float, float* %113, align 4
  %115 = extractelement <2 x float> %112, i32 0
  %116 = fcmp une float %114, %115
  br i1 %116, label %123, label %117

117:                                              ; preds = %108
  %118 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1, i32 1
  %119 = load float, float* %118, align 4
  %120 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %121 = load float, float* %120, align 4
  %122 = fcmp une float %119, %121
  br i1 %122, label %123, label %124

123:                                              ; preds = %117, %108
  br label %124

124:                                              ; preds = %123, %117
  %125 = phi %struct.SkPoint* [ %81, %123 ], [ %65, %117 ]
  %126 = bitcast %struct.SkPoint* %125 to <2 x float>*
  %127 = load <2 x float>, <2 x float>* %126, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_111PatchWriter14internalJoinToENS0_8JoinTypeE7SkPointS2_i(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %110, <2 x float> %112, <2 x float> %127, i32 -1) #11
  br label %128

128:                                              ; preds = %101, %124
  %129 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %130 = bitcast %struct.SkPoint* %3 to i64*
  %131 = bitcast %struct.SkPoint* %129 to i64*
  %132 = load i64, i64* %130, align 4
  store i64 %132, i64* %131, align 4
  br label %133

133:                                              ; preds = %128, %107
  %134 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 5
  %135 = load i32, i32* %134, align 8, !noalias !22
  %136 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 6
  %137 = load i32, i32* %136, align 4, !noalias !22
  %138 = icmp slt i32 %135, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3
  %141 = tail call zeroext i1 @_ZN20GrVertexChunkBuilder10allocChunkEi(%class.GrVertexChunkBuilder* %140, i32 1) #11, !noalias !22
  br i1 %141, label %142, label %200

142:                                              ; preds = %139
  %143 = load i32, i32* %134, align 8, !noalias !22
  br label %144

144:                                              ; preds = %142, %133
  %145 = phi i32 [ %143, %142 ], [ %135, %133 ]
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %134, align 8, !noalias !22
  %147 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 4
  %148 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 3, i32 2
  %149 = load i64, i64* %148, align 8, !noalias !22
  %150 = getelementptr inbounds %struct.GrVertexWriter, %struct.GrVertexWriter* %147, i64 0, i32 0
  %151 = load i8*, i8** %150, align 8, !noalias !22
  %152 = getelementptr inbounds i8, i8* %151, i64 %149
  %153 = ptrtoint i8* %152 to i64
  %154 = bitcast %struct.GrVertexWriter* %147 to i64*
  store i64 %153, i64* %154, align 8, !noalias !27
  %155 = icmp eq i8* %151, null
  br i1 %155, label %200, label %156

156:                                              ; preds = %144
  %157 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %158 = bitcast i8* %151 to i64*
  %159 = bitcast %struct.SkPoint* %157 to i64*
  %160 = load i64, i64* %159, align 4
  store i64 %160, i64* %158, align 1
  %161 = getelementptr inbounds i8, i8* %151, i64 8
  %162 = bitcast %struct.SkPoint* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %161, i8* align 4 %162, i64 32, i1 false) #11
  %163 = getelementptr inbounds i8, i8* %151, i64 40
  %164 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 0
  %165 = load i32, i32* %164, align 16
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %175, label %168

168:                                              ; preds = %156
  %169 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 16
  %170 = bitcast i8* %163 to i64*
  %171 = bitcast %"struct.GrStrokeShader::DynamicStroke"* %169 to i64*
  %172 = load i64, i64* %171, align 4
  store i64 %172, i64* %170, align 1
  %173 = getelementptr inbounds i8, i8* %151, i64 48
  %174 = load i32, i32* %164, align 16
  br label %175

175:                                              ; preds = %168, %156
  %176 = phi i8* [ %163, %156 ], [ %173, %168 ]
  %177 = phi i32 [ %165, %156 ], [ %174, %168 ]
  %178 = and i32 %177, 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %200, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 0
  %182 = bitcast i8* %176 to i32*
  %183 = load i32, i32* %181, align 4
  store i32 %183, i32* %182, align 1
  %184 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 1
  %185 = load i8, i8* %184, align 4, !range !2
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %200, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds i8, i8* %176, i64 4
  %189 = bitcast i8* %188 to i32*
  %190 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 1
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 1
  %192 = getelementptr inbounds i8, i8* %176, i64 8
  %193 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 2
  %194 = bitcast i8* %192 to i32*
  %195 = load i32, i32* %193, align 4
  store i32 %195, i32* %194, align 1
  %196 = getelementptr inbounds i8, i8* %176, i64 12
  %197 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 17, i32 0, i64 3
  %198 = bitcast i8* %196 to i32*
  %199 = load i32, i32* %197, align 4
  store i32 %199, i32* %198, align 1
  br label %200

200:                                              ; preds = %139, %144, %175, %180, %187
  %201 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %202 = bitcast %struct.SkPoint* %201 to i64*
  store i64 %84, i64* %202, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111PatchWriter22internalConicPatchesToENS0_8JoinTypeEPK7SkPointfi(%"class.(anonymous namespace)::PatchWriter"*, i32, %struct.SkPoint*, float, i32) unnamed_addr #2 align 2 {
  %6 = alloca [4 x %struct.SkPoint], align 16
  %7 = alloca [4 x %struct.SkPoint], align 16
  %8 = alloca [5 x %struct.SkPoint], align 16
  %9 = alloca %struct.SkConic, align 4
  %10 = alloca [2 x %struct.SkConic], align 16
  %11 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 2
  %12 = tail call zeroext i1 @_ZNK10GrCullTest11areVisible3EPK7SkPoint(%class.GrCullTest* %11, %struct.SkPoint* %2)
  br i1 %12, label %28, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 12
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 14
  %19 = bitcast %struct.SkPoint* %2 to i64*
  %20 = bitcast %struct.SkPoint* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 4
  store i8 1, i8* %14, align 8
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2
  %24 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %25 = bitcast %struct.SkPoint* %23 to i64*
  %26 = bitcast %struct.SkPoint* %24 to i64*
  %27 = load i64, i64* %25, align 4
  store i64 %27, i64* %26, align 4
  br label %238

28:                                               ; preds = %5
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %33 = load float, float* %32, align 4
  %34 = fcmp oeq float %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp oeq float %37, %39
  br i1 %40, label %56, label %41

41:                                               ; preds = %28, %35
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %42, i64 0, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %31, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 1
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp oeq float %48, %50
  br label %52

52:                                               ; preds = %41, %46
  %53 = phi i1 [ false, %41 ], [ %51, %46 ]
  %54 = fcmp oeq float %3, 0.000000e+00
  %55 = or i1 %54, %53
  br i1 %55, label %56, label %82

56:                                               ; preds = %52, %35
  %57 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 4
  %59 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2
  %60 = bitcast %struct.SkPoint* %59 to <2 x float>*
  %61 = load <2 x float>, <2 x float>* %60, align 4
  %62 = extractelement <2 x float> %58, i32 0
  %63 = extractelement <2 x float> %61, i32 0
  %64 = fcmp oeq float %62, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %56
  %66 = extractelement <2 x float> %58, i32 1
  %67 = extractelement <2 x float> %61, i32 1
  %68 = fcmp oeq float %66, %67
  br i1 %68, label %238, label %69

69:                                               ; preds = %65, %56
  %70 = bitcast [4 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #11
  %71 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 0
  %72 = bitcast [4 x %struct.SkPoint]* %6 to <2 x float>*
  store <2 x float> %58, <2 x float>* %72, align 16
  %73 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 1
  %74 = bitcast %struct.SkPoint* %73 to <2 x float>*
  store <2 x float> %58, <2 x float>* %74, align 8
  %75 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 2
  %76 = bitcast %struct.SkPoint* %75 to <2 x float>*
  store <2 x float> %61, <2 x float>* %76, align 16
  %77 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 3
  %78 = bitcast %struct.SkPoint* %77 to <2 x float>*
  store <2 x float> %61, <2 x float>* %78, align 8
  %79 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 9
  %80 = load float, float* %79, align 4
  %81 = fcmp oge float %80, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, i1 zeroext %81, %struct.SkPoint* nonnull %71, <2 x float> %61) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #11
  br label %238

82:                                               ; preds = %52
  %83 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #11
  %84 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 0
  %85 = fcmp oeq float %3, 1.000000e+00
  %86 = bitcast [4 x %struct.SkPoint]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 -1, i64 32, i1 false)
  br i1 %85, label %87, label %106

87:                                               ; preds = %82
  %88 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %89 = load <2 x float>, <2 x float>* %88, align 4
  %90 = bitcast %struct.SkPoint* %29 to <2 x float>*
  %91 = load <2 x float>, <2 x float>* %90, align 4
  %92 = bitcast %struct.SkPoint* %42 to <2 x float>*
  %93 = load <2 x float>, <2 x float>* %92, align 4
  %94 = fmul <2 x float> %91, <float 0x3FE5555560000000, float 0x3FE5555560000000>
  %95 = fmul <2 x float> %89, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %96 = fadd <2 x float> %95, %94
  %97 = fmul <2 x float> %93, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %98 = fadd <2 x float> %94, %97
  %99 = bitcast [4 x %struct.SkPoint]* %7 to <2 x float>*
  store <2 x float> %89, <2 x float>* %99, align 16
  %100 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 1
  %101 = bitcast %struct.SkPoint* %100 to <2 x float>*
  store <2 x float> %96, <2 x float>* %101, align 8
  %102 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 2
  %103 = bitcast %struct.SkPoint* %102 to <2 x float>*
  store <2 x float> %98, <2 x float>* %103, align 16
  %104 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3
  %105 = bitcast %struct.SkPoint* %104 to <2 x float>*
  store <2 x float> %93, <2 x float>* %105, align 8
  br label %117

106:                                              ; preds = %82
  %107 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3, i32 1
  %108 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %7, i64 0, i64 3, i32 0
  %109 = bitcast %struct.SkPoint* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %83, i8* align 4 %109, i64 24, i1 false) #11
  store float %3, float* %108, align 8
  %110 = bitcast float* %107 to i32*
  store i32 2139095040, i32* %110, align 4
  %111 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %112 = load <2 x float>, <2 x float>* %111, align 4
  %113 = bitcast %struct.SkPoint* %29 to <2 x float>*
  %114 = load <2 x float>, <2 x float>* %113, align 4
  %115 = bitcast %struct.SkPoint* %42 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 4
  br label %117

117:                                              ; preds = %87, %106
  %118 = phi <2 x float> [ %91, %87 ], [ %114, %106 ]
  %119 = phi <2 x float> [ %93, %87 ], [ %116, %106 ]
  %120 = phi <2 x float>* [ %92, %87 ], [ %115, %106 ]
  %121 = phi <2 x float> [ %89, %87 ], [ %112, %106 ]
  %122 = extractelement <2 x float> %118, i32 0
  %123 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 5
  %124 = load float, float* %123, align 4
  %125 = fmul <2 x float> %118, <float -2.000000e+00, float -2.000000e+00>
  %126 = fadd <2 x float> %121, %125
  %127 = fadd <2 x float> %119, %126
  %128 = fmul <2 x float> %127, %127
  %129 = extractelement <2 x float> %128, i32 0
  %130 = extractelement <2 x float> %128, i32 1
  %131 = fadd float %129, %130
  %132 = fmul float %124, %124
  %133 = fmul float %132, 6.250000e-02
  %134 = fmul float %133, %131
  %135 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 7, i64 0
  %136 = load float, float* %135, align 4
  %137 = fcmp oge float %136, %134
  %138 = icmp eq i32 %4, 0
  %139 = or i1 %138, %137
  br i1 %139, label %140, label %144

140:                                              ; preds = %117
  %141 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 8, i64 0
  %142 = load float, float* %141, align 4
  %143 = fcmp oge float %142, %134
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, i1 zeroext %143, %struct.SkPoint* nonnull %84, <2 x float> %119)
  br label %237

144:                                              ; preds = %117
  %145 = extractelement <2 x float> %119, i32 0
  %146 = fsub float %122, %33
  %147 = insertelement <2 x float> undef, float %146, i32 0
  %148 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 1
  %149 = load float, float* %148, align 4
  %150 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %151 = load float, float* %150, align 4
  %152 = fsub float %149, %151
  %153 = insertelement <2 x float> %147, float %152, i32 1
  %154 = fsub float %145, %122
  %155 = insertelement <2 x float> undef, float %154, i32 0
  %156 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2, i32 1
  %157 = load float, float* %156, align 4
  %158 = fsub float %157, %149
  %159 = insertelement <2 x float> %155, float %158, i32 1
  %160 = tail call float @_Z28SkMeasureAngleBetweenVectors7SkPointS_(<2 x float> %153, <2 x float> %159) #11
  %161 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 6
  %162 = load float, float* %161, align 8
  %163 = fmul float %160, %162
  %164 = tail call float @llvm.ceil.f32(float %163) #11
  %165 = fcmp olt float %164, 1.000000e+00
  %166 = select i1 %165, float 1.000000e+00, float %164
  %167 = tail call float @sqrtf(float %134) #11
  %168 = tail call float @sqrtf(float %167) #11
  %169 = tail call float @llvm.ceil.f32(float %168) #11
  %170 = fcmp olt float %169, 1.000000e+00
  %171 = select i1 %170, float 1.000000e+00, float %169
  %172 = fadd float %166, %171
  %173 = fadd float %172, -1.000000e+00
  %174 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 4
  %175 = load i32, i32* %174, align 16
  %176 = sitofp i32 %175 to float
  %177 = fcmp ogt float %173, %176
  br i1 %177, label %178, label %232

178:                                              ; preds = %144
  %179 = icmp slt i32 %4, 0
  br i1 %179, label %180, label %199

180:                                              ; preds = %178
  %181 = bitcast float %171 to i32
  %182 = add i32 %181, 8388607
  %183 = ashr i32 %182, 23
  %184 = add nsw i32 %183, -127
  %185 = ashr i32 %184, 31
  %186 = xor i32 %185, -1
  %187 = and i32 %184, %186
  %188 = bitcast float %166 to i32
  %189 = add i32 %188, 8388607
  %190 = ashr i32 %189, 23
  %191 = add nsw i32 %190, -127
  %192 = ashr i32 %191, 31
  %193 = xor i32 %192, -1
  %194 = and i32 %191, %193
  %195 = add nsw i32 %187, %194
  %196 = icmp sgt i32 %195, 0
  %197 = select i1 %196, i32 %195, i32 0
  %198 = add nuw nsw i32 %197, 1
  br label %199

199:                                              ; preds = %180, %178
  %200 = phi i32 [ %198, %180 ], [ %4, %178 ]
  br i1 %85, label %201, label %211

201:                                              ; preds = %199
  %202 = bitcast [5 x %struct.SkPoint]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %202) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %202, i8 -1, i64 40, i1 false)
  %203 = fcmp ult float %171, %166
  %204 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %8, i64 0, i64 0
  br i1 %203, label %206, label %205

205:                                              ; preds = %201
  call void @_Z16SkChopQuadAtHalfPK7SkPointPS_(%struct.SkPoint* %2, %struct.SkPoint* nonnull %204) #11
  br label %208

206:                                              ; preds = %201
  %207 = tail call float @_Z20SkFindQuadMidTangentPK7SkPoint(%struct.SkPoint* %2) #11
  call void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint* %2, %struct.SkPoint* nonnull %204, float %207) #11
  br label %208

208:                                              ; preds = %206, %205
  %209 = add nsw i32 %200, -1
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter22internalConicPatchesToENS0_8JoinTypeEPK7SkPointfi(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, %struct.SkPoint* nonnull %204, float 1.000000e+00, i32 %209)
  %210 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %8, i64 0, i64 2
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter22internalConicPatchesToENS0_8JoinTypeEPK7SkPointfi(%"class.(anonymous namespace)::PatchWriter"* %0, i32 3, %struct.SkPoint* %210, float 1.000000e+00, i32 %209)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %202) #11
  br label %237

211:                                              ; preds = %199
  %212 = bitcast %struct.SkConic* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %212) #11
  %213 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %9, i64 0, i32 1
  %214 = bitcast %struct.SkPoint* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %212, i8* align 4 %214, i64 24, i1 false) #11
  store float %3, float* %213, align 4
  %215 = fcmp ult float %171, %166
  br i1 %215, label %216, label %218

216:                                              ; preds = %211
  %217 = call float @_ZNK7SkConic14findMidTangentEv(%struct.SkConic* nonnull %9) #11
  br label %218

218:                                              ; preds = %211, %216
  %219 = phi float [ %217, %216 ], [ 5.000000e-01, %211 ]
  %220 = bitcast [2 x %struct.SkConic]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %220) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %220, i8 -1, i64 56, i1 false)
  %221 = getelementptr inbounds [2 x %struct.SkConic], [2 x %struct.SkConic]* %10, i64 0, i64 0
  %222 = call zeroext i1 @_ZNK7SkConic6chopAtEfPS_(%struct.SkConic* nonnull %9, float %219, %struct.SkConic* nonnull %221) #11
  br i1 %222, label %223, label %231

223:                                              ; preds = %218
  %224 = getelementptr inbounds [2 x %struct.SkConic], [2 x %struct.SkConic]* %10, i64 0, i64 0, i32 0, i64 0
  %225 = getelementptr inbounds [2 x %struct.SkConic], [2 x %struct.SkConic]* %10, i64 0, i64 0, i32 1
  %226 = load float, float* %225, align 8
  %227 = add nsw i32 %200, -1
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter22internalConicPatchesToENS0_8JoinTypeEPK7SkPointfi(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, %struct.SkPoint* nonnull %224, float %226, i32 %227)
  %228 = getelementptr inbounds [2 x %struct.SkConic], [2 x %struct.SkConic]* %10, i64 0, i64 1, i32 0, i64 0
  %229 = getelementptr inbounds [2 x %struct.SkConic], [2 x %struct.SkConic]* %10, i64 0, i64 1, i32 1
  %230 = load float, float* %229, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter22internalConicPatchesToENS0_8JoinTypeEPK7SkPointfi(%"class.(anonymous namespace)::PatchWriter"* %0, i32 3, %struct.SkPoint* %228, float %230, i32 %227)
  br label %231

231:                                              ; preds = %223, %218
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %220) #11
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %212) #11
  br label %237

232:                                              ; preds = %144
  %233 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 9
  %234 = load float, float* %233, align 4
  %235 = fcmp ole float %173, %234
  %236 = load <2 x float>, <2 x float>* %120, align 4
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, i1 zeroext %235, %struct.SkPoint* nonnull %84, <2 x float> %236)
  br label %237

237:                                              ; preds = %232, %231, %208, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #11
  br label %238

238:                                              ; preds = %69, %65, %237, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10GrCullTest11areVisible3EPK7SkPoint(%class.GrCullTest*, %struct.SkPoint*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrCullTest, %class.GrCullTest* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = insertelement <4 x float> undef, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  %8 = bitcast %"struct.skvx::Vec"* %3 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16
  %10 = fmul <4 x float> %9, %7
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %12 = load float, float* %11, align 4
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = fmul <4 x float> %9, %14
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %17 = load float, float* %16, align 4
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = fmul <4 x float> %9, %19
  %21 = bitcast %class.GrCullTest* %0 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 16
  %23 = getelementptr inbounds %class.GrCullTest, %class.GrCullTest* %0, i64 0, i32 0, i32 1
  %24 = bitcast %"struct.skvx::Vec.17"* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 8
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = insertelement <2 x float> undef, float %27, i32 0
  %29 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %30 = shufflevector <2 x float> %25, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %31 = shufflevector <4 x float> %29, <4 x float> %30, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %32 = shufflevector <2 x float> %28, <2 x float> undef, <4 x i32> zeroinitializer
  %33 = fmul <4 x float> %31, %32
  %34 = fadd <4 x float> %10, %33
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %36 = load float, float* %35, align 4
  %37 = insertelement <2 x float> undef, float %36, i32 0
  %38 = shufflevector <2 x float> %37, <2 x float> undef, <4 x i32> zeroinitializer
  %39 = fmul <4 x float> %31, %38
  %40 = fadd <4 x float> %15, %39
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %42 = load float, float* %41, align 4
  %43 = insertelement <2 x float> undef, float %42, i32 0
  %44 = shufflevector <2 x float> %43, <2 x float> undef, <4 x i32> zeroinitializer
  %45 = fmul <4 x float> %31, %44
  %46 = fadd <4 x float> %20, %45
  %47 = fcmp olt <4 x float> %34, %40
  %48 = sext <4 x i1> %47 to <4 x i32>
  %49 = bitcast <4 x i32> %48 to <2 x i64>
  %50 = extractelement <2 x i64> %49, i32 0
  %51 = extractelement <2 x i64> %49, i32 1
  %52 = bitcast i64 %50 to <2 x i32>
  %53 = shufflevector <2 x i32> %52, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %54 = bitcast i64 %51 to <2 x i32>
  %55 = shufflevector <2 x i32> %54, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %56 = shufflevector <4 x i32> %53, <4 x i32> %55, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %57 = bitcast <4 x float> %40 to <2 x i64>
  %58 = extractelement <2 x i64> %57, i32 0
  %59 = bitcast i64 %58 to <2 x i32>
  %60 = shufflevector <4 x float> %40, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %61 = bitcast <2 x float> %60 to <2 x i32>
  %62 = shufflevector <2 x i32> %59, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %63 = shufflevector <2 x i32> %61, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %64 = shufflevector <4 x i32> %62, <4 x i32> %63, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %65 = and <4 x i32> %56, %64
  %66 = bitcast <4 x i32> %65 to <2 x i64>
  %67 = extractelement <2 x i64> %66, i32 0
  %68 = extractelement <2 x i64> %66, i32 1
  %69 = bitcast i64 %67 to <2 x i32>
  %70 = shufflevector <2 x i32> %69, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %71 = bitcast i64 %68 to <2 x i32>
  %72 = shufflevector <2 x i32> %71, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %73 = shufflevector <4 x i32> %70, <4 x i32> %72, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %74 = bitcast <4 x i32> %56 to <2 x i64>
  %75 = xor <2 x i64> %74, <i64 -1, i64 -1>
  %76 = extractelement <2 x i64> %75, i32 0
  %77 = extractelement <2 x i64> %75, i32 1
  %78 = bitcast i64 %76 to <2 x i32>
  %79 = shufflevector <2 x i32> %78, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %80 = bitcast i64 %77 to <2 x i32>
  %81 = shufflevector <2 x i32> %80, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %82 = shufflevector <4 x i32> %79, <4 x i32> %81, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %83 = bitcast <4 x float> %34 to <2 x i64>
  %84 = extractelement <2 x i64> %83, i32 0
  %85 = bitcast i64 %84 to <2 x i32>
  %86 = shufflevector <4 x float> %34, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %87 = bitcast <2 x float> %86 to <2 x i32>
  %88 = shufflevector <2 x i32> %85, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %89 = shufflevector <2 x i32> %87, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %90 = shufflevector <4 x i32> %88, <4 x i32> %89, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %91 = and <4 x i32> %82, %90
  %92 = bitcast <4 x i32> %91 to <2 x i64>
  %93 = extractelement <2 x i64> %92, i32 0
  %94 = extractelement <2 x i64> %92, i32 1
  %95 = bitcast i64 %93 to <2 x i32>
  %96 = shufflevector <2 x i32> %95, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %97 = bitcast i64 %94 to <2 x i32>
  %98 = shufflevector <2 x i32> %97, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %99 = shufflevector <4 x i32> %96, <4 x i32> %98, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %100 = or <4 x i32> %99, %73
  %101 = bitcast <4 x i32> %100 to <2 x i64>
  %102 = extractelement <2 x i64> %101, i32 0
  %103 = extractelement <2 x i64> %101, i32 1
  %104 = bitcast i64 %102 to <2 x float>
  %105 = bitcast i64 %103 to <2 x float>
  %106 = shufflevector <2 x float> %104, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %107 = shufflevector <2 x float> %105, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %108 = shufflevector <4 x float> %106, <4 x float> %107, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %109 = fcmp olt <4 x float> %108, %46
  %110 = sext <4 x i1> %109 to <4 x i32>
  %111 = bitcast <4 x i32> %110 to <2 x i64>
  %112 = extractelement <2 x i64> %111, i32 0
  %113 = extractelement <2 x i64> %111, i32 1
  %114 = bitcast i64 %112 to <2 x i32>
  %115 = shufflevector <2 x i32> %114, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %116 = bitcast i64 %113 to <2 x i32>
  %117 = shufflevector <2 x i32> %116, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %118 = shufflevector <4 x i32> %115, <4 x i32> %117, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %119 = bitcast <4 x float> %46 to <2 x i64>
  %120 = extractelement <2 x i64> %119, i32 0
  %121 = bitcast i64 %120 to <2 x i32>
  %122 = shufflevector <4 x float> %46, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %123 = bitcast <2 x float> %122 to <2 x i32>
  %124 = shufflevector <2 x i32> %121, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %125 = shufflevector <2 x i32> %123, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %126 = shufflevector <4 x i32> %124, <4 x i32> %125, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %127 = and <4 x i32> %118, %126
  %128 = bitcast <4 x i32> %127 to <2 x i64>
  %129 = extractelement <2 x i64> %128, i32 0
  %130 = extractelement <2 x i64> %128, i32 1
  %131 = bitcast i64 %129 to <2 x i32>
  %132 = shufflevector <2 x i32> %131, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %133 = bitcast i64 %130 to <2 x i32>
  %134 = shufflevector <2 x i32> %133, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %135 = shufflevector <4 x i32> %132, <4 x i32> %134, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %136 = bitcast <4 x i32> %118 to <2 x i64>
  %137 = xor <2 x i64> %136, <i64 -1, i64 -1>
  %138 = extractelement <2 x i64> %137, i32 0
  %139 = extractelement <2 x i64> %137, i32 1
  %140 = bitcast i64 %138 to <2 x i32>
  %141 = shufflevector <2 x i32> %140, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %142 = bitcast i64 %139 to <2 x i32>
  %143 = shufflevector <2 x i32> %142, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %144 = shufflevector <4 x i32> %141, <4 x i32> %143, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %145 = bitcast <4 x float> %108 to <2 x i64>
  %146 = extractelement <2 x i64> %145, i32 0
  %147 = bitcast i64 %146 to <2 x i32>
  %148 = bitcast i64 %103 to <2 x i32>
  %149 = shufflevector <2 x i32> %147, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %150 = shufflevector <2 x i32> %148, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %151 = shufflevector <4 x i32> %149, <4 x i32> %150, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %152 = and <4 x i32> %144, %151
  %153 = bitcast <4 x i32> %152 to <2 x i64>
  %154 = extractelement <2 x i64> %153, i32 0
  %155 = extractelement <2 x i64> %153, i32 1
  %156 = bitcast i64 %154 to <2 x i32>
  %157 = shufflevector <2 x i32> %156, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %158 = bitcast i64 %155 to <2 x i32>
  %159 = shufflevector <2 x i32> %158, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %160 = shufflevector <4 x i32> %157, <4 x i32> %159, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %161 = or <4 x i32> %160, %135
  %162 = bitcast <4 x i32> %161 to <2 x i64>
  %163 = extractelement <2 x i64> %162, i32 0
  %164 = extractelement <2 x i64> %162, i32 1
  %165 = bitcast i64 %163 to <2 x float>
  %166 = bitcast i64 %164 to <2 x float>
  %167 = shufflevector <2 x float> %165, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %168 = shufflevector <2 x float> %166, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %169 = shufflevector <4 x float> %167, <4 x float> %168, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %170 = getelementptr inbounds %class.GrCullTest, %class.GrCullTest* %0, i64 0, i32 2
  %171 = bitcast %"struct.skvx::Vec"* %170 to <4 x float>*
  %172 = load <4 x float>, <4 x float>* %171, align 16
  %173 = fcmp olt <4 x float> %172, %169
  %174 = sext <4 x i1> %173 to <4 x i32>
  %175 = bitcast <4 x i32> %174 to <2 x i64>
  %176 = extractelement <2 x i64> %175, i32 0
  %177 = extractelement <2 x i64> %175, i32 1
  %178 = trunc i64 %176 to i32
  %179 = icmp ne i32 %178, 0
  %180 = icmp ugt i64 %176, 4294967295
  %181 = and i1 %180, %179
  br i1 %181, label %182, label %187

182:                                              ; preds = %2
  %183 = trunc i64 %177 to i32
  %184 = icmp ne i32 %183, 0
  %185 = icmp ugt i64 %177, 4294967295
  %186 = and i1 %185, %184
  br label %187

187:                                              ; preds = %2, %182
  %188 = phi i1 [ false, %2 ], [ %186, %182 ]
  ret i1 %188
}

declare void @_Z16SkChopQuadAtHalfPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #3

declare zeroext i1 @_ZNK7SkConic6chopAtEfPS_(%struct.SkConic*, float, %struct.SkConic*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #6

declare void @_Z12SkChopQuadAtPK7SkPointPS_f(%struct.SkPoint*, %struct.SkPoint*, float) local_unnamed_addr #3

declare i32 @_ZN11GrPathUtils23findCubicConvex180ChopsEPK7SkPointPfPb(%struct.SkPoint*, float*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"*, i32, %struct.SkPoint*, i32) unnamed_addr #0 align 2 {
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca [7 x %struct.SkPoint], align 16
  %7 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 2
  %8 = tail call zeroext i1 @_ZNK10GrCullTest11areVisible4EPK7SkPoint(%class.GrCullTest* %7, %struct.SkPoint* %2)
  br i1 %8, label %24, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 14
  %15 = bitcast %struct.SkPoint* %2 to i64*
  %16 = bitcast %struct.SkPoint* %14 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  store i8 1, i8* %10, align 8
  br label %18

18:                                               ; preds = %9, %13
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 3
  %20 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 15
  %21 = bitcast %struct.SkPoint* %19 to i64*
  %22 = bitcast %struct.SkPoint* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  br label %180

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %25, i64 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = fcmp oeq float %28, %30
  br i1 %31, label %32, label %80

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 2, i32 1
  %36 = load float, float* %35, align 4
  %37 = fcmp oeq float %34, %36
  br i1 %37, label %38, label %80

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %40 = load float, float* %39, align 4
  %41 = fcmp oeq float %28, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %34, %44
  br i1 %45, label %54, label %46

46:                                               ; preds = %38, %42
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 3, i32 0
  %48 = load float, float* %47, align 4
  %49 = fcmp oeq float %28, %48
  br i1 %49, label %50, label %80

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 3, i32 1
  %52 = load float, float* %51, align 4
  %53 = fcmp oeq float %34, %52
  br i1 %53, label %54, label %80

54:                                               ; preds = %50, %42
  %55 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 3
  %58 = bitcast %struct.SkPoint* %57 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  %60 = extractelement <2 x float> %56, i32 0
  %61 = extractelement <2 x float> %59, i32 0
  %62 = fcmp oeq float %60, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %54
  %64 = extractelement <2 x float> %56, i32 1
  %65 = extractelement <2 x float> %59, i32 1
  %66 = fcmp oeq float %64, %65
  br i1 %66, label %180, label %67

67:                                               ; preds = %63, %54
  %68 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #11
  %69 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %70 = bitcast [4 x %struct.SkPoint]* %5 to <2 x float>*
  store <2 x float> %56, <2 x float>* %70, align 16
  %71 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1
  %72 = bitcast %struct.SkPoint* %71 to <2 x float>*
  store <2 x float> %56, <2 x float>* %72, align 8
  %73 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 2
  %74 = bitcast %struct.SkPoint* %73 to <2 x float>*
  store <2 x float> %59, <2 x float>* %74, align 16
  %75 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 3
  %76 = bitcast %struct.SkPoint* %75 to <2 x float>*
  store <2 x float> %59, <2 x float>* %76, align 8
  %77 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 9
  %78 = load float, float* %77, align 4
  %79 = fcmp oge float %78, 1.000000e+00
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, i1 zeroext %79, %struct.SkPoint* nonnull %69, <2 x float> %59) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #11
  br label %180

80:                                               ; preds = %46, %24, %32, %50
  %81 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 5
  %82 = load float, float* %81, align 4
  %83 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %84 = load <2 x float>, <2 x float>* %83, align 1
  %85 = bitcast %struct.SkPoint* %25 to <2 x float>*
  %86 = load <2 x float>, <2 x float>* %85, align 1
  %87 = bitcast %struct.SkPoint* %26 to <2 x float>*
  %88 = load <2 x float>, <2 x float>* %87, align 1
  %89 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 3
  %90 = bitcast %struct.SkPoint* %89 to <2 x float>*
  %91 = load <2 x float>, <2 x float>* %90, align 1
  %92 = shufflevector <2 x float> %88, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %93 = shufflevector <2 x float> %91, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %94 = shufflevector <4 x float> %92, <4 x float> %93, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %95 = shufflevector <2 x float> %86, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %96 = shufflevector <2 x float> %88, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %97 = shufflevector <4 x float> %95, <4 x float> %96, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %98 = shufflevector <2 x float> %84, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %99 = shufflevector <2 x float> %86, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %100 = shufflevector <4 x float> %98, <4 x float> %99, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %101 = fmul <4 x float> %97, <float -2.000000e+00, float -2.000000e+00, float -2.000000e+00, float -2.000000e+00>
  %102 = fadd <4 x float> %100, %101
  %103 = fadd <4 x float> %94, %102
  %104 = fmul <4 x float> %103, %103
  %105 = shufflevector <4 x float> %104, <4 x float> undef, <2 x i32> <i32 0, i32 2>
  %106 = shufflevector <4 x float> %104, <4 x float> undef, <2 x i32> <i32 1, i32 3>
  %107 = fadd <2 x float> %105, %106
  %108 = extractelement <2 x float> %107, i32 0
  %109 = extractelement <2 x float> %107, i32 1
  %110 = fcmp olt float %108, %109
  %111 = select i1 %110, float %109, float %108
  %112 = fmul float %82, %82
  %113 = fmul float %112, 5.625000e-01
  %114 = fmul float %113, %111
  %115 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 7, i64 0
  %116 = load float, float* %115, align 4
  %117 = fcmp oge float %116, %114
  %118 = icmp eq i32 %3, 0
  %119 = or i1 %118, %117
  br i1 %119, label %120, label %124

120:                                              ; preds = %80
  %121 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 8, i64 0
  %122 = load float, float* %121, align 4
  %123 = fcmp oge float %122, %114
  tail call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, i1 zeroext %123, %struct.SkPoint* %2, <2 x float> %91)
  br label %180

124:                                              ; preds = %80
  %125 = tail call float @_Z32SkMeasureNonInflectCubicRotationPK7SkPoint(%struct.SkPoint* %2) #11
  %126 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 6
  %127 = load float, float* %126, align 8
  %128 = fmul float %125, %127
  %129 = tail call float @llvm.ceil.f32(float %128) #11
  %130 = fcmp olt float %129, 1.000000e+00
  %131 = select i1 %130, float 1.000000e+00, float %129
  %132 = tail call float @sqrtf(float %114) #11
  %133 = tail call float @sqrtf(float %132) #11
  %134 = tail call float @llvm.ceil.f32(float %133) #11
  %135 = fcmp olt float %134, 1.000000e+00
  %136 = select i1 %135, float 1.000000e+00, float %134
  %137 = fadd float %131, %136
  %138 = fadd float %137, -1.000000e+00
  %139 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 4
  %140 = load i32, i32* %139, align 16
  %141 = sitofp i32 %140 to float
  %142 = fcmp ogt float %138, %141
  br i1 %142, label %143, label %175

143:                                              ; preds = %124
  %144 = bitcast [7 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %144) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %144, i8 -1, i64 56, i1 false)
  %145 = icmp slt i32 %3, 0
  br i1 %145, label %146, label %165

146:                                              ; preds = %143
  %147 = bitcast float %136 to i32
  %148 = add i32 %147, 8388607
  %149 = ashr i32 %148, 23
  %150 = add nsw i32 %149, -127
  %151 = ashr i32 %150, 31
  %152 = xor i32 %151, -1
  %153 = and i32 %150, %152
  %154 = bitcast float %131 to i32
  %155 = add i32 %154, 8388607
  %156 = ashr i32 %155, 23
  %157 = add nsw i32 %156, -127
  %158 = ashr i32 %157, 31
  %159 = xor i32 %158, -1
  %160 = and i32 %157, %159
  %161 = add nsw i32 %153, %160
  %162 = icmp sgt i32 %161, 0
  %163 = select i1 %162, i32 %161, i32 0
  %164 = add nuw nsw i32 %163, 1
  br label %165

165:                                              ; preds = %146, %143
  %166 = phi i32 [ %164, %146 ], [ %3, %143 ]
  %167 = fcmp ult float %136, %131
  %168 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %6, i64 0, i64 0
  br i1 %167, label %170, label %169

169:                                              ; preds = %165
  call void @_Z17SkChopCubicAtHalfPK7SkPointPS_(%struct.SkPoint* %2, %struct.SkPoint* nonnull %168) #11
  br label %172

170:                                              ; preds = %165
  %171 = tail call float @_Z21SkFindCubicMidTangentPK7SkPoint(%struct.SkPoint* %2) #11
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* %2, %struct.SkPoint* nonnull %168, float %171) #11
  br label %172

172:                                              ; preds = %170, %169
  %173 = add nsw i32 %166, -1
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, %struct.SkPoint* nonnull %168, i32 %173)
  %174 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %6, i64 0, i64 3
  call fastcc void @_ZN12_GLOBAL__N_111PatchWriter31internalCubicConvex180PatchesToENS0_8JoinTypeEPK7SkPointi(%"class.(anonymous namespace)::PatchWriter"* %0, i32 3, %struct.SkPoint* %174, i32 %173)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %144) #11
  br label %180

175:                                              ; preds = %124
  %176 = getelementptr inbounds %"class.(anonymous namespace)::PatchWriter", %"class.(anonymous namespace)::PatchWriter"* %0, i64 0, i32 9
  %177 = load float, float* %176, align 4
  %178 = fcmp ole float %138, %177
  %179 = load <2 x float>, <2 x float>* %90, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_111PatchWriter15internalPatchToENS0_8JoinTypeEbPK7SkPointS2_(%"class.(anonymous namespace)::PatchWriter"* %0, i32 %1, i1 zeroext %178, %struct.SkPoint* %2, <2 x float> %179)
  br label %180

180:                                              ; preds = %67, %63, %120, %175, %172, %18
  ret void
}

declare void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint*, %struct.SkPoint*, float) local_unnamed_addr #3

declare void @_Z13SkChopCubicAtPK7SkPointPS_ff(%struct.SkPoint*, %struct.SkPoint*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10GrCullTest11areVisible4EPK7SkPoint(%class.GrCullTest*, %struct.SkPoint*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrCullTest, %class.GrCullTest* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = insertelement <4 x float> undef, float %5, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  %8 = bitcast %"struct.skvx::Vec"* %3 to <4 x float>*
  %9 = load <4 x float>, <4 x float>* %8, align 16
  %10 = fmul <4 x float> %9, %7
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %12 = load float, float* %11, align 4
  %13 = insertelement <4 x float> undef, float %12, i32 0
  %14 = shufflevector <4 x float> %13, <4 x float> undef, <4 x i32> zeroinitializer
  %15 = fmul <4 x float> %9, %14
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %17 = load float, float* %16, align 4
  %18 = insertelement <4 x float> undef, float %17, i32 0
  %19 = shufflevector <4 x float> %18, <4 x float> undef, <4 x i32> zeroinitializer
  %20 = fmul <4 x float> %9, %19
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 1
  %22 = load float, float* %21, align 4
  %23 = insertelement <4 x float> undef, float %22, i32 0
  %24 = shufflevector <4 x float> %23, <4 x float> undef, <4 x i32> zeroinitializer
  %25 = fmul <4 x float> %9, %24
  %26 = bitcast %class.GrCullTest* %0 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 16
  %28 = getelementptr inbounds %class.GrCullTest, %class.GrCullTest* %0, i64 0, i32 0, i32 1
  %29 = bitcast %"struct.skvx::Vec.17"* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 8
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = insertelement <2 x float> undef, float %32, i32 0
  %34 = shufflevector <2 x float> %27, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %35 = shufflevector <2 x float> %30, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %36 = shufflevector <4 x float> %34, <4 x float> %35, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %37 = shufflevector <2 x float> %33, <2 x float> undef, <4 x i32> zeroinitializer
  %38 = fmul <4 x float> %36, %37
  %39 = fadd <4 x float> %10, %38
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %41 = load float, float* %40, align 4
  %42 = insertelement <2 x float> undef, float %41, i32 0
  %43 = shufflevector <2 x float> %42, <2 x float> undef, <4 x i32> zeroinitializer
  %44 = fmul <4 x float> %36, %43
  %45 = fadd <4 x float> %15, %44
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %47 = load float, float* %46, align 4
  %48 = insertelement <2 x float> undef, float %47, i32 0
  %49 = shufflevector <2 x float> %48, <2 x float> undef, <4 x i32> zeroinitializer
  %50 = fmul <4 x float> %36, %49
  %51 = fadd <4 x float> %20, %50
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 0
  %53 = load float, float* %52, align 4
  %54 = insertelement <2 x float> undef, float %53, i32 0
  %55 = shufflevector <2 x float> %54, <2 x float> undef, <4 x i32> zeroinitializer
  %56 = fmul <4 x float> %36, %55
  %57 = fadd <4 x float> %25, %56
  %58 = fcmp olt <4 x float> %39, %45
  %59 = sext <4 x i1> %58 to <4 x i32>
  %60 = bitcast <4 x i32> %59 to <2 x i64>
  %61 = extractelement <2 x i64> %60, i32 0
  %62 = extractelement <2 x i64> %60, i32 1
  %63 = bitcast i64 %61 to <2 x i32>
  %64 = shufflevector <2 x i32> %63, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %65 = bitcast i64 %62 to <2 x i32>
  %66 = shufflevector <2 x i32> %65, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %67 = shufflevector <4 x i32> %64, <4 x i32> %66, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %68 = bitcast <4 x float> %45 to <2 x i64>
  %69 = extractelement <2 x i64> %68, i32 0
  %70 = bitcast i64 %69 to <2 x i32>
  %71 = shufflevector <4 x float> %45, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %72 = bitcast <2 x float> %71 to <2 x i32>
  %73 = shufflevector <2 x i32> %70, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %74 = shufflevector <2 x i32> %72, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %75 = shufflevector <4 x i32> %73, <4 x i32> %74, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %76 = and <4 x i32> %67, %75
  %77 = bitcast <4 x i32> %76 to <2 x i64>
  %78 = extractelement <2 x i64> %77, i32 0
  %79 = extractelement <2 x i64> %77, i32 1
  %80 = bitcast i64 %78 to <2 x i32>
  %81 = shufflevector <2 x i32> %80, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %82 = bitcast i64 %79 to <2 x i32>
  %83 = shufflevector <2 x i32> %82, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %84 = shufflevector <4 x i32> %81, <4 x i32> %83, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %85 = bitcast <4 x i32> %67 to <2 x i64>
  %86 = xor <2 x i64> %85, <i64 -1, i64 -1>
  %87 = extractelement <2 x i64> %86, i32 0
  %88 = extractelement <2 x i64> %86, i32 1
  %89 = bitcast i64 %87 to <2 x i32>
  %90 = shufflevector <2 x i32> %89, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %91 = bitcast i64 %88 to <2 x i32>
  %92 = shufflevector <2 x i32> %91, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %93 = shufflevector <4 x i32> %90, <4 x i32> %92, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %94 = bitcast <4 x float> %39 to <2 x i64>
  %95 = extractelement <2 x i64> %94, i32 0
  %96 = bitcast i64 %95 to <2 x i32>
  %97 = shufflevector <4 x float> %39, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %98 = bitcast <2 x float> %97 to <2 x i32>
  %99 = shufflevector <2 x i32> %96, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %100 = shufflevector <2 x i32> %98, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %101 = shufflevector <4 x i32> %99, <4 x i32> %100, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %102 = and <4 x i32> %93, %101
  %103 = bitcast <4 x i32> %102 to <2 x i64>
  %104 = extractelement <2 x i64> %103, i32 0
  %105 = extractelement <2 x i64> %103, i32 1
  %106 = bitcast i64 %104 to <2 x i32>
  %107 = shufflevector <2 x i32> %106, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %108 = bitcast i64 %105 to <2 x i32>
  %109 = shufflevector <2 x i32> %108, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %110 = shufflevector <4 x i32> %107, <4 x i32> %109, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %111 = or <4 x i32> %110, %84
  %112 = bitcast <4 x i32> %111 to <2 x i64>
  %113 = extractelement <2 x i64> %112, i32 0
  %114 = extractelement <2 x i64> %112, i32 1
  %115 = bitcast i64 %113 to <2 x float>
  %116 = bitcast i64 %114 to <2 x float>
  %117 = shufflevector <2 x float> %115, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %118 = shufflevector <2 x float> %116, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %119 = shufflevector <4 x float> %117, <4 x float> %118, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %120 = fcmp olt <4 x float> %51, %57
  %121 = sext <4 x i1> %120 to <4 x i32>
  %122 = bitcast <4 x i32> %121 to <2 x i64>
  %123 = extractelement <2 x i64> %122, i32 0
  %124 = extractelement <2 x i64> %122, i32 1
  %125 = bitcast i64 %123 to <2 x i32>
  %126 = shufflevector <2 x i32> %125, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %127 = bitcast i64 %124 to <2 x i32>
  %128 = shufflevector <2 x i32> %127, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %129 = shufflevector <4 x i32> %126, <4 x i32> %128, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %130 = bitcast <4 x float> %57 to <2 x i64>
  %131 = extractelement <2 x i64> %130, i32 0
  %132 = bitcast i64 %131 to <2 x i32>
  %133 = shufflevector <4 x float> %57, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %134 = bitcast <2 x float> %133 to <2 x i32>
  %135 = shufflevector <2 x i32> %132, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %136 = shufflevector <2 x i32> %134, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %137 = shufflevector <4 x i32> %135, <4 x i32> %136, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %138 = and <4 x i32> %129, %137
  %139 = bitcast <4 x i32> %138 to <2 x i64>
  %140 = extractelement <2 x i64> %139, i32 0
  %141 = extractelement <2 x i64> %139, i32 1
  %142 = bitcast i64 %140 to <2 x i32>
  %143 = shufflevector <2 x i32> %142, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %144 = bitcast i64 %141 to <2 x i32>
  %145 = shufflevector <2 x i32> %144, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %146 = shufflevector <4 x i32> %143, <4 x i32> %145, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %147 = bitcast <4 x i32> %129 to <2 x i64>
  %148 = xor <2 x i64> %147, <i64 -1, i64 -1>
  %149 = extractelement <2 x i64> %148, i32 0
  %150 = extractelement <2 x i64> %148, i32 1
  %151 = bitcast i64 %149 to <2 x i32>
  %152 = shufflevector <2 x i32> %151, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %153 = bitcast i64 %150 to <2 x i32>
  %154 = shufflevector <2 x i32> %153, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %155 = shufflevector <4 x i32> %152, <4 x i32> %154, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %156 = bitcast <4 x float> %51 to <2 x i64>
  %157 = extractelement <2 x i64> %156, i32 0
  %158 = bitcast i64 %157 to <2 x i32>
  %159 = shufflevector <4 x float> %51, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %160 = bitcast <2 x float> %159 to <2 x i32>
  %161 = shufflevector <2 x i32> %158, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %162 = shufflevector <2 x i32> %160, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %163 = shufflevector <4 x i32> %161, <4 x i32> %162, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %164 = and <4 x i32> %155, %163
  %165 = bitcast <4 x i32> %164 to <2 x i64>
  %166 = extractelement <2 x i64> %165, i32 0
  %167 = extractelement <2 x i64> %165, i32 1
  %168 = bitcast i64 %166 to <2 x i32>
  %169 = shufflevector <2 x i32> %168, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %170 = bitcast i64 %167 to <2 x i32>
  %171 = shufflevector <2 x i32> %170, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %172 = shufflevector <4 x i32> %169, <4 x i32> %171, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %173 = or <4 x i32> %172, %146
  %174 = bitcast <4 x i32> %173 to <2 x i64>
  %175 = extractelement <2 x i64> %174, i32 0
  %176 = extractelement <2 x i64> %174, i32 1
  %177 = bitcast i64 %175 to <2 x float>
  %178 = bitcast i64 %176 to <2 x float>
  %179 = shufflevector <2 x float> %177, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %180 = shufflevector <2 x float> %178, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %181 = shufflevector <4 x float> %179, <4 x float> %180, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %182 = fcmp olt <4 x float> %119, %181
  %183 = sext <4 x i1> %182 to <4 x i32>
  %184 = bitcast <4 x i32> %183 to <2 x i64>
  %185 = extractelement <2 x i64> %184, i32 0
  %186 = extractelement <2 x i64> %184, i32 1
  %187 = bitcast i64 %185 to <2 x i32>
  %188 = shufflevector <2 x i32> %187, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %189 = bitcast i64 %186 to <2 x i32>
  %190 = shufflevector <2 x i32> %189, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %191 = shufflevector <4 x i32> %188, <4 x i32> %190, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %192 = bitcast <4 x float> %181 to <2 x i64>
  %193 = extractelement <2 x i64> %192, i32 0
  %194 = bitcast i64 %193 to <2 x i32>
  %195 = bitcast i64 %176 to <2 x i32>
  %196 = shufflevector <2 x i32> %194, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %197 = shufflevector <2 x i32> %195, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %198 = shufflevector <4 x i32> %196, <4 x i32> %197, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %199 = and <4 x i32> %191, %198
  %200 = bitcast <4 x i32> %199 to <2 x i64>
  %201 = extractelement <2 x i64> %200, i32 0
  %202 = extractelement <2 x i64> %200, i32 1
  %203 = bitcast i64 %201 to <2 x i32>
  %204 = shufflevector <2 x i32> %203, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %205 = bitcast i64 %202 to <2 x i32>
  %206 = shufflevector <2 x i32> %205, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %207 = shufflevector <4 x i32> %204, <4 x i32> %206, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %208 = bitcast <4 x i32> %191 to <2 x i64>
  %209 = xor <2 x i64> %208, <i64 -1, i64 -1>
  %210 = extractelement <2 x i64> %209, i32 0
  %211 = extractelement <2 x i64> %209, i32 1
  %212 = bitcast i64 %210 to <2 x i32>
  %213 = shufflevector <2 x i32> %212, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %214 = bitcast i64 %211 to <2 x i32>
  %215 = shufflevector <2 x i32> %214, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %216 = shufflevector <4 x i32> %213, <4 x i32> %215, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %217 = bitcast <4 x float> %119 to <2 x i64>
  %218 = extractelement <2 x i64> %217, i32 0
  %219 = bitcast i64 %218 to <2 x i32>
  %220 = bitcast i64 %114 to <2 x i32>
  %221 = shufflevector <2 x i32> %219, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %222 = shufflevector <2 x i32> %220, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %223 = shufflevector <4 x i32> %221, <4 x i32> %222, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %224 = and <4 x i32> %216, %223
  %225 = bitcast <4 x i32> %224 to <2 x i64>
  %226 = extractelement <2 x i64> %225, i32 0
  %227 = extractelement <2 x i64> %225, i32 1
  %228 = bitcast i64 %226 to <2 x i32>
  %229 = shufflevector <2 x i32> %228, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %230 = bitcast i64 %227 to <2 x i32>
  %231 = shufflevector <2 x i32> %230, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %232 = shufflevector <4 x i32> %229, <4 x i32> %231, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %233 = or <4 x i32> %232, %207
  %234 = bitcast <4 x i32> %233 to <2 x i64>
  %235 = extractelement <2 x i64> %234, i32 0
  %236 = extractelement <2 x i64> %234, i32 1
  %237 = bitcast i64 %235 to <2 x float>
  %238 = bitcast i64 %236 to <2 x float>
  %239 = shufflevector <2 x float> %237, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %240 = shufflevector <2 x float> %238, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %241 = shufflevector <4 x float> %239, <4 x float> %240, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %242 = getelementptr inbounds %class.GrCullTest, %class.GrCullTest* %0, i64 0, i32 2
  %243 = bitcast %"struct.skvx::Vec"* %242 to <4 x float>*
  %244 = load <4 x float>, <4 x float>* %243, align 16
  %245 = fcmp olt <4 x float> %244, %241
  %246 = sext <4 x i1> %245 to <4 x i32>
  %247 = bitcast <4 x i32> %246 to <2 x i64>
  %248 = extractelement <2 x i64> %247, i32 0
  %249 = extractelement <2 x i64> %247, i32 1
  %250 = trunc i64 %248 to i32
  %251 = icmp ne i32 %250, 0
  %252 = icmp ugt i64 %248, 4294967295
  %253 = and i1 %252, %251
  br i1 %253, label %254, label %259

254:                                              ; preds = %2
  %255 = trunc i64 %249 to i32
  %256 = icmp ne i32 %255, 0
  %257 = icmp ugt i64 %249, 4294967295
  %258 = and i1 %257, %256
  br label %259

259:                                              ; preds = %2, %254
  %260 = phi i1 [ false, %2 ], [ %258, %254 ]
  ret i1 %260
}

declare float @_Z32SkMeasureNonInflectCubicRotationPK7SkPoint(%struct.SkPoint*) local_unnamed_addr #3

declare void @_Z17SkChopCubicAtHalfPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #3

declare float @_Z21SkFindCubicMidTangentPK7SkPoint(%struct.SkPoint*) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass*, %class.sk_sp.16*, %class.sk_sp.16*, %class.sk_sp.16*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass4drawEii(%class.GrOpsRenderPass*, i32, i32) local_unnamed_addr #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrStrokeTessellatorD2Ev(%class.GrStrokeTessellator*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.GrStrokeTessellator* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV19GrStrokeTessellator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV14GrStrokeShader, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %class.GrStrokeTessellator, %class.GrStrokeTessellator* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i64 88
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.GrStrokeTessellator, %class.GrStrokeTessellator* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i64 80
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrStrokeTessellatorD0Ev(%class.GrStrokeTessellator*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!5 = distinct !{!5, !"_ZNK6SkPath9RangeIterdeEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN20GrVertexChunkBuilder14appendVerticesEi: argument 0"}
!8 = distinct !{!8, !"_ZN20GrVertexChunkBuilder14appendVerticesEi"}
!9 = distinct !{!9, !10, !"_ZN20GrVertexChunkBuilder12appendVertexEv: argument 0"}
!10 = distinct !{!10, !"_ZN20GrVertexChunkBuilder12appendVertexEv"}
!11 = !{!12, !7, !9}
!12 = distinct !{!12, !13, !"_ZNSt3__18exchangeI14GrVertexWriterS1_EET_RS2_OT0_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__18exchangeI14GrVertexWriterS1_EET_RS2_OT0_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN20GrVertexChunkBuilder14appendVerticesEi: argument 0"}
!16 = distinct !{!16, !"_ZN20GrVertexChunkBuilder14appendVerticesEi"}
!17 = distinct !{!17, !18, !"_ZN20GrVertexChunkBuilder12appendVertexEv: argument 0"}
!18 = distinct !{!18, !"_ZN20GrVertexChunkBuilder12appendVertexEv"}
!19 = !{!20, !15, !17}
!20 = distinct !{!20, !21, !"_ZNSt3__18exchangeI14GrVertexWriterS1_EET_RS2_OT0_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__18exchangeI14GrVertexWriterS1_EET_RS2_OT0_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN20GrVertexChunkBuilder14appendVerticesEi: argument 0"}
!24 = distinct !{!24, !"_ZN20GrVertexChunkBuilder14appendVerticesEi"}
!25 = distinct !{!25, !26, !"_ZN20GrVertexChunkBuilder12appendVertexEv: argument 0"}
!26 = distinct !{!26, !"_ZN20GrVertexChunkBuilder12appendVertexEv"}
!27 = !{!28, !23, !25}
!28 = distinct !{!28, !29, !"_ZNSt3__18exchangeI14GrVertexWriterS1_EET_RS2_OT0_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__18exchangeI14GrVertexWriterS1_EET_RS2_OT0_"}
