; ModuleID = '../../third_party/blink/renderer/core/mojo/mojo_handle.cc'
source_filename = "../../third_party/blink/renderer/core/mojo/mojo_handle.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.166", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.110", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist.41"* }
%"class.blink::Worklist.41" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64 }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { float }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.113", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.41"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.178" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.166" = type { %"struct.std::__1::__atomic_base.167" }
%"struct.std::__1::__atomic_base.167" = type { %"struct.std::__1::__cxx_atomic_impl.168" }
%"struct.std::__1::__cxx_atomic_impl.168" = type { %"struct.std::__1::__cxx_atomic_base_impl.169" }
%"struct.std::__1::__cxx_atomic_base_impl.169" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.171" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent.186" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent.186" = type { %"class.blink::PersistentBase.187" }
%"class.blink::PersistentBase.187" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.192" }
%"class.WTF::HashTable.192" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.194", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::MojoHandle" = type <{ %"class.blink::ScriptWrappable", %"class.mojo::ScopedHandleBase", [4 x i8] }>
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::MojoWatcher" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::SelfKeepAlive", %class.scoped_refptr.170, %"class.blink::Member", %"class.mojo::ScopedHandleBase.177", %"class.mojo::Handle" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.2"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::MojoWatcher"*, %"class.blink::PersistentNodePtr" }
%class.scoped_refptr.170 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.171" }
%"class.blink::Member" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::V8MojoWatchCallback"* }
%"class.mojo::ScopedHandleBase.177" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.185, %"class.blink::Member.196", %"class.blink::SelfKeepAlive.198", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.185 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive.198" = type { %"class.blink::Persistent.199" }
%"class.blink::Persistent.199" = type { %"class.blink::PersistentBase.200" }
%"class.blink::PersistentBase.200" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::MojoHandleSignals" = type opaque
%"class.blink::V8MojoWatchCallback" = type opaque
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.235", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.244", %"class.blink::Member.246", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.255", %"class.blink::Member.261", %"class.blink::Member.263", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.201" }
%"class.blink::HeapHashMap.201" = type { %"class.WTF::HashMap.204" }
%"class.WTF::HashMap.204" = type { %"class.WTF::HashTable.205" }
%"class.WTF::HashTable.205" = type <{ %"struct.WTF::KeyValuePair.207"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.207" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.208" }
%"class.blink::Supplementable.208" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.209" }
%"class.blink::HeapHashMap.209" = type { %"class.WTF::HashMap.212" }
%"class.WTF::HashMap.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.WTF::KeyValuePair.215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.215" = type { i8*, %"class.blink::Member.326" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.328" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.216, %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.223", %"class.blink::Member.229", i32, [4 x i8], %"class.WTF::HashSet.231", i32, i32 }
%class.scoped_refptr.216 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.231" = type { %"class.WTF::HashTable.232" }
%"class.WTF::HashTable.232" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.239" }
%"class.WTF::Vector.239" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241" }
%"class.WTF::VectorBufferBase.241" = type { %"class.blink::Member.242"*, i32, i32 }
%"class.blink::Member.242" = type opaque
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.248", i32, i32 }
%"class.blink::HeapHashMap.248" = type { %"class.WTF::HashMap.251" }
%"class.WTF::HashMap.251" = type { %"class.WTF::HashTable.252" }
%"class.WTF::HashTable.252" = type <{ %"struct.WTF::KeyValuePair.254"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.254" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::V8UnionArrayBufferOrArrayBufferView" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.267", %"class.blink::NotShared" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared" = type { %"class.blink::Member.269" }
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.271" }
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.273" = type { %"class.WTF::Vector.276" }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"class.blink::Member.279"*, i32, i32 }
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::MojoHandle"* }
%struct.MojoWriteMessageOptions = type { i32, i32 }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284", [16 x i8] }
%"class.WTF::VectorBufferBase.284" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.287", %"class.mojo::internal::Buffer", %"class.std::__1::vector.288", %"class.std::__1::vector.295", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.287" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"*, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.mojo::ScopedHandleBase"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.298" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.297 }
%class.scoped_refptr.297 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.304", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.307, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.308", [4 x i8] }>
%"class.base::RefCountedThreadSafe.304" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.305 }
%class.scoped_refptr.305 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.306", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.307 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"struct.std::__1::atomic.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__cxx_atomic_impl.311" }
%"struct.std::__1::__cxx_atomic_impl.311" = type { %"struct.std::__1::__cxx_atomic_base_impl.312" }
%"struct.std::__1::__cxx_atomic_base_impl.312" = type { i32 }
%"class.blink::MojoReadMessageResult" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8], %"class.blink::Member.267", %"class.blink::HeapVector.273", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::MojoReadMessageFlags" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%struct.MojoReadMessageOptions = type { i32, i32 }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318", [16 x i8] }
%"class.WTF::VectorBufferBase.318" = type { i32*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.MojoSerializeMessageOptions = type { i32, i32 }
%struct.MojoGetMessageDataOptions = type { i32, i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::MojoWriteDataResult" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::MojoWriteDataOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%struct.MojoWriteDataOptions = type { i32, i32 }
%"class.blink::MojoReadDataResult" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%struct.MojoReadDataOptions = type { i32, i32 }
%"class.blink::MojoDiscardDataOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::MojoReadDataOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::MojoMapBufferResult" = type <{ %"class.blink::IDLDictionaryBase", i8, [7 x i8], %"class.blink::Member.267", i32, [4 x i8] }>
%struct.MojoMapBufferOptions = type { i32, i32 }
%"class.blink::MojoCreateSharedBufferResult" = type <{ %"class.blink::IDLDictionaryBase", i8, [7 x i8], %"class.blink::Member.279", i32, [4 x i8] }>
%"class.blink::MojoDuplicateBufferHandleOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%struct.MojoDuplicateBufferHandleOptions = type { i32, i32 }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10MojoHandleD2Ev = comdat any

$_ZN5blink10MojoHandleD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink10MojoHandle18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF12VectorBufferIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink18DOMArrayBufferBaseD2Ev = comdat any

$_ZN5blink18DOMArrayBufferBaseD0Ev = comdat any

$_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE = comdat any

$_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MojoHandleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10MojoHandleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZTVN5blink10MojoHandleE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18DOMArrayBufferBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink10MojoHandleE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MojoHandle"*)* @_ZN5blink10MojoHandleD2Ev to i8*), i8* bitcast (void (%"class.blink::MojoHandle"*)* @_ZN5blink10MojoHandleD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MojoHandle"*)* @_ZNK5blink10MojoHandle18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [58 x i8] c"../../third_party/blink/renderer/core/mojo/mojo_handle.cc\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14DOMArrayBufferE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink18DOMArrayBufferBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*)* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::ScopedHandleBase<mojo::Handle>]\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.10 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.12 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10MojoHandleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MojoHandle>, WTF::VectorTraits<blink::Member<blink::MojoHandle> > >]\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10MojoHandle18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink10MojoHandleC1EN4mojo16ScopedHandleBaseINS1_6HandleEEE = hidden unnamed_addr alias void (%"class.blink::MojoHandle"*, %"class.mojo::ScopedHandleBase"*), void (%"class.blink::MojoHandle"*, %"class.mojo::ScopedHandleBase"*)* @_ZN5blink10MojoHandleC2EN4mojo16ScopedHandleBaseINS1_6HandleEEE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10MojoHandle10TakeHandleEv(%"class.mojo::ScopedHandleBase"* noalias nocapture sret, %"class.blink::MojoHandle"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load i32, i32* %4, align 4, !noalias !2
  store i32 %5, i32* %3, align 4, !alias.scope !2
  store i32 0, i32* %4, align 4, !noalias !2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink10MojoHandleC2EN4mojo16ScopedHandleBaseINS1_6HandleEEE(%"class.blink::MojoHandle"* nocapture, %"class.mojo::ScopedHandleBase"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10MojoHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4, !noalias !5
  store i32 %7, i32* %5, align 4, !alias.scope !5
  store i32 0, i32* %6, align 4, !noalias !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10MojoHandle5closeEv(%"class.blink::MojoHandle"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @MojoClose(i32 %3) #8
  br label %7

7:                                                ; preds = %1, %5
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoWatcher"* @_ZN5blink10MojoHandle5watchEPNS_11ScriptStateEPKNS_17MojoHandleSignalsEPNS_19V8MojoWatchCallbackE(%"class.blink::MojoHandle"* nocapture readonly, %"class.blink::ScriptState"*, %"class.blink::MojoHandleSignals"*, %"class.blink::V8MojoWatchCallback"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.mojo::Handle", align 4
  %6 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %5, i64 0, i32 0
  %8 = load i32, i32* %6, align 4
  store i32 %8, i32* %7, align 4
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #8
  %10 = call %"class.blink::MojoWatcher"* @_ZN5blink11MojoWatcher6CreateEN4mojo6HandleEPKNS_17MojoHandleSignalsEPNS_19V8MojoWatchCallbackEPNS_16ExecutionContextE(%"class.mojo::Handle"* nonnull %5, %"class.blink::MojoHandleSignals"* %2, %"class.blink::V8MojoWatchCallback"* %3, %"class.blink::ExecutionContext"* %9) #8
  ret %"class.blink::MojoWatcher"* %10
}

declare %"class.blink::MojoWatcher"* @_ZN5blink11MojoWatcher6CreateEN4mojo6HandleEPKNS_17MojoHandleSignalsEPNS_19V8MojoWatchCallbackEPNS_16ExecutionContextE(%"class.mojo::Handle"*, %"class.blink::MojoHandleSignals"*, %"class.blink::V8MojoWatchCallback"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10MojoHandle12writeMessageEPKNS_35V8UnionArrayBufferOrArrayBufferViewERKNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::MojoHandle"* nocapture readonly, %"class.blink::V8UnionArrayBufferOrArrayBufferView"* nocapture readonly, %"class.blink::HeapVector.273"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.MojoWriteMessageOptions, align 8
  %5 = alloca %"class.WTF::Vector.282", align 8
  %6 = alloca %"class.mojo::Message", align 8
  %7 = alloca %"class.mojo::ScopedHandleBase.287", align 8
  %8 = bitcast %"class.WTF::Vector.282"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %5, i64 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %5, i64 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.WTF::Vector.282"* %5 to i8**
  %14 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %5, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  store i8* %12, i8** %13, align 8
  store i32 4, i32* %10, align 8
  store i32 0, i32* %11, align 4
  %15 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, 4
  %18 = bitcast i8* %12 to %"class.mojo::ScopedHandleBase"*
  br i1 %17, label %19, label %32, !prof !8

19:                                               ; preds = %3
  %20 = icmp eq i8* %12, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %19
  %22 = zext i32 %16 to i64
  %23 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64 %22) #8
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv, i64 0, i64 0)) #8
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast %"class.WTF::Vector.282"* %5 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = lshr i64 %23, 2
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %10, align 8
  br label %30

29:                                               ; preds = %19
  call void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.282"* nonnull %5, i32 %16) #8
  br label %30

30:                                               ; preds = %29, %21
  %31 = load i32, i32* %15, align 4
  br label %32

32:                                               ; preds = %30, %3
  %33 = phi i32 [ %31, %30 ], [ %16, %3 ]
  %34 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.279"*, %"class.blink::Member.279"** %34, align 8
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.blink::Member.279", %"class.blink::Member.279"* %35, i64 %36
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %70, label %42

39:                                               ; preds = %66
  %40 = and i8 %67, 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %70, label %124

42:                                               ; preds = %32, %66
  %43 = phi i8 [ %67, %66 ], [ 0, %32 ]
  %44 = phi %"class.blink::Member.279"* [ %68, %66 ], [ %35, %32 ]
  %45 = getelementptr inbounds %"class.blink::Member.279", %"class.blink::Member.279"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::MojoHandle"*, %"class.blink::MojoHandle"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %42
  %51 = load i32, i32* %11, align 4
  %52 = load i32, i32* %10, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %54, label %58, !prof !9

54:                                               ; preds = %50
  %55 = add i32 %51, 1
  call void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.282"* nonnull %5, i32 %55) #8
  %56 = load i32, i32* %11, align 4
  %57 = load i32, i32* %47, align 4, !noalias !10
  br label %58

58:                                               ; preds = %50, %54
  %59 = phi i32 [ %57, %54 ], [ %48, %50 ]
  %60 = phi i32 [ %56, %54 ], [ %51, %50 ]
  %61 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %9, align 8
  %62 = zext i32 %60 to i64
  %63 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %61, i64 %62, i32 0, i32 0
  store i32 %59, i32* %63, align 4, !alias.scope !10
  store i32 0, i32* %47, align 4, !noalias !10
  %64 = load i32, i32* %11, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %11, align 4
  br label %66

66:                                               ; preds = %42, %58
  %67 = phi i8 [ %43, %58 ], [ 1, %42 ]
  %68 = getelementptr inbounds %"class.blink::Member.279", %"class.blink::Member.279"* %44, i64 1
  %69 = icmp eq %"class.blink::Member.279"* %68, %37
  br i1 %69, label %39, label %42

70:                                               ; preds = %32, %39
  %71 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  switch i32 %72, label %104 [
    i32 0, label %73
    i32 1, label %86
  ]

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 2, i32 0, i32 0
  %75 = bitcast %"class.blink::DOMArrayBuffer"** %74 to %"class.blink::DOMArrayBufferBase"**
  %76 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %76, i64 0, i32 1, i32 0, i32 0
  %78 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %77, align 8
  %79 = icmp eq %"class.v8::BackingStore"* %78, null
  br i1 %79, label %104, label %80

80:                                               ; preds = %73
  %81 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %78) #8
  %82 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %77, align 8
  %83 = icmp eq %"class.v8::BackingStore"* %82, null
  br i1 %83, label %104, label %84

84:                                               ; preds = %80
  %85 = call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %82) #8
  br label %104

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %88 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %87, align 8, !noalias !13
  %89 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %88, i64 0, i32 3, i32 0, i32 0
  %90 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %90, i64 0, i32 2
  %92 = load i8, i8* %91, align 8, !range !16
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %88, i64 0, i32 1
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %86, %94
  %98 = phi i8* [ %96, %94 ], [ null, %86 ]
  %99 = bitcast %"class.blink::DOMArrayBufferView"* %88 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %100 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %99, align 8
  %101 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %100, i64 10
  %102 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %101, align 8
  %103 = call i64 %102(%"class.blink::DOMArrayBufferView"* %88) #8
  br label %104

104:                                              ; preds = %73, %84, %80, %70, %97
  %105 = phi i8* [ null, %70 ], [ %98, %97 ], [ %81, %84 ], [ %81, %80 ], [ null, %73 ]
  %106 = phi i64 [ 0, %70 ], [ %103, %97 ], [ %85, %84 ], [ 0, %80 ], [ 0, %73 ]
  %107 = bitcast %"class.mojo::Message"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %107) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 120, i1 false)
  %108 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %9, align 8
  %109 = load i32, i32* %11, align 4
  %110 = zext i32 %109 to i64
  call void @_ZN4mojo7MessageC1EN4base4spanIKhLm18446744073709551615EEENS2_INS_16ScopedHandleBaseINS_6HandleEEELm18446744073709551615EEE(%"class.mojo::Message"* nonnull %6, i64 %106, i8* %105, i64 %110, %"class.mojo::ScopedHandleBase"* %108) #8
  %111 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  call void @_ZN4mojo7Message15TakeMojoMessageEv(%"class.mojo::ScopedHandleBase.287"* nonnull sret %7, %"class.mojo::Message"* nonnull %6) #8
  %113 = bitcast %struct.MojoWriteMessageOptions* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #8
  %114 = getelementptr inbounds %struct.MojoWriteMessageOptions, %struct.MojoWriteMessageOptions* %4, i64 0, i32 0
  %115 = getelementptr inbounds %struct.MojoWriteMessageOptions, %struct.MojoWriteMessageOptions* %4, i64 0, i32 1
  store i32 8, i32* %114, align 8
  store i32 0, i32* %115, align 4
  %116 = getelementptr inbounds %"class.mojo::ScopedHandleBase.287", %"class.mojo::ScopedHandleBase.287"* %7, i64 0, i32 0, i32 0
  %117 = load i64, i64* %116, align 8, !noalias !17
  store i64 0, i64* %116, align 8, !noalias !17
  %118 = call i32 @MojoWriteMessage(i32 %112, i64 %117, %struct.MojoWriteMessageOptions* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #8
  %119 = load i64, i64* %116, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %104
  %122 = call i32 @MojoDestroyMessage(i64 %119) #8
  br label %123

123:                                              ; preds = %104, %121
  call void @_ZN4mojo7MessageD1Ev(%"class.mojo::Message"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %107) #8
  br label %124

124:                                              ; preds = %39, %123
  %125 = phi i32 [ %118, %123 ], [ 3, %39 ]
  %126 = load i32, i32* %11, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %143, label %128, !prof !9

128:                                              ; preds = %124
  %129 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %9, align 8
  %130 = zext i32 %126 to i64
  %131 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %129, i64 %130
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"class.mojo::ScopedHandleBase"* [ %140, %139 ], [ %129, %128 ]
  %134 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %133, i64 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %132
  %138 = call i32 @MojoClose(i32 %135) #8
  br label %139

139:                                              ; preds = %137, %132
  %140 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %133, i64 1
  %141 = icmp eq %"class.mojo::ScopedHandleBase"* %140, %131
  br i1 %141, label %142, label %132

142:                                              ; preds = %139
  store i32 0, i32* %11, align 4
  br label %143

143:                                              ; preds = %142, %124
  %144 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %9, align 8
  %145 = icmp eq %"class.mojo::ScopedHandleBase"* %144, %18
  br i1 %145, label %148, label %146, !prof !8

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.283"* nonnull %147, %"class.mojo::ScopedHandleBase"* %144) #8
  br label %148

148:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4mojo7MessageC1EN4base4spanIKhLm18446744073709551615EEENS2_INS_16ScopedHandleBaseINS_6HandleEEELm18446744073709551615EEE(%"class.mojo::Message"*, i64, i8*, i64, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

declare void @_ZN4mojo7Message15TakeMojoMessageEv(%"class.mojo::ScopedHandleBase.287"* sret, %"class.mojo::Message"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo7MessageD1Ev(%"class.mojo::Message"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoReadMessageResult"* @_ZN5blink10MojoHandle11readMessageEPKNS_20MojoReadMessageFlagsE(%"class.blink::MojoHandle"* nocapture readonly, %"class.blink::MojoReadMessageFlags"* nocapture readnone) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.MojoReadMessageOptions, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %"class.WTF::Vector.316", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.blink::HeapVector.273", align 8
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #8
  %12 = bitcast i8* %11 to %"class.blink::MojoReadMessageResult"*
  tail call void @_ZN5blink21MojoReadMessageResultC1Ev(%"class.blink::MojoReadMessageResult"* %12) #8
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %struct.MojoReadMessageOptions* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %struct.MojoReadMessageOptions, %struct.MojoReadMessageOptions* %3, i64 0, i32 0
  %21 = getelementptr inbounds %struct.MojoReadMessageOptions, %struct.MojoReadMessageOptions* %3, i64 0, i32 1
  store i32 8, i32* %20, align 8
  store i32 0, i32* %21, align 4
  %22 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i64 -6148914691236517206, i64* %4, align 8
  %23 = call i32 @MojoReadMessage(i32 %18, %struct.MojoReadMessageOptions* nonnull %3, i64* nonnull %4) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %26 = getelementptr inbounds i8, i8* %11, i64 40
  %27 = bitcast i8* %26 to i32*
  store i32 %23, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 9
  store i8 1, i8* %28, align 1
  br label %185

29:                                               ; preds = %2
  %30 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %31 = call i32 @MojoSerializeMessage(i64 %30, %struct.MojoSerializeMessageOptions* null) #8
  switch i32 %31, label %32 [
    i32 9, label %36
    i32 0, label %36
  ]

32:                                               ; preds = %29
  %33 = getelementptr inbounds i8, i8* %11, i64 40
  %34 = bitcast i8* %33 to i32*
  store i32 10, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %11, i64 9
  store i8 1, i8* %35, align 1
  br label %181

36:                                               ; preds = %29, %29
  %37 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #8
  store i32 0, i32* %5, align 4
  %38 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #8
  store i32 0, i32* %6, align 4
  %39 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %40 = bitcast %"class.WTF::Vector.316"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #8
  %41 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %8, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %8, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %8, i64 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %8, i64 0, i32 0, i32 1, i64 0
  %45 = bitcast %"class.WTF::Vector.316"* %8 to i8**
  %46 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %8, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  store i8* %44, i8** %45, align 8
  store i32 4, i32* %42, align 8
  store i32 0, i32* %43, align 4
  %47 = call i32 @MojoGetMessageData(i64 %30, %struct.MojoGetMessageDataOptions* null, i8** nonnull %7, i32* nonnull %5, i32* null, i32* nonnull %6) #8
  %48 = icmp eq i32 %47, 8
  br i1 %48, label %49, label %72

49:                                               ; preds = %36
  %50 = load i32, i32* %6, align 4
  %51 = load i32, i32* %43, align 4
  %52 = icmp ult i32 %51, %50
  br i1 %52, label %53, label %69

53:                                               ; preds = %49
  %54 = load i32, i32* %42, align 8
  %55 = icmp ult i32 %54, %50
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.316"* nonnull %8, i32 %50) #8
  %57 = load i32, i32* %43, align 4
  br label %58

58:                                               ; preds = %56, %53
  %59 = phi i32 [ %57, %56 ], [ %51, %53 ]
  %60 = load i32*, i32** %41, align 8
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds i32, i32* %60, i64 %61
  %63 = zext i32 %50 to i64
  %64 = getelementptr inbounds i32, i32* %60, i64 %63
  %65 = bitcast i32* %62 to i8*
  %66 = ptrtoint i32* %64 to i64
  %67 = ptrtoint i32* %62 to i64
  %68 = sub i64 %66, %67
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 %68, i1 false) #8
  br label %69

69:                                               ; preds = %49, %58
  store i32 %50, i32* %43, align 4
  %70 = load i32*, i32** %41, align 8
  %71 = call i32 @MojoGetMessageData(i64 %30, %struct.MojoGetMessageDataOptions* null, i8** nonnull %7, i32* nonnull %5, i32* %70, i32* nonnull %6) #8
  br label %72

72:                                               ; preds = %69, %36
  %73 = phi i32 [ %71, %69 ], [ %47, %36 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds i8, i8* %11, i64 40
  %77 = bitcast i8* %76 to i32*
  store i32 10, i32* %77, align 8
  %78 = getelementptr inbounds i8, i8* %11, i64 9
  store i8 1, i8* %78, align 1
  br label %170

79:                                               ; preds = %72
  %80 = load i32, i32* %5, align 4
  %81 = zext i32 %80 to i64
  %82 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer25CreateUninitializedOrNullEmm(i64 %81, i64 1) #8
  %83 = load i32, i32* %5, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %101, label %85

85:                                               ; preds = %79
  %86 = icmp eq %"class.blink::DOMArrayBuffer"* %82, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %85
  %88 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #8
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #8
  br label %90

90:                                               ; preds = %85, %87
  %91 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %82, i64 0, i32 0, i32 1, i32 0, i32 0
  %92 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %91, align 8
  %93 = icmp eq %"class.v8::BackingStore"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %92) #8
  br label %96

96:                                               ; preds = %90, %94
  %97 = phi i8* [ %95, %94 ], [ null, %90 ]
  %98 = load i8*, i8** %7, align 8
  %99 = load i32, i32* %5, align 4
  %100 = zext i32 %99 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %98, i64 %100, i1 false)
  br label %101

101:                                              ; preds = %79, %96
  %102 = getelementptr inbounds i8, i8* %11, i64 16
  %103 = ptrtoint %"class.blink::DOMArrayBuffer"* %82 to i64
  %104 = bitcast i8* %102 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.blink::DOMArrayBuffer"* %82 to i8*
  %109 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #8
  br label %110

110:                                              ; preds = %101, %107
  %111 = bitcast %"class.blink::HeapVector.273"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #8
  %112 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %115 = bitcast %"class.blink::HeapVector.273"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 16, i1 false)
  %116 = load i32, i32* %6, align 4
  store %"class.blink::Member.279"* null, %"class.blink::Member.279"** %112, align 8
  store i32 0, i32* %113, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %133, label %118

118:                                              ; preds = %110
  %119 = zext i32 %116 to i64
  %120 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MojoHandleEEEEEmm(i64 %119) #8
  %121 = lshr i64 %120, 3
  %122 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %121) #8
  %123 = ptrtoint %"class.blink::HeapVectorBacking"* %122 to i64
  %124 = bitcast %"class.blink::HeapVector.273"* %10 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = trunc i64 %121 to i32
  store i32 %125, i32* %113, align 8
  %126 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %122, i64 0, i32 0
  br i1 %127, label %133, label %129

129:                                              ; preds = %118
  %130 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %128) #8
  %131 = bitcast %"class.blink::HeapVector.273"* %10 to i8**
  %132 = load i8*, i8** %131, align 8
  br label %133

133:                                              ; preds = %110, %118, %129
  %134 = phi i64 [ %119, %118 ], [ %119, %129 ], [ 0, %110 ]
  %135 = phi i8* [ %128, %118 ], [ %132, %129 ], [ null, %110 ]
  store i32 %116, i32* %114, align 4
  %136 = shl nuw nsw i64 %134, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 %136, i1 false) #8
  %137 = load i32, i32* %6, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::HeapVector.273", %"class.blink::HeapVector.273"* %10, i64 0, i32 0
  br label %145

141:                                              ; preds = %166, %133
  call void @_ZN5blink21MojoReadMessageResult10setHandlesERKNS_10HeapVectorINS_6MemberINS_10MojoHandleEEELj0EEE(%"class.blink::MojoReadMessageResult"* %12, %"class.blink::HeapVector.273"* nonnull dereferenceable(16) %10) #8
  %142 = getelementptr inbounds i8, i8* %11, i64 40
  %143 = bitcast i8* %142 to i32*
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds i8, i8* %11, i64 9
  store i8 1, i8* %144, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #8
  br label %170

145:                                              ; preds = %139, %166
  %146 = phi i32 [ 0, %139 ], [ %167, %166 ]
  %147 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.316"* nonnull %8, i32 %146) #8
  %148 = load i32, i32* %147, align 4
  %149 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #8
  %150 = bitcast i8* %149 to i32 (...)***
  %151 = getelementptr inbounds i8, i8* %149, i64 8
  %152 = bitcast i8* %151 to i64**
  store i64* null, i64** %152, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10MojoHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %153 = getelementptr inbounds i8, i8* %149, i64 16
  %154 = bitcast i8* %153 to i32*
  store i32 %148, i32* %154, align 4, !alias.scope !20
  %155 = getelementptr inbounds i8, i8* %149, i64 -4
  %156 = bitcast i8* %155 to i16*
  %157 = load atomic i16, i16* %156 monotonic, align 2
  %158 = or i16 %157, 1
  store atomic i16 %158, i16* %156 release, align 2
  %159 = call dereferenceable(8) %"class.blink::Member.279"* @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.276"* nonnull %140, i32 %146) #8
  %160 = ptrtoint i8* %149 to i64
  %161 = bitcast %"class.blink::Member.279"* %159 to i64*
  store atomic i64 %160, i64* %161 monotonic, align 8
  %162 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %145
  %165 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #8
  br label %166

166:                                              ; preds = %164, %145
  %167 = add nuw i32 %146, 1
  %168 = load i32, i32* %6, align 4
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %145, label %141

170:                                              ; preds = %141, %75
  %171 = load i32, i32* %43, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %174, label %173, !prof !9

173:                                              ; preds = %170
  store i32 0, i32* %43, align 4
  br label %174

174:                                              ; preds = %173, %170
  %175 = load i32*, i32** %41, align 8
  %176 = bitcast i8* %44 to i32*
  %177 = icmp eq i32* %175, %176
  br i1 %177, label %180, label %178, !prof !8

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %8, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.317"* nonnull %179, i32* %175) #8
  br label %180

180:                                              ; preds = %174, %178
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #8
  br label %181

181:                                              ; preds = %180, %32
  %182 = icmp eq i64 %30, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = call i32 @MojoDestroyMessage(i64 %30) #8
  br label %185

185:                                              ; preds = %25, %181, %183
  ret %"class.blink::MojoReadMessageResult"* %12
}

declare i32 @MojoSerializeMessage(i64, %struct.MojoSerializeMessageOptions*) local_unnamed_addr #2

declare i32 @MojoGetMessageData(i64, %struct.MojoGetMessageDataOptions*, i8**, i32*, i32*, i32*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer25CreateUninitializedOrNullEmm(i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN5blink21MojoReadMessageResult10setHandlesERKNS_10HeapVectorINS_6MemberINS_10MojoHandleEEELj0EEE(%"class.blink::MojoReadMessageResult"*, %"class.blink::HeapVector.273"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoWriteDataResult"* @_ZN5blink10MojoHandle9writeDataEPKNS_35V8UnionArrayBufferOrArrayBufferViewEPKNS_20MojoWriteDataOptionsE(%"class.blink::MojoHandle"* nocapture readonly, %"class.blink::V8UnionArrayBufferOrArrayBufferView"* nocapture readonly, %"class.blink::MojoWriteDataOptions"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.MojoWriteDataOptions, align 8
  %5 = alloca i32, align 4
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #8
  %7 = bitcast i8* %6 to %"class.blink::MojoWriteDataResult"*
  tail call void @_ZN5blink19MojoWriteDataResultC1Ev(%"class.blink::MojoWriteDataResult"* %7) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::MojoWriteDataOptions", %"class.blink::MojoWriteDataOptions"* %2, i64 0, i32 2
  %13 = load i8, i8* %12, align 1, !range !16
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %55 [
    i32 0, label %17
    i32 1, label %35
  ]

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.blink::DOMArrayBuffer"** %18 to %"class.blink::DOMArrayBufferBase"**
  %20 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %21, align 8
  %23 = icmp eq %"class.v8::BackingStore"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %17
  %25 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %22) #8
  %26 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %21, align 8
  %27 = icmp eq %"class.v8::BackingStore"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %26) #8
  br label %30

30:                                               ; preds = %17, %24, %28
  %31 = phi i8* [ %25, %28 ], [ %25, %24 ], [ null, %17 ]
  %32 = phi i64 [ %29, %28 ], [ 0, %24 ], [ 0, %17 ]
  %33 = icmp ult i64 %32, 4294967296
  %34 = trunc i64 %32 to i32
  br label %55

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %36, align 8, !noalias !23
  %38 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %37, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %39, i64 0, i32 2
  %41 = load i8, i8* %40, align 8, !range !16
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %37, i64 0, i32 1
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %35, %43
  %47 = phi i8* [ %45, %43 ], [ null, %35 ]
  %48 = bitcast %"class.blink::DOMArrayBufferView"* %37 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %49 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %49, i64 10
  %51 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %50, align 8
  %52 = tail call i64 %51(%"class.blink::DOMArrayBufferView"* %37) #8
  %53 = icmp ult i64 %52, 4294967296
  %54 = trunc i64 %52 to i32
  br label %55

55:                                               ; preds = %3, %46, %30
  %56 = phi i1 [ true, %3 ], [ %53, %46 ], [ %33, %30 ]
  %57 = phi i32 [ 0, %3 ], [ %54, %46 ], [ %34, %30 ]
  %58 = phi i8* [ null, %3 ], [ %47, %46 ], [ %31, %30 ]
  %59 = bitcast %struct.MojoWriteDataOptions* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %4, i64 0, i32 0
  %61 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %4, i64 0, i32 1
  store i32 8, i32* %60, align 8
  store i32 %14, i32* %61, align 4
  %62 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #8
  store i32 0, i32* %5, align 4
  br i1 %56, label %66, label %63, !prof !8

63:                                               ; preds = %55
  %64 = getelementptr inbounds i8, i8* %6, i64 16
  %65 = bitcast i8* %64 to i32*
  store i32 3, i32* %65, align 8
  br label %75

66:                                               ; preds = %55
  store i32 %57, i32* %5, align 4
  %67 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = call i32 @MojoWriteData(i32 %68, i8* %58, i32* nonnull %5, %struct.MojoWriteDataOptions* nonnull %4) #8
  %70 = getelementptr inbounds i8, i8* %6, i64 16
  %71 = bitcast i8* %70 to i32*
  store i32 %69, i32* %71, align 8
  %72 = icmp eq i32 %69, 0
  %73 = load i32, i32* %5, align 4
  %74 = select i1 %72, i32 %73, i32 0
  br label %75

75:                                               ; preds = %66, %63
  %76 = phi i32 [ 0, %63 ], [ %74, %66 ]
  %77 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 1, i8* %77, align 1
  %78 = getelementptr inbounds i8, i8* %6, i64 12
  %79 = bitcast i8* %78 to i32*
  store i32 %76, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 1, i8* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  ret %"class.blink::MojoWriteDataResult"* %7
}

declare i32 @MojoWriteData(i32, i8*, i32*, %struct.MojoWriteDataOptions*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoReadDataResult"* @_ZNK5blink10MojoHandle9queryDataEv(%"class.blink::MojoHandle"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.MojoReadDataOptions, align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #8
  %5 = bitcast i8* %4 to %"class.blink::MojoReadDataResult"*
  tail call void @_ZN5blink18MojoReadDataResultC1Ev(%"class.blink::MojoReadDataResult"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 0, i32* %2, align 4
  %11 = bitcast %struct.MojoReadDataOptions* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %3, i64 0, i32 0
  %13 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %3, i64 0, i32 1
  store i32 8, i32* %12, align 8
  store i32 4, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = call i32 @MojoReadData(i32 %15, %struct.MojoReadDataOptions* nonnull %3, i8* null, i32* nonnull %2) #8
  %17 = getelementptr inbounds i8, i8* %4, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 9
  store i8 1, i8* %19, align 1
  %20 = load i32, i32* %2, align 4
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %4, i64 8
  store i8 1, i8* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  ret %"class.blink::MojoReadDataResult"* %5
}

declare i32 @MojoReadData(i32, %struct.MojoReadDataOptions*, i8*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoReadDataResult"* @_ZN5blink10MojoHandle11discardDataEjPKNS_22MojoDiscardDataOptionsE(%"class.blink::MojoHandle"* nocapture readonly, i32, %"class.blink::MojoDiscardDataOptions"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.MojoReadDataOptions, align 8
  store i32 %1, i32* %4, align 4
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #8
  %7 = bitcast i8* %6 to %"class.blink::MojoReadDataResult"*
  tail call void @_ZN5blink18MojoReadDataResultC1Ev(%"class.blink::MojoReadDataResult"* %7) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::MojoDiscardDataOptions", %"class.blink::MojoDiscardDataOptions"* %2, i64 0, i32 2
  %13 = load i8, i8* %12, align 1, !range !16
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 2, i32 3
  %16 = bitcast %struct.MojoReadDataOptions* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %5, i64 0, i32 0
  %18 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %5, i64 0, i32 1
  store i32 8, i32* %17, align 8
  store i32 %15, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = call i32 @MojoReadData(i32 %20, %struct.MojoReadDataOptions* nonnull %5, i8* null, i32* nonnull %4) #8
  %22 = getelementptr inbounds i8, i8* %6, i64 16
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 1, i8* %24, align 1
  %25 = icmp eq i32 %21, 0
  %26 = load i32, i32* %4, align 4
  %27 = select i1 %25, i32 %26, i32 0
  %28 = getelementptr inbounds i8, i8* %6, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 1, i8* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  ret %"class.blink::MojoReadDataResult"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoReadDataResult"* @_ZNK5blink10MojoHandle8readDataEPKNS_35V8UnionArrayBufferOrArrayBufferViewEPKNS_19MojoReadDataOptionsE(%"class.blink::MojoHandle"* nocapture readonly, %"class.blink::V8UnionArrayBufferOrArrayBufferView"* nocapture readonly, %"class.blink::MojoReadDataOptions"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.MojoReadDataOptions, align 8
  %5 = alloca i32, align 4
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #8
  %7 = bitcast i8* %6 to %"class.blink::MojoReadDataResult"*
  tail call void @_ZN5blink18MojoReadDataResultC1Ev(%"class.blink::MojoReadDataResult"* %7) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::MojoReadDataOptions", %"class.blink::MojoReadDataOptions"* %2, i64 0, i32 3
  %13 = load i8, i8* %12, align 2, !range !16
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds %"class.blink::MojoReadDataOptions", %"class.blink::MojoReadDataOptions"* %2, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !16
  %17 = icmp eq i8 %16, 0
  %18 = or i32 %14, 8
  %19 = select i1 %17, i32 %14, i32 %18
  %20 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %60 [
    i32 0, label %22
    i32 1, label %40
  ]

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.blink::DOMArrayBuffer"** %23 to %"class.blink::DOMArrayBufferBase"**
  %25 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %26, align 8
  %28 = icmp eq %"class.v8::BackingStore"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %27) #8
  %31 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %26, align 8
  %32 = icmp eq %"class.v8::BackingStore"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %31) #8
  br label %35

35:                                               ; preds = %22, %29, %33
  %36 = phi i8* [ %30, %33 ], [ %30, %29 ], [ null, %22 ]
  %37 = phi i64 [ %34, %33 ], [ 0, %29 ], [ 0, %22 ]
  %38 = icmp ult i64 %37, 4294967296
  %39 = trunc i64 %37 to i32
  br label %60

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferView", %"class.blink::V8UnionArrayBufferOrArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %41, align 8, !noalias !26
  %43 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %44, i64 0, i32 2
  %46 = load i8, i8* %45, align 8, !range !16
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %42, i64 0, i32 1
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %40, %48
  %52 = phi i8* [ %50, %48 ], [ null, %40 ]
  %53 = bitcast %"class.blink::DOMArrayBufferView"* %42 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %54 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %53, align 8
  %55 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %54, i64 10
  %56 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %55, align 8
  %57 = tail call i64 %56(%"class.blink::DOMArrayBufferView"* %42) #8
  %58 = icmp ult i64 %57, 4294967296
  %59 = trunc i64 %57 to i32
  br label %60

60:                                               ; preds = %3, %51, %35
  %61 = phi i1 [ true, %3 ], [ %58, %51 ], [ %38, %35 ]
  %62 = phi i32 [ 0, %3 ], [ %59, %51 ], [ %39, %35 ]
  %63 = phi i8* [ null, %3 ], [ %52, %51 ], [ %36, %35 ]
  %64 = bitcast %struct.MojoReadDataOptions* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #8
  %65 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %4, i64 0, i32 0
  %66 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %4, i64 0, i32 1
  store i32 8, i32* %65, align 8
  store i32 %19, i32* %66, align 4
  %67 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #8
  store i32 -1431655766, i32* %5, align 4
  br i1 %61, label %71, label %68, !prof !8

68:                                               ; preds = %60
  %69 = getelementptr inbounds i8, i8* %6, i64 16
  %70 = bitcast i8* %69 to i32*
  store i32 3, i32* %70, align 8
  br label %80

71:                                               ; preds = %60
  store i32 %62, i32* %5, align 4
  %72 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = call i32 @MojoReadData(i32 %73, %struct.MojoReadDataOptions* nonnull %4, i8* %63, i32* nonnull %5) #8
  %75 = getelementptr inbounds i8, i8* %6, i64 16
  %76 = bitcast i8* %75 to i32*
  store i32 %74, i32* %76, align 8
  %77 = icmp eq i32 %74, 0
  %78 = load i32, i32* %5, align 4
  %79 = select i1 %77, i32 %78, i32 0
  br label %80

80:                                               ; preds = %71, %68
  %81 = phi i32 [ 0, %68 ], [ %79, %71 ]
  %82 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 1, i8* %82, align 1
  %83 = getelementptr inbounds i8, i8* %6, i64 12
  %84 = bitcast i8* %83 to i32*
  store i32 %81, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 1, i8* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #8
  ret %"class.blink::MojoReadDataResult"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoMapBufferResult"* @_ZN5blink10MojoHandle9mapBufferEjj(%"class.blink::MojoHandle"* nocapture readonly, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::ArrayBufferContents", align 8
  %5 = alloca %"class.blink::ArrayBufferContents", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.blink::ArrayBufferContents", align 8
  %8 = alloca %"class.blink::ArrayBufferContents", align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #8
  %10 = bitcast i8* %9 to %"class.blink::MojoMapBufferResult"*
  tail call void @_ZN5blink19MojoMapBufferResultC1Ev(%"class.blink::MojoMapBufferResult"* %10) #8
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store i8* null, i8** %6, align 8
  %16 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %1 to i64
  %19 = zext i32 %2 to i64
  %20 = call i32 @MojoMapBuffer(i32 %17, i64 %18, i64 %19, %struct.MojoMapBufferOptions* null, i8** nonnull %6) #8
  %21 = getelementptr inbounds i8, i8* %9, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %9, i64 8
  store i8 1, i8* %23, align 8
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %25, label %69

25:                                               ; preds = %3
  %26 = bitcast %"class.blink::ArrayBufferContents"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %7, i64 0, i32 0, i32 1
  %28 = bitcast %"class.blink::ArrayBufferContents"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  %29 = load i8*, i8** %6, align 8
  call void @_ZN5blink19ArrayBufferContentsC1EPvmPFvS1_mS1_E(%"class.blink::ArrayBufferContents"* nonnull %7, i8* %29, i64 %19, void (i8*, i64, i8*)* nonnull @"_ZZN5blink10MojoHandle9mapBufferEjjEN3$_08__invokeEPvmS2_") #8
  %30 = bitcast %"class.blink::ArrayBufferContents"* %7 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::ArrayBufferContents"* %8 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %8, i64 0, i32 0, i32 1
  %34 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %27, align 8
  store %"class.std::__1::__shared_weak_count"* %34, %"class.std::__1::__shared_weak_count"** %33, align 8
  %35 = icmp eq %"class.std::__1::__shared_weak_count"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %25
  %37 = ptrtoint %"class.std::__1::__shared_weak_count"* %34 to i64
  br label %43

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0, i32 1
  %40 = atomicrmw add i64* %39, i64 1 monotonic
  %41 = bitcast %"class.std::__1::__shared_weak_count"** %33 to i64*
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %36, %38
  %44 = phi i64 [ %37, %36 ], [ %42, %38 ]
  %45 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #8
  %46 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #8
  %47 = bitcast %"class.blink::ArrayBufferContents"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #8
  %48 = bitcast %"class.blink::ArrayBufferContents"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #8
  %49 = bitcast i8* %46 to i32 (...)***
  %50 = getelementptr inbounds i8, i8* %46, i64 8
  %51 = bitcast i8* %50 to i64**
  store i64* null, i64** %51, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %52 = getelementptr inbounds i8, i8* %46, i64 16
  %53 = bitcast i8* %52 to i64*
  store i64 %31, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %46, i64 24
  %55 = bitcast i8* %54 to i64*
  store i64 %44, i64* %55, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #8
  %56 = getelementptr inbounds i8, i8* %46, i64 32
  store i8 0, i8* %56, align 8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %4) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14DOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #8
  %57 = getelementptr inbounds i8, i8* %46, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #8
  %61 = getelementptr inbounds i8, i8* %9, i64 16
  %62 = ptrtoint i8* %46 to i64
  %63 = bitcast i8* %61 to i64*
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %43
  %67 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #8
  br label %68

68:                                               ; preds = %43, %66
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %8) #8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  br label %69

69:                                               ; preds = %68, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  ret %"class.blink::MojoMapBufferResult"* %10
}

declare i32 @MojoMapBuffer(i32, i64, i64, %struct.MojoMapBufferOptions*, i8**) local_unnamed_addr #2

declare void @_ZN5blink19ArrayBufferContentsC1EPvmPFvS1_mS1_E(%"class.blink::ArrayBufferContents"*, i8*, i64, void (i8*, i64, i8*)*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MojoCreateSharedBufferResult"* @_ZN5blink10MojoHandle21duplicateBufferHandleEPKNS_32MojoDuplicateBufferHandleOptionsE(%"class.blink::MojoHandle"* nocapture readonly, %"class.blink::MojoDuplicateBufferHandleOptions"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %struct.MojoDuplicateBufferHandleOptions*
  %5 = alloca %"class.mojo::Handle", align 4
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #8
  %7 = bitcast i8* %6 to %"class.blink::MojoCreateSharedBufferResult"*
  tail call void @_ZN5blink28MojoCreateSharedBufferResultC1Ev(%"class.blink::MojoCreateSharedBufferResult"* %7) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  store i64 8, i64* %3, align 8
  %13 = getelementptr inbounds %"class.blink::MojoDuplicateBufferHandleOptions", %"class.blink::MojoDuplicateBufferHandleOptions"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 1, !range !16
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.MojoDuplicateBufferHandleOptions, %struct.MojoDuplicateBufferHandleOptions* %4, i64 0, i32 1
  store i32 1, i32* %17, align 4
  br label %18

18:                                               ; preds = %2, %16
  %19 = bitcast %"class.mojo::Handle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %5, i64 0, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = call i32 @MojoDuplicateBufferHandle(i32 %22, %struct.MojoDuplicateBufferHandleOptions* nonnull %4, i32* nonnull %20) #8
  %24 = getelementptr inbounds i8, i8* %6, i64 24
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 1, i8* %26, align 8
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %28, label %47

28:                                               ; preds = %18
  %29 = load i32, i32* %20, align 4
  %30 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #8
  %31 = bitcast i8* %30 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i64**
  store i64* null, i64** %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10MojoHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 %29, i32* %35, align 4, !alias.scope !29
  %36 = getelementptr inbounds i8, i8* %30, i64 -4
  %37 = bitcast i8* %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  store atomic i16 %39, i16* %37 release, align 2
  %40 = getelementptr inbounds i8, i8* %6, i64 16
  %41 = ptrtoint i8* %30 to i64
  %42 = bitcast i8* %40 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %28
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %47

47:                                               ; preds = %28, %45, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  ret %"class.blink::MojoCreateSharedBufferResult"* %7
}

declare i32 @MojoDuplicateBufferHandle(i32, %struct.MojoDuplicateBufferHandleOptions*, i32*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10MojoHandleD2Ev(%"class.blink::MojoHandle"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10MojoHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @MojoClose(i32 %4) #8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10MojoHandleD0Ev(%"class.blink::MojoHandle"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink10MojoHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MojoHandle", %"class.blink::MojoHandle"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @MojoClose(i32 %4) #8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10MojoHandle18GetWrapperTypeInfoEv(%"class.blink::MojoHandle"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10MojoHandle18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i32 @MojoWriteMessage(i32, i64, %struct.MojoWriteMessageOptions*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.283"*, %"class.mojo::ScopedHandleBase"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.mojo::ScopedHandleBase"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink21MojoReadMessageResultC1Ev(%"class.blink::MojoReadMessageResult"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.308"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.308"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !9

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.308"*) local_unnamed_addr #2

declare i32 @MojoReadMessage(i32, %struct.MojoReadMessageOptions*, i64*) local_unnamed_addr #2

declare i32 @MojoDestroyMessage(i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.317"*, i32*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN5blink19MojoWriteDataResultC1Ev(%"class.blink::MojoWriteDataResult"*) unnamed_addr #2

declare void @_ZN5blink18MojoReadDataResultC1Ev(%"class.blink::MojoReadDataResult"*) unnamed_addr #2

declare void @_ZN5blink19MojoMapBufferResultC1Ev(%"class.blink::MojoMapBufferResult"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN5blink10MojoHandle9mapBufferEjjEN3$_08__invokeEPvmS2_"(i8*, i64, i8* nocapture readnone) #5 align 2 {
  %4 = tail call i32 @MojoUnmapBuffer(i8* %0) #8
  ret void
}

declare i32 @MojoUnmapBuffer(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.308"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.308"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD2Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 1
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD0Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE(%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*) unnamed_addr #1 comdat align 2 {
  ret %"class.v8::Value"* null
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN5blink28MojoCreateSharedBufferResultC1Ev(%"class.blink::MojoCreateSharedBufferResult"*) unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.282"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %105

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %5, align 8
  %7 = icmp eq %"class.mojo::ScopedHandleBase"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.mojo::ScopedHandleBase"*
  %10 = icmp eq %"class.mojo::ScopedHandleBase"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.282"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %210

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.282"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %104, label %26

26:                                               ; preds = %16
  %27 = shl nuw nsw i64 %19, 2
  %28 = add nsw i64 %27, -4
  %29 = lshr exact i64 %28, 2
  %30 = add nuw nsw i64 %29, 1
  %31 = icmp ult i64 %30, 8
  br i1 %31, label %92, label %32

32:                                               ; preds = %26
  %33 = and i64 %30, 9223372036854775800
  %34 = getelementptr %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 %33
  %35 = getelementptr %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %9, i64 %33
  %36 = add nsw i64 %33, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %36, 0
  br i1 %40, label %74, label %41

41:                                               ; preds = %32
  %42 = sub nuw nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %71, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %72, %43 ]
  %46 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %9, i64 %44, i32 0, i32 0
  %47 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 %44, i32 0, i32 0
  %48 = bitcast i32* %47 to <4 x i32>*
  %49 = load <4 x i32>, <4 x i32>* %48, align 4, !noalias !32
  %50 = getelementptr i32, i32* %47, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  %52 = load <4 x i32>, <4 x i32>* %51, align 4, !noalias !32
  %53 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> %49, <4 x i32>* %53, align 4, !alias.scope !32
  %54 = getelementptr i32, i32* %46, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %55, align 4, !alias.scope !32
  %56 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %56, align 4, !noalias !32
  %57 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %57, align 4, !noalias !32
  %58 = or i64 %44, 8
  %59 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %9, i64 %58, i32 0, i32 0
  %60 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 %58, i32 0, i32 0
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4, !noalias !32
  %63 = getelementptr i32, i32* %60, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4, !noalias !32
  %66 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %66, align 4, !alias.scope !32
  %67 = getelementptr i32, i32* %59, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %68, align 4, !alias.scope !32
  %69 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %69, align 4, !noalias !32
  %70 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %70, align 4, !noalias !32
  %71 = add i64 %44, 16
  %72 = add i64 %45, -2
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %43, !llvm.loop !35

74:                                               ; preds = %43, %32
  %75 = phi i64 [ 0, %32 ], [ %71, %43 ]
  %76 = icmp eq i64 %39, 0
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %9, i64 %75, i32 0, i32 0
  %79 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 %75, i32 0, i32 0
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4, !noalias !32
  %82 = getelementptr i32, i32* %79, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  %84 = load <4 x i32>, <4 x i32>* %83, align 4, !noalias !32
  %85 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %85, align 4, !alias.scope !32
  %86 = getelementptr i32, i32* %78, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %87, align 4, !alias.scope !32
  %88 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %88, align 4, !noalias !32
  %89 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %89, align 4, !noalias !32
  br label %90

90:                                               ; preds = %74, %77
  %91 = icmp eq i64 %30, %33
  br i1 %91, label %104, label %92

92:                                               ; preds = %90, %26
  %93 = phi %"class.mojo::ScopedHandleBase"* [ %6, %26 ], [ %34, %90 ]
  %94 = phi %"class.mojo::ScopedHandleBase"* [ %9, %26 ], [ %35, %90 ]
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi %"class.mojo::ScopedHandleBase"* [ %102, %95 ], [ %93, %92 ]
  %97 = phi %"class.mojo::ScopedHandleBase"* [ %101, %95 ], [ %94, %92 ]
  %98 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %97, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %96, i64 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4, !noalias !32
  store i32 %100, i32* %98, align 4, !alias.scope !32
  store i32 0, i32* %99, align 4, !noalias !32
  %101 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %97, i64 1
  %102 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %96, i64 1
  %103 = icmp eq %"class.mojo::ScopedHandleBase"* %102, %20
  br i1 %103, label %104, label %95, !llvm.loop !37

104:                                              ; preds = %95, %90, %16
  tail call void @_ZN3WTF12VectorBufferIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.283"* %21, %"class.mojo::ScopedHandleBase"* %6) #8
  br label %210

105:                                              ; preds = %2
  %106 = zext i32 %1 to i64
  %107 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64 %106) #8
  %108 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv, i64 0, i64 0)) #8
  %109 = lshr i64 %107, 2
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %111, align 8
  %113 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %199, label %118

118:                                              ; preds = %105
  %119 = bitcast i8* %108 to %"class.mojo::ScopedHandleBase"*
  %120 = shl nuw nsw i64 %115, 2
  %121 = add nsw i64 %120, -4
  %122 = lshr exact i64 %121, 2
  %123 = add nuw nsw i64 %122, 1
  %124 = icmp ult i64 %123, 8
  br i1 %124, label %185, label %125

125:                                              ; preds = %118
  %126 = and i64 %123, 9223372036854775800
  %127 = getelementptr %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %112, i64 %126
  %128 = getelementptr %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %119, i64 %126
  %129 = add nsw i64 %126, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 1
  %133 = icmp eq i64 %129, 0
  br i1 %133, label %167, label %134

134:                                              ; preds = %125
  %135 = sub nuw nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %164, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %165, %136 ]
  %139 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %119, i64 %137, i32 0, i32 0
  %140 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %112, i64 %137, i32 0, i32 0
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4, !noalias !39
  %143 = getelementptr i32, i32* %140, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !noalias !39
  %146 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %142, <4 x i32>* %146, align 4, !alias.scope !39
  %147 = getelementptr i32, i32* %139, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %148, align 4, !alias.scope !39
  %149 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %149, align 4, !noalias !39
  %150 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %150, align 4, !noalias !39
  %151 = or i64 %137, 8
  %152 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %119, i64 %151, i32 0, i32 0
  %153 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %112, i64 %151, i32 0, i32 0
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !noalias !39
  %156 = getelementptr i32, i32* %153, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4, !noalias !39
  %159 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %159, align 4, !alias.scope !39
  %160 = getelementptr i32, i32* %152, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %158, <4 x i32>* %161, align 4, !alias.scope !39
  %162 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %162, align 4, !noalias !39
  %163 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %163, align 4, !noalias !39
  %164 = add i64 %137, 16
  %165 = add i64 %138, -2
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %136, !llvm.loop !42

167:                                              ; preds = %136, %125
  %168 = phi i64 [ 0, %125 ], [ %164, %136 ]
  %169 = icmp eq i64 %132, 0
  br i1 %169, label %183, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %119, i64 %168, i32 0, i32 0
  %172 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %112, i64 %168, i32 0, i32 0
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !noalias !39
  %175 = getelementptr i32, i32* %172, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  %177 = load <4 x i32>, <4 x i32>* %176, align 4, !noalias !39
  %178 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %178, align 4, !alias.scope !39
  %179 = getelementptr i32, i32* %171, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %177, <4 x i32>* %180, align 4, !alias.scope !39
  %181 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %181, align 4, !noalias !39
  %182 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %182, align 4, !noalias !39
  br label %183

183:                                              ; preds = %167, %170
  %184 = icmp eq i64 %123, %126
  br i1 %184, label %197, label %185

185:                                              ; preds = %183, %118
  %186 = phi %"class.mojo::ScopedHandleBase"* [ %112, %118 ], [ %127, %183 ]
  %187 = phi %"class.mojo::ScopedHandleBase"* [ %119, %118 ], [ %128, %183 ]
  br label %188

188:                                              ; preds = %185, %188
  %189 = phi %"class.mojo::ScopedHandleBase"* [ %195, %188 ], [ %186, %185 ]
  %190 = phi %"class.mojo::ScopedHandleBase"* [ %194, %188 ], [ %187, %185 ]
  %191 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %190, i64 0, i32 0, i32 0
  %192 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %189, i64 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4, !noalias !39
  store i32 %193, i32* %191, align 4, !alias.scope !39
  store i32 0, i32* %192, align 4, !noalias !39
  %194 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %190, i64 1
  %195 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %189, i64 1
  %196 = icmp eq %"class.mojo::ScopedHandleBase"* %195, %116
  br i1 %196, label %197, label %188, !llvm.loop !43

197:                                              ; preds = %188, %183
  %198 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %111, align 8
  br label %199

199:                                              ; preds = %197, %105
  %200 = phi %"class.mojo::ScopedHandleBase"* [ %198, %197 ], [ %112, %105 ]
  %201 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 1, i64 0
  %202 = bitcast i8* %201 to %"class.mojo::ScopedHandleBase"*
  %203 = icmp eq %"class.mojo::ScopedHandleBase"* %200, %202
  br i1 %203, label %206, label %204, !prof !8

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.283"* %205, %"class.mojo::ScopedHandleBase"* %200) #8
  br label %206

206:                                              ; preds = %199, %204
  %207 = bitcast %"class.WTF::Vector.282"* %0 to i64*
  store atomic i64 %110, i64* %207 monotonic, align 8
  %208 = trunc i64 %109 to i32
  %209 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %208, i32* %209, align 8
  br label %210

210:                                              ; preds = %104, %206, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.282"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !8

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase"** %31, align 8
  %33 = icmp eq %"class.mojo::ScopedHandleBase"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16ScopedHandleBaseINS2_6HandleEEEEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16ScopedHandleBaseINS1_6HandleEEEEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.282"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.282", %"class.WTF::Vector.282"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.282"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN4mojo16ScopedHandleBaseINS1_6HandleEEELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.282"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.316"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !8

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.316"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.316"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.316"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.316"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.316"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.316"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !9

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.317"* %19, i32* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !8

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #8
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !8

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.317"* %53, i32* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.316"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MojoHandleEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.10, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !9

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.308"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.308"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10MojoHandleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.279"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.279", %"class.blink::Member.279"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.279"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10MojoHandleEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MojoHandleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10MojoHandleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.279"* @_ZN3WTF6VectorIN5blink6MemberINS1_10MojoHandleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.276"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.276", %"class.WTF::Vector.276"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.279"*, %"class.blink::Member.279"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.279", %"class.blink::Member.279"* %24, i64 %25
  ret %"class.blink::Member.279"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.316"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.316", %"class.WTF::Vector.316"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv"}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4mojo16ScopedHandleBaseINS_13MessageHandleEE7releaseEv: argument 0"}
!19 = distinct !{!19, !"_ZN4mojo16ScopedHandleBaseINS_13MessageHandleEE7releaseEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!22 = distinct !{!22, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink35V8UnionArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!31 = distinct !{!31, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!34 = distinct !{!34, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.isvectorized", i32 1}
!37 = distinct !{!37, !38, !36}
!38 = !{!"llvm.loop.unroll.runtime.disable"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!41 = distinct !{!41, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!42 = distinct !{!42, !36}
!43 = distinct !{!43, !38, !36}
