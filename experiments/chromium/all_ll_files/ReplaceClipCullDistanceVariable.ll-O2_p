; ModuleID = '../../third_party/angle/src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::TCompiler" = type opaque
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, [7 x i8] }>
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TIntermNode"** }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.1", %"class.std::__1::vector.6", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.22" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.23"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.23" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TConstantUnion" = type { %union.anon.29, i32 }
%union.anon.29 = type { i32 }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.angle::BitSetT" = type { i64 }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser" = type { %"class.sh::TIntermTraverser", %"class.sh::TIntermSymbol"**, i8*, i32*, %"class.angle::BitSetT"*, %"class.sh::ImmutableString" }
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.30", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.37", %"class.std::__1::vector.44", %"class.sh::TVector", %"class.std::__1::vector.51" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.32" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.39" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector", %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.46" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.53" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments" = type { %"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, %"class.sh::TVariable"*, %"class.sh::TIntermSymbol"*, %"class.sh::ImmutableString", i32, %"class.sh::TVariable"* }
%"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser" = type { %"class.sh::TIntermTraverser", %"class.sh::TVariable"*, %"class.sh::TIntermSymbol"*, %"class.sh::TIntermTyped"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.67", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.69" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector" }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.58", i8, [7 x i8] }>
%"class.sh::TVector.58" = type { %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { i32*, i32*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i32* }
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.66"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.66" = type opaque
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }

$_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE = comdat any

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE = comdat any

$_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE = comdat any

@.str = private unnamed_addr constant [16 x i8] c"gl_ClipDistance\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"ANGLEClipDistance\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"gl_CullDistance\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"ANGLECullDistance\00", align 1
@_ZTVN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"*)* @_ZN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN2sh18TIntermDeclarationE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8
@_ZTVN2sh12_GLOBAL__N_133ReplaceVariableExceptOneTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"*)* @_ZN2sh12_GLOBAL__N_133ReplaceVariableExceptOneTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_133ReplaceVariableExceptOneTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@_ZTVN2sh12TIntermBlockE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh30ReplaceClipDistanceAssignmentsEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TSymbolTableEjPKNS_12TIntermTypedE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, i32, %"class.sh::TIntermTyped"*) local_unnamed_addr #0 {
  %6 = alloca %"class.sh::ImmutableString", align 8
  %7 = alloca %"class.angle::BitSetT", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.sh::TIntermSymbol"*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", align 8
  %12 = alloca %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", align 8
  %13 = alloca %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", align 8
  %14 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  %16 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8** %15, align 8
  store i64 15, i64* %16, align 8
  %17 = bitcast %"class.angle::BitSetT"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #6
  %19 = bitcast %"class.sh::TIntermSymbol"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #6
  %21 = bitcast %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 200, i1 false)
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %22, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #6
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11, i64 0, i32 1
  store %"class.sh::TIntermSymbol"** %9, %"class.sh::TIntermSymbol"*** %24, align 8
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11, i64 0, i32 2
  store i8* %8, i8** %25, align 8
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11, i64 0, i32 3
  store i32* %10, i32** %26, align 8
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11, i64 0, i32 4
  store %"class.angle::BitSetT"* %7, %"class.angle::BitSetT"** %27, align 8
  %28 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %11, i64 0, i32 5
  %29 = bitcast %"class.sh::ImmutableString"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %14, i64 16, i1 false) #6
  store %"class.sh::TIntermSymbol"* null, %"class.sh::TIntermSymbol"** %9, align 8
  store i8 0, i8* %8, align 1
  store i32 0, i32* %10, align 4
  store i64 0, i64* %18, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %22) #6
  %30 = load i8, i8* %8, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = load i64, i64* %18, align 8
  %33 = icmp eq i64 %32, 0
  %34 = and i1 %31, %33
  br i1 %34, label %108, label %35

35:                                               ; preds = %5
  %36 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %9, align 8
  %37 = icmp eq %"class.sh::TIntermSymbol"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %36, i64 0, i32 1
  %40 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %39, align 8
  br label %44

41:                                               ; preds = %35
  %42 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %2, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %6, i32 300) #6
  %43 = bitcast %"class.sh::TSymbol"* %42 to %"class.sh::TVariable"*
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.sh::TVariable"* [ %40, %38 ], [ %43, %41 ]
  %46 = icmp eq %"class.sh::TVariable"* %45, null
  br i1 %46, label %108, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %48) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 72, i1 false)
  %49 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %9, align 8
  %50 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 0
  store %"class.sh::TCompiler"* %0, %"class.sh::TCompiler"** %50, align 8
  %51 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 1
  store %"class.sh::TIntermBlock"* %1, %"class.sh::TIntermBlock"** %51, align 8
  %52 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 2
  store %"class.sh::TSymbolTable"* %2, %"class.sh::TSymbolTable"** %52, align 8
  %53 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 3
  store %"class.sh::TVariable"* %45, %"class.sh::TVariable"** %53, align 8
  %54 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 4
  store %"class.sh::TIntermSymbol"* %49, %"class.sh::TIntermSymbol"** %54, align 8
  %55 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 5, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 5, i32 1
  store i64 17, i64* %56, align 8
  %57 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %12, i64 0, i32 6
  store i32 0, i32* %57, align 8
  %58 = load i32, i32* %10, align 4
  %59 = icmp eq %"class.sh::TIntermSymbol"* %49, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %47
  %61 = bitcast %"class.sh::TIntermSymbol"* %49 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %62 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %62, i64 31
  %64 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %63, align 8
  %65 = call dereferenceable(184) %"class.sh::TType"* %64(%"class.sh::TIntermSymbol"* nonnull %49) #6
  %66 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %65, i64 0, i32 10, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %65, i64 0, i32 10, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  %71 = getelementptr inbounds i32, i32* %67, i64 %70
  %72 = load i32, i32* %71, align 4
  br label %78

73:                                               ; preds = %47
  %74 = load i8, i8* %8, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %106

76:                                               ; preds = %73
  %77 = add i32 %58, 1
  br label %78

78:                                               ; preds = %60, %76
  %79 = phi i32 [ %72, %60 ], [ %77, %76 ]
  store i32 %79, i32* %57, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %106, label %81

81:                                               ; preds = %78
  %82 = call fastcc %"class.sh::TVariable"* @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments20declareANGLEVariableEv(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nonnull %12)
  %83 = bitcast %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %83) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 176, i1 false)
  %84 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %85 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %84, i64 32) #6
  %86 = bitcast i8* %85 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %86, %"class.sh::TVariable"* %82) #6
  %87 = bitcast %"class.sh::TIntermSymbol"** %9 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %13, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %89, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #6
  %90 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133ReplaceVariableExceptOneTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %13, i64 0, i32 1
  store %"class.sh::TVariable"* %45, %"class.sh::TVariable"** %91, align 8
  %92 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %13, i64 0, i32 2
  %93 = bitcast %"class.sh::TIntermSymbol"** %92 to i64*
  store i64 %88, i64* %93, align 8
  %94 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %13, i64 0, i32 3
  %95 = bitcast %"class.sh::TIntermTyped"** %94 to i8**
  store i8* %85, i8** %95, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %89) #6
  %96 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 0
  %97 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %89, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %96) #6
  br i1 %97, label %98, label %104

98:                                               ; preds = %81
  %99 = call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments34assignOriginalValueToANGLEVariableEj(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nonnull %12, i32 %3)
  br i1 %99, label %100, label %104

100:                                              ; preds = %98
  %101 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %9, align 8
  %102 = icmp ne %"class.sh::TIntermSymbol"* %101, null
  %103 = call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments34assignANGLEValueToOriginalVariableEjbPKNS_12TIntermTypedEPKN5angle7BitSetTILm32EmmEEPFPNS_11TIntermNodeEjPNS_13TIntermSymbolESD_S4_E(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nonnull %12, i32 %3, i1 zeroext %102, %"class.sh::TIntermTyped"* %4, %"class.angle::BitSetT"* nonnull %7)
  br label %104

104:                                              ; preds = %98, %81, %100
  %105 = phi i1 [ %103, %100 ], [ false, %81 ], [ false, %98 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %89) #6
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %83) #6
  br label %106

106:                                              ; preds = %73, %78, %104
  %107 = phi i1 [ %105, %104 ], [ false, %78 ], [ false, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %48) #6
  br label %108

108:                                              ; preds = %5, %106, %44
  %109 = phi i1 [ %107, %106 ], [ false, %44 ], [ true, %5 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %22) #6
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  ret i1 %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #2

declare %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.sh::TVariable"* @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments20declareANGLEVariableEv(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %3 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2, i64 184) #6
  %4 = bitcast i8* %3 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* %4, i32 1, i32 2, i32 1, i8 zeroext 1, i8 zeroext 1) #6
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN2sh5TType9makeArrayEj(%"class.sh::TType"* %4, i32 %6) #6
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 40) #6
  %9 = bitcast i8* %8 to %"class.sh::TVariable"*
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 2
  %11 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %10, align 8
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 5
  tail call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %9, %"class.sh::TSymbolTable"* %11, %"class.sh::ImmutableString"* dereferenceable(16) %12, %"class.sh::TType"* %4, i8 zeroext 2, i8 zeroext 0) #6
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 7
  %14 = bitcast %"class.sh::TVariable"** %13 to i8**
  store i8* %8, i8** %14, align 8
  %15 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %16 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %15, i64 32) #6
  %17 = bitcast i8* %16 to %"class.sh::TIntermSymbol"*
  %18 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %13, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %17, %"class.sh::TVariable"* %18) #6
  %19 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %20 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %19, i64 56) #6
  %21 = bitcast i8* %20 to %"class.sh::TIntermDeclaration"*
  %22 = bitcast i8* %20 to i32 (...)***
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #6
  %24 = getelementptr inbounds i8, i8* %20, i64 24
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #6
  %27 = bitcast i8* %16 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %21, %"class.sh::TIntermTyped"* %27) #6
  %28 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 1
  %29 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %28, align 8
  %30 = bitcast i8* %20 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15insertStatementEmPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %29, i64 0, %"class.sh::TIntermNode"* %30) #6
  %31 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %13, align 8
  ret %"class.sh::TVariable"* %31
}

declare void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"*, %"class.sh::TVariable"*) unnamed_addr #2

declare zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments34assignOriginalValueToANGLEVariableEj(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  switch i32 %1, label %65 [
    i32 35633, label %64
    i32 35632, label %3
  ]

3:                                                ; preds = %2
  %4 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %5 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %4, i64 64) #6
  %6 = bitcast i8* %5 to %"class.sh::TIntermBlock"*
  %7 = bitcast i8* %5 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #6
  %9 = getelementptr inbounds i8, i8* %5, i64 24
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #6
  %12 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %13 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %12, i64 32) #6
  %14 = bitcast i8* %13 to %"class.sh::TIntermSymbol"*
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 3
  %16 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %15, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %14, %"class.sh::TVariable"* %16) #6
  %17 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %18 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %17, i64 32) #6
  %19 = bitcast i8* %18 to %"class.sh::TIntermSymbol"*
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 7
  %21 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %20, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %19, %"class.sh::TVariable"* %21) #6
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %3
  %26 = bitcast i8* %13 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %27 = bitcast i8* %18 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  br label %28

28:                                               ; preds = %28, %25
  %29 = phi i32 [ 0, %25 ], [ %54, %28 ]
  %30 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %31 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %30, i64 240) #6
  %32 = bitcast i8* %31 to %"class.sh::TIntermBinary"*
  %33 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %26, align 8
  %34 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %33, i64 23
  %35 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %34, align 8
  %36 = tail call %"class.sh::TIntermTyped"* %35(%"class.sh::TIntermSymbol"* %14) #6
  %37 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %29) #6
  %38 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %37, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %32, i8 zeroext 44, %"class.sh::TIntermTyped"* %36, %"class.sh::TIntermTyped"* %38) #6
  %39 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %40 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %39, i64 240) #6
  %41 = bitcast i8* %40 to %"class.sh::TIntermBinary"*
  %42 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %27, align 8
  %43 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %42, i64 23
  %44 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %43, align 8
  %45 = tail call %"class.sh::TIntermTyped"* %44(%"class.sh::TIntermSymbol"* %19) #6
  %46 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %29) #6
  %47 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %46, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %41, i8 zeroext 44, %"class.sh::TIntermTyped"* %45, %"class.sh::TIntermTyped"* %47) #6
  %48 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %49 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %48, i64 240) #6
  %50 = bitcast i8* %49 to %"class.sh::TIntermBinary"*
  %51 = bitcast i8* %31 to %"class.sh::TIntermTyped"*
  %52 = bitcast i8* %40 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %50, i8 zeroext -118, %"class.sh::TIntermTyped"* %51, %"class.sh::TIntermTyped"* %52) #6
  %53 = bitcast i8* %49 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %6, %"class.sh::TIntermNode"* %53) #6
  %54 = add nuw i32 %29, 1
  %55 = load i32, i32* %22, align 8
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %28, label %57

57:                                               ; preds = %28, %3
  %58 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 0
  %59 = load %"class.sh::TCompiler"*, %"class.sh::TCompiler"** %58, align 8
  %60 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 1
  %61 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %60, align 8
  %62 = bitcast i8* %5 to %"class.sh::TIntermNode"*
  %63 = tail call zeroext i1 @_ZN2sh25RunAtTheBeginningOfShaderEPNS_9TCompilerEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TCompiler"* %59, %"class.sh::TIntermBlock"* %61, %"class.sh::TIntermNode"* %62) #6
  br i1 %63, label %64, label %65

64:                                               ; preds = %57, %2
  br label %65

65:                                               ; preds = %2, %57, %64
  %66 = phi i1 [ true, %64 ], [ false, %57 ], [ false, %2 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments34assignANGLEValueToOriginalVariableEjbPKNS_12TIntermTypedEPKN5angle7BitSetTILm32EmmEEPFPNS_11TIntermNodeEjPNS_13TIntermSymbolESD_S4_E(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nocapture readonly, i32, i1 zeroext, %"class.sh::TIntermTyped"*, %"class.angle::BitSetT"* readonly) unnamed_addr #0 align 2 {
  switch i32 %1, label %85 [
    i32 35633, label %6
    i32 35632, label %84
  ]

6:                                                ; preds = %5
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 64) #6
  %9 = bitcast i8* %8 to %"class.sh::TIntermBlock"*
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #6
  %12 = getelementptr inbounds i8, i8* %8, i64 24
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false) #6
  %15 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %16 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %15, i64 32) #6
  %17 = bitcast i8* %16 to %"class.sh::TIntermSymbol"*
  %18 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 3
  %19 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %18, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %17, %"class.sh::TVariable"* %19) #6
  %20 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %21 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %20, i64 32) #6
  %22 = bitcast i8* %21 to %"class.sh::TIntermSymbol"*
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 7
  %24 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %23, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %22, %"class.sh::TVariable"* %24) #6
  %25 = xor i1 %2, true
  %26 = icmp ne %"class.angle::BitSetT"* %4, null
  %27 = and i1 %26, %25
  %28 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 0
  br i1 %27, label %32, label %31

31:                                               ; preds = %6
  br i1 %30, label %36, label %75

32:                                               ; preds = %6
  br i1 %30, label %33, label %75

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %4, i64 0, i32 0
  %35 = bitcast i8* %16 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  br label %42

36:                                               ; preds = %31, %36
  %37 = phi i32 [ %39, %36 ], [ 0, %31 ]
  %38 = tail call fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_125assignFuncWithEnableFlagsEjPNS_13TIntermSymbolES2_PKNS_12TIntermTypedE(i32 %37, %"class.sh::TIntermSymbol"* %17, %"class.sh::TIntermSymbol"* %22, %"class.sh::TIntermTyped"* %3) #6
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %9, %"class.sh::TIntermNode"* %38) #6
  %39 = add nuw i32 %37, 1
  %40 = load i32, i32* %28, align 8
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %36, label %75

42:                                               ; preds = %69, %33
  %43 = phi i64 [ 0, %33 ], [ %71, %69 ]
  %44 = load i64, i64* %34, align 8
  %45 = shl i64 1, %43
  %46 = and i64 %44, %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = trunc i64 %43 to i32
  %50 = tail call fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_125assignFuncWithEnableFlagsEjPNS_13TIntermSymbolES2_PKNS_12TIntermTypedE(i32 %49, %"class.sh::TIntermSymbol"* %17, %"class.sh::TIntermSymbol"* %22, %"class.sh::TIntermTyped"* %3) #6
  br label %69

51:                                               ; preds = %42
  %52 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %53 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %52, i64 240) #6
  %54 = bitcast i8* %53 to %"class.sh::TIntermBinary"*
  %55 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %35, align 8
  %56 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %55, i64 23
  %57 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %56, align 8
  %58 = tail call %"class.sh::TIntermTyped"* %57(%"class.sh::TIntermSymbol"* %17) #6
  %59 = trunc i64 %43 to i32
  %60 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %59) #6
  %61 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %60, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %54, i8 zeroext 44, %"class.sh::TIntermTyped"* %58, %"class.sh::TIntermTyped"* %61) #6
  %62 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %63 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %62, i64 240) #6
  %64 = bitcast i8* %63 to %"class.sh::TIntermBinary"*
  %65 = bitcast i8* %53 to %"class.sh::TIntermTyped"*
  %66 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 0.000000e+00) #6
  %67 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %66, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %64, i8 zeroext -118, %"class.sh::TIntermTyped"* %65, %"class.sh::TIntermTyped"* %67) #6
  %68 = bitcast i8* %63 to %"class.sh::TIntermNode"*
  br label %69

69:                                               ; preds = %51, %48
  %70 = phi %"class.sh::TIntermNode"* [ %68, %51 ], [ %50, %48 ]
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %9, %"class.sh::TIntermNode"* %70) #6
  %71 = add nuw nsw i64 %43, 1
  %72 = load i32, i32* %28, align 8
  %73 = zext i32 %72 to i64
  %74 = icmp ult i64 %71, %73
  br i1 %74, label %42, label %75

75:                                               ; preds = %36, %69, %31, %32
  %76 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 0
  %77 = load %"class.sh::TCompiler"*, %"class.sh::TCompiler"** %76, align 8
  %78 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 1
  %79 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %78, align 8
  %80 = bitcast i8* %8 to %"class.sh::TIntermNode"*
  %81 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %0, i64 0, i32 2
  %82 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %81, align 8
  %83 = tail call zeroext i1 @_ZN2sh19RunAtTheEndOfShaderEPNS_9TCompilerEPNS_12TIntermBlockEPNS_11TIntermNodeEPNS_12TSymbolTableE(%"class.sh::TCompiler"* %77, %"class.sh::TIntermBlock"* %79, %"class.sh::TIntermNode"* %80, %"class.sh::TSymbolTable"* %82) #6
  br i1 %83, label %84, label %85

84:                                               ; preds = %75, %5
  br label %85

85:                                               ; preds = %5, %75, %84
  %86 = phi i1 [ true, %84 ], [ false, %75 ], [ false, %5 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.sh::TIntermNode"* @_ZN2sh12_GLOBAL__N_125assignFuncWithEnableFlagsEjPNS_13TIntermSymbolES2_PKNS_12TIntermTypedE(i32, %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %5 = shl i32 1, %0
  %6 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh14CreateUIntNodeEj(i32 %5) #6
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 240) #6
  %9 = bitcast i8* %8 to %"class.sh::TIntermBinary"*
  %10 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %11, i64 23
  %13 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call %"class.sh::TIntermTyped"* %13(%"class.sh::TIntermTyped"* %3) #6
  %15 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %6, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %9, i8 zeroext 41, %"class.sh::TIntermTyped"* %14, %"class.sh::TIntermTyped"* %15) #6
  %16 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %17 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %16, i64 240) #6
  %18 = bitcast i8* %17 to %"class.sh::TIntermBinary"*
  %19 = bitcast i8* %8 to %"class.sh::TIntermTyped"*
  %20 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh14CreateUIntNodeEj(i32 0) #6
  %21 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %20, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %18, i8 zeroext 19, %"class.sh::TIntermTyped"* %19, %"class.sh::TIntermTyped"* %21) #6
  %22 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %23 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %22, i64 240) #6
  %24 = bitcast i8* %23 to %"class.sh::TIntermBinary"*
  %25 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %26 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %26, i64 23
  %28 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %27, align 8
  %29 = tail call %"class.sh::TIntermTyped"* %28(%"class.sh::TIntermSymbol"* %1) #6
  %30 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %0) #6
  %31 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %30, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %24, i8 zeroext 44, %"class.sh::TIntermTyped"* %29, %"class.sh::TIntermTyped"* %31) #6
  %32 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %33 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %32, i64 240) #6
  %34 = bitcast i8* %33 to %"class.sh::TIntermBinary"*
  %35 = bitcast %"class.sh::TIntermSymbol"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %36 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %36, i64 23
  %38 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %37, align 8
  %39 = tail call %"class.sh::TIntermTyped"* %38(%"class.sh::TIntermSymbol"* %2) #6
  %40 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %0) #6
  %41 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %40, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %34, i8 zeroext 44, %"class.sh::TIntermTyped"* %39, %"class.sh::TIntermTyped"* %41) #6
  %42 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %43 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %42, i64 240) #6
  %44 = bitcast i8* %43 to %"class.sh::TIntermBinary"*
  %45 = bitcast i8* %23 to %"class.sh::TIntermTyped"*
  %46 = bitcast i8* %33 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %44, i8 zeroext -118, %"class.sh::TIntermTyped"* %45, %"class.sh::TIntermTyped"* %46) #6
  %47 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %48 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %47, i64 64) #6
  %49 = bitcast i8* %48 to %"class.sh::TIntermBlock"*
  %50 = bitcast i8* %48 to i32 (...)***
  %51 = getelementptr inbounds i8, i8* %48, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #6
  %52 = getelementptr inbounds i8, i8* %48, i64 24
  %53 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 25, i1 false) #6
  %55 = bitcast i8* %43 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %49, %"class.sh::TIntermNode"* %55) #6
  %56 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %57 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %56, i64 240) #6
  %58 = bitcast i8* %57 to %"class.sh::TIntermBinary"*
  %59 = bitcast i8* %23 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*)***
  %60 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*)** %60, i64 23
  %62 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermBinary"*)** %61, align 8
  %63 = tail call %"class.sh::TIntermTyped"* %62(%"class.sh::TIntermBinary"* %24) #6
  %64 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 0.000000e+00) #6
  %65 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %64, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %58, i8 zeroext -118, %"class.sh::TIntermTyped"* %63, %"class.sh::TIntermTyped"* %65) #6
  %66 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %67 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %66, i64 64) #6
  %68 = bitcast i8* %67 to %"class.sh::TIntermBlock"*
  %69 = bitcast i8* %67 to i32 (...)***
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #6
  %71 = getelementptr inbounds i8, i8* %67, i64 24
  %72 = bitcast i8* %71 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds i8, i8* %67, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 25, i1 false) #6
  %74 = bitcast i8* %57 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %68, %"class.sh::TIntermNode"* %74) #6
  %75 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %76 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %75, i64 48) #6
  %77 = bitcast i8* %76 to %"class.sh::TIntermIfElse"*
  %78 = bitcast i8* %17 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"* %77, %"class.sh::TIntermTyped"* %78, %"class.sh::TIntermBlock"* %49, %"class.sh::TIntermBlock"* %68) #6
  %79 = bitcast i8* %76 to %"class.sh::TIntermNode"*
  ret %"class.sh::TIntermNode"* %79
}

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh30ReplaceCullDistanceAssignmentsEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TSymbolTableEj(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = alloca %"class.angle::BitSetT", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.sh::TIntermSymbol"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", align 8
  %11 = alloca %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", align 8
  %12 = alloca %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", align 8
  %13 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %15 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8** %14, align 8
  store i64 15, i64* %15, align 8
  %16 = bitcast %"class.angle::BitSetT"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #6
  %18 = bitcast %"class.sh::TIntermSymbol"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #6
  %20 = bitcast %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %20) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 200, i1 false)
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %21, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #6
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10, i64 0, i32 1
  store %"class.sh::TIntermSymbol"** %8, %"class.sh::TIntermSymbol"*** %23, align 8
  %24 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10, i64 0, i32 2
  store i8* %7, i8** %24, align 8
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10, i64 0, i32 3
  store i32* %9, i32** %25, align 8
  %26 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10, i64 0, i32 4
  store %"class.angle::BitSetT"* %6, %"class.angle::BitSetT"** %26, align 8
  %27 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %10, i64 0, i32 5
  %28 = bitcast %"class.sh::ImmutableString"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %13, i64 16, i1 false) #6
  store %"class.sh::TIntermSymbol"* null, %"class.sh::TIntermSymbol"** %8, align 8
  store i8 0, i8* %7, align 1
  store i32 0, i32* %9, align 4
  store i64 0, i64* %17, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %21) #6
  %29 = load i8, i8* %7, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %104, label %31

31:                                               ; preds = %4
  %32 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %8, align 8
  %33 = icmp eq %"class.sh::TIntermSymbol"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %32, i64 0, i32 1
  %36 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %35, align 8
  br label %40

37:                                               ; preds = %31
  %38 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %2, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5, i32 300) #6
  %39 = bitcast %"class.sh::TSymbol"* %38 to %"class.sh::TVariable"*
  br label %40

40:                                               ; preds = %37, %34
  %41 = phi %"class.sh::TVariable"* [ %36, %34 ], [ %39, %37 ]
  %42 = icmp eq %"class.sh::TVariable"* %41, null
  br i1 %42, label %104, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 72, i1 false)
  %45 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %8, align 8
  %46 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 0
  store %"class.sh::TCompiler"* %0, %"class.sh::TCompiler"** %46, align 8
  %47 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 1
  store %"class.sh::TIntermBlock"* %1, %"class.sh::TIntermBlock"** %47, align 8
  %48 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 2
  store %"class.sh::TSymbolTable"* %2, %"class.sh::TSymbolTable"** %48, align 8
  %49 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 3
  store %"class.sh::TVariable"* %41, %"class.sh::TVariable"** %49, align 8
  %50 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 4
  store %"class.sh::TIntermSymbol"* %45, %"class.sh::TIntermSymbol"** %50, align 8
  %51 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 5, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 5, i32 1
  store i64 17, i64* %52, align 8
  %53 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments", %"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* %11, i64 0, i32 6
  store i32 0, i32* %53, align 8
  %54 = load i32, i32* %9, align 4
  %55 = icmp eq %"class.sh::TIntermSymbol"* %45, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %43
  %57 = bitcast %"class.sh::TIntermSymbol"* %45 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %58 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %58, i64 31
  %60 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %59, align 8
  %61 = call dereferenceable(184) %"class.sh::TType"* %60(%"class.sh::TIntermSymbol"* nonnull %45) #6
  %62 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 10, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 10, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, -1
  %67 = getelementptr inbounds i32, i32* %63, i64 %66
  %68 = load i32, i32* %67, align 4
  br label %74

69:                                               ; preds = %43
  %70 = load i8, i8* %7, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %102

72:                                               ; preds = %69
  %73 = add i32 %54, 1
  br label %74

74:                                               ; preds = %56, %72
  %75 = phi i32 [ %68, %56 ], [ %73, %72 ]
  store i32 %75, i32* %53, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %102, label %77

77:                                               ; preds = %74
  %78 = call fastcc %"class.sh::TVariable"* @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments20declareANGLEVariableEv(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nonnull %11)
  %79 = bitcast %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %79) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 176, i1 false)
  %80 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %81 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %80, i64 32) #6
  %82 = bitcast i8* %81 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %82, %"class.sh::TVariable"* %78) #6
  %83 = bitcast %"class.sh::TIntermSymbol"** %8 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %12, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %85, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #6
  %86 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_133ReplaceVariableExceptOneTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %12, i64 0, i32 1
  store %"class.sh::TVariable"* %41, %"class.sh::TVariable"** %87, align 8
  %88 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %12, i64 0, i32 2
  %89 = bitcast %"class.sh::TIntermSymbol"** %88 to i64*
  store i64 %84, i64* %89, align 8
  %90 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %12, i64 0, i32 3
  %91 = bitcast %"class.sh::TIntermTyped"** %90 to i8**
  store i8* %81, i8** %91, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %85) #6
  %92 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 0
  %93 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %85, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %92) #6
  br i1 %93, label %94, label %100

94:                                               ; preds = %77
  %95 = call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments34assignOriginalValueToANGLEVariableEj(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nonnull %11, i32 %3)
  br i1 %95, label %96, label %100

96:                                               ; preds = %94
  %97 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %8, align 8
  %98 = icmp ne %"class.sh::TIntermSymbol"* %97, null
  %99 = call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_134ReplaceClipCullDistanceAssignments34assignANGLEValueToOriginalVariableEjbPKNS_12TIntermTypedEPKN5angle7BitSetTILm32EmmEEPFPNS_11TIntermNodeEjPNS_13TIntermSymbolESD_S4_E(%"class.sh::(anonymous namespace)::ReplaceClipCullDistanceAssignments"* nonnull %11, i32 %3, i1 zeroext %98, %"class.sh::TIntermTyped"* null, %"class.angle::BitSetT"* nonnull %6)
  br label %100

100:                                              ; preds = %94, %77, %96
  %101 = phi i1 [ %99, %96 ], [ false, %77 ], [ false, %94 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %85) #6
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %79) #6
  br label %102

102:                                              ; preds = %69, %74, %100
  %103 = phi i1 [ %101, %100 ], [ false, %74 ], [ false, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #6
  br label %104

104:                                              ; preds = %102, %40, %4
  %105 = phi i1 [ true, %4 ], [ %103, %102 ], [ false, %40 ]
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6
  ret i1 %105
}

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverserD0Ev(%"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* nocapture readonly, i32, %"class.sh::TIntermBinary"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, -2
  %7 = icmp eq i8 %6, 44
  br i1 %7, label %8, label %81

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %10 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %9, align 8
  %11 = bitcast %"class.sh::TIntermTyped"* %10 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %12 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %12, i64 4
  %14 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %13, align 8
  %15 = tail call %"class.sh::TIntermTyped"* %14(%"class.sh::TIntermTyped"* %10) #6
  %16 = icmp eq %"class.sh::TIntermTyped"* %15, null
  br i1 %16, label %81, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %15, i64 0, i32 0
  %19 = bitcast %"class.sh::TIntermTyped"* %15 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %20 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %20, i64 19
  %22 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %21, align 8
  %23 = tail call %"class.sh::TIntermSymbol"* %22(%"class.sh::TIntermNode"* %18) #6
  %24 = icmp eq %"class.sh::TIntermSymbol"* %23, null
  br i1 %24, label %81, label %25

25:                                               ; preds = %17
  %26 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %23) #6
  %27 = extractvalue { i8*, i64 } %26, 0
  %28 = extractvalue { i8*, i64 } %26, 1
  %29 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 5, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %25
  %33 = icmp eq i8* %27, null
  %34 = select i1 %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* %27
  %35 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 5, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  %38 = select i1 %37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* %36
  %39 = tail call i32 @bcmp(i8* %34, i8* %38, i64 %28) #6
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %81

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %43 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %42, align 8
  %44 = bitcast %"class.sh::TIntermTyped"* %43 to %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)***
  %45 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)** %45, i64 29
  %47 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)** %46, align 8
  %48 = tail call %"class.sh::TConstantUnion"* %47(%"class.sh::TIntermTyped"* %43) #6
  %49 = icmp eq %"class.sh::TConstantUnion"* %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 2
  %52 = load i8*, i8** %51, align 8
  store i8 1, i8* %52, align 1
  br label %81

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %48, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  switch i32 %55, label %66 [
    i32 3, label %56
    i32 4, label %58
    i32 1, label %60
    i32 5, label %63
  ]

56:                                               ; preds = %53
  %57 = tail call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* nonnull %48) #6
  br label %66

58:                                               ; preds = %53
  %59 = tail call i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"* nonnull %48) #6
  br label %66

60:                                               ; preds = %53
  %61 = tail call float @_ZNK2sh14TConstantUnion9getFConstEv(%"class.sh::TConstantUnion"* nonnull %48) #6
  %62 = fptoui float %61 to i32
  br label %66

63:                                               ; preds = %53
  %64 = tail call zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"* nonnull %48) #6
  %65 = zext i1 %64 to i32
  br label %66

66:                                               ; preds = %53, %63, %60, %58, %56
  %67 = phi i32 [ 0, %53 ], [ %65, %63 ], [ %62, %60 ], [ %59, %58 ], [ %57, %56 ]
  %68 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 4
  %69 = load %"class.angle::BitSetT"*, %"class.angle::BitSetT"** %68, align 8
  %70 = zext i32 %67 to i64
  %71 = shl i64 1, %70
  %72 = and i64 %71, 4294967295
  %73 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %69, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = or i64 %72, %74
  store i64 %75, i64* %73, align 8
  %76 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 3
  %77 = load i32*, i32** %76, align 8
  %78 = load i32, i32* %77, align 4
  %79 = icmp ult i32 %78, %67
  %80 = select i1 %79, i32 %67, i32 %78
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %32, %25, %3, %8, %50, %66, %17
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_136GLClipCullDistanceReferenceTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* nocapture readonly, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.sh::TIntermDeclaration"* %2 to %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)***
  %5 = load %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)** %5, i64 27
  %7 = load %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector"* (%"class.sh::TIntermDeclaration"*)** %6, align 8
  %8 = tail call %"class.sh::TVector"* %7(%"class.sh::TIntermDeclaration"* %2) #6
  %9 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.sh::TVector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 8
  br i1 %15, label %16, label %58

16:                                               ; preds = %3
  %17 = inttoptr i64 %13 to %"class.sh::TIntermNode"**
  %18 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %17, align 8
  %19 = bitcast %"class.sh::TIntermNode"* %18 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %20 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %20, i64 4
  %22 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %21, align 8
  %23 = tail call %"class.sh::TIntermTyped"* %22(%"class.sh::TIntermNode"* %18) #6
  %24 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %23, i64 0, i32 0
  %25 = bitcast %"class.sh::TIntermTyped"* %23 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %26 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %26, i64 19
  %28 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %27, align 8
  %29 = tail call %"class.sh::TIntermSymbol"* %28(%"class.sh::TIntermNode"* %24) #6
  %30 = icmp eq %"class.sh::TIntermSymbol"* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %16
  %32 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %25, align 8
  %33 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %32, i64 19
  %34 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %33, align 8
  %35 = tail call %"class.sh::TIntermSymbol"* %34(%"class.sh::TIntermNode"* %24) #6
  %36 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %35) #6
  %37 = extractvalue { i8*, i64 } %36, 0
  %38 = extractvalue { i8*, i64 } %36, 1
  %39 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 5, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  br i1 %41, label %42, label %58

42:                                               ; preds = %31
  %43 = icmp eq i8* %37, null
  %44 = select i1 %43, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* %37
  %45 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 5, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  %48 = select i1 %47, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* %46
  %49 = tail call i32 @bcmp(i8* %44, i8* %48, i64 %38) #6
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %42
  %52 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %25, align 8
  %53 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %52, i64 19
  %54 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %53, align 8
  %55 = tail call %"class.sh::TIntermSymbol"* %54(%"class.sh::TIntermNode"* %24) #6
  %56 = getelementptr inbounds %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser", %"class.sh::(anonymous namespace)::GLClipCullDistanceReferenceTraverser"* %0, i64 0, i32 1
  %57 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %56, align 8
  store %"class.sh::TIntermSymbol"* %55, %"class.sh::TIntermSymbol"** %57, align 8
  br label %58

58:                                               ; preds = %42, %31, %16, %51, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

declare { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #2

declare i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

declare i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

declare float @_ZNK2sh14TConstantUnion9getFConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #2

declare void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"*, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #2

declare void @_ZN2sh5TType9makeArrayEj(%"class.sh::TType"*, i32) local_unnamed_addr #2

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #2

declare void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #2

declare void @_ZN2sh12TIntermBlock15insertStatementEmPNS_11TIntermNodeE(%"class.sh::TIntermBlock"*, i64, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #2

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_133ReplaceVariableExceptOneTraverserD0Ev(%"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_133ReplaceVariableExceptOneTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"*, %"class.sh::TIntermSymbol"* readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %4 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %0, i64 0, i32 1
  %6 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %5, align 8
  %7 = icmp eq %"class.sh::TVariable"* %4, %6
  br i1 %7, label %8, label %22

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %0, i64 0, i32 2
  %10 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %9, align 8
  %11 = icmp eq %"class.sh::TIntermSymbol"* %10, %1
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser", %"class.sh::(anonymous namespace)::ReplaceVariableExceptOneTraverser"* %0, i64 0, i32 3
  %15 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %14, align 8
  %16 = bitcast %"class.sh::TIntermTyped"* %15 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %17 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %17, i64 23
  %19 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %18, align 8
  %20 = tail call %"class.sh::TIntermTyped"* %19(%"class.sh::TIntermTyped"* %15) #6
  %21 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %20, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %13, %"class.sh::TIntermNode"* %21, i32 1) #6
  br label %22

22:                                               ; preds = %8, %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #2

declare void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2sh25RunAtTheBeginningOfShaderEPNS_9TCompilerEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32) local_unnamed_addr #2

declare void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #2

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float) local_unnamed_addr #2

declare zeroext i1 @_ZN2sh19RunAtTheEndOfShaderEPNS_9TCompilerEPNS_12TIntermBlockEPNS_11TIntermNodeEPNS_12TSymbolTableE(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*, %"class.sh::TSymbolTable"*) local_unnamed_addr #2

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh14CreateUIntNodeEj(i32) local_unnamed_addr #2

declare void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
