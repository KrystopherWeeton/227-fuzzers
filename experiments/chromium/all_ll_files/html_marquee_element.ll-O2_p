; ModuleID = '../../third_party/blink/renderer/core/html/html_marquee_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_marquee_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%union.anon.48 = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr.60 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.61" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i32 }
%"class.blink::LinearTimingFunction" = type { %"class.blink::TimingFunction" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.786", i32, [4 x i8], %"class.std::__1::unique_ptr.930", %"class.std::__1::unique_ptr.930", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.936", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.942", %"class.std::__1::unique_ptr.948", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.960", %"class.std::__1::unique_ptr.966", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.307", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.795", %"class.std::__1::unique_ptr.801", %"class.std::__1::unique_ptr.807", %"class.std::__1::unique_ptr.813", %"class.std::__1::unique_ptr.819", %"class.std::__1::unique_ptr.830", %"class.std::__1::unique_ptr.837", %"class.std::__1::unique_ptr.837", %"class.std::__1::unique_ptr.844", %"class.std::__1::unique_ptr.851", %"class.std::__1::unique_ptr.858", %"class.std::__1::unique_ptr.858", %"class.std::__1::unique_ptr.865", %"class.std::__1::unique_ptr.872", %"class.std::__1::unique_ptr.879", %"class.std::__1::unique_ptr.910", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.822" = type { %"struct.std::__1::__atomic_base.823" }
%"struct.std::__1::__atomic_base.823" = type { %"struct.std::__1::__atomic_base.824" }
%"struct.std::__1::__atomic_base.824" = type { %"struct.std::__1::__cxx_atomic_impl.825" }
%"struct.std::__1::__cxx_atomic_impl.825" = type { %"struct.std::__1::__cxx_atomic_base_impl.826" }
%"struct.std::__1::__cxx_atomic_base_impl.826" = type { i64 }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.blink::Worklist.833"* }
%"class.blink::Worklist.833" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::Worklist.840"* }
%"class.blink::Worklist.840" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::Worklist.847"* }
%"class.blink::Worklist.847" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.blink::Worklist.854"* }
%"class.blink::Worklist.854" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.blink::Worklist.861"* }
%"class.blink::Worklist.861" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.blink::Worklist.868"* }
%"class.blink::Worklist.868" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.blink::Worklist.875"* }
%"class.blink::Worklist.875" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.822" }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.882" }
%"class.std::__1::__hash_table.882" = type <{ %"class.std::__1::unique_ptr.883", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.902", [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885", %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::__hash_node_base.886"** }
%"struct.std::__1::__hash_node_base.886" = type { %"struct.std::__1::__hash_node_base.886"* }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.std::__1::__bucket_list_deallocator.888" }
%"class.std::__1::__bucket_list_deallocator.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::__hash_node_base.886" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { float }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.913", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.922" }
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.936" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940" }
%"class.WTF::VectorBufferBase.940" = type { %"struct.std::__1::pair.941"*, i32, i32 }
%"struct.std::__1::pair.941" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.954" }
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.833"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.840"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.847"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.854"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.861"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1193" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.972 }
%class.scoped_refptr.972 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.307" = type { %"struct.std::__1::__atomic_base.308" }
%"struct.std::__1::__atomic_base.308" = type { %"struct.std::__1::__cxx_atomic_impl.309" }
%"struct.std::__1::__cxx_atomic_impl.309" = type { %"struct.std::__1::__cxx_atomic_base_impl.310" }
%"struct.std::__1::__cxx_atomic_base_impl.310" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.773", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.773" = type { %"class.base::RefCounted.774" }
%"class.base::RefCounted.774" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.777" }
%"class.blink::HeapHashMap.777" = type { %"class.WTF::HashMap.780" }
%"class.WTF::HashMap.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"struct.WTF::KeyValuePair.783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.783" = type { %"class.blink::WeakMember.784", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.61" }
%"class.blink::HTMLMarqueeElement" = type { %"class.blink::HTMLElement", i32, i32, %"class.blink::Member.21", %"class.blink::Member.23" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.157", %"class.blink::Member.75", %"class.blink::Member.0", %"class.blink::Member.159", %"class.blink::Member.159", %"class.blink::Member.178", %"class.blink::Member.180", %"class.blink::Member.182", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.187", %"class.blink::HeapVector.189" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::Document"* }
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.165" }
%"class.WTF::HashTable.165" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.167" }
%"class.blink::Member.167" = type { %"class.blink::MemberBase.168" }
%"class.blink::MemberBase.168" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector.171" }
%"class.blink::HeapVector.171" = type { %"class.WTF::Vector.174" }
%"class.WTF::Vector.174" = type { %"class.WTF::VectorBuffer.175" }
%"class.WTF::VectorBuffer.175" = type { %"class.WTF::VectorBufferBase.176" }
%"class.WTF::VectorBufferBase.176" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.184" }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::HeapHashMap.186"* }
%"class.blink::HeapHashMap.186" = type opaque
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.189" = type { %"class.WTF::Vector.192" }
%"class.WTF::Vector.192" = type { %"class.WTF::VectorBuffer.193" }
%"class.WTF::VectorBuffer.193" = type { %"class.WTF::VectorBufferBase.194" }
%"class.WTF::VectorBufferBase.194" = type { %"class.blink::Member.195"*, i32, i32 }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.197", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.199, %"class.WTF::Vector.200", %"class.WTF::Vector.200", %"class.blink::Member", %"class.blink::Member.205", %"class.blink::HeapHashSet.209", %"class.blink::Member.75", %"class.WTF::HashSet.216", %"class.WTF::TextPosition", %"class.blink::Member.220", %"class.blink::HeapVector.222", %"class.blink::Member.229" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.199 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.200" = type { %"class.WTF::VectorBuffer.201" }
%"class.WTF::VectorBuffer.201" = type { %"class.WTF::VectorBufferBase.202" }
%"class.WTF::VectorBufferBase.202" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.207" }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.209" = type { %"class.WTF::HashSet.212" }
%"class.WTF::HashSet.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"class.blink::WeakMember.215"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.215" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.216" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.222" = type { %"class.WTF::Vector.225" }
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"class.blink::Member.205"*, i32, i32 }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional", %"class.absl::optional.44", %"class.absl::optional.44", %"class.absl::optional.49", %"class.absl::optional.44", i8, [3 x i8], i32, %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::Member.56", %"class.blink::Member.75", %"class.blink::Member.77", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.127", %"class.blink::Member.127", %"class.blink::Member.127", %"class.std::__1::unique_ptr.140", i8, [3 x i8], i32, %"class.blink::Member.146", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.29" }
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31", [32 x i8] }
%"class.WTF::VectorBufferBase.31" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::HeapVector.34"* }
%"class.blink::HeapVector.34" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.37"* }
%"class.WTF::Vector.37" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.43"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.43" = type opaque
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { i32 }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.58", %"struct.blink::Timing", %"class.blink::Member.66", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.44", %"class.absl::optional.70", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::AnimationEffectOwner"* }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.44", i32, [4 x i8], %class.scoped_refptr.60, i16, [6 x i8] }>
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional", %"class.absl::optional", i8, i8, i8, %"class.absl::optional.44", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.70" = type { %"class.absl::optional_internal::optional_data.71" }
%"class.absl::optional_internal::optional_data.71" = type { %"class.absl::optional_internal::optional_data_base.72" }
%"class.absl::optional_internal::optional_data_base.72" = type { %"class.absl::optional_internal::optional_data_dtor_base.73" }
%"class.absl::optional_internal::optional_data_dtor_base.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { i32 }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.75", i32, [4 x i8], %"class.blink::HeapHashSet.79", %"class.blink::HeapHashSet.85", %"class.std::__1::unique_ptr.92", %"class.absl::optional.117" }
%"class.blink::HeapHashSet.79" = type { %"class.WTF::HashSet.82" }
%"class.WTF::HashSet.82" = type { %"class.WTF::HashTable.83" }
%"class.WTF::HashTable.83" = type <{ %"class.blink::Member.23"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet.85" = type { %"class.WTF::HashSet.88" }
%"class.WTF::HashSet.88" = type { %"class.WTF::HashTable.89" }
%"class.WTF::HashTable.89" = type <{ %"class.blink::WeakMember.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.91" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.95 }
%class.scoped_refptr.95 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.96", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.96" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.97", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, %union.anon.121 }
%union.anon.121 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.122" }
%"class.absl::optional.122" = type { %"class.absl::optional_internal::optional_data.123" }
%"class.absl::optional_internal::optional_data.123" = type { %"class.absl::optional_internal::optional_data_base.124" }
%"class.absl::optional_internal::optional_data_base.124" = type { %"class.absl::optional_internal::optional_data_dtor_base.125" }
%"class.absl::optional_internal::optional_data_dtor_base.125" = type { i8, %union.anon.126 }
%union.anon.126 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.134", %"class.blink::Member.134", %"class.blink::Member.136", %"class.blink::Member.138", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.129" }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { i64 }
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::Event"* }
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional", %"class.absl::optional", double, i8, i32 }
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.150", %"class.std::__1::unique_ptr.151", %"class.blink::Member.23" }
%"class.blink::ThreadState::PrefinalizerRegistration.150" = type { i8 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.239", %"class.WTF::Vector.239", i8, i32, %"class.blink::Member.246", %"class.blink::Member.495", %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.748", %"class.blink::Member.750", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.758", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.764", %"class.blink::Member.766", %"class.blink::Member.195", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.769", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.171", %"class.blink::Member.21", %"class.blink::Member.720", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.985", double, double, i64, i64, %"class.blink::HeapHashSet.987", %"class.blink::HeapHashSet.994", i16, i8, %"class.blink::Member.1001", %"class.blink::Member.1003", %"class.blink::Member.1005", %"class.blink::Member.1007", %"class.blink::TextLinkColors", %"class.blink::Member.1009", i8, [7 x i8], %"class.blink::HeapHashMap.1011", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.1018", %"class.blink::Member.1023", %"class.blink::Member.1025", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1027", %"class.blink::HeapVector.1029", %"class.std::__1::unique_ptr.1037", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1043", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1056", %"class.WTF::Vector.1058", i8, i8, %"class.std::__1::unique_ptr.1063", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.171", %"class.blink::HeapVector.1069", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1077", i8, i32, %"class.blink::Member.1079", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1085", %"class.WTF::HashMap.1087", %"class.blink::Member.1092", %"class.blink::Member.1094", %"class.blink::Member.1100", %"class.blink::Member.1102", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1104", i8, i32, %"class.blink::Member.1111", %"class.blink::Member.1113", i32, %"class.blink::Member.1115", %"class.blink::Member.1117", %"class.blink::Member.1119", %"class.std::__1::unique_ptr.1121", i64, %"class.std::__1::unique_ptr.1127", i32, i32, %"class.blink::Member.1133", %"class.blink::Member.1135", %"class.blink::Member.1137", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1139", %"class.WTF::Vector.731", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1141", %"class.blink::Member.1148", %"class.std::__1::unique_ptr.1150", %"class.blink::Member.1156", i8, i8, %"class.WTF::String", %"class.blink::Member.1158", i8, [7 x i8], %"class.blink::HeapHashMap.1160", %"class.blink::HeapObserverSet.1167", %"class.blink::Member.1175", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1177", i32, i8, i8, %"class.blink::WeakMember.1179", %"class.blink::Member.1180" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.232" }
%"class.blink::HeapHashMap.232" = type { %"class.WTF::HashMap.235" }
%"class.WTF::HashMap.235" = type { %"class.WTF::HashTable.236" }
%"class.WTF::HashTable.236" = type <{ %"struct.WTF::KeyValuePair.238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.238" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.239" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241" }
%"class.WTF::VectorBufferBase.241" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.243", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.243" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.585", %"class.blink::ThreadState::PrefinalizerRegistration.593", %"class.blink::Member.594", %"class.blink::Member.75", %"class.blink::Member.596", i8, %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::Member.602", %"class.blink::Member.602", %"class.blink::Member.602", %"class.blink::Member.602", %"class.blink::Member.602", %"class.blink::Member.604", %"class.blink::Member.606", %"class.blink::Member.608", %"class.blink::Member.610", %"class.blink::Member.612", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.552", %"class.blink::Member.614", %class.scoped_refptr.616, %"class.blink::HeapHashSet.679", %"class.blink::Member.127", %"class.blink::HeapHashMap.686", %"class.std::__1::unique_ptr.693", %"class.blink::Member.705", %"class.blink::Member.724", %"class.blink::Member.726", %"class.blink::Member.728", %"class.WTF::Vector.731", %"class.util::TokenType", %"class.WTF::HashSet.736", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.248", %"class.blink::Member.250", %"class.blink::Member.252", %"class.blink::Member.254", i8, %"class.WTF::Vector.256" }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1210", %"class.blink::Member.1212", %"class.blink::Member.1214", i8, i32, i8, i32, %"class.blink::Member.1216", %"class.blink::Member.250", %"class.blink::FrameLifecycle", %"class.blink::Member.248", %"class.blink::Member.248", %"class.blink::Member.248", %"class.blink::Member.248", %"class.blink::Member.248", %"class.blink::Member.248", %"class.blink::Member.709", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1226", i8, %"class.base::UnguessableToken", %"class.absl::optional.1228", %"class.absl::optional.1233", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.248", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1245", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1253", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1261", %"class.blink::FrameLoader", %"class.blink::Member.1282", %"class.blink::Member.21", %"class.blink::Member.1284", %"class.blink::Member.1286", %"class.blink::Member.1288", %"class.blink::Member.1290", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1292", %class.scoped_refptr.1294, %"class.blink::Member.1295", %"class.blink::Member.1297", %"class.blink::Member.1299", %"class.blink::Member.1301", %"class.blink::Member.1303", %"class.blink::Member.1305", %"class.blink::Member.1307", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1309", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1312", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1318", %"class.std::__1::unique_ptr.1319", %"class.absl::optional.1233", i32, [4 x i8], %"class.std::__1::unique_ptr.1325", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1333", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1338", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1343", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1346", %"class.blink::Member.1348", %"class.blink::Member.1350", %"class.blink::Member.1352", %"class.mojo::StructPtr.1355", %"class.blink::Member.1364", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1366", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1245" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1246" }
%"class.blink::HeapHashMap.1246" = type { %"class.WTF::HashMap.1249" }
%"class.WTF::HashMap.1249" = type { %"class.WTF::HashTable.1250" }
%"class.WTF::HashTable.1250" = type <{ %"struct.WTF::KeyValuePair.1252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1252" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.696", %"class.base::WeakPtrFactory.701" }
%"class.WTF::HashMap.696" = type { %"class.WTF::HashTable.697" }
%"class.WTF::HashTable.697" = type <{ %"struct.WTF::KeyValuePair.700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.700" = type opaque
%"class.base::WeakPtrFactory.701" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.282", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.282" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.283" }
%"struct.std::__1::atomic.283" = type { %"struct.std::__1::__atomic_base.284" }
%"struct.std::__1::__atomic_base.284" = type { %"struct.std::__1::__atomic_base.285" }
%"struct.std::__1::__atomic_base.285" = type { %"struct.std::__1::__cxx_atomic_impl.286" }
%"struct.std::__1::__cxx_atomic_impl.286" = type { %"struct.std::__1::__cxx_atomic_base_impl.287" }
%"struct.std::__1::__cxx_atomic_base_impl.287" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1259" }
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.387", %"class.base::RepeatingCallback.1835", i64, %"class.std::__1::map.1836", i8*, i64, %"class.base::WeakPtrFactory.1845" }
%"class.base::RepeatingCallback.387" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.1835" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1836" = type { %"class.std::__1::__tree.1837" }
%"class.std::__1::__tree.1837" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1838", %"class.std::__1::__compressed_pair.1842" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1838" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1842" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::WeakPtrFactory.1845" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1261" = type { %"class.WTF::HashSet.1264" }
%"class.WTF::HashSet.1264" = type { %"class.WTF::HashTable.1265" }
%"class.WTF::HashTable.1265" = type <{ %"class.blink::WeakMember.1267"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1267" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.709", %"class.blink::Member.1268", %"class.blink::Member.1270", %"class.std::__1::unique_ptr.1272", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1278" }
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1272" = type { %"class.std::__1::__compressed_pair.1273" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.WTF::HashSet.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1373", %"class.blink::Member.709", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1378", i8, i32, %"class.blink::Color", %"class.absl::optional.1380", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.1387", %"class.std::__1::unique_ptr.1390", i32, [4 x i8], %"class.WTF::HashSet.1393", %"class.blink::Member.1400", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1402", %"class.blink::HeapHashSet.1409", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1417", i8, %"class.blink::Member.1423", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1435", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1449", i8, %"class.std::__1::unique_ptr.1455", %"class.std::__1::unique_ptr.1572", %"class.WTF::Vector.1578", i32, %class.scoped_refptr.1583, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1584", %"class.blink::Member.1586", %"class.blink::Member.1588", %"class.blink::HeapHashSet.1590", %"class.blink::HeapHashSet.1597", %"class.std::__1::unique_ptr.1604", %"class.std::__1::unique_ptr.1611", %"class.WTF::Vector.239" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1373" = type { %"class.WTF::HashTable.1374" }
%"class.WTF::HashTable.1374" = type <{ %class.scoped_refptr.1377*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1377 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1378" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1379", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.975, %"class.base::WeakPtrFactory.976" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.975 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.262" }>
%"class.base::RefCountedThreadSafe.262" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.976" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1379" = type { %"class.blink::MemberBase.1283" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1380" = type { %"class.absl::optional_internal::optional_data.1381" }
%"class.absl::optional_internal::optional_data.1381" = type { %"class.absl::optional_internal::optional_data_base.1382" }
%"class.absl::optional_internal::optional_data_base.1382" = type { %"class.absl::optional_internal::optional_data_dtor_base.1383" }
%"class.absl::optional_internal::optional_data_dtor_base.1383" = type { i8, %union.anon.1384 }
%union.anon.1384 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::HeapHashSet.1389"* }
%"class.blink::HeapHashSet.1389" = type opaque
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.WTF::HashSet.1393"* }
%"class.WTF::HashSet.1393" = type { %"class.WTF::HashTable.1394" }
%"class.WTF::HashTable.1394" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1402" = type { %"class.WTF::HashSet.1405" }
%"class.WTF::HashSet.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"class.blink::Member.1408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1408" = type opaque
%"class.blink::HeapHashSet.1409" = type { %"class.WTF::HashSet.1412" }
%"class.WTF::HashSet.1412" = type { %"class.WTF::HashTable.1413" }
%"class.WTF::HashTable.1413" = type <{ %"class.blink::Member.1415"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1645", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1656", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1647", %"class.blink::Member.1648", %"class.blink::Member.1650", %"class.blink::Member.1652", %"class.blink::Member.1654", %"class.WTF::Vector.239", i16, %class.scoped_refptr.975 }
%"class.blink::ThreadState::PrefinalizerRegistration.1647" = type { i8 }
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1656" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1657", { i64, i64 } }
%"class.blink::WeakMember.1657" = type { %"class.blink::MemberBase.1416" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1427", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1427" = type { %"class.WTF::HashTable.1428" }
%"class.WTF::HashTable.1428" = type <{ %"struct.WTF::KeyValuePair.1430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1430" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1431", i32, i32 }
%"class.WTF::Vector.1431" = type { %"class.WTF::VectorBuffer.1432" }
%"class.WTF::VectorBuffer.1432" = type { %"class.WTF::VectorBufferBase.1433" }
%"class.WTF::VectorBufferBase.1433" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1435" = type { %"class.WTF::LinkedHashSet.1438" }
%"class.WTF::LinkedHashSet.1438" = type { %"class.WTF::HashMap.1439", %"class.WTF::VectorBackedLinkedList.1443" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1442"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1442" = type opaque
%"class.WTF::VectorBackedLinkedList.1443" = type { %"class.WTF::Vector.1444", i32, i32 }
%"class.WTF::Vector.1444" = type { %"class.WTF::VectorBuffer.1445" }
%"class.WTF::VectorBuffer.1445" = type { %"class.WTF::VectorBufferBase.1446" }
%"class.WTF::VectorBufferBase.1446" = type { %"class.WTF::VectorBackedLinkedListNode.1447"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1447" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1449" = type { %"class.std::__1::__compressed_pair.1450" }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1451" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1455" = type { %"class.std::__1::__compressed_pair.1456" }
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1458, %class.scoped_refptr.1458, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1549", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1554", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1458 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1459", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1466" }
%"class.WTF::RefCounted.1459" = type { %"class.base::RefCounted.1460" }
%"class.base::RefCounted.1460" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1461", i32, [4 x i8] }>
%"class.WTF::Vector.1461" = type { %"class.WTF::VectorBuffer.1462" }
%"class.WTF::VectorBuffer.1462" = type { %"class.WTF::VectorBufferBase.1463" }
%"class.WTF::VectorBufferBase.1463" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1472", %"class.std::__1::unique_ptr.1521", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1469, %class.scoped_refptr.1470, %class.scoped_refptr.1471 }
%class.scoped_refptr.1469 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1485", i8, i8, %class.scoped_refptr.1469, i32, i32 }
%"class.WTF::RefCounted.1485" = type { %"class.base::RefCounted.1486" }
%"class.base::RefCounted.1486" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1470 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1640" }
%"class.blink::PaintPropertyNode.1640" = type { %"class.WTF::RefCounted.1641", i8, i8, %class.scoped_refptr.1470, i32, i32 }
%"class.WTF::RefCounted.1641" = type { %"class.base::RefCounted.1642" }
%"class.base::RefCounted.1642" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1471 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1637" }
%"class.blink::PaintPropertyNode.1637" = type { %"class.WTF::RefCounted.1638", i8, i8, %class.scoped_refptr.1471, i32, i32 }
%"class.WTF::RefCounted.1638" = type { %"class.base::RefCounted.1639" }
%"class.base::RefCounted.1639" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1472" = type { %"class.std::__1::__compressed_pair.1473" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1474" }
%"struct.std::__1::__compressed_pair_elem.1474" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1475", %"class.WTF::Vector.1480", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1475" = type { %"class.WTF::VectorBuffer.1476" }
%"class.WTF::VectorBuffer.1476" = type { %"class.WTF::VectorBufferBase.1477" }
%"class.WTF::VectorBufferBase.1477" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1480" = type { %"class.WTF::VectorBuffer.1481" }
%"class.WTF::VectorBuffer.1481" = type { %"class.WTF::VectorBufferBase.1482" }
%"class.WTF::VectorBufferBase.1482" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1500" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1493, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1494", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1487" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1493 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1622", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1622" = type { %"class.WTF::RefCounted.1623", i8, i8, %class.scoped_refptr.1493, i32, i32 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1625" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1630", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1630" = type { %"class.std::__1::__vector_base.1631" }
%"class.std::__1::__vector_base.1631" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1632" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1500" = type { %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1503", %"class.std::__1::unique_ptr.1509", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1503" = type { %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1509" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1521" = type { %"class.std::__1::__compressed_pair.1522" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.1523" }
%"struct.std::__1::__compressed_pair_elem.1523" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1524", %"class.absl::optional.1524" }
%"class.absl::optional.1524" = type { %"class.absl::optional_internal::optional_data.1525" }
%"class.absl::optional_internal::optional_data.1525" = type { %"class.absl::optional_internal::optional_data_base.1526" }
%"class.absl::optional_internal::optional_data_base.1526" = type { %"class.absl::optional_internal::optional_data_dtor_base.1527" }
%"class.absl::optional_internal::optional_data_dtor_base.1527" = type { i8, [3 x i8], %union.anon.1528 }
%union.anon.1528 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1466"*, %"class.absl::optional.1534", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1534" = type { %"class.absl::optional_internal::optional_data.1535" }
%"class.absl::optional_internal::optional_data.1535" = type { %"class.absl::optional_internal::optional_data_base.1536" }
%"class.absl::optional_internal::optional_data_base.1536" = type { %"class.absl::optional_internal::optional_data_dtor_base.1537" }
%"class.absl::optional_internal::optional_data_dtor_base.1537" = type { i8, %union.anon.1538 }
%union.anon.1538 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1539", %"class.WTF::Vector.1544" }
%"class.WTF::Vector.1539" = type { %"class.WTF::VectorBuffer.1540" }
%"class.WTF::VectorBuffer.1540" = type { %"class.WTF::VectorBufferBase.1541", [128 x i8] }
%"class.WTF::VectorBufferBase.1541" = type { i32*, i32, i32 }
%"class.WTF::Vector.1544" = type { %"class.WTF::VectorBuffer.1545" }
%"class.WTF::VectorBuffer.1545" = type { %"class.WTF::VectorBufferBase.1546", [128 x i8] }
%"class.WTF::VectorBufferBase.1546" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1549" = type { %"class.WTF::VectorBuffer.1550" }
%"class.WTF::VectorBuffer.1550" = type { %"class.WTF::VectorBufferBase.1551" }
%"class.WTF::VectorBufferBase.1551" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1554" = type { %"class.WTF::HashTable.1555" }
%"class.WTF::HashTable.1555" = type <{ %"struct.WTF::KeyValuePair.1558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1558" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1559", %"class.WTF::Vector.1564" }
%"class.WTF::HashMap.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ %"struct.WTF::KeyValuePair.1563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1563" = type opaque
%"class.WTF::Vector.1564" = type { %"class.WTF::VectorBuffer.1565" }
%"class.WTF::VectorBuffer.1565" = type { %"class.WTF::VectorBufferBase.1566" }
%"class.WTF::VectorBufferBase.1566" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1572" = type { %"class.std::__1::__compressed_pair.1573" }
%"class.std::__1::__compressed_pair.1573" = type { %"struct.std::__1::__compressed_pair_elem.1574" }
%"struct.std::__1::__compressed_pair_elem.1574" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1578" = type { %"class.WTF::VectorBuffer.1579" }
%"class.WTF::VectorBuffer.1579" = type { %"class.WTF::VectorBufferBase.1580" }
%"class.WTF::VectorBufferBase.1580" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1583 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1590" = type { %"class.WTF::HashSet.1593" }
%"class.WTF::HashSet.1593" = type { %"class.WTF::HashTable.1594" }
%"class.WTF::HashTable.1594" = type <{ %"class.blink::WeakMember.1596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1596" = type opaque
%"class.blink::HeapHashSet.1597" = type { %"class.WTF::HashSet.1600" }
%"class.WTF::HashSet.1600" = type { %"class.WTF::HashTable.1601" }
%"class.WTF::HashTable.1601" = type <{ %"class.blink::WeakMember.1603"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1603" = type opaque
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1607" }
%"class.base::time_internal::TimeBase.1607" = type { i64 }
%"class.std::__1::unique_ptr.1611" = type { %"class.std::__1::__compressed_pair.1612" }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1614", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1614" = type { %"class.absl::optional_internal::optional_data.1615" }
%"class.absl::optional_internal::optional_data.1615" = type { %"class.absl::optional_internal::optional_data_base.1616" }
%"class.absl::optional_internal::optional_data_base.1616" = type { %"class.absl::optional_internal::optional_data_dtor_base.1617" }
%"class.absl::optional_internal::optional_data_dtor_base.1617" = type { i8, %union.anon.1618 }
%union.anon.1618 = type { %"class.base::Time" }
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1294 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1305" = type { %"class.blink::MemberBase.1306" }
%"class.blink::MemberBase.1306" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1309" = type { %"class.blink::Member.1310" }
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1848" }
%"class.mojo::Remote.1848" = type { %"class.mojo::internal::InterfacePtrState.1849" }
%"class.mojo::internal::InterfacePtrState.1849" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1850" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.259, %"class.std::__1::unique_ptr.384", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.261, i32 }>
%class.scoped_refptr.259 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.261, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.350", %"class.absl::optional.355", %"class.absl::optional.311", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.375", i8, [7 x i8], %class.scoped_refptr.261, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.260" }>
%"class.base::RefCountedThreadSafe.260" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.265 }
%union.anon.265 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.261, %"class.std::__1::unique_ptr.288", %"class.absl::optional.297", %"struct.std::__1::atomic.307", i8, i8, i8, i8, i32, i32, %"class.absl::optional.311", %"class.std::__1::unique_ptr.316", i8, i64, %class.scoped_refptr.346, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.349" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.261, i8, %"class.mojo::ScopedHandleBase.291", %class.scoped_refptr.292, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.293" }
%"class.mojo::ScopedHandleBase.291" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.292 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.293" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.297" = type { %"class.absl::optional_internal::optional_data.298" }
%"class.absl::optional_internal::optional_data.298" = type { %"class.absl::optional_internal::optional_data_base.299" }
%"class.absl::optional_internal::optional_data_base.299" = type { %"class.absl::optional_internal::optional_data_dtor_base.300" }
%"class.absl::optional_internal::optional_data_dtor_base.300" = type { i8, %union.anon.301 }
%union.anon.301 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.302", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.302" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.319", i8, i64, %class.scoped_refptr.320, %class.scoped_refptr.342 }
%"class.base::RepeatingCallback.319" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.320 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.321", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.331", i8, [7 x i8] }>
%"class.base::RefCounted.321" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.331" = type { %"class.std::__1::__tree.332" }
%"class.std::__1::__tree.332" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%class.scoped_refptr.342 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.346 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.347 }
%class.scoped_refptr.347 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1658", [4 x i8], %"class.base::RepeatingCallback.387", %class.scoped_refptr.261, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1658" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.348 }
%class.scoped_refptr.348 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.349" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.350" = type { %"class.absl::optional_internal::optional_data.351" }
%"class.absl::optional_internal::optional_data.351" = type { %"class.absl::optional_internal::optional_data_base.352" }
%"class.absl::optional_internal::optional_data_base.352" = type { %"class.absl::optional_internal::optional_data_dtor_base.353" }
%"class.absl::optional_internal::optional_data_dtor_base.353" = type { i8, %union.anon.354 }
%union.anon.354 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.355" = type { %"class.absl::optional_internal::optional_data.356" }
%"class.absl::optional_internal::optional_data.356" = type { %"class.absl::optional_internal::optional_data_base.357" }
%"class.absl::optional_internal::optional_data_base.357" = type { %"class.absl::optional_internal::optional_data_dtor_base.358" }
%"class.absl::optional_internal::optional_data_dtor_base.358" = type { i8, [7 x i8], %union.anon.359 }
%union.anon.359 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.311" = type { %"class.absl::optional_internal::optional_data.312" }
%"class.absl::optional_internal::optional_data.312" = type { %"class.absl::optional_internal::optional_data_base.313" }
%"class.absl::optional_internal::optional_data_base.313" = type { %"class.absl::optional_internal::optional_data_dtor_base.314" }
%"class.absl::optional_internal::optional_data_dtor_base.314" = type { i8, %union.anon.315 }
%union.anon.315 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.360 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.360 = type { %"class.std::__1::map.363" }
%"class.std::__1::map.363" = type { %"class.std::__1::__tree.364" }
%"class.std::__1::__tree.364" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.365", %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.374"*, i64 }
%"class.std::__1::unique_ptr.374" = type opaque
%"class.std::__1::map.375" = type { %"class.std::__1::__tree.376" }
%"class.std::__1::__tree.376" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.387", %"class.base::OnceCallback.388", %"class.absl::optional.122", %"class.absl::optional.389", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.396", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.404", %"class.std::__1::map.415", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.424", i8, %class.scoped_refptr.261, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.425" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.388" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.389" = type { %"class.absl::optional_internal::optional_data.390" }
%"class.absl::optional_internal::optional_data.390" = type { %"class.absl::optional_internal::optional_data_base.391" }
%"class.absl::optional_internal::optional_data_base.391" = type { %"class.absl::optional_internal::optional_data_dtor_base.392" }
%"class.absl::optional_internal::optional_data_dtor_base.392" = type { i8, %union.anon.393 }
%union.anon.393 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.261, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.394" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.394" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.395 }
%class.scoped_refptr.395 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.399", %class.scoped_refptr.400 }
%"class.base::RepeatingCallback.399" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.400 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.260", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.404" = type { %"class.std::__1::__tree.405" }
%"class.std::__1::__tree.405" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.415" = type { %"class.std::__1::__tree.416" }
%"class.std::__1::__tree.416" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::OnceCallback.424" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.425" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.261 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1850" = type { %"class.std::__1::__compressed_pair.1851" }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.1852" }
%"struct.std::__1::__compressed_pair_elem.1852" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1318" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1319" = type { %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1331" }
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1858" }
%"class.mojo::AssociatedRemote.1858" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1859" }
%"class.mojo::internal::AssociatedInterfacePtrState.1859" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1860" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.384", i32 }>
%"class.std::__1::unique_ptr.1860" = type { %"class.std::__1::__compressed_pair.1861" }
%"class.std::__1::__compressed_pair.1861" = type { %"struct.std::__1::__compressed_pair_elem.1862" }
%"struct.std::__1::__compressed_pair_elem.1862" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1333" = type { %"class.blink::Member.1334" }
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1868" }
%"class.mojo::AssociatedRemote.1868" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1869" }
%"class.mojo::internal::AssociatedInterfacePtrState.1869" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1870" }
%"class.std::__1::unique_ptr.1870" = type { %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1872" }
%"struct.std::__1::__compressed_pair_elem.1872" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1336" }
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1878", %"class.blink::Member.709", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1878" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1879" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.384" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1879" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1338" = type { %"class.blink::Member.1339" }
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1882", %"class.blink::Member.709", %"class.mojo::AssociatedReceiver.1883" }
%"class.blink::ThreadState::PrefinalizerRegistration.1882" = type { i8 }
%"class.mojo::AssociatedReceiver.1883" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1884" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1884" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1341" }
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1887", %"class.blink::Member.709", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1887" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.259, %"class.std::__1::unique_ptr.384", %"class.base::WeakPtrFactory.1888" }
%"class.base::WeakPtrFactory.1888" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1343" = type { %"class.blink::Member.1344" }
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1891", %"class.blink::Member.709", %"class.mojo::AssociatedReceiver.1892" }
%"class.blink::ThreadState::PrefinalizerRegistration.1891" = type { i8 }
%"class.mojo::AssociatedReceiver.1892" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1893" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1893" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::HeapHashMap.1354"* }
%"class.blink::HeapHashMap.1354" = type opaque
%"class.mojo::StructPtr.1355" = type { %"class.std::__1::unique_ptr.1356" }
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1359", %"class.mojo::InlinedStructPtr.1360" }
%"class.mojo::InlinedStructPtr.1359" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1360" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1366" = type { %"class.absl::optional_internal::optional_data.1367" }
%"class.absl::optional_internal::optional_data.1367" = type { %"class.absl::optional_internal::optional_data_base.1368" }
%"class.absl::optional_internal::optional_data_base.1368" = type { %"class.absl::optional_internal::optional_data_dtor_base.1369" }
%"class.absl::optional_internal::optional_data_dtor_base.1369" = type { i8, %union.anon.1370 }
%union.anon.1370 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.248", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1218" }
%"class.std::__1::vector.1218" = type { %"class.std::__1::__vector_base.1219" }
%"class.std::__1::__vector_base.1219" = type { %"struct.std::__1::pair.1220"*, %"struct.std::__1::pair.1220"*, %"class.std::__1::__compressed_pair.1221" }
%"struct.std::__1::pair.1220" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"struct.std::__1::pair.1220"* }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1228" = type { %"class.absl::optional_internal::optional_data.1229" }
%"class.absl::optional_internal::optional_data.1229" = type { %"class.absl::optional_internal::optional_data_base.1230" }
%"class.absl::optional_internal::optional_data_base.1230" = type { %"class.absl::optional_internal::optional_data_dtor_base.1231" }
%"class.absl::optional_internal::optional_data_dtor_base.1231" = type { i8, %union.anon.1232 }
%union.anon.1232 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1233" = type { %"class.absl::optional_internal::optional_data.1234" }
%"class.absl::optional_internal::optional_data.1234" = type { %"class.absl::optional_internal::optional_data_base.1235" }
%"class.absl::optional_internal::optional_data_base.1235" = type { %"class.absl::optional_internal::optional_data_dtor_base.1236" }
%"class.absl::optional_internal::optional_data_dtor_base.1236" = type { i8, %union.anon.1237 }
%union.anon.1237 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1238" }
%"class.blink::HeapHashSet.1238" = type { %"class.WTF::HashSet.1241" }
%"class.WTF::HashSet.1241" = type { %"class.WTF::HashTable.1242" }
%"class.WTF::HashTable.1242" = type <{ %"class.blink::WeakMember.1244"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1244" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.256" = type { %"class.WTF::VectorBuffer.257" }
%"class.WTF::VectorBuffer.257" = type { %"class.WTF::VectorBufferBase.258" }
%"class.WTF::VectorBufferBase.258" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.429" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.437", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.501", i32, i8, [3 x i8], %"class.blink::HeapVector.503", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.522", %"class.blink::Member.581", %"class.blink::Member.583", i8 }>
%"class.blink::Supplementable.437" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.438" }
%"class.blink::HeapHashMap.438" = type { %"class.WTF::HashMap.441" }
%"class.WTF::HashMap.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"struct.WTF::KeyValuePair.444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.444" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.445" }
%"class.blink::Supplementable.445" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.446" }
%"class.blink::HeapHashMap.446" = type { %"class.WTF::HashMap.449" }
%"class.WTF::HashMap.449" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"struct.WTF::KeyValuePair.452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.452" = type { i8*, %"class.blink::Member.1815" }
%"class.blink::Member.1815" = type { %"class.blink::MemberBase.1816" }
%"class.blink::MemberBase.1816" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1817" }
%"class.blink::Member.1817" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.453, %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.489", %"class.std::__1::unique_ptr.489", %"class.blink::Member.495", i32, [4 x i8], %"class.WTF::HashSet.497", i32, i32 }
%class.scoped_refptr.453 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.454", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.456", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.461 }
%"class.WTF::RefCounted.454" = type { %"class.base::RefCounted.455" }
%"class.base::RefCounted.455" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.456" = type { %"class.absl::optional_internal::optional_data.457" }
%"class.absl::optional_internal::optional_data.457" = type { %"class.absl::optional_internal::optional_data_base.458" }
%"class.absl::optional_internal::optional_data_base.458" = type { %"class.absl::optional_internal::optional_data_dtor_base.459" }
%"class.absl::optional_internal::optional_data_dtor_base.459" = type { i8, %union.anon.460 }
%union.anon.460 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.461 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.465", %"class.std::__1::map.476", %"class.std::__1::map.485"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.456" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.465" = type { %"class.std::__1::__tree.466" }
%"class.std::__1::__tree.466" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.467", %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.476" = type { %"class.std::__1::__tree.477" }
%"class.std::__1::__tree.477" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.478", %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.485" = type opaque
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.503" = type { %"class.WTF::Vector.506" }
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { %"class.blink::Member.509"*, i32, i32 }
%"class.blink::Member.509" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.515", i32, i32 }
%"class.blink::HeapHashMap.515" = type { %"class.WTF::HashMap.518" }
%"class.WTF::HashMap.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.525" }
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.528" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.mojo::StructPtr.531"*, i32, i32 }
%"class.mojo::StructPtr.531" = type { %"class.std::__1::unique_ptr.532" }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.535", %"class.WTF::HashMap.542", %"class.WTF::HashMap.547", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.552", i32, %"class.mojo::StructPtr.557", %"class.WTF::Vector.552" }
%"class.mojo::StructPtr.535" = type { %"class.std::__1::unique_ptr.536" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"struct.WTF::KeyValuePair.546"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.546" = type opaque
%"class.WTF::HashMap.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"struct.WTF::KeyValuePair.551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.551" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.557" = type { %"class.std::__1::unique_ptr.558" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.552", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.572" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.585" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.586" }
%"class.blink::HeapHashMap.586" = type { %"class.WTF::HashMap.589" }
%"class.WTF::HashMap.589" = type { %"class.WTF::HashTable.590" }
%"class.WTF::HashTable.590" = type <{ %"struct.WTF::KeyValuePair.592"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.592" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.593" = type { i8 }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.616 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.617", [4 x i8], %"class.std::__1::unique_ptr.619", i64, %"class.WTF::Vector.623", %"class.WTF::Vector.628", %"class.WTF::Vector.634", %"class.WTF::Vector.652", %class.scoped_refptr.453, %"class.WTF::HashMap.658", %"class.WTF::Vector.663", %"class.WTF::Vector.623", %"class.WTF::Vector.669", %"class.WTF::HashMap.674", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.617" = type { %"class.base::RefCountedThreadSafe.618" }
%"class.base::RefCountedThreadSafe.618" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { i8* }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630", [8 x i8] }
%"class.WTF::VectorBufferBase.630" = type { %class.scoped_refptr.631*, i32, i32 }
%class.scoped_refptr.631 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.634" = type { %"class.WTF::VectorBuffer.635" }
%"class.WTF::VectorBuffer.635" = type { %"class.WTF::VectorBufferBase.636" }
%"class.WTF::VectorBufferBase.636" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.644" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.637 }
%class.scoped_refptr.637 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.655", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.655" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.658" = type { %"class.WTF::HashTable.659" }
%"class.WTF::HashTable.659" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.WTF::Vector.663" = type { %"class.WTF::VectorBuffer.664" }
%"class.WTF::VectorBuffer.664" = type { %"class.WTF::VectorBufferBase.665" }
%"class.WTF::VectorBufferBase.665" = type { %"class.mojo::ScopedHandleBase.666"*, i32, i32 }
%"class.mojo::ScopedHandleBase.666" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.623" = type { %"class.WTF::VectorBuffer.624" }
%"class.WTF::VectorBuffer.624" = type { %"class.WTF::VectorBufferBase.625", [16 x i8] }
%"class.WTF::VectorBufferBase.625" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.674" = type { %"class.WTF::HashTable.675" }
%"class.WTF::HashTable.675" = type <{ %"struct.WTF::KeyValuePair.678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.678" = type { i8**, %"class.std::__1::unique_ptr.1827" }
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.679" = type { %"class.WTF::HashSet.682" }
%"class.WTF::HashSet.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"class.blink::WeakMember.685"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.685" = type opaque
%"class.blink::HeapHashMap.686" = type { %"class.WTF::HashMap.689" }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.692" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.709", %"class.blink::CachedTextInputInfo", %"class.blink::Member.720", %"class.blink::Member.722", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.711", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.713", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.713" = type { %"class.WTF::HashMap.716" }
%"class.WTF::HashMap.716" = type { %"class.WTF::HashTable.717" }
%"class.WTF::HashTable.717" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.246", %"class.blink::Member.1204", %"class.blink::Member.1206" }
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.246", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1200" }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::HeapHashMap.730"* }
%"class.blink::HeapHashMap.730" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.736" = type { %"class.WTF::HashTable.737" }
%"class.WTF::HashTable.737" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase.743" }
%"class.WTF::VectorBufferBase.743" = type { i64*, i32, i32 }
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.437", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.501", i32, i8, [3 x i8], %"class.blink::HeapVector.503", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.511", %"class.blink::Member.513", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.522", %"class.blink::Member.581", %"class.blink::Member.583", i8, [7 x i8] }>
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.752" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.blink::KURL"* }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.768 }
%class.scoped_refptr.768 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.772 }
%class.scoped_refptr.772 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.720" = type { %"class.blink::MemberBase.721" }
%"class.blink::MemberBase.721" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.75", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.978" }
%"class.blink::HeapHashMap.978" = type { %"class.WTF::HashMap.981" }
%"class.WTF::HashMap.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"struct.WTF::KeyValuePair.984"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.984" = type opaque
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.987" = type { %"class.WTF::HashSet.990" }
%"class.WTF::HashSet.990" = type { %"class.WTF::HashTable.991" }
%"class.WTF::HashTable.991" = type <{ %"class.blink::WeakMember.993"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.993" = type opaque
%"class.blink::HeapHashSet.994" = type { %"class.WTF::HashSet.997" }
%"class.WTF::HashSet.997" = type { %"class.WTF::HashTable.998" }
%"class.WTF::HashTable.998" = type <{ %"class.blink::WeakMember.1000"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1000" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.189" }
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1011" = type { %"class.WTF::HashMap.1014" }
%"class.WTF::HashMap.1014" = type { %"class.WTF::HashTable.1015" }
%"class.WTF::HashTable.1015" = type <{ %"struct.WTF::KeyValuePair.1017"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1017" = type opaque
%"class.WTF::Vector.1018" = type { %"class.WTF::VectorBuffer.1019" }
%"class.WTF::VectorBuffer.1019" = type { %"class.WTF::VectorBufferBase.1020" }
%"class.WTF::VectorBufferBase.1020" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1029" = type { %"class.WTF::Vector.1032" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.blink::Member.1035"*, i32, i32 }
%"class.blink::Member.1035" = type opaque
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1043" = type { %"class.WTF::HashSet.1046" }
%"class.WTF::HashSet.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"class.blink::WeakMember.1049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1049" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1050", i32, [4 x i8] }>
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052" }
%"class.WTF::VectorBufferBase.1052" = type { %"struct.std::__1::pair.1053"*, i32, i32 }
%"struct.std::__1::pair.1053" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1058" = type { %"class.WTF::VectorBuffer.1059" }
%"class.WTF::VectorBuffer.1059" = type { %"class.WTF::VectorBufferBase.1060" }
%"class.WTF::VectorBufferBase.1060" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1069" = type { %"class.WTF::Vector.1072" }
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"class.blink::Member.1075"*, i32, i32 }
%"class.blink::Member.1075" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.75" }
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1087" = type { %"class.WTF::HashTable.1088" }
%"class.WTF::HashTable.1088" = type <{ %"struct.WTF::KeyValuePair.1091"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1091" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type { %"class.blink::AnimationTimeline", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, double, %"class.blink::Member.1096" }
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::DocumentTimeline::PlatformTiming"* }
%"class.blink::DocumentTimeline::PlatformTiming" = type { i32 (...)** }
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.977", { i64, i64 } }
%"class.blink::WeakMember.977" = type { %"class.blink::MemberBase.76" }
%"class.blink::HeapHashSet.1104" = type { %"class.WTF::HashSet.1107" }
%"class.WTF::HashSet.1107" = type { %"class.WTF::HashTable.1108" }
%"class.WTF::HashTable.1108" = type <{ %"class.blink::Member.1110"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1110" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.731" = type { %"class.WTF::VectorBuffer.732" }
%"class.WTF::VectorBuffer.732" = type { %"class.WTF::VectorBufferBase.733" }
%"class.WTF::VectorBufferBase.733" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1141" = type { %"class.WTF::HashMap.1144" }
%"class.WTF::HashMap.1144" = type { %"class.WTF::HashTable.1145" }
%"class.WTF::HashTable.1145" = type <{ %"struct.WTF::KeyValuePair.1147"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1147" = type opaque
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1160" = type { %"class.WTF::HashMap.1163" }
%"class.WTF::HashMap.1163" = type { %"class.WTF::HashTable.1164" }
%"class.WTF::HashTable.1164" = type <{ %"struct.WTF::KeyValuePair.1166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1166" = type opaque
%"class.blink::HeapObserverSet.1167" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1168" }
%"class.blink::HeapHashSet.1168" = type { %"class.WTF::HashSet.1171" }
%"class.WTF::HashSet.1171" = type { %"class.WTF::HashTable.1172" }
%"class.WTF::HashTable.1172" = type <{ %"class.blink::WeakMember.1174"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1174" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.75", %"class.blink::HeapHashSet.1184", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1191", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1184" = type { %"class.WTF::HashSet.1187" }
%"class.WTF::HashSet.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"class.blink::Member.1190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1190" = type opaque
%"class.blink::HeapTaskRunnerTimer.1191" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1192", { i64, i64 } }
%"class.blink::WeakMember.1192" = type { %"class.blink::MemberBase.1178" }
%"class.blink::WeakMember.1179" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1005", %"class.blink::Member.1659", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::HTMLStyleElement" = type <{ %"class.blink::HTMLElement", %"class.blink::StyleElement.base", [3 x i8] }>
%"class.blink::StyleElement.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.195", i8, [3 x i8], %"class.WTF::TextPosition", %"class.blink::StyleEngineContext" }>
%"class.blink::StyleEngineContext" = type { i8 }
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.1661", %"class.blink::HeapVector.1661", i8, %"class.blink::HeapLinkedHashSet.1668" }
%"class.blink::HeapVector.1661" = type { %"class.WTF::Vector.1664" }
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapLinkedHashSet.1668" = type { %"class.WTF::LinkedHashSet.1671" }
%"class.WTF::LinkedHashSet.1671" = type { %"class.WTF::HashMap.1672", %"class.WTF::VectorBackedLinkedList.1676" }
%"class.WTF::HashMap.1672" = type { %"class.WTF::HashTable.1673" }
%"class.WTF::HashTable.1673" = type <{ %"struct.WTF::KeyValuePair.1675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1675" = type opaque
%"class.WTF::VectorBackedLinkedList.1676" = type { %"class.WTF::Vector.1677", i32, i32 }
%"class.WTF::Vector.1677" = type { %"class.WTF::VectorBuffer.1678" }
%"class.WTF::VectorBuffer.1678" = type { %"class.WTF::VectorBufferBase.1679" }
%"class.WTF::VectorBufferBase.1679" = type { %"class.WTF::VectorBackedLinkedListNode.1680"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1680" = type opaque
%"class.blink::FrameCallback" = type { %"class.blink::NameClient", i32, i8, i8, %"class.blink::probe::AsyncTaskId" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1682" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1682" = type { %"class.v8::TracedReference.1683" }
%"class.v8::TracedReference.1683" = type { %"class.v8::BasicTracedReference.1684" }
%"class.v8::BasicTracedReference.1684" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.1894" }
%"class.WTF::Vector.1894" = type { %"class.WTF::VectorBuffer.1895" }
%"class.WTF::VectorBuffer.1895" = type { %"class.WTF::VectorBufferBase.1896", [64 x i8] }
%"class.WTF::VectorBufferBase.1896" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1685", i8* }
%"class.WTF::StringAppend.1685" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.1925" = type <{ i8*, i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.1690", %"class.blink::HeapVector.1695", i8, [7 x i8] }>
%"class.blink::Member.1690" = type { %"class.blink::MemberBase.1691" }
%"class.blink::MemberBase.1691" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.1693" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1692" }
%"class.blink::WeakMember.1692" = type { %"class.blink::MemberBase.496" }
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.1695" = type { %"class.WTF::Vector.1698" }
%"class.WTF::Vector.1698" = type { %"class.WTF::VectorBuffer.1699" }
%"class.WTF::VectorBuffer.1699" = type { %"class.WTF::VectorBufferBase.1700", [96 x i8] }
%"class.WTF::VectorBufferBase.1700" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1701" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::KeyframeEffectModel" = type { %"class.blink::KeyframeEffectModelBase.base", [5 x i8] }
%"class.blink::KeyframeEffectModelBase.base" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1709", %"class.blink::Member.1717", %"class.blink::Member.1742", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.60, i8, i8, i8 }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.1709" = type { %"class.WTF::Vector.1712" }
%"class.WTF::Vector.1712" = type { %"class.WTF::VectorBuffer.1713" }
%"class.WTF::VectorBuffer.1713" = type { %"class.WTF::VectorBufferBase.1714" }
%"class.WTF::VectorBufferBase.1714" = type { %"class.blink::Member.1715"*, i32, i32 }
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1826" }
%"class.blink::MemberBase.1826" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional", %"class.absl::optional.1764", %class.scoped_refptr.60 }
%"class.absl::optional.1764" = type { %"class.absl::optional_internal::optional_data.1765" }
%"class.absl::optional_internal::optional_data.1765" = type { %"class.absl::optional_internal::optional_data_base.1766" }
%"class.absl::optional_internal::optional_data_base.1766" = type { %"class.absl::optional_internal::optional_data_dtor_base.1767" }
%"class.absl::optional_internal::optional_data_dtor_base.1767" = type { i8, %union.anon.1768 }
%union.anon.1768 = type { i32 }
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::HeapHashMap.1719"* }
%"class.blink::HeapHashMap.1719" = type { %"class.WTF::HashMap.1722" }
%"class.WTF::HashMap.1722" = type { %"class.WTF::HashTable.1723" }
%"class.WTF::HashTable.1723" = type <{ %"struct.WTF::KeyValuePair.1725"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1725" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1727" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.1726, %"class.WTF::AtomicString" }
%union.anon.1726 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1731" }
%"class.blink::HeapVector.1731" = type { %"class.WTF::Vector.1734" }
%"class.WTF::Vector.1734" = type { %"class.WTF::VectorBuffer.1735" }
%"class.WTF::VectorBuffer.1735" = type { %"class.WTF::VectorBufferBase.1736" }
%"class.WTF::VectorBufferBase.1736" = type { %"class.blink::Member.1737"*, i32, i32 }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.60, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1746" }
%"class.blink::HeapVector.1746" = type { %"class.WTF::Vector.1749" }
%"class.WTF::Vector.1749" = type { %"class.WTF::VectorBuffer.1750" }
%"class.WTF::VectorBuffer.1750" = type { %"class.WTF::VectorBufferBase.1751" }
%"class.WTF::VectorBufferBase.1751" = type { %"class.blink::Member.1752"*, i32, i32 }
%"class.blink::Member.1752" = type { %"class.blink::MemberBase.1819" }
%"class.blink::MemberBase.1819" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1822", %class.scoped_refptr.60, double, double, double, double }
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"struct.blink::HTMLMarqueeElement::AnimationParameters" = type { %"class.WTF::String", %"class.WTF::String", double }
%"class.blink::HeapVector.1754" = type { %"class.WTF::Vector.1757" }
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"class.blink::Member.1760"*, i32, i32 }
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::StringKeyframe"* }
%"class.blink::StringKeyframe" = type <{ %"class.blink::Keyframe", %"class.blink::HeapHashMap.1769", %"class.blink::Member.1693", %"class.blink::Member.1693", %"class.WTF::HashMap.1776", i8, i8, i8, [5 x i8] }>
%"class.blink::HeapHashMap.1769" = type { %"class.WTF::HashMap.1772" }
%"class.WTF::HashMap.1772" = type { %"class.WTF::HashTable.1773" }
%"class.WTF::HashTable.1773" = type <{ %"struct.WTF::KeyValuePair.1775"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1775" = type opaque
%"class.WTF::HashMap.1776" = type { %"class.WTF::HashTable.1777" }
%"class.WTF::HashTable.1777" = type <{ %"struct.WTF::KeyValuePair.1780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1780" = type { %"class.blink::QualifiedName"*, %"class.WTF::String" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::UnrestrictedDoubleOrString" = type { i32, %"class.WTF::String", double }
%"class.blink::OptionalEffectTiming" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::String", %"class.blink::UnrestrictedDoubleOrString", %"class.WTF::String", double, %"class.WTF::String", double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::KeyframeEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.21", %"class.blink::Member.21", %"class.WTF::String", %"class.blink::Member.1784", %"class.blink::Member.1786", i32, %"class.WTF::Vector.1788", i8, %"class.absl::optional.1792" }
%"class.blink::Member.1784" = type { %"class.blink::MemberBase.1785" }
%"class.blink::MemberBase.1785" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1709", %"class.blink::Member.1717", %"class.blink::Member.1742", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.60, i8, i8, i8, [5 x i8] }>
%"class.blink::Member.1786" = type { %"class.blink::MemberBase.1787" }
%"class.blink::MemberBase.1787" = type { %"class.blink::SampledEffect"* }
%"class.blink::SampledEffect" = type opaque
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1541" }
%"class.absl::optional.1792" = type { %"class.absl::optional_internal::optional_data.1793" }
%"class.absl::optional_internal::optional_data.1793" = type { %"class.absl::optional_internal::optional_data_base.1794" }
%"class.absl::optional_internal::optional_data_base.1794" = type { %"class.absl::optional_internal::optional_data_dtor_base.1795" }
%"class.absl::optional_internal::optional_data_dtor_base.1795" = type { i8, %union.anon.1796 }
%union.anon.1796 = type { %"class.blink::FloatSize" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"struct.blink::HTMLMarqueeElement::Metrics" = type { double, double, double, double }
%"class.WTF::StringAppend.1799" = type { %"class.WTF::StringAppend.1800", i8* }
%"class.WTF::StringAppend.1800" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1805, %"class.blink::Member.1806", %"class.blink::SelfKeepAlive", %"class.util::TokenType.1810" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1805 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1808" }
%"class.blink::Persistent.1808" = type { %"class.blink::PersistentBase.1809" }
%"class.blink::PersistentBase.1809" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.1810" = type { %"class.base::StrongAlias.1811" }
%"class.base::StrongAlias.1811" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1812", i8, [7 x i8] }>
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.1661", %"class.WTF::String"* }
%"class.WTF::HashMap.1814" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::FormAssociated" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.1926" = type { %"class.WTF::StringTypeAdapter.1927" }
%"class.WTF::StringTypeAdapter.1927" = type { %"class.WTF::StringView" }
%"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback" = type { %"class.blink::FrameCallback", %"class.blink::Member.1688" }
%"class.blink::Member.1688" = type { %"class.blink::MemberBase.1689" }
%"class.blink::MemberBase.1689" = type { %"class.blink::HTMLMarqueeElement"* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVector.1943" = type opaque
%"class.blink::HeapVectorBacking.1948" = type { i8 }
%"class.blink::HTMLMarqueeElement::AnimationFinished" = type { %"class.blink::NativeEventListener", %"class.blink::Member.1688" }
%"class.blink::NativeEventListener" = type { %"class.blink::EventListener" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN5blink20LinearTimingFunction6SharedEv = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZN5blink7ElementD2Ev = comdat any

$_ZN5blink18HTMLMarqueeElementD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink18HTMLMarqueeElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLStyleElementEE4CallIJRNS_8DocumentENS_18CreateElementFlagsEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13FrameCallbackEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13FrameCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13FrameCallbackEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13FrameCallbackEE7GetNameEPKv = comdat any

$_ZNK5blink13FrameCallback18NameInHeapSnapshotEv = comdat any

$_ZNK5blink18HTMLMarqueeElement29RequestAnimationFrameCallback5TraceEPNS_7VisitorE = comdat any

$_ZN5blink13FrameCallbackD2Ev = comdat any

$_ZN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackD0Ev = comdat any

$_ZN5blink18HTMLMarqueeElement29RequestAnimationFrameCallback6InvokeEd = comdat any

$_ZN5blink10TraceTraitINS_18HTMLMarqueeElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink14StringKeyframeC2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEENS_11EffectModel18CompositeOperationEPNS_20LinearTimingFunctionEEEEPS3_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv = comdat any

$_ZN5blink23KeyframeEffectModelBaseD2Ev = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev = comdat any

$_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE = comdat any

$_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv = comdat any

$_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv = comdat any

$_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv = comdat any

$_ZNK5blink13EventListener18NameInHeapSnapshotEv = comdat any

$_ZN5blink18HTMLMarqueeElement17AnimationFinishedD0Ev = comdat any

$_ZN5blink18HTMLMarqueeElement17AnimationFinished6InvokeEPNS_16ExecutionContextEPNS_5EventE = comdat any

$_ZNK5blink13EventListener14IsEventHandlerEv = comdat any

$_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv = comdat any

$_ZNK5blink13EventListener10ScriptBodyEv = comdat any

$_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE = comdat any

$_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE = comdat any

$_ZNK5blink18HTMLMarqueeElement17AnimationFinished5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink13EventListener22IsJSBasedEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener21IsNativeEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener20IsImageEventListenerEv = comdat any

$_ZN5blink13EventListenerD2Ev = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringES1_EEPKcEC2ES2_S4_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13FrameCallbackEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13FrameCallbackEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackE = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18HTMLMarqueeElement17AnimationFinishedE = comdat any

@_ZN5blink10html_names11kMarqueeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink18HTMLMarqueeElementE = hidden unnamed_addr constant { [172 x i8*], [3 x i8*] } { [172 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7ElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement"*)* @_ZN5blink18HTMLMarqueeElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement"*, %"class.blink::Visitor"*)* @_ZNK5blink18HTMLMarqueeElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLMarqueeElement"*)* @_ZNK5blink18HTMLMarqueeElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLMarqueeElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink18HTMLMarqueeElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink18HTMLMarqueeElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.1814"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLMarqueeElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink18HTMLMarqueeElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink18HTMLMarqueeElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement"*, %"class.blink::ShadowRoot"*)* @_ZN5blink18HTMLMarqueeElement25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)] }, align 8
@.str = private unnamed_addr constant [246 x i8] c":host { display: inline-block; overflow: hidden;text-align: initial; white-space: nowrap; }:host([direction=\22up\22]), :host([direction=\22down\22]) { overflow: initial; overflow-y: hidden; white-space: initial; }:host > div { will-change: transform; }\00", align 1
@_ZN5blink10html_names17kScrollamountAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kScrolldelayAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kLoopAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"The provided value (\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c") is neither positive nor -1.\00", align 1
@_ZN5blink10html_names12kBgcolorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHspaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kVspaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"paused\00", align 1
@_ZN5blink10html_names14kTruespeedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__const._ZN5blink18HTMLMarqueeElement17ContinueAnimationEv.timing = private unnamed_addr constant <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon.48 } } } }, i32, [4 x i8], %class.scoped_refptr.60, i16, [6 x i8] }> <{ %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, { { { { i8, [7 x i8], %union.anon.48 } } } } { { { { i8, [7 x i8], %union.anon.48 } } } { { { i8, [7 x i8], %union.anon.48 } } { { i8, [7 x i8], %union.anon.48 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.48 { %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.60 { %"class.blink::TimingFunction"* inttoptr (i64 -6148914691236517206 to %"class.blink::TimingFunction"*) }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"forwards\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink10html_names13kBehaviorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"alternate\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"slide\00", align 1
@_ZN5blink10html_names14kDirectionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.7 = private unnamed_addr constant [5 x i8] c"down\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"-webkit-max-content\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"important\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"translateY(0)\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"translateX(0)\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"translate%c(\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"px)\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden local_unnamed_addr global %"class.blink::LinearTimingFunction"* null, comdat, align 8
@_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden global i64 0, comdat, align 8
@.str.19 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink20LinearTimingFunctionE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.23 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink16event_type_names7kFinishE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@_ZN5blink18HTMLMarqueeElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.26 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13FrameCallbackEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FrameCallback]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13FrameCallbackEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13FrameCallbackEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13FrameCallbackEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13FrameCallbackEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13FrameCallbackEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::FrameCallback"*)* @_ZNK5blink13FrameCallback18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"*, %"class.blink::Visitor"*)* @_ZNK5blink18HTMLMarqueeElement29RequestAnimationFrameCallback5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::FrameCallback"*)* @_ZN5blink13FrameCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"*)* @_ZN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"*, double)* @_ZN5blink18HTMLMarqueeElement29RequestAnimationFrameCallback6InvokeEd to i8*)] }, comdat, align 8
@.str.28 = private unnamed_addr constant [14 x i8] c"FrameCallback\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Keyframe]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14StringKeyframeE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink8KeyframeE = external unnamed_addr constant { [11 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyValueSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.30 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.32 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.34 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StringKeyframe>, WTF::VectorTraits<blink::Member<blink::StringKeyframe> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EffectModel]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.1943"*)* @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapVector.1709"*, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*)* @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv to i8*), i8* bitcast (%"class.blink::KeyframeEffectModelBase"* (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv to i8*)] }, comdat, align 8
@_ZTVN5blink23KeyframeEffectModelBaseE = external unnamed_addr constant { [14 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InterpolationEffect]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.35 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Keyframe>, WTF::VectorTraits<blink::Member<blink::Keyframe> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventListener]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink18HTMLMarqueeElement17AnimationFinishedE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventListener"*)* @_ZN5blink13EventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement::AnimationFinished"*)* @_ZN5blink18HTMLMarqueeElement17AnimationFinishedD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement::AnimationFinished"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink18HTMLMarqueeElement17AnimationFinished6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*, %"class.blink::EventListener"*)* @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::HTMLMarqueeElement::AnimationFinished"*, %"class.blink::Visitor"*)* @_ZNK5blink18HTMLMarqueeElement17AnimationFinished5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener20IsImageEventListenerEv to i8*)] }, comdat, align 8
@.str.36 = private unnamed_addr constant [14 x i8] c"EventListener\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink18HTMLMarqueeElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLMarqueeElement"*, %"class.blink::Document"*), void (%"class.blink::HTMLMarqueeElement"*, %"class.blink::Document"*)* @_ZN5blink18HTMLMarqueeElementC2ERNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElementC2ERNS_8DocumentE(%"class.blink::HTMLMarqueeElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* %1, i32 1026) #10
  %5 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink18HTMLMarqueeElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*] }, { [172 x i8*], [3 x i8*] }* @_ZTVN5blink18HTMLMarqueeElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %9 = bitcast %"class.blink::UseCounter"* %8 to void (%"class.blink::UseCounter"*, i32)***
  %10 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  %11 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %9, align 8
  %12 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %11, i64 3
  %13 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %12, align 8
  tail call void %13(%"class.blink::UseCounter"* %8, i32 53) #10
  %14 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %4) #10
  ret void
}

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::HTMLMarqueeElement"* nocapture, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CreateElementFlags", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %3, i64 0, i32 3
  store i8 2, i8* %10, align 8
  %11 = call %"class.blink::HTMLStyleElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLStyleElementEE4CallIJRNS_8DocumentENS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %8, %"class.blink::CreateElementFlags"* nonnull dereferenceable(24) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  %12 = getelementptr inbounds %"class.blink::HTMLStyleElement", %"class.blink::HTMLStyleElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([246 x i8], [246 x i8]* @.str, i64 0, i64 0), i64 245) #10
  call void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %30

30:                                               ; preds = %2, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %31 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1, i64 0, i32 0, i32 0
  %32 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %31, %"class.blink::Node"* %12) #10
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = call %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %35) #10
  %37 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %31, %"class.blink::Node"* %37) #10
  %39 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %36, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = call %"class.blink::HTMLSlotElement"* @_ZN5blink15HTMLSlotElement26CreateUserAgentDefaultSlotERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %42) #10
  %44 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %39, %"class.blink::Node"* %44) #10
  %46 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 3
  %47 = ptrtoint %"class.blink::HTMLDivElement"* %36 to i64
  %48 = bitcast %"class.blink::Member.21"* %46 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %30
  %52 = bitcast %"class.blink::HTMLDivElement"* %36 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #10
  br label %54

54:                                               ; preds = %30, %51
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::HTMLSlotElement"* @_ZN5blink15HTMLSlotElement26CreateUserAgentDefaultSlotERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18HTMLMarqueeElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLMarqueeElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  %5 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %9
  %14 = ptrtoint %"class.blink::HTMLMarqueeElement"* %0 to i64
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13FrameCallbackEEEPhm(i64 48) #10
  %16 = bitcast i8* %15 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 12
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds i8, i8* %15, i64 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds i8, i8* %15, i64 16
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 24
  store i8 0, i8* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %23 = getelementptr inbounds i8, i8* %15, i64 40
  %24 = bitcast i8* %23 to i64*
  store i64 %14, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %15, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = bitcast i8* %15 to %"class.blink::FrameCallback"*
  %34 = tail call i32 @_ZN5blink8Document21RequestAnimationFrameEPNS_13FrameCallbackE(%"class.blink::Document"* %32, %"class.blink::FrameCallback"* %33) #10
  store i32 %34, i32* %10, align 8
  br label %35

35:                                               ; preds = %2, %13, %9
  ret i32 0
}

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement5startEv(%"class.blink::HTMLMarqueeElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = ptrtoint %"class.blink::HTMLMarqueeElement"* %0 to i64
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13FrameCallbackEEEPhm(i64 48) #10
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds i8, i8* %7, i64 13
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 0, i8* %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = bitcast i8* %7 to %"class.blink::FrameCallback"*
  %26 = tail call i32 @_ZN5blink8Document21RequestAnimationFrameEPNS_13FrameCallbackE(%"class.blink::Document"* %24, %"class.blink::FrameCallback"* %25) #10
  store i32 %26, i32* %2, align 8
  br label %27

27:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLMarqueeElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %1) #10
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %36, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  tail call void @_ZN5blink8Document20CancelAnimationFrameEi(%"class.blink::Document"* %17, i32 %11) #10
  store i32 0, i32* %10, align 8
  br label %36

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::Animation"*, %"class.blink::Animation"** %19, align 8
  %21 = icmp eq %"class.blink::Animation"* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %25, align 8
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %26, align 2
  %27 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %28 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %29 = bitcast %"class.WTF::StringImpl"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #10
  %30 = bitcast i8** %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %32 = bitcast %"class.blink::Animation"* %20 to void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)***
  %33 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %33, i64 37
  %35 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %34, align 8
  call void %35(%"class.blink::Animation"* nonnull %20, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %31) #10
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #10
  br label %36

36:                                               ; preds = %2, %22, %18, %13
  ret void
}

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement4stopEv(%"class.blink::HTMLMarqueeElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  tail call void @_ZN5blink8Document20CancelAnimationFrameEi(%"class.blink::Document"* %10, i32 %4) #10
  store i32 0, i32* %3, align 8
  br label %29

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.blink::Animation"*, %"class.blink::Animation"** %12, align 8
  %14 = icmp eq %"class.blink::Animation"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %18, align 8
  %19 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %19, align 2
  %20 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %21 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  %23 = bitcast i8** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %24 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  %25 = bitcast %"class.blink::Animation"* %13 to void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)***
  %26 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %26, i64 37
  %28 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %27, align 8
  call void %28(%"class.blink::Animation"* nonnull %13, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %24) #10
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #10
  br label %29

29:                                               ; preds = %11, %6, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLMarqueeElement12IsHorizontalEv(%"class.blink::HTMLMarqueeElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* %0)
  %3 = or i32 %2, 1
  %4 = icmp ne i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kDirectionAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %68, i64* %69, align 8
  br label %77

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  br i1 %80, label %157, label %81

81:                                               ; preds = %77
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %138, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 1
  %88 = bitcast %"class.WTF::StringImpl"* %87 to i8*
  %89 = icmp eq i32 %86, 2
  br i1 %89, label %90, label %143

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %104, label %95

95:                                               ; preds = %90
  %96 = load i8, i8* %88, align 1
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 117), align 1
  %102 = sext i8 %101 to i32
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %128, label %143

104:                                              ; preds = %90
  %105 = bitcast %"class.WTF::StringImpl"* %87 to i16*
  %106 = load i16, i16* %105, align 2
  %107 = add i16 %106, -65
  %108 = icmp ult i16 %107, 26
  %109 = zext i1 %108 to i16
  %110 = shl nuw nsw i16 %109, 5
  %111 = or i16 %110, %106
  %112 = zext i16 %111 to i32
  %113 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 117), align 1
  %114 = sext i8 %113 to i32
  %115 = icmp eq i32 %112, %114
  br i1 %115, label %116, label %143

116:                                              ; preds = %104
  %117 = getelementptr inbounds i16, i16* %105, i64 1
  %118 = load i16, i16* %117, align 2
  %119 = add i16 %118, -65
  %120 = icmp ult i16 %119, 26
  %121 = zext i1 %120 to i16
  %122 = shl nuw nsw i16 %121, 5
  %123 = or i16 %122, %118
  %124 = zext i16 %123 to i32
  %125 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 112), align 16
  %126 = sext i8 %125 to i32
  %127 = icmp eq i32 %124, %126
  br i1 %127, label %157, label %143

128:                                              ; preds = %95
  %129 = getelementptr inbounds i8, i8* %88, i64 1
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i64
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 112), align 16
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %157, label %143

138:                                              ; preds = %81
  %139 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #10
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %140, align 8
  %141 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %142 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %141, i64* %142, align 8
  br label %151

143:                                              ; preds = %95, %104, %84, %116, %128
  %144 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #10
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 1
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %150 = bitcast i8** %149 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %150, align 8
  br label %151

151:                                              ; preds = %138, %143
  %152 = phi i8* [ %144, %143 ], [ %139, %138 ]
  %153 = phi i32 [ %147, %143 ], [ 0, %138 ]
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %153, i32* %154, align 8
  %155 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [6 x i8]* nonnull dereferenceable(6) @.str.9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #10
  %156 = zext i1 %155 to i32
  br label %157

157:                                              ; preds = %116, %151, %128, %77
  %158 = phi i32 [ 3, %77 ], [ 2, %128 ], [ %156, %151 ], [ 2, %116 ]
  ret i32 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18HTMLMarqueeElement12scrollAmountEv(%"class.blink::HTMLMarqueeElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #10
  store i32 0, i32* %2, align 4
  %5 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %6, align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kScrollamountAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.14"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %63

61:                                               ; preds = %54, %57, %28, %1
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %63

63:                                               ; preds = %59, %61
  %64 = phi %"class.WTF::AtomicString"* [ %62, %61 ], [ %60, %59 ]
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %6, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %117, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %87

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #10
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  tail call void @llvm.trap() #10
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %68, %83
  %88 = phi %"class.WTF::StringImpl"* [ %85, %83 ], [ %66, %68 ]
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %94 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* nonnull dereferenceable(8) %93, i32* nonnull dereferenceable(4) %2) #10
  %95 = xor i1 %94, true
  %96 = load i32, i32* %2, align 4
  %97 = icmp slt i32 %96, 0
  %98 = or i1 %97, %95
  %99 = select i1 %98, i32 6, i32 %96
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %87, %92
  %103 = phi i32 [ %99, %92 ], [ 6, %87 ]
  %104 = phi %"class.WTF::StringImpl"* [ %100, %92 ], [ %88, %87 ]
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %102
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %102
  %114 = phi i32 [ %112, %111 ], [ %110, %102 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %117

117:                                              ; preds = %83, %63, %92, %113, %116
  %118 = phi i32 [ %99, %92 ], [ %103, %113 ], [ %103, %116 ], [ 6, %63 ], [ 6, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #10
  ret i32 %118
}

declare zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement15setScrollAmountEj(%"class.blink::HTMLMarqueeElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kScrollamountAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %1, i32 6) #10
  ret void
}

declare void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18HTMLMarqueeElement11scrollDelayEv(%"class.blink::HTMLMarqueeElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #10
  store i32 0, i32* %2, align 4
  %5 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %6, align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kScrolldelayAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.14"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %63

61:                                               ; preds = %54, %57, %28, %1
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %63

63:                                               ; preds = %59, %61
  %64 = phi %"class.WTF::AtomicString"* [ %62, %61 ], [ %60, %59 ]
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %6, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %117, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %87

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #10
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  tail call void @llvm.trap() #10
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %68, %83
  %88 = phi %"class.WTF::StringImpl"* [ %85, %83 ], [ %66, %68 ]
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %94 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* nonnull dereferenceable(8) %93, i32* nonnull dereferenceable(4) %2) #10
  %95 = xor i1 %94, true
  %96 = load i32, i32* %2, align 4
  %97 = icmp slt i32 %96, 0
  %98 = or i1 %97, %95
  %99 = select i1 %98, i32 85, i32 %96
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %87, %92
  %103 = phi i32 [ %99, %92 ], [ 85, %87 ]
  %104 = phi %"class.WTF::StringImpl"* [ %100, %92 ], [ %88, %87 ]
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %102
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %102
  %114 = phi i32 [ %112, %111 ], [ %110, %102 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %117

117:                                              ; preds = %83, %63, %92, %113, %116
  %118 = phi i32 [ %99, %92 ], [ %103, %113 ], [ %103, %116 ], [ 85, %63 ], [ 85, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #10
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement14setScrollDelayEj(%"class.blink::HTMLMarqueeElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kScrolldelayAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %1, i32 85) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18HTMLMarqueeElement4loopEv(%"class.blink::HTMLMarqueeElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  store i8 -86, i8* %2, align 1
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kLoopAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %1
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0
  %62 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %61, i8* nonnull %2) #10
  %63 = load i8, i8* %2, align 1, !range !3
  %64 = icmp eq i8 %63, 0
  %65 = icmp slt i32 %62, 1
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -1, i32 %62
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement7setLoopEiRNS_14ExceptionStateE(%"class.blink::HTMLMarqueeElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = icmp slt i32 %1, 1
  %8 = icmp ne i32 %1, -1
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %217

10:                                               ; preds = %3
  %11 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %17 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 13
  %18 = icmp slt i32 %1, 0
  %19 = sub i32 0, %1
  %20 = select i1 %18, i32 %19, i32 %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #10
  store i8* %14, i8** %15, align 8
  %21 = urem i32 %20, 10
  %22 = udiv i32 %20, 10
  %23 = trunc i32 %21 to i8
  %24 = or i8 %23, 48
  store i8 %24, i8* %14, align 4
  %25 = icmp ugt i32 %20, 9
  br i1 %25, label %26, label %48

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  store i8* %27, i8** %15, align 8
  %28 = urem i32 %22, 10
  %29 = trunc i32 %28 to i8
  %30 = or i8 %29, 48
  store i8 %30, i8* %27, align 1
  %31 = icmp ugt i32 %20, 99
  br i1 %31, label %32, label %48

32:                                               ; preds = %26
  %33 = udiv i32 %20, 100
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %34, i8** %15, align 8
  %35 = urem i32 %33, 10
  %36 = trunc i32 %35 to i8
  %37 = or i8 %36, 48
  store i8 %37, i8* %34, align 2
  %38 = icmp ugt i32 %20, 999
  br i1 %38, label %39, label %48

39:                                               ; preds = %32, %39
  %40 = phi i32 [ %42, %39 ], [ %33, %32 ]
  %41 = load i8*, i8** %15, align 8
  %42 = udiv i32 %40, 10
  %43 = getelementptr inbounds i8, i8* %41, i64 -1
  store i8* %43, i8** %15, align 8
  %44 = urem i32 %42, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 1
  %47 = icmp ugt i32 %40, 99
  br i1 %47, label %39, label %48

48:                                               ; preds = %39, %32, %26, %10
  br i1 %18, label %49, label %52

49:                                               ; preds = %48
  %50 = load i8*, i8** %15, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 -1
  store i8* %51, i8** %15, align 8
  store i8 45, i8* %51, align 1
  br label %52

52:                                               ; preds = %48, %49
  %53 = bitcast i8** %15 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = ptrtoint i8* %17 to i64
  %56 = sub i64 %55, %54
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %16, align 8
  %58 = inttoptr i64 %54 to i8*
  %59 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %58, i32 %57) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #10
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %136, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %78

68:                                               ; preds = %61
  %69 = zext i32 %67 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #10
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %68
  call void @llvm.trap() #10
  unreachable

76:                                               ; preds = %68
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %66, align 4
  br label %78

78:                                               ; preds = %76, %61
  %79 = phi i32 [ %77, %76 ], [ %67, %61 ]
  %80 = load atomic i32, i32* %62 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %93

83:                                               ; preds = %78
  %84 = zext i32 %79 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #10
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !2

90:                                               ; preds = %83
  call void @llvm.trap() #10
  unreachable

91:                                               ; preds = %83
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %66, align 4
  br label %93

93:                                               ; preds = %91, %78
  %94 = phi i32 [ %92, %91 ], [ %79, %78 ]
  %95 = load atomic i32, i32* %62 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = add i32 %94, -1
  store i32 %99, i32* %66, align 4
  br label %100

100:                                              ; preds = %98, %93
  %101 = phi i32 [ %99, %98 ], [ %94, %93 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #10
  br label %104

104:                                              ; preds = %100, %103
  %105 = load atomic i32, i32* %62 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %119

108:                                              ; preds = %104
  %109 = load i32, i32* %66, align 4
  %110 = zext i32 %109 to i33
  %111 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #10
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !2

116:                                              ; preds = %108
  call void @llvm.trap() #10
  unreachable

117:                                              ; preds = %108
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %66, align 4
  br label %119

119:                                              ; preds = %104, %117
  %120 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %121, align 8
  %122 = load atomic i32, i32* %62 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %140

125:                                              ; preds = %119
  %126 = load i32, i32* %66, align 4
  %127 = zext i32 %126 to i33
  %128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #10
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !2

133:                                              ; preds = %125
  call void @llvm.trap() #10
  unreachable

134:                                              ; preds = %125
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %66, align 4
  br label %140

136:                                              ; preds = %52
  %137 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.1 to i64), i64* %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %138, align 8
  %139 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8** %139, align 8
  br label %152

140:                                              ; preds = %134, %119
  %141 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8** %141, align 8
  %142 = load atomic i32, i32* %62 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = load i32, i32* %66, align 4
  br i1 %144, label %146, label %148

146:                                              ; preds = %140
  %147 = add i32 %145, -1
  store i32 %147, i32* %66, align 4
  br label %148

148:                                              ; preds = %146, %140
  %149 = phi i32 [ %147, %146 ], [ %145, %140 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #10
  br label %152

152:                                              ; preds = %136, %148, %151
  %153 = phi %"class.WTF::StringImpl"** [ %138, %136 ], [ %121, %148 ], [ %121, %151 ]
  %154 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %155, align 8
  %156 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %157 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %156, align 8
  %158 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %157, align 8
  call void %158(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #10
  br label %174

174:                                              ; preds = %152, %170, %173
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #10
  br label %190

190:                                              ; preds = %174, %186, %189
  br i1 %60, label %216, label %191

191:                                              ; preds = %190
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #10
  %204 = load i32, i32* %196, align 4
  br label %205

205:                                              ; preds = %200, %203
  %206 = phi i32 [ %201, %200 ], [ %204, %203 ]
  %207 = load atomic i32, i32* %192 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %205
  %211 = add i32 %206, -1
  store i32 %211, i32* %196, align 4
  br label %212

212:                                              ; preds = %210, %205
  %213 = phi i32 [ %211, %210 ], [ %206, %205 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #10
  br label %216

216:                                              ; preds = %190, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %220

217:                                              ; preds = %3
  %218 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0
  %219 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kLoopAttrE, align 8
  tail call void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"* %218, %"class.blink::QualifiedName"* dereferenceable(8) %219, i32 %1) #10
  br label %220

220:                                              ; preds = %217, %216
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1925"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #10
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %3, i8* %8) #10
  %9 = bitcast %"class.WTF::StringTypeAdapter.1925"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #10
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %2, i8* %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #10
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #10
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32) local_unnamed_addr #1

declare i32 @_ZN5blink8Document21RequestAnimationFrameEPNS_13FrameCallbackE(%"class.blink::Document"*, %"class.blink::FrameCallback"*) local_unnamed_addr #1

declare void @_ZN5blink8Document20CancelAnimationFrameEi(%"class.blink::Document"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #10
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #10
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLMarqueeElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLMarqueeElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kBgcolorAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHspaceAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %17
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kVspaceAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %22
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %27
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"* %30, %"class.blink::QualifiedName"* dereferenceable(8) %1) #10
  br label %32

32:                                               ; preds = %2, %9, %14, %19, %24, %29
  %33 = phi i1 [ %31, %29 ], [ true, %24 ], [ true, %19 ], [ true, %14 ], [ true, %9 ], [ true, %2 ]
  ret i1 %33
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLMarqueeElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kBgcolorAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement19AddHTMLColorToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::HTMLElement"* %12, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 52, %"class.WTF::String"* dereferenceable(8) %13) #10
  br label %47

14:                                               ; preds = %4
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %20, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 165, %"class.WTF::String"* dereferenceable(8) %21, i32 1, i32 1) #10
  br label %47

22:                                               ; preds = %14
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHspaceAttrE, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %28, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 221, %"class.WTF::String"* dereferenceable(8) %29, i32 1, i32 1) #10
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %28, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 222, %"class.WTF::String"* dereferenceable(8) %29, i32 1, i32 1) #10
  br label %47

30:                                               ; preds = %22
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kVspaceAttrE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %36, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 223, %"class.WTF::String"* dereferenceable(8) %37, i32 1, i32 1) #10
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %36, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 218, %"class.WTF::String"* dereferenceable(8) %37, i32 1, i32 1) #10
  br label %47

38:                                               ; preds = %30
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %41
  %43 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0
  br i1 %42, label %44, label %46

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %43, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 438, %"class.WTF::String"* dereferenceable(8) %45, i32 1, i32 1) #10
  br label %47

46:                                               ; preds = %38
  tail call void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %43, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #10
  br label %47

47:                                               ; preds = %19, %35, %46, %44, %27, %11
  ret void
}

declare void @_ZN5blink11HTMLElement19AddHTMLColorToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::HTMLElement"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::KeyframeEffectModel"* @_ZN5blink18HTMLMarqueeElement17CreateEffectModelERKNS0_19AnimationParametersE(%"class.blink::HTMLMarqueeElement"* nocapture readonly, %"struct.blink::HTMLMarqueeElement::AnimationParameters"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.1754", align 8
  %4 = alloca %"class.blink::StringKeyframe"*, align 8
  %5 = alloca %"class.blink::StringKeyframe"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::LinearTimingFunction"*, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = tail call dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"* %13) #10
  %15 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %15, align 8
  %17 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %17, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::Element"* %17 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %20 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %20, i64 10
  %22 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %21, align 8
  %23 = tail call %"class.blink::ExecutionContext"* %22(%"class.blink::Node"* %18) #10
  %24 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %23, i64 0, i32 6, i32 11
  %25 = load i32, i32* %24, align 8
  %26 = bitcast %"class.blink::HeapVector.1754"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #10
  %30 = bitcast %"class.blink::StringKeyframe"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store %"class.blink::StringKeyframe"* inttoptr (i64 -6148914691236517206 to %"class.blink::StringKeyframe"*), %"class.blink::StringKeyframe"** %4, align 8
  %31 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64 112) #10
  %32 = bitcast i8* %31 to %"class.blink::StringKeyframe"*
  tail call void @_ZN5blink14StringKeyframeC2Ev(%"class.blink::StringKeyframe"* %32) #10
  %33 = getelementptr inbounds i8, i8* %31, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  %37 = bitcast %"class.blink::StringKeyframe"** %4 to i8**
  store i8* %31, i8** %37, align 8
  %38 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::AnimationParameters", %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %1, i64 0, i32 0
  %39 = tail call i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"* %32, i32 369, %"class.WTF::String"* dereferenceable(8) %38, i32 %25, %"class.blink::StyleSheetContents"* %16) #10
  %40 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %3, i64 0, i32 0
  %41 = load i32, i32* %29, align 4
  %42 = load i32, i32* %28, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %57, label %44, !prof !2

44:                                               ; preds = %2
  %45 = ptrtoint i8* %31 to i64
  %46 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %27, align 8
  %47 = zext i32 %41 to i64
  %48 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %46, i64 %47
  %49 = bitcast %"class.blink::Member.1760"* %48 to i64*
  store atomic i64 %45, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #10
  br label %54

54:                                               ; preds = %52, %44
  %55 = load i32, i32* %29, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %29, align 4
  br label %58

57:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1757"* nonnull %40, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %4) #10
  br label %58

58:                                               ; preds = %54, %57
  %59 = bitcast %"class.blink::StringKeyframe"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  store %"class.blink::StringKeyframe"* inttoptr (i64 -6148914691236517206 to %"class.blink::StringKeyframe"*), %"class.blink::StringKeyframe"** %5, align 8
  %60 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64 112) #10
  %61 = bitcast i8* %60 to %"class.blink::StringKeyframe"*
  call void @_ZN5blink14StringKeyframeC2Ev(%"class.blink::StringKeyframe"* %61) #10
  %62 = getelementptr inbounds i8, i8* %60, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  %66 = bitcast %"class.blink::StringKeyframe"** %5 to i8**
  store i8* %60, i8** %66, align 8
  %67 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::AnimationParameters", %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %1, i64 0, i32 1
  %68 = call i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"* %61, i32 369, %"class.WTF::String"* dereferenceable(8) %67, i32 %25, %"class.blink::StyleSheetContents"* %16) #10
  %69 = load i32, i32* %29, align 4
  %70 = load i32, i32* %28, align 8
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %85, label %72, !prof !2

72:                                               ; preds = %58
  %73 = ptrtoint i8* %60 to i64
  %74 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %27, align 8
  %75 = zext i32 %69 to i64
  %76 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %74, i64 %75
  %77 = bitcast %"class.blink::Member.1760"* %76 to i64*
  store atomic i64 %73, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  %81 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #10
  br label %82

82:                                               ; preds = %80, %72
  %83 = load i32, i32* %29, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %29, align 4
  br label %86

85:                                               ; preds = %58
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1757"* nonnull %40, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %5) #10
  br label %86

86:                                               ; preds = %82, %85
  %87 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #10
  store i32 0, i32* %6, align 4
  %88 = bitcast %"class.blink::LinearTimingFunction"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  %89 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv()
  store %"class.blink::LinearTimingFunction"* %89, %"class.blink::LinearTimingFunction"** %7, align 8
  %90 = call %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEENS_11EffectModel18CompositeOperationEPNS_20LinearTimingFunctionEEEEPS3_DpOT_(%"class.blink::HeapVector.1754"* nonnull dereferenceable(16) %3, i32* nonnull dereferenceable(4) %6, %"class.blink::LinearTimingFunction"** nonnull dereferenceable(8) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  ret %"class.blink::KeyframeEffectModel"* %90
}

declare dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"*, i32, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %31, !prof !4

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 16) #10
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = icmp eq i8* %8, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %7
  %16 = atomicrmw add i32* %10, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.logging::CheckError"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0)) #10
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %21

21:                                               ; preds = %18, %15
  %22 = atomicrmw sub i32* %10, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = bitcast i8* %8 to %"class.blink::TimingFunction"*
  %26 = bitcast i8* %8 to void (%"class.blink::TimingFunction"*)***
  %27 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %27, i64 1
  %29 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, align 8
  call void %29(%"class.blink::TimingFunction"* nonnull %25) #10
  br label %30

30:                                               ; preds = %7, %21, %24
  store i8* %8, i8** bitcast (%"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #10
  br label %31

31:                                               ; preds = %4, %30, %0
  %32 = load %"class.blink::LinearTimingFunction"*, %"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear, align 8
  ret %"class.blink::LinearTimingFunction"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement17ContinueAnimationEv(%"class.blink::HTMLMarqueeElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = alloca %"struct.blink::HTMLMarqueeElement::AnimationParameters", align 8
  %7 = alloca %"struct.blink::Timing", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::UnrestrictedDoubleOrString", align 8
  %10 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %11 = tail call zeroext i1 @_ZN5blink18HTMLMarqueeElement14ShouldContinueEv(%"class.blink::HTMLMarqueeElement"* %0)
  br i1 %11, label %12, label %374

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.blink::Member.23", %"class.blink::Member.23"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::Animation"*, %"class.blink::Animation"** %14, align 8
  %16 = icmp eq %"class.blink::Animation"* %15, null
  br i1 %16, label %71, label %17

17:                                               ; preds = %12
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9Animation15PlayStateStringEv(%"class.blink::Animation"* nonnull %15) #10
  %19 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %23, i64* %24, align 8
  br label %33

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %33

33:                                               ; preds = %25, %21
  %34 = phi i64 [ %32, %25 ], [ %23, %21 ]
  %35 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  %38 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %34, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 6, i32* %40, align 8
  %41 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %20, label %55, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br i1 %41, label %56, label %71

55:                                               ; preds = %51, %33
  br i1 %41, label %56, label %71

56:                                               ; preds = %54, %55
  %57 = load %"class.blink::Animation"*, %"class.blink::Animation"** %14, align 8
  %58 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %58) #10
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %60, align 8
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %61, align 2
  %62 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %63 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.WTF::StringImpl"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #10
  %65 = bitcast i8** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %66 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  %67 = bitcast %"class.blink::Animation"* %57 to void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)***
  %68 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %68, i64 38
  %70 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %69, align 8
  call void %70(%"class.blink::Animation"* %57, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %66) #10
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %58) #10
  br label %374

71:                                               ; preds = %12, %54, %55
  %72 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #10
  %73 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::AnimationParameters", %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %6, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::AnimationParameters", %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %6, i64 0, i32 1, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::AnimationParameters", %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %6, i64 0, i32 2
  %76 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 16, i1 false)
  store double 0xFFFFFFFFFFFFFFFF, double* %75, align 8
  call void @_ZN5blink18HTMLMarqueeElement22GetAnimationParametersEv(%"struct.blink::HTMLMarqueeElement::AnimationParameters"* nonnull sret %6, %"class.blink::HTMLMarqueeElement"* %0)
  %77 = call i32 @_ZNK5blink18HTMLMarqueeElement11scrollDelayEv(%"class.blink::HTMLMarqueeElement"* %0)
  %78 = call i32 @_ZNK5blink18HTMLMarqueeElement12scrollAmountEv(%"class.blink::HTMLMarqueeElement"* %0)
  %79 = icmp slt i32 %77, 60
  br i1 %79, label %80, label %136

80:                                               ; preds = %71
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kTruespeedAttrE, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %82, align 8
  %84 = icmp eq %"class.blink::ElementData"* %83, null
  br i1 %84, label %136, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %83, i64 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.blink::ElementData"* %83 to %"class.blink::UniqueElementData"*
  %92 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %83, i64 1, i32 1
  %93 = bitcast %"class.blink::Member.14"* %92 to %"class.blink::Attribute"**
  %94 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %91, i64 0, i32 2, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  br label %102

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %83, i64 1
  %99 = bitcast %"class.blink::ElementData"* %98 to %"class.blink::Attribute"*
  %100 = lshr i32 %87, 1
  %101 = and i32 %100, 268435455
  br label %102

102:                                              ; preds = %97, %90
  %103 = phi %"class.blink::Attribute"* [ %99, %97 ], [ %94, %90 ]
  %104 = phi i32 [ %101, %97 ], [ %96, %90 ]
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %103, i64 %105
  %107 = icmp eq i32 %104, 0
  br i1 %107, label %136, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %113

113:                                              ; preds = %129, %108
  %114 = phi %"class.blink::Attribute"* [ %103, %108 ], [ %130, %129 ]
  %115 = phi i32 [ 0, %108 ], [ %131, %129 ]
  %116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %114, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %117, %110
  br i1 %118, label %133, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %121, %122
  br i1 %123, label %124, label %129

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 4, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %126, %127
  br i1 %128, label %133, label %129

129:                                              ; preds = %124, %119
  %130 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %114, i64 1
  %131 = add i32 %115, 1
  %132 = icmp eq %"class.blink::Attribute"* %130, %106
  br i1 %132, label %136, label %113

133:                                              ; preds = %113, %124
  %134 = icmp eq i32 %115, -1
  %135 = select i1 %134, i32 85, i32 %77
  br label %136

136:                                              ; preds = %129, %133, %102, %80, %71
  %137 = phi i32 [ %77, %71 ], [ 85, %80 ], [ 85, %102 ], [ %135, %133 ], [ 85, %129 ]
  %138 = icmp eq i32 %78, 0
  br i1 %138, label %341, label %139

139:                                              ; preds = %136
  %140 = load double, double* %75, align 8
  %141 = sitofp i32 %137 to double
  %142 = fmul double %140, %141
  %143 = sitofp i32 %78 to double
  %144 = fdiv double %142, %143
  %145 = fcmp ugt double %144, 0.000000e+00
  br i1 %145, label %146, label %341

146:                                              ; preds = %139
  %147 = call %"class.blink::KeyframeEffectModel"* @_ZN5blink18HTMLMarqueeElement17CreateEffectModelERKNS0_19AnimationParametersE(%"class.blink::HTMLMarqueeElement"* %0, %"struct.blink::HTMLMarqueeElement::AnimationParameters"* nonnull dereferenceable(24) %6)
  %148 = bitcast %"struct.blink::Timing"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %148) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 bitcast (<{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon.48 } } } }, i32, [4 x i8], %class.scoped_refptr.60, i16, [6 x i8] }>* @__const._ZN5blink18HTMLMarqueeElement17ContinueAnimationEv.timing to i8*), i64 80, i1 false)
  %149 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %7, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 0, i64 16, i1 false) #10
  store i32 4, i32* %149, align 8
  %150 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %7, i64 0, i32 4
  %151 = bitcast double* %150 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %151, align 8
  %152 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %7, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %152, align 8
  %153 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %7, i64 0, i32 7
  store i32 0, i32* %153, align 8
  %154 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #10
  %155 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %154, i64 0, i32 0
  %156 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %7, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %155, %"class.blink::TimingFunction"** %156, align 8
  %157 = icmp eq %"class.blink::LinearTimingFunction"* %154, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %146
  %159 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %154, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 1 monotonic
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  %163 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0)) #10
  %164 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #10
  br label %165

165:                                              ; preds = %146, %158, %162
  %166 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %7, i64 0, i32 10
  store i16 0, i16* %166, align 8
  %167 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #10
  %168 = bitcast i8* %167 to %"class.blink::OptionalEffectTiming"*
  call void @_ZN5blink20OptionalEffectTimingC1Ev(%"class.blink::OptionalEffectTiming"* %168) #10
  %169 = getelementptr inbounds i8, i8* %167, i64 -4
  %170 = bitcast i8* %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = or i16 %171, 1
  store atomic i16 %172, i16* %170 release, align 2
  %173 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8) #10
  %174 = getelementptr inbounds i8, i8* %167, i64 72
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %195, label %178

178:                                              ; preds = %165
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i33
  %187 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %186, i33 1) #10
  %188 = extractvalue { i33, i1 } %187, 1
  %189 = extractvalue { i33, i1 } %187, 0
  %190 = icmp slt i33 %189, 0
  %191 = or i1 %188, %190
  br i1 %191, label %192, label %193, !prof !2

192:                                              ; preds = %183
  call void @llvm.trap() #10
  unreachable

193:                                              ; preds = %183
  %194 = trunc i33 %189 to i32
  store i32 %194, i32* %184, align 4
  br label %195

195:                                              ; preds = %193, %178, %165
  %196 = ptrtoint %"class.WTF::StringImpl"* %176 to i64
  %197 = bitcast i8* %174 to i64*
  %198 = bitcast i8* %174 to %"class.WTF::StringImpl"**
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  store i64 %196, i64* %197, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #10
  br label %214

214:                                              ; preds = %195, %210, %213
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #10
  br label %230

230:                                              ; preds = %214, %226, %229
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #10
  %231 = bitcast %"class.blink::UnrestrictedDoubleOrString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #10
  call void @_ZN5blink26UnrestrictedDoubleOrString22FromUnrestrictedDoubleEd(%"class.blink::UnrestrictedDoubleOrString"* nonnull sret %9, double %144) #10
  call void @_ZN5blink20OptionalEffectTiming11setDurationERKNS_26UnrestrictedDoubleOrStringE(%"class.blink::OptionalEffectTiming"* %168, %"class.blink::UnrestrictedDoubleOrString"* nonnull dereferenceable(24) %9) #10
  call void @_ZN5blink26UnrestrictedDoubleOrStringD1Ev(%"class.blink::UnrestrictedDoubleOrString"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #10
  %232 = bitcast %"class.blink::DummyExceptionStateForTesting"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %232) #10
  %233 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %234, align 8
  %235 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %235, align 2
  %236 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 2
  %237 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %238 = bitcast %"class.WTF::StringImpl"** %237 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 16, i1 false) #10
  %239 = bitcast i8** %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %240 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0
  %241 = call zeroext i1 @_ZN5blink11TimingInput6UpdateINS_20OptionalEffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* nonnull dereferenceable(80) %7, %"class.blink::OptionalEffectTiming"* %168, %"class.blink::Document"* null, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %240) #10
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %232) #10
  %242 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 320) #10
  %243 = bitcast i8* %242 to %"class.blink::KeyframeEffect"*
  %244 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 3, i32 0, i32 0
  %245 = load %"class.blink::Element"*, %"class.blink::Element"** %244, align 8
  %246 = bitcast %"class.blink::KeyframeEffectModel"* %147 to %"class.blink::KeyframeEffectModelBase"*
  call void @_ZN5blink14KeyframeEffectC1EPNS_7ElementEPNS_23KeyframeEffectModelBaseERKNS_6TimingENS0_8PriorityEPNS_15AnimationEffect13EventDelegateE(%"class.blink::KeyframeEffect"* %243, %"class.blink::Element"* %245, %"class.blink::KeyframeEffectModelBase"* %246, %"struct.blink::Timing"* nonnull dereferenceable(80) %7, i32 0, %"class.blink::AnimationEffect::EventDelegate"* null) #10
  %247 = getelementptr inbounds i8, i8* %242, i64 -4
  %248 = bitcast i8* %247 to i16*
  %249 = load atomic i16, i16* %248 monotonic, align 2
  %250 = or i16 %249, 1
  store atomic i16 %250, i16* %248 release, align 2
  %251 = load %"class.blink::Element"*, %"class.blink::Element"** %244, align 8
  %252 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %251, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %253 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %253, i64 0, i32 2, i32 0, i32 0
  %255 = load %"class.blink::Document"*, %"class.blink::Document"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %255, i64 0, i32 131, i32 0, i32 0
  %257 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::DocumentTimeline", %"class.blink::DocumentTimeline"* %257, i64 0, i32 0
  %259 = bitcast i8* %242 to %"class.blink::AnimationEffect"*
  %260 = call %"class.blink::Animation"* @_ZN5blink17AnimationTimeline4PlayEPNS_15AnimationEffectE(%"class.blink::AnimationTimeline"* %258, %"class.blink::AnimationEffect"* %259) #10
  %261 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %262 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %260, i64 0, i32 9
  %263 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %261, i64 0, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %283, label %266

266:                                              ; preds = %230
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %283

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  %274 = zext i32 %273 to i33
  %275 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %274, i33 1) #10
  %276 = extractvalue { i33, i1 } %275, 1
  %277 = extractvalue { i33, i1 } %275, 0
  %278 = icmp slt i33 %277, 0
  %279 = or i1 %276, %278
  br i1 %279, label %280, label %281, !prof !2

280:                                              ; preds = %271
  call void @llvm.trap() #10
  unreachable

281:                                              ; preds = %271
  %282 = trunc i33 %277 to i32
  store i32 %282, i32* %272, align 4
  br label %283

283:                                              ; preds = %281, %266, %230
  %284 = ptrtoint %"class.WTF::StringImpl"* %264 to i64
  %285 = bitcast %"class.WTF::String"* %262 to i64*
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %262, i64 0, i32 0, i32 0
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %286, align 8
  store i64 %284, i64* %285, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %283
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #10
  br label %302

302:                                              ; preds = %283, %298, %301
  %303 = ptrtoint %"class.blink::HTMLMarqueeElement"* %0 to i64
  %304 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64 40) #10
  %305 = getelementptr inbounds i8, i8* %304, i64 8
  store i8 0, i8* %305, align 8
  %306 = getelementptr inbounds i8, i8* %304, i64 16
  store i8 0, i8* %306, align 8
  %307 = bitcast i8* %304 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink18HTMLMarqueeElement17AnimationFinishedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %307, align 8
  %308 = getelementptr inbounds i8, i8* %304, i64 32
  %309 = bitcast i8* %308 to i64*
  store i64 %303, i64* %309, align 8
  %310 = getelementptr inbounds i8, i8* %304, i64 -4
  %311 = bitcast i8* %310 to i16*
  %312 = load atomic i16, i16* %311 monotonic, align 2
  %313 = or i16 %312, 1
  store atomic i16 %313, i16* %311 release, align 2
  %314 = bitcast i8* %304 to %"class.blink::EventListener"*
  %315 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %260, i64 0, i32 0, i32 0
  %316 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kFinishE, align 8
  %317 = call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %315, %"class.WTF::AtomicString"* dereferenceable(8) %316, %"class.blink::EventListener"* %314) #10
  %318 = ptrtoint %"class.blink::Animation"* %260 to i64
  %319 = bitcast %"class.blink::Member.23"* %13 to i64*
  store atomic i64 %318, i64* %319 monotonic, align 8
  %320 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %302
  %323 = bitcast %"class.blink::Animation"* %260 to i8*
  %324 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %323) #10
  br label %325

325:                                              ; preds = %302, %322
  %326 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %156, align 8
  %327 = icmp eq %"class.blink::TimingFunction"* %326, null
  br i1 %327, label %340, label %328

328:                                              ; preds = %325
  %329 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %326, i64 0, i32 1, i32 0
  %330 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %329, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = atomicrmw sub i32* %330, i32 1 acq_rel
  %332 = icmp eq i32 %331, 1
  br i1 %332, label %333, label %340

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %329, i64 -2
  %335 = bitcast %"class.base::RefCountedThreadSafe"* %334 to %"class.blink::TimingFunction"*
  %336 = bitcast %"class.base::RefCountedThreadSafe"* %334 to void (%"class.blink::TimingFunction"*)***
  %337 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %336, align 8
  %338 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %337, i64 1
  %339 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %338, align 8
  call void %339(%"class.blink::TimingFunction"* nonnull %335) #10
  br label %340

340:                                              ; preds = %325, %328, %333
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %148) #10
  br label %341

341:                                              ; preds = %136, %139, %340
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %357, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  br i1 %348, label %351, label %353

351:                                              ; preds = %344
  %352 = add i32 %350, -1
  store i32 %352, i32* %349, align 4
  br label %353

353:                                              ; preds = %351, %344
  %354 = phi i32 [ %352, %351 ], [ %350, %344 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #10
  br label %357

357:                                              ; preds = %356, %353, %341
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #10
  br label %373

373:                                              ; preds = %357, %369, %372
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #10
  br label %374

374:                                              ; preds = %1, %373, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18HTMLMarqueeElement14ShouldContinueEv(%"class.blink::HTMLMarqueeElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  store i8 -86, i8* %2, align 1
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kLoopAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.14"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %1
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0
  %62 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %61, i8* nonnull %2) #10
  %63 = load i8, i8* %2, align 1, !range !3
  %64 = icmp eq i8 %63, 0
  %65 = icmp slt i32 %62, 1
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -1, i32 %62
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  %68 = icmp slt i32 %67, 1
  br i1 %68, label %69, label %72

69:                                               ; preds = %59
  %70 = call i32 @_ZNK5blink18HTMLMarqueeElement11GetBehaviorEv(%"class.blink::HTMLMarqueeElement"* %0)
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %77

72:                                               ; preds = %69, %59
  %73 = phi i32 [ %67, %59 ], [ 1, %69 ]
  %74 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, %73
  br label %77

77:                                               ; preds = %69, %72
  %78 = phi i1 [ %76, %72 ], [ true, %69 ]
  ret i1 %78
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9Animation15PlayStateStringEv(%"class.blink::Animation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement22GetAnimationParametersEv(%"struct.blink::HTMLMarqueeElement::AnimationParameters"* noalias sret, %"class.blink::HTMLMarqueeElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::HTMLMarqueeElement::Metrics", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::AnimationParameters", %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::AnimationParameters", %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0, i64 0, i32 2
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  %9 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #10
  %10 = bitcast %"struct.blink::HTMLMarqueeElement::Metrics"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %3, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %3, i64 0, i32 3
  %15 = bitcast %"struct.blink::HTMLMarqueeElement::Metrics"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -1, i64 32, i1 false)
  call void @_ZN5blink18HTMLMarqueeElement10GetMetricsEv(%"struct.blink::HTMLMarqueeElement::Metrics"* nonnull sret %3, %"class.blink::HTMLMarqueeElement"* %1)
  %16 = load double, double* %13, align 8
  %17 = load double, double* %11, align 8
  %18 = fadd double %16, %17
  %19 = load double, double* %14, align 8
  %20 = load double, double* %12, align 8
  %21 = fadd double %19, %20
  %22 = fsub double %16, %17
  %23 = fsub double %19, %20
  %24 = tail call i32 @_ZNK5blink18HTMLMarqueeElement11GetBehaviorEv(%"class.blink::HTMLMarqueeElement"* %1)
  switch i32 %24, label %749 [
    i32 2, label %25
    i32 1, label %411
  ]

25:                                               ; preds = %2
  %26 = tail call i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* %1)
  switch i32 %26, label %306 [
    i32 1, label %27
    i32 2, label %120
    i32 3, label %213
  ]

27:                                               ; preds = %25
  %28 = fcmp oge double %22, 0.000000e+00
  %29 = select i1 %28, double 0.000000e+00, double %22
  %30 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %29)
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %52

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %52

49:                                               ; preds = %27
  %50 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %51 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %50, i64* %51, align 8
  br label %67

52:                                               ; preds = %32, %47
  %53 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %54 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %52
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %52
  %64 = phi i32 [ %62, %61 ], [ %60, %52 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %67

67:                                               ; preds = %49, %63, %66
  %68 = select i1 %28, double %22, double 0.000000e+00
  %69 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %68)
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #10
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %76
  tail call void @llvm.trap() #10
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %71, %67
  %89 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %90 = bitcast %"class.WTF::String"* %6 to i64*
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %89, i64* %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #10
  br label %106

106:                                              ; preds = %88, %102, %105
  br i1 %70, label %399, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %399

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #10
  br label %399

120:                                              ; preds = %25
  %121 = fcmp oge double %23, 0.000000e+00
  %122 = select i1 %121, double %23, double 0.000000e+00
  %123 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %122)
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %145

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #10
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %130
  tail call void @llvm.trap() #10
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %145

142:                                              ; preds = %120
  %143 = ptrtoint %"class.WTF::StringImpl"* %123 to i64
  %144 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %143, i64* %144, align 8
  br label %160

145:                                              ; preds = %125, %140
  %146 = ptrtoint %"class.WTF::StringImpl"* %123 to i64
  %147 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %145
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %145
  %157 = phi i32 [ %155, %154 ], [ %153, %145 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #10
  br label %160

160:                                              ; preds = %142, %156, %159
  %161 = select i1 %121, double 0.000000e+00, double %23
  %162 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %161)
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %181, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i33
  %173 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %172, i33 1) #10
  %174 = extractvalue { i33, i1 } %173, 1
  %175 = extractvalue { i33, i1 } %173, 0
  %176 = icmp slt i33 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %179, !prof !2

178:                                              ; preds = %169
  tail call void @llvm.trap() #10
  unreachable

179:                                              ; preds = %169
  %180 = trunc i33 %175 to i32
  store i32 %180, i32* %170, align 4
  br label %181

181:                                              ; preds = %179, %164, %160
  %182 = ptrtoint %"class.WTF::StringImpl"* %162 to i64
  %183 = bitcast %"class.WTF::String"* %6 to i64*
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %182, i64* %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #10
  br label %199

199:                                              ; preds = %181, %195, %198
  br i1 %163, label %399, label %200

200:                                              ; preds = %199
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %399

212:                                              ; preds = %209
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #10
  br label %399

213:                                              ; preds = %25
  %214 = fcmp oge double %23, 0.000000e+00
  %215 = select i1 %214, double 0.000000e+00, double %23
  %216 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %215)
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %235, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %238

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i33
  %227 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #10
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !2

232:                                              ; preds = %223
  tail call void @llvm.trap() #10
  unreachable

233:                                              ; preds = %223
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %224, align 4
  br label %238

235:                                              ; preds = %213
  %236 = ptrtoint %"class.WTF::StringImpl"* %216 to i64
  %237 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %236, i64* %237, align 8
  br label %253

238:                                              ; preds = %218, %233
  %239 = ptrtoint %"class.WTF::StringImpl"* %216 to i64
  %240 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %238
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %238
  %250 = phi i32 [ %248, %247 ], [ %246, %238 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #10
  br label %253

253:                                              ; preds = %235, %249, %252
  %254 = select i1 %214, double %23, double 0.000000e+00
  %255 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %254)
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %274, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i33
  %266 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #10
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !2

271:                                              ; preds = %262
  tail call void @llvm.trap() #10
  unreachable

272:                                              ; preds = %262
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %263, align 4
  br label %274

274:                                              ; preds = %272, %257, %253
  %275 = ptrtoint %"class.WTF::StringImpl"* %255 to i64
  %276 = bitcast %"class.WTF::String"* %6 to i64*
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %275, i64* %276, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #10
  br label %292

292:                                              ; preds = %274, %288, %291
  br i1 %256, label %399, label %293

293:                                              ; preds = %292
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %399

305:                                              ; preds = %302
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #10
  br label %399

306:                                              ; preds = %25
  %307 = fcmp oge double %22, 0.000000e+00
  %308 = select i1 %307, double %22, double 0.000000e+00
  %309 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %308)
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %328, label %311

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %331

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = zext i32 %318 to i33
  %320 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %319, i33 1) #10
  %321 = extractvalue { i33, i1 } %320, 1
  %322 = extractvalue { i33, i1 } %320, 0
  %323 = icmp slt i33 %322, 0
  %324 = or i1 %321, %323
  br i1 %324, label %325, label %326, !prof !2

325:                                              ; preds = %316
  tail call void @llvm.trap() #10
  unreachable

326:                                              ; preds = %316
  %327 = trunc i33 %322 to i32
  store i32 %327, i32* %317, align 4
  br label %331

328:                                              ; preds = %306
  %329 = ptrtoint %"class.WTF::StringImpl"* %309 to i64
  %330 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %329, i64* %330, align 8
  br label %346

331:                                              ; preds = %311, %326
  %332 = ptrtoint %"class.WTF::StringImpl"* %309 to i64
  %333 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %332, i64* %333, align 8
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %331
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %331
  %343 = phi i32 [ %341, %340 ], [ %339, %331 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #10
  br label %346

346:                                              ; preds = %328, %342, %345
  %347 = select i1 %307, double 0.000000e+00, double %22
  %348 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %347)
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %367, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %367

355:                                              ; preds = %350
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %357 = load i32, i32* %356, align 4
  %358 = zext i32 %357 to i33
  %359 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %358, i33 1) #10
  %360 = extractvalue { i33, i1 } %359, 1
  %361 = extractvalue { i33, i1 } %359, 0
  %362 = icmp slt i33 %361, 0
  %363 = or i1 %360, %362
  br i1 %363, label %364, label %365, !prof !2

364:                                              ; preds = %355
  tail call void @llvm.trap() #10
  unreachable

365:                                              ; preds = %355
  %366 = trunc i33 %361 to i32
  store i32 %366, i32* %356, align 4
  br label %367

367:                                              ; preds = %365, %350, %346
  %368 = ptrtoint %"class.WTF::StringImpl"* %348 to i64
  %369 = bitcast %"class.WTF::String"* %6 to i64*
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %368, i64* %369, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %385, label %372

372:                                              ; preds = %367
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  br i1 %376, label %379, label %381

379:                                              ; preds = %372
  %380 = add i32 %378, -1
  store i32 %380, i32* %377, align 4
  br label %381

381:                                              ; preds = %379, %372
  %382 = phi i32 [ %380, %379 ], [ %378, %372 ]
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %370) #10
  br label %385

385:                                              ; preds = %367, %381, %384
  br i1 %349, label %399, label %386

386:                                              ; preds = %385
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  br i1 %390, label %393, label %395

393:                                              ; preds = %386
  %394 = add i32 %392, -1
  store i32 %394, i32* %391, align 4
  br label %395

395:                                              ; preds = %393, %386
  %396 = phi i32 [ %394, %393 ], [ %392, %386 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #10
  br label %399

399:                                              ; preds = %398, %395, %385, %305, %302, %292, %212, %209, %199, %119, %116, %106
  %400 = phi double [ %22, %106 ], [ %22, %116 ], [ %22, %119 ], [ %23, %199 ], [ %23, %209 ], [ %23, %212 ], [ %23, %292 ], [ %23, %302 ], [ %23, %305 ], [ %22, %385 ], [ %22, %395 ], [ %22, %398 ]
  %401 = tail call double @llvm.fabs.f64(double %400) #10
  store double %401, double* %8, align 8
  %402 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %1, i64 0, i32 2
  %403 = load i32, i32* %402, align 4
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %1063, label %406

406:                                              ; preds = %399
  %407 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8
  %409 = shufflevector <2 x i64> %408, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %410 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to <2 x i64>*
  store <2 x i64> %409, <2 x i64>* %410, align 8
  br label %1063

411:                                              ; preds = %2
  %412 = tail call i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* %1)
  switch i32 %412, label %673 [
    i32 1, label %413
    i32 2, label %505
    i32 3, label %581
  ]

413:                                              ; preds = %411
  %414 = fsub double -0.000000e+00, %17
  %415 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %414)
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %434, label %417

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %437

422:                                              ; preds = %417
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %424 = load i32, i32* %423, align 4
  %425 = zext i32 %424 to i33
  %426 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %425, i33 1) #10
  %427 = extractvalue { i33, i1 } %426, 1
  %428 = extractvalue { i33, i1 } %426, 0
  %429 = icmp slt i33 %428, 0
  %430 = or i1 %427, %429
  br i1 %430, label %431, label %432, !prof !2

431:                                              ; preds = %422
  tail call void @llvm.trap() #10
  unreachable

432:                                              ; preds = %422
  %433 = trunc i33 %428 to i32
  store i32 %433, i32* %423, align 4
  br label %437

434:                                              ; preds = %413
  %435 = ptrtoint %"class.WTF::StringImpl"* %415 to i64
  %436 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %435, i64* %436, align 8
  br label %452

437:                                              ; preds = %417, %432
  %438 = ptrtoint %"class.WTF::StringImpl"* %415 to i64
  %439 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %438, i64* %439, align 8
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = and i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %445 = load i32, i32* %444, align 4
  br i1 %443, label %446, label %448

446:                                              ; preds = %437
  %447 = add i32 %445, -1
  store i32 %447, i32* %444, align 4
  br label %448

448:                                              ; preds = %446, %437
  %449 = phi i32 [ %447, %446 ], [ %445, %437 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %448
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #10
  br label %452

452:                                              ; preds = %434, %448, %451
  %453 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %22)
  %454 = icmp eq %"class.WTF::StringImpl"* %453, null
  br i1 %454, label %472, label %455

455:                                              ; preds = %452
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = load atomic i32, i32* %456 monotonic, align 4
  %458 = and i32 %457, 2
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %472

460:                                              ; preds = %455
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  %463 = zext i32 %462 to i33
  %464 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %463, i33 1) #10
  %465 = extractvalue { i33, i1 } %464, 1
  %466 = extractvalue { i33, i1 } %464, 0
  %467 = icmp slt i33 %466, 0
  %468 = or i1 %465, %467
  br i1 %468, label %469, label %470, !prof !2

469:                                              ; preds = %460
  tail call void @llvm.trap() #10
  unreachable

470:                                              ; preds = %460
  %471 = trunc i33 %466 to i32
  store i32 %471, i32* %461, align 4
  br label %472

472:                                              ; preds = %470, %455, %452
  %473 = ptrtoint %"class.WTF::StringImpl"* %453 to i64
  %474 = bitcast %"class.WTF::String"* %6 to i64*
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %473, i64* %474, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %490, label %477

477:                                              ; preds = %472
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %483 = load i32, i32* %482, align 4
  br i1 %481, label %484, label %486

484:                                              ; preds = %477
  %485 = add i32 %483, -1
  store i32 %485, i32* %482, align 4
  br label %486

486:                                              ; preds = %484, %477
  %487 = phi i32 [ %485, %484 ], [ %483, %477 ]
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %486
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %475) #10
  br label %490

490:                                              ; preds = %472, %486, %489
  br i1 %454, label %504, label %491

491:                                              ; preds = %490
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = load atomic i32, i32* %492 monotonic, align 4
  %494 = and i32 %493, 2
  %495 = icmp eq i32 %494, 0
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 0
  %497 = load i32, i32* %496, align 4
  br i1 %495, label %498, label %500

498:                                              ; preds = %491
  %499 = add i32 %497, -1
  store i32 %499, i32* %496, align 4
  br label %500

500:                                              ; preds = %498, %491
  %501 = phi i32 [ %499, %498 ], [ %497, %491 ]
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %500
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %453) #10
  br label %504

504:                                              ; preds = %490, %500, %503
  store double %16, double* %8, align 8
  br label %1063

505:                                              ; preds = %411
  %506 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %19)
  %507 = icmp eq %"class.WTF::StringImpl"* %506, null
  br i1 %507, label %525, label %508

508:                                              ; preds = %505
  %509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %510 = load atomic i32, i32* %509 monotonic, align 4
  %511 = and i32 %510, 2
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %528

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 0
  %515 = load i32, i32* %514, align 4
  %516 = zext i32 %515 to i33
  %517 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %516, i33 1) #10
  %518 = extractvalue { i33, i1 } %517, 1
  %519 = extractvalue { i33, i1 } %517, 0
  %520 = icmp slt i33 %519, 0
  %521 = or i1 %518, %520
  br i1 %521, label %522, label %523, !prof !2

522:                                              ; preds = %513
  tail call void @llvm.trap() #10
  unreachable

523:                                              ; preds = %513
  %524 = trunc i33 %519 to i32
  store i32 %524, i32* %514, align 4
  br label %528

525:                                              ; preds = %505
  %526 = ptrtoint %"class.WTF::StringImpl"* %506 to i64
  %527 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %526, i64* %527, align 8
  br label %543

528:                                              ; preds = %508, %523
  %529 = ptrtoint %"class.WTF::StringImpl"* %506 to i64
  %530 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %529, i64* %530, align 8
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %532 = load atomic i32, i32* %531 monotonic, align 4
  %533 = and i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 0
  %536 = load i32, i32* %535, align 4
  br i1 %534, label %537, label %539

537:                                              ; preds = %528
  %538 = add i32 %536, -1
  store i32 %538, i32* %535, align 4
  br label %539

539:                                              ; preds = %537, %528
  %540 = phi i32 [ %538, %537 ], [ %536, %528 ]
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %506) #10
  br label %543

543:                                              ; preds = %525, %539, %542
  %544 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %544) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0), i64 13) #10
  %545 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %546 = bitcast %"class.WTF::String"* %4 to i64*
  %547 = load i64, i64* %546, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %545, align 8
  %548 = bitcast %"class.WTF::String"* %6 to i64*
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %547, i64* %548, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %549, null
  br i1 %550, label %580, label %551

551:                                              ; preds = %543
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 0
  %557 = load i32, i32* %556, align 4
  br i1 %555, label %558, label %560

558:                                              ; preds = %551
  %559 = add i32 %557, -1
  store i32 %559, i32* %556, align 4
  br label %560

560:                                              ; preds = %558, %551
  %561 = phi i32 [ %559, %558 ], [ %557, %551 ]
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %564

563:                                              ; preds = %560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %549) #10
  br label %564

564:                                              ; preds = %560, %563
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %566 = icmp eq %"class.WTF::StringImpl"* %565, null
  br i1 %566, label %580, label %567

567:                                              ; preds = %564
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load atomic i32, i32* %568 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %573 = load i32, i32* %572, align 4
  br i1 %571, label %574, label %576

574:                                              ; preds = %567
  %575 = add i32 %573, -1
  store i32 %575, i32* %572, align 4
  br label %576

576:                                              ; preds = %574, %567
  %577 = phi i32 [ %575, %574 ], [ %573, %567 ]
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %580

579:                                              ; preds = %576
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %565) #10
  br label %580

580:                                              ; preds = %543, %564, %576, %579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %544) #10
  store double %19, double* %8, align 8
  br label %1063

581:                                              ; preds = %411
  %582 = fsub double -0.000000e+00, %20
  %583 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %582)
  %584 = icmp eq %"class.WTF::StringImpl"* %583, null
  br i1 %584, label %602, label %585

585:                                              ; preds = %581
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = and i32 %587, 2
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %605

590:                                              ; preds = %585
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 0
  %592 = load i32, i32* %591, align 4
  %593 = zext i32 %592 to i33
  %594 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %593, i33 1) #10
  %595 = extractvalue { i33, i1 } %594, 1
  %596 = extractvalue { i33, i1 } %594, 0
  %597 = icmp slt i33 %596, 0
  %598 = or i1 %595, %597
  br i1 %598, label %599, label %600, !prof !2

599:                                              ; preds = %590
  tail call void @llvm.trap() #10
  unreachable

600:                                              ; preds = %590
  %601 = trunc i33 %596 to i32
  store i32 %601, i32* %591, align 4
  br label %605

602:                                              ; preds = %581
  %603 = ptrtoint %"class.WTF::StringImpl"* %583 to i64
  %604 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %603, i64* %604, align 8
  br label %620

605:                                              ; preds = %585, %600
  %606 = ptrtoint %"class.WTF::StringImpl"* %583 to i64
  %607 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %606, i64* %607, align 8
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %609 = load atomic i32, i32* %608 monotonic, align 4
  %610 = and i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 0
  %613 = load i32, i32* %612, align 4
  br i1 %611, label %614, label %616

614:                                              ; preds = %605
  %615 = add i32 %613, -1
  store i32 %615, i32* %612, align 4
  br label %616

616:                                              ; preds = %614, %605
  %617 = phi i32 [ %615, %614 ], [ %613, %605 ]
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %616
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %583) #10
  br label %620

620:                                              ; preds = %602, %616, %619
  %621 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %23)
  %622 = icmp eq %"class.WTF::StringImpl"* %621, null
  br i1 %622, label %640, label %623

623:                                              ; preds = %620
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = load atomic i32, i32* %624 monotonic, align 4
  %626 = and i32 %625, 2
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %628, label %640

628:                                              ; preds = %623
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 0
  %630 = load i32, i32* %629, align 4
  %631 = zext i32 %630 to i33
  %632 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %631, i33 1) #10
  %633 = extractvalue { i33, i1 } %632, 1
  %634 = extractvalue { i33, i1 } %632, 0
  %635 = icmp slt i33 %634, 0
  %636 = or i1 %633, %635
  br i1 %636, label %637, label %638, !prof !2

637:                                              ; preds = %628
  tail call void @llvm.trap() #10
  unreachable

638:                                              ; preds = %628
  %639 = trunc i33 %634 to i32
  store i32 %639, i32* %629, align 4
  br label %640

640:                                              ; preds = %638, %623, %620
  %641 = ptrtoint %"class.WTF::StringImpl"* %621 to i64
  %642 = bitcast %"class.WTF::String"* %6 to i64*
  %643 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %641, i64* %642, align 8
  %644 = icmp eq %"class.WTF::StringImpl"* %643, null
  br i1 %644, label %658, label %645

645:                                              ; preds = %640
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %647 = load atomic i32, i32* %646 monotonic, align 4
  %648 = and i32 %647, 2
  %649 = icmp eq i32 %648, 0
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 0
  %651 = load i32, i32* %650, align 4
  br i1 %649, label %652, label %654

652:                                              ; preds = %645
  %653 = add i32 %651, -1
  store i32 %653, i32* %650, align 4
  br label %654

654:                                              ; preds = %652, %645
  %655 = phi i32 [ %653, %652 ], [ %651, %645 ]
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %657, label %658

657:                                              ; preds = %654
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %643) #10
  br label %658

658:                                              ; preds = %640, %654, %657
  br i1 %622, label %672, label %659

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load atomic i32, i32* %660 monotonic, align 4
  %662 = and i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 0
  %665 = load i32, i32* %664, align 4
  br i1 %663, label %666, label %668

666:                                              ; preds = %659
  %667 = add i32 %665, -1
  store i32 %667, i32* %664, align 4
  br label %668

668:                                              ; preds = %666, %659
  %669 = phi i32 [ %667, %666 ], [ %665, %659 ]
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %672

671:                                              ; preds = %668
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %621) #10
  br label %672

672:                                              ; preds = %658, %668, %671
  store double %19, double* %8, align 8
  br label %1063

673:                                              ; preds = %411
  %674 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %16)
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %693, label %676

676:                                              ; preds = %673
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load atomic i32, i32* %677 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %696

681:                                              ; preds = %676
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  %684 = zext i32 %683 to i33
  %685 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %684, i33 1) #10
  %686 = extractvalue { i33, i1 } %685, 1
  %687 = extractvalue { i33, i1 } %685, 0
  %688 = icmp slt i33 %687, 0
  %689 = or i1 %686, %688
  br i1 %689, label %690, label %691, !prof !2

690:                                              ; preds = %681
  tail call void @llvm.trap() #10
  unreachable

691:                                              ; preds = %681
  %692 = trunc i33 %687 to i32
  store i32 %692, i32* %682, align 4
  br label %696

693:                                              ; preds = %673
  %694 = ptrtoint %"class.WTF::StringImpl"* %674 to i64
  %695 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %694, i64* %695, align 8
  br label %711

696:                                              ; preds = %676, %691
  %697 = ptrtoint %"class.WTF::StringImpl"* %674 to i64
  %698 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %697, i64* %698, align 8
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load atomic i32, i32* %699 monotonic, align 4
  %701 = and i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %704 = load i32, i32* %703, align 4
  br i1 %702, label %705, label %707

705:                                              ; preds = %696
  %706 = add i32 %704, -1
  store i32 %706, i32* %703, align 4
  br label %707

707:                                              ; preds = %705, %696
  %708 = phi i32 [ %706, %705 ], [ %704, %696 ]
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %711

710:                                              ; preds = %707
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #10
  br label %711

711:                                              ; preds = %693, %707, %710
  %712 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %712) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #10
  %713 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %714 = bitcast %"class.WTF::String"* %5 to i64*
  %715 = load i64, i64* %714, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %713, align 8
  %716 = bitcast %"class.WTF::String"* %6 to i64*
  %717 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %715, i64* %716, align 8
  %718 = icmp eq %"class.WTF::StringImpl"* %717, null
  br i1 %718, label %748, label %719

719:                                              ; preds = %711
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %721 = load atomic i32, i32* %720 monotonic, align 4
  %722 = and i32 %721, 2
  %723 = icmp eq i32 %722, 0
  %724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %717, i64 0, i32 0
  %725 = load i32, i32* %724, align 4
  br i1 %723, label %726, label %728

726:                                              ; preds = %719
  %727 = add i32 %725, -1
  store i32 %727, i32* %724, align 4
  br label %728

728:                                              ; preds = %726, %719
  %729 = phi i32 [ %727, %726 ], [ %725, %719 ]
  %730 = icmp eq i32 %729, 0
  br i1 %730, label %731, label %732

731:                                              ; preds = %728
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %717) #10
  br label %732

732:                                              ; preds = %728, %731
  %733 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %713, align 8
  %734 = icmp eq %"class.WTF::StringImpl"* %733, null
  br i1 %734, label %748, label %735

735:                                              ; preds = %732
  %736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %737 = load atomic i32, i32* %736 monotonic, align 4
  %738 = and i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 0
  %741 = load i32, i32* %740, align 4
  br i1 %739, label %742, label %744

742:                                              ; preds = %735
  %743 = add i32 %741, -1
  store i32 %743, i32* %740, align 4
  br label %744

744:                                              ; preds = %742, %735
  %745 = phi i32 [ %743, %742 ], [ %741, %735 ]
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %748

747:                                              ; preds = %744
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %733) #10
  br label %748

748:                                              ; preds = %711, %732, %744, %747
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %712) #10
  store double %16, double* %8, align 8
  br label %1063

749:                                              ; preds = %2
  %750 = tail call i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* %1)
  switch i32 %750, label %985 [
    i32 1, label %751
    i32 2, label %829
    i32 3, label %907
  ]

751:                                              ; preds = %749
  %752 = fsub double -0.000000e+00, %17
  %753 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %752)
  %754 = icmp eq %"class.WTF::StringImpl"* %753, null
  br i1 %754, label %772, label %755

755:                                              ; preds = %751
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %760, label %775

760:                                              ; preds = %755
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %762 = load i32, i32* %761, align 4
  %763 = zext i32 %762 to i33
  %764 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %763, i33 1) #10
  %765 = extractvalue { i33, i1 } %764, 1
  %766 = extractvalue { i33, i1 } %764, 0
  %767 = icmp slt i33 %766, 0
  %768 = or i1 %765, %767
  br i1 %768, label %769, label %770, !prof !2

769:                                              ; preds = %760
  tail call void @llvm.trap() #10
  unreachable

770:                                              ; preds = %760
  %771 = trunc i33 %766 to i32
  store i32 %771, i32* %761, align 4
  br label %775

772:                                              ; preds = %751
  %773 = ptrtoint %"class.WTF::StringImpl"* %753 to i64
  %774 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %773, i64* %774, align 8
  br label %790

775:                                              ; preds = %755, %770
  %776 = ptrtoint %"class.WTF::StringImpl"* %753 to i64
  %777 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %776, i64* %777, align 8
  %778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %779 = load atomic i32, i32* %778 monotonic, align 4
  %780 = and i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %783 = load i32, i32* %782, align 4
  br i1 %781, label %784, label %786

784:                                              ; preds = %775
  %785 = add i32 %783, -1
  store i32 %785, i32* %782, align 4
  br label %786

786:                                              ; preds = %784, %775
  %787 = phi i32 [ %785, %784 ], [ %783, %775 ]
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %790

789:                                              ; preds = %786
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %753) #10
  br label %790

790:                                              ; preds = %772, %786, %789
  %791 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %16)
  %792 = icmp eq %"class.WTF::StringImpl"* %791, null
  br i1 %792, label %810, label %793

793:                                              ; preds = %790
  %794 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %795 = load atomic i32, i32* %794 monotonic, align 4
  %796 = and i32 %795, 2
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %813

798:                                              ; preds = %793
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 0
  %800 = load i32, i32* %799, align 4
  %801 = zext i32 %800 to i33
  %802 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %801, i33 1) #10
  %803 = extractvalue { i33, i1 } %802, 1
  %804 = extractvalue { i33, i1 } %802, 0
  %805 = icmp slt i33 %804, 0
  %806 = or i1 %803, %805
  br i1 %806, label %807, label %808, !prof !2

807:                                              ; preds = %798
  tail call void @llvm.trap() #10
  unreachable

808:                                              ; preds = %798
  %809 = trunc i33 %804 to i32
  store i32 %809, i32* %799, align 4
  br label %813

810:                                              ; preds = %790
  %811 = ptrtoint %"class.WTF::StringImpl"* %791 to i64
  %812 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %811, i64* %812, align 8
  br label %828

813:                                              ; preds = %793, %808
  %814 = ptrtoint %"class.WTF::StringImpl"* %791 to i64
  %815 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %814, i64* %815, align 8
  %816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %817 = load atomic i32, i32* %816 monotonic, align 4
  %818 = and i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 0
  %821 = load i32, i32* %820, align 4
  br i1 %819, label %822, label %824

822:                                              ; preds = %813
  %823 = add i32 %821, -1
  store i32 %823, i32* %820, align 4
  br label %824

824:                                              ; preds = %822, %813
  %825 = phi i32 [ %823, %822 ], [ %821, %813 ]
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %827, label %828

827:                                              ; preds = %824
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %791) #10
  br label %828

828:                                              ; preds = %810, %824, %827
  store double %18, double* %8, align 8
  br label %1063

829:                                              ; preds = %749
  %830 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %19)
  %831 = icmp eq %"class.WTF::StringImpl"* %830, null
  br i1 %831, label %849, label %832

832:                                              ; preds = %829
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load atomic i32, i32* %833 monotonic, align 4
  %835 = and i32 %834, 2
  %836 = icmp eq i32 %835, 0
  br i1 %836, label %837, label %852

837:                                              ; preds = %832
  %838 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 0
  %839 = load i32, i32* %838, align 4
  %840 = zext i32 %839 to i33
  %841 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %840, i33 1) #10
  %842 = extractvalue { i33, i1 } %841, 1
  %843 = extractvalue { i33, i1 } %841, 0
  %844 = icmp slt i33 %843, 0
  %845 = or i1 %842, %844
  br i1 %845, label %846, label %847, !prof !2

846:                                              ; preds = %837
  tail call void @llvm.trap() #10
  unreachable

847:                                              ; preds = %837
  %848 = trunc i33 %843 to i32
  store i32 %848, i32* %838, align 4
  br label %852

849:                                              ; preds = %829
  %850 = ptrtoint %"class.WTF::StringImpl"* %830 to i64
  %851 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %850, i64* %851, align 8
  br label %867

852:                                              ; preds = %832, %847
  %853 = ptrtoint %"class.WTF::StringImpl"* %830 to i64
  %854 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %853, i64* %854, align 8
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load atomic i32, i32* %855 monotonic, align 4
  %857 = and i32 %856, 2
  %858 = icmp eq i32 %857, 0
  %859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 0
  %860 = load i32, i32* %859, align 4
  br i1 %858, label %861, label %863

861:                                              ; preds = %852
  %862 = add i32 %860, -1
  store i32 %862, i32* %859, align 4
  br label %863

863:                                              ; preds = %861, %852
  %864 = phi i32 [ %862, %861 ], [ %860, %852 ]
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %866, label %867

866:                                              ; preds = %863
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %830) #10
  br label %867

867:                                              ; preds = %849, %863, %866
  %868 = fsub double -0.000000e+00, %20
  %869 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %868)
  %870 = icmp eq %"class.WTF::StringImpl"* %869, null
  br i1 %870, label %888, label %871

871:                                              ; preds = %867
  %872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %873 = load atomic i32, i32* %872 monotonic, align 4
  %874 = and i32 %873, 2
  %875 = icmp eq i32 %874, 0
  br i1 %875, label %876, label %891

876:                                              ; preds = %871
  %877 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 0
  %878 = load i32, i32* %877, align 4
  %879 = zext i32 %878 to i33
  %880 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %879, i33 1) #10
  %881 = extractvalue { i33, i1 } %880, 1
  %882 = extractvalue { i33, i1 } %880, 0
  %883 = icmp slt i33 %882, 0
  %884 = or i1 %881, %883
  br i1 %884, label %885, label %886, !prof !2

885:                                              ; preds = %876
  tail call void @llvm.trap() #10
  unreachable

886:                                              ; preds = %876
  %887 = trunc i33 %882 to i32
  store i32 %887, i32* %877, align 4
  br label %891

888:                                              ; preds = %867
  %889 = ptrtoint %"class.WTF::StringImpl"* %869 to i64
  %890 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %889, i64* %890, align 8
  br label %906

891:                                              ; preds = %871, %886
  %892 = ptrtoint %"class.WTF::StringImpl"* %869 to i64
  %893 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %892, i64* %893, align 8
  %894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %895 = load atomic i32, i32* %894 monotonic, align 4
  %896 = and i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %869, i64 0, i32 0
  %899 = load i32, i32* %898, align 4
  br i1 %897, label %900, label %902

900:                                              ; preds = %891
  %901 = add i32 %899, -1
  store i32 %901, i32* %898, align 4
  br label %902

902:                                              ; preds = %900, %891
  %903 = phi i32 [ %901, %900 ], [ %899, %891 ]
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %906

905:                                              ; preds = %902
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %869) #10
  br label %906

906:                                              ; preds = %888, %902, %905
  store double %21, double* %8, align 8
  br label %1063

907:                                              ; preds = %749
  %908 = fsub double -0.000000e+00, %20
  %909 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %908)
  %910 = icmp eq %"class.WTF::StringImpl"* %909, null
  br i1 %910, label %928, label %911

911:                                              ; preds = %907
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = load atomic i32, i32* %912 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %931

916:                                              ; preds = %911
  %917 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 0
  %918 = load i32, i32* %917, align 4
  %919 = zext i32 %918 to i33
  %920 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %919, i33 1) #10
  %921 = extractvalue { i33, i1 } %920, 1
  %922 = extractvalue { i33, i1 } %920, 0
  %923 = icmp slt i33 %922, 0
  %924 = or i1 %921, %923
  br i1 %924, label %925, label %926, !prof !2

925:                                              ; preds = %916
  tail call void @llvm.trap() #10
  unreachable

926:                                              ; preds = %916
  %927 = trunc i33 %922 to i32
  store i32 %927, i32* %917, align 4
  br label %931

928:                                              ; preds = %907
  %929 = ptrtoint %"class.WTF::StringImpl"* %909 to i64
  %930 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %929, i64* %930, align 8
  br label %946

931:                                              ; preds = %911, %926
  %932 = ptrtoint %"class.WTF::StringImpl"* %909 to i64
  %933 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %932, i64* %933, align 8
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %935 = load atomic i32, i32* %934 monotonic, align 4
  %936 = and i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 0
  %939 = load i32, i32* %938, align 4
  br i1 %937, label %940, label %942

940:                                              ; preds = %931
  %941 = add i32 %939, -1
  store i32 %941, i32* %938, align 4
  br label %942

942:                                              ; preds = %940, %931
  %943 = phi i32 [ %941, %940 ], [ %939, %931 ]
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %946

945:                                              ; preds = %942
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %909) #10
  br label %946

946:                                              ; preds = %928, %942, %945
  %947 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %19)
  %948 = icmp eq %"class.WTF::StringImpl"* %947, null
  br i1 %948, label %966, label %949

949:                                              ; preds = %946
  %950 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %951 = load atomic i32, i32* %950 monotonic, align 4
  %952 = and i32 %951, 2
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %954, label %969

954:                                              ; preds = %949
  %955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 0
  %956 = load i32, i32* %955, align 4
  %957 = zext i32 %956 to i33
  %958 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %957, i33 1) #10
  %959 = extractvalue { i33, i1 } %958, 1
  %960 = extractvalue { i33, i1 } %958, 0
  %961 = icmp slt i33 %960, 0
  %962 = or i1 %959, %961
  br i1 %962, label %963, label %964, !prof !2

963:                                              ; preds = %954
  tail call void @llvm.trap() #10
  unreachable

964:                                              ; preds = %954
  %965 = trunc i33 %960 to i32
  store i32 %965, i32* %955, align 4
  br label %969

966:                                              ; preds = %946
  %967 = ptrtoint %"class.WTF::StringImpl"* %947 to i64
  %968 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %967, i64* %968, align 8
  br label %984

969:                                              ; preds = %949, %964
  %970 = ptrtoint %"class.WTF::StringImpl"* %947 to i64
  %971 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %970, i64* %971, align 8
  %972 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %973 = load atomic i32, i32* %972 monotonic, align 4
  %974 = and i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %947, i64 0, i32 0
  %977 = load i32, i32* %976, align 4
  br i1 %975, label %978, label %980

978:                                              ; preds = %969
  %979 = add i32 %977, -1
  store i32 %979, i32* %976, align 4
  br label %980

980:                                              ; preds = %978, %969
  %981 = phi i32 [ %979, %978 ], [ %977, %969 ]
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %983, label %984

983:                                              ; preds = %980
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %947) #10
  br label %984

984:                                              ; preds = %966, %980, %983
  store double %21, double* %8, align 8
  br label %1063

985:                                              ; preds = %749
  %986 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %16)
  %987 = icmp eq %"class.WTF::StringImpl"* %986, null
  br i1 %987, label %1005, label %988

988:                                              ; preds = %985
  %989 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %986, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %990 = load atomic i32, i32* %989 monotonic, align 4
  %991 = and i32 %990, 2
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %993, label %1008

993:                                              ; preds = %988
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %986, i64 0, i32 0
  %995 = load i32, i32* %994, align 4
  %996 = zext i32 %995 to i33
  %997 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %996, i33 1) #10
  %998 = extractvalue { i33, i1 } %997, 1
  %999 = extractvalue { i33, i1 } %997, 0
  %1000 = icmp slt i33 %999, 0
  %1001 = or i1 %998, %1000
  br i1 %1001, label %1002, label %1003, !prof !2

1002:                                             ; preds = %993
  tail call void @llvm.trap() #10
  unreachable

1003:                                             ; preds = %993
  %1004 = trunc i33 %999 to i32
  store i32 %1004, i32* %994, align 4
  br label %1008

1005:                                             ; preds = %985
  %1006 = ptrtoint %"class.WTF::StringImpl"* %986 to i64
  %1007 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %1006, i64* %1007, align 8
  br label %1023

1008:                                             ; preds = %988, %1003
  %1009 = ptrtoint %"class.WTF::StringImpl"* %986 to i64
  %1010 = bitcast %"struct.blink::HTMLMarqueeElement::AnimationParameters"* %0 to i64*
  store i64 %1009, i64* %1010, align 8
  %1011 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %986, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1012 = load atomic i32, i32* %1011 monotonic, align 4
  %1013 = and i32 %1012, 2
  %1014 = icmp eq i32 %1013, 0
  %1015 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %986, i64 0, i32 0
  %1016 = load i32, i32* %1015, align 4
  br i1 %1014, label %1017, label %1019

1017:                                             ; preds = %1008
  %1018 = add i32 %1016, -1
  store i32 %1018, i32* %1015, align 4
  br label %1019

1019:                                             ; preds = %1017, %1008
  %1020 = phi i32 [ %1018, %1017 ], [ %1016, %1008 ]
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1023

1022:                                             ; preds = %1019
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %986) #10
  br label %1023

1023:                                             ; preds = %1005, %1019, %1022
  %1024 = fsub double -0.000000e+00, %17
  %1025 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* %1, double %1024)
  %1026 = icmp eq %"class.WTF::StringImpl"* %1025, null
  br i1 %1026, label %1044, label %1027

1027:                                             ; preds = %1023
  %1028 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1029 = load atomic i32, i32* %1028 monotonic, align 4
  %1030 = and i32 %1029, 2
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1032, label %1047

1032:                                             ; preds = %1027
  %1033 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 0
  %1034 = load i32, i32* %1033, align 4
  %1035 = zext i32 %1034 to i33
  %1036 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1035, i33 1) #10
  %1037 = extractvalue { i33, i1 } %1036, 1
  %1038 = extractvalue { i33, i1 } %1036, 0
  %1039 = icmp slt i33 %1038, 0
  %1040 = or i1 %1037, %1039
  br i1 %1040, label %1041, label %1042, !prof !2

1041:                                             ; preds = %1032
  tail call void @llvm.trap() #10
  unreachable

1042:                                             ; preds = %1032
  %1043 = trunc i33 %1038 to i32
  store i32 %1043, i32* %1033, align 4
  br label %1047

1044:                                             ; preds = %1023
  %1045 = ptrtoint %"class.WTF::StringImpl"* %1025 to i64
  %1046 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %1045, i64* %1046, align 8
  br label %1062

1047:                                             ; preds = %1027, %1042
  %1048 = ptrtoint %"class.WTF::StringImpl"* %1025 to i64
  %1049 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %1048, i64* %1049, align 8
  %1050 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = load atomic i32, i32* %1050 monotonic, align 4
  %1052 = and i32 %1051, 2
  %1053 = icmp eq i32 %1052, 0
  %1054 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 0
  %1055 = load i32, i32* %1054, align 4
  br i1 %1053, label %1056, label %1058

1056:                                             ; preds = %1047
  %1057 = add i32 %1055, -1
  store i32 %1057, i32* %1054, align 4
  br label %1058

1058:                                             ; preds = %1056, %1047
  %1059 = phi i32 [ %1057, %1056 ], [ %1055, %1047 ]
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1058
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1025) #10
  br label %1062

1062:                                             ; preds = %1044, %1058, %1061
  store double %18, double* %8, align 8
  br label %1063

1063:                                             ; preds = %406, %399, %828, %906, %984, %1062, %504, %580, %672, %748
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #10
  ret void
}

declare void @_ZN5blink20OptionalEffectTiming11setDurationERKNS_26UnrestrictedDoubleOrStringE(%"class.blink::OptionalEffectTiming"*, %"class.blink::UnrestrictedDoubleOrString"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink26UnrestrictedDoubleOrString22FromUnrestrictedDoubleEd(%"class.blink::UnrestrictedDoubleOrString"* sret, double) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink26UnrestrictedDoubleOrStringD1Ev(%"class.blink::UnrestrictedDoubleOrString"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink11TimingInput6UpdateINS_20OptionalEffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80), %"class.blink::OptionalEffectTiming"*, %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::Animation"* @_ZN5blink17AnimationTimeline4PlayEPNS_15AnimationEffectE(%"class.blink::AnimationTimeline"*, %"class.blink::AnimationEffect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18HTMLMarqueeElement11GetBehaviorEv(%"class.blink::HTMLMarqueeElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kBehaviorAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %68, i64* %69, align 8
  br label %77

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str.5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  br i1 %80, label %101, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #10
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %86, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %87, i64* %88, align 8
  br label %96

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  br label %96

96:                                               ; preds = %85, %89
  %97 = phi i32 [ %92, %89 ], [ 0, %85 ]
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [6 x i8]* nonnull dereferenceable(6) @.str.6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #10
  %100 = zext i1 %99 to i32
  br label %101

101:                                              ; preds = %96, %77
  %102 = phi i32 [ 2, %77 ], [ %100, %96 ]
  ret i32 %102
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLMarqueeElement10GetMetricsEv(%"struct.blink::HTMLMarqueeElement::Metrics"* noalias nocapture sret, %"class.blink::HTMLMarqueeElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %31 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"struct.blink::HTMLMarqueeElement::Metrics", %"struct.blink::HTMLMarqueeElement::Metrics"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast %"struct.blink::HTMLMarqueeElement::Metrics"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 -1, i64 32, i1 false)
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 12, i32 0, i32 0
  %42 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %1, i64 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink14LocalDOMWindow16getComputedStyleEPNS_7ElementERKN3WTF6StringE(%"class.blink::LocalDOMWindow"* %42, %"class.blink::Element"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #10
  br label %62

62:                                               ; preds = %2, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  %63 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #10
  %64 = bitcast %"class.blink::CSSStyleDeclaration"* %46 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %65 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %65, i64 14
  %67 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %66, align 8
  %68 = call %"class.WTF::StringImpl"* %67(%"class.blink::CSSStyleDeclaration"* %46, %"class.WTF::String"* nonnull dereferenceable(8) %8) #10
  %69 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  %70 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %72, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %74 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %73, i64* %74, align 8
  br label %83

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %81 = bitcast i8** %80 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %81, align 8
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %83

83:                                               ; preds = %75, %71
  %84 = phi i64 [ %82, %75 ], [ %73, %71 ]
  %85 = phi i32 [ %78, %75 ], [ 0, %71 ]
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %85, i32* %86, align 8
  %87 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #10
  %88 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %84, i64* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %90, align 8
  %91 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  br i1 %91, label %92, label %152

92:                                               ; preds = %83
  %93 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #10
  %94 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %64, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %94, i64 14
  %96 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %95, align 8
  %97 = call %"class.WTF::StringImpl"* %96(%"class.blink::CSSStyleDeclaration"* %46, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %98 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  %99 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %101, align 8
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %103 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %102, i64* %103, align 8
  br label %112

104:                                              ; preds = %92
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %110 = bitcast i8** %109 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %110, align 8
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %112

112:                                              ; preds = %104, %100
  %113 = phi i64 [ %111, %104 ], [ %102, %100 ]
  %114 = phi i32 [ %107, %104 ], [ 0, %100 ]
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %114, i32* %115, align 8
  %116 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #10
  %117 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %113, i64* %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8** %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %119, align 8
  %120 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  br i1 %99, label %134, label %121

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #10
  br label %134

134:                                              ; preds = %112, %130, %133
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #10
  br label %151

151:                                              ; preds = %134, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #10
  br label %152

152:                                              ; preds = %83, %151
  %153 = phi i1 [ %120, %151 ], [ false, %83 ]
  br i1 %70, label %167, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #10
  br label %167

167:                                              ; preds = %152, %163, %166
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #10
  br label %184

184:                                              ; preds = %167, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #10
  br i1 %153, label %185, label %187

185:                                              ; preds = %184
  %186 = bitcast %"struct.blink::HTMLMarqueeElement::Metrics"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 32, i1 false)
  br label %622

187:                                              ; preds = %184
  %188 = call i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* %1) #10
  %189 = or i32 %188, 1
  %190 = icmp eq i32 %189, 3
  %191 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %1, i64 0, i32 3, i32 0, i32 0
  %192 = load %"class.blink::Element"*, %"class.blink::Element"** %191, align 8
  %193 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %192) #10
  %194 = call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %35) #10
  br i1 %190, label %262, label %195

195:                                              ; preds = %187
  %196 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #10
  %197 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i64 19) #10
  %198 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #10
  %199 = bitcast %"class.blink::DummyExceptionStateForTesting"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %199) #10
  %200 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %201, align 8
  %202 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %202, align 2
  %203 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 2
  %204 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 5, i32 0, i32 0
  %205 = bitcast %"class.WTF::StringImpl"** %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %205, i8 0, i64 16, i1 false) #10
  %206 = bitcast i8** %203 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %206, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %200, align 8
  %207 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0
  %208 = bitcast %"class.blink::CSSStyleDeclaration"* %193 to void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %209 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %209, i64 18
  %211 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %210, align 8
  call void %211(%"class.blink::CSSStyleDeclaration"* %193, %"class.blink::ExecutionContext"* %194, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %207) #10
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %199) #10
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %195
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #10
  br label %228

228:                                              ; preds = %195, %224, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #10
  %229 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #10
  br label %245

245:                                              ; preds = %228, %241, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #10
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %329, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %329

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #10
  br label %329

262:                                              ; preds = %187
  %263 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #10
  %264 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i64 19) #10
  %265 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #10
  %266 = bitcast %"class.blink::DummyExceptionStateForTesting"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %266) #10
  %267 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %17, i64 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %17, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %268, align 8
  %269 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %17, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %269, align 2
  %270 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %17, i64 0, i32 0, i32 1, i32 2
  %271 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %17, i64 0, i32 0, i32 5, i32 0, i32 0
  %272 = bitcast %"class.WTF::StringImpl"** %271 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 16, i1 false) #10
  %273 = bitcast i8** %270 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %273, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %267, align 8
  %274 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %17, i64 0, i32 0
  %275 = bitcast %"class.blink::CSSStyleDeclaration"* %193 to void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %276 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %275, align 8
  %277 = getelementptr inbounds void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %276, i64 18
  %278 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %277, align 8
  call void %278(%"class.blink::CSSStyleDeclaration"* %193, %"class.blink::ExecutionContext"* %194, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %274) #10
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %266) #10
  %279 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %262
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #10
  br label %295

295:                                              ; preds = %262, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #10
  %296 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #10
  br label %312

312:                                              ; preds = %295, %308, %311
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #10
  %313 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %314, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #10
  br label %329

329:                                              ; preds = %328, %325, %312, %261, %258, %245
  %330 = phi i8* [ %196, %245 ], [ %196, %258 ], [ %196, %261 ], [ %263, %312 ], [ %263, %325 ], [ %263, %328 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %330) #10
  %331 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %332 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %331, i64 0, i32 2, i32 0, i32 0
  %333 = load %"class.blink::Document"*, %"class.blink::Document"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %333, i64 0, i32 12, i32 0, i32 0
  %335 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %334, align 8
  %336 = load %"class.blink::Element"*, %"class.blink::Element"** %191, align 8
  %337 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #10
  %338 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %338, align 8
  %339 = call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink14LocalDOMWindow16getComputedStyleEPNS_7ElementERKN3WTF6StringE(%"class.blink::LocalDOMWindow"* %335, %"class.blink::Element"* %336, %"class.WTF::String"* nonnull dereferenceable(8) %18) #10
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %355, label %342

342:                                              ; preds = %329
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %340) #10
  br label %355

355:                                              ; preds = %329, %351, %354
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #10
  %356 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #10
  %357 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %357) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #10
  %358 = bitcast %"class.blink::CSSStyleDeclaration"* %339 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %359 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %358, align 8
  %360 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %359, i64 14
  %361 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %360, align 8
  %362 = call %"class.WTF::StringImpl"* %361(%"class.blink::CSSStyleDeclaration"* %339, %"class.WTF::String"* nonnull dereferenceable(8) %20) #10
  %363 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %362, %"class.WTF::StringImpl"** %363, align 8
  %364 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %19, i8* null) #10
  store double %364, double* %31, align 8
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %380, label %367

367:                                              ; preds = %355
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  br i1 %371, label %374, label %376

374:                                              ; preds = %367
  %375 = add i32 %373, -1
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %374, %367
  %377 = phi i32 [ %375, %374 ], [ %373, %367 ]
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %376
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %365) #10
  br label %380

380:                                              ; preds = %355, %376, %379
  %381 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %397, label %384

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load atomic i32, i32* %385 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  br i1 %388, label %391, label %393

391:                                              ; preds = %384
  %392 = add i32 %390, -1
  store i32 %392, i32* %389, align 4
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i32 [ %392, %391 ], [ %390, %384 ]
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #10
  br label %397

397:                                              ; preds = %380, %393, %396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %357) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #10
  %398 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %398) #10
  %399 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %399) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #10
  %400 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %358, align 8
  %401 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %400, i64 14
  %402 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %401, align 8
  %403 = call %"class.WTF::StringImpl"* %402(%"class.blink::CSSStyleDeclaration"* %339, %"class.WTF::String"* nonnull dereferenceable(8) %22) #10
  %404 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %403, %"class.WTF::StringImpl"** %404, align 8
  %405 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %21, i8* null) #10
  store double %405, double* %32, align 8
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %397
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #10
  br label %421

421:                                              ; preds = %397, %417, %420
  %422 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %422, align 8
  %424 = icmp eq %"class.WTF::StringImpl"* %423, null
  br i1 %424, label %438, label %425

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 0
  %431 = load i32, i32* %430, align 4
  br i1 %429, label %432, label %434

432:                                              ; preds = %425
  %433 = add i32 %431, -1
  store i32 %433, i32* %430, align 4
  br label %434

434:                                              ; preds = %432, %425
  %435 = phi i32 [ %433, %432 ], [ %431, %425 ]
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %434
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %423) #10
  br label %438

438:                                              ; preds = %421, %434, %437
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %399) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %398) #10
  %439 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %439) #10
  %440 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %440) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #10
  %441 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %64, align 8
  %442 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %441, i64 14
  %443 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %442, align 8
  %444 = call %"class.WTF::StringImpl"* %443(%"class.blink::CSSStyleDeclaration"* %46, %"class.WTF::String"* nonnull dereferenceable(8) %24) #10
  %445 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %444, %"class.WTF::StringImpl"** %445, align 8
  %446 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %23, i8* null) #10
  store double %446, double* %33, align 8
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %445, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %462, label %449

449:                                              ; preds = %438
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 0
  %455 = load i32, i32* %454, align 4
  br i1 %453, label %456, label %458

456:                                              ; preds = %449
  %457 = add i32 %455, -1
  store i32 %457, i32* %454, align 4
  br label %458

458:                                              ; preds = %456, %449
  %459 = phi i32 [ %457, %456 ], [ %455, %449 ]
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %447) #10
  br label %462

462:                                              ; preds = %438, %458, %461
  %463 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %464 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %463, align 8
  %465 = icmp eq %"class.WTF::StringImpl"* %464, null
  br i1 %465, label %479, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load atomic i32, i32* %467 monotonic, align 4
  %469 = and i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 0
  %472 = load i32, i32* %471, align 4
  br i1 %470, label %473, label %475

473:                                              ; preds = %466
  %474 = add i32 %472, -1
  store i32 %474, i32* %471, align 4
  br label %475

475:                                              ; preds = %473, %466
  %476 = phi i32 [ %474, %473 ], [ %472, %466 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %464) #10
  br label %479

479:                                              ; preds = %462, %475, %478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %440) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %439) #10
  %480 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %480) #10
  %481 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %481) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #10
  %482 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %64, align 8
  %483 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %482, i64 14
  %484 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %483, align 8
  %485 = call %"class.WTF::StringImpl"* %484(%"class.blink::CSSStyleDeclaration"* %46, %"class.WTF::String"* nonnull dereferenceable(8) %26) #10
  %486 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %485, %"class.WTF::StringImpl"** %486, align 8
  %487 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %25, i8* null) #10
  store double %487, double* %34, align 8
  %488 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %489 = icmp eq %"class.WTF::StringImpl"* %488, null
  br i1 %489, label %503, label %490

490:                                              ; preds = %479
  %491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %488, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %492 = load atomic i32, i32* %491 monotonic, align 4
  %493 = and i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %488, i64 0, i32 0
  %496 = load i32, i32* %495, align 4
  br i1 %494, label %497, label %499

497:                                              ; preds = %490
  %498 = add i32 %496, -1
  store i32 %498, i32* %495, align 4
  br label %499

499:                                              ; preds = %497, %490
  %500 = phi i32 [ %498, %497 ], [ %496, %490 ]
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %503

502:                                              ; preds = %499
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %488) #10
  br label %503

503:                                              ; preds = %479, %499, %502
  %504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %505 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %504, align 8
  %506 = icmp eq %"class.WTF::StringImpl"* %505, null
  br i1 %506, label %520, label %507

507:                                              ; preds = %503
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 0
  %513 = load i32, i32* %512, align 4
  br i1 %511, label %514, label %516

514:                                              ; preds = %507
  %515 = add i32 %513, -1
  store i32 %515, i32* %512, align 4
  br label %516

516:                                              ; preds = %514, %507
  %517 = phi i32 [ %515, %514 ], [ %513, %507 ]
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %516
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %505) #10
  br label %520

520:                                              ; preds = %503, %516, %519
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %481) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %480) #10
  %521 = call i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* %1) #10
  %522 = or i32 %521, 1
  %523 = icmp eq i32 %522, 3
  %524 = load %"class.blink::Element"*, %"class.blink::Element"** %191, align 8
  %525 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %524) #10
  br i1 %523, label %574, label %526

526:                                              ; preds = %520
  %527 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %527) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #10
  %528 = bitcast %"class.blink::DummyExceptionStateForTesting"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %528) #10
  %529 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 0
  %530 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %530, align 8
  %531 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %531, align 2
  %532 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 1, i32 2
  %533 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0, i32 5, i32 0, i32 0
  %534 = bitcast %"class.WTF::StringImpl"** %533 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %534, i8 0, i64 16, i1 false) #10
  %535 = bitcast i8** %532 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %535, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %529, align 8
  %536 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %28, i64 0, i32 0
  %537 = bitcast %"class.blink::CSSStyleDeclaration"* %525 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %538 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %537, align 8
  %539 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %538, i64 19
  %540 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %539, align 8
  %541 = call %"class.WTF::StringImpl"* %540(%"class.blink::CSSStyleDeclaration"* %525, %"class.WTF::String"* nonnull dereferenceable(8) %27, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %536) #10
  %542 = icmp eq %"class.WTF::StringImpl"* %541, null
  br i1 %542, label %556, label %543

543:                                              ; preds = %526
  %544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %545 = load atomic i32, i32* %544 monotonic, align 4
  %546 = and i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 0, i32 0
  %549 = load i32, i32* %548, align 4
  br i1 %547, label %550, label %552

550:                                              ; preds = %543
  %551 = add i32 %549, -1
  store i32 %551, i32* %548, align 4
  br label %552

552:                                              ; preds = %550, %543
  %553 = phi i32 [ %551, %550 ], [ %549, %543 ]
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %556

555:                                              ; preds = %552
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %541) #10
  br label %556

556:                                              ; preds = %526, %552, %555
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %528) #10
  %557 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %557, align 8
  %559 = icmp eq %"class.WTF::StringImpl"* %558, null
  br i1 %559, label %573, label %560

560:                                              ; preds = %556
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = load atomic i32, i32* %561 monotonic, align 4
  %563 = and i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  br i1 %564, label %567, label %569

567:                                              ; preds = %560
  %568 = add i32 %566, -1
  store i32 %568, i32* %565, align 4
  br label %569

569:                                              ; preds = %567, %560
  %570 = phi i32 [ %568, %567 ], [ %566, %560 ]
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %572, label %573

572:                                              ; preds = %569
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %558) #10
  br label %573

573:                                              ; preds = %556, %569, %572
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %527) #10
  br label %622

574:                                              ; preds = %520
  %575 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %575) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #10
  %576 = bitcast %"class.blink::DummyExceptionStateForTesting"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %576) #10
  %577 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 0
  %578 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %578, align 8
  %579 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %579, align 2
  %580 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 1, i32 2
  %581 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0, i32 5, i32 0, i32 0
  %582 = bitcast %"class.WTF::StringImpl"** %581 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %582, i8 0, i64 16, i1 false) #10
  %583 = bitcast i8** %580 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %583, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %577, align 8
  %584 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %30, i64 0, i32 0
  %585 = bitcast %"class.blink::CSSStyleDeclaration"* %525 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %586 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %585, align 8
  %587 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %586, i64 19
  %588 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %587, align 8
  %589 = call %"class.WTF::StringImpl"* %588(%"class.blink::CSSStyleDeclaration"* %525, %"class.WTF::String"* nonnull dereferenceable(8) %29, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %584) #10
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %604, label %591

591:                                              ; preds = %574
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load atomic i32, i32* %592 monotonic, align 4
  %594 = and i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  br i1 %595, label %598, label %600

598:                                              ; preds = %591
  %599 = add i32 %597, -1
  store i32 %599, i32* %596, align 4
  br label %600

600:                                              ; preds = %598, %591
  %601 = phi i32 [ %599, %598 ], [ %597, %591 ]
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %600
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %589) #10
  br label %604

604:                                              ; preds = %574, %600, %603
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %576) #10
  %605 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %606 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %605, align 8
  %607 = icmp eq %"class.WTF::StringImpl"* %606, null
  br i1 %607, label %621, label %608

608:                                              ; preds = %604
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %606, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = load atomic i32, i32* %609 monotonic, align 4
  %611 = and i32 %610, 2
  %612 = icmp eq i32 %611, 0
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %606, i64 0, i32 0
  %614 = load i32, i32* %613, align 4
  br i1 %612, label %615, label %617

615:                                              ; preds = %608
  %616 = add i32 %614, -1
  store i32 %616, i32* %613, align 4
  br label %617

617:                                              ; preds = %615, %608
  %618 = phi i32 [ %616, %615 ], [ %614, %608 ]
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %621

620:                                              ; preds = %617
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %606) #10
  br label %621

621:                                              ; preds = %604, %617, %620
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %575) #10
  br label %622

622:                                              ; preds = %573, %621, %185
  ret void
}

declare %"class.blink::CSSStyleDeclaration"* @_ZNK5blink14LocalDOMWindow16getComputedStyleEPNS_7ElementERKN3WTF6StringE(%"class.blink::LocalDOMWindow"*, %"class.blink::Element"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink18HTMLMarqueeElement15CreateTransformEd(%"class.blink::HTMLMarqueeElement"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringAppend.1799", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i32 @_ZNK5blink18HTMLMarqueeElement12GetDirectionEv(%"class.blink::HTMLMarqueeElement"* %0) #10
  %6 = or i32 %5, 1
  %7 = icmp eq i32 %6, 3
  %8 = bitcast %"class.WTF::StringAppend.1799"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = select i1 %7, i32 89, i32 88
  %11 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i32 %10) #10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %1) #10
  %14 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::StringImpl"* %13)
  %15 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %14, 0
  %16 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %14, 1
  %17 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #10
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18, %2
  %36 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %35, %37, %52
  call void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EEPKcEC2ES2_S4_(%"class.WTF::StringAppend.1799"* nonnull %3, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #10
  %55 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcEcvS1_Ev(%"class.WTF::StringAppend.1799"* nonnull %3) #10
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %93, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 acquire, align 4
  %60 = and i32 %59, 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %57
  %63 = load atomic i32, i32* %58 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %80

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #10
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  call void @llvm.trap() #10
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %80

78:                                               ; preds = %57
  %79 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %55) #10
  br label %80

80:                                               ; preds = %78, %76, %62
  %81 = phi %"class.WTF::StringImpl"* [ %55, %76 ], [ %55, %62 ], [ %79, %78 ]
  %82 = load atomic i32, i32* %58 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #10
  br label %93

93:                                               ; preds = %54, %89, %92
  %94 = phi %"class.WTF::StringImpl"* [ %81, %89 ], [ %81, %92 ], [ null, %54 ]
  %95 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #10
  br label %111

111:                                              ; preds = %110, %107, %93
  %112 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #10
  br label %128

128:                                              ; preds = %111, %124, %127
  br i1 %36, label %142, label %129

129:                                              ; preds = %128
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %142

142:                                              ; preds = %141, %138, %128
  br i1 %17, label %156, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #10
  br label %156

156:                                              ; preds = %142, %152, %155
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #10
  br label %172

172:                                              ; preds = %156, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret %"class.WTF::StringImpl"* %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.1800", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1800"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1800"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1800", %"class.WTF::StringAppend.1800"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.1800", %"class.WTF::StringAppend.1800"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18HTMLMarqueeElement5TraceEPNS_7VisitorE(%"class.blink::HTMLMarqueeElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.21"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.23"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv) #10
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %25, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7ElementD2Ev(%"class.blink::Element"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #10
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18HTMLMarqueeElementD0Ev(%"class.blink::HTMLMarqueeElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %4) #10
  %5 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #10
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink18HTMLMarqueeElement18GetWrapperTypeInfoEv(%"class.blink::HTMLMarqueeElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink18HTMLMarqueeElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #10
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.1814"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink20OptionalEffectTimingC1Ev(%"class.blink::OptionalEffectTiming"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Animation"*
  %4 = bitcast i8* %1 to void (%"class.blink::Animation"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Animation"*, %"class.blink::Visitor"*)**, void (%"class.blink::Animation"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Animation"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Animation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Animation"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Animation"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLStyleElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLStyleElementEE4CallIJRNS_8DocumentENS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 144
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 144
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -144
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 72, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 144, i64 %48) #10
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLStyleElement"*
  tail call void @_ZN5blink16HTMLStyleElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLStyleElement"* %52, %"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %1) #10
  %53 = getelementptr inbounds i8, i8* %51, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLStyleElement"* %52
}

declare void @_ZN5blink16HTMLStyleElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLStyleElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #10
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLDivElement"*
  tail call void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #10
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLDivElement"* %51
}

declare void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1925"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1925", %"class.WTF::StringTypeAdapter.1925"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1925"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1685"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1685"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1926", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1925"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1925", %"class.WTF::StringTypeAdapter.1925"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1925"* nonnull %3, i8* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1927"* nonnull %34, i8* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1685"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i8* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1926", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1925"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1925", %"class.WTF::StringTypeAdapter.1925"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1925"* nonnull %3, i16* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1927"* nonnull %34, i16* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1685"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i16* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1685"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1925"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1925", %"class.WTF::StringTypeAdapter.1925"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1685", %"class.WTF::StringAppend.1685"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1925"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1685", %"class.WTF::StringAppend.1685"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1925"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1927"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1925"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1927"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13FrameCallbackEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13FrameCallbackEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13FrameCallbackEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13FrameCallbackEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13FrameCallbackEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13FrameCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FrameCallback"*
  %4 = bitcast i8* %1 to void (%"class.blink::FrameCallback"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FrameCallback"*, %"class.blink::Visitor"*)**, void (%"class.blink::FrameCallback"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FrameCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::FrameCallback"*, %"class.blink::Visitor"*)** %5, i64 1
  %7 = load void (%"class.blink::FrameCallback"*, %"class.blink::Visitor"*)*, void (%"class.blink::FrameCallback"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FrameCallback"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13FrameCallbackEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FrameCallback"*
  %3 = bitcast i8* %0 to void (%"class.blink::FrameCallback"*)***
  %4 = load void (%"class.blink::FrameCallback"*)**, void (%"class.blink::FrameCallback"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::FrameCallback"*)*, void (%"class.blink::FrameCallback"*)** %4, i64 2
  %6 = load void (%"class.blink::FrameCallback"*)*, void (%"class.blink::FrameCallback"*)** %5, align 8
  tail call void %6(%"class.blink::FrameCallback"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13FrameCallbackEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13FrameCallback18NameInHeapSnapshotEv(%"class.blink::FrameCallback"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18HTMLMarqueeElement29RequestAnimationFrameCallback5TraceEPNS_7VisitorE(%"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback", %"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.1688"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18HTMLMarqueeElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13FrameCallbackD2Ev(%"class.blink::FrameCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackD0Ev(%"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18HTMLMarqueeElement29RequestAnimationFrameCallback6InvokeEd(%"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"*, double) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback", %"class.blink::HTMLMarqueeElement::RequestAnimationFrameCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::HTMLMarqueeElement"*, %"class.blink::HTMLMarqueeElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %4, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = load %"class.blink::HTMLMarqueeElement"*, %"class.blink::HTMLMarqueeElement"** %3, align 8
  tail call void @_ZN5blink18HTMLMarqueeElement17ContinueAnimationEv(%"class.blink::HTMLMarqueeElement"* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18HTMLMarqueeElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 112
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 120
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv) #10
  br label %24

24:                                               ; preds = %13, %18
  %25 = bitcast i8* %1 to %"class.blink::Element"*
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %25, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StringKeyframeC2Ev(%"class.blink::StringKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #10
  %7 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  store %"class.blink::TimingFunction"* %7, %"class.blink::TimingFunction"** %8, align 8
  %9 = icmp eq %"class.blink::LinearTimingFunction"* %6, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0)) #10
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %17

17:                                               ; preds = %1, %10, %14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14StringKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %18 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::HeapHashMap.1769"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #10
  %20 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::MutableCSSPropertyValueSet"* null, %"class.blink::MutableCSSPropertyValueSet"** %20, align 8
  %21 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #10
  %22 = bitcast i8* %21 to %"class.blink::MutableCSSPropertyValueSet"*
  call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %22, i8 zeroext 0) #10
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = bitcast %"class.blink::MutableCSSPropertyValueSet"** %27 to i8**
  store i8* %21, i8** %28, align 8
  %29 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4
  %30 = bitcast %"class.WTF::HashMap.1776"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 20, i1 false) #10
  %31 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 5
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 6
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 7
  store i8 0, i8* %33, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Keyframe"*
  %3 = bitcast i8* %0 to void (%"class.blink::Keyframe"*)***
  %4 = load void (%"class.blink::Keyframe"*)**, void (%"class.blink::Keyframe"*)*** %3, align 8
  %5 = load void (%"class.blink::Keyframe"*)*, void (%"class.blink::Keyframe"*)** %4, align 8
  tail call void %5(%"class.blink::Keyframe"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1757"*, %"class.blink::StringKeyframe"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1757"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1760"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1757"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1760"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1757"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1760"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1760"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1757"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1757"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1757"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1757"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1760"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1760"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1757"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.1757"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.1757"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.32, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.34, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1760"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1760"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StringKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StringKeyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEENS_11EffectModel18CompositeOperationEPNS_20LinearTimingFunctionEEEEPS3_DpOT_(%"class.blink::HeapVector.1754"* dereferenceable(16), i32* dereferenceable(4), %"class.blink::LinearTimingFunction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #10
  %6 = bitcast i8* %5 to %"class.blink::KeyframeEffectModel"*
  %7 = load i32, i32* %1, align 4
  %8 = bitcast %"class.blink::LinearTimingFunction"** %2 to %"class.blink::TimingFunction"**
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %8, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %3, %11, %15
  %19 = ptrtoint %"class.blink::TimingFunction"* %9 to i64
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #10
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 40
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 48
  %33 = bitcast i8* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 72
  %37 = bitcast i8* %36 to i64*
  store i64 %19, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %5, i64 80
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %5, i64 81
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %5, i64 82
  store i8 0, i8* %40, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = bitcast i8* %21 to %"class.WTF::Vector.1712"*
  %42 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector.1712"* %41, %"class.blink::Member.1760"* %43, i32 %45) #10
  %46 = getelementptr inbounds i8, i8* %5, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::KeyframeEffectModel"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EffectModel"*
  %4 = bitcast i8* %1 to void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)**, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EffectModel"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EffectModel"*
  %3 = bitcast i8* %0 to void (%"class.blink::EffectModel"*)***
  %4 = load void (%"class.blink::EffectModel"*)**, void (%"class.blink::EffectModel"*)*** %3, align 8
  %5 = load void (%"class.blink::EffectModel"*)*, void (%"class.blink::EffectModel"*)** %4, align 8
  tail call void %5(%"class.blink::EffectModel"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBaseD2Ev(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev(%"class.blink::KeyframeEffectModel"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.1943"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0) #10
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HeapHashMap.1719"*, %"class.blink::HeapHashMap.1719"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapHashMap.1719", %"class.blink::HeapHashMap.1719"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair.1725"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable.1723"* %5, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  %7 = icmp ne %"struct.WTF::KeyValuePair.1725"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"* %0) #10
  %3 = xor i1 %2, true
  ret i1 %3
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE(%"class.blink::HeapVector.1709"* noalias sret, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapVector.1709", %"class.blink::HeapVector.1709"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.1712"* %4, %"class.WTF::Vector.1712"* dereferenceable(16) %5) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #4 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModelBase"* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::HeapVector.1754", align 8
  %3 = alloca %"class.blink::StringKeyframe"*, align 8
  %4 = bitcast %"class.blink::HeapVector.1754"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1715"*, %"class.blink::Member.1715"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.1715", %"class.blink::Member.1715"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::StringKeyframe"** %3 to i8*
  %17 = bitcast %"class.blink::StringKeyframe"** %3 to %"class.blink::Keyframe"**
  %18 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %2, i64 0, i32 0
  br label %24

19:                                               ; preds = %51, %1
  %20 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 8
  %21 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10
  %22 = call %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.1754"* nonnull dereferenceable(16) %2, i32* dereferenceable(4) %20, %class.scoped_refptr.60* dereferenceable(8) %21) #10
  %23 = bitcast %"class.blink::KeyframeEffectModel"* %22 to %"class.blink::KeyframeEffectModelBase"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret %"class.blink::KeyframeEffectModelBase"* %23

24:                                               ; preds = %15, %51
  %25 = phi %"class.blink::Member.1715"* [ %9, %15 ], [ %52, %51 ]
  %26 = getelementptr inbounds %"class.blink::Member.1715", %"class.blink::Member.1715"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %26, align 8
  %28 = bitcast %"class.blink::Keyframe"* %27 to %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)***
  %29 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)**, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %29, i64 3
  %31 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %30, align 8
  %32 = call %"class.blink::Keyframe"* %31(%"class.blink::Keyframe"* %27) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store %"class.blink::Keyframe"* %32, %"class.blink::Keyframe"** %17, align 8
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* %6, align 8
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %50, label %36, !prof !2

36:                                               ; preds = %24
  %37 = ptrtoint %"class.blink::Keyframe"* %32 to i64
  %38 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %5, align 8
  %39 = zext i32 %33 to i64
  %40 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %38, i64 %39
  %41 = bitcast %"class.blink::Member.1760"* %40 to i64*
  store atomic i64 %37, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.blink::Keyframe"* %32 to i8*
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #10
  br label %47

47:                                               ; preds = %44, %36
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %51

50:                                               ; preds = %24
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1757"* nonnull %18, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %3) #10
  br label %51

51:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %52 = getelementptr inbounds %"class.blink::Member.1715", %"class.blink::Member.1715"* %25, i64 1
  %53 = icmp eq %"class.blink::Member.1715"* %52, %13
  br i1 %53, label %19, label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InterpolationEffect"*
  tail call void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector.1712"*, %"class.blink::Member.1760"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1712"* %0, i32 %20) #10
  %21 = load i32, i32* %7, align 4
  br label %22

22:                                               ; preds = %13, %3
  %23 = phi i32 [ %21, %13 ], [ %8, %3 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %9, %23
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %22
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = zext i32 %2 to i64
  %40 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %1, i64 %39
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::Member.1715"*, %"class.blink::Member.1715"** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Member.1715", %"class.blink::Member.1715"* %44, i64 %46
  br label %48

48:                                               ; preds = %42, %59
  %49 = phi %"class.blink::Member.1715"* [ %60, %59 ], [ %47, %42 ]
  %50 = phi %"class.blink::Member.1760"* [ %61, %59 ], [ %1, %42 ]
  %51 = bitcast %"class.blink::Member.1760"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member.1715"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %52 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #10
  br label %59

59:                                               ; preds = %56, %48
  %60 = getelementptr inbounds %"class.blink::Member.1715", %"class.blink::Member.1715"* %49, i64 1
  %61 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %50, i64 1
  %62 = icmp eq %"class.blink::Member.1760"* %61, %40
  br i1 %62, label %63, label %48

63:                                               ; preds = %59, %38
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1712"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1715"*, %"class.blink::Member.1715"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1715"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1948"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1948"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1948", %"class.blink::HeapVectorBacking.1948"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1715"*, %"class.blink::Member.1715"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1715"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1715"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1712"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1712"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1712"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1948"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1948"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1715"*, %"class.blink::Member.1715"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1948"* %17, null
  %23 = icmp ne %"class.blink::Member.1715"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1715"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1712"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1948", %"class.blink::HeapVectorBacking.1948"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.1712"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1948", %"class.blink::HeapVectorBacking.1948"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.32, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1948"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.34, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1948"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1948"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1715"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1715", %"class.blink::Member.1715"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1715"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1725"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable.1723"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.1723", %"class.WTF::HashTable.1723"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1725"*, %"struct.WTF::KeyValuePair.1725"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1725"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.1723", %"class.WTF::HashTable.1723"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1725", %"struct.WTF::KeyValuePair.1725"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1725", %"struct.WTF::KeyValuePair.1725"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.1726* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  store i32 0, i32* %20, align 8, !alias.scope !6
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10, !alias.scope !6
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1725", %"struct.WTF::KeyValuePair.1725"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1725", %"struct.WTF::KeyValuePair.1725"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair.1725"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair.1725"* %67
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.1712"*, %"class.WTF::Vector.1712"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.1715"* null, %"class.blink::Member.1715"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %9) #10
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking.1948"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #10
  %13 = ptrtoint %"class.blink::HeapVectorBacking.1948"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking.1948"* %12 to %"class.blink::Member.1715"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking.1948", %"class.blink::HeapVectorBacking.1948"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #10
  %22 = load %"class.blink::Member.1715"*, %"class.blink::Member.1715"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.1715"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.1715"*, %"class.blink::Member.1715"** %28, align 8
  %30 = icmp ne %"class.blink::Member.1715"* %24, null
  %31 = icmp ne %"class.blink::Member.1715"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !5

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.1715"* %24 to i8*
  %37 = bitcast %"class.blink::Member.1715"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #10
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.1715"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.1715"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.1715", %"class.blink::Member.1715"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1757"*, %"class.blink::StringKeyframe"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1757"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1760", %"class.blink::Member.1760"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1760"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.1754"* dereferenceable(16), i32* dereferenceable(4), %class.scoped_refptr.60* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #10
  %6 = bitcast i8* %5 to %"class.blink::KeyframeEffectModel"*
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %class.scoped_refptr.60, %class.scoped_refptr.60* %2, i64 0, i32 0
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %8, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %3, %11, %15
  %19 = ptrtoint %"class.blink::TimingFunction"* %9 to i64
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #10
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 40
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 48
  %33 = bitcast i8* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 72
  %37 = bitcast i8* %36 to i64*
  store i64 %19, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %5, i64 80
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %5, i64 81
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %5, i64 82
  store i8 0, i8* %40, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = bitcast i8* %21 to %"class.WTF::Vector.1712"*
  %42 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Member.1760"*, %"class.blink::Member.1760"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapVector.1754", %"class.blink::HeapVector.1754"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector.1712"* %41, %"class.blink::Member.1760"* %43, i32 %45) #10
  %46 = getelementptr inbounds i8, i8* %5, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::KeyframeEffectModel"* %6
}

declare void @_ZN5blink14KeyframeEffectC1EPNS_7ElementEPNS_23KeyframeEffectModelBaseERKNS_6TimingENS0_8PriorityEPNS_15AnimationEffect13EventDelegateE(%"class.blink::KeyframeEffect"*, %"class.blink::Element"*, %"class.blink::KeyframeEffectModelBase"*, %"struct.blink::Timing"* dereferenceable(80), i32, %"class.blink::AnimationEffect::EventDelegate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EventListener"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EventListener"*
  %3 = bitcast i8* %0 to void (%"class.blink::EventListener"*)***
  %4 = load void (%"class.blink::EventListener"*)**, void (%"class.blink::EventListener"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %4, i64 1
  %6 = load void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %5, align 8
  tail call void %6(%"class.blink::EventListener"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13EventListener18NameInHeapSnapshotEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18HTMLMarqueeElement17AnimationFinishedD0Ev(%"class.blink::HTMLMarqueeElement::AnimationFinished"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18HTMLMarqueeElement17AnimationFinished6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::HTMLMarqueeElement::AnimationFinished"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLMarqueeElement::AnimationFinished", %"class.blink::HTMLMarqueeElement::AnimationFinished"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLMarqueeElement"*, %"class.blink::HTMLMarqueeElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = load %"class.blink::HTMLMarqueeElement"*, %"class.blink::HTMLMarqueeElement"** %4, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %35

13:                                               ; preds = %3
  %14 = ptrtoint %"class.blink::HTMLMarqueeElement"* %9 to i64
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13FrameCallbackEEEPhm(i64 48) #10
  %16 = bitcast i8* %15 to i32 (...)***
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 12
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds i8, i8* %15, i64 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds i8, i8* %15, i64 16
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 24
  store i8 0, i8* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink18HTMLMarqueeElement29RequestAnimationFrameCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %23 = getelementptr inbounds i8, i8* %15, i64 40
  %24 = bitcast i8* %23 to i64*
  store i64 %14, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %15, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = getelementptr inbounds %"class.blink::HTMLMarqueeElement", %"class.blink::HTMLMarqueeElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = bitcast i8* %15 to %"class.blink::FrameCallback"*
  %34 = tail call i32 @_ZN5blink8Document21RequestAnimationFrameEPNS_13FrameCallbackE(%"class.blink::Document"* %32, %"class.blink::FrameCallback"* %33) #10
  store i32 %34, i32* %10, align 8
  br label %35

35:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener14IsEventHandlerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13EventListener10ScriptBodyEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE(%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE(%"class.blink::NativeEventListener"*, %"class.blink::EventListener"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NativeEventListener", %"class.blink::NativeEventListener"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::EventListener"* %3, %1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18HTMLMarqueeElement17AnimationFinished5TraceEPNS_7VisitorE(%"class.blink::HTMLMarqueeElement::AnimationFinished"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMarqueeElement::AnimationFinished", %"class.blink::HTMLMarqueeElement::AnimationFinished"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.1688"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18HTMLMarqueeElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener22IsJSBasedEventListenerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener20IsImageEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13EventListenerD2Ev(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.1800"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1800", %"class.WTF::StringAppend.1800"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.1800", %"class.WTF::StringAppend.1800"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringES1_EEPKcEC2ES2_S4_(%"class.WTF::StringAppend.1799"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %4
  %25 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %46

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 1
  store i8* %3, i8** %45, align 8
  br label %59

46:                                               ; preds = %27, %42
  %47 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 1
  store i8* %3, i8** %47, align 8
  %48 = load atomic i32, i32* %28 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %59

59:                                               ; preds = %44, %58, %55
  br i1 %6, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcEcvS1_Ev(%"class.WTF::StringAppend.1799"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = bitcast %"class.WTF::StringTypeAdapter.1925"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false) #10
  %7 = load i8*, i8** %6, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %2, i8* %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  br label %63

20:                                               ; preds = %1
  %21 = icmp eq %"class.WTF::StringImpl"* %14, null
  %22 = select i1 %21, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  br i1 %26, label %63, label %27

27:                                               ; preds = %20
  %28 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %29 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1799"* %0)
  %30 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %29, i8** nonnull dereferenceable(8) %3) #10
  %31 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPh(%"class.WTF::StringAppend.1799"* %0, i8* %31)
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %99, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %50

40:                                               ; preds = %33
  %41 = zext i32 %39 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #10
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %40
  call void @llvm.trap() #10
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %38, align 4
  br label %50

50:                                               ; preds = %33, %48
  %51 = phi i32 [ %49, %48 ], [ %39, %33 ]
  %52 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %53 = load atomic i32, i32* %34 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %58 = add i32 %51, -1
  store i32 %58, i32* %57, align 4
  br label %59

59:                                               ; preds = %56, %50
  %60 = phi i32 [ %58, %56 ], [ %51, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %99

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #10
  br label %99

63:                                               ; preds = %20, %19
  %64 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %65 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1799"* %0)
  %66 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %65, i16** nonnull dereferenceable(8) %4) #10
  %67 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPDs(%"class.WTF::StringAppend.1799"* %0, i16* %67)
  %68 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %68, label %99, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %86

76:                                               ; preds = %69
  %77 = zext i32 %75 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #10
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %76
  call void @llvm.trap() #10
  unreachable

84:                                               ; preds = %76
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %74, align 4
  br label %86

86:                                               ; preds = %69, %84
  %87 = phi i32 [ %85, %84 ], [ %75, %69 ]
  %88 = ptrtoint %"class.WTF::StringImpl"* %66 to i64
  %89 = load atomic i32, i32* %70 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %94 = add i32 %87, -1
  store i32 %94, i32* %93, align 4
  br label %95

95:                                               ; preds = %92, %86
  %96 = phi i32 [ %94, %92 ], [ %87, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #10
  br label %99

99:                                               ; preds = %98, %95, %63, %62, %59, %27
  %100 = phi i8* [ %28, %27 ], [ %28, %59 ], [ %28, %62 ], [ %64, %63 ], [ %64, %95 ], [ %64, %98 ]
  %101 = phi i64 [ 0, %27 ], [ %52, %59 ], [ %52, %62 ], [ 0, %63 ], [ %88, %95 ], [ %88, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #10
  %102 = inttoptr i64 %101 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE6lengthEv(%"class.WTF::StringAppend.1799"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1925"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1925", %"class.WTF::StringTypeAdapter.1925"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1925"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1800"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1800"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPh(%"class.WTF::StringAppend.1799"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1926", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1926", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1926"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #10
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %19, %17
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1926"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %25
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %25
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %36, %38
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %31, align 8
  store i32 %47, i32* %32, align 8
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1927"* nonnull %49, i8* %1) #10
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0
  %51 = load i32, i32* %13, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1927"* nonnull %50, i8* %53) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1800"* %6) #10
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i8* %56) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringES1_EEPKcE7WriteToEPDs(%"class.WTF::StringAppend.1799"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1926", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1926", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1925", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1925"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.1926"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #10
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %19, %17
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1926"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  %30 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::StringAppend.1799", %"class.WTF::StringAppend.1799"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %25
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %25
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %36, %38
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.1926"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %31, align 8
  store i32 %47, i32* %32, align 8
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1927"* nonnull %49, i16* %1) #10
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1926", %"class.WTF::StringTypeAdapter.1926"* %4, i64 0, i32 0
  %51 = load i32, i32* %13, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1927"* nonnull %50, i16* %53) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1800"* %6) #10
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1925"* nonnull %5, i16* %56) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.1800"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1800", %"class.WTF::StringAppend.1800"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.1800", %"class.WTF::StringAppend.1800"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %31, i8* %32) #10
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!9 = distinct !{!9, !10, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
