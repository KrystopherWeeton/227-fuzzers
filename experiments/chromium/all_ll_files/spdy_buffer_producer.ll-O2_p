; ModuleID = '../../net/spdy/spdy_buffer_producer.cc'
source_filename = "../../net/spdy/spdy_buffer_producer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::SpdyBufferProducer" = type { i32 (...)** }
%"class.net::SimpleBufferProducer" = type { %"class.net::SpdyBufferProducer", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::SpdyBuffer"* }
%"class.net::SpdyBuffer" = type { %class.scoped_refptr, %"class.std::__1::vector", i64 }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"*, %"class.std::__1::__compressed_pair.0" }
%"class.base::RepeatingCallback" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.base::RepeatingCallback"* }

@_ZTVN3net18SpdyBufferProducerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::SpdyBufferProducer"*)* @_ZN3net18SpdyBufferProducerD2Ev to i8*), i8* bitcast (void (%"class.net::SpdyBufferProducer"*)* @_ZN3net18SpdyBufferProducerD0Ev to i8*)] }, align 8
@_ZTVN3net20SimpleBufferProducerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (%"class.net::SpdyBuffer"* (%"class.net::SimpleBufferProducer"*)* @_ZN3net20SimpleBufferProducer13ProduceBufferEv to i8*), i8* bitcast (void (%"class.net::SimpleBufferProducer"*)* @_ZN3net20SimpleBufferProducerD2Ev to i8*), i8* bitcast (void (%"class.net::SimpleBufferProducer"*)* @_ZN3net20SimpleBufferProducerD0Ev to i8*)] }, align 8

@_ZN3net18SpdyBufferProducerD1Ev = hidden unnamed_addr alias void (%"class.net::SpdyBufferProducer"*), void (%"class.net::SpdyBufferProducer"*)* @_ZN3net18SpdyBufferProducerD2Ev
@_ZN3net20SimpleBufferProducerC1ENSt3__110unique_ptrINS_10SpdyBufferENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.net::SimpleBufferProducer"*, %"class.net::SpdyBuffer"*), void (%"class.net::SimpleBufferProducer"*, %"class.net::SpdyBuffer"*)* @_ZN3net20SimpleBufferProducerC2ENSt3__110unique_ptrINS_10SpdyBufferENS1_14default_deleteIS3_EEEE
@_ZN3net20SimpleBufferProducerD1Ev = hidden unnamed_addr alias void (%"class.net::SimpleBufferProducer"*), void (%"class.net::SimpleBufferProducer"*)* @_ZN3net20SimpleBufferProducerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net18SpdyBufferProducerC2Ev(%"class.net::SpdyBufferProducer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SpdyBufferProducer", %"class.net::SpdyBufferProducer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net18SpdyBufferProducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net18SpdyBufferProducerD2Ev(%"class.net::SpdyBufferProducer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net18SpdyBufferProducerD0Ev(%"class.net::SpdyBufferProducer"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20SimpleBufferProducerC2ENSt3__110unique_ptrINS_10SpdyBufferENS1_14default_deleteIS3_EEEE(%"class.net::SimpleBufferProducer"* nocapture, %"class.net::SpdyBuffer"*) unnamed_addr #4 align 2 {
  %3 = ptrtoint %"class.net::SpdyBuffer"* %1 to i64
  %4 = getelementptr inbounds %"class.net::SimpleBufferProducer", %"class.net::SimpleBufferProducer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net20SimpleBufferProducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::SimpleBufferProducer", %"class.net::SimpleBufferProducer"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20SimpleBufferProducerD2Ev(%"class.net::SimpleBufferProducer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::SimpleBufferProducer", %"class.net::SimpleBufferProducer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net20SimpleBufferProducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SimpleBufferProducer", %"class.net::SimpleBufferProducer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::SpdyBuffer"*, %"class.net::SpdyBuffer"** %3, align 8
  store %"class.net::SpdyBuffer"* null, %"class.net::SpdyBuffer"** %3, align 8
  %5 = icmp eq %"class.net::SpdyBuffer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3net10SpdyBufferD1Ev(%"class.net::SpdyBuffer"* nonnull %4) #9
  %7 = bitcast %"class.net::SpdyBuffer"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20SimpleBufferProducerD0Ev(%"class.net::SimpleBufferProducer"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::SimpleBufferProducer", %"class.net::SimpleBufferProducer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net20SimpleBufferProducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SimpleBufferProducer", %"class.net::SimpleBufferProducer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::SpdyBuffer"*, %"class.net::SpdyBuffer"** %3, align 8
  store %"class.net::SpdyBuffer"* null, %"class.net::SpdyBuffer"** %3, align 8
  %5 = icmp eq %"class.net::SpdyBuffer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3net10SpdyBufferD1Ev(%"class.net::SpdyBuffer"* nonnull %4) #9
  %7 = bitcast %"class.net::SpdyBuffer"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.net::SimpleBufferProducer"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.net::SpdyBuffer"* @_ZN3net20SimpleBufferProducer13ProduceBufferEv(%"class.net::SimpleBufferProducer"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::SimpleBufferProducer", %"class.net::SimpleBufferProducer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::SpdyBuffer"*, %"class.net::SpdyBuffer"** %2, align 8
  store %"class.net::SpdyBuffer"* null, %"class.net::SpdyBuffer"** %2, align 8
  ret %"class.net::SpdyBuffer"* %3
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN3net10SpdyBufferD1Ev(%"class.net::SpdyBuffer"*) unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
