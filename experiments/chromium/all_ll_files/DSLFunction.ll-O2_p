; ModuleID = '../../third_party/skia/src/sksl/dsl/DSLFunction.cpp'
source_filename = "../../third_party/skia/src/sksl/dsl/DSLFunction.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::dsl::DSLFunction" = type { i32 (...)**, %"class.SkSL::FunctionDeclaration"* }
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.23", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr", %"class.std::__1::unordered_set", %"struct.SkSL::ASTNode"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.50" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.SkSL::Variable"** }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.30", i32, i32, %"class.std::__1::vector.37", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.39" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%class.SkTArray = type { %"class.SkSL::dsl::DSLVar"**, i64 }
%"class.SkSL::dsl::DSLVar" = type <{ %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.SkSL::Variable"*, i8*, i8*, %"class.SkSL::dsl::DSLExpression", i8, i8, [6 x i8] }>
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.SkSL::Variable"* }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::unique_ptr.57"* }
%"class.SkSL::dsl::PositionInfo" = type <{ i8*, i32, [4 x i8] }>
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set.75" }
%"class.std::__1::unordered_set.75" = type { %"class.std::__1::__hash_table.76" }
%"class.std::__1::__hash_table.76" = type <{ %"class.std::__1::unique_ptr.77", %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.95", [4 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base.80"** }
%"struct.std::__1::__hash_node_base.80" = type { %"struct.std::__1::__hash_node_base.80"* }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__bucket_list_deallocator.82" }
%"class.std::__1::__bucket_list_deallocator.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::__hash_node_base.80" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.100"* }
%"class.std::__1::vector.100" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.101", i8, %"class.std::__1::vector.109", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.std::__1::unique_ptr.103"*, %"class.std::__1::unique_ptr.103"*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::unique_ptr.103"* }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::unique_ptr.111"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.SkSL::dsl::DSLBlock" = type { %class.SkSTArray, %"class.std::__1::shared_ptr" }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.128 }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray.128 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::IRGenerator" = type <{ %"class.SkSL::Context"*, %"struct.SkSL::Program::Inputs", [6 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::shared_ptr", %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::unordered_set", i32, [4 x i8], %"class.std::__1::unordered_set.159", %"class.std::__1::vector.185"*, %"class.std::__1::vector.198"*, %"class.SkSL::Variable"*, %"class.SkSL::Variable"*, i32, i8, [3 x i8] }>
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.SkSL::ASTFile"* }
%"struct.SkSL::ASTFile" = type <{ %"class.std::__1::vector", %"class.SkSL::ASTNode::ID", [4 x i8] }>
%"class.SkSL::IRIntrinsicMap" = type { %"class.std::__1::unordered_map", %"class.SkSL::IRIntrinsicMap"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.135" }
%"class.std::__1::__hash_table.135" = type <{ %"class.std::__1::unique_ptr.136", %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.154", [4 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138", %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.139"** }
%"struct.std::__1::__hash_node_base.139" = type { %"struct.std::__1::__hash_node_base.139"* }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.std::__1::__bucket_list_deallocator.141" }
%"class.std::__1::__bucket_list_deallocator.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base.139" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::unordered_set.159" = type { %"class.std::__1::__hash_table.160" }
%"class.std::__1::__hash_table.160" = type <{ %"class.std::__1::unique_ptr.161", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.180", [4 x i8] }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163", %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__hash_node_base.164"** }
%"struct.std::__1::__hash_node_base.164" = type { %"struct.std::__1::__hash_node_base.164"* }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__bucket_list_deallocator.166" }
%"class.std::__1::__bucket_list_deallocator.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::__hash_node_base.164" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.std::__1::unique_ptr.187"*, %"class.std::__1::unique_ptr.187"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.187"* }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.SkSL::ProgramElement"** }
%"class.SkSL::dsl::DSLWriter" = type { %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.SkSL::Compiler"*, %"class.std::__1::unique_ptr.252", %"struct.SkSL::ProgramConfig"*, %"class.SkSL::ModifiersPool"*, %"class.std::__1::vector.185", %"class.std::__1::vector.198", %"class.SkSL::dsl::ErrorHandler"*, %"struct.SkSL::ProgramSettings", %"class.SkSL::Mangler", %"class.std::__1::stack" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.SkSL::ProgramConfig"* }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.SkSL::ModifiersPool"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr.211", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.213", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.219" }
%"class.std::__1::shared_ptr.211" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.212" }
%"class.std::__1::shared_ptr.212" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.SkSL::IRGenerator"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { i64*, i64*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { i64* }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"class.SkSL::dsl::ErrorHandler" = type { i32 (...)** }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::stack" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.264" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkTArray.226 = type { %"class.SkSL::dsl::DSLWrapper"*, i64 }
%"class.SkSL::dsl::DSLWrapper" = type { %"class.SkSL::dsl::DSLExpression" }
%class.SkSTArray.227 = type { %class.SkAlignedSTStorage.228, %class.SkTArray.229 }
%class.SkAlignedSTStorage.228 = type { [16 x i8] }
%class.SkTArray.229 = type { %"class.std::__1::unique_ptr.44"*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.SkSL::FunctionDeclaration"* }

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL8VariableENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4SkSL18FunctionDefinitionD2Ev = comdat any

$_ZN4SkSL18FunctionDefinitionD0Ev = comdat any

$_ZNK4SkSL18FunctionDefinition11descriptionEv = comdat any

$_ZNK4SkSL18FunctionDefinition5cloneEv = comdat any

$_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZTVN4SkSL18FunctionDefinitionE = comdat any

@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"error: using an already-declared variable as a function parameter\0A\00", align 1
@.str.2 = private unnamed_addr constant [73 x i8] c"error: variables used as function parameters cannot have initial values\0A\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4SkSL18FunctionDefinitionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition5cloneEv to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [2 x i8] c" \00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl11DSLFunction4initERKNS0_7DSLTypeEPKc8SkTArrayIPNS0_6DSLVarELb0EE(%"class.SkSL::dsl::DSLFunction"* nocapture, %"class.SkSL::dsl::DSLType"* dereferenceable(16), i8*, %class.SkTArray* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = alloca %"class.std::__1::vector.55", align 16
  %12 = alloca %"class.std::__1::unique_ptr.57", align 8
  %13 = alloca %"struct.SkSL::Modifiers", align 8
  %14 = alloca %"class.std::__1::vector.55", align 16
  %15 = bitcast %"class.std::__1::vector.55"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %11, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %11, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 24, i1 false) #11
  %19 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = bitcast %"class.std::__1::unique_ptr.57"** %18 to i64*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %4
  %26 = bitcast %"class.std::__1::vector.55"* %11 to i64*
  %27 = shl nuw nsw i64 %22, 3
  %28 = tail call i8* @_Znwm(i64 %27) #12
  %29 = ptrtoint i8* %28 to i64
  %30 = bitcast i8* %28 to %"class.std::__1::unique_ptr.57"*
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %30, i64 %22
  %32 = ptrtoint %"class.std::__1::unique_ptr.57"* %31 to i64
  %33 = bitcast %"class.std::__1::unique_ptr.57"** %17 to i64*
  store i64 %29, i64* %26, align 16
  store i64 %29, i64* %33, align 8
  store i64 %32, i64* %23, align 16
  br label %34

34:                                               ; preds = %25, %4
  %35 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #13
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  %38 = load %"class.SkSL::dsl::DSLVar"**, %"class.SkSL::dsl::DSLVar"*** %37, align 8
  %39 = icmp eq %"class.SkSL::dsl::DSLVar"** %38, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %34
  %41 = lshr i64 %20, 1
  %42 = and i64 %41, 2147483647
  %43 = getelementptr inbounds %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLVar"** %38, i64 %42
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = bitcast <2 x i64>* %9 to i8*
  %47 = bitcast <2 x i64>* %5 to i8*
  %48 = bitcast <2 x i64>* %7 to i8*
  %49 = bitcast %"class.std::__1::unique_ptr.57"* %12 to i8*
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %12, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.57"** %17 to i64*
  br label %60

52:                                               ; preds = %161
  %53 = load i64, i64* %19, align 8
  br label %54

54:                                               ; preds = %34, %52, %40
  %55 = phi i64 [ %53, %52 ], [ %20, %40 ], [ %20, %34 ]
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %164, label %58

58:                                               ; preds = %54
  %59 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %16, align 16
  br label %178

60:                                               ; preds = %45, %161
  %61 = phi %"class.SkSL::dsl::DSLVar"** [ %38, %45 ], [ %162, %161 ]
  %62 = load %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLVar"** %61, align 8
  %63 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %62, i64 0, i32 10
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %60
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #11
  br label %67

67:                                               ; preds = %60, %66
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %62, i64 0, i32 8
  %69 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %68) #11
  %70 = icmp eq %"class.SkSL::Expression"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.SkSL::Expression"* %69 to void (%"class.SkSL::Expression"*)***
  %73 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %73, i64 1
  %75 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %74, align 8
  call void %75(%"class.SkSL::Expression"* nonnull %69) #11
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* null) #11
  br label %76

76:                                               ; preds = %67, %71
  store i8 1, i8* %63, align 1
  %77 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %62, i64 0, i32 9
  store i8 3, i8* %77, align 8
  %78 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %16, align 16
  %79 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %17, align 8
  %80 = icmp eq %"class.std::__1::unique_ptr.57"* %78, %79
  br i1 %80, label %81, label %130

81:                                               ; preds = %76
  %82 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #11
  %83 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %82, i64 0, i32 4
  %84 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %83, align 8
  %85 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %84, i64 0, i32 0
  %86 = load i8, i8* %85, align 8
  %87 = add i8 %86, -3
  %88 = icmp ult i8 %87, 3
  %89 = and i1 %36, %88
  br i1 %89, label %90, label %130

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %62, i64 0, i32 1
  %92 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %91) #11
  %93 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #11
  %94 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %93, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %94, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #11
  %96 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %92, i64 0, i32 0, i32 1, i32 0
  %97 = bitcast i8** %96 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 8
  store <2 x i64> %98, <2 x i64>* %9, align 16
  %99 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %95, i64 0, i32 0, i32 1, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %95, i64 0, i32 0, i32 1, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %10, i8* %100, i64 %102) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #11
  br i1 %103, label %104, label %106

104:                                              ; preds = %90
  %105 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %62, i64 0, i32 0, i32 0, i32 0, i32 6
  store i32 10009, i32* %105, align 8
  br label %130

106:                                              ; preds = %90
  %107 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #11
  %108 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %107, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %109 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %108, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #11
  %110 = bitcast i8** %96 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8
  store <2 x i64> %111, <2 x i64>* %5, align 16
  %112 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %109, i64 0, i32 0, i32 1, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %109, i64 0, i32 0, i32 1, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %113, i64 %115) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #11
  br i1 %116, label %128, label %117

117:                                              ; preds = %106
  %118 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #11
  %119 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %118, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %119, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  %121 = bitcast i8** %96 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8
  store <2 x i64> %122, <2 x i64>* %7, align 16
  %123 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %8, i8* %124, i64 %126) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  br i1 %127, label %128, label %130

128:                                              ; preds = %106, %117
  %129 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %62, i64 0, i32 0, i32 0, i32 0, i32 6
  store i32 10010, i32* %129, align 8
  br label %130

130:                                              ; preds = %81, %117, %128, %104, %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store %"class.SkSL::Variable"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Variable"*), %"class.SkSL::Variable"** %50, align 8
  %131 = call %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter12ParameterVarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152) %62) #11
  store %"class.SkSL::Variable"* %131, %"class.SkSL::Variable"** %50, align 8
  %132 = icmp eq %"class.SkSL::Variable"* %131, null
  %133 = ptrtoint %"class.SkSL::Variable"* %131 to i64
  br i1 %132, label %160, label %134

134:                                              ; preds = %130
  %135 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %17, align 8
  %136 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %18, align 16
  %137 = icmp ult %"class.std::__1::unique_ptr.57"* %135, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %50, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.57"* %135 to i64*
  store i64 %133, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %135, i64 1
  %141 = ptrtoint %"class.std::__1::unique_ptr.57"* %140 to i64
  store i64 %141, i64* %51, align 8
  br label %143

142:                                              ; preds = %134
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL8VariableENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.55"* nonnull %11, %"class.std::__1::unique_ptr.57"* nonnull dereferenceable(8) %12) #11
  br label %143

143:                                              ; preds = %138, %142
  %144 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %144, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %144, align 8
  %146 = icmp eq %"class.SkSL::Statement"* %145, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %143
  %148 = bitcast %"class.SkSL::Statement"* %145 to void (%"class.SkSL::Statement"*)***
  %149 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %149, i64 1
  %151 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %150, align 8
  call void %151(%"class.SkSL::Statement"* nonnull %145) #11
  br label %152

152:                                              ; preds = %147, %143
  %153 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %50, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %50, align 8
  %154 = icmp eq %"class.SkSL::Variable"* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.SkSL::Variable"* %153 to void (%"class.SkSL::Variable"*)***
  %157 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %157, i64 1
  %159 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %158, align 8
  call void %159(%"class.SkSL::Variable"* nonnull %153) #11
  br label %161

160:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %236

161:                                              ; preds = %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  %162 = getelementptr inbounds %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLVar"** %61, i64 1
  %163 = icmp eq %"class.SkSL::dsl::DSLVar"** %162, %43
  br i1 %163, label %52, label %60

164:                                              ; preds = %178, %54
  %165 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #11
  %166 = call dereferenceable(16) %"class.std::__1::shared_ptr"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() #11
  %167 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %166, i64 0, i32 0
  %168 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %167, align 8
  %169 = bitcast %"struct.SkSL::Modifiers"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %169) #11
  %170 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %13, i64 0, i32 0, i32 0
  store i32 0, i32* %170, align 8
  %171 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %13, i64 0, i32 0, i32 1
  %172 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %13, i64 0, i32 0, i32 12, i32 0
  %173 = bitcast i32* %171 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %173, i8 -1, i64 40, i1 false) #11
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %172, align 8
  %174 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %13, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %174, align 8
  %175 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %13, i64 0, i32 0, i32 13
  store i32 0, i32* %175, align 8
  %176 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %13, i64 0, i32 1
  store i32 0, i32* %176, align 8
  %177 = call %"struct.SkSL::Modifiers"* @_ZN4SkSL3dsl9DSLWriter9ModifiersERKNS_9ModifiersE(%"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %13) #11
  br i1 %36, label %197, label %195

178:                                              ; preds = %58, %178
  %179 = phi i64 [ %190, %178 ], [ 0, %58 ]
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %59, i64 %179, i32 0, i32 0, i32 0
  %181 = bitcast %"class.SkSL::Variable"** %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = load %"class.SkSL::dsl::DSLVar"**, %"class.SkSL::dsl::DSLVar"*** %37, align 8
  %184 = shl i64 %179, 32
  %185 = ashr exact i64 %184, 32
  %186 = getelementptr inbounds %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLVar"** %183, i64 %185
  %187 = load %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLVar"** %186, align 8
  %188 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %187, i64 0, i32 5
  %189 = bitcast %"class.SkSL::Variable"** %188 to i64*
  store i64 %182, i64* %189, align 8
  %190 = add nuw nsw i64 %179, 1
  %191 = load i64, i64* %19, align 8
  %192 = lshr i64 %191, 1
  %193 = and i64 %192, 2147483647
  %194 = icmp ult i64 %190, %193
  br i1 %194, label %178, label %164

195:                                              ; preds = %164
  %196 = call i8* @_ZN4SkSL3dsl9DSLWriter4NameEPKc(i8* %2) #11
  br label %197

197:                                              ; preds = %164, %195
  %198 = phi i8* [ %196, %195 ], [ %2, %164 ]
  %199 = call i64 @strlen(i8* %198) #13
  %200 = bitcast %"class.std::__1::vector.55"* %11 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  %202 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %14, i64 0, i32 0, i32 1
  %203 = bitcast %"class.std::__1::vector.55"* %14 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %203, align 16
  %204 = load i64, i64* %23, align 16
  %205 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %206 = bitcast %"class.std::__1::unique_ptr.57"** %205 to i64*
  store i64 %204, i64* %206, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 24, i1 false) #11
  %207 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"* %1) #11
  %208 = call %"class.SkSL::FunctionDeclaration"* @_ZN4SkSL19FunctionDeclaration7ConvertERKNS_7ContextERNS_11SymbolTableEiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorINSA_10unique_ptrINS_8VariableENSA_14default_deleteISD_EEEENSA_9allocatorISG_EEEEPKNS_4TypeEb(%"class.SkSL::Context"* dereferenceable(744) %165, %"class.SkSL::SymbolTable"* dereferenceable(104) %168, i32 -1, %"struct.SkSL::Modifiers"* %177, i8* %198, i64 %199, %"class.std::__1::vector.55"* nonnull %14, %"class.SkSL::Type"* %207, i1 zeroext false) #11
  %209 = getelementptr inbounds %"class.SkSL::dsl::DSLFunction", %"class.SkSL::dsl::DSLFunction"* %0, i64 0, i32 1
  store %"class.SkSL::FunctionDeclaration"* %208, %"class.SkSL::FunctionDeclaration"** %209, align 8
  %210 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %14, i64 0, i32 0, i32 0
  %211 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %210, align 16
  %212 = icmp eq %"class.std::__1::unique_ptr.57"* %211, null
  br i1 %212, label %235, label %213

213:                                              ; preds = %197
  %214 = bitcast %"class.std::__1::unique_ptr.57"* %211 to i8*
  %215 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %202, align 8
  %216 = icmp eq %"class.std::__1::unique_ptr.57"* %215, %211
  br i1 %216, label %233, label %217

217:                                              ; preds = %213, %228
  %218 = phi %"class.std::__1::unique_ptr.57"* [ %219, %228 ], [ %215, %213 ]
  %219 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %218, i64 -1
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %219, i64 0, i32 0, i32 0, i32 0
  %221 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %220, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %220, align 8
  %222 = icmp eq %"class.SkSL::Variable"* %221, null
  br i1 %222, label %228, label %223

223:                                              ; preds = %217
  %224 = bitcast %"class.SkSL::Variable"* %221 to void (%"class.SkSL::Variable"*)***
  %225 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %225, i64 1
  %227 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %226, align 8
  call void %227(%"class.SkSL::Variable"* nonnull %221) #11
  br label %228

228:                                              ; preds = %223, %217
  %229 = icmp eq %"class.std::__1::unique_ptr.57"* %219, %211
  br i1 %229, label %230, label %217

230:                                              ; preds = %228
  %231 = bitcast %"class.std::__1::vector.55"* %14 to i8**
  %232 = load i8*, i8** %231, align 16
  br label %233

233:                                              ; preds = %230, %213
  %234 = phi i8* [ %232, %230 ], [ %214, %213 ]
  store %"class.std::__1::unique_ptr.57"* %211, %"class.std::__1::unique_ptr.57"** %202, align 8
  call void @_ZdlPv(i8* %234) #12
  br label %235

235:                                              ; preds = %197, %233
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %169) #11
  br label %236

236:                                              ; preds = %160, %235
  %237 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %16, align 16
  %238 = icmp eq %"class.std::__1::unique_ptr.57"* %237, null
  br i1 %238, label %261, label %239

239:                                              ; preds = %236
  %240 = bitcast %"class.std::__1::unique_ptr.57"* %237 to i8*
  %241 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %17, align 8
  %242 = icmp eq %"class.std::__1::unique_ptr.57"* %241, %237
  br i1 %242, label %259, label %243

243:                                              ; preds = %239, %254
  %244 = phi %"class.std::__1::unique_ptr.57"* [ %245, %254 ], [ %241, %239 ]
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %244, i64 -1
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %246, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %246, align 8
  %248 = icmp eq %"class.SkSL::Variable"* %247, null
  br i1 %248, label %254, label %249

249:                                              ; preds = %243
  %250 = bitcast %"class.SkSL::Variable"* %247 to void (%"class.SkSL::Variable"*)***
  %251 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %250, align 8
  %252 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %251, i64 1
  %253 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %252, align 8
  call void %253(%"class.SkSL::Variable"* nonnull %247) #11
  br label %254

254:                                              ; preds = %249, %243
  %255 = icmp eq %"class.std::__1::unique_ptr.57"* %245, %237
  br i1 %255, label %256, label %243

256:                                              ; preds = %254
  %257 = bitcast %"class.std::__1::vector.55"* %11 to i8**
  %258 = load i8*, i8** %257, align 16
  br label %259

259:                                              ; preds = %256, %239
  %260 = phi i8* [ %258, %256 ], [ %240, %239 ]
  store %"class.std::__1::unique_ptr.57"* %237, %"class.std::__1::unique_ptr.57"** %17, align 8
  call void @_ZdlPv(i8* %260) #12
  br label %261

261:                                              ; preds = %236, %259
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8*, %"class.SkSL::dsl::PositionInfo"*) local_unnamed_addr #3

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() local_unnamed_addr #3

declare dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL3dsl7DSLType8skslTypeEv(%"class.SkSL::dsl::DSLType"*) local_unnamed_addr #3

declare %"class.SkSL::Variable"* @_ZN4SkSL3dsl9DSLWriter12ParameterVarERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #3

declare %"class.SkSL::FunctionDeclaration"* @_ZN4SkSL19FunctionDeclaration7ConvertERKNS_7ContextERNS_11SymbolTableEiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorINSA_10unique_ptrINS_8VariableENSA_14default_deleteISD_EEEENSA_9allocatorISG_EEEEPKNS_4TypeEb(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::SymbolTable"* dereferenceable(104), i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.55"*, %"class.SkSL::Type"*, i1 zeroext) local_unnamed_addr #3

declare dereferenceable(16) %"class.std::__1::shared_ptr"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() local_unnamed_addr #3

declare %"struct.SkSL::Modifiers"* @_ZN4SkSL3dsl9DSLWriter9ModifiersERKNS_9ModifiersE(%"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #3

declare i8* @_ZN4SkSL3dsl9DSLWriter4NameEPKc(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl11DSLFunction6defineENS0_8DSLBlockE(%"class.SkSL::dsl::DSLFunction"* nocapture readonly, %"class.SkSL::dsl::DSLBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.std::__1::unique_ptr.187", align 8
  %5 = getelementptr inbounds %"class.SkSL::dsl::DSLFunction", %"class.SkSL::dsl::DSLFunction"* %0, i64 0, i32 1
  %6 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %7 = icmp eq %"class.SkSL::FunctionDeclaration"* %6, null
  br i1 %7, label %95, label %8

8:                                                ; preds = %2
  %9 = tail call %"class.SkSL::Statement"* @_ZN4SkSL3dsl8DSLBlock7releaseEv(%"class.SkSL::dsl::DSLBlock"* %1) #11
  %10 = ptrtoint %"class.SkSL::Statement"* %9 to i64
  %11 = tail call dereferenceable(176) %"class.SkSL::IRGenerator"* @_ZN4SkSL3dsl9DSLWriter11IRGeneratorEv() #11
  %12 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  tail call void @_ZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementE(%"class.SkSL::IRGenerator"* %11, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %12, %"class.SkSL::Statement"* %9) #11
  %13 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #11
  %14 = bitcast %"class.SkSL::FunctionDeclaration"** %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 -1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 2, i32* %19, align 4
  %20 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 16
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 24
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 32
  %25 = bitcast i8* %24 to i64*
  store i64 %10, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 40
  %27 = getelementptr inbounds i8, i8* %13, i64 72
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %13, i64 80
  %30 = bitcast i8* %29 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %30, align 8
  %31 = ptrtoint i8* %13 to i64
  %32 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #11
  %33 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %32, i64 0, i32 2
  %34 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %33, align 8
  %35 = bitcast %"class.SkSL::Compiler"* %34 to i32 (%"class.SkSL::Compiler"*)***
  %36 = load i32 (%"class.SkSL::Compiler"*)**, i32 (%"class.SkSL::Compiler"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %36, i64 3
  %38 = load i32 (%"class.SkSL::Compiler"*)*, i32 (%"class.SkSL::Compiler"*)** %37, align 8
  %39 = tail call i32 %38(%"class.SkSL::Compiler"* %34) #11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %65, label %41

41:                                               ; preds = %8
  %42 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #11
  %44 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %43, i64 0, i32 2
  %45 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %44, align 8
  call void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::Compiler"* %45, i1 zeroext false) #11
  %46 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = select i1 %49, i8* %51, i8* %42
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* %52, %"class.SkSL::dsl::PositionInfo"* null) #11
  %53 = load i8, i8* %47, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %41
  %56 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %41, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  %58 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #11
  %59 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %58, i64 0, i32 2
  %60 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %59, align 8
  %61 = bitcast %"class.SkSL::Compiler"* %60 to void (%"class.SkSL::Compiler"*, i32)***
  %62 = load void (%"class.SkSL::Compiler"*, i32)**, void (%"class.SkSL::Compiler"*, i32)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %62, i64 4
  %64 = load void (%"class.SkSL::Compiler"*, i32)*, void (%"class.SkSL::Compiler"*, i32)** %63, align 8
  call void %64(%"class.SkSL::Compiler"* %60, i32 0) #11
  br label %65

65:                                               ; preds = %8, %57
  %66 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %67 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %66, i64 0, i32 1
  %68 = bitcast %"class.SkSL::FunctionDefinition"** %67 to i8**
  store i8* %13, i8** %68, align 8
  %69 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #11
  %70 = bitcast %"class.std::__1::unique_ptr.187"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  %71 = bitcast %"class.std::__1::unique_ptr.187"* %4 to i64*
  store i64 %31, i64* %71, align 8
  %72 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %69, i64 0, i32 6, i32 0, i32 1
  %73 = load %"class.std::__1::unique_ptr.187"*, %"class.std::__1::unique_ptr.187"** %72, align 8
  %74 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %69, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.187"*, %"class.std::__1::unique_ptr.187"** %74, align 8
  %76 = icmp ult %"class.std::__1::unique_ptr.187"* %73, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %78, align 8
  %79 = bitcast %"class.std::__1::unique_ptr.187"* %73 to i64*
  store i64 %31, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %73, i64 1
  %81 = ptrtoint %"class.std::__1::unique_ptr.187"* %80 to i64
  %82 = bitcast %"class.std::__1::unique_ptr.187"** %72 to i64*
  store i64 %81, i64* %82, align 8
  br label %85

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %69, i64 0, i32 6
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.185"* %84, %"class.std::__1::unique_ptr.187"* nonnull dereferenceable(8) %4) #11
  br label %85

85:                                               ; preds = %77, %83
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %4, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %86, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %86, align 8
  %88 = icmp eq %"class.SkSL::ProgramElement"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.SkSL::ProgramElement"* %87 to void (%"class.SkSL::ProgramElement"*)***
  %91 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %91, i64 1
  %93 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %92, align 8
  call void %93(%"class.SkSL::ProgramElement"* nonnull %87) #11
  br label %94

94:                                               ; preds = %85, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  br label %95

95:                                               ; preds = %2, %94
  ret void
}

declare %"class.SkSL::Statement"* @_ZN4SkSL3dsl8DSLBlock7releaseEv(%"class.SkSL::dsl::DSLBlock"*) local_unnamed_addr #3

declare dereferenceable(176) %"class.SkSL::IRGenerator"* @_ZN4SkSL3dsl9DSLWriter11IRGeneratorEv() local_unnamed_addr #3

declare void @_ZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementE(%"class.SkSL::IRGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %"class.SkSL::Statement"*) local_unnamed_addr #3

declare void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* sret, %"class.SkSL::Compiler"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl11DSLFunction4callE8SkTArrayINS0_10DSLWrapperINS0_13DSLExpressionEEELb0EE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLFunction"* nocapture readonly, %class.SkTArray.226* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSTArray.227, align 8
  %5 = alloca %class.SkSTArray.227, align 8
  %6 = getelementptr inbounds %class.SkSTArray.227, %class.SkSTArray.227* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %class.SkSTArray.227, %class.SkSTArray.227* %4, i64 0, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %class.SkSTArray.227, %class.SkSTArray.227* %4, i64 0, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %7 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  store i8* %6, i8** %10, align 8
  store i64 17179869184, i64* %9, align 8
  %11 = bitcast i8* %7 to %class.SkTArray.229*
  %12 = getelementptr inbounds %class.SkTArray.226, %class.SkTArray.226* %2, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %3
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.229* %11, i32 %16, i32 0) #11
  %19 = load i64, i64* %9, align 8
  %20 = shl i64 %19, 32
  %21 = and i64 %20, 4294967296
  %22 = and i64 %19, -4294967297
  %23 = or i64 %21, %22
  br label %24

24:                                               ; preds = %3, %18
  %25 = phi i64 [ %23, %18 ], [ 17179869184, %3 ]
  store i64 %25, i64* %9, align 8
  %26 = getelementptr inbounds %class.SkTArray.226, %class.SkTArray.226* %2, i64 0, i32 0
  %27 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %26, align 8
  %28 = icmp eq %"class.SkSL::dsl::DSLWrapper"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = load i64, i64* %12, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %27, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %7 to %"class.std::__1::unique_ptr.44"**
  br label %106

37:                                               ; preds = %106, %24, %29
  %38 = getelementptr inbounds %"class.SkSL::dsl::DSLFunction", %"class.SkSL::dsl::DSLFunction"* %1, i64 0, i32 1
  %39 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %38, align 8
  %40 = getelementptr inbounds %class.SkSTArray.227, %class.SkSTArray.227* %5, i64 0, i32 0, i32 0, i64 16
  %41 = getelementptr inbounds %class.SkSTArray.227, %class.SkSTArray.227* %5, i64 0, i32 0, i32 0, i64 0
  %42 = getelementptr inbounds %class.SkSTArray.227, %class.SkSTArray.227* %5, i64 0, i32 0, i32 0, i64 24
  %43 = bitcast i8* %42 to i64*
  %44 = bitcast i8* %40 to i8**
  store i8* %41, i8** %44, align 8
  store i64 17179869184, i64* %43, align 8
  %45 = bitcast i8* %40 to %class.SkTArray.229*
  %46 = call dereferenceable(16) %class.SkTArray.229* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.229* %45, %class.SkTArray.229* dereferenceable(16) %11) #11
  %47 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter4CallERKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEELb0EE(%"class.SkSL::FunctionDeclaration"* dereferenceable(96) %39, %class.SkSTArray.227* nonnull %5) #11
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::Expression"* %47) #11
  %48 = load i64, i64* %43, align 8
  %49 = and i64 %48, 4294967294
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %37
  %52 = bitcast i8* %40 to %"class.std::__1::unique_ptr.44"**
  br label %57

53:                                               ; preds = %68, %37
  %54 = phi i64 [ %48, %37 ], [ %70, %68 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %76, label %74

57:                                               ; preds = %68, %51
  %58 = phi i64 [ 0, %51 ], [ %69, %68 ]
  %59 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %52, align 8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 %58, i32 0, i32 0, i32 0
  %61 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %60, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %60, align 8
  %62 = icmp eq %"class.SkSL::Expression"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.SkSL::Expression"* %61 to void (%"class.SkSL::Expression"*)***
  %65 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %65, i64 1
  %67 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, align 8
  call void %67(%"class.SkSL::Expression"* nonnull %61) #11
  br label %68

68:                                               ; preds = %63, %57
  %69 = add nuw nsw i64 %58, 1
  %70 = load i64, i64* %43, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %57, label %53

74:                                               ; preds = %53
  %75 = load i8*, i8** %44, align 8
  call void @_Z7sk_freePv(i8* %75) #11
  br label %76

76:                                               ; preds = %53, %74
  %77 = load i64, i64* %9, align 8
  %78 = and i64 %77, 4294967294
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = bitcast i8* %7 to %"class.std::__1::unique_ptr.44"**
  br label %86

82:                                               ; preds = %97, %76
  %83 = phi i64 [ %77, %76 ], [ %99, %97 ]
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %105, label %103

86:                                               ; preds = %97, %80
  %87 = phi i64 [ 0, %80 ], [ %98, %97 ]
  %88 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %81, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %88, i64 %87, i32 0, i32 0, i32 0
  %90 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %89, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %89, align 8
  %91 = icmp eq %"class.SkSL::Expression"* %90, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.SkSL::Expression"* %90 to void (%"class.SkSL::Expression"*)***
  %94 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %94, i64 1
  %96 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %95, align 8
  call void %96(%"class.SkSL::Expression"* nonnull %90) #11
  br label %97

97:                                               ; preds = %92, %86
  %98 = add nuw nsw i64 %87, 1
  %99 = load i64, i64* %9, align 8
  %100 = lshr i64 %99, 1
  %101 = and i64 %100, 2147483647
  %102 = icmp ult i64 %98, %101
  br i1 %102, label %86, label %82

103:                                              ; preds = %82
  %104 = load i8*, i8** %10, align 8
  call void @_Z7sk_freePv(i8* %104) #11
  br label %105

105:                                              ; preds = %82, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void

106:                                              ; preds = %35, %106
  %107 = phi %"class.SkSL::dsl::DSLWrapper"* [ %27, %35 ], [ %121, %106 ]
  %108 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %107, i64 0, i32 0
  %109 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %108) #11
  %110 = ptrtoint %"class.SkSL::Expression"* %109 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.229* %11, i32 1, i32 1) #11
  %111 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %36, align 8
  %112 = load i64, i64* %9, align 8
  %113 = lshr i64 %112, 1
  %114 = and i64 %113, 2147483647
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %111, i64 %114
  %116 = add i64 %112, 2
  %117 = and i64 %116, 4294967294
  %118 = and i64 %112, -4294967295
  %119 = or i64 %117, %118
  store i64 %119, i64* %9, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.44"* %115 to i64*
  store i64 %110, i64* %120, align 8
  %121 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %107, i64 1
  %122 = icmp eq %"class.SkSL::dsl::DSLWrapper"* %121, %33
  br i1 %122, label %37, label %106
}

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl9DSLWriter4CallERKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEELb0EE(%"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.227*) local_unnamed_addr #3

declare void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::Expression"*) unnamed_addr #3

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL8VariableENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.55"*, %"class.std::__1::unique_ptr.57"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.57"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.55"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.55"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.57"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.57"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.57"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.57"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.57"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.57"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.57"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.57"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.57"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Variable"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.57"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.57"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.57"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.57"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.57"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.57"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.57"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.57"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.57"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.57"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.57"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.57"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.57"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.57"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.57"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.57"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.57"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.57"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.57"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.57"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.57"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.57"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.57"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.57"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.57"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.57"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.57"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.57"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.57"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.57"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.57"*
  %138 = icmp eq %"class.std::__1::unique_ptr.57"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.57"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %142, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %142, align 8
  %144 = icmp eq %"class.SkSL::Variable"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Variable"* %143 to void (%"class.SkSL::Variable"*)***
  %147 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %148, align 8
  tail call void %149(%"class.SkSL::Variable"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.57"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD2Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %13, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #11
  br label %27

27:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD0Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %13, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #11
  br label %27

27:                                               ; preds = %18, %22
  %28 = bitcast %"class.SkSL::FunctionDefinition"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL18FunctionDefinition11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::FunctionDeclaration"* %9) #11
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  %10 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %12, i64 0, i32 0
  %14 = bitcast %"class.SkSL::Statement"* %12 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %15, i64 2
  %17 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %16, align 8
  call void %17(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %13) #11
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #11
  %18 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  %26 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %25, %30
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL18FunctionDefinition5cloneEv(%"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 1
  %8 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  store i64 %9, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 0, i8* %3, align 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %12, align 8
  %14 = bitcast %"class.SkSL::Statement"* %13 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %15 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %15, i64 4
  %17 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %16, align 8
  %18 = tail call %"class.SkSL::Statement"* %17(%"class.SkSL::Statement"* %13) #11
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* %18, %"class.SkSL::Statement"** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4
  %21 = call %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %5, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4, %"class.std::__1::unordered_set"* dereferenceable(40) %20)
  %22 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %23 = icmp eq %"class.SkSL::Statement"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %1
  %25 = bitcast %"class.SkSL::Statement"* %22 to void (%"class.SkSL::Statement"*)***
  %26 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %26, i64 1
  %28 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %27, align 8
  call void %28(%"class.SkSL::Statement"* nonnull %22) #11
  br label %29

29:                                               ; preds = %1, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %30 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %21, i64 0, i32 0
  ret %"class.SkSL::ProgramElement"* %30
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #3

declare void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) unnamed_addr #3

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #3

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::FunctionDeclaration"** dereferenceable(8), i8* dereferenceable(1), %"class.std::__1::unique_ptr"* dereferenceable(8), %"class.std::__1::unordered_set"* dereferenceable(40)) local_unnamed_addr #8 comdat {
  %6 = alloca %"class.std::__1::unordered_set", align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #11
  %8 = bitcast i8* %7 to %"class.SkSL::FunctionDefinition"*
  %9 = load i32, i32* %0, align 4
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %13, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.15"* %18 to i32*
  %20 = bitcast %"class.std::__1::__compressed_pair.15"* %17 to i32*
  %21 = bitcast %"class.std::__1::unordered_set"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false) #11
  %22 = load i32, i32* %19, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* nonnull %16, i64 %24) #11
  %25 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %5
  %29 = ptrtoint %"struct.std::__1::__hash_node_base"* %26 to i64
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ %29, %28 ], [ %36, %30 ]
  %32 = inttoptr i64 %31 to %"struct.std::__1::__hash_node"*
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %32, i64 0, i32 2
  %34 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %16, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33) #11
  %35 = inttoptr i64 %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30

38:                                               ; preds = %30, %5
  %39 = getelementptr inbounds i8, i8* %7, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 %9, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %7, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 2, i32* %42, align 4
  %43 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %7, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 %11, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 %12, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 32
  %48 = bitcast i8* %47 to i64*
  store i64 %15, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %7, i64 40
  %50 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unordered_set"* %6 to i64*
  %52 = load i64, i64* %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %50, align 8
  %53 = bitcast i8* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds i8, i8* %7, i64 48
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %54, align 8
  store i64 %57, i64* %56, align 8
  store i64 0, i64* %54, align 8
  %58 = getelementptr inbounds i8, i8* %7, i64 56
  %59 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__compressed_pair.8"* %59 to i64*
  %61 = bitcast i8* %58 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds i8, i8* %7, i64 64
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %63, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %7, i64 72
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %20, align 8
  store i32 %69, i32* %68, align 8
  %70 = icmp eq i64 %66, 0
  %71 = inttoptr i64 %52 to %"struct.std::__1::__hash_node_base"**
  %72 = inttoptr i64 %62 to %"struct.std::__1::__hash_node_base"*
  br i1 %70, label %93, label %73

73:                                               ; preds = %38
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %72, i64 1
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = call i64 @llvm.ctpop.i64(i64 %57) #11, !range !5
  %78 = icmp ugt i64 %77, 1
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = add i64 %57, -1
  %81 = and i64 %76, %80
  br label %86

82:                                               ; preds = %73
  %83 = icmp ult i64 %76, %57
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %76, %57
  br label %86

86:                                               ; preds = %79, %82, %84
  %87 = phi i64 [ %81, %79 ], [ %85, %84 ], [ %76, %82 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, i64 %87
  %89 = bitcast %"struct.std::__1::__hash_node_base"** %88 to i8**
  store i8* %58, i8** %89, align 8
  %90 = bitcast %"class.std::__1::__compressed_pair.8"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #11
  %91 = getelementptr inbounds i8, i8* %7, i64 80
  %92 = bitcast i8* %91 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %92, align 8
  br label %103

93:                                               ; preds = %38
  %94 = getelementptr inbounds i8, i8* %7, i64 80
  %95 = bitcast i8* %94 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %95, align 8
  %96 = icmp eq i64 %62, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93, %97
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %97 ], [ %72, %93 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i8*
  call void @_ZdlPv(i8* %101) #12
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %102, label %103, label %97

103:                                              ; preds = %97, %86, %93
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %50, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %50, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"** %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = bitcast %"struct.std::__1::__hash_node_base"** %104 to i8*
  call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %103, %106
  ret %"class.SkSL::FunctionDefinition"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !6

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"class.SkSL::FunctionDeclaration"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !5
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.SkSL::FunctionDeclaration"**
  %64 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %63, align 8
  %65 = icmp eq %"class.SkSL::FunctionDeclaration"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !7
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !7
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !7
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !7
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !7
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !5
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !5
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !5
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.185"*, %"class.std::__1::unique_ptr.187"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.185", %"class.std::__1::vector.185"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.187"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.185"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.185"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.185", %"class.std::__1::vector.185"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.187"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.187"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.187"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.187"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.187"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.187"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.187"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.185", %"class.std::__1::vector.185"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.187"*, %"class.std::__1::unique_ptr.187"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.187"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.187"*, %"class.std::__1::unique_ptr.187"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.187"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::ProgramElement"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.187"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.187"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.187"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.187"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !10

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.187"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.187"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.187"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.187"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.187"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.187"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.187"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.187"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.187"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.187"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.187"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.187"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.187"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.187"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.187"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.187"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.187"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.187"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.187"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.187"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.187"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.187"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.187"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.187"*, %"class.std::__1::unique_ptr.187"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.187"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.187"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.187"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.187"*
  %138 = icmp eq %"class.std::__1::unique_ptr.187"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.187"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %142, align 8
  %144 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::ProgramElement"* %143 to void (%"class.SkSL::ProgramElement"*)***
  %147 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %147, i64 1
  %149 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %148, align 8
  tail call void %149(%"class.SkSL::ProgramElement"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.187"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.229*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.229, %class.SkTArray.229* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #11
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.229, %class.SkTArray.229* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.44"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #11
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.229* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #11
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.229* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.229*, %class.SkTArray.229* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.229* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.229, %class.SkTArray.229* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.229, %class.SkTArray.229* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.229, %class.SkTArray.229* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.229* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.229* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.229, %class.SkTArray.229* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.44"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #11
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #11
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.229* %0
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i64 0, i64 65}
!6 = distinct !{!6, !4}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !4}
