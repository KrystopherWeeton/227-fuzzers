; ModuleID = '../../third_party/dawn/src/dawn_native/DawnNative.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/DawnNative.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::Adapter" = type { %"class.dawn_native::AdapterBase"* }
%"class.dawn_native::AdapterBase" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32, [4 x i8] }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.dawn_native::InstanceBase" = type { %class.RefCounted, i8, i8, i8, i32, %"class.dawn_platform::Platform"*, %"class.std::__1::vector.5", %"class.std::__1::vector.13", %"class.dawn_native::ExtensionsInfo", %"class.dawn_native::TogglesInfo", %"class.std::__1::unique_ptr.74" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_platform::Platform" = type { i32 (...)** }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.std::__1::unique_ptr.7"*, %"class.std::__1::unique_ptr.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::unique_ptr.7" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::unique_ptr.7"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.std::__1::unique_ptr.15"*, %"class.std::__1::unique_ptr.15"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.dawn_native::AdapterBase"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr.15"* }
%"class.dawn_native::ExtensionsInfo" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.31", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.47", [4 x i8] }>
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { float }
%"class.dawn_native::TogglesInfo" = type { i8, [7 x i8], %"class.std::__1::unordered_map.50" }
%"class.std::__1::unordered_map.50" = type { %"class.std::__1::__hash_table.51" }
%"class.std::__1::__hash_table.51" = type <{ %"class.std::__1::unique_ptr.52", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.70", [4 x i8] }>
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::__hash_node_base.55"** }
%"struct.std::__1::__hash_node_base.55" = type { %"struct.std::__1::__hash_node_base.55"* }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::__bucket_list_deallocator.57" }
%"class.std::__1::__bucket_list_deallocator.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base.55" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.dawn_native::XlibXcbFunctions"* }
%"class.dawn_native::XlibXcbFunctions" = type opaque
%"struct.dawn_native::AdapterDiscoveryOptionsBase" = type { i32 }
%"class.dawn_native::Instance" = type { %"class.dawn_native::InstanceBase"* }
%"struct.dawn_native::ExternalImageDescriptor" = type <{ i32, [4 x i8], %struct.WGPUTextureDescriptor*, i8, [7 x i8] }>
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%"struct.dawn_native::ExternalImageExportInfo" = type <{ i32, i8, [3 x i8] }>
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUDeviceImpl = type opaque
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUTextureImpl = type opaque
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8** }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.80", %class.Ref.86, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %class.Ref.100, %"class.std::__1::unique_ptr.102", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.86 = type { %class.RefBase.87 }
%class.RefBase.87 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.100 = type { %class.RefBase.101 }
%class.RefBase.101 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.108" }
%"struct.std::__1::array.108" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset.109" }
%"class.std::__1::bitset.109" = type { %"class.std::__1::__bitset.110" }
%"class.std::__1::__bitset.110" = type { i64 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"struct.wgpu::AdapterProperties" = type { %"struct.wgpu::ChainedStruct"*, i32, i32, i8*, i8*, i32, i32 }
%"struct.wgpu::ChainedStruct" = type <{ %"struct.wgpu::ChainedStruct"*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.dawn_native::DeviceDescriptor" = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"struct.dawn_native::InstanceDescriptor" = type { %"struct.dawn_native::ChainedStruct"* }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.dawn_native::Adapter"*, %"class.dawn_native::Adapter"*, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.dawn_native::Adapter"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.dawn_native::ToggleInfo" = type { i8*, i8*, i8* }
%"struct.dawn_native::SubresourceRange" = type { i8, i32, i32, i32, i32 }
%"class.dawn_native::TextureBase" = type { %"class.dawn_native::ObjectBase", i32, %"struct.dawn_native::Format"*, %"struct.dawn_native::Extent3D", i32, i32, i32, i32, %"class.std::__1::vector.130" }
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%"struct.dawn_native::Extent3D" = type { i32, i32, i32 }
%"class.std::__1::vector.130" = type { i64*, i64, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.36" }

@switch.table._ZNK11dawn_native7Adapter14GetBackendTypeEv = private unnamed_addr constant [7 x i32] [i32 2, i32 0, i32 0, i32 1, i32 5, i32 3, i32 4], align 4

@_ZN11dawn_native7AdapterC1Ev = hidden unnamed_addr alias void (%"class.dawn_native::Adapter"*), void (%"class.dawn_native::Adapter"*)* @_ZN11dawn_native7AdapterC2Ev
@_ZN11dawn_native7AdapterC1EPNS_11AdapterBaseE = hidden unnamed_addr alias void (%"class.dawn_native::Adapter"*, %"class.dawn_native::AdapterBase"*), void (%"class.dawn_native::Adapter"*, %"class.dawn_native::AdapterBase"*)* @_ZN11dawn_native7AdapterC2EPNS_11AdapterBaseE
@_ZN11dawn_native7AdapterD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::Adapter"*), void (%"class.dawn_native::Adapter"*)* @_ZN11dawn_native7AdapterD2Ev
@_ZN11dawn_native7AdapterC1ERKS0_ = hidden unnamed_addr alias void (%"class.dawn_native::Adapter"*, %"class.dawn_native::Adapter"*), void (%"class.dawn_native::Adapter"*, %"class.dawn_native::Adapter"*)* @_ZN11dawn_native7AdapterC2ERKS0_
@_ZN11dawn_native27AdapterDiscoveryOptionsBaseC1E15WGPUBackendType = hidden unnamed_addr alias void (%"struct.dawn_native::AdapterDiscoveryOptionsBase"*, i32), void (%"struct.dawn_native::AdapterDiscoveryOptionsBase"*, i32)* @_ZN11dawn_native27AdapterDiscoveryOptionsBaseC2E15WGPUBackendType
@_ZN11dawn_native8InstanceC1Ev = hidden unnamed_addr alias void (%"class.dawn_native::Instance"*), void (%"class.dawn_native::Instance"*)* @_ZN11dawn_native8InstanceC2Ev
@_ZN11dawn_native8InstanceD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::Instance"*), void (%"class.dawn_native::Instance"*)* @_ZN11dawn_native8InstanceD2Ev
@_ZN11dawn_native23ExternalImageDescriptorC1ENS_17ExternalImageTypeE = hidden unnamed_addr alias void (%"struct.dawn_native::ExternalImageDescriptor"*, i32), void (%"struct.dawn_native::ExternalImageDescriptor"*, i32)* @_ZN11dawn_native23ExternalImageDescriptorC2ENS_17ExternalImageTypeE
@_ZN11dawn_native23ExternalImageExportInfoC1ENS_17ExternalImageTypeE = hidden unnamed_addr alias void (%"struct.dawn_native::ExternalImageExportInfo"*, i32), void (%"struct.dawn_native::ExternalImageExportInfo"*, i32)* @_ZN11dawn_native23ExternalImageExportInfoC2ENS_17ExternalImageTypeE

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1200) %struct.DawnProcTable* @_ZN11dawn_native8GetProcsEv() local_unnamed_addr #0 {
  %1 = tail call dereferenceable(1200) %struct.DawnProcTable* @_ZN11dawn_native15GetProcsAutogenEv() #10
  ret %struct.DawnProcTable* %1
}

declare dereferenceable(1200) %struct.DawnProcTable* @_ZN11dawn_native15GetProcsAutogenEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native14GetTogglesUsedEP14WGPUDeviceImpl(%"class.std::__1::vector"* noalias sret, %struct.WGPUDeviceImpl*) local_unnamed_addr #0 {
  %3 = bitcast %struct.WGPUDeviceImpl* %1 to %"class.dawn_native::DeviceBase"*
  tail call void @_ZNK11dawn_native10DeviceBase14GetTogglesUsedEv(%"class.std::__1::vector"* sret %0, %"class.dawn_native::DeviceBase"* %3) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK11dawn_native10DeviceBase14GetTogglesUsedEv(%"class.std::__1::vector"* sret, %"class.dawn_native::DeviceBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native7AdapterC2Ev(%"class.dawn_native::Adapter"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native7AdapterC2EPNS_11AdapterBaseE(%"class.dawn_native::Adapter"* nocapture, %"class.dawn_native::AdapterBase"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  store %"class.dawn_native::AdapterBase"* %1, %"class.dawn_native::AdapterBase"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native7AdapterD2Ev(%"class.dawn_native::Adapter"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  store %"class.dawn_native::AdapterBase"* null, %"class.dawn_native::AdapterBase"** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11dawn_native7AdapterC2ERKS0_(%"class.dawn_native::Adapter"* nocapture, %"class.dawn_native::Adapter"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = bitcast %"class.dawn_native::Adapter"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.dawn_native::Adapter"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %"class.dawn_native::Adapter"* @_ZN11dawn_native7AdapteraSERKS0_(%"class.dawn_native::Adapter"* returned, %"class.dawn_native::Adapter"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.dawn_native::Adapter"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.dawn_native::Adapter"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret %"class.dawn_native::Adapter"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native7Adapter13GetPropertiesEPN4wgpu17AdapterPropertiesE(%"class.dawn_native::Adapter"* nocapture readonly, %"struct.wgpu::AdapterProperties"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %4 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %3, align 8
  %5 = tail call i32 @_ZNK11dawn_native11AdapterBase14GetBackendTypeEv(%"class.dawn_native::AdapterBase"* %4) #10
  %6 = getelementptr inbounds %"struct.wgpu::AdapterProperties", %"struct.wgpu::AdapterProperties"* %1, i64 0, i32 6
  store i32 %5, i32* %6, align 4
  %7 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %3, align 8
  %8 = tail call i32 @_ZNK11dawn_native11AdapterBase14GetAdapterTypeEv(%"class.dawn_native::AdapterBase"* %7) #10
  %9 = getelementptr inbounds %"struct.wgpu::AdapterProperties", %"struct.wgpu::AdapterProperties"* %1, i64 0, i32 5
  store i32 %8, i32* %9, align 8
  %10 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %3, align 8
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11dawn_native11AdapterBase20GetDriverDescriptionEv(%"class.dawn_native::AdapterBase"* %10) #10
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"struct.wgpu::AdapterProperties", %"struct.wgpu::AdapterProperties"* %1, i64 0, i32 4
  store i8* %19, i8** %20, align 8
  %21 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %3, align 8
  %22 = tail call dereferenceable(32) %"struct.dawn_native::PCIInfo"* @_ZNK11dawn_native11AdapterBase10GetPCIInfoEv(%"class.dawn_native::AdapterBase"* %21) #10
  %23 = getelementptr inbounds %"struct.dawn_native::PCIInfo", %"struct.dawn_native::PCIInfo"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"struct.wgpu::AdapterProperties", %"struct.wgpu::AdapterProperties"* %1, i64 0, i32 1
  store i32 %24, i32* %25, align 8
  %26 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %3, align 8
  %27 = tail call dereferenceable(32) %"struct.dawn_native::PCIInfo"* @_ZNK11dawn_native11AdapterBase10GetPCIInfoEv(%"class.dawn_native::AdapterBase"* %26) #10
  %28 = getelementptr inbounds %"struct.dawn_native::PCIInfo", %"struct.dawn_native::PCIInfo"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.wgpu::AdapterProperties", %"struct.wgpu::AdapterProperties"* %1, i64 0, i32 2
  store i32 %29, i32* %30, align 4
  %31 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %3, align 8
  %32 = tail call dereferenceable(32) %"struct.dawn_native::PCIInfo"* @_ZNK11dawn_native11AdapterBase10GetPCIInfoEv(%"class.dawn_native::AdapterBase"* %31) #10
  %33 = getelementptr inbounds %"struct.dawn_native::PCIInfo", %"struct.dawn_native::PCIInfo"* %32, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %41 = select i1 %37, i8* %39, i8* %40
  %42 = getelementptr inbounds %"struct.wgpu::AdapterProperties", %"struct.wgpu::AdapterProperties"* %1, i64 0, i32 3
  store i8* %41, i8** %42, align 8
  ret void
}

declare i32 @_ZNK11dawn_native11AdapterBase14GetBackendTypeEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native11AdapterBase14GetAdapterTypeEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK11dawn_native11AdapterBase20GetDriverDescriptionEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

declare dereferenceable(32) %"struct.dawn_native::PCIInfo"* @_ZNK11dawn_native11AdapterBase10GetPCIInfoEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11dawn_native7Adapter14GetBackendTypeEv(%"class.dawn_native::Adapter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %2, align 8
  %4 = tail call i32 @_ZNK11dawn_native11AdapterBase14GetBackendTypeEv(%"class.dawn_native::AdapterBase"* %3) #10
  %5 = trunc i32 %4 to i8
  %6 = lshr i8 125, %5
  %7 = and i8 %6, 1
  %8 = icmp ne i8 %7, 0
  call void @llvm.assume(i1 %8)
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZNK11dawn_native7Adapter14GetBackendTypeEv, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11dawn_native7Adapter13GetDeviceTypeEv(%"class.dawn_native::Adapter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %2, align 8
  %4 = tail call i32 @_ZNK11dawn_native11AdapterBase14GetAdapterTypeEv(%"class.dawn_native::AdapterBase"* %3) #10
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.dawn_native::PCIInfo"* @_ZNK11dawn_native7Adapter10GetPCIInfoEv(%"class.dawn_native::Adapter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %2, align 8
  %4 = tail call dereferenceable(32) %"struct.dawn_native::PCIInfo"* @_ZNK11dawn_native11AdapterBase10GetPCIInfoEv(%"class.dawn_native::AdapterBase"* %3) #10
  ret %"struct.dawn_native::PCIInfo"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native7Adapter22GetSupportedExtensionsEv(%"class.std::__1::vector"* noalias sret, %"class.dawn_native::Adapter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.dawn_native::ExtensionsSet", align 8
  %4 = bitcast %"struct.dawn_native::ExtensionsSet"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"struct.dawn_native::ExtensionsSet", %"struct.dawn_native::ExtensionsSet"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %1, i64 0, i32 0
  %7 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %6, align 8
  %8 = tail call i64 @_ZNK11dawn_native11AdapterBase22GetSupportedExtensionsEv(%"class.dawn_native::AdapterBase"* %7) #10
  store i64 %8, i64* %5, align 8
  call void @_ZNK11dawn_native13ExtensionsSet24GetEnabledExtensionNamesEv(%"class.std::__1::vector"* sret %0, %"struct.dawn_native::ExtensionsSet"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

declare i64 @_ZNK11dawn_native11AdapterBase22GetSupportedExtensionsEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

declare void @_ZNK11dawn_native13ExtensionsSet24GetEnabledExtensionNamesEv(%"class.std::__1::vector"* sret, %"struct.dawn_native::ExtensionsSet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i48 @_ZNK11dawn_native7Adapter20GetAdapterPropertiesEv(%"class.dawn_native::Adapter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %2, align 8
  %4 = tail call i48 @_ZNK11dawn_native11AdapterBase20GetAdapterPropertiesEv(%"class.dawn_native::AdapterBase"* %3) #10
  ret i48 %4
}

declare i48 @_ZNK11dawn_native11AdapterBase20GetAdapterPropertiesEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native7AdaptercvbEv(%"class.dawn_native::Adapter"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %2, align 8
  %4 = icmp ne %"class.dawn_native::AdapterBase"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.WGPUDeviceImpl* @_ZN11dawn_native7Adapter12CreateDeviceEPKNS_16DeviceDescriptorE(%"class.dawn_native::Adapter"* nocapture readonly, %"struct.dawn_native::DeviceDescriptor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %4 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %3, align 8
  %5 = tail call %"class.dawn_native::DeviceBase"* @_ZN11dawn_native11AdapterBase12CreateDeviceEPKNS_16DeviceDescriptorE(%"class.dawn_native::AdapterBase"* %4, %"struct.dawn_native::DeviceDescriptor"* %1) #10
  %6 = bitcast %"class.dawn_native::DeviceBase"* %5 to %struct.WGPUDeviceImpl*
  ret %struct.WGPUDeviceImpl* %6
}

declare %"class.dawn_native::DeviceBase"* @_ZN11dawn_native11AdapterBase12CreateDeviceEPKNS_16DeviceDescriptorE(%"class.dawn_native::AdapterBase"*, %"struct.dawn_native::DeviceDescriptor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native7Adapter29ResetInternalDeviceForTestingEv(%"class.dawn_native::Adapter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::AdapterBase"*, %"class.dawn_native::AdapterBase"** %2, align 8
  tail call void @_ZN11dawn_native11AdapterBase29ResetInternalDeviceForTestingEv(%"class.dawn_native::AdapterBase"* %3) #10
  ret void
}

declare void @_ZN11dawn_native11AdapterBase29ResetInternalDeviceForTestingEv(%"class.dawn_native::AdapterBase"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native27AdapterDiscoveryOptionsBaseC2E15WGPUBackendType(%"struct.dawn_native::AdapterDiscoveryOptionsBase"* nocapture, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.dawn_native::AdapterDiscoveryOptionsBase", %"struct.dawn_native::AdapterDiscoveryOptionsBase"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native8InstanceC2Ev(%"class.dawn_native::Instance"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %3 = tail call %"class.dawn_native::InstanceBase"* @_ZN11dawn_native12InstanceBase6CreateEPKNS_18InstanceDescriptorE(%"struct.dawn_native::InstanceDescriptor"* null) #10
  store %"class.dawn_native::InstanceBase"* %3, %"class.dawn_native::InstanceBase"** %2, align 8
  ret void
}

declare %"class.dawn_native::InstanceBase"* @_ZN11dawn_native12InstanceBase6CreateEPKNS_18InstanceDescriptorE(%"struct.dawn_native::InstanceDescriptor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native8InstanceD2Ev(%"class.dawn_native::Instance"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %2, align 8
  %4 = icmp eq %"class.dawn_native::InstanceBase"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.dawn_native::InstanceBase", %"class.dawn_native::InstanceBase"* %3, i64 0, i32 0
  tail call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* %6) #10
  store %"class.dawn_native::InstanceBase"* null, %"class.dawn_native::InstanceBase"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native8Instance23DiscoverDefaultAdaptersEv(%"class.dawn_native::Instance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %3 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %2, align 8
  tail call void @_ZN11dawn_native12InstanceBase23DiscoverDefaultAdaptersEv(%"class.dawn_native::InstanceBase"* %3) #10
  ret void
}

declare void @_ZN11dawn_native12InstanceBase23DiscoverDefaultAdaptersEv(%"class.dawn_native::InstanceBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native8Instance16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE(%"class.dawn_native::Instance"* nocapture readonly, %"struct.dawn_native::AdapterDiscoveryOptionsBase"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %4 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %3, align 8
  %5 = tail call zeroext i1 @_ZN11dawn_native12InstanceBase16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE(%"class.dawn_native::InstanceBase"* %4, %"struct.dawn_native::AdapterDiscoveryOptionsBase"* %1) #10
  ret i1 %5
}

declare zeroext i1 @_ZN11dawn_native12InstanceBase16DiscoverAdaptersEPKNS_27AdapterDiscoveryOptionsBaseE(%"class.dawn_native::InstanceBase"*, %"struct.dawn_native::AdapterDiscoveryOptionsBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native8Instance11GetAdaptersEv(%"class.std::__1::vector.123"* noalias sret, %"class.dawn_native::Instance"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.123", %"class.std::__1::vector.123"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.123", %"class.std::__1::vector.123"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.123"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %1, i64 0, i32 0
  %7 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %6, align 8
  %8 = tail call dereferenceable(24) %"class.std::__1::vector.13"* @_ZNK11dawn_native12InstanceBase11GetAdaptersEv(%"class.dawn_native::InstanceBase"* %7) #10
  %9 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.15"*, %"class.std::__1::unique_ptr.15"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %8, i64 0, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.15"*, %"class.std::__1::unique_ptr.15"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.15"* %10, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.dawn_native::Adapter"** %3 to i64*
  %16 = bitcast %"class.std::__1::vector.123"* %0 to i64*
  %17 = bitcast %"class.dawn_native::Adapter"** %4 to i64*
  br label %19

18:                                               ; preds = %288, %2
  ret void

19:                                               ; preds = %291, %14
  %20 = phi i64 [ 0, %14 ], [ %295, %291 ]
  %21 = phi i64 [ 0, %14 ], [ %294, %291 ]
  %22 = phi %"class.dawn_native::Adapter"* [ null, %14 ], [ %293, %291 ]
  %23 = phi %"class.dawn_native::Adapter"* [ null, %14 ], [ %292, %291 ]
  %24 = phi %"class.std::__1::unique_ptr.15"* [ %10, %14 ], [ %289, %291 ]
  %25 = bitcast %"class.std::__1::unique_ptr.15"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult %"class.dawn_native::Adapter"* %23, %22
  br i1 %27, label %28, label %32

28:                                               ; preds = %19
  %29 = bitcast %"class.dawn_native::Adapter"* %23 to i64*
  store i64 %26, i64* %29, align 8
  %30 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 1
  %31 = ptrtoint %"class.dawn_native::Adapter"* %30 to i64
  store i64 %31, i64* %15, align 8
  br label %288

32:                                               ; preds = %19
  %33 = load i64, i64* %16, align 8
  %34 = sub i64 %21, %33
  %35 = ashr exact i64 %34, 3
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 2305843009213693951
  %38 = inttoptr i64 %33 to %"class.dawn_native::Adapter"*
  br i1 %37, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::vector.123"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #11
  unreachable

41:                                               ; preds = %32
  %42 = sub i64 %20, %33
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, 1152921504606846975
  br i1 %44, label %45, label %53

45:                                               ; preds = %41
  %46 = ashr exact i64 %42, 2
  %47 = icmp ult i64 %46, %36
  %48 = select i1 %47, i64 %36, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = icmp ugt i64 %48, 2305843009213693951
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @abort() #11
  unreachable

53:                                               ; preds = %50, %41
  %54 = phi i64 [ %48, %50 ], [ 2305843009213693951, %41 ]
  %55 = shl i64 %54, 3
  %56 = tail call i8* @_Znwm(i64 %55) #12
  %57 = bitcast i8* %56 to %"class.dawn_native::Adapter"*
  br label %58

58:                                               ; preds = %53, %45
  %59 = phi i64 [ %54, %53 ], [ 0, %45 ]
  %60 = phi %"class.dawn_native::Adapter"* [ %57, %53 ], [ null, %45 ]
  %61 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %60, i64 %35
  %62 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %60, i64 %59
  %63 = ptrtoint %"class.dawn_native::Adapter"* %62 to i64
  %64 = bitcast %"class.dawn_native::Adapter"* %61 to i64*
  store i64 %26, i64* %64, align 8
  %65 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %61, i64 1
  %66 = ptrtoint %"class.dawn_native::Adapter"* %65 to i64
  %67 = icmp eq %"class.dawn_native::Adapter"* %23, %38
  br i1 %67, label %265, label %68

68:                                               ; preds = %58
  %69 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  %70 = bitcast %"class.dawn_native::Adapter"* %69 to i8*
  %71 = sub i64 0, %33
  %72 = getelementptr i8, i8* %70, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 4
  br i1 %76, label %188, label %77

77:                                               ; preds = %68
  %78 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  %79 = bitcast %"class.dawn_native::Adapter"* %78 to i8*
  %80 = sub i64 0, %33
  %81 = getelementptr i8, i8* %79, i64 %80
  %82 = ptrtoint i8* %81 to i64
  %83 = and i64 %82, -8
  %84 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %60, i64 -1
  %85 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %84, i64 %35
  %86 = ptrtoint %"class.dawn_native::Adapter"* %85 to i64
  %87 = and i64 %82, -8
  %88 = icmp ugt i64 %87, %86
  %89 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  %90 = ptrtoint %"class.dawn_native::Adapter"* %89 to i64
  %91 = icmp ugt i64 %83, %90
  %92 = or i1 %88, %91
  br i1 %92, label %188, label %93

93:                                               ; preds = %77
  %94 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %60, i64 -1
  %95 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  %96 = bitcast %"class.dawn_native::Adapter"* %95 to i8*
  %97 = sub i64 0, %33
  %98 = getelementptr i8, i8* %96, i64 %97
  %99 = ptrtoint i8* %98 to i64
  %100 = lshr i64 %99, 3
  %101 = sub nsw i64 %35, %100
  %102 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %94, i64 %101
  %103 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  %104 = sub nsw i64 0, %100
  %105 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %103, i64 %104
  %106 = icmp ult %"class.dawn_native::Adapter"* %102, %23
  %107 = icmp ult %"class.dawn_native::Adapter"* %105, %61
  %108 = and i1 %106, %107
  br i1 %108, label %188, label %109

109:                                              ; preds = %93
  %110 = and i64 %75, 4611686018427387900
  %111 = sub nsw i64 0, %110
  %112 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %61, i64 %111
  %113 = sub nsw i64 0, %110
  %114 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 %113
  %115 = add nsw i64 %110, -4
  %116 = lshr exact i64 %115, 2
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 1
  %119 = icmp eq i64 %115, 0
  br i1 %119, label %164, label %120

120:                                              ; preds = %109
  %121 = sub nuw nsw i64 %117, %118
  %122 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %61, i64 -1
  %123 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  %124 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %61, i64 -1
  %125 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  br label %126

126:                                              ; preds = %126, %120
  %127 = phi i64 [ 0, %120 ], [ %161, %126 ]
  %128 = phi i64 [ %121, %120 ], [ %162, %126 ]
  %129 = sub i64 0, %127
  %130 = sub i64 0, %127
  %131 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %122, i64 %129
  %132 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %123, i64 %130
  %133 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %132, i64 -1
  %134 = bitcast %"class.dawn_native::Adapter"* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !2
  %136 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %132, i64 -2
  %137 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %136, i64 -1
  %138 = bitcast %"class.dawn_native::Adapter"* %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 8, !alias.scope !2
  %140 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %131, i64 -1
  %141 = bitcast %"class.dawn_native::Adapter"* %140 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %141, align 8, !alias.scope !5, !noalias !2
  %142 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %131, i64 -2
  %143 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %142, i64 -1
  %144 = bitcast %"class.dawn_native::Adapter"* %143 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %144, align 8, !alias.scope !5, !noalias !2
  %145 = sub nuw nsw i64 -4, %127
  %146 = sub nuw nsw i64 -4, %127
  %147 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %124, i64 %145
  %148 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %125, i64 %146
  %149 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %148, i64 -1
  %150 = bitcast %"class.dawn_native::Adapter"* %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !alias.scope !2
  %152 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %148, i64 -2
  %153 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %152, i64 -1
  %154 = bitcast %"class.dawn_native::Adapter"* %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !2
  %156 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %147, i64 -1
  %157 = bitcast %"class.dawn_native::Adapter"* %156 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %157, align 8, !alias.scope !5, !noalias !2
  %158 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %147, i64 -2
  %159 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %158, i64 -1
  %160 = bitcast %"class.dawn_native::Adapter"* %159 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %160, align 8, !alias.scope !5, !noalias !2
  %161 = add i64 %127, 8
  %162 = add i64 %128, -2
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %126, !llvm.loop !7

164:                                              ; preds = %126, %109
  %165 = phi i64 [ 0, %109 ], [ %161, %126 ]
  %166 = icmp eq i64 %118, 0
  br i1 %166, label %186, label %167

167:                                              ; preds = %164
  %168 = sub i64 0, %165
  %169 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %61, i64 -1
  %170 = sub i64 0, %165
  %171 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %23, i64 -1
  %172 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %169, i64 %168
  %173 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %171, i64 %170
  %174 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %173, i64 -1
  %175 = bitcast %"class.dawn_native::Adapter"* %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 8, !alias.scope !2
  %177 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %173, i64 -2
  %178 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %177, i64 -1
  %179 = bitcast %"class.dawn_native::Adapter"* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8, !alias.scope !2
  %181 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %172, i64 -1
  %182 = bitcast %"class.dawn_native::Adapter"* %181 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %182, align 8, !alias.scope !5, !noalias !2
  %183 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %172, i64 -2
  %184 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %183, i64 -1
  %185 = bitcast %"class.dawn_native::Adapter"* %184 to <2 x i64>*
  store <2 x i64> %180, <2 x i64>* %185, align 8, !alias.scope !5, !noalias !2
  br label %186

186:                                              ; preds = %164, %167
  %187 = icmp eq i64 %75, %110
  br i1 %187, label %260, label %188

188:                                              ; preds = %186, %93, %77, %68
  %189 = phi %"class.dawn_native::Adapter"* [ %61, %93 ], [ %61, %77 ], [ %61, %68 ], [ %112, %186 ]
  %190 = phi %"class.dawn_native::Adapter"* [ %23, %93 ], [ %23, %77 ], [ %23, %68 ], [ %114, %186 ]
  %191 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %190, i64 -1
  %192 = bitcast %"class.dawn_native::Adapter"* %191 to i8*
  %193 = sub i64 0, %33
  %194 = getelementptr i8, i8* %192, i64 %193
  %195 = ptrtoint i8* %194 to i64
  %196 = lshr i64 %195, 3
  %197 = add nuw nsw i64 %196, 1
  %198 = and i64 %197, 7
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %211, label %200

200:                                              ; preds = %188, %200
  %201 = phi %"class.dawn_native::Adapter"* [ %204, %200 ], [ %189, %188 ]
  %202 = phi %"class.dawn_native::Adapter"* [ %205, %200 ], [ %190, %188 ]
  %203 = phi i64 [ %209, %200 ], [ %198, %188 ]
  %204 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %201, i64 -1
  %205 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %202, i64 -1
  %206 = bitcast %"class.dawn_native::Adapter"* %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.dawn_native::Adapter"* %204 to i64*
  store i64 %207, i64* %208, align 8
  %209 = add i64 %203, -1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %200, !llvm.loop !9

211:                                              ; preds = %200, %188
  %212 = phi %"class.dawn_native::Adapter"* [ undef, %188 ], [ %204, %200 ]
  %213 = phi %"class.dawn_native::Adapter"* [ %189, %188 ], [ %204, %200 ]
  %214 = phi %"class.dawn_native::Adapter"* [ %190, %188 ], [ %205, %200 ]
  %215 = icmp ult i8* %194, inttoptr (i64 56 to i8*)
  br i1 %215, label %260, label %216

216:                                              ; preds = %211, %216
  %217 = phi %"class.dawn_native::Adapter"* [ %254, %216 ], [ %213, %211 ]
  %218 = phi %"class.dawn_native::Adapter"* [ %255, %216 ], [ %214, %211 ]
  %219 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -1
  %220 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -1
  %221 = bitcast %"class.dawn_native::Adapter"* %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.dawn_native::Adapter"* %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -2
  %225 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -2
  %226 = bitcast %"class.dawn_native::Adapter"* %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.dawn_native::Adapter"* %224 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -3
  %230 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -3
  %231 = bitcast %"class.dawn_native::Adapter"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.dawn_native::Adapter"* %229 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -4
  %235 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -4
  %236 = bitcast %"class.dawn_native::Adapter"* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.dawn_native::Adapter"* %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -5
  %240 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -5
  %241 = bitcast %"class.dawn_native::Adapter"* %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.dawn_native::Adapter"* %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -6
  %245 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -6
  %246 = bitcast %"class.dawn_native::Adapter"* %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.dawn_native::Adapter"* %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -7
  %250 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -7
  %251 = bitcast %"class.dawn_native::Adapter"* %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.dawn_native::Adapter"* %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %217, i64 -8
  %255 = getelementptr inbounds %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %218, i64 -8
  %256 = bitcast %"class.dawn_native::Adapter"* %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.dawn_native::Adapter"* %254 to i64*
  store i64 %257, i64* %258, align 8
  %259 = icmp eq %"class.dawn_native::Adapter"* %255, %38
  br i1 %259, label %260, label %216, !llvm.loop !11

260:                                              ; preds = %211, %216, %186
  %261 = phi %"class.dawn_native::Adapter"* [ %112, %186 ], [ %212, %211 ], [ %254, %216 ]
  %262 = load i64, i64* %16, align 8
  %263 = load %"class.dawn_native::Adapter"*, %"class.dawn_native::Adapter"** %3, align 8
  %264 = inttoptr i64 %262 to %"class.dawn_native::Adapter"*
  br label %265

265:                                              ; preds = %58, %260
  %266 = phi %"class.dawn_native::Adapter"* [ %264, %260 ], [ %38, %58 ]
  %267 = phi %"class.dawn_native::Adapter"* [ %263, %260 ], [ %23, %58 ]
  %268 = phi %"class.dawn_native::Adapter"* [ %261, %260 ], [ %61, %58 ]
  %269 = phi i64 [ %262, %260 ], [ %33, %58 ]
  %270 = ptrtoint %"class.dawn_native::Adapter"* %268 to i64
  store i64 %270, i64* %16, align 8
  store i64 %66, i64* %15, align 8
  store i64 %63, i64* %17, align 8
  %271 = icmp eq %"class.dawn_native::Adapter"* %267, %266
  br i1 %271, label %284, label %272

272:                                              ; preds = %265
  %273 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %267, i64 -1, i32 0
  %274 = bitcast %"class.dawn_native::AdapterBase"** %273 to i8*
  %275 = sub i64 0, %269
  %276 = getelementptr i8, i8* %274, i64 %275
  %277 = ptrtoint i8* %276 to i64
  %278 = lshr i64 %277, 3
  %279 = xor i64 %278, -1
  %280 = getelementptr %"class.dawn_native::Adapter", %"class.dawn_native::Adapter"* %267, i64 %279
  %281 = bitcast %"class.dawn_native::Adapter"* %280 to i8*
  %282 = add i64 %277, 8
  %283 = and i64 %282, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %281, i8 0, i64 %283, i1 false) #10
  br label %284

284:                                              ; preds = %272, %265
  %285 = icmp eq i64 %269, 0
  br i1 %285, label %288, label %286

286:                                              ; preds = %284
  %287 = inttoptr i64 %269 to i8*
  tail call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %286, %284, %28
  %289 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %24, i64 1
  %290 = icmp eq %"class.std::__1::unique_ptr.15"* %289, %12
  br i1 %290, label %18, label %291

291:                                              ; preds = %288
  %292 = load %"class.dawn_native::Adapter"*, %"class.dawn_native::Adapter"** %3, align 8
  %293 = load %"class.dawn_native::Adapter"*, %"class.dawn_native::Adapter"** %4, align 8
  %294 = ptrtoint %"class.dawn_native::Adapter"* %292 to i64
  %295 = ptrtoint %"class.dawn_native::Adapter"* %293 to i64
  br label %19
}

declare dereferenceable(24) %"class.std::__1::vector.13"* @_ZNK11dawn_native12InstanceBase11GetAdaptersEv(%"class.dawn_native::InstanceBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.dawn_native::ToggleInfo"* @_ZN11dawn_native8Instance13GetToggleInfoEPKc(%"class.dawn_native::Instance"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %4 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %3, align 8
  %5 = tail call %"struct.dawn_native::ToggleInfo"* @_ZN11dawn_native12InstanceBase13GetToggleInfoEPKc(%"class.dawn_native::InstanceBase"* %4, i8* %1) #10
  ret %"struct.dawn_native::ToggleInfo"* %5
}

declare %"struct.dawn_native::ToggleInfo"* @_ZN11dawn_native12InstanceBase13GetToggleInfoEPKc(%"class.dawn_native::InstanceBase"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native8Instance23EnableBackendValidationEb(%"class.dawn_native::Instance"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %6

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %5 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %4, align 8
  tail call void @_ZN11dawn_native12InstanceBase25SetBackendValidationLevelENS_22BackendValidationLevelE(%"class.dawn_native::InstanceBase"* %5, i32 0) #10
  br label %6

6:                                                ; preds = %3, %2
  ret void
}

declare void @_ZN11dawn_native12InstanceBase25SetBackendValidationLevelENS_22BackendValidationLevelE(%"class.dawn_native::InstanceBase"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native8Instance25SetBackendValidationLevelENS_22BackendValidationLevelE(%"class.dawn_native::Instance"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %4 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %3, align 8
  tail call void @_ZN11dawn_native12InstanceBase25SetBackendValidationLevelENS_22BackendValidationLevelE(%"class.dawn_native::InstanceBase"* %4, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native8Instance27EnableBeginCaptureOnStartupEb(%"class.dawn_native::Instance"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %4 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %3, align 8
  tail call void @_ZN11dawn_native12InstanceBase27EnableBeginCaptureOnStartupEb(%"class.dawn_native::InstanceBase"* %4, i1 zeroext %1) #10
  ret void
}

declare void @_ZN11dawn_native12InstanceBase27EnableBeginCaptureOnStartupEb(%"class.dawn_native::InstanceBase"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native8Instance11SetPlatformEPN13dawn_platform8PlatformE(%"class.dawn_native::Instance"* nocapture readonly, %"class.dawn_platform::Platform"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::Instance", %"class.dawn_native::Instance"* %0, i64 0, i32 0
  %4 = load %"class.dawn_native::InstanceBase"*, %"class.dawn_native::InstanceBase"** %3, align 8
  tail call void @_ZN11dawn_native12InstanceBase11SetPlatformEPN13dawn_platform8PlatformE(%"class.dawn_native::InstanceBase"* %4, %"class.dawn_platform::Platform"* %1) #10
  ret void
}

declare void @_ZN11dawn_native12InstanceBase11SetPlatformEPN13dawn_platform8PlatformE(%"class.dawn_native::InstanceBase"*, %"class.dawn_platform::Platform"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.WGPUInstanceImpl* @_ZNK11dawn_native8Instance3GetEv(%"class.dawn_native::Instance"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = bitcast %"class.dawn_native::Instance"* %0 to %struct.WGPUInstanceImpl**
  %3 = load %struct.WGPUInstanceImpl*, %struct.WGPUInstanceImpl** %2, align 8
  ret %struct.WGPUInstanceImpl* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN11dawn_native27GetLazyClearCountForTestingEP14WGPUDeviceImpl(%struct.WGPUDeviceImpl*) local_unnamed_addr #0 {
  %2 = bitcast %struct.WGPUDeviceImpl* %0 to %"class.dawn_native::DeviceBase"*
  %3 = tail call i64 @_ZN11dawn_native10DeviceBase27GetLazyClearCountForTestingEv(%"class.dawn_native::DeviceBase"* %2) #10
  ret i64 %3
}

declare i64 @_ZN11dawn_native10DeviceBase27GetLazyClearCountForTestingEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN11dawn_native36GetDeprecationWarningCountForTestingEP14WGPUDeviceImpl(%struct.WGPUDeviceImpl*) local_unnamed_addr #0 {
  %2 = bitcast %struct.WGPUDeviceImpl* %0 to %"class.dawn_native::DeviceBase"*
  %3 = tail call i64 @_ZN11dawn_native10DeviceBase36GetDeprecationWarningCountForTestingEv(%"class.dawn_native::DeviceBase"* %2) #10
  ret i64 %3
}

declare i64 @_ZN11dawn_native10DeviceBase36GetDeprecationWarningCountForTestingEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native31IsTextureSubresourceInitializedEP15WGPUTextureImpljjjj17WGPUTextureAspect(%struct.WGPUTextureImpl*, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %8 = bitcast %struct.WGPUTextureImpl* %0 to %"class.dawn_native::TextureBase"*
  %9 = tail call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"* %8) #10
  %10 = tail call zeroext i8 @_ZN11dawn_native13ConvertAspectERKNS_6FormatEN4wgpu13TextureAspectE(%"struct.dawn_native::Format"* dereferenceable(84) %9, i32 %5) #10
  %11 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 20, i1 false)
  %12 = zext i32 %4 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i32 %3 to i64
  %15 = or i64 %13, %14
  %16 = zext i32 %2 to i64
  %17 = shl nuw i64 %16, 32
  %18 = zext i32 %1 to i64
  %19 = or i64 %17, %18
  call void @_ZN11dawn_native16SubresourceRangeC1ENS_6AspectENS_18FirstAndCountRangeIjEES3_(%"struct.dawn_native::SubresourceRange"* nonnull %7, i8 zeroext %10, i64 %15, i64 %19) #10
  %20 = call zeroext i1 @_ZNK11dawn_native11TextureBase31IsSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::TextureBase"* %8, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #10
  ret i1 %20
}

declare zeroext i8 @_ZN11dawn_native13ConvertAspectERKNS_6FormatEN4wgpu13TextureAspectE(%"struct.dawn_native::Format"* dereferenceable(84), i32) local_unnamed_addr #1

declare dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"*) local_unnamed_addr #1

declare void @_ZN11dawn_native16SubresourceRangeC1ENS_6AspectENS_18FirstAndCountRangeIjEES3_(%"struct.dawn_native::SubresourceRange"*, i8 zeroext, i64, i64) unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native11TextureBase31IsSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::TextureBase"*, %"struct.dawn_native::SubresourceRange"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native25GetProcMapNamesForTestingEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 {
  tail call void @_ZN11dawn_native33GetProcMapNamesForTestingInternalEv(%"class.std::__1::vector"* sret %0) #10
  ret void
}

declare void @_ZN11dawn_native33GetProcMapNamesForTestingInternalEv(%"class.std::__1::vector"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native10DeviceTickEP14WGPUDeviceImpl(%struct.WGPUDeviceImpl*) local_unnamed_addr #0 {
  %2 = bitcast %struct.WGPUDeviceImpl* %0 to %"class.dawn_native::DeviceBase"*
  %3 = tail call zeroext i1 @_ZN11dawn_native10DeviceBase7APITickEv(%"class.dawn_native::DeviceBase"* %2) #10
  ret i1 %3
}

declare zeroext i1 @_ZN11dawn_native10DeviceBase7APITickEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native23ExternalImageDescriptorC2ENS_17ExternalImageTypeE(%"struct.dawn_native::ExternalImageDescriptor"* nocapture, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.dawn_native::ExternalImageDescriptor", %"struct.dawn_native::ExternalImageDescriptor"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native23ExternalImageExportInfoC2ENS_17ExternalImageTypeE(%"struct.dawn_native::ExternalImageExportInfo"* nocapture, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.dawn_native::ExternalImageExportInfo", %"struct.dawn_native::ExternalImageExportInfo"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @llvm.assume(i1) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
