; ModuleID = '../../third_party/pdfium/core/fxcodec/jbig2/JBig2_SddProc.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/jbig2/JBig2_SddProc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CJBig2_SDDProc = type <{ i8, i8, i8, i8, i32, i32, i32, %class.CJBig2_Image**, %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", [8 x i8], [4 x i8], [4 x i8] }>
%class.CJBig2_Image = type <{ %"class.fxcrt::MaybeOwned", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.fxcrt::UnownedPtr.1" = type { %class.CJBig2_HuffmanTable* }
%class.CJBig2_HuffmanTable = type { i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.5", %"class.std::__1::vector.5" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.JBig2HuffmanCode*, %struct.JBig2HuffmanCode*, %"class.std::__1::__compressed_pair.2" }
%struct.JBig2HuffmanCode = type { i32, i32 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %struct.JBig2HuffmanCode* }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { i32*, i32*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i32* }
%class.CJBig2_SymbolDict = type { %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::vector.22" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %class.JBig2ArithCtx*, %class.JBig2ArithCtx*, %"class.std::__1::__compressed_pair.17" }
%class.JBig2ArithCtx = type { i8, i32 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.JBig2ArithCtx* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.CJBig2_Image* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr.24"* }
%class.CJBig2_ArithDecoder = type { i8, i8, i8, i32, i32, i32, %"class.fxcrt::UnownedPtr.36" }
%"class.fxcrt::UnownedPtr.36" = type { %class.CJBig2_BitStream* }
%class.CJBig2_BitStream = type <{ %"class.pdfium::span", i32, i32, i32, [4 x i8] }>
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.37", i64 }
%"class.fxcrt::UnownedPtr.37" = type { i8* }
%"class.std::__1::vector.38" = type { i64*, i64, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %class.CJBig2_Image**, %class.CJBig2_Image**, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.CJBig2_Image** }
%struct.JBig2IntDecoderState = type { %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.82", %"class.fxcrt::UnownedPtr.83" }
%"class.fxcrt::UnownedPtr.82" = type { %class.CJBig2_ArithIntDecoder* }
%class.CJBig2_ArithIntDecoder = type { %"class.std::__1::vector.15" }
%"class.fxcrt::UnownedPtr.83" = type { %class.CJBig2_ArithIaidDecoder* }
%class.CJBig2_ArithIaidDecoder = type <{ %"class.std::__1::vector.15", i8, [7 x i8] }>
%class.CJBig2_GRDProc = type <{ i8, i8, i8, i8, i32, i32, [4 x i8], %"class.fxcrt::UnownedPtr.66", [8 x i8], i32, [4 x i8], i8*, i32, i16, [2 x i8], i32, %struct.FX_RECT, [4 x i8] }>
%"class.fxcrt::UnownedPtr.66" = type { %class.CJBig2_Image* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CJBig2_TRDProc = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %class.CJBig2_Image**, i32, i32, %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", %"class.fxcrt::UnownedPtr.1", [4 x i8], [4 x i8] }>
%class.CJBig2_GRRDProc = type <{ i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8], %"class.fxcrt::UnownedPtr.66", [4 x i8], [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i32*, i32*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i32* }
%class.CJBig2_HuffmanDecoder = type { %"class.fxcrt::UnownedPtr.36" }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIP12CJBig2_ImageNS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

@_ZN14CJBig2_SDDProcC1Ev = hidden unnamed_addr alias void (%class.CJBig2_SDDProc*), void (%class.CJBig2_SDDProc*)* @_ZN14CJBig2_SDDProcC2Ev
@_ZN14CJBig2_SDDProcD1Ev = hidden unnamed_addr alias void (%class.CJBig2_SDDProc*), void (%class.CJBig2_SDDProc*)* @_ZN14CJBig2_SDDProcD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14CJBig2_SDDProcC2Ev(%class.CJBig2_SDDProc* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 8, i32 0
  %3 = bitcast %class.CJBig2_HuffmanTable** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CJBig2_SDDProcD2Ev(%class.CJBig2_SDDProc* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_SymbolDict* @_ZN14CJBig2_SDDProc11DecodeArithEP19CJBig2_ArithDecoderPNSt3__16vectorI13JBig2ArithCtxNS2_9allocatorIS4_EEEES8_(%class.CJBig2_SDDProc* readonly, %class.CJBig2_ArithDecoder*, %"class.std::__1::vector.15"* nocapture readonly, %"class.std::__1::vector.15"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.24", align 8
  %6 = alloca %"class.std::__1::unique_ptr.24", align 8
  %7 = alloca %"class.std::__1::vector.22", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::vector.38", align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::__1::vector.44", align 8
  %16 = alloca %struct.JBig2IntDecoderState, align 8
  %17 = alloca i32, align 4
  %18 = bitcast %"class.std::__1::vector.22"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #12
  %21 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #12
  store i32 -1431655766, i32* %8, align 4
  %22 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #12
  store i32 -1431655766, i32* %9, align 4
  %23 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #12
  store i32 -1431655766, i32* %10, align 4
  %24 = bitcast %"class.std::__1::vector.38"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %11, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #12
  %26 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #12
  store i32 -1431655766, i32* %12, align 4
  %27 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #12
  store i32 -1431655766, i32* %13, align 4
  %28 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #12
  store i32 -1431655766, i32* %14, align 4
  %29 = bitcast %"class.std::__1::vector.44"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %15, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %15, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #12
  %32 = tail call i8* @_Znwm(i64 24) #13
  %33 = bitcast i8* %32 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %33) #12
  %34 = tail call i8* @_Znwm(i64 24) #13
  %35 = bitcast i8* %34 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %35) #12
  %36 = tail call i8* @_Znwm(i64 24) #13
  %37 = bitcast i8* %36 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %37) #12
  %38 = tail call i8* @_Znwm(i64 24) #13
  %39 = bitcast i8* %38 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %39) #12
  %40 = tail call i8* @_Znwm(i64 24) #13
  %41 = bitcast i8* %40 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %41) #12
  %42 = tail call i8* @_Znwm(i64 24) #13
  %43 = bitcast i8* %42 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %43) #12
  %44 = tail call i8* @_Znwm(i64 24) #13
  %45 = bitcast i8* %44 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %45) #12
  %46 = tail call i8* @_Znwm(i64 24) #13
  %47 = bitcast i8* %46 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %47) #12
  %48 = tail call i8* @_Znwm(i64 24) #13
  %49 = bitcast i8* %48 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %49) #12
  %50 = tail call i8* @_Znwm(i64 24) #13
  %51 = bitcast i8* %50 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %51) #12
  %52 = tail call i8* @_Znwm(i64 24) #13
  %53 = bitcast i8* %52 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %53) #12
  %54 = tail call i8* @_Znwm(i64 24) #13
  %55 = bitcast i8* %54 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %55) #12
  %56 = tail call i8* @_Znwm(i64 24) #13
  %57 = bitcast i8* %56 to %class.CJBig2_ArithIntDecoder*
  tail call void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder* nonnull %57) #12
  %58 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, %59
  br label %63

63:                                               ; preds = %63, %4
  %64 = phi i32 [ 0, %4 ], [ %67, %63 ]
  %65 = shl i32 1, %64
  %66 = icmp ult i32 %65, %62
  %67 = add i32 %64, 1
  br i1 %66, label %63, label %68

68:                                               ; preds = %63
  %69 = trunc i32 %64 to i8
  %70 = tail call i8* @_Znwm(i64 32) #13
  %71 = bitcast i8* %70 to %class.CJBig2_ArithIaidDecoder*
  tail call void @_ZN23CJBig2_ArithIaidDecoderC1Eh(%class.CJBig2_ArithIaidDecoder* nonnull %71, i8 zeroext %69) #12
  %72 = load i32, i32* %60, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %497, label %74

74:                                               ; preds = %68
  %75 = zext i32 %72 to i64
  call void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.22"* nonnull %7, i64 %75) #12
  %76 = load i32, i32* %60, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %497, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 1
  %80 = bitcast i32* %17 to i8*
  %81 = bitcast %class.CJBig2_Image*** %31 to i64*
  %82 = bitcast %"class.std::__1::vector.44"* %15 to i64*
  %83 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 7
  %84 = bitcast %class.CJBig2_Image*** %83 to i8**
  %85 = bitcast %"class.std::__1::vector.44"* %15 to i8**
  %86 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 2
  %87 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 0
  %88 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 1
  %89 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 2
  %90 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 3
  %91 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %3, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 0
  %93 = bitcast %struct.JBig2IntDecoderState* %16 to i8*
  %94 = bitcast %struct.JBig2IntDecoderState* %16 to i8**
  %95 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 1, i32 0
  %96 = bitcast %class.CJBig2_ArithIntDecoder** %95 to i8**
  %97 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 2, i32 0
  %98 = bitcast %class.CJBig2_ArithIntDecoder** %97 to i8**
  %99 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 3, i32 0
  %100 = bitcast %class.CJBig2_ArithIntDecoder** %99 to i8**
  %101 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 4, i32 0
  %102 = bitcast %class.CJBig2_ArithIntDecoder** %101 to i8**
  %103 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 5, i32 0
  %104 = bitcast %class.CJBig2_ArithIntDecoder** %103 to i8**
  %105 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 6, i32 0
  %106 = bitcast %class.CJBig2_ArithIntDecoder** %105 to i8**
  %107 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 7, i32 0
  %108 = bitcast %class.CJBig2_ArithIntDecoder** %107 to i8**
  %109 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 8, i32 0
  %110 = bitcast %class.CJBig2_ArithIntDecoder** %109 to i8**
  %111 = getelementptr inbounds %struct.JBig2IntDecoderState, %struct.JBig2IntDecoderState* %16, i64 0, i32 9, i32 0
  %112 = bitcast %class.CJBig2_ArithIaidDecoder** %111 to i8**
  %113 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 3
  %114 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 0
  %115 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 1
  %116 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 2
  %117 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 3
  %118 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 4
  %119 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 5
  %120 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 6
  %121 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 12, i64 7
  %122 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %2, i64 0, i32 0, i32 0
  br label %129

123:                                              ; preds = %164
  %124 = trunc i64 %165 to i32
  br label %125

125:                                              ; preds = %494, %123, %136
  %126 = phi i32 [ %131, %136 ], [ %124, %123 ], [ %495, %494 ]
  %127 = load i32, i32* %60, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %129, label %497

129:                                              ; preds = %78, %125
  %130 = phi i32 [ 0, %78 ], [ %134, %125 ]
  %131 = phi i32 [ 0, %78 ], [ %126, %125 ]
  %132 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %33, %class.CJBig2_ArithDecoder* %1, i32* nonnull %8) #12
  %133 = load i32, i32* %8, align 4
  %134 = add i32 %133, %130
  %135 = icmp ugt i32 %134, 65535
  br i1 %135, label %664, label %136

136:                                              ; preds = %129
  %137 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %35, %class.CJBig2_ArithDecoder* %1, i32* nonnull %9) #12
  br i1 %137, label %138, label %125

138:                                              ; preds = %136
  %139 = icmp eq i32 %134, 0
  br label %140

140:                                              ; preds = %138, %494
  %141 = phi i32 [ %131, %138 ], [ %495, %494 ]
  %142 = phi i32 [ 0, %138 ], [ %152, %494 ]
  %143 = zext i32 %141 to i64
  br label %144

144:                                              ; preds = %140, %164
  %145 = phi i64 [ %143, %140 ], [ %165, %164 ]
  %146 = phi i32 [ %142, %140 ], [ %152, %164 ]
  %147 = load i32, i32* %60, align 8
  %148 = zext i32 %147 to i64
  %149 = icmp ult i64 %145, %148
  br i1 %149, label %150, label %664

150:                                              ; preds = %144
  %151 = load i32, i32* %9, align 4
  %152 = add i32 %151, %146
  %153 = icmp ugt i32 %152, 65535
  br i1 %153, label %664, label %154

154:                                              ; preds = %150
  %155 = icmp eq i32 %152, 0
  %156 = or i1 %139, %155
  br i1 %156, label %157, label %167

157:                                              ; preds = %154
  %158 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %158, i64 %145, i32 0, i32 0, i32 0
  %160 = load %class.CJBig2_Image*, %class.CJBig2_Image** %159, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %159, align 8
  %161 = icmp eq %class.CJBig2_Image* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %157
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %160) #12
  %163 = bitcast %class.CJBig2_Image* %160 to i8*
  call void @_ZdlPv(i8* %163) #13
  br label %164

164:                                              ; preds = %157, %162
  %165 = add nuw nsw i64 %145, 1
  %166 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %35, %class.CJBig2_ArithDecoder* %1, i32* nonnull %9) #12
  br i1 %166, label %144, label %123

167:                                              ; preds = %154
  %168 = trunc i64 %145 to i32
  %169 = load i8, i8* %79, align 1, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %202

171:                                              ; preds = %167
  %172 = call i8* @_Znwm(i64 80) #13
  %173 = bitcast i8* %172 to %class.CJBig2_GRDProc*
  call void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc* nonnull %173) #12
  store i8 0, i8* %172, align 8
  %174 = getelementptr inbounds i8, i8* %172, i64 4
  %175 = bitcast i8* %174 to i32*
  store i32 %152, i32* %175, align 4
  %176 = getelementptr inbounds i8, i8* %172, i64 8
  %177 = bitcast i8* %176 to i32*
  store i32 %134, i32* %177, align 8
  %178 = load i8, i8* %113, align 1
  %179 = getelementptr inbounds i8, i8* %172, i64 3
  store i8 %178, i8* %179, align 1
  %180 = getelementptr inbounds i8, i8* %172, i64 1
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds i8, i8* %172, i64 2
  store i8 0, i8* %181, align 2
  %182 = load i8, i8* %114, align 8
  %183 = getelementptr inbounds i8, i8* %172, i64 24
  store i8 %182, i8* %183, align 8
  %184 = load i8, i8* %115, align 1
  %185 = getelementptr inbounds i8, i8* %172, i64 25
  store i8 %184, i8* %185, align 1
  %186 = load i8, i8* %116, align 2
  %187 = getelementptr inbounds i8, i8* %172, i64 26
  store i8 %186, i8* %187, align 2
  %188 = load i8, i8* %117, align 1
  %189 = getelementptr inbounds i8, i8* %172, i64 27
  store i8 %188, i8* %189, align 1
  %190 = load i8, i8* %118, align 4
  %191 = getelementptr inbounds i8, i8* %172, i64 28
  store i8 %190, i8* %191, align 4
  %192 = load i8, i8* %119, align 1
  %193 = getelementptr inbounds i8, i8* %172, i64 29
  store i8 %192, i8* %193, align 1
  %194 = load i8, i8* %120, align 2
  %195 = getelementptr inbounds i8, i8* %172, i64 30
  store i8 %194, i8* %195, align 2
  %196 = load i8, i8* %121, align 1
  %197 = getelementptr inbounds i8, i8* %172, i64 31
  store i8 %196, i8* %197, align 1
  %198 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %122, align 8
  %199 = call %class.CJBig2_Image* @_ZN14CJBig2_GRDProc11DecodeArithEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRDProc* nonnull %173, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %198) #12
  %200 = ptrtoint %class.CJBig2_Image* %199 to i64
  %201 = icmp eq %class.CJBig2_Image* %199, null
  call void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc* nonnull %173) #12
  call void @_ZdlPv(i8* nonnull %172) #13
  br i1 %201, label %664, label %483

202:                                              ; preds = %167
  %203 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %37, %class.CJBig2_ArithDecoder* %1, i32* nonnull %10) #12
  %204 = load i32, i32* %10, align 4
  %205 = icmp ugt i32 %204, 1
  br i1 %205, label %206, label %360

206:                                              ; preds = %202
  %207 = call i8* @_Znwm(i64 80) #13
  %208 = bitcast i8* %207 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %208, i64 6) #12
  %209 = call i8* @_Znwm(i64 80) #13
  %210 = bitcast i8* %209 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %210, i64 8) #12
  %211 = call i8* @_Znwm(i64 80) #13
  %212 = bitcast i8* %211 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %212, i64 11) #12
  %213 = call i8* @_Znwm(i64 80) #13
  %214 = bitcast i8* %213 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %214, i64 15) #12
  %215 = call i8* @_Znwm(i64 80) #13
  %216 = bitcast i8* %215 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %216, i64 15) #12
  %217 = call i8* @_Znwm(i64 80) #13
  %218 = bitcast i8* %217 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %218, i64 15) #12
  %219 = call i8* @_Znwm(i64 80) #13
  %220 = bitcast i8* %219 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %220, i64 15) #12
  %221 = call i8* @_Znwm(i64 80) #13
  %222 = bitcast i8* %221 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %222, i64 1) #12
  %223 = call i8* @_Znwm(i64 144) #13
  %224 = bitcast i8* %223 to %class.CJBig2_TRDProc*
  call void @_ZN14CJBig2_TRDProcC1Ev(%class.CJBig2_TRDProc* nonnull %224) #12
  %225 = load i8, i8* %92, align 8, !range !2
  store i8 %225, i8* %223, align 8
  %226 = getelementptr inbounds i8, i8* %223, i64 1
  store i8 1, i8* %226, align 1
  %227 = getelementptr inbounds i8, i8* %223, i64 8
  %228 = bitcast i8* %227 to i32*
  store i32 %152, i32* %228, align 8
  %229 = getelementptr inbounds i8, i8* %223, i64 12
  %230 = bitcast i8* %229 to i32*
  store i32 %134, i32* %230, align 4
  %231 = load i32, i32* %10, align 4
  %232 = getelementptr inbounds i8, i8* %223, i64 16
  %233 = bitcast i8* %232 to i32*
  store i32 %231, i32* %233, align 8
  %234 = getelementptr inbounds i8, i8* %223, i64 20
  %235 = bitcast i8* %234 to i32*
  store i32 1, i32* %235, align 4
  %236 = load i32, i32* %58, align 4
  %237 = add i32 %236, %168
  %238 = getelementptr inbounds i8, i8* %223, i64 24
  %239 = bitcast i8* %238 to i32*
  store i32 %237, i32* %239, align 8
  br label %240

240:                                              ; preds = %240, %206
  %241 = phi i32 [ 0, %206 ], [ %244, %240 ]
  %242 = shl i32 1, %241
  %243 = icmp ult i32 %242, %237
  %244 = add i32 %241, 1
  br i1 %243, label %240, label %245

245:                                              ; preds = %240
  %246 = trunc i32 %241 to i8
  %247 = getelementptr inbounds i8, i8* %223, i64 6
  store i8 %246, i8* %247, align 2
  %248 = zext i32 %237 to i64
  %249 = load i64, i64* %81, align 8
  %250 = load i64, i64* %82, align 8
  %251 = sub i64 %249, %250
  %252 = ashr exact i64 %251, 3
  %253 = icmp ult i64 %252, %248
  %254 = inttoptr i64 %250 to %class.CJBig2_Image**
  br i1 %253, label %255, label %258

255:                                              ; preds = %245
  %256 = sub nsw i64 %248, %252
  call void @_ZNSt3__16vectorIP12CJBig2_ImageNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.44"* nonnull %15, i64 %256) #12
  %257 = load i32, i32* %58, align 4
  br label %262

258:                                              ; preds = %245
  %259 = icmp ugt i64 %252, %248
  br i1 %259, label %260, label %262

260:                                              ; preds = %258
  %261 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %254, i64 %248
  store %class.CJBig2_Image** %261, %class.CJBig2_Image*** %31, align 8
  br label %262

262:                                              ; preds = %255, %258, %260
  %263 = phi i32 [ %257, %255 ], [ %236, %258 ], [ %236, %260 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %270, label %265

265:                                              ; preds = %262
  %266 = zext i32 %263 to i64
  %267 = shl nuw nsw i64 %266, 3
  %268 = load i8*, i8** %84, align 8
  %269 = load i8*, i8** %85, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %268, i64 %267, i1 false) #12
  br label %270

270:                                              ; preds = %262, %265
  %271 = and i64 %145, 4294967295
  %272 = icmp eq i32 %168, 0
  br i1 %272, label %292, label %273

273:                                              ; preds = %270
  %274 = and i64 %145, 1
  %275 = icmp eq i64 %271, 1
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = sub nsw i64 %271, %274
  br label %333

278:                                              ; preds = %333, %273
  %279 = phi i64 [ 0, %273 ], [ %357, %333 ]
  %280 = icmp eq i64 %274, 0
  br i1 %280, label %292, label %281

281:                                              ; preds = %278
  %282 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %282, i64 %279, i32 0, i32 0, i32 0
  %284 = bitcast %class.CJBig2_Image** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = load i32, i32* %58, align 4
  %287 = zext i32 %286 to i64
  %288 = add nuw i64 %279, %287
  %289 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %290 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %289, i64 %288
  %291 = bitcast %class.CJBig2_Image** %290 to i64*
  store i64 %285, i64* %291, align 8
  br label %292

292:                                              ; preds = %281, %278, %270
  %293 = load i64, i64* %82, align 8
  %294 = getelementptr inbounds i8, i8* %223, i64 56
  %295 = bitcast i8* %294 to i64*
  store i64 %293, i64* %295, align 8
  %296 = getelementptr inbounds i8, i8* %223, i64 4
  store i8 0, i8* %296, align 4
  %297 = getelementptr inbounds i8, i8* %223, i64 64
  %298 = bitcast i8* %297 to i32*
  store i32 0, i32* %298, align 8
  %299 = getelementptr inbounds i8, i8* %223, i64 3
  store i8 0, i8* %299, align 1
  %300 = getelementptr inbounds i8, i8* %223, i64 68
  %301 = bitcast i8* %300 to i32*
  store i32 1, i32* %301, align 4
  %302 = getelementptr inbounds i8, i8* %223, i64 5
  store i8 0, i8* %302, align 1
  %303 = getelementptr inbounds i8, i8* %223, i64 72
  %304 = bitcast i8* %303 to i8**
  store i8* %207, i8** %304, align 8
  %305 = getelementptr inbounds i8, i8* %223, i64 80
  %306 = bitcast i8* %305 to i8**
  store i8* %209, i8** %306, align 8
  %307 = getelementptr inbounds i8, i8* %223, i64 88
  %308 = bitcast i8* %307 to i8**
  store i8* %211, i8** %308, align 8
  %309 = getelementptr inbounds i8, i8* %223, i64 96
  %310 = bitcast i8* %309 to i8**
  store i8* %213, i8** %310, align 8
  %311 = getelementptr inbounds i8, i8* %223, i64 104
  %312 = bitcast i8* %311 to i8**
  store i8* %215, i8** %312, align 8
  %313 = getelementptr inbounds i8, i8* %223, i64 112
  %314 = bitcast i8* %313 to i8**
  store i8* %217, i8** %314, align 8
  %315 = getelementptr inbounds i8, i8* %223, i64 120
  %316 = bitcast i8* %315 to i8**
  store i8* %219, i8** %316, align 8
  %317 = getelementptr inbounds i8, i8* %223, i64 128
  %318 = bitcast i8* %317 to i8**
  store i8* %221, i8** %318, align 8
  %319 = load i8, i8* %86, align 2, !range !2
  %320 = getelementptr inbounds i8, i8* %223, i64 2
  store i8 %319, i8* %320, align 2
  %321 = load i8, i8* %87, align 8
  %322 = getelementptr inbounds i8, i8* %223, i64 136
  store i8 %321, i8* %322, align 8
  %323 = load i8, i8* %88, align 1
  %324 = getelementptr inbounds i8, i8* %223, i64 137
  store i8 %323, i8* %324, align 1
  %325 = load i8, i8* %89, align 2
  %326 = getelementptr inbounds i8, i8* %223, i64 138
  store i8 %325, i8* %326, align 2
  %327 = load i8, i8* %90, align 1
  %328 = getelementptr inbounds i8, i8* %223, i64 139
  store i8 %327, i8* %328, align 1
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %93) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 80, i1 false)
  call void @_ZN20JBig2IntDecoderStateC1Ev(%struct.JBig2IntDecoderState* nonnull %16) #12
  store i8* %44, i8** %94, align 8
  store i8* %46, i8** %96, align 8
  store i8* %48, i8** %98, align 8
  store i8* %50, i8** %100, align 8
  store i8* %52, i8** %102, align 8
  store i8* %54, i8** %104, align 8
  store i8* %56, i8** %106, align 8
  store i8* %38, i8** %108, align 8
  store i8* %40, i8** %110, align 8
  store i8* %70, i8** %112, align 8
  %329 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %91, align 8
  %330 = call %class.CJBig2_Image* @_ZN14CJBig2_TRDProc11DecodeArithEP19CJBig2_ArithDecoderP13JBig2ArithCtxP20JBig2IntDecoderState(%class.CJBig2_TRDProc* nonnull %224, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %329, %struct.JBig2IntDecoderState* nonnull %16) #12
  %331 = ptrtoint %class.CJBig2_Image* %330 to i64
  %332 = icmp eq %class.CJBig2_Image* %330, null
  call void @_ZN20JBig2IntDecoderStateD1Ev(%struct.JBig2IntDecoderState* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %93) #12
  call void @_ZN14CJBig2_TRDProcD1Ev(%class.CJBig2_TRDProc* nonnull %224) #12
  call void @_ZdlPv(i8* nonnull %223) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %222) #12
  call void @_ZdlPv(i8* nonnull %221) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %220) #12
  call void @_ZdlPv(i8* nonnull %219) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %218) #12
  call void @_ZdlPv(i8* nonnull %217) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %216) #12
  call void @_ZdlPv(i8* nonnull %215) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %214) #12
  call void @_ZdlPv(i8* nonnull %213) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %212) #12
  call void @_ZdlPv(i8* nonnull %211) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %210) #12
  call void @_ZdlPv(i8* nonnull %209) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %208) #12
  call void @_ZdlPv(i8* nonnull %207) #13
  br i1 %332, label %664, label %483

333:                                              ; preds = %333, %276
  %334 = phi i64 [ 0, %276 ], [ %357, %333 ]
  %335 = phi i64 [ %277, %276 ], [ %358, %333 ]
  %336 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %336, i64 %334, i32 0, i32 0, i32 0
  %338 = bitcast %class.CJBig2_Image** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = load i32, i32* %58, align 4
  %341 = zext i32 %340 to i64
  %342 = add nuw i64 %334, %341
  %343 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %344 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %343, i64 %342
  %345 = bitcast %class.CJBig2_Image** %344 to i64*
  store i64 %339, i64* %345, align 8
  %346 = or i64 %334, 1
  %347 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %348 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %347, i64 %346, i32 0, i32 0, i32 0
  %349 = bitcast %class.CJBig2_Image** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = load i32, i32* %58, align 4
  %352 = zext i32 %351 to i64
  %353 = add nuw i64 %346, %352
  %354 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %355 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %354, i64 %353
  %356 = bitcast %class.CJBig2_Image** %355 to i64*
  store i64 %350, i64* %356, align 8
  %357 = add nuw nsw i64 %334, 2
  %358 = add i64 %335, -2
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %278, label %333

360:                                              ; preds = %202
  %361 = icmp eq i32 %204, 1
  br i1 %361, label %362, label %483

362:                                              ; preds = %360
  %363 = load i32, i32* %58, align 4
  %364 = add i32 %363, %168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #12
  store i32 -1431655766, i32* %17, align 4
  call void @_ZN23CJBig2_ArithIaidDecoder6DecodeEP19CJBig2_ArithDecoderPj(%class.CJBig2_ArithIaidDecoder* nonnull %71, %class.CJBig2_ArithDecoder* %1, i32* nonnull %17) #12
  %365 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %39, %class.CJBig2_ArithDecoder* %1, i32* nonnull %13) #12
  %366 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %41, %class.CJBig2_ArithDecoder* %1, i32* nonnull %14) #12
  %367 = load i32, i32* %17, align 4
  %368 = icmp ult i32 %367, %364
  br i1 %368, label %369, label %482

369:                                              ; preds = %362
  %370 = zext i32 %364 to i64
  %371 = load i64, i64* %81, align 8
  %372 = load i64, i64* %82, align 8
  %373 = sub i64 %371, %372
  %374 = ashr exact i64 %373, 3
  %375 = icmp ult i64 %374, %370
  %376 = inttoptr i64 %372 to %class.CJBig2_Image**
  br i1 %375, label %377, label %379

377:                                              ; preds = %369
  %378 = sub nsw i64 %370, %374
  call void @_ZNSt3__16vectorIP12CJBig2_ImageNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.44"* nonnull %15, i64 %378) #12
  br label %383

379:                                              ; preds = %369
  %380 = icmp ugt i64 %374, %370
  br i1 %380, label %381, label %383

381:                                              ; preds = %379
  %382 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %376, i64 %370
  store %class.CJBig2_Image** %382, %class.CJBig2_Image*** %31, align 8
  br label %383

383:                                              ; preds = %377, %379, %381
  %384 = load i32, i32* %58, align 4
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %391, label %386

386:                                              ; preds = %383
  %387 = zext i32 %384 to i64
  %388 = shl nuw nsw i64 %387, 3
  %389 = load i8*, i8** %84, align 8
  %390 = load i8*, i8** %85, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %390, i8* align 8 %389, i64 %388, i1 false) #12
  br label %391

391:                                              ; preds = %383, %386
  %392 = and i64 %145, 4294967295
  %393 = icmp eq i32 %168, 0
  br i1 %393, label %413, label %394

394:                                              ; preds = %391
  %395 = and i64 %145, 1
  %396 = icmp eq i64 %392, 1
  br i1 %396, label %399, label %397

397:                                              ; preds = %394
  %398 = sub nsw i64 %392, %395
  br label %420

399:                                              ; preds = %420, %394
  %400 = phi i64 [ 0, %394 ], [ %444, %420 ]
  %401 = icmp eq i64 %395, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %399
  %403 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %404 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %403, i64 %400, i32 0, i32 0, i32 0
  %405 = bitcast %class.CJBig2_Image** %404 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = load i32, i32* %58, align 4
  %408 = zext i32 %407 to i64
  %409 = add nuw i64 %400, %408
  %410 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %411 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %410, i64 %409
  %412 = bitcast %class.CJBig2_Image** %411 to i64*
  store i64 %406, i64* %412, align 8
  br label %413

413:                                              ; preds = %402, %399, %391
  %414 = load i32, i32* %17, align 4
  %415 = zext i32 %414 to i64
  %416 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %417 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %416, i64 %415
  %418 = load %class.CJBig2_Image*, %class.CJBig2_Image** %417, align 8
  %419 = icmp eq %class.CJBig2_Image* %418, null
  br i1 %419, label %482, label %447

420:                                              ; preds = %420, %397
  %421 = phi i64 [ 0, %397 ], [ %444, %420 ]
  %422 = phi i64 [ %398, %397 ], [ %445, %420 ]
  %423 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %423, i64 %421, i32 0, i32 0, i32 0
  %425 = bitcast %class.CJBig2_Image** %424 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = load i32, i32* %58, align 4
  %428 = zext i32 %427 to i64
  %429 = add nuw i64 %421, %428
  %430 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %431 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %430, i64 %429
  %432 = bitcast %class.CJBig2_Image** %431 to i64*
  store i64 %426, i64* %432, align 8
  %433 = or i64 %421, 1
  %434 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %434, i64 %433, i32 0, i32 0, i32 0
  %436 = bitcast %class.CJBig2_Image** %435 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = load i32, i32* %58, align 4
  %439 = zext i32 %438 to i64
  %440 = add nuw i64 %433, %439
  %441 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %442 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %441, i64 %440
  %443 = bitcast %class.CJBig2_Image** %442 to i64*
  store i64 %437, i64* %443, align 8
  %444 = add nuw nsw i64 %421, 2
  %445 = add i64 %422, -2
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %399, label %420

447:                                              ; preds = %413
  %448 = call i8* @_Znwm(i64 40) #13
  %449 = bitcast i8* %448 to %class.CJBig2_GRRDProc*
  call void @_ZN15CJBig2_GRRDProcC1Ev(%class.CJBig2_GRRDProc* nonnull %449) #12
  %450 = getelementptr inbounds i8, i8* %448, i64 4
  %451 = bitcast i8* %450 to i32*
  store i32 %152, i32* %451, align 4
  %452 = getelementptr inbounds i8, i8* %448, i64 8
  %453 = bitcast i8* %452 to i32*
  store i32 %134, i32* %453, align 8
  %454 = load i8, i8* %86, align 2, !range !2
  store i8 %454, i8* %448, align 8
  %455 = load i32, i32* %17, align 4
  %456 = zext i32 %455 to i64
  %457 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %458 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %457, i64 %456
  %459 = bitcast %class.CJBig2_Image** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = getelementptr inbounds i8, i8* %448, i64 24
  %462 = bitcast i8* %461 to i64*
  store i64 %460, i64* %462, align 8
  %463 = load i32, i32* %13, align 4
  %464 = getelementptr inbounds i8, i8* %448, i64 12
  %465 = bitcast i8* %464 to i32*
  store i32 %463, i32* %465, align 4
  %466 = load i32, i32* %14, align 4
  %467 = getelementptr inbounds i8, i8* %448, i64 16
  %468 = bitcast i8* %467 to i32*
  store i32 %466, i32* %468, align 8
  %469 = getelementptr inbounds i8, i8* %448, i64 1
  store i8 0, i8* %469, align 1
  %470 = load i8, i8* %87, align 8
  %471 = getelementptr inbounds i8, i8* %448, i64 32
  store i8 %470, i8* %471, align 8
  %472 = load i8, i8* %88, align 1
  %473 = getelementptr inbounds i8, i8* %448, i64 33
  store i8 %472, i8* %473, align 1
  %474 = load i8, i8* %89, align 2
  %475 = getelementptr inbounds i8, i8* %448, i64 34
  store i8 %474, i8* %475, align 2
  %476 = load i8, i8* %90, align 1
  %477 = getelementptr inbounds i8, i8* %448, i64 35
  store i8 %476, i8* %477, align 1
  %478 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %91, align 8
  %479 = call %class.CJBig2_Image* @_ZN15CJBig2_GRRDProc6DecodeEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRRDProc* nonnull %449, %class.CJBig2_ArithDecoder* %1, %class.JBig2ArithCtx* %478) #12
  %480 = ptrtoint %class.CJBig2_Image* %479 to i64
  %481 = icmp eq %class.CJBig2_Image* %479, null
  call void @_ZN15CJBig2_GRRDProcD1Ev(%class.CJBig2_GRRDProc* nonnull %449) #12
  call void @_ZdlPv(i8* nonnull %448) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #12
  br i1 %481, label %664, label %483

482:                                              ; preds = %362, %413
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #12
  br label %664

483:                                              ; preds = %171, %292, %447, %360
  %484 = phi i64 [ %200, %171 ], [ %331, %292 ], [ %480, %447 ], [ 0, %360 ]
  %485 = and i64 %145, 4294967295
  %486 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %487 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %486, i64 %485
  %488 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %487, i64 0, i32 0, i32 0, i32 0
  %489 = load %class.CJBig2_Image*, %class.CJBig2_Image** %488, align 8
  %490 = bitcast %"class.std::__1::unique_ptr.24"* %487 to i64*
  store i64 %484, i64* %490, align 8
  %491 = icmp eq %class.CJBig2_Image* %489, null
  br i1 %491, label %494, label %492

492:                                              ; preds = %483
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %489) #12
  %493 = bitcast %class.CJBig2_Image* %489 to i8*
  call void @_ZdlPv(i8* %493) #13
  br label %494

494:                                              ; preds = %483, %492
  %495 = add i32 %168, 1
  %496 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %35, %class.CJBig2_ArithDecoder* %1, i32* nonnull %9) #12
  br i1 %496, label %140, label %125

497:                                              ; preds = %125, %68, %74
  %498 = phi i32 [ 0, %74 ], [ 0, %68 ], [ %127, %125 ]
  %499 = load i32, i32* %58, align 4
  %500 = add i32 %499, %498
  %501 = zext i32 %500 to i64
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.38"* nonnull %11, i64 %501, i1 zeroext false)
  %502 = load i32, i32* %58, align 4
  %503 = load i32, i32* %60, align 8
  %504 = sub i32 0, %502
  %505 = icmp eq i32 %503, %504
  br i1 %505, label %506, label %508

506:                                              ; preds = %497
  %507 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 6
  br label %562

508:                                              ; preds = %497, %553
  %509 = phi i32 [ %555, %553 ], [ 0, %497 ]
  %510 = phi i8 [ %556, %553 ], [ 0, %497 ]
  %511 = phi i32 [ %514, %553 ], [ 0, %497 ]
  %512 = call zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder* nonnull %43, %class.CJBig2_ArithDecoder* %1, i32* nonnull %12) #12
  %513 = load i32, i32* %12, align 4
  %514 = add i32 %513, %511
  %515 = load i32, i32* %58, align 4
  %516 = load i32, i32* %60, align 8
  %517 = add i32 %516, %515
  %518 = icmp ugt i32 %514, %517
  br i1 %518, label %664, label %519

519:                                              ; preds = %508
  %520 = icmp ne i32 %513, 0
  %521 = icmp ult i32 %511, %514
  %522 = and i1 %520, %521
  br i1 %522, label %523, label %553

523:                                              ; preds = %519
  %524 = and i8 %510, 1
  %525 = icmp eq i8 %524, 0
  %526 = zext i8 %524 to i32
  %527 = zext i32 %511 to i64
  %528 = mul nuw i32 %513, %526
  %529 = zext i32 %514 to i64
  br label %530

530:                                              ; preds = %544, %523
  %531 = phi i64 [ %527, %523 ], [ %546, %544 ]
  %532 = load i64*, i64** %25, align 8
  %533 = lshr i64 %531, 6
  %534 = getelementptr inbounds i64, i64* %532, i64 %533
  %535 = and i64 %531, 63
  %536 = shl i64 1, %535
  br i1 %525, label %540, label %537

537:                                              ; preds = %530
  %538 = load i64, i64* %534, align 8
  %539 = or i64 %538, %536
  br label %544

540:                                              ; preds = %530
  %541 = xor i64 %536, -1
  %542 = load i64, i64* %534, align 8
  %543 = and i64 %542, %541
  br label %544

544:                                              ; preds = %537, %540
  %545 = phi i64 [ %543, %540 ], [ %539, %537 ]
  store i64 %545, i64* %534, align 8
  %546 = add nuw nsw i64 %531, 1
  %547 = icmp eq i64 %546, %529
  br i1 %547, label %548, label %530

548:                                              ; preds = %544
  %549 = add i32 %509, %528
  %550 = load i32, i32* %58, align 4
  %551 = load i32, i32* %60, align 8
  %552 = add i32 %551, %550
  br label %553

553:                                              ; preds = %548, %519
  %554 = phi i32 [ %552, %548 ], [ %517, %519 ]
  %555 = phi i32 [ %549, %548 ], [ %509, %519 ]
  %556 = xor i8 %510, 1
  %557 = icmp ult i32 %514, %554
  br i1 %557, label %508, label %558

558:                                              ; preds = %553
  %559 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 6
  %560 = load i32, i32* %559, align 4
  %561 = icmp ugt i32 %555, %560
  br i1 %561, label %664, label %562

562:                                              ; preds = %506, %558
  %563 = phi i32* [ %507, %506 ], [ %559, %558 ]
  %564 = call i8* @_Znwm(i64 72) #13
  %565 = bitcast i8* %564 to %class.CJBig2_SymbolDict*
  call void @_ZN17CJBig2_SymbolDictC1Ev(%class.CJBig2_SymbolDict* nonnull %565) #12
  %566 = ptrtoint i8* %564 to i64
  %567 = load i32, i32* %58, align 4
  %568 = load i32, i32* %60, align 8
  %569 = sub i32 0, %567
  %570 = icmp eq i32 %568, %569
  br i1 %570, label %664, label %571

571:                                              ; preds = %562
  %572 = bitcast %"class.std::__1::unique_ptr.24"* %6 to i8*
  %573 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %6, i64 0, i32 0, i32 0, i32 0
  %574 = getelementptr inbounds i8, i8* %564, i64 56
  %575 = bitcast i8* %574 to %"class.std::__1::unique_ptr.24"**
  %576 = getelementptr inbounds i8, i8* %564, i64 64
  %577 = bitcast i8* %576 to %"class.std::__1::unique_ptr.24"**
  %578 = getelementptr inbounds i8, i8* %564, i64 48
  %579 = bitcast i8* %578 to %"class.std::__1::vector.22"*
  %580 = bitcast i8* %574 to i64*
  %581 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 7
  %582 = bitcast %"class.std::__1::unique_ptr.24"* %5 to i8*
  %583 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %5, i64 0, i32 0, i32 0, i32 0
  br label %584

584:                                              ; preds = %571, %656
  %585 = phi i32 [ %568, %571 ], [ %657, %656 ]
  %586 = phi i32 [ %567, %571 ], [ %658, %656 ]
  %587 = phi i64 [ 0, %571 ], [ %660, %656 ]
  %588 = phi i32 [ 0, %571 ], [ %659, %656 ]
  %589 = load i64*, i64** %25, align 8
  %590 = lshr i64 %587, 6
  %591 = getelementptr inbounds i64, i64* %589, i64 %590
  %592 = and i64 %587, 63
  %593 = shl i64 1, %592
  %594 = load i64, i64* %591, align 8
  %595 = and i64 %594, %593
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %656, label %597

597:                                              ; preds = %584
  %598 = load i32, i32* %563, align 4
  %599 = icmp ult i32 %588, %598
  br i1 %599, label %600, label %656

600:                                              ; preds = %597
  %601 = zext i32 %586 to i64
  %602 = icmp ult i64 %587, %601
  br i1 %602, label %603, label %628

603:                                              ; preds = %600
  %604 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %581, align 8
  %605 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %604, i64 %587
  %606 = load %class.CJBig2_Image*, %class.CJBig2_Image** %605, align 8
  %607 = icmp eq %class.CJBig2_Image* %606, null
  br i1 %607, label %612, label %608

608:                                              ; preds = %603
  %609 = call i8* @_Znwm(i64 32) #13
  %610 = bitcast i8* %609 to %class.CJBig2_Image*
  call void @_ZN12CJBig2_ImageC1ERKS_(%class.CJBig2_Image* nonnull %610, %class.CJBig2_Image* nonnull dereferenceable(32) %606) #12
  %611 = ptrtoint i8* %609 to i64
  br label %612

612:                                              ; preds = %603, %608
  %613 = phi i64 [ %611, %608 ], [ 0, %603 ]
  %614 = inttoptr i64 %613 to %class.CJBig2_Image*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %582)
  store %class.CJBig2_Image* %614, %class.CJBig2_Image** %583, align 8
  %615 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %575, align 8
  %616 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %577, align 8
  %617 = icmp ult %"class.std::__1::unique_ptr.24"* %615, %616
  br i1 %617, label %618, label %622

618:                                              ; preds = %612
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %583, align 8
  %619 = bitcast %"class.std::__1::unique_ptr.24"* %615 to i64*
  store i64 %613, i64* %619, align 8
  %620 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %615, i64 1
  %621 = ptrtoint %"class.std::__1::unique_ptr.24"* %620 to i64
  store i64 %621, i64* %580, align 8
  br label %623

622:                                              ; preds = %612
  call void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.22"* %579, %"class.std::__1::unique_ptr.24"* nonnull dereferenceable(8) %5) #12
  br label %623

623:                                              ; preds = %622, %618
  %624 = load %class.CJBig2_Image*, %class.CJBig2_Image** %583, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %583, align 8
  %625 = icmp eq %class.CJBig2_Image* %624, null
  br i1 %625, label %651, label %626

626:                                              ; preds = %623
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %624) #12
  %627 = bitcast %class.CJBig2_Image* %624 to i8*
  call void @_ZdlPv(i8* %627) #13
  br label %651

628:                                              ; preds = %600
  %629 = trunc i64 %587 to i32
  %630 = sub i32 %629, %586
  %631 = zext i32 %630 to i64
  %632 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %633 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %632, i64 %631
  %634 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %633, i64 0, i32 0, i32 0, i32 0
  %635 = bitcast %"class.std::__1::unique_ptr.24"* %633 to i64*
  %636 = load i64, i64* %635, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %634, align 8
  %637 = inttoptr i64 %636 to %class.CJBig2_Image*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %572)
  store %class.CJBig2_Image* %637, %class.CJBig2_Image** %573, align 8
  %638 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %575, align 8
  %639 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %577, align 8
  %640 = icmp ult %"class.std::__1::unique_ptr.24"* %638, %639
  br i1 %640, label %641, label %645

641:                                              ; preds = %628
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %573, align 8
  %642 = bitcast %"class.std::__1::unique_ptr.24"* %638 to i64*
  store i64 %636, i64* %642, align 8
  %643 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %638, i64 1
  %644 = ptrtoint %"class.std::__1::unique_ptr.24"* %643 to i64
  store i64 %644, i64* %580, align 8
  br label %646

645:                                              ; preds = %628
  call void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.22"* %579, %"class.std::__1::unique_ptr.24"* nonnull dereferenceable(8) %6) #12
  br label %646

646:                                              ; preds = %645, %641
  %647 = load %class.CJBig2_Image*, %class.CJBig2_Image** %573, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %573, align 8
  %648 = icmp eq %class.CJBig2_Image* %647, null
  br i1 %648, label %651, label %649

649:                                              ; preds = %646
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %647) #12
  %650 = bitcast %class.CJBig2_Image* %647 to i8*
  call void @_ZdlPv(i8* %650) #13
  br label %651

651:                                              ; preds = %649, %646, %626, %623
  %652 = phi i8* [ %582, %623 ], [ %582, %626 ], [ %572, %646 ], [ %572, %649 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %652)
  %653 = add nuw i32 %588, 1
  %654 = load i32, i32* %58, align 4
  %655 = load i32, i32* %60, align 8
  br label %656

656:                                              ; preds = %584, %597, %651
  %657 = phi i32 [ %585, %597 ], [ %655, %651 ], [ %585, %584 ]
  %658 = phi i32 [ %586, %597 ], [ %654, %651 ], [ %586, %584 ]
  %659 = phi i32 [ %588, %597 ], [ %653, %651 ], [ %588, %584 ]
  %660 = add nuw nsw i64 %587, 1
  %661 = add i32 %657, %658
  %662 = zext i32 %661 to i64
  %663 = icmp ult i64 %660, %662
  br i1 %663, label %584, label %664

664:                                              ; preds = %129, %171, %292, %447, %144, %150, %508, %656, %562, %482, %558
  %665 = phi i64 [ 0, %558 ], [ 0, %482 ], [ %566, %562 ], [ %566, %656 ], [ 0, %508 ], [ 0, %150 ], [ 0, %144 ], [ 0, %447 ], [ 0, %292 ], [ 0, %171 ], [ 0, %129 ]
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %57) #12
  call void @_ZdlPv(i8* nonnull %56) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %55) #12
  call void @_ZdlPv(i8* nonnull %54) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %53) #12
  call void @_ZdlPv(i8* nonnull %52) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %51) #12
  call void @_ZdlPv(i8* nonnull %50) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %49) #12
  call void @_ZdlPv(i8* nonnull %48) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %47) #12
  call void @_ZdlPv(i8* nonnull %46) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %45) #12
  call void @_ZdlPv(i8* nonnull %44) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %43) #12
  call void @_ZdlPv(i8* nonnull %42) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %41) #12
  call void @_ZdlPv(i8* nonnull %40) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %39) #12
  call void @_ZdlPv(i8* nonnull %38) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %37) #12
  call void @_ZdlPv(i8* nonnull %36) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %35) #12
  call void @_ZdlPv(i8* nonnull %34) #13
  call void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder* nonnull %33) #12
  call void @_ZdlPv(i8* nonnull %32) #13
  call void @_ZN23CJBig2_ArithIaidDecoderD1Ev(%class.CJBig2_ArithIaidDecoder* nonnull %71) #12
  call void @_ZdlPv(i8* nonnull %70) #13
  %666 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %30, align 8
  %667 = icmp eq %class.CJBig2_Image** %666, null
  br i1 %667, label %672, label %668

668:                                              ; preds = %664
  %669 = ptrtoint %class.CJBig2_Image** %666 to i64
  %670 = bitcast %class.CJBig2_Image*** %31 to i64*
  store i64 %669, i64* %670, align 8
  %671 = bitcast %class.CJBig2_Image** %666 to i8*
  call void @_ZdlPv(i8* %671) #13
  br label %672

672:                                              ; preds = %664, %668
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #12
  %673 = load i64*, i64** %25, align 8
  %674 = icmp eq i64* %673, null
  br i1 %674, label %677, label %675

675:                                              ; preds = %672
  %676 = bitcast i64* %673 to i8*
  call void @_ZdlPv(i8* %676) #13
  br label %677

677:                                              ; preds = %672, %675
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #12
  %678 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %19, align 8
  %679 = icmp eq %"class.std::__1::unique_ptr.24"* %678, null
  br i1 %679, label %699, label %680

680:                                              ; preds = %677
  %681 = bitcast %"class.std::__1::unique_ptr.24"* %678 to i8*
  %682 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %20, align 8
  %683 = icmp eq %"class.std::__1::unique_ptr.24"* %682, %678
  br i1 %683, label %697, label %684

684:                                              ; preds = %680, %692
  %685 = phi %"class.std::__1::unique_ptr.24"* [ %686, %692 ], [ %682, %680 ]
  %686 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %685, i64 -1
  %687 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %686, i64 0, i32 0, i32 0, i32 0
  %688 = load %class.CJBig2_Image*, %class.CJBig2_Image** %687, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %687, align 8
  %689 = icmp eq %class.CJBig2_Image* %688, null
  br i1 %689, label %692, label %690

690:                                              ; preds = %684
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %688) #12
  %691 = bitcast %class.CJBig2_Image* %688 to i8*
  call void @_ZdlPv(i8* %691) #13
  br label %692

692:                                              ; preds = %690, %684
  %693 = icmp eq %"class.std::__1::unique_ptr.24"* %686, %678
  br i1 %693, label %694, label %684

694:                                              ; preds = %692
  %695 = bitcast %"class.std::__1::vector.22"* %7 to i8**
  %696 = load i8*, i8** %695, align 8
  br label %697

697:                                              ; preds = %694, %680
  %698 = phi i8* [ %696, %694 ], [ %681, %680 ]
  store %"class.std::__1::unique_ptr.24"* %678, %"class.std::__1::unique_ptr.24"** %20, align 8
  call void @_ZdlPv(i8* %698) #13
  br label %699

699:                                              ; preds = %677, %697
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %700 = inttoptr i64 %665 to %class.CJBig2_SymbolDict*
  ret %class.CJBig2_SymbolDict* %700
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN22CJBig2_ArithIntDecoder6DecodeEP19CJBig2_ArithDecoderPi(%class.CJBig2_ArithIntDecoder*, %class.CJBig2_ArithDecoder*, i32*) local_unnamed_addr #4

declare %class.CJBig2_Image* @_ZN14CJBig2_GRDProc11DecodeArithEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRDProc*, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN20JBig2IntDecoderStateC1Ev(%struct.JBig2IntDecoderState*) unnamed_addr #4

declare %class.CJBig2_Image* @_ZN14CJBig2_TRDProc11DecodeArithEP19CJBig2_ArithDecoderP13JBig2ArithCtxP20JBig2IntDecoderState(%class.CJBig2_TRDProc*, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*, %struct.JBig2IntDecoderState*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN20JBig2IntDecoderStateD1Ev(%struct.JBig2IntDecoderState*) unnamed_addr #5

declare void @_ZN23CJBig2_ArithIaidDecoder6DecodeEP19CJBig2_ArithDecoderPj(%class.CJBig2_ArithIaidDecoder*, %class.CJBig2_ArithDecoder*, i32*) local_unnamed_addr #4

declare %class.CJBig2_Image* @_ZN15CJBig2_GRRDProc6DecodeEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRRDProc*, %class.CJBig2_ArithDecoder*, %class.JBig2ArithCtx*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.38"*, i64, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.38", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !3
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.38"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %4, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #12
  %29 = icmp slt i64 %1, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #14
  unreachable

32:                                               ; preds = %25
  %33 = icmp ult i64 %11, 4611686018427387903
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = shl i64 %10, 7
  %36 = add nuw i64 %1, 63
  %37 = and i64 %36, -64
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %32 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.38"* nonnull %4, i64 %41)
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %12
  store i64 %43, i64* %27, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::__1::vector.38"* %4 to i64*
  %47 = load i64, i64* %46, align 16, !noalias !8
  %48 = icmp sgt i64 %42, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %40
  %50 = inttoptr i64 %47 to i8*
  %51 = lshr i64 %42, 6
  %52 = bitcast i64* %45 to i8*
  %53 = shl nuw nsw i64 %51, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 %53, i1 false) #12, !noalias !13
  %54 = and i64 %42, 63
  %55 = inttoptr i64 %47 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = ptrtoint i64* %56 to i64
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %45, i64 %51
  %61 = sub nuw nsw i64 64, %54
  %62 = lshr i64 -1, %61
  %63 = load i64, i64* %60, align 8, !noalias !16
  %64 = and i64 %63, %62
  %65 = xor i64 %62, -1
  %66 = load i64, i64* %56, align 8, !noalias !13
  %67 = and i64 %66, %65
  %68 = or i64 %67, %64
  store i64 %68, i64* %56, align 8, !noalias !13
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %49, %40, %59
  %71 = phi i32 [ %69, %59 ], [ 0, %49 ], [ 0, %40 ]
  %72 = phi i64 [ %57, %59 ], [ %57, %49 ], [ %47, %40 ]
  %73 = bitcast %"class.std::__1::vector.38"* %4 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = bitcast %"class.std::__1::vector.38"* %0 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast %"class.std::__1::vector.38"* %0 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = bitcast %"class.std::__1::vector.38"* %4 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %28, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %28, align 16
  %81 = extractelement <2 x i64> %76, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %70, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %72, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %71, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #12
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #12
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_SymbolDict* @_ZN14CJBig2_SDDProc13DecodeHuffmanEP16CJBig2_BitStreamPNSt3__16vectorI13JBig2ArithCtxNS2_9allocatorIS4_EEEES8_(%class.CJBig2_SDDProc* readonly, %class.CJBig2_BitStream*, %"class.std::__1::vector.15"* nocapture readnone, %"class.std::__1::vector.15"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.24", align 8
  %6 = alloca %"class.std::__1::unique_ptr.24", align 8
  %7 = alloca %"class.std::__1::vector.22", align 8
  %8 = alloca %"class.std::__1::vector.90", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::vector.38", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::__1::vector.44", align 8
  %20 = alloca %"class.std::__1::unique_ptr.24", align 8
  %21 = bitcast %"class.std::__1::vector.22"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %7, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #12
  %24 = bitcast %"class.std::__1::vector.90"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %8, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #12
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #12
  store i32 -1431655766, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #12
  store i32 -1431655766, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  store i32 -1431655766, i32* %11, align 4
  %30 = bitcast %"class.std::__1::vector.38"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %12, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #12
  %32 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #12
  store i32 -1431655766, i32* %13, align 4
  %33 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  store i32 -1431655766, i32* %14, align 4
  %34 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #12
  store i32 -1431655766, i32* %15, align 4
  %35 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #12
  store i32 -1431655766, i32* %16, align 4
  %36 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #12
  store i32 -1431655766, i32* %17, align 4
  %37 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #12
  store i32 -1431655766, i32* %18, align 4
  %38 = bitcast %"class.std::__1::vector.44"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %19, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %19, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12
  %41 = tail call i8* @_Znwm(i64 8) #13
  %42 = bitcast i8* %41 to %class.CJBig2_HuffmanDecoder*
  tail call void @_ZN21CJBig2_HuffmanDecoderC1EP16CJBig2_BitStream(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_BitStream* %1) #12
  %43 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 5
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %4
  %47 = zext i32 %44 to i64
  call void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.22"* nonnull %7, i64 %47) #12
  br label %48

48:                                               ; preds = %4, %46
  %49 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 1
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %69

52:                                               ; preds = %48
  %53 = load i32, i32* %43, align 8
  %54 = zext i32 %53 to i64
  %55 = bitcast i32** %26 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.90"* %8 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = ashr exact i64 %59, 2
  %61 = icmp ult i64 %60, %54
  %62 = inttoptr i64 %58 to i32*
  br i1 %61, label %63, label %65

63:                                               ; preds = %52
  %64 = sub nsw i64 %54, %60
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.90"* nonnull %8, i64 %64) #12
  br label %69

65:                                               ; preds = %52
  %66 = icmp ugt i64 %60, %54
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = getelementptr inbounds i32, i32* %62, i64 %54
  store i32* %68, i32** %26, align 8
  br label %69

69:                                               ; preds = %67, %65, %63, %48
  %70 = call i8* @_Znwm(i64 72) #13
  %71 = bitcast i8* %70 to %class.CJBig2_SymbolDict*
  call void @_ZN17CJBig2_SymbolDictC1Ev(%class.CJBig2_SymbolDict* nonnull %71) #12
  %72 = ptrtoint i8* %70 to i64
  %73 = load i32, i32* %43, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %678, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 8, i32 0
  %77 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 9, i32 0
  %78 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 11, i32 0
  %79 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 4
  %80 = bitcast %class.CJBig2_Image*** %40 to i64*
  %81 = bitcast %"class.std::__1::vector.44"* %19 to i64*
  %82 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 7
  %83 = bitcast %class.CJBig2_Image*** %82 to i8**
  %84 = bitcast %"class.std::__1::vector.44"* %19 to i8**
  %85 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 2
  %86 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 0
  %87 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 1
  %88 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 2
  %89 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 13, i64 3
  %90 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %3, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 0
  %92 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 10, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.24"* %20 to i8*
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %20, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr.24"* %20 to i64*
  br label %96

96:                                               ; preds = %75, %675
  %97 = phi i32 [ 0, %75 ], [ %568, %675 ]
  %98 = phi i32 [ 0, %75 ], [ %104, %675 ]
  %99 = load %class.CJBig2_HuffmanTable*, %class.CJBig2_HuffmanTable** %76, align 8
  %100 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* %99, i32* nonnull %9) #12
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %859

102:                                              ; preds = %96
  %103 = load i32, i32* %9, align 4
  %104 = add i32 %103, %98
  %105 = icmp ugt i32 %104, 65535
  br i1 %105, label %859, label %106

106:                                              ; preds = %102
  %107 = icmp eq i32 %104, 0
  br label %108

108:                                              ; preds = %106, %565
  %109 = phi i32 [ 0, %106 ], [ %130, %565 ]
  %110 = phi i32 [ 0, %106 ], [ %125, %565 ]
  %111 = phi i32 [ %97, %106 ], [ %566, %565 ]
  %112 = zext i32 %111 to i64
  br label %113

113:                                              ; preds = %108, %138
  %114 = phi i64 [ %112, %108 ], [ %139, %138 ]
  %115 = phi i32 [ %109, %108 ], [ %130, %138 ]
  %116 = phi i32 [ %110, %108 ], [ %125, %138 ]
  %117 = load %class.CJBig2_HuffmanTable*, %class.CJBig2_HuffmanTable** %77, align 8
  %118 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* %117, i32* nonnull %10) #12
  store i32 %118, i32* %14, align 4
  switch i32 %118, label %859 [
    i32 1, label %567
    i32 0, label %119
  ]

119:                                              ; preds = %113
  %120 = load i32, i32* %43, align 8
  %121 = zext i32 %120 to i64
  %122 = icmp ult i64 %114, %121
  br i1 %122, label %123, label %859

123:                                              ; preds = %119
  %124 = load i32, i32* %10, align 4
  %125 = add i32 %124, %116
  %126 = icmp ugt i32 %125, 65535
  br i1 %126, label %859, label %127

127:                                              ; preds = %123
  %128 = icmp eq i32 %125, 0
  %129 = or i1 %107, %128
  %130 = add i32 %125, %115
  br i1 %129, label %131, label %140

131:                                              ; preds = %127
  %132 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %132, i64 %114, i32 0, i32 0, i32 0
  %134 = load %class.CJBig2_Image*, %class.CJBig2_Image** %133, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %133, align 8
  %135 = icmp eq %class.CJBig2_Image* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %131
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %134) #12
  %137 = bitcast %class.CJBig2_Image* %134 to i8*
  call void @_ZdlPv(i8* %137) #13
  br label %138

138:                                              ; preds = %131, %136
  %139 = add nuw nsw i64 %114, 1
  br label %113

140:                                              ; preds = %127
  %141 = trunc i64 %114 to i32
  %142 = load i8, i8* %49, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = and i64 %114, 4294967295
  br label %561

146:                                              ; preds = %140
  %147 = load %class.CJBig2_HuffmanTable*, %class.CJBig2_HuffmanTable** %78, align 8
  %148 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* %147, i32* nonnull %11) #12
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %859

150:                                              ; preds = %146
  %151 = load i32, i32* %11, align 4
  %152 = icmp ugt i32 %151, 1
  br i1 %152, label %153, label %387

153:                                              ; preds = %150
  %154 = call i8* @_Znwm(i64 80) #13
  %155 = bitcast i8* %154 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %155, i64 6) #12
  %156 = call i8* @_Znwm(i64 80) #13
  %157 = bitcast i8* %156 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %157, i64 8) #12
  %158 = call i8* @_Znwm(i64 80) #13
  %159 = bitcast i8* %158 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %159, i64 11) #12
  %160 = call i8* @_Znwm(i64 80) #13
  %161 = bitcast i8* %160 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %161, i64 15) #12
  %162 = call i8* @_Znwm(i64 80) #13
  %163 = bitcast i8* %162 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %163, i64 15) #12
  %164 = call i8* @_Znwm(i64 80) #13
  %165 = bitcast i8* %164 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %165, i64 15) #12
  %166 = call i8* @_Znwm(i64 80) #13
  %167 = bitcast i8* %166 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %167, i64 15) #12
  %168 = call i8* @_Znwm(i64 80) #13
  %169 = bitcast i8* %168 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %169, i64 1) #12
  %170 = call i8* @_Znwm(i64 144) #13
  %171 = bitcast i8* %170 to %class.CJBig2_TRDProc*
  call void @_ZN14CJBig2_TRDProcC1Ev(%class.CJBig2_TRDProc* nonnull %171) #12
  %172 = load i8, i8* %91, align 8, !range !2
  store i8 %172, i8* %170, align 8
  %173 = getelementptr inbounds i8, i8* %170, i64 1
  store i8 1, i8* %173, align 1
  %174 = getelementptr inbounds i8, i8* %170, i64 8
  %175 = bitcast i8* %174 to i32*
  store i32 %125, i32* %175, align 8
  %176 = getelementptr inbounds i8, i8* %170, i64 12
  %177 = bitcast i8* %176 to i32*
  store i32 %104, i32* %177, align 4
  %178 = load i32, i32* %11, align 4
  %179 = getelementptr inbounds i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to i32*
  store i32 %178, i32* %180, align 8
  %181 = getelementptr inbounds i8, i8* %170, i64 20
  %182 = bitcast i8* %181 to i32*
  store i32 1, i32* %182, align 4
  %183 = load i32, i32* %79, align 4
  %184 = add i32 %183, %141
  %185 = getelementptr inbounds i8, i8* %170, i64 24
  %186 = bitcast i8* %185 to i32*
  store i32 %184, i32* %186, align 8
  %187 = zext i32 %184 to i64
  %188 = icmp eq i32 %184, 0
  br i1 %188, label %202, label %189

189:                                              ; preds = %153
  %190 = shl nuw nsw i64 %187, 3
  %191 = call i8* @_Znwm(i64 %190) #13
  %192 = bitcast i8* %191 to %struct.JBig2HuffmanCode*
  %193 = ptrtoint i8* %191 to i64
  %194 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %192, i64 %187
  %195 = ptrtoint %struct.JBig2HuffmanCode* %194 to i64
  %196 = add nsw i64 %187, -1
  %197 = getelementptr %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %192, i64 %196, i32 0
  %198 = ptrtoint i32* %197 to i64
  %199 = sub i64 8, %193
  %200 = add i64 %199, %198
  %201 = and i64 %200, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %191, i8 0, i64 %201, i1 false) #12
  br label %202

202:                                              ; preds = %153, %189
  %203 = phi i64 [ 0, %153 ], [ %193, %189 ]
  %204 = phi i64 [ 0, %153 ], [ %195, %189 ]
  br label %205

205:                                              ; preds = %205, %202
  %206 = phi i32 [ 1, %202 ], [ %209, %205 ]
  %207 = shl i32 1, %206
  %208 = icmp ult i32 %207, %184
  %209 = add i32 %206, 1
  br i1 %208, label %205, label %210

210:                                              ; preds = %205
  store i32 %206, i32* %15, align 4
  br i1 %188, label %261, label %211

211:                                              ; preds = %210
  %212 = inttoptr i64 %203 to %struct.JBig2HuffmanCode*
  %213 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 0, i32 0
  store i32 %206, i32* %213, align 4
  %214 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 0, i32 1
  store i32 0, i32* %214, align 4
  %215 = icmp eq i32 %184, 1
  br i1 %215, label %261, label %216

216:                                              ; preds = %211
  %217 = add nsw i64 %187, -1
  %218 = add nsw i64 %187, -2
  %219 = and i64 %217, 3
  %220 = icmp ult i64 %218, 3
  br i1 %220, label %248, label %221

221:                                              ; preds = %216
  %222 = sub nsw i64 %217, %219
  br label %223

223:                                              ; preds = %223, %221
  %224 = phi i64 [ 1, %221 ], [ %245, %223 ]
  %225 = phi i64 [ %222, %221 ], [ %246, %223 ]
  %226 = load i32, i32* %15, align 4
  %227 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %224, i32 0
  store i32 %226, i32* %227, align 4
  %228 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %224, i32 1
  %229 = trunc i64 %224 to i32
  store i32 %229, i32* %228, align 4
  %230 = add nuw nsw i64 %224, 1
  %231 = load i32, i32* %15, align 4
  %232 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %230, i32 0
  store i32 %231, i32* %232, align 4
  %233 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %230, i32 1
  %234 = trunc i64 %230 to i32
  store i32 %234, i32* %233, align 4
  %235 = add nuw nsw i64 %224, 2
  %236 = load i32, i32* %15, align 4
  %237 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %235, i32 0
  store i32 %236, i32* %237, align 4
  %238 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %235, i32 1
  %239 = trunc i64 %235 to i32
  store i32 %239, i32* %238, align 4
  %240 = add nuw nsw i64 %224, 3
  %241 = load i32, i32* %15, align 4
  %242 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %240, i32 0
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %240, i32 1
  %244 = trunc i64 %240 to i32
  store i32 %244, i32* %243, align 4
  %245 = add nuw nsw i64 %224, 4
  %246 = add i64 %225, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %223

248:                                              ; preds = %223, %216
  %249 = phi i64 [ 1, %216 ], [ %245, %223 ]
  %250 = icmp eq i64 %219, 0
  br i1 %250, label %261, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %258, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %259, %251 ], [ %219, %248 ]
  %254 = load i32, i32* %15, align 4
  %255 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %252, i32 0
  store i32 %254, i32* %255, align 4
  %256 = getelementptr inbounds %struct.JBig2HuffmanCode, %struct.JBig2HuffmanCode* %212, i64 %252, i32 1
  %257 = trunc i64 %252 to i32
  store i32 %257, i32* %256, align 4
  %258 = add nuw nsw i64 %252, 1
  %259 = add i64 %253, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %251, !llvm.loop !19

261:                                              ; preds = %248, %251, %211, %210
  %262 = getelementptr inbounds i8, i8* %170, i64 32
  %263 = bitcast i8* %262 to %struct.JBig2HuffmanCode**
  %264 = load %struct.JBig2HuffmanCode*, %struct.JBig2HuffmanCode** %263, align 8
  %265 = icmp eq %struct.JBig2HuffmanCode* %264, null
  br i1 %265, label %271, label %266

266:                                              ; preds = %261
  %267 = ptrtoint %struct.JBig2HuffmanCode* %264 to i64
  %268 = getelementptr inbounds i8, i8* %170, i64 40
  %269 = bitcast i8* %268 to i64*
  store i64 %267, i64* %269, align 8
  %270 = bitcast %struct.JBig2HuffmanCode* %264 to i8*
  call void @_ZdlPv(i8* %270) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 24, i1 false) #12
  br label %271

271:                                              ; preds = %261, %266
  %272 = bitcast i8* %262 to i64*
  store i64 %203, i64* %272, align 8
  %273 = getelementptr inbounds i8, i8* %170, i64 40
  %274 = bitcast i8* %273 to i64*
  store i64 %204, i64* %274, align 8
  %275 = getelementptr inbounds i8, i8* %170, i64 48
  %276 = bitcast i8* %275 to i64*
  store i64 %204, i64* %276, align 8
  %277 = load i64, i64* %80, align 8
  %278 = load i64, i64* %81, align 8
  %279 = sub i64 %277, %278
  %280 = ashr exact i64 %279, 3
  %281 = icmp ult i64 %280, %187
  %282 = inttoptr i64 %278 to %class.CJBig2_Image**
  br i1 %281, label %283, label %285

283:                                              ; preds = %271
  %284 = sub nsw i64 %187, %280
  call void @_ZNSt3__16vectorIP12CJBig2_ImageNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.44"* nonnull %19, i64 %284) #12
  br label %289

285:                                              ; preds = %271
  %286 = icmp ugt i64 %280, %187
  br i1 %286, label %287, label %289

287:                                              ; preds = %285
  %288 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %282, i64 %187
  store %class.CJBig2_Image** %288, %class.CJBig2_Image*** %40, align 8
  br label %289

289:                                              ; preds = %283, %285, %287
  %290 = load i32, i32* %79, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %289
  %293 = zext i32 %290 to i64
  %294 = shl nuw nsw i64 %293, 3
  %295 = load i8*, i8** %83, align 8
  %296 = load i8*, i8** %84, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %296, i8* align 8 %295, i64 %294, i1 false) #12
  br label %297

297:                                              ; preds = %289, %292
  %298 = and i64 %114, 4294967295
  %299 = icmp eq i32 %141, 0
  br i1 %299, label %319, label %300

300:                                              ; preds = %297
  %301 = and i64 %114, 1
  %302 = icmp eq i64 %298, 1
  br i1 %302, label %305, label %303

303:                                              ; preds = %300
  %304 = sub nsw i64 %298, %301
  br label %360

305:                                              ; preds = %360, %300
  %306 = phi i64 [ 0, %300 ], [ %384, %360 ]
  %307 = icmp eq i64 %301, 0
  br i1 %307, label %319, label %308

308:                                              ; preds = %305
  %309 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %309, i64 %306, i32 0, i32 0, i32 0
  %311 = bitcast %class.CJBig2_Image** %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = load i32, i32* %79, align 4
  %314 = zext i32 %313 to i64
  %315 = add nuw i64 %306, %314
  %316 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %317 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %316, i64 %315
  %318 = bitcast %class.CJBig2_Image** %317 to i64*
  store i64 %312, i64* %318, align 8
  br label %319

319:                                              ; preds = %308, %305, %297
  %320 = load i64, i64* %81, align 8
  %321 = getelementptr inbounds i8, i8* %170, i64 56
  %322 = bitcast i8* %321 to i64*
  store i64 %320, i64* %322, align 8
  %323 = getelementptr inbounds i8, i8* %170, i64 4
  store i8 0, i8* %323, align 4
  %324 = getelementptr inbounds i8, i8* %170, i64 64
  %325 = bitcast i8* %324 to i32*
  store i32 0, i32* %325, align 8
  %326 = getelementptr inbounds i8, i8* %170, i64 3
  store i8 0, i8* %326, align 1
  %327 = getelementptr inbounds i8, i8* %170, i64 68
  %328 = bitcast i8* %327 to i32*
  store i32 1, i32* %328, align 4
  %329 = getelementptr inbounds i8, i8* %170, i64 5
  store i8 0, i8* %329, align 1
  %330 = getelementptr inbounds i8, i8* %170, i64 72
  %331 = bitcast i8* %330 to i8**
  store i8* %154, i8** %331, align 8
  %332 = getelementptr inbounds i8, i8* %170, i64 80
  %333 = bitcast i8* %332 to i8**
  store i8* %156, i8** %333, align 8
  %334 = getelementptr inbounds i8, i8* %170, i64 88
  %335 = bitcast i8* %334 to i8**
  store i8* %158, i8** %335, align 8
  %336 = getelementptr inbounds i8, i8* %170, i64 96
  %337 = bitcast i8* %336 to i8**
  store i8* %160, i8** %337, align 8
  %338 = getelementptr inbounds i8, i8* %170, i64 104
  %339 = bitcast i8* %338 to i8**
  store i8* %162, i8** %339, align 8
  %340 = getelementptr inbounds i8, i8* %170, i64 112
  %341 = bitcast i8* %340 to i8**
  store i8* %164, i8** %341, align 8
  %342 = getelementptr inbounds i8, i8* %170, i64 120
  %343 = bitcast i8* %342 to i8**
  store i8* %166, i8** %343, align 8
  %344 = getelementptr inbounds i8, i8* %170, i64 128
  %345 = bitcast i8* %344 to i8**
  store i8* %168, i8** %345, align 8
  %346 = load i8, i8* %85, align 2, !range !2
  %347 = getelementptr inbounds i8, i8* %170, i64 2
  store i8 %346, i8* %347, align 2
  %348 = load i8, i8* %86, align 8
  %349 = getelementptr inbounds i8, i8* %170, i64 136
  store i8 %348, i8* %349, align 8
  %350 = load i8, i8* %87, align 1
  %351 = getelementptr inbounds i8, i8* %170, i64 137
  store i8 %350, i8* %351, align 1
  %352 = load i8, i8* %88, align 2
  %353 = getelementptr inbounds i8, i8* %170, i64 138
  store i8 %352, i8* %353, align 2
  %354 = load i8, i8* %89, align 1
  %355 = getelementptr inbounds i8, i8* %170, i64 139
  store i8 %354, i8* %355, align 1
  %356 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %90, align 8
  %357 = call %class.CJBig2_Image* @_ZN14CJBig2_TRDProc13DecodeHuffmanEP16CJBig2_BitStreamP13JBig2ArithCtx(%class.CJBig2_TRDProc* nonnull %171, %class.CJBig2_BitStream* %1, %class.JBig2ArithCtx* %356) #12
  %358 = ptrtoint %class.CJBig2_Image* %357 to i64
  %359 = icmp eq %class.CJBig2_Image* %357, null
  call void @_ZN14CJBig2_TRDProcD1Ev(%class.CJBig2_TRDProc* nonnull %171) #12
  call void @_ZdlPv(i8* nonnull %170) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %169) #12
  call void @_ZdlPv(i8* nonnull %168) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %167) #12
  call void @_ZdlPv(i8* nonnull %166) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %165) #12
  call void @_ZdlPv(i8* nonnull %164) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %163) #12
  call void @_ZdlPv(i8* nonnull %162) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %161) #12
  call void @_ZdlPv(i8* nonnull %160) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %159) #12
  call void @_ZdlPv(i8* nonnull %158) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %157) #12
  call void @_ZdlPv(i8* nonnull %156) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %155) #12
  call void @_ZdlPv(i8* nonnull %154) #13
  br i1 %359, label %859, label %547

360:                                              ; preds = %360, %303
  %361 = phi i64 [ 0, %303 ], [ %384, %360 ]
  %362 = phi i64 [ %304, %303 ], [ %385, %360 ]
  %363 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %364 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %363, i64 %361, i32 0, i32 0, i32 0
  %365 = bitcast %class.CJBig2_Image** %364 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = load i32, i32* %79, align 4
  %368 = zext i32 %367 to i64
  %369 = add nuw i64 %361, %368
  %370 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %371 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %370, i64 %369
  %372 = bitcast %class.CJBig2_Image** %371 to i64*
  store i64 %366, i64* %372, align 8
  %373 = or i64 %361, 1
  %374 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %375 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %374, i64 %373, i32 0, i32 0, i32 0
  %376 = bitcast %class.CJBig2_Image** %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = load i32, i32* %79, align 4
  %379 = zext i32 %378 to i64
  %380 = add nuw i64 %373, %379
  %381 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %382 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %381, i64 %380
  %383 = bitcast %class.CJBig2_Image** %382 to i64*
  store i64 %377, i64* %383, align 8
  %384 = add nuw nsw i64 %361, 2
  %385 = add i64 %362, -2
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %305, label %360

387:                                              ; preds = %150
  %388 = icmp eq i32 %151, 1
  br i1 %388, label %389, label %547

389:                                              ; preds = %387
  %390 = load i32, i32* %79, align 4
  %391 = load i32, i32* %43, align 8
  %392 = add i32 %391, %390
  br label %393

393:                                              ; preds = %393, %389
  %394 = phi i32 [ 1, %389 ], [ %397, %393 ]
  %395 = shl i32 1, %394
  %396 = icmp ult i32 %395, %392
  %397 = add i32 %394, 1
  br i1 %396, label %393, label %398

398:                                              ; preds = %393
  store i32 %394, i32* %15, align 4
  %399 = and i32 %394, 255
  %400 = icmp eq i32 %399, 0
  br label %401

401:                                              ; preds = %398, %410
  %402 = phi i32 [ %408, %410 ], [ 0, %398 ]
  %403 = call i32 @_ZN16CJBig2_BitStream8read1BitEPj(%class.CJBig2_BitStream* %1, i32* nonnull %15) #12
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %859

405:                                              ; preds = %401
  %406 = shl i32 %402, 1
  %407 = load i32, i32* %15, align 4
  %408 = or i32 %407, %406
  %409 = icmp ult i32 %408, %392
  br i1 %409, label %410, label %859

410:                                              ; preds = %405
  %411 = select i1 %400, i32 %408, i32 %392
  %412 = icmp ult i32 %411, %392
  br i1 %412, label %413, label %401

413:                                              ; preds = %410
  %414 = call i8* @_Znwm(i64 80) #13
  %415 = bitcast i8* %414 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %415, i64 15) #12
  %416 = call i8* @_Znwm(i64 80) #13
  %417 = bitcast i8* %416 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %417, i64 1) #12
  %418 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* nonnull %415, i32* nonnull %16) #12
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %543

420:                                              ; preds = %413
  %421 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* nonnull %415, i32* nonnull %17) #12
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %543

423:                                              ; preds = %420
  %424 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* nonnull %417, i32* nonnull %14) #12
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %543

426:                                              ; preds = %423
  call void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream* %1) #12
  %427 = call i32 @_ZNK16CJBig2_BitStream9getOffsetEv(%class.CJBig2_BitStream* %1) #12
  store i32 %427, i32* %15, align 4
  %428 = zext i32 %392 to i64
  %429 = load i64, i64* %80, align 8
  %430 = load i64, i64* %81, align 8
  %431 = sub i64 %429, %430
  %432 = ashr exact i64 %431, 3
  %433 = icmp ult i64 %432, %428
  %434 = inttoptr i64 %430 to %class.CJBig2_Image**
  br i1 %433, label %435, label %437

435:                                              ; preds = %426
  %436 = sub nsw i64 %428, %432
  call void @_ZNSt3__16vectorIP12CJBig2_ImageNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.44"* nonnull %19, i64 %436) #12
  br label %441

437:                                              ; preds = %426
  %438 = icmp ugt i64 %432, %428
  br i1 %438, label %439, label %441

439:                                              ; preds = %437
  %440 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %434, i64 %428
  store %class.CJBig2_Image** %440, %class.CJBig2_Image*** %40, align 8
  br label %441

441:                                              ; preds = %435, %437, %439
  %442 = load i32, i32* %79, align 4
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %449, label %444

444:                                              ; preds = %441
  %445 = zext i32 %442 to i64
  %446 = shl nuw nsw i64 %445, 3
  %447 = load i8*, i8** %83, align 8
  %448 = load i8*, i8** %84, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %448, i8* align 8 %447, i64 %446, i1 false) #12
  br label %449

449:                                              ; preds = %441, %444
  %450 = and i64 %114, 4294967295
  %451 = icmp eq i32 %141, 0
  br i1 %451, label %471, label %452

452:                                              ; preds = %449
  %453 = and i64 %114, 1
  %454 = icmp eq i64 %450, 1
  br i1 %454, label %457, label %455

455:                                              ; preds = %452
  %456 = sub nsw i64 %450, %453
  br label %507

457:                                              ; preds = %507, %452
  %458 = phi i64 [ 0, %452 ], [ %531, %507 ]
  %459 = icmp eq i64 %453, 0
  br i1 %459, label %471, label %460

460:                                              ; preds = %457
  %461 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %462 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %461, i64 %458, i32 0, i32 0, i32 0
  %463 = bitcast %class.CJBig2_Image** %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = load i32, i32* %79, align 4
  %466 = zext i32 %465 to i64
  %467 = add nuw i64 %458, %466
  %468 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %469 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %468, i64 %467
  %470 = bitcast %class.CJBig2_Image** %469 to i64*
  store i64 %464, i64* %470, align 8
  br label %471

471:                                              ; preds = %460, %457, %449
  %472 = call i8* @_Znwm(i64 40) #13
  %473 = bitcast i8* %472 to %class.CJBig2_GRRDProc*
  call void @_ZN15CJBig2_GRRDProcC1Ev(%class.CJBig2_GRRDProc* nonnull %473) #12
  %474 = getelementptr inbounds i8, i8* %472, i64 4
  %475 = bitcast i8* %474 to i32*
  store i32 %125, i32* %475, align 4
  %476 = getelementptr inbounds i8, i8* %472, i64 8
  %477 = bitcast i8* %476 to i32*
  store i32 %104, i32* %477, align 8
  %478 = load i8, i8* %85, align 2, !range !2
  store i8 %478, i8* %472, align 8
  %479 = zext i32 %411 to i64
  %480 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %481 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %480, i64 %479
  %482 = bitcast %class.CJBig2_Image** %481 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = getelementptr inbounds i8, i8* %472, i64 24
  %485 = bitcast i8* %484 to i64*
  store i64 %483, i64* %485, align 8
  %486 = load i32, i32* %16, align 4
  %487 = getelementptr inbounds i8, i8* %472, i64 12
  %488 = bitcast i8* %487 to i32*
  store i32 %486, i32* %488, align 4
  %489 = load i32, i32* %17, align 4
  %490 = getelementptr inbounds i8, i8* %472, i64 16
  %491 = bitcast i8* %490 to i32*
  store i32 %489, i32* %491, align 8
  %492 = getelementptr inbounds i8, i8* %472, i64 1
  store i8 0, i8* %492, align 1
  %493 = load i8, i8* %86, align 8
  %494 = getelementptr inbounds i8, i8* %472, i64 32
  store i8 %493, i8* %494, align 8
  %495 = load i8, i8* %87, align 1
  %496 = getelementptr inbounds i8, i8* %472, i64 33
  store i8 %495, i8* %496, align 1
  %497 = load i8, i8* %88, align 2
  %498 = getelementptr inbounds i8, i8* %472, i64 34
  store i8 %497, i8* %498, align 2
  %499 = load i8, i8* %89, align 1
  %500 = getelementptr inbounds i8, i8* %472, i64 35
  store i8 %499, i8* %500, align 1
  %501 = call i8* @_Znwm(i64 24) #13
  %502 = bitcast i8* %501 to %class.CJBig2_ArithDecoder*
  call void @_ZN19CJBig2_ArithDecoderC1EP16CJBig2_BitStream(%class.CJBig2_ArithDecoder* nonnull %502, %class.CJBig2_BitStream* %1) #12
  %503 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %90, align 8
  %504 = call %class.CJBig2_Image* @_ZN15CJBig2_GRRDProc6DecodeEP19CJBig2_ArithDecoderP13JBig2ArithCtx(%class.CJBig2_GRRDProc* nonnull %473, %class.CJBig2_ArithDecoder* nonnull %502, %class.JBig2ArithCtx* %503) #12
  %505 = ptrtoint %class.CJBig2_Image* %504 to i64
  %506 = icmp eq %class.CJBig2_Image* %504, null
  br i1 %506, label %541, label %534

507:                                              ; preds = %507, %455
  %508 = phi i64 [ 0, %455 ], [ %531, %507 ]
  %509 = phi i64 [ %456, %455 ], [ %532, %507 ]
  %510 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %510, i64 %508, i32 0, i32 0, i32 0
  %512 = bitcast %class.CJBig2_Image** %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = load i32, i32* %79, align 4
  %515 = zext i32 %514 to i64
  %516 = add nuw i64 %508, %515
  %517 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %518 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %517, i64 %516
  %519 = bitcast %class.CJBig2_Image** %518 to i64*
  store i64 %513, i64* %519, align 8
  %520 = or i64 %508, 1
  %521 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %522 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %521, i64 %520, i32 0, i32 0, i32 0
  %523 = bitcast %class.CJBig2_Image** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = load i32, i32* %79, align 4
  %526 = zext i32 %525 to i64
  %527 = add nuw i64 %520, %526
  %528 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %529 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %528, i64 %527
  %530 = bitcast %class.CJBig2_Image** %529 to i64*
  store i64 %524, i64* %530, align 8
  %531 = add nuw nsw i64 %508, 2
  %532 = add i64 %509, -2
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %457, label %507

534:                                              ; preds = %471
  call void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream* %1) #12
  call void @_ZN16CJBig2_BitStream6offsetEj(%class.CJBig2_BitStream* %1, i32 2) #12
  %535 = load i32, i32* %14, align 4
  %536 = call i32 @_ZNK16CJBig2_BitStream9getOffsetEv(%class.CJBig2_BitStream* %1) #12
  %537 = load i32, i32* %15, align 4
  %538 = sub i32 %536, %537
  %539 = icmp ne i32 %535, %538
  %540 = zext i1 %539 to i32
  br label %541

541:                                              ; preds = %471, %534
  %542 = phi i32 [ 1, %471 ], [ %540, %534 ]
  call void @_ZN19CJBig2_ArithDecoderD1Ev(%class.CJBig2_ArithDecoder* nonnull %502) #12
  call void @_ZdlPv(i8* nonnull %501) #13
  call void @_ZN15CJBig2_GRRDProcD1Ev(%class.CJBig2_GRRDProc* nonnull %473) #12
  call void @_ZdlPv(i8* nonnull %472) #13
  br label %543

543:                                              ; preds = %541, %423, %420, %413
  %544 = phi i64 [ %505, %541 ], [ 0, %423 ], [ 0, %420 ], [ 0, %413 ]
  %545 = phi i32 [ %542, %541 ], [ 1, %423 ], [ 1, %420 ], [ 1, %413 ]
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %417) #12
  call void @_ZdlPv(i8* nonnull %416) #13
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %415) #12
  call void @_ZdlPv(i8* nonnull %414) #13
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %849

547:                                              ; preds = %319, %387, %543
  %548 = phi i64 [ %358, %319 ], [ %544, %543 ], [ 0, %387 ]
  %549 = and i64 %114, 4294967295
  %550 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %551 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %550, i64 %549
  %552 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %551, i64 0, i32 0, i32 0, i32 0
  %553 = load %class.CJBig2_Image*, %class.CJBig2_Image** %552, align 8
  %554 = bitcast %"class.std::__1::unique_ptr.24"* %551 to i64*
  store i64 %548, i64* %554, align 8
  %555 = icmp eq %class.CJBig2_Image* %553, null
  br i1 %555, label %558, label %556

556:                                              ; preds = %547
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %553) #12
  %557 = bitcast %class.CJBig2_Image* %553 to i8*
  call void @_ZdlPv(i8* %557) #13
  br label %558

558:                                              ; preds = %556, %547
  %559 = load i8, i8* %49, align 1
  %560 = icmp eq i8 %559, 0
  br i1 %560, label %561, label %565

561:                                              ; preds = %144, %558
  %562 = phi i64 [ %145, %144 ], [ %549, %558 ]
  %563 = load i32*, i32** %25, align 8
  %564 = getelementptr inbounds i32, i32* %563, i64 %562
  store i32 %125, i32* %564, align 4
  br label %565

565:                                              ; preds = %561, %558
  %566 = add i32 %141, 1
  br label %108

567:                                              ; preds = %113
  %568 = trunc i64 %114 to i32
  %569 = load i8, i8* %49, align 1, !range !2
  %570 = icmp eq i8 %569, 0
  br i1 %570, label %571, label %675

571:                                              ; preds = %567
  %572 = load %class.CJBig2_HuffmanTable*, %class.CJBig2_HuffmanTable** %92, align 8
  %573 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* %572, i32* nonnull %18) #12
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %859

575:                                              ; preds = %571
  call void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream* %1) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  store i64 0, i64* %95, align 8
  %576 = load i32, i32* %18, align 4
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %618

578:                                              ; preds = %575
  %579 = zext i32 %115 to i33
  %580 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %579, i33 7) #12
  %581 = extractvalue { i33, i1 } %580, 1
  %582 = extractvalue { i33, i1 } %580, 0
  %583 = icmp slt i33 %582, 0
  %584 = or i1 %581, %583
  br i1 %584, label %664, label %585, !prof !21

585:                                              ; preds = %578
  %586 = lshr i33 %582, 3
  %587 = and i33 %586, 536870911
  %588 = zext i33 %587 to i64
  %589 = trunc i33 %587 to i32
  %590 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %589, i32 %104) #12
  %591 = extractvalue { i32, i1 } %590, 1
  br i1 %591, label %664, label %592

592:                                              ; preds = %585
  %593 = extractvalue { i32, i1 } %590, 0
  %594 = call i32 @_ZNK16CJBig2_BitStream11getByteLeftEv(%class.CJBig2_BitStream* %1) #12
  %595 = icmp ult i32 %594, %593
  br i1 %595, label %664, label %596

596:                                              ; preds = %592
  %597 = call i8* @_Znwm(i64 32) #13
  %598 = bitcast i8* %597 to %class.CJBig2_Image*
  call void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image* nonnull %598, i32 %115, i32 %104) #12
  %599 = ptrtoint i8* %597 to i64
  %600 = load %class.CJBig2_Image*, %class.CJBig2_Image** %94, align 8
  store i64 %599, i64* %95, align 8
  %601 = icmp eq %class.CJBig2_Image* %600, null
  br i1 %601, label %604, label %602

602:                                              ; preds = %596
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %600) #12
  %603 = bitcast %class.CJBig2_Image* %600 to i8*
  call void @_ZdlPv(i8* %603) #13
  br label %604

604:                                              ; preds = %602, %596
  br i1 %107, label %626, label %605

605:                                              ; preds = %604, %605
  %606 = phi i32 [ %616, %605 ], [ 0, %604 ]
  %607 = load %class.CJBig2_Image*, %class.CJBig2_Image** %94, align 8
  %608 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %607, i64 0, i32 0, i32 1, i32 0
  %609 = load i8*, i8** %608, align 8
  %610 = getelementptr inbounds %class.CJBig2_Image, %class.CJBig2_Image* %607, i64 0, i32 3
  %611 = load i32, i32* %610, align 8
  %612 = mul i32 %611, %606
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds i8, i8* %609, i64 %613
  %615 = call i8* @_ZNK16CJBig2_BitStream10getPointerEv(%class.CJBig2_BitStream* %1) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %614, i8* align 1 %615, i64 %588, i1 false)
  call void @_ZN16CJBig2_BitStream6offsetEj(%class.CJBig2_BitStream* %1, i32 %589) #12
  %616 = add nuw i32 %606, 1
  %617 = icmp eq i32 %616, %104
  br i1 %617, label %626, label %605

618:                                              ; preds = %575
  %619 = call i8* @_Znwm(i64 80) #13
  %620 = bitcast i8* %619 to %class.CJBig2_GRDProc*
  call void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc* nonnull %620) #12
  store i8 1, i8* %619, align 8
  %621 = getelementptr inbounds i8, i8* %619, i64 4
  %622 = bitcast i8* %621 to i32*
  store i32 %115, i32* %622, align 4
  %623 = getelementptr inbounds i8, i8* %619, i64 8
  %624 = bitcast i8* %623 to i32*
  store i32 %104, i32* %624, align 8
  %625 = call i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc* nonnull %620, %"class.std::__1::unique_ptr.24"* nonnull %20, %class.CJBig2_BitStream* %1) #12
  call void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream* %1) #12
  call void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc* nonnull %620) #12
  call void @_ZdlPv(i8* nonnull %619) #13
  br label %626

626:                                              ; preds = %605, %604, %618
  store i32 0, i32* %15, align 4
  %627 = load %class.CJBig2_Image*, %class.CJBig2_Image** %94, align 8
  %628 = icmp eq %class.CJBig2_Image* %627, null
  br i1 %628, label %635, label %629

629:                                              ; preds = %626
  %630 = icmp ult i32 %97, %568
  br i1 %630, label %632, label %631

631:                                              ; preds = %629
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %94, align 8
  br label %668

632:                                              ; preds = %629
  %633 = zext i32 %97 to i64
  %634 = load i32*, i32** %25, align 8
  br label %636

635:                                              ; preds = %626
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  br label %675

636:                                              ; preds = %662, %632
  %637 = phi i32* [ %634, %632 ], [ %654, %662 ]
  %638 = phi i32 [ 0, %632 ], [ %658, %662 ]
  %639 = phi %class.CJBig2_Image* [ %627, %632 ], [ %663, %662 ]
  %640 = phi i64 [ %633, %632 ], [ %659, %662 ]
  %641 = getelementptr inbounds i32, i32* %637, i64 %640
  %642 = load i32, i32* %641, align 4
  %643 = call %class.CJBig2_Image* @_ZN12CJBig2_Image8SubImageEiiii(%class.CJBig2_Image* %639, i32 %638, i32 0, i32 %642, i32 %104) #12
  %644 = ptrtoint %class.CJBig2_Image* %643 to i64
  %645 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %646 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %645, i64 %640
  %647 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %646, i64 0, i32 0, i32 0, i32 0
  %648 = load %class.CJBig2_Image*, %class.CJBig2_Image** %647, align 8
  %649 = bitcast %"class.std::__1::unique_ptr.24"* %646 to i64*
  store i64 %644, i64* %649, align 8
  %650 = icmp eq %class.CJBig2_Image* %648, null
  br i1 %650, label %653, label %651

651:                                              ; preds = %636
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %648) #12
  %652 = bitcast %class.CJBig2_Image* %648 to i8*
  call void @_ZdlPv(i8* %652) #13
  br label %653

653:                                              ; preds = %651, %636
  %654 = load i32*, i32** %25, align 8
  %655 = getelementptr inbounds i32, i32* %654, i64 %640
  %656 = load i32, i32* %655, align 4
  %657 = load i32, i32* %15, align 4
  %658 = add i32 %657, %656
  store i32 %658, i32* %15, align 4
  %659 = add nuw nsw i64 %640, 1
  %660 = trunc i64 %659 to i32
  %661 = icmp eq i32 %660, %568
  br i1 %661, label %664, label %662

662:                                              ; preds = %653
  %663 = load %class.CJBig2_Image*, %class.CJBig2_Image** %94, align 8
  br label %636

664:                                              ; preds = %653, %578, %585, %592
  %665 = phi i32 [ 1, %592 ], [ 1, %585 ], [ 1, %578 ], [ 0, %653 ]
  %666 = load %class.CJBig2_Image*, %class.CJBig2_Image** %94, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %94, align 8
  %667 = icmp eq %class.CJBig2_Image* %666, null
  br i1 %667, label %672, label %668

668:                                              ; preds = %631, %664
  %669 = phi i32 [ 0, %631 ], [ %665, %664 ]
  %670 = phi %class.CJBig2_Image* [ %627, %631 ], [ %666, %664 ]
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %670) #12
  %671 = bitcast %class.CJBig2_Image* %670 to i8*
  call void @_ZdlPv(i8* %671) #13
  br label %672

672:                                              ; preds = %664, %668
  %673 = phi i32 [ %665, %664 ], [ %669, %668 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %675, label %859

675:                                              ; preds = %672, %635, %567
  %676 = load i32, i32* %43, align 8
  %677 = icmp ugt i32 %676, %568
  br i1 %677, label %96, label %678

678:                                              ; preds = %675, %69
  %679 = call i8* @_Znwm(i64 80) #13
  %680 = bitcast i8* %679 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable* nonnull %680, i64 1) #12
  %681 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 4
  %682 = load i32, i32* %681, align 4
  %683 = load i32, i32* %43, align 8
  %684 = add i32 %683, %682
  %685 = zext i32 %684 to i64
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.38"* nonnull %12, i64 %685, i1 zeroext false)
  %686 = load i32, i32* %681, align 4
  %687 = load i32, i32* %43, align 8
  %688 = sub i32 0, %686
  %689 = icmp eq i32 %687, %688
  br i1 %689, label %690, label %692

690:                                              ; preds = %678
  %691 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 6
  br label %750

692:                                              ; preds = %678, %739
  %693 = phi i32 [ %743, %739 ], [ 0, %678 ]
  %694 = phi i8 [ %744, %739 ], [ 0, %678 ]
  %695 = phi i32 [ %700, %739 ], [ 0, %678 ]
  %696 = call i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder* nonnull %42, %class.CJBig2_HuffmanTable* nonnull %680, i32* nonnull %13) #12
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %854

698:                                              ; preds = %692
  %699 = load i32, i32* %13, align 4
  %700 = add i32 %699, %695
  %701 = load i32, i32* %681, align 4
  %702 = load i32, i32* %43, align 8
  %703 = add i32 %702, %701
  %704 = icmp ugt i32 %700, %703
  br i1 %704, label %854, label %705

705:                                              ; preds = %698
  %706 = icmp ne i32 %699, 0
  %707 = icmp ult i32 %695, %700
  %708 = and i1 %706, %707
  br i1 %708, label %709, label %739

709:                                              ; preds = %705
  %710 = and i8 %694, 1
  %711 = icmp eq i8 %710, 0
  %712 = zext i8 %710 to i32
  %713 = zext i32 %695 to i64
  %714 = mul nuw i32 %699, %712
  %715 = zext i32 %700 to i64
  br label %716

716:                                              ; preds = %730, %709
  %717 = phi i64 [ %713, %709 ], [ %732, %730 ]
  %718 = load i64*, i64** %31, align 8
  %719 = lshr i64 %717, 6
  %720 = getelementptr inbounds i64, i64* %718, i64 %719
  %721 = and i64 %717, 63
  %722 = shl i64 1, %721
  br i1 %711, label %726, label %723

723:                                              ; preds = %716
  %724 = load i64, i64* %720, align 8
  %725 = or i64 %724, %722
  br label %730

726:                                              ; preds = %716
  %727 = xor i64 %722, -1
  %728 = load i64, i64* %720, align 8
  %729 = and i64 %728, %727
  br label %730

730:                                              ; preds = %723, %726
  %731 = phi i64 [ %729, %726 ], [ %725, %723 ]
  store i64 %731, i64* %720, align 8
  %732 = add nuw nsw i64 %717, 1
  %733 = icmp eq i64 %732, %715
  br i1 %733, label %734, label %716

734:                                              ; preds = %730
  %735 = add i32 %693, %714
  %736 = load i32, i32* %681, align 4
  %737 = load i32, i32* %43, align 8
  %738 = add i32 %737, %736
  br label %739

739:                                              ; preds = %734, %705
  %740 = phi i32 [ %738, %734 ], [ %703, %705 ]
  %741 = phi i32 [ %737, %734 ], [ %702, %705 ]
  %742 = phi i32 [ %736, %734 ], [ %701, %705 ]
  %743 = phi i32 [ %735, %734 ], [ %693, %705 ]
  %744 = xor i8 %694, 1
  %745 = icmp ult i32 %700, %740
  br i1 %745, label %692, label %746

746:                                              ; preds = %739
  %747 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 6
  %748 = load i32, i32* %747, align 4
  %749 = icmp ugt i32 %743, %748
  br i1 %749, label %854, label %750

750:                                              ; preds = %690, %746
  %751 = phi i32* [ %691, %690 ], [ %747, %746 ]
  %752 = phi i32 [ %686, %690 ], [ %742, %746 ]
  %753 = phi i32 [ %687, %690 ], [ %741, %746 ]
  %754 = sub i32 0, %752
  %755 = icmp eq i32 %753, %754
  br i1 %755, label %854, label %756

756:                                              ; preds = %750
  %757 = bitcast %"class.std::__1::unique_ptr.24"* %6 to i8*
  %758 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %6, i64 0, i32 0, i32 0, i32 0
  %759 = getelementptr inbounds i8, i8* %70, i64 56
  %760 = bitcast i8* %759 to %"class.std::__1::unique_ptr.24"**
  %761 = getelementptr inbounds i8, i8* %70, i64 64
  %762 = bitcast i8* %761 to %"class.std::__1::unique_ptr.24"**
  %763 = getelementptr inbounds i8, i8* %70, i64 48
  %764 = bitcast i8* %763 to %"class.std::__1::vector.22"*
  %765 = bitcast i8* %759 to i64*
  %766 = getelementptr inbounds %class.CJBig2_SDDProc, %class.CJBig2_SDDProc* %0, i64 0, i32 7
  %767 = bitcast %"class.std::__1::unique_ptr.24"* %5 to i8*
  %768 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %5, i64 0, i32 0, i32 0, i32 0
  br label %769

769:                                              ; preds = %756, %841
  %770 = phi i32 [ %753, %756 ], [ %842, %841 ]
  %771 = phi i32 [ %752, %756 ], [ %843, %841 ]
  %772 = phi i64 [ 0, %756 ], [ %845, %841 ]
  %773 = phi i32 [ 0, %756 ], [ %844, %841 ]
  %774 = load i64*, i64** %31, align 8
  %775 = lshr i64 %772, 6
  %776 = getelementptr inbounds i64, i64* %774, i64 %775
  %777 = and i64 %772, 63
  %778 = shl i64 1, %777
  %779 = load i64, i64* %776, align 8
  %780 = and i64 %779, %778
  %781 = icmp eq i64 %780, 0
  br i1 %781, label %841, label %782

782:                                              ; preds = %769
  %783 = load i32, i32* %751, align 4
  %784 = icmp ult i32 %773, %783
  br i1 %784, label %785, label %841

785:                                              ; preds = %782
  %786 = zext i32 %771 to i64
  %787 = icmp ult i64 %772, %786
  br i1 %787, label %788, label %813

788:                                              ; preds = %785
  %789 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %766, align 8
  %790 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %789, i64 %772
  %791 = load %class.CJBig2_Image*, %class.CJBig2_Image** %790, align 8
  %792 = icmp eq %class.CJBig2_Image* %791, null
  br i1 %792, label %797, label %793

793:                                              ; preds = %788
  %794 = call i8* @_Znwm(i64 32) #13
  %795 = bitcast i8* %794 to %class.CJBig2_Image*
  call void @_ZN12CJBig2_ImageC1ERKS_(%class.CJBig2_Image* nonnull %795, %class.CJBig2_Image* nonnull dereferenceable(32) %791) #12
  %796 = ptrtoint i8* %794 to i64
  br label %797

797:                                              ; preds = %788, %793
  %798 = phi i64 [ %796, %793 ], [ 0, %788 ]
  %799 = inttoptr i64 %798 to %class.CJBig2_Image*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %767)
  store %class.CJBig2_Image* %799, %class.CJBig2_Image** %768, align 8
  %800 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %760, align 8
  %801 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %762, align 8
  %802 = icmp ult %"class.std::__1::unique_ptr.24"* %800, %801
  br i1 %802, label %803, label %807

803:                                              ; preds = %797
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %768, align 8
  %804 = bitcast %"class.std::__1::unique_ptr.24"* %800 to i64*
  store i64 %798, i64* %804, align 8
  %805 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %800, i64 1
  %806 = ptrtoint %"class.std::__1::unique_ptr.24"* %805 to i64
  store i64 %806, i64* %765, align 8
  br label %808

807:                                              ; preds = %797
  call void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.22"* %764, %"class.std::__1::unique_ptr.24"* nonnull dereferenceable(8) %5) #12
  br label %808

808:                                              ; preds = %807, %803
  %809 = load %class.CJBig2_Image*, %class.CJBig2_Image** %768, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %768, align 8
  %810 = icmp eq %class.CJBig2_Image* %809, null
  br i1 %810, label %836, label %811

811:                                              ; preds = %808
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %809) #12
  %812 = bitcast %class.CJBig2_Image* %809 to i8*
  call void @_ZdlPv(i8* %812) #13
  br label %836

813:                                              ; preds = %785
  %814 = trunc i64 %772 to i32
  %815 = sub i32 %814, %771
  %816 = zext i32 %815 to i64
  %817 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %818 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %817, i64 %816
  %819 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %818, i64 0, i32 0, i32 0, i32 0
  %820 = bitcast %"class.std::__1::unique_ptr.24"* %818 to i64*
  %821 = load i64, i64* %820, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %819, align 8
  %822 = inttoptr i64 %821 to %class.CJBig2_Image*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %757)
  store %class.CJBig2_Image* %822, %class.CJBig2_Image** %758, align 8
  %823 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %760, align 8
  %824 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %762, align 8
  %825 = icmp ult %"class.std::__1::unique_ptr.24"* %823, %824
  br i1 %825, label %826, label %830

826:                                              ; preds = %813
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %758, align 8
  %827 = bitcast %"class.std::__1::unique_ptr.24"* %823 to i64*
  store i64 %821, i64* %827, align 8
  %828 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %823, i64 1
  %829 = ptrtoint %"class.std::__1::unique_ptr.24"* %828 to i64
  store i64 %829, i64* %765, align 8
  br label %831

830:                                              ; preds = %813
  call void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.22"* %764, %"class.std::__1::unique_ptr.24"* nonnull dereferenceable(8) %6) #12
  br label %831

831:                                              ; preds = %830, %826
  %832 = load %class.CJBig2_Image*, %class.CJBig2_Image** %758, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %758, align 8
  %833 = icmp eq %class.CJBig2_Image* %832, null
  br i1 %833, label %836, label %834

834:                                              ; preds = %831
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %832) #12
  %835 = bitcast %class.CJBig2_Image* %832 to i8*
  call void @_ZdlPv(i8* %835) #13
  br label %836

836:                                              ; preds = %834, %831, %811, %808
  %837 = phi i8* [ %767, %808 ], [ %767, %811 ], [ %757, %831 ], [ %757, %834 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %837)
  %838 = add nuw i32 %773, 1
  %839 = load i32, i32* %681, align 4
  %840 = load i32, i32* %43, align 8
  br label %841

841:                                              ; preds = %769, %782, %836
  %842 = phi i32 [ %770, %782 ], [ %840, %836 ], [ %770, %769 ]
  %843 = phi i32 [ %771, %782 ], [ %839, %836 ], [ %771, %769 ]
  %844 = phi i32 [ %773, %782 ], [ %838, %836 ], [ %773, %769 ]
  %845 = add nuw nsw i64 %772, 1
  %846 = add i32 %842, %843
  %847 = zext i32 %846 to i64
  %848 = icmp ult i64 %845, %847
  br i1 %848, label %769, label %854

849:                                              ; preds = %543
  %850 = icmp eq i64 %544, 0
  br i1 %850, label %859, label %851

851:                                              ; preds = %849
  %852 = inttoptr i64 %544 to %class.CJBig2_Image*
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %852) #12
  %853 = inttoptr i64 %544 to i8*
  call void @_ZdlPv(i8* %853) #13
  br label %859

854:                                              ; preds = %692, %698, %841, %746, %750
  %855 = phi i64 [ 0, %750 ], [ %72, %746 ], [ 0, %841 ], [ %72, %698 ], [ %72, %692 ]
  %856 = phi i64 [ %72, %750 ], [ 0, %746 ], [ %72, %841 ], [ 0, %698 ], [ 0, %692 ]
  %857 = bitcast i8* %679 to %class.CJBig2_HuffmanTable*
  call void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable* nonnull %857) #12
  call void @_ZdlPv(i8* nonnull %679) #13
  %858 = icmp eq i64 %855, 0
  br i1 %858, label %864, label %859

859:                                              ; preds = %96, %102, %571, %672, %319, %146, %113, %119, %123, %405, %401, %851, %849, %854
  %860 = phi i64 [ %856, %854 ], [ 0, %849 ], [ 0, %851 ], [ 0, %401 ], [ 0, %405 ], [ 0, %123 ], [ 0, %119 ], [ 0, %113 ], [ 0, %146 ], [ 0, %319 ], [ 0, %672 ], [ 0, %571 ], [ 0, %102 ], [ 0, %96 ]
  %861 = phi i64 [ %855, %854 ], [ %72, %849 ], [ %72, %851 ], [ %72, %401 ], [ %72, %405 ], [ %72, %123 ], [ %72, %119 ], [ %72, %113 ], [ %72, %146 ], [ %72, %319 ], [ %72, %672 ], [ %72, %571 ], [ %72, %102 ], [ %72, %96 ]
  %862 = inttoptr i64 %861 to %class.CJBig2_SymbolDict*
  call void @_ZN17CJBig2_SymbolDictD1Ev(%class.CJBig2_SymbolDict* nonnull %862) #12
  %863 = inttoptr i64 %861 to i8*
  call void @_ZdlPv(i8* %863) #13
  br label %864

864:                                              ; preds = %854, %859
  %865 = phi i64 [ %856, %854 ], [ %860, %859 ]
  call void @_ZN21CJBig2_HuffmanDecoderD1Ev(%class.CJBig2_HuffmanDecoder* nonnull %42) #12
  call void @_ZdlPv(i8* nonnull %41) #13
  %866 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %39, align 8
  %867 = icmp eq %class.CJBig2_Image** %866, null
  br i1 %867, label %872, label %868

868:                                              ; preds = %864
  %869 = ptrtoint %class.CJBig2_Image** %866 to i64
  %870 = bitcast %class.CJBig2_Image*** %40 to i64*
  store i64 %869, i64* %870, align 8
  %871 = bitcast %class.CJBig2_Image** %866 to i8*
  call void @_ZdlPv(i8* %871) #13
  br label %872

872:                                              ; preds = %864, %868
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #12
  %873 = load i64*, i64** %31, align 8
  %874 = icmp eq i64* %873, null
  br i1 %874, label %877, label %875

875:                                              ; preds = %872
  %876 = bitcast i64* %873 to i8*
  call void @_ZdlPv(i8* %876) #13
  br label %877

877:                                              ; preds = %872, %875
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #12
  %878 = load i32*, i32** %25, align 8
  %879 = icmp eq i32* %878, null
  br i1 %879, label %884, label %880

880:                                              ; preds = %877
  %881 = ptrtoint i32* %878 to i64
  %882 = bitcast i32** %26 to i64*
  store i64 %881, i64* %882, align 8
  %883 = bitcast i32* %878 to i8*
  call void @_ZdlPv(i8* %883) #13
  br label %884

884:                                              ; preds = %877, %880
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  %885 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %22, align 8
  %886 = icmp eq %"class.std::__1::unique_ptr.24"* %885, null
  br i1 %886, label %906, label %887

887:                                              ; preds = %884
  %888 = bitcast %"class.std::__1::unique_ptr.24"* %885 to i8*
  %889 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %23, align 8
  %890 = icmp eq %"class.std::__1::unique_ptr.24"* %889, %885
  br i1 %890, label %904, label %891

891:                                              ; preds = %887, %899
  %892 = phi %"class.std::__1::unique_ptr.24"* [ %893, %899 ], [ %889, %887 ]
  %893 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %892, i64 -1
  %894 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %893, i64 0, i32 0, i32 0, i32 0
  %895 = load %class.CJBig2_Image*, %class.CJBig2_Image** %894, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %894, align 8
  %896 = icmp eq %class.CJBig2_Image* %895, null
  br i1 %896, label %899, label %897

897:                                              ; preds = %891
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %895) #12
  %898 = bitcast %class.CJBig2_Image* %895 to i8*
  call void @_ZdlPv(i8* %898) #13
  br label %899

899:                                              ; preds = %897, %891
  %900 = icmp eq %"class.std::__1::unique_ptr.24"* %893, %885
  br i1 %900, label %901, label %891

901:                                              ; preds = %899
  %902 = bitcast %"class.std::__1::vector.22"* %7 to i8**
  %903 = load i8*, i8** %902, align 8
  br label %904

904:                                              ; preds = %901, %887
  %905 = phi i8* [ %903, %901 ], [ %888, %887 ]
  store %"class.std::__1::unique_ptr.24"* %885, %"class.std::__1::unique_ptr.24"** %23, align 8
  call void @_ZdlPv(i8* %905) #13
  br label %906

906:                                              ; preds = %884, %904
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %907 = inttoptr i64 %865 to %class.CJBig2_SymbolDict*
  ret %class.CJBig2_SymbolDict* %907
}

declare i32 @_ZN21CJBig2_HuffmanDecoder12DecodeAValueEPK19CJBig2_HuffmanTablePi(%class.CJBig2_HuffmanDecoder*, %class.CJBig2_HuffmanTable*, i32*) local_unnamed_addr #4

declare %class.CJBig2_Image* @_ZN14CJBig2_TRDProc13DecodeHuffmanEP16CJBig2_BitStreamP13JBig2ArithCtx(%class.CJBig2_TRDProc*, %class.CJBig2_BitStream*, %class.JBig2ArithCtx*) local_unnamed_addr #4

declare i32 @_ZN16CJBig2_BitStream8read1BitEPj(%class.CJBig2_BitStream*, i32*) local_unnamed_addr #4

declare void @_ZN16CJBig2_BitStream9alignByteEv(%class.CJBig2_BitStream*) local_unnamed_addr #4

declare i32 @_ZNK16CJBig2_BitStream9getOffsetEv(%class.CJBig2_BitStream*) local_unnamed_addr #4

declare void @_ZN16CJBig2_BitStream6offsetEj(%class.CJBig2_BitStream*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i32 @_ZNK16CJBig2_BitStream11getByteLeftEv(%class.CJBig2_BitStream*) local_unnamed_addr #4

declare i8* @_ZNK16CJBig2_BitStream10getPointerEv(%class.CJBig2_BitStream*) local_unnamed_addr #4

declare i32 @_ZN14CJBig2_GRDProc14StartDecodeMMREPNSt3__110unique_ptrI12CJBig2_ImageNS0_14default_deleteIS2_EEEEP16CJBig2_BitStream(%class.CJBig2_GRDProc*, %"class.std::__1::unique_ptr.24"*, %class.CJBig2_BitStream*) local_unnamed_addr #4

declare %class.CJBig2_Image* @_ZN12CJBig2_Image8SubImageEiiii(%class.CJBig2_Image*, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.22"*, %"class.std::__1::unique_ptr.24"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.24"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.24"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.24"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.24"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.24"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.24"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.24"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.24"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.24"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.24"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CJBig2_Image** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.24"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.24"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.24"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.24"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !22

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.24"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.24"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.24"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.24"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.24"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.24"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.24"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.24"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.24"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.24"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.24"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.24"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.24"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.24"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.24"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.24"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.24"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.24"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.24"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.24"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.24"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.24"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.24"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.24"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.24"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.24"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.24"*
  %138 = icmp eq %"class.std::__1::unique_ptr.24"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.24"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CJBig2_Image*, %class.CJBig2_Image** %142, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %142, align 8
  %144 = icmp eq %class.CJBig2_Image* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %143) #12
  %146 = bitcast %class.CJBig2_Image* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.24"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #13
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind
declare void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN23CJBig2_ArithIaidDecoderD1Ev(%class.CJBig2_ArithIaidDecoder*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN17CJBig2_SymbolDictD1Ev(%class.CJBig2_SymbolDict*) unnamed_addr #5

declare void @_ZN22CJBig2_ArithIntDecoderC1Ev(%class.CJBig2_ArithIntDecoder*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN22CJBig2_ArithIntDecoderD1Ev(%class.CJBig2_ArithIntDecoder*) unnamed_addr #5

declare void @_ZN23CJBig2_ArithIaidDecoderC1Eh(%class.CJBig2_ArithIaidDecoder*, i8 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.22"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.24"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.24"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.24"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %class.CJBig2_Image** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %"class.std::__1::unique_ptr.24"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %214

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.24"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr.24"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::unique_ptr.24"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::unique_ptr.24"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.24"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !23

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::unique_ptr.24"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::unique_ptr.24"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::unique_ptr.24"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 1
  %88 = bitcast %"class.std::__1::unique_ptr.24"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 2
  %90 = bitcast %"class.std::__1::unique_ptr.24"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 3
  %92 = bitcast %"class.std::__1::unique_ptr.24"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 4
  %94 = bitcast %"class.std::__1::unique_ptr.24"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 5
  %96 = bitcast %"class.std::__1::unique_ptr.24"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 6
  %98 = bitcast %"class.std::__1::unique_ptr.24"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 7
  %100 = bitcast %"class.std::__1::unique_ptr.24"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::unique_ptr.24"* %101 to i64
  %103 = icmp eq %"class.std::__1::unique_ptr.24"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::unique_ptr.24"* %60 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr.24"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %107, align 8
  %109 = ptrtoint %"class.std::__1::unique_ptr.24"* %108 to i64
  %110 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %6, align 8
  %111 = icmp eq %"class.std::__1::unique_ptr.24"* %110, %108
  br i1 %111, label %194, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %110, i64 -1, i32 0, i32 0, i32 0
  %114 = ptrtoint %class.CJBig2_Image** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::unique_ptr.24"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::unique_ptr.24"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %122, i64 -1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.24"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.24"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !24

132:                                              ; preds = %120, %112
  %133 = phi %"class.std::__1::unique_ptr.24"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.std::__1::unique_ptr.24"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.std::__1::unique_ptr.24"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 56
  br i1 %136, label %189, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.std::__1::unique_ptr.24"* [ %182, %137 ], [ %134, %132 ]
  %139 = phi %"class.std::__1::unique_ptr.24"* [ %183, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.24"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.24"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr.24"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.24"* %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.24"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.24"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.24"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.24"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr.24"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr.24"* %164 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.24"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.24"* %170 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr.24"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.24"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %138, i64 -8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %139, i64 -8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr.24"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.24"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr.24"* %183, %108
  br i1 %188, label %189, label %137

189:                                              ; preds = %137, %132
  %190 = phi %"class.std::__1::unique_ptr.24"* [ %133, %132 ], [ %182, %137 ]
  %191 = ptrtoint %"class.std::__1::unique_ptr.24"* %190 to i64
  %192 = load i64, i64* %30, align 8
  %193 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %6, align 8
  br label %194

194:                                              ; preds = %104, %189
  %195 = phi %"class.std::__1::unique_ptr.24"* [ %193, %189 ], [ %108, %104 ]
  %196 = phi i64 [ %191, %189 ], [ %59, %104 ]
  %197 = phi i64 [ %192, %189 ], [ %109, %104 ]
  store i64 %196, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %198 = inttoptr i64 %197 to %"class.std::__1::unique_ptr.24"*
  %199 = icmp eq %"class.std::__1::unique_ptr.24"* %195, %198
  br i1 %199, label %210, label %200

200:                                              ; preds = %194, %208
  %201 = phi %"class.std::__1::unique_ptr.24"* [ %202, %208 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %201, i64 -1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %class.CJBig2_Image*, %class.CJBig2_Image** %203, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %203, align 8
  %205 = icmp eq %class.CJBig2_Image* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %204) #12
  %207 = bitcast %class.CJBig2_Image* %204 to i8*
  tail call void @_ZdlPv(i8* %207) #13
  br label %208

208:                                              ; preds = %206, %200
  %209 = icmp eq %"class.std::__1::unique_ptr.24"* %202, %198
  br i1 %209, label %210, label %200

210:                                              ; preds = %208, %194
  %211 = icmp eq i64 %197, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %213) #13
  br label %214

214:                                              ; preds = %212, %210, %27
  ret void
}

declare void @_ZN14CJBig2_GRDProcC1Ev(%class.CJBig2_GRDProc*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN14CJBig2_GRDProcD1Ev(%class.CJBig2_GRDProc*) unnamed_addr #5

declare void @_ZN19CJBig2_HuffmanTableC1Em(%class.CJBig2_HuffmanTable*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN19CJBig2_HuffmanTableD1Ev(%class.CJBig2_HuffmanTable*) unnamed_addr #5

declare void @_ZN14CJBig2_TRDProcC1Ev(%class.CJBig2_TRDProc*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN14CJBig2_TRDProcD1Ev(%class.CJBig2_TRDProc*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIP12CJBig2_ImageNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.44"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.CJBig2_Image*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.CJBig2_Image*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %class.CJBig2_Image**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %class.CJBig2_Image*, %class.CJBig2_Image** %13, i64 %18
  %20 = bitcast %class.CJBig2_Image** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %class.CJBig2_Image** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.44"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.44"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %class.CJBig2_Image**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %class.CJBig2_Image** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %57, i64 %33
  %59 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %57, i64 %56
  %60 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %58, i64 %1
  %61 = bitcast %class.CJBig2_Image** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #12
  %63 = ptrtoint %class.CJBig2_Image** %59 to i64
  %64 = ptrtoint %class.CJBig2_Image** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %0, i64 0, i32 0, i32 0
  %66 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %class.CJBig2_Image** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %class.CJBig2_Image*, %class.CJBig2_Image** %58, i64 %71
  %73 = ptrtoint %class.CJBig2_Image** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %class.CJBig2_Image** %72 to i8*
  %77 = bitcast %class.CJBig2_Image** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #12
  %78 = load %class.CJBig2_Image**, %class.CJBig2_Image*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %class.CJBig2_Image** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %class.CJBig2_Image** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %class.CJBig2_Image** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN15CJBig2_GRRDProcC1Ev(%class.CJBig2_GRRDProc*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN15CJBig2_GRRDProcD1Ev(%class.CJBig2_GRRDProc*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.38"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.38", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.38"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #12
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.38"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #14
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast %"class.std::__1::vector.38"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !25
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !25
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !25
  %28 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !30
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !33
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !33
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.38"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.38"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.38"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.38"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.38"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !36
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #12
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !39
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !39
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !39
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #12, !noalias !39
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !39
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !39
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !39
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !42
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !42
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !45
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !45
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !45
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !45
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !45
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !45
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #12
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #2 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

declare void @_ZN17CJBig2_SymbolDictC1Ev(%class.CJBig2_SymbolDict*) unnamed_addr #4

declare void @_ZN12CJBig2_ImageC1ERKS_(%class.CJBig2_Image*, %class.CJBig2_Image* dereferenceable(32)) unnamed_addr #4

declare void @_ZN21CJBig2_HuffmanDecoderC1EP16CJBig2_BitStream(%class.CJBig2_HuffmanDecoder*, %class.CJBig2_BitStream*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN21CJBig2_HuffmanDecoderD1Ev(%class.CJBig2_HuffmanDecoder*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.90"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.90"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.90"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #12
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare void @_ZN19CJBig2_ArithDecoderC1EP16CJBig2_BitStream(%class.CJBig2_ArithDecoder*, %class.CJBig2_BitStream*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN19CJBig2_ArithDecoderD1Ev(%class.CJBig2_ArithDecoder*) unnamed_addr #5

declare void @_ZN12CJBig2_ImageC1Eii(%class.CJBig2_Image*, i32, i32) unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!6 = distinct !{!6, !7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!11 = distinct !{!11, !12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!16 = !{!14, !17}
!17 = distinct !{!17, !18, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = !{!"branch_weights", i32 2002, i32 2000}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !20}
!24 = distinct !{!24, !20}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!28 = distinct !{!28, !29, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!33 = !{!34, !31}
!34 = distinct !{!34, !35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!42 = !{!40, !43}
!43 = distinct !{!43, !44, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!45 = !{!43}
