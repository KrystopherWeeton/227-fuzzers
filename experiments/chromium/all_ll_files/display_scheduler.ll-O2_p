; ModuleID = '../../components/viz/service/display/display_scheduler.cc'
source_filename = "../../components/viz/service/display/display_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.viz::DisplayScheduler" = type { %"class.viz::DisplaySchedulerBase", %"class.std::__1::unique_ptr", %"class.viz::BeginFrameSource"*, %"class.base::SingleThreadTaskRunner"*, %"class.gfx::RenderingPipeline"*, %"class.absl::optional", %"struct.viz::BeginFrameArgs", %"class.base::RepeatingCallback", %"class.base::internal::CancelableCallbackImpl", %"class.base::TimeTicks", %"class.base::internal::CancelableCallbackImpl", i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, %"class.base::WeakPtrFactory.27" }
%"class.viz::DisplaySchedulerBase" = type { %"class.viz::DisplayDamageTracker::Observer", %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplayDamageTracker"* }
%"class.viz::DisplayDamageTracker::Observer" = type { i32 (...)** }
%"class.viz::DisplaySchedulerClient" = type { i32 (...)** }
%"class.viz::DisplayDamageTracker" = type { %"class.viz::SurfaceObserver", %"class.base::ObserverList", %"class.viz::SurfaceManager"*, %"class.viz::SurfaceAggregator"*, i8, i8, %"class.base::flat_map", %"class.std::__1::vector.8", %"class.viz::SurfaceId" }
%"class.viz::SurfaceObserver" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.viz::SurfaceManager" = type opaque
%"class.viz::SurfaceAggregator" = type opaque
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.viz::SurfaceId"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.viz::DisplayScheduler::BeginFrameObserver"* }
%"class.viz::DisplayScheduler::BeginFrameObserver" = type { %"class.viz::BeginFrameObserverBase.base", %"class.viz::DisplayScheduler"* }
%"class.viz::BeginFrameObserverBase.base" = type <{ %"class.viz::BeginFrameObserver", %"struct.viz::BeginFrameArgs", i64, i8 }>
%"class.viz::BeginFrameObserver" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::RenderingPipeline::ScopedPipelineActive" }
%"class.gfx::RenderingPipeline::ScopedPipelineActive" = type { %"class.gfx::RenderingPipeline"* }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.19", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.21", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%"class.base::WeakPtrFactory.27" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::BeginFrameSource" = type { i32 (...)**, i64, i8, i32 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.viz::BeginFrameObserverBase" = type <{ %"class.viz::BeginFrameObserver", %"struct.viz::BeginFrameArgs", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.55 }
%union.anon.55 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.base::trace_event::ConvertableToTraceFormat"* }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.35", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.37", i64, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.48" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::WeakPtr.70" = type { %"class.base::internal::WeakPtrBase" }

$_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS1_14default_deleteIS5_EEEERNS3_9TimeTicksEEENS4_16TraceEventHandleEcPKhPKcSF_yjySF_OT_SF_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIlRN4base9TimeTicksEEENS1_11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN3viz16DisplayScheduler18BeginFrameObserverD0Ev = comdat any

$_ZN3viz16DisplayScheduler18BeginFrameObserver31OnBeginFrameSourcePausedChangedEb = comdat any

$_ZN3viz16DisplayScheduler18BeginFrameObserver23OnBeginFrameDerivedImplERKNS_14BeginFrameArgsE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS4_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS3_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE = comdat any

$_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZTVN3viz16DisplayScheduler18BeginFrameObserverE = comdat any

@_ZTVN3viz16DisplaySchedulerE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplaySchedulerD2Ev to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplaySchedulerD0Ev to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*, %"class.viz::SurfaceId"*)* @_ZN3viz16DisplayScheduler16OnDisplayDamagedENS_9SurfaceIdE to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*, i1)* @_ZN3viz16DisplayScheduler18OnRootFrameMissingEb to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplayScheduler24OnPendingSurfacesChangedEv to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*, i1)* @_ZN3viz16DisplayScheduler10SetVisibleEb to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplayScheduler28ForceImmediateSwapIfPossibleEv to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*, i1)* @_ZN3viz16DisplayScheduler21SetNeedsOneBeginFrameEb to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplayScheduler14DidSwapBuffersEv to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplayScheduler24DidReceiveSwapBuffersAckEv to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplayScheduler17OutputSurfaceLostEv to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*, i64)* @_ZN3viz16DisplayScheduler13SetGpuLatencyEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplayScheduler26ScheduleBeginFrameDeadlineEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [47 x i8] c"DisplayScheduler::ForceImmediateSwapIfPossible\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"DisplayScheduler::OutputSurfaceLost\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"DisplayScheduler::DrawAndSwap\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"DisplayScheduler::BeginFrame\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"OnBeginFrame\00", align 1
@.str.7 = private unnamed_addr constant [58 x i8] c"../../components/viz/service/display/display_scheduler.cc\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"Lost output surface\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"Swap throttled\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Root frame missing\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"All active surfaces ready\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"No damage yet\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Entire display damaged\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"More damage expected soon\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"DisplayScheduler::ScheduleBeginFrameDeadline\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"Waiting for next BeginFrame\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"Using existing deadline\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"Using infinite deadline\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"ScheduleBeginFrameDeadline\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"Using new deadline\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"delta\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"desired_deadline\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"DisplayScheduler::OnBeginFrameDeadline\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"DisplayScheduler:pending_swaps\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.27 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZTVN3viz16DisplayScheduler18BeginFrameObserverE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::BeginFrameObserverBase"*)* @_ZN3viz22BeginFrameObserverBaseD2Ev to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)* @_ZN3viz16DisplayScheduler18BeginFrameObserverD0Ev to i8*), i8* bitcast (void (%"class.viz::BeginFrameObserverBase"*, %"struct.viz::BeginFrameArgs"*)* @_ZN3viz22BeginFrameObserverBase12OnBeginFrameERKNS_14BeginFrameArgsE to i8*), i8* bitcast (%"struct.viz::BeginFrameArgs"* (%"class.viz::BeginFrameObserverBase"*)* @_ZNK3viz22BeginFrameObserverBase22LastUsedBeginFrameArgsEv to i8*), i8* bitcast (void (%"class.viz::DisplayScheduler::BeginFrameObserver"*, i1)* @_ZN3viz16DisplayScheduler18BeginFrameObserver31OnBeginFrameSourcePausedChangedEb to i8*), i8* bitcast (i1 (%"class.viz::BeginFrameObserverBase"*)* @_ZNK3viz22BeginFrameObserverBase27WantsAnimateOnlyBeginFramesEv to i8*), i8* bitcast (i1 (%"class.viz::BeginFrameObserver"*)* @_ZNK3viz18BeginFrameObserver6IsRootEv to i8*), i8* bitcast (i1 (%"class.viz::DisplayScheduler::BeginFrameObserver"*, %"struct.viz::BeginFrameArgs"*)* @_ZN3viz16DisplayScheduler18BeginFrameObserver23OnBeginFrameDerivedImplERKNS_14BeginFrameArgsE to i8*)] }, comdat, align 8
@.str.28 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3viz16DisplaySchedulerC1EPNS_16BeginFrameSourceEPN4base22SingleThreadTaskRunnerEibPN3gfx17RenderingPipelineE = hidden unnamed_addr alias void (%"class.viz::DisplayScheduler"*, %"class.viz::BeginFrameSource"*, %"class.base::SingleThreadTaskRunner"*, i32, i1, %"class.gfx::RenderingPipeline"*), void (%"class.viz::DisplayScheduler"*, %"class.viz::BeginFrameSource"*, %"class.base::SingleThreadTaskRunner"*, i32, i1, %"class.gfx::RenderingPipeline"*)* @_ZN3viz16DisplaySchedulerC2EPNS_16BeginFrameSourceEPN4base22SingleThreadTaskRunnerEibPN3gfx17RenderingPipelineE
@_ZN3viz16DisplaySchedulerD1Ev = hidden unnamed_addr alias void (%"class.viz::DisplayScheduler"*), void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplaySchedulerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplaySchedulerC2EPNS_16BeginFrameSourceEPN4base22SingleThreadTaskRunnerEibPN3gfx17RenderingPipelineE(%"class.viz::DisplayScheduler"*, %"class.viz::BeginFrameSource"*, %"class.base::SingleThreadTaskRunner"*, i32, i1 zeroext, %"class.gfx::RenderingPipeline"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = zext i1 %4 to i8
  %11 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0
  tail call void @_ZN3viz20DisplaySchedulerBaseC2Ev(%"class.viz::DisplaySchedulerBase"* %11) #9
  %12 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN3viz16DisplaySchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = ptrtoint %"class.viz::DisplayScheduler"* %0 to i64
  %14 = tail call i8* @_Znwm(i64 96) #10
  %15 = bitcast i8* %14 to %"class.viz::BeginFrameObserverBase"*
  tail call void @_ZN3viz22BeginFrameObserverBaseC2Ev(%"class.viz::BeginFrameObserverBase"* nonnull %15) #9
  %16 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3viz16DisplayScheduler18BeginFrameObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 88
  %18 = bitcast i8* %17 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %14, i64 80
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = bitcast %"class.viz::DisplayScheduler::BeginFrameObserver"** %20 to i8**
  store i8* %14, i8** %21, align 8
  %22 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  store %"class.viz::BeginFrameSource"* %1, %"class.viz::BeginFrameSource"** %22, align 8
  %23 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 3
  store %"class.base::SingleThreadTaskRunner"* %2, %"class.base::SingleThreadTaskRunner"** %23, align 8
  %24 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  store %"class.gfx::RenderingPipeline"* %5, %"class.gfx::RenderingPipeline"** %24, align 8
  %25 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  tail call void @_ZN3viz14BeginFrameArgsC1Ev(%"struct.viz::BeginFrameArgs"* %26) #9
  %27 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8
  %29 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8, i32 1, i32 0
  %30 = ptrtoint %"class.base::internal::CancelableCallbackImpl"* %28 to i64
  %31 = bitcast %"class.base::RepeatingCallback"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %29, i64 %30) #9
  %32 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 9, i32 0, i32 0
  %33 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10
  %34 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 1, i32 0
  %35 = ptrtoint %"class.base::internal::CancelableCallbackImpl"* %33 to i64
  %36 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %34, i64 %35) #9
  %37 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 11
  %38 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 17
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 6, i1 false)
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 18
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 19
  store i32 %3, i32* %40, align 8
  %41 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 20
  store i8 %10, i8* %41, align 4
  %42 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 22
  %44 = getelementptr inbounds %"class.base::WeakPtrFactory.27", %"class.base::WeakPtrFactory.27"* %43, i64 0, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %44, i64 %13) #9
  %45 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %46 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9, !noalias !2
  %48 = getelementptr inbounds %"class.base::WeakPtrFactory.27", %"class.base::WeakPtrFactory.27"* %43, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %48) #9, !noalias !2
  %49 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 22, i32 0, i32 1
  %50 = load i64, i64* %49, align 8, !noalias !2
  %51 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %51, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %50) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9, !noalias !2
  %52 = call i8* @_Znwm(i64 64) #10, !noalias !5
  %53 = bitcast i8* %52 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %53, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9, !noalias !5
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::DisplayScheduler"*)* @_ZN3viz16DisplayScheduler20OnBeginFrameDeadlineEv to i64), i64 0>, <2 x i64>* %55, align 8, !noalias !5
  %56 = getelementptr inbounds i8, i8* %52, i64 48
  %57 = bitcast i8* %56 to %"class.base::internal::WeakReference"*
  %58 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %57, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %58) #9, !noalias !5
  %59 = getelementptr inbounds i8, i8* %52, i64 56
  %60 = bitcast i8* %59 to i64*
  %61 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8, !noalias !5
  store i64 %62, i64* %60, align 8, !noalias !5
  %63 = bitcast %"class.base::RepeatingCallback"* %8 to i8**
  store i8* %52, i8** %63, align 8, !alias.scope !5
  %64 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %27, i64 0, i32 0
  %65 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %66 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %64, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %65) #9
  %67 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %51) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  ret void
}

declare void @_ZN3viz20DisplaySchedulerBaseC2Ev(%"class.viz::DisplaySchedulerBase"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3viz14BeginFrameArgsC1Ev(%"struct.viz::BeginFrameArgs"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler20OnBeginFrameDeadlineEv(%"class.viz::DisplayScheduler"*) #0 align 2 {
  %2 = alloca %"struct.viz::BeginFrameAck", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !10

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %7 ]
  %17 = call zeroext i1 @_ZN3viz16DisplayScheduler18AttemptDrawAndSwapEv(%"class.viz::DisplayScheduler"* %0)
  %18 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %19 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %18, align 8
  %20 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %20, align 8
  %22 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.viz::BeginFrameSource"* %19 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %24 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %24, i64 2
  %26 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %25, align 8
  call void %26(%"class.viz::BeginFrameSource"* %19, %"class.viz::BeginFrameObserver"* %22) #9
  %27 = bitcast %"struct.viz::BeginFrameAck"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false) #9
  call void @_ZN3viz13BeginFrameAckC1ERKNS_14BeginFrameArgsEb(%"struct.viz::BeginFrameAck"* nonnull %2, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %28, i1 zeroext %17) #9
  %29 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %30 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %29, align 8
  %31 = icmp eq %"class.viz::DisplaySchedulerClient"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %13
  %33 = bitcast %"class.viz::DisplaySchedulerClient"* %30 to void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)***
  %34 = load void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)**, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)** %34, i64 3
  %36 = load void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)** %35, align 8
  call void %36(%"class.viz::DisplaySchedulerClient"* nonnull %30, %"struct.viz::BeginFrameAck"* nonnull dereferenceable(32) %2) #9
  br label %37

37:                                               ; preds = %13, %32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #9
  %38 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %39 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %38, align 8
  %40 = icmp eq %"class.gfx::RenderingPipeline"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.gfx::RenderingPipeline"* %39 to void (%"class.gfx::RenderingPipeline"*)***
  %43 = load void (%"class.gfx::RenderingPipeline"*)**, void (%"class.gfx::RenderingPipeline"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.gfx::RenderingPipeline"*)*, void (%"class.gfx::RenderingPipeline"*)** %43, i64 4
  %45 = load void (%"class.gfx::RenderingPipeline"*)*, void (%"class.gfx::RenderingPipeline"*)** %44, align 8
  call void %45(%"class.gfx::RenderingPipeline"* nonnull %39) #9
  br label %46

46:                                               ; preds = %37, %41
  %47 = icmp eq i8* %16, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %46
  %49 = load i8, i8* %16, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #9
  br label %52

52:                                               ; preds = %46, %48, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplaySchedulerD2Ev(%"class.viz::DisplayScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN3viz16DisplaySchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %4 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %3, align 8
  tail call void @_ZN3viz16BeginFrameSource12SetIsGpuBusyEb(%"class.viz::BeginFrameSource"* %4, i1 zeroext false) #9
  %5 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %6 = load i8, i8* %5, align 1, !range !11
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %3, align 8
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %10, align 8
  %12 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %11, i64 0, i32 0, i32 0
  %13 = bitcast %"class.viz::BeginFrameSource"* %9 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %14 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %14, i64 4
  %16 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %15, align 8
  tail call void %16(%"class.viz::BeginFrameSource"* %9, %"class.viz::BeginFrameObserver"* %12) #9
  store i8 0, i8* %5, align 1
  %17 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %21) #9
  store i8 0, i8* %17, align 8
  br label %22

22:                                               ; preds = %20, %8
  %23 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %23) #9
  %24 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %24) #9
  br label %25

25:                                               ; preds = %1, %22
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 22, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %26) #9
  %27 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %27) #9
  %28 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %28) #9
  %29 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %29) #9
  %30 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %30) #9
  %31 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #9
  %32 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !11
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %36) #9
  store i8 0, i8* %32, align 8
  br label %37

37:                                               ; preds = %25, %35
  %38 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %38, align 8
  store %"class.viz::DisplayScheduler::BeginFrameObserver"* null, %"class.viz::DisplayScheduler::BeginFrameObserver"** %38, align 8
  %40 = icmp eq %"class.viz::DisplayScheduler::BeginFrameObserver"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.viz::DisplayScheduler::BeginFrameObserver"* %39 to void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)***
  %43 = load void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)**, void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)*, void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)** %43, i64 1
  %45 = load void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)*, void (%"class.viz::DisplayScheduler::BeginFrameObserver"*)** %44, align 8
  tail call void %45(%"class.viz::DisplayScheduler::BeginFrameObserver"* nonnull %39) #9
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0
  tail call void @_ZN3viz20DisplaySchedulerBaseD2Ev(%"class.viz::DisplaySchedulerBase"* %47) #9
  ret void
}

declare void @_ZN3viz16BeginFrameSource12SetIsGpuBusyEb(%"class.viz::BeginFrameSource"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler24StopObservingBeginFramesEv(%"class.viz::DisplayScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %3 = load i8, i8* %2, align 1, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %7 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %8, align 8
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.viz::BeginFrameSource"* %7 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %12 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %12, i64 4
  %14 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %13, align 8
  tail call void %14(%"class.viz::BeginFrameSource"* %7, %"class.viz::BeginFrameObserver"* %10) #9
  store i8 0, i8* %2, align 1
  %15 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !11
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %19) #9
  store i8 0, i8* %15, align 8
  br label %20

20:                                               ; preds = %5, %18
  %21 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %21) #9
  %22 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %22) #9
  br label %23

23:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3viz20DisplaySchedulerBaseD2Ev(%"class.viz::DisplaySchedulerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplaySchedulerD0Ev(%"class.viz::DisplayScheduler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3viz16DisplaySchedulerD2Ev(%"class.viz::DisplayScheduler"* %0) #9
  %2 = bitcast %"class.viz::DisplayScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler10SetVisibleEb(%"class.viz::DisplayScheduler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 12
  %4 = load i8, i8* %3, align 1, !range !11
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %57, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 1
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  %11 = load i8, i8* %10, align 4, !range !11
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 2, !range !11
  %16 = icmp ne i8 %15, 0
  %17 = xor i1 %1, true
  %18 = or i1 %16, %17
  br i1 %18, label %52, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %21 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %20, align 8
  %22 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %21, i64 0, i32 4
  %23 = load i8, i8* %22, align 8, !range !11
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %52

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %27 = load i8, i8* %26, align 1, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %31 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %30, align 8
  %32 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %32, align 8
  %34 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %33, i64 0, i32 0, i32 0
  %35 = bitcast %"class.viz::BeginFrameSource"* %31 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %36 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %36, i64 3
  %38 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %37, align 8
  tail call void %38(%"class.viz::BeginFrameSource"* %31, %"class.viz::BeginFrameObserver"* %34) #9
  store i8 1, i8* %26, align 1
  %39 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %40 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %39, align 8
  %41 = icmp eq %"class.gfx::RenderingPipeline"* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !11
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %47) #9
  store i8 0, i8* %43, align 8
  %48 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %39, align 8
  br label %49

49:                                               ; preds = %46, %42
  %50 = phi %"class.gfx::RenderingPipeline"* [ %40, %42 ], [ %48, %46 ]
  %51 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %51, %"class.gfx::RenderingPipeline"* %50) #9
  store i8 1, i8* %43, align 8
  br label %52

52:                                               ; preds = %13, %8, %19, %25, %29, %49
  %53 = bitcast %"class.viz::DisplayScheduler"* %0 to void (%"class.viz::DisplayScheduler"*)***
  %54 = load void (%"class.viz::DisplayScheduler"*)**, void (%"class.viz::DisplayScheduler"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %54, i64 12
  %56 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %55, align 8
  tail call void %56(%"class.viz::DisplayScheduler"* %0) #9
  br label %57

57:                                               ; preds = %2, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler30MaybeStartObservingBeginFramesEv(%"class.viz::DisplayScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 4, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  %7 = load i8, i8* %6, align 2, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %46

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 1, !range !11
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %14, align 8
  %16 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %46

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %21 = load i8, i8* %20, align 1, !range !11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %46

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %25 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %24, align 8
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %26, align 8
  %28 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"class.viz::BeginFrameSource"* %25 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %30 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %30, i64 3
  %32 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %31, align 8
  tail call void %32(%"class.viz::BeginFrameSource"* %25, %"class.viz::BeginFrameObserver"* %28) #9
  store i8 1, i8* %20, align 1
  %33 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %34 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %33, align 8
  %35 = icmp eq %"class.gfx::RenderingPipeline"* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %41) #9
  store i8 0, i8* %37, align 8
  %42 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %33, align 8
  br label %43

43:                                               ; preds = %40, %36
  %44 = phi %"class.gfx::RenderingPipeline"* [ %34, %36 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %45, %"class.gfx::RenderingPipeline"* %44) #9
  store i8 1, i8* %37, align 8
  br label %46

46:                                               ; preds = %1, %5, %9, %43, %23, %19, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler18OnRootFrameMissingEb(%"class.viz::DisplayScheduler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  %4 = load i8, i8* %3, align 4, !range !11
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  %8 = load i8, i8* %7, align 2, !range !11
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %47

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 12
  %12 = load i8, i8* %11, align 1, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %16 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %15, align 8
  %17 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %16, i64 0, i32 4
  %18 = load i8, i8* %17, align 8, !range !11
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %47

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %22 = load i8, i8* %21, align 1, !range !11
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %47

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %26 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %25, align 8
  %27 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %27, align 8
  %29 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %28, i64 0, i32 0, i32 0
  %30 = bitcast %"class.viz::BeginFrameSource"* %26 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %31 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %31, i64 3
  %33 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %32, align 8
  tail call void %33(%"class.viz::BeginFrameSource"* %26, %"class.viz::BeginFrameObserver"* %29) #9
  store i8 1, i8* %21, align 1
  %34 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %35 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %34, align 8
  %36 = icmp eq %"class.gfx::RenderingPipeline"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !11
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %42) #9
  store i8 0, i8* %38, align 8
  %43 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %34, align 8
  br label %44

44:                                               ; preds = %41, %37
  %45 = phi %"class.gfx::RenderingPipeline"* [ %35, %37 ], [ %43, %41 ]
  %46 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %46, %"class.gfx::RenderingPipeline"* %45) #9
  store i8 1, i8* %38, align 8
  br label %47

47:                                               ; preds = %2, %6, %10, %14, %20, %24, %44
  %48 = bitcast %"class.viz::DisplayScheduler"* %0 to void (%"class.viz::DisplayScheduler"*)***
  %49 = load void (%"class.viz::DisplayScheduler"*)**, void (%"class.viz::DisplayScheduler"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %49, i64 12
  %51 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %50, align 8
  tail call void %51(%"class.viz::DisplayScheduler"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler16OnDisplayDamagedENS_9SurfaceIdE(%"class.viz::DisplayScheduler"*, %"class.viz::SurfaceId"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 1, !range !11
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  %7 = load i8, i8* %6, align 2, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %46

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 1, !range !11
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %14, align 8
  %16 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %46

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %21 = load i8, i8* %20, align 1, !range !11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %46

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %25 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %24, align 8
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %26, align 8
  %28 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %27, i64 0, i32 0, i32 0
  %29 = bitcast %"class.viz::BeginFrameSource"* %25 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %30 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %30, i64 3
  %32 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %31, align 8
  tail call void %32(%"class.viz::BeginFrameSource"* %25, %"class.viz::BeginFrameObserver"* %28) #9
  store i8 1, i8* %20, align 1
  %33 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %34 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %33, align 8
  %35 = icmp eq %"class.gfx::RenderingPipeline"* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %41) #9
  store i8 0, i8* %37, align 8
  %42 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %33, align 8
  br label %43

43:                                               ; preds = %40, %36
  %44 = phi %"class.gfx::RenderingPipeline"* [ %34, %36 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %45, %"class.gfx::RenderingPipeline"* %44) #9
  store i8 1, i8* %37, align 8
  br label %46

46:                                               ; preds = %2, %9, %13, %19, %23, %43
  %47 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 14
  %48 = load i8, i8* %47, align 1, !range !11
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %52 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %51, align 8
  %53 = icmp eq %"class.viz::DisplaySchedulerClient"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 16
  %56 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %57 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %56, align 8
  %58 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  %59 = tail call zeroext i1 @_ZN3viz20DisplayDamageTracker18HasPendingSurfacesERKNS_14BeginFrameArgsE(%"class.viz::DisplayDamageTracker"* %57, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %58) #9
  %60 = zext i1 %59 to i8
  store i8 %60, i8* %55, align 1
  br label %61

61:                                               ; preds = %46, %50, %54
  %62 = bitcast %"class.viz::DisplayScheduler"* %0 to void (%"class.viz::DisplayScheduler"*)***
  %63 = load void (%"class.viz::DisplayScheduler"*)**, void (%"class.viz::DisplayScheduler"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %63, i64 12
  %65 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %64, align 8
  tail call void %65(%"class.viz::DisplayScheduler"* %0) #9
  %66 = icmp eq i8* %3, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  store i8 %4, i8* %3, align 1
  br label %68

68:                                               ; preds = %61, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16DisplayScheduler24UpdateHasPendingSurfacesEv(%"class.viz::DisplayScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 1, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %6, align 8
  %8 = icmp eq %"class.viz::DisplaySchedulerClient"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 16
  %11 = load i8, i8* %10, align 1, !range !11
  %12 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %13 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %12, align 8
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  %15 = tail call zeroext i1 @_ZN3viz20DisplayDamageTracker18HasPendingSurfacesERKNS_14BeginFrameArgsE(%"class.viz::DisplayDamageTracker"* %13, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %14) #9
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %10, align 1
  %17 = zext i1 %15 to i32
  %18 = zext i8 %11 to i32
  %19 = icmp ne i32 %17, %18
  br label %20

20:                                               ; preds = %1, %5, %9
  %21 = phi i1 [ %19, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler24OnPendingSurfacesChangedEv(%"class.viz::DisplayScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 1, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %6, align 8
  %8 = icmp eq %"class.viz::DisplaySchedulerClient"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 16
  %11 = load i8, i8* %10, align 1, !range !11
  %12 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %13 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %12, align 8
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  %15 = tail call zeroext i1 @_ZN3viz20DisplayDamageTracker18HasPendingSurfacesERKNS_14BeginFrameArgsE(%"class.viz::DisplayDamageTracker"* %13, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %14) #9
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %10, align 1
  %17 = zext i1 %15 to i32
  %18 = zext i8 %11 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %9
  %21 = bitcast %"class.viz::DisplayScheduler"* %0 to void (%"class.viz::DisplayScheduler"*)***
  %22 = load void (%"class.viz::DisplayScheduler"*)**, void (%"class.viz::DisplayScheduler"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %22, i64 12
  %24 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %23, align 8
  tail call void %24(%"class.viz::DisplayScheduler"* %0) #9
  br label %25

25:                                               ; preds = %9, %1, %5, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler28ForceImmediateSwapIfPossibleEv(%"class.viz::DisplayScheduler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.viz::BeginFrameAck", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !10

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 14
  %18 = load i8, i8* %17, align 1, !range !11
  %19 = icmp eq i8 %18, 0
  %20 = call zeroext i1 @_ZN3viz16DisplayScheduler18AttemptDrawAndSwapEv(%"class.viz::DisplayScheduler"* %0)
  br i1 %19, label %42, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %23 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %22, align 8
  %24 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %24, align 8
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %25, i64 0, i32 0, i32 0
  %27 = bitcast %"class.viz::BeginFrameSource"* %23 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %28 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %28, i64 2
  %30 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %29, align 8
  call void %30(%"class.viz::BeginFrameSource"* %23, %"class.viz::BeginFrameObserver"* %26) #9
  %31 = bitcast %"struct.viz::BeginFrameAck"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false) #9
  call void @_ZN3viz13BeginFrameAckC1ERKNS_14BeginFrameArgsEb(%"struct.viz::BeginFrameAck"* nonnull %2, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %32, i1 zeroext %20) #9
  %33 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %34 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %33, align 8
  %35 = icmp eq %"class.viz::DisplaySchedulerClient"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %21
  %37 = bitcast %"class.viz::DisplaySchedulerClient"* %34 to void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)***
  %38 = load void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)**, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)** %38, i64 3
  %40 = load void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)** %39, align 8
  call void %40(%"class.viz::DisplaySchedulerClient"* nonnull %34, %"struct.viz::BeginFrameAck"* nonnull dereferenceable(32) %2) #9
  br label %41

41:                                               ; preds = %21, %36
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #9
  br label %42

42:                                               ; preds = %13, %41
  %43 = icmp eq i8* %16, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %42
  %45 = load i8, i8* %16, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #9
  br label %48

48:                                               ; preds = %42, %44, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16DisplayScheduler18AttemptDrawAndSwapEv(%"class.viz::DisplayScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 14
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #9
  %4 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %4) #9
  %5 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  %7 = load i8, i8* %6, align 4, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  %11 = load i8, i8* %10, align 2, !range !11
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 12
  %15 = load i8, i8* %14, align 1, !range !11
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %19 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %18, align 8
  %20 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %19, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 18
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 19
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %29, label %56

29:                                               ; preds = %23
  %30 = tail call zeroext i1 @_ZN3viz16DisplayScheduler11DrawAndSwapEv(%"class.viz::DisplayScheduler"* %0)
  br label %56

31:                                               ; preds = %1, %9, %13, %17
  %32 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %33 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %32, align 8
  %34 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %33, i64 0, i32 5
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %36 = load i8, i8* %35, align 1, !range !11
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %40 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %39, align 8
  %41 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %41, align 8
  %43 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %42, i64 0, i32 0, i32 0
  %44 = bitcast %"class.viz::BeginFrameSource"* %40 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %45 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %45, i64 4
  %47 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %46, align 8
  tail call void %47(%"class.viz::BeginFrameSource"* %40, %"class.viz::BeginFrameObserver"* %43) #9
  store i8 0, i8* %35, align 1
  %48 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !11
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %52) #9
  store i8 0, i8* %48, align 8
  br label %53

53:                                               ; preds = %51, %38
  %54 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %54) #9
  %55 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %55) #9
  br label %56

56:                                               ; preds = %53, %31, %23, %29
  %57 = phi i1 [ %30, %29 ], [ false, %23 ], [ false, %31 ], [ false, %53 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler14DidFinishFrameEb(%"class.viz::DisplayScheduler"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.viz::BeginFrameAck", align 8
  %4 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %5 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %4, align 8
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %7, i64 0, i32 0, i32 0
  %9 = bitcast %"class.viz::BeginFrameSource"* %5 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %10 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %10, i64 2
  %12 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %11, align 8
  tail call void %12(%"class.viz::BeginFrameSource"* %5, %"class.viz::BeginFrameObserver"* %8) #9
  %13 = bitcast %"struct.viz::BeginFrameAck"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  %15 = bitcast %"struct.viz::BeginFrameAck"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @_ZN3viz13BeginFrameAckC1ERKNS_14BeginFrameArgsEb(%"struct.viz::BeginFrameAck"* nonnull %3, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %14, i1 zeroext %1) #9
  %16 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %16, align 8
  %18 = icmp eq %"class.viz::DisplaySchedulerClient"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.viz::DisplaySchedulerClient"* %17 to void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)***
  %21 = load void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)**, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)** %21, i64 3
  %23 = load void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)*, void (%"class.viz::DisplaySchedulerClient"*, %"struct.viz::BeginFrameAck"*)** %22, align 8
  call void %23(%"class.viz::DisplaySchedulerClient"* nonnull %17, %"struct.viz::BeginFrameAck"* nonnull dereferenceable(32) %3) #9
  br label %24

24:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  ret void
}

declare zeroext i1 @_ZN3viz20DisplayDamageTracker18HasPendingSurfacesERKNS_14BeginFrameArgsE(%"class.viz::DisplayDamageTracker"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler17OutputSurfaceLostEv(%"class.viz::DisplayScheduler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !10

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  store i8 1, i8* %16, align 2
  %17 = bitcast %"class.viz::DisplayScheduler"* %0 to void (%"class.viz::DisplayScheduler"*)***
  %18 = load void (%"class.viz::DisplayScheduler"*)**, void (%"class.viz::DisplayScheduler"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %18, i64 12
  %20 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %19, align 8
  call void %20(%"class.viz::DisplayScheduler"* %0) #9
  %21 = icmp eq i8* %15, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %12
  %23 = load i8, i8* %15, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #9
  br label %26

26:                                               ; preds = %12, %22, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler13SetGpuLatencyEN4base9TimeDeltaE(%"class.viz::DisplayScheduler"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %4 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %3, align 8
  %5 = icmp eq %"class.gfx::RenderingPipeline"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.gfx::RenderingPipeline"* %4 to void (%"class.gfx::RenderingPipeline"*, i64)***
  %8 = load void (%"class.gfx::RenderingPipeline"*, i64)**, void (%"class.gfx::RenderingPipeline"*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gfx::RenderingPipeline"*, i64)*, void (%"class.gfx::RenderingPipeline"*, i64)** %8, i64 6
  %10 = load void (%"class.gfx::RenderingPipeline"*, i64)*, void (%"class.gfx::RenderingPipeline"*, i64)** %9, align 8
  tail call void %10(%"class.gfx::RenderingPipeline"* nonnull %4, i64 %1) #9
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16DisplayScheduler11DrawAndSwapEv(%"class.viz::DisplayScheduler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !10

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i64 [ -6148914691236517206, %1 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %17, align 8
  %19 = icmp eq %"class.viz::DisplaySchedulerClient"* %18, null
  br i1 %19, label %51, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6, i32 2, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, -9223372036854775807
  %26 = icmp ult i64 %25, 2
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = icmp slt i64 %22, 0
  %29 = select i1 %28, i64 -9223372036854775808, i64 9223372036854775807
  %30 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %22) #9
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 %29, i64 %32, !prof !12
  br label %42

34:                                               ; preds = %20
  %35 = add i64 %24, -9223372036854775807
  %36 = icmp ugt i64 %35, 1
  %37 = icmp eq i64 %24, %22
  %38 = or i1 %37, %36
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0)) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %27, %34, %39
  %43 = phi i64 [ %33, %27 ], [ %22, %34 ], [ %22, %39 ]
  %44 = bitcast %"class.viz::DisplaySchedulerClient"* %18 to i1 (%"class.viz::DisplaySchedulerClient"*, i64)***
  %45 = load i1 (%"class.viz::DisplaySchedulerClient"*, i64)**, i1 (%"class.viz::DisplaySchedulerClient"*, i64)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.viz::DisplaySchedulerClient"*, i64)*, i1 (%"class.viz::DisplaySchedulerClient"*, i64)** %45, i64 2
  %47 = load i1 (%"class.viz::DisplaySchedulerClient"*, i64)*, i1 (%"class.viz::DisplaySchedulerClient"*, i64)** %46, align 8
  %48 = call zeroext i1 %47(%"class.viz::DisplaySchedulerClient"* nonnull %18, i64 %43) #9
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  store i8 0, i8* %50, align 4
  br label %51

51:                                               ; preds = %13, %42, %49
  %52 = phi i1 [ true, %49 ], [ false, %42 ], [ false, %13 ]
  %53 = icmp eq i8* %16, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %51
  %55 = load i8, i8* %16, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #9
  br label %58

58:                                               ; preds = %51, %54, %57
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16DisplayScheduler12OnBeginFrameERKNS_14BeginFrameArgsE(%"class.viz::DisplayScheduler"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.std::__1::unique_ptr.29", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"struct.viz::BeginFrameArgs", align 8
  %11 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  store i64 %13, i64* %12, align 8
  %14 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %15 = and i8 %14, 25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %30, label %17, !prof !10

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::unique_ptr.29"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = tail call %"class.base::trace_event::ConvertableToTraceFormat"* @_ZNK3viz14BeginFrameArgs7AsValueEv(%"struct.viz::BeginFrameArgs"* %1) #9
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::trace_event::ConvertableToTraceFormat"* %19, %"class.base::trace_event::ConvertableToTraceFormat"** %20, align 8
  %21 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS1_14default_deleteIS5_EEEERNS3_9TimeTicksEEENS4_16TraceEventHandleEcPKhPKcSF_yjySF_OT_SF_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::unique_ptr.29"* nonnull dereferenceable(8) %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), %"class.base::TimeTicks"* nonnull dereferenceable(8) %5)
  %22 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %20, align 8
  store %"class.base::trace_event::ConvertableToTraceFormat"* null, %"class.base::trace_event::ConvertableToTraceFormat"** %20, align 8
  %23 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %22 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %26 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %26, i64 1
  %28 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %27, align 8
  call void %28(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %22) #9
  br label %29

29:                                               ; preds = %17, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %30

30:                                               ; preds = %2, %29
  %31 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %29 ]
  %32 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), %29 ]
  %33 = phi i64 [ -6148914691236517206, %2 ], [ %21, %29 ]
  %34 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 11
  %35 = load i8, i8* %34, align 8, !range !11
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %72, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10
  %39 = ptrtoint %"class.viz::DisplayScheduler"* %0 to i64
  %40 = call i8* @_Znwm(i64 120) #10, !noalias !13
  %41 = bitcast i8* %40 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %41, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS4_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS3_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !13
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.viz::DisplayScheduler"*, %"struct.viz::BeginFrameArgs"*)* @_ZN3viz16DisplayScheduler12OnBeginFrameERKNS_14BeginFrameArgsE to i64), i64 0>, <2 x i64>* %43, align 8, !noalias !13
  %44 = getelementptr inbounds i8, i8* %40, i64 48
  %45 = bitcast i8* %44 to i64*
  store i64 %39, i64* %45, align 8, !noalias !13
  %46 = getelementptr inbounds i8, i8* %40, i64 56
  %47 = bitcast i8* %46 to %"struct.viz::BeginFrameArgs"*
  call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %47, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %1) #9, !noalias !13
  %48 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %40, i8** %48, align 8, !alias.scope !13
  %49 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %49) #9
  %50 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %38, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %50) #9
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %52 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %50, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %51) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #9
  %53 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 3
  %54 = bitcast %"class.base::SingleThreadTaskRunner"** %53 to %"class.base::TaskRunner"**
  %55 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %54, align 8
  %56 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.7, i64 0, i64 0), i32 170) #9
  %57 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %57, align 8, !noalias !18
  %59 = icmp eq %"class.base::internal::BindStateBase"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %37
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %61, align 8, !alias.scope !18
  br label %69

62:                                               ; preds = %37
  %63 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9, !noalias !18
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %64, align 8, !noalias !18
  call void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"* %38, %"class.base::OnceCallback"* nonnull %4) #9, !noalias !18
  %65 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !18
  %67 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %66, i64* %67, align 8, !alias.scope !18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %64, align 8, !noalias !18
  %68 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #9, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9, !noalias !18
  br label %69

69:                                               ; preds = %60, %62
  %70 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %55, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback"* nonnull %9) #9
  %71 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #9
  br label %125

72:                                               ; preds = %30
  %73 = bitcast %"struct.viz::BeginFrameArgs"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %73) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 64, i1 false)
  call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* nonnull %10, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %1) #9
  %74 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %74) #9
  %75 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 10, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %75) #9
  %76 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 14
  %77 = load i8, i8* %76, align 1, !range !11
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %72
  call void @_ZN3viz16DisplayScheduler20OnBeginFrameDeadlineEv(%"class.viz::DisplayScheduler"* %0)
  br label %80

80:                                               ; preds = %72, %79
  %81 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6
  %82 = call dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"* %81, %"struct.viz::BeginFrameArgs"* nonnull dereferenceable(64) %10) #9
  %83 = getelementptr inbounds %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameArgs"* %10, i64 0, i32 2, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = sitofp i64 %84 to float
  %86 = fmul float %85, 0x3FD5555560000000
  %87 = fcmp oge float %86, 0xC3E0000000000000
  %88 = fcmp ole float %86, 0x43DFFFFFE0000000
  %89 = and i1 %88, %87
  %90 = fptosi float %86 to i64
  %91 = icmp sgt i64 %84, -1
  %92 = select i1 %91, i64 9223372036854775807, i64 -9223372036854775808
  %93 = select i1 %89, i64 %90, i64 %92
  %94 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #9
  %95 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %96, i64* %97, align 8
  %98 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %93) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  store i64 %98, i64* %95, align 8
  store i8 1, i8* %76, align 1
  %99 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %100 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %99, align 8
  %101 = icmp eq %"class.gfx::RenderingPipeline"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %80
  %103 = load i64, i64* %83, align 8
  %104 = bitcast %"class.gfx::RenderingPipeline"* %100 to void (%"class.gfx::RenderingPipeline"*, i64)***
  %105 = load void (%"class.gfx::RenderingPipeline"*, i64)**, void (%"class.gfx::RenderingPipeline"*, i64)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.gfx::RenderingPipeline"*, i64)*, void (%"class.gfx::RenderingPipeline"*, i64)** %105, i64 5
  %107 = load void (%"class.gfx::RenderingPipeline"*, i64)*, void (%"class.gfx::RenderingPipeline"*, i64)** %106, align 8
  call void %107(%"class.gfx::RenderingPipeline"* nonnull %100, i64 %103) #9
  %108 = load i8, i8* %76, align 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %120, label %110

110:                                              ; preds = %80, %102
  %111 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 1
  %112 = load %"class.viz::DisplaySchedulerClient"*, %"class.viz::DisplaySchedulerClient"** %111, align 8
  %113 = icmp eq %"class.viz::DisplaySchedulerClient"* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 16
  %116 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %117 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %116, align 8
  %118 = call zeroext i1 @_ZN3viz20DisplayDamageTracker18HasPendingSurfacesERKNS_14BeginFrameArgsE(%"class.viz::DisplayDamageTracker"* %117, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %81) #9
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %115, align 1
  br label %120

120:                                              ; preds = %102, %110, %114
  %121 = bitcast %"class.viz::DisplayScheduler"* %0 to void (%"class.viz::DisplayScheduler"*)***
  %122 = load void (%"class.viz::DisplayScheduler"*)**, void (%"class.viz::DisplayScheduler"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %122, i64 12
  %124 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %123, align 8
  call void %124(%"class.viz::DisplayScheduler"* %0) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %73) #9
  br label %125

125:                                              ; preds = %120, %69
  %126 = icmp eq i8* %31, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %125
  %128 = load i8, i8* %31, align 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %127
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %31, i8* %32, i64 %33) #9
  br label %131

131:                                              ; preds = %125, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  ret i1 true
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS1_14default_deleteIS5_EEEERNS3_9TimeTicksEEENS4_16TraceEventHandleEcPKhPKcSF_yjySF_OT_SF_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::unique_ptr.29"* dereferenceable(8), i8*, %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #9
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247503358, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29"* %8, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.29"* %8 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.base::trace_event::ConvertableToTraceFormat"* null, %"class.base::trace_event::ConvertableToTraceFormat"** %22, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %10, i64 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #9
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #9
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #9
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #9
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #9
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  ret i64 %29
}

declare %"class.base::trace_event::ConvertableToTraceFormat"* @_ZNK3viz14BeginFrameArgs7AsValueEv(%"struct.viz::BeginFrameArgs"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #1

declare dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3viz16DisplayScheduler15MaxPendingSwapsEv(%"class.viz::DisplayScheduler"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 19
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler21SetNeedsOneBeginFrameEb(%"class.viz::DisplayScheduler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %4 = load i8, i8* %3, align 1, !range !11
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %8 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %7, align 8
  %9 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %9, align 8
  %11 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %10, i64 0, i32 0, i32 0
  %12 = bitcast %"class.viz::BeginFrameSource"* %8 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %13 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %13, i64 3
  %15 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %14, align 8
  tail call void %15(%"class.viz::BeginFrameSource"* %8, %"class.viz::BeginFrameObserver"* %11) #9
  store i8 1, i8* %3, align 1
  %16 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %17 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %16, align 8
  %18 = icmp eq %"class.gfx::RenderingPipeline"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %24) #9
  store i8 0, i8* %20, align 8
  %25 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %16, align 8
  br label %26

26:                                               ; preds = %23, %19
  %27 = phi %"class.gfx::RenderingPipeline"* [ %17, %19 ], [ %25, %23 ]
  %28 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %28, %"class.gfx::RenderingPipeline"* %27) #9
  store i8 1, i8* %20, align 8
  br label %29

29:                                               ; preds = %2, %6, %26
  br i1 %1, label %30, label %32

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  store i8 1, i8* %31, align 4
  br label %32

32:                                               ; preds = %30, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler25StartObservingBeginFramesEv(%"class.viz::DisplayScheduler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 21
  %3 = load i8, i8* %2, align 1, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %7 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.viz::DisplayScheduler::BeginFrameObserver"*, %"class.viz::DisplayScheduler::BeginFrameObserver"** %8, align 8
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.viz::BeginFrameSource"* %7 to void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)***
  %12 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)**, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %12, i64 3
  %14 = load void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)*, void (%"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameObserver"*)** %13, align 8
  tail call void %14(%"class.viz::BeginFrameSource"* %7, %"class.viz::BeginFrameObserver"* %10) #9
  store i8 1, i8* %2, align 1
  %15 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 4
  %16 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %15, align 8
  %17 = icmp eq %"class.gfx::RenderingPipeline"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !11
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %23) #9
  store i8 0, i8* %19, align 8
  %24 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %15, align 8
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi %"class.gfx::RenderingPipeline"* [ %16, %18 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* %27, %"class.gfx::RenderingPipeline"* %26) #9
  store i8 1, i8* %19, align 8
  br label %28

28:                                               ; preds = %5, %1, %25
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz16DisplayScheduler10ShouldDrawEv(%"class.viz::DisplayScheduler"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 4, !range !11
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  %7 = load i8, i8* %6, align 2, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 12
  %11 = load i8, i8* %10, align 1, !range !11
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %15 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %14, align 8
  %16 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !11
  %18 = icmp eq i8 %17, 0
  br label %19

19:                                               ; preds = %9, %5, %1, %13
  %20 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %18, %13 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3viz16DisplayScheduler29DesiredBeginFrameDeadlineTimeEv(%"class.viz::DisplayScheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call i32 @_ZNK3viz16DisplayScheduler29DesiredBeginFrameDeadlineModeEv(%"class.viz::DisplayScheduler"* %0) #9
  %4 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 20
  %5 = load i8, i8* %4, align 4, !range !11
  %6 = icmp ne i8 %5, 0
  %7 = add i32 %3, -1
  %8 = icmp ult i32 %7, 2
  %9 = and i1 %6, %8
  %10 = select i1 %9, i32 3, i32 %3
  switch i32 %10, label %37 [
    i32 3, label %36
    i32 1, label %11
    i32 2, label %14
  ]

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  br label %37

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6, i32 2, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, -9223372036854775807
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %28, label %21

21:                                               ; preds = %14
  %22 = icmp slt i64 %16, 0
  %23 = select i1 %22, i64 -9223372036854775808, i64 9223372036854775807
  %24 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %18, i64 %16) #9
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 %23, i64 %26, !prof !12
  br label %37

28:                                               ; preds = %14
  %29 = add i64 %18, -9223372036854775807
  %30 = icmp ugt i64 %29, 1
  %31 = icmp eq i64 %18, %16
  %32 = or i1 %31, %30
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %37

36:                                               ; preds = %1
  br label %37

37:                                               ; preds = %1, %33, %28, %21, %36, %11
  %38 = phi i64 [ 9223372036854775807, %36 ], [ %13, %11 ], [ %27, %21 ], [ %16, %28 ], [ %16, %33 ], [ 0, %1 ]
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3viz16DisplayScheduler30AdjustedBeginFrameDeadlineModeEv(%"class.viz::DisplayScheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK3viz16DisplayScheduler29DesiredBeginFrameDeadlineModeEv(%"class.viz::DisplayScheduler"* %0)
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 20
  %4 = load i8, i8* %3, align 4, !range !11
  %5 = icmp ne i8 %4, 0
  %6 = add i32 %2, -1
  %7 = icmp ult i32 %6, 2
  %8 = and i1 %5, %7
  %9 = select i1 %8, i32 3, i32 %2
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3viz16DisplayScheduler29DesiredBeginFrameDeadlineModeEv(%"class.viz::DisplayScheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 2, !range !11
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %1
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %118, label %16, !prof !10

16:                                               ; preds = %12
  %17 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %18 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %20, i64* %19, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %17, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %118

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 18
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 19
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %38, label %28

28:                                               ; preds = %22
  %29 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %30 = and i8 %29, 25
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %118, label %32, !prof !10

32:                                               ; preds = %28
  %33 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %34 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %36 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %36, i64* %35, align 8
  %37 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %33, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %118

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 0, i32 2
  %40 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %39, align 8
  %41 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 8, !range !11
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  %45 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %46 = and i8 %45, 25
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %118, label %48, !prof !10

48:                                               ; preds = %44
  %49 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %50 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %52 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %52, i64* %51, align 8
  %53 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %49, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  br label %118

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 16
  %56 = load i8, i8* %55, align 1, !range !11
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %82

58:                                               ; preds = %54
  %59 = tail call zeroext i1 @_ZNK3viz20DisplayDamageTracker18IsRootSurfaceValidEv(%"class.viz::DisplayDamageTracker"* %40) #9
  br i1 %59, label %60, label %82

60:                                               ; preds = %58
  %61 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %39, align 8
  %62 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %61, i64 0, i32 5
  %63 = load i8, i8* %62, align 1, !range !11
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %82

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 20
  %67 = load i8, i8* %66, align 4, !range !11
  %68 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  %69 = load i8, i8* %68, align 4, !range !11
  %70 = or i8 %69, %67
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %65
  %73 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %74 = and i8 %73, 25
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %118, label %76, !prof !10

76:                                               ; preds = %72
  %77 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %78 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  %79 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %80 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %80, i64* %79, align 8
  %81 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %77, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  br label %118

82:                                               ; preds = %65, %54, %58, %60
  %83 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 15
  %84 = load i8, i8* %83, align 4, !range !11
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %96

86:                                               ; preds = %82
  %87 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %88 = and i8 %87, 25
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %118, label %90, !prof !10

90:                                               ; preds = %86
  %91 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %92 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #9
  %93 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %94 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %94, i64* %93, align 8
  %95 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %91, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #9
  br label %118

96:                                               ; preds = %82
  %97 = load %"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker"** %39, align 8
  %98 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %97, i64 0, i32 5
  %99 = load i8, i8* %98, align 1, !range !11
  %100 = icmp eq i8 %99, 0
  %101 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %102 = and i8 %101, 25
  %103 = icmp eq i8 %102, 0
  br i1 %100, label %111, label %104

104:                                              ; preds = %96
  br i1 %103, label %118, label %105, !prof !10

105:                                              ; preds = %104
  %106 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %107 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #9
  %108 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %109 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %109, i64* %108, align 8
  %110 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %106, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #9
  br label %118

111:                                              ; preds = %96
  br i1 %103, label %118, label %112, !prof !10

112:                                              ; preds = %111
  %113 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %114 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #9
  %115 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %116 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %116, i64* %115, align 8
  %117 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %113, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #9
  br label %118

118:                                              ; preds = %72, %76, %86, %90, %104, %105, %111, %112, %48, %44, %32, %28, %16, %12
  %119 = phi i32 [ 0, %12 ], [ 0, %16 ], [ 2, %28 ], [ 2, %32 ], [ 2, %44 ], [ 2, %48 ], [ 0, %72 ], [ 0, %76 ], [ 2, %86 ], [ 2, %90 ], [ 2, %104 ], [ 2, %105 ], [ 1, %111 ], [ 1, %112 ]
  ret i32 %119
}

declare zeroext i1 @_ZNK3viz20DisplayDamageTracker18IsRootSurfaceValidEv(%"class.viz::DisplayDamageTracker"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler26ScheduleBeginFrameDeadlineEv(%"class.viz::DisplayScheduler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::RepeatingCallback", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca i64, align 8
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %22, label %16, !prof !10

16:                                               ; preds = %1
  %17 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %18 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %20, i64* %19, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %17, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %22

22:                                               ; preds = %1, %16
  %23 = phi i64 [ -6148914691236517206, %1 ], [ %21, %16 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), %16 ]
  %25 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %16 ]
  %26 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 14
  %27 = load i8, i8* %26, align 1, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %22
  %30 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %31 = and i8 %30, 25
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %119, label %33, !prof !10

33:                                               ; preds = %29
  %34 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %35 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %37 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %37, i64* %36, align 8
  %38 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %34, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  br label %117

39:                                               ; preds = %22
  %40 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %42 = call i64 @_ZNK3viz16DisplayScheduler29DesiredBeginFrameDeadlineTimeEv(%"class.viz::DisplayScheduler"* %0)
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8
  %44 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %44, align 8
  %46 = icmp eq %"class.base::internal::BindStateBase"* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 9, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %42, %49
  br i1 %50, label %51, label %61

51:                                               ; preds = %47
  %52 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %53 = and i8 %52, 25
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %117, label %55, !prof !10

55:                                               ; preds = %51
  %56 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %57 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  %58 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %59 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %59, i64* %58, align 8
  %60 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %56, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  br label %117

61:                                               ; preds = %47, %39
  %62 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %42, i64* %62, align 8
  %63 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 8, i32 1, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %63) #9
  %64 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %43, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %64) #9
  %65 = load i64, i64* %62, align 8
  %66 = icmp eq i64 %65, 9223372036854775807
  br i1 %66, label %67, label %77

67:                                               ; preds = %61
  %68 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %69 = and i8 %68, 25
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %117, label %71, !prof !10

71:                                               ; preds = %67
  %72 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %73 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %75 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %75, i64* %74, align 8
  %76 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %72, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #9
  br label %117

77:                                               ; preds = %61
  %78 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0
  %79 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 7, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %78, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %79) #9
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %80, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %78) #9
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %63) #9
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %64) #9
  %81 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %64, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %80) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #9
  %82 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #9
  %83 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %84 = sub nsw i64 %42, %83
  %85 = icmp sgt i64 %84, 0
  %86 = select i1 %85, i64 %84, i64 0
  %87 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 3
  %88 = bitcast %"class.base::SingleThreadTaskRunner"** %87 to %"class.base::TaskRunner"**
  %89 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %88, align 8
  %90 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.7, i64 0, i64 0), i32 377) #9
  %91 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %44, align 8, !noalias !21
  %92 = icmp eq %"class.base::internal::BindStateBase"* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %77
  %94 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %94, align 8, !alias.scope !21
  br label %102

95:                                               ; preds = %77
  %96 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #9, !noalias !21
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8, !noalias !21
  call void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"* %43, %"class.base::OnceCallback"* nonnull %2) #9, !noalias !21
  %98 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !21
  %100 = bitcast %"class.base::OnceCallback"* %11 to i64*
  store i64 %99, i64* %100, align 8, !alias.scope !21
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8, !noalias !21
  %101 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %101) #9, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #9, !noalias !21
  br label %102

102:                                              ; preds = %93, %95
  %103 = bitcast %"class.base::TaskRunner"* %89 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %104 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %103, align 8
  %105 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %104, align 8
  %106 = call zeroext i1 %105(%"class.base::TaskRunner"* %89, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %11, i64 %86) #9
  %107 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #9
  %108 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %109 = and i8 %108, 25
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %117, label %111, !prof !10

111:                                              ; preds = %102
  %112 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #9
  store i64 %86, i64* %12, align 8
  %113 = call i64 @_ZN20trace_event_internal13AddTraceEventIlRN4base9TimeTicksEEENS1_11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64* nonnull dereferenceable(8) %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), %"class.base::TimeTicks"* nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #9
  %114 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %111
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i64 %113) #9
  br label %117

117:                                              ; preds = %51, %55, %67, %71, %111, %116, %102, %33
  %118 = phi i8* [ %35, %33 ], [ %40, %102 ], [ %40, %116 ], [ %40, %111 ], [ %40, %71 ], [ %40, %67 ], [ %40, %55 ], [ %40, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  br label %119

119:                                              ; preds = %117, %29
  %120 = icmp eq i8* %25, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = load i8, i8* %25, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %24, i64 %23) #9
  br label %125

125:                                              ; preds = %119, %121, %124
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIlRN4base9TimeTicksEEENS1_11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8), i8*, %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #9
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247504638, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i64, i64* %8, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %10, i64 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %25, i64* %26, align 8
  %27 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #9
  %28 = load i8, i8* %18, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %64, label %30

30:                                               ; preds = %11, %59
  %31 = phi i64 [ %60, %59 ], [ 0, %11 ]
  %32 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %46

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %31
  %37 = bitcast %"union.base::trace_event::TraceValue"* %36 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %38 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %37, align 8
  %39 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %38 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %42 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %42, i64 1
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, align 8
  call void %44(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %38) #9
  %45 = load i8, i8* %32, align 1
  br label %46

46:                                               ; preds = %40, %30
  %47 = phi i8 [ %33, %30 ], [ %45, %40 ]
  %48 = icmp eq i8 %47, 9
  br i1 %48, label %49, label %59

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %31
  %51 = bitcast %"union.base::trace_event::TraceValue"* %50 to %"class.protozero::HeapBuffered"**
  %52 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %51, align 8
  %53 = icmp eq %"class.protozero::HeapBuffered"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %52, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %55) #9
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %52, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %56) #9
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %52, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %57) #9
  %58 = bitcast %"class.protozero::HeapBuffered"* %52 to i8*
  call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %54, %49, %46, %35
  %60 = add nuw nsw i64 %31, 1
  %61 = load i8, i8* %18, align 8
  %62 = zext i8 %61 to i64
  %63 = icmp ult i64 %60, %62
  br i1 %63, label %30, label %64

64:                                               ; preds = %59, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  ret i64 %27
}

declare void @_ZN3viz13BeginFrameAckC1ERKNS_14BeginFrameArgsEb(%"struct.viz::BeginFrameAck"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler14DidSwapBuffersEv(%"class.viz::DisplayScheduler"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 19
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %11 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %10, align 8
  tail call void @_ZN3viz16BeginFrameSource12SetIsGpuBusyEb(%"class.viz::BeginFrameSource"* %11, i1 zeroext true) #9
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 17
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %17 = and i8 %16, 25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %26, label %19, !prof !10

19:                                               ; preds = %12
  %20 = zext i32 %14 to i64
  %21 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %22 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %24 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %24, i64* %23, align 8
  %25 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 83, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0), i8* null, i64 %20, i64 0, i32 %21, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %26

26:                                               ; preds = %12, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16DisplayScheduler24DidReceiveSwapBuffersAckEv(%"class.viz::DisplayScheduler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 17
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 18
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, -1
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"class.viz::DisplayScheduler", %"class.viz::DisplayScheduler"* %0, i64 0, i32 2
  %9 = load %"class.viz::BeginFrameSource"*, %"class.viz::BeginFrameSource"** %8, align 8
  tail call void @_ZN3viz16BeginFrameSource12SetIsGpuBusyEb(%"class.viz::BeginFrameSource"* %9, i1 zeroext false) #9
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13, !prof !10

13:                                               ; preds = %1
  %14 = sub nsw i32 %4, %6
  %15 = zext i32 %14 to i64
  %16 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %17 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %19 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %19, i64* %18, align 8
  %20 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 70, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0), i8* null, i64 %15, i64 0, i32 %16, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %21

21:                                               ; preds = %1, %13
  %22 = bitcast %"class.viz::DisplayScheduler"* %0 to void (%"class.viz::DisplayScheduler"*)***
  %23 = load void (%"class.viz::DisplayScheduler"*)**, void (%"class.viz::DisplayScheduler"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %23, i64 12
  %25 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %24, align 8
  call void %25(%"class.viz::DisplayScheduler"* %0) #9
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"*) unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !12
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN3viz22BeginFrameObserverBaseC2Ev(%"class.viz::BeginFrameObserverBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz22BeginFrameObserverBaseD2Ev(%"class.viz::BeginFrameObserverBase"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz16DisplayScheduler18BeginFrameObserverD0Ev(%"class.viz::DisplayScheduler::BeginFrameObserver"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.viz::DisplayScheduler::BeginFrameObserver"* %0 to %"class.viz::BeginFrameObserverBase"*
  tail call void @_ZN3viz22BeginFrameObserverBaseD2Ev(%"class.viz::BeginFrameObserverBase"* %2) #9
  %3 = bitcast %"class.viz::DisplayScheduler::BeginFrameObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

declare void @_ZN3viz22BeginFrameObserverBase12OnBeginFrameERKNS_14BeginFrameArgsE(%"class.viz::BeginFrameObserverBase"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #1

declare dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZNK3viz22BeginFrameObserverBase22LastUsedBeginFrameArgsEv(%"class.viz::BeginFrameObserverBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz16DisplayScheduler18BeginFrameObserver31OnBeginFrameSourcePausedChangedEb(%"class.viz::DisplayScheduler::BeginFrameObserver"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK3viz22BeginFrameObserverBase27WantsAnimateOnlyBeginFramesEv(%"class.viz::BeginFrameObserverBase"*) unnamed_addr #1

declare zeroext i1 @_ZNK3viz18BeginFrameObserver6IsRootEv(%"class.viz::BeginFrameObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3viz16DisplayScheduler18BeginFrameObserver23OnBeginFrameDerivedImplERKNS_14BeginFrameArgsE(%"class.viz::DisplayScheduler::BeginFrameObserver"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayScheduler::BeginFrameObserver", %"class.viz::DisplayScheduler::BeginFrameObserver"* %0, i64 0, i32 1
  %4 = load %"class.viz::DisplayScheduler"*, %"class.viz::DisplayScheduler"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3viz16DisplayScheduler12OnBeginFrameERKNS_14BeginFrameArgsE(%"class.viz::DisplayScheduler"* %4, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %1)
  ret i1 true
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.viz::DisplayScheduler"**
  %10 = load %"class.viz::DisplayScheduler"*, %"class.viz::DisplayScheduler"** %9, align 8
  %11 = icmp eq %"class.viz::DisplayScheduler"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.viz::DisplayScheduler"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.viz::DisplayScheduler"*)**
  %37 = load void (%"class.viz::DisplayScheduler"*)*, void (%"class.viz::DisplayScheduler"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.viz::DisplayScheduler"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.viz::DisplayScheduler"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.viz::DisplayScheduler"* %28) #9
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.viz::DisplayScheduler"**
  %9 = load %"class.viz::DisplayScheduler"*, %"class.viz::DisplayScheduler"** %8, align 8
  %10 = icmp ne %"class.viz::DisplayScheduler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS4_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"struct.viz::BeginFrameArgs"*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.viz::DisplayScheduler"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i1 (%"class.viz::DisplayScheduler"*, %"struct.viz::BeginFrameArgs"*)**
  %23 = load i1 (%"class.viz::DisplayScheduler"*, %"struct.viz::BeginFrameArgs"*)*, i1 (%"class.viz::DisplayScheduler"*, %"struct.viz::BeginFrameArgs"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to i1 (%"class.viz::DisplayScheduler"*, %"struct.viz::BeginFrameArgs"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi i1 (%"class.viz::DisplayScheduler"*, %"struct.viz::BeginFrameArgs"*)* [ %23, %17 ], [ %25, %24 ]
  %28 = tail call zeroext i1 %27(%"class.viz::DisplayScheduler"* %14, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS3_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE13MakeForwarderIJEEEvPNS2_IFvDpT_EEE(%"class.base::internal::CancelableCallbackImpl"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr.70", align 8
  %6 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = bitcast %"class.base::WeakPtr.70"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9, !noalias !24
  %9 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %9) #9, !noalias !24
  %10 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !24
  %12 = getelementptr inbounds %"class.base::WeakPtr.70", %"class.base::WeakPtr.70"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %11) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9, !noalias !24
  %13 = call i8* @_Znwm(i64 64) #10, !noalias !27
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #9, !noalias !27
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CancelableCallbackImpl"*)* @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_ to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !27
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakReference"*
  %19 = getelementptr inbounds %"class.base::WeakPtr.70", %"class.base::WeakPtr.70"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #9, !noalias !27
  %20 = getelementptr inbounds i8, i8* %13, i64 56
  %21 = bitcast i8* %20 to i64*
  %22 = getelementptr inbounds %"class.base::WeakPtr.70", %"class.base::WeakPtr.70"* %5, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !27
  store i64 %23, i64* %21, align 8, !noalias !27
  %24 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !27
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %27 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %25, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %26) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE11ForwardOnceIJEEEvDpT_(%"class.base::internal::CancelableCallbackImpl"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #9
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.base::internal::CancelableCallbackImpl", %"class.base::internal::CancelableCallbackImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::internal::CancelableCallbackImpl"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEES5_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::CancelableCallbackImpl"**
  %10 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %9, align 8
  %11 = icmp eq %"class.base::internal::CancelableCallbackImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.base::internal::CancelableCallbackImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.base::internal::CancelableCallbackImpl"*)**
  %37 = load void (%"class.base::internal::CancelableCallbackImpl"*)*, void (%"class.base::internal::CancelableCallbackImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.base::internal::CancelableCallbackImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.base::internal::CancelableCallbackImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.base::internal::CancelableCallbackImpl"* %28) #9
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS7_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CancelableCallbackImpl"**
  %9 = load %"class.base::internal::CancelableCallbackImpl"*, %"class.base::internal::CancelableCallbackImpl"** %8, align 8
  %10 = icmp ne %"class.base::internal::CancelableCallbackImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"*, %"class.gfx::RenderingPipeline"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3viz16DisplaySchedulerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3viz16DisplaySchedulerEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base13BindRepeatingIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!9 = distinct !{!9, !"_ZN4base13BindRepeatingIMN3viz16DisplaySchedulerEFvvEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{i8 0, i8 2}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS4_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS5_EES8_EEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS0_18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS4_14BeginFrameArgsEEEEJNS0_17UnretainedWrapperIS5_EES8_EEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS3_14BeginFrameArgsEEEEJNS1_17UnretainedWrapperIS4_EES7_EEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceINS_8internal18IgnoreResultHelperIMN3viz16DisplaySchedulerEFbRKNS3_14BeginFrameArgsEEEEJNS1_17UnretainedWrapperIS4_EES7_EEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEE8callbackEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base14WeakPtrFactoryINS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEE10GetWeakPtrEv"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMNS0_22CancelableCallbackImplINS2_IFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIRMNS_8internal22CancelableCallbackImplINS_12OnceCallbackIFvvEEEEEFvvEJNS_7WeakPtrIS6_EEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
