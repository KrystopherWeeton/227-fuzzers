; ModuleID = '../../media/parsers/webp_parser.cc'
source_filename = "../../media/parsers/webp_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::Vp8FrameHeader" = type <{ i32, i8, i8, i8, i8, i64, i16, i8, i8, i16, i8, i8, %"struct.media::Vp8SegmentationHeader", %"struct.media::Vp8LoopFilterHeader", %"struct.media::Vp8QuantizationHeader", [6 x i8], i64, %"struct.media::Vp8EntropyHeader", i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8*, i64, [8 x i64], i64, i64, i8, i8, i8, i8, [4 x i8] }>
%"struct.media::Vp8SegmentationHeader" = type { i8, i8, i8, i32, [4 x i8], [4 x i8], [3 x i8] }
%"struct.media::Vp8LoopFilterHeader" = type { i32, i8, i8, i8, i8, [4 x i8], [4 x i8] }
%"struct.media::Vp8QuantizationHeader" = type { i8, i8, i8, i8, i8, i8 }
%"struct.media::Vp8EntropyHeader" = type { [4 x [8 x [3 x [11 x i8]]]], [4 x i8], [3 x i8], [2 x [19 x i8]] }
%"class.media::Vp8Parser" = type { %"struct.media::Vp8SegmentationHeader", %"struct.media::Vp8LoopFilterHeader", %"struct.media::Vp8EntropyHeader", i8*, i64, %"class.media::Vp8BoolDecoder" }
%"class.media::Vp8BoolDecoder" = type { i8*, i8*, i8*, i64, i32, i64 }

@.str = private unnamed_addr constant [5 x i8] c"RIFF\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"WEBPVP8 \00", align 1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5media16IsLossyWebPImageEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #0 {
  %3 = icmp ult i64 %0, 20
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @bcmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %1, i64 8
  %9 = tail call i32 @bcmp(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8)
  %10 = icmp eq i32 %9, 0
  br label %11

11:                                               ; preds = %7, %4, %2
  %12 = phi i1 [ false, %2 ], [ false, %4 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.media::Vp8FrameHeader"* @_ZN5media14ParseWebPImageEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #1 {
  %3 = alloca %"class.media::Vp8Parser", align 8
  %4 = icmp ult i64 %0, 20
  br i1 %4, label %54, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @bcmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %54

8:                                                ; preds = %5
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = tail call i32 @bcmp(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %54

12:                                               ; preds = %8
  %13 = getelementptr inbounds i8, i8* %1, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp ne i32 %16, 0
  %18 = icmp ugt i32 %15, -10
  %19 = or i1 %18, %17
  br i1 %19, label %54, label %20

20:                                               ; preds = %12
  %21 = zext i32 %15 to i64
  %22 = add i64 %0, -8
  %23 = icmp eq i64 %22, %21
  br i1 %23, label %24, label %54

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %1, i64 16
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i64 %21, -12
  %29 = zext i32 %27 to i64
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %54, label %31

31:                                               ; preds = %24
  %32 = add nuw nsw i64 %29, 1
  %33 = and i64 %32, 8589934590
  %34 = add i64 %0, -20
  %35 = icmp eq i64 %34, %33
  br i1 %35, label %36, label %54

36:                                               ; preds = %31
  %37 = and i32 %27, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = add i64 %0, -1
  %41 = getelementptr inbounds i8, i8* %1, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %39, %36
  %45 = getelementptr inbounds %"class.media::Vp8Parser", %"class.media::Vp8Parser"* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1208, i8* nonnull %45) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 1208, i1 false)
  call void @_ZN5media9Vp8ParserC1Ev(%"class.media::Vp8Parser"* nonnull %3) #8
  %46 = call i8* @_Znwm(i64 1304) #9
  %47 = bitcast i8* %46 to %"struct.media::Vp8FrameHeader"*
  call void @_ZN5media14Vp8FrameHeaderC1Ev(%"struct.media::Vp8FrameHeader"* nonnull %47) #8
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds i8, i8* %1, i64 20
  %50 = call zeroext i1 @_ZN5media9Vp8Parser10ParseFrameEPKhmPNS_14Vp8FrameHeaderE(%"class.media::Vp8Parser"* nonnull %3, i8* %49, i64 %29, %"struct.media::Vp8FrameHeader"* nonnull %47) #8
  br i1 %50, label %52, label %51

51:                                               ; preds = %44
  call void @_ZdlPv(i8* nonnull %46) #9
  br label %52

52:                                               ; preds = %44, %51
  %53 = phi i64 [ 0, %51 ], [ %48, %44 ]
  call void @_ZN5media9Vp8ParserD1Ev(%"class.media::Vp8Parser"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 1208, i8* nonnull %45) #8
  br label %54

54:                                               ; preds = %12, %5, %2, %39, %31, %24, %20, %8, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %8 ], [ 0, %12 ], [ 0, %20 ], [ 0, %24 ], [ 0, %31 ], [ 0, %39 ], [ 0, %2 ], [ 0, %5 ]
  %56 = inttoptr i64 %55 to %"struct.media::Vp8FrameHeader"*
  ret %"struct.media::Vp8FrameHeader"* %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5media9Vp8ParserC1Ev(%"class.media::Vp8Parser"*) unnamed_addr #3

declare zeroext i1 @_ZN5media9Vp8Parser10ParseFrameEPKhmPNS_14Vp8FrameHeaderE(%"class.media::Vp8Parser"*, i8*, i64, %"struct.media::Vp8FrameHeader"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN5media9Vp8ParserD1Ev(%"class.media::Vp8Parser"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN5media14Vp8FrameHeaderC1Ev(%"struct.media::Vp8FrameHeader"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
