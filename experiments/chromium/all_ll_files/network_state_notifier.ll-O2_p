; ModuleID = '../../third_party/blink/renderer/platform/network/network_state_notifier.cc'
source_filename = "../../third_party/blink/renderer/platform/network/network_state_notifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::NetworkStateNotifier>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::NetworkStateNotifier>::InstanceStorage" = type { %"class.blink::NetworkStateNotifier"* }
%"class.blink::NetworkStateNotifier" = type <{ %"class.WTF::Mutex", %"struct.blink::NetworkStateNotifier::NetworkState", i8, [7 x i8], %"struct.blink::NetworkStateNotifier::NetworkState", %"class.WTF::HashMap", %"class.WTF::HashMap", i8, [7 x i8] }>
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.blink::NetworkStateNotifier::NetworkState" = type <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.0", i8, [3 x i8], %"class.absl::optional.5", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { double }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::NetworkStateNotifier::ObserverList"* }
%"struct.blink::NetworkStateNotifier::ObserverList" = type { i8, %"class.WTF::Vector", %"class.WTF::Vector.13" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, i32, i32 }
%"class.blink::NetworkStateNotifier::NetworkStateObserver" = type { i32 (...)** }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { i32*, i32, i32 }
%"class.blink::NetworkStateNotifier::ScopedNotifier" = type { %"class.blink::NetworkStateNotifier"*, %"struct.blink::NetworkStateNotifier::NetworkState" }
%"class.blink::NetworkStateNotifier::NetworkStateObserverHandle" = type { %"class.blink::NetworkStateNotifier"*, i32, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %class.scoped_refptr }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.28", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.50 }
%union.anon.50 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__less.63" = type { i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.31" }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.WTF::StringImpl"* }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS4_12ObserverListENSA_14default_deleteISC_EEEENS5_10RefPtrHashIS8_EENS5_10HashTraitsIS9_EENSI_ISF_EENS5_18PartitionAllocatorEEENS4_12ObserverTypeES9_RKNS4_12NetworkStateEEJNS5_28CrossThreadUnretainedWrapperIS4_EENSU_ISM_EESO_S9_SP_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS3_12ObserverListENS9_14default_deleteISB_EEEENS4_10RefPtrHashIS7_EENS4_10HashTraitsIS8_EENSH_ISE_EENS4_18PartitionAllocatorEEENS3_12ObserverTypeES8_RKNS3_12NetworkStateEEJNS4_28CrossThreadUnretainedWrapperIS3_EENST_ISL_EESN_S8_SO_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EES4_DnEENS_18HashTableAddResultISO_SE_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsI13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS2_INSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS8_14default_deleteISC_EEEEEEEENS_10RefPtrHashIS5_EENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS6_SF_EES6_DnEEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8RehashToEPSE_jSP_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSH_ISD_EEEELb0EE4MoveEOSE_RSE_ = comdat any

$_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink20NetworkStateNotifier20NetworkStateObserverEEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE4findENSK_17RefPtrValuePeekerE = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE12DeleteBucketERKSE_ = comdat any

@_ZZN5blink23GetNetworkStateNotifierEvE24s_network_state_notifier = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink23GetNetworkStateNotifierEvE24s_network_state_notifier = internal global i64 0, align 8
@_ZN3net41kHttpRttEffectiveConnectionTypeThresholdsE = external local_unnamed_addr global [6 x %"class.base::TimeDelta"], align 16
@__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier = private unnamed_addr constant { %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> } { %"class.blink::NetworkStateNotifier"* inttoptr (i64 -6148914691236517206 to %"class.blink::NetworkStateNotifier"*), <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> <{ i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { double 0xFFFFFFFFFFFFFFFF } } } } }, i8 -86, [3 x i8] c"\AA\AA\AA", { { { { i8, [3 x i8], %union.anon.9 } } } } { { { { i8, [3 x i8], %union.anon.9 } } } { { { i8, [3 x i8], %union.anon.9 } } { { i8, [3 x i8], %union.anon.9 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.9 { i32 -1431655766 } } } } }, [4 x i8] c"\AA\AA\AA\AA" }> }, align 8
@.str = private unnamed_addr constant [16 x i8] c"NotifyObservers\00", align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/platform/network/network_state_notifier.cc\00", align 1
@_ZN5blink34kWebEffectiveConnectionTypeMappingE = external local_unnamed_addr constant [0 x i8*], align 8
@_ZZNK5blink20NetworkStateNotifier8RoundRttERKN3WTF6StringERKN4absl8optionalIN4base9TimeDeltaEEEE7kMaxRtt = internal unnamed_addr constant %"class.base::TimeDelta" { i64 3000000 }, align 8
@_ZN5blink12_GLOBAL__N_138kTypicalHttpRttEffectiveConnectionTypeE = internal unnamed_addr constant [6 x %"class.base::TimeDelta"] [%"class.base::TimeDelta" zeroinitializer, %"class.base::TimeDelta" zeroinitializer, %"class.base::TimeDelta" { i64 3600000 }, %"class.base::TimeDelta" { i64 1800000 }, %"class.base::TimeDelta" { i64 450000 }, %"class.base::TimeDelta" { i64 175000 }], align 16
@_ZN5blink12_GLOBAL__N_143kTypicalDownlinkMbpsEffectiveConnectionTypeE = internal unnamed_addr constant [6 x double] [double 0.000000e+00, double 0.000000e+00, double 4.000000e-02, double 0x3FB3333333333333, double 4.000000e-01, double 1.600000e+00], align 16
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEEEEPKcv = private unnamed_addr constant [246 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<scoped_refptr<base::SingleThreadTaskRunner>, std::__1::unique_ptr<blink::NetworkStateNotifier::ObserverList, std::__1::default_delete<blink::NetworkStateNotifier::ObserverList> > >]\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink20NetworkStateNotifier20NetworkStateObserverEEEPKcv = private unnamed_addr constant [99 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NetworkStateNotifier::NetworkStateObserver *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1

@_ZN5blink20NetworkStateNotifier14ScopedNotifierC1ERS0_ = hidden unnamed_addr alias void (%"class.blink::NetworkStateNotifier::ScopedNotifier"*, %"class.blink::NetworkStateNotifier"*), void (%"class.blink::NetworkStateNotifier::ScopedNotifier"*, %"class.blink::NetworkStateNotifier"*)* @_ZN5blink20NetworkStateNotifier14ScopedNotifierC2ERS0_
@_ZN5blink20NetworkStateNotifier14ScopedNotifierD1Ev = hidden unnamed_addr alias void (%"class.blink::NetworkStateNotifier::ScopedNotifier"*), void (%"class.blink::NetworkStateNotifier::ScopedNotifier"*)* @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev
@_ZN5blink20NetworkStateNotifier26NetworkStateObserverHandleC1EPS0_NS0_12ObserverTypeEPNS0_20NetworkStateObserverE13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"*, %"class.blink::NetworkStateNotifier"*, i32, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"*, %"class.blink::NetworkStateNotifier"*, i32, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink20NetworkStateNotifier26NetworkStateObserverHandleC2EPS0_NS0_12ObserverTypeEPNS0_20NetworkStateObserverE13scoped_refptrIN4base22SingleThreadTaskRunnerEE
@_ZN5blink20NetworkStateNotifier26NetworkStateObserverHandleD1Ev = hidden unnamed_addr alias void (%"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"*), void (%"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"*)* @_ZN5blink20NetworkStateNotifier26NetworkStateObserverHandleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink23GetNetworkStateNotifierEvE24s_network_state_notifier to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %43, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink23GetNetworkStateNotifierEvE24s_network_state_notifier) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 280) #12
  %8 = bitcast i8* %7 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %8, i1 zeroext false) #12
  %9 = getelementptr inbounds i8, i8* %7, i64 40
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 41
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %7, i64 42
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 44
  %13 = bitcast i8* %12 to i32*
  store i32 7, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 48
  %15 = bitcast i8* %14 to double*
  store double -1.000000e+00, double* %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 56
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %7, i64 64
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 80
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 96
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds i8, i8* %7, i64 112
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 116
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds i8, i8* %7, i64 128
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 136
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %7, i64 137
  store i8 1, i8* %25, align 1
  %26 = getelementptr inbounds i8, i8* %7, i64 138
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 140
  %28 = bitcast i8* %27 to i32*
  store i32 7, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %7, i64 144
  %30 = bitcast i8* %29 to double*
  store double -1.000000e+00, double* %30, align 8
  %31 = getelementptr inbounds i8, i8* %7, i64 152
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 160
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %7, i64 176
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds i8, i8* %7, i64 192
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds i8, i8* %7, i64 208
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds i8, i8* %7, i64 212
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds i8, i8* %7, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 20, i1 false) #12
  %39 = getelementptr inbounds i8, i8* %7, i64 248
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 20, i1 false) #12
  %40 = getelementptr inbounds i8, i8* %7, i64 272
  %41 = tail call i32 @_ZN4base7RandIntEii(i32 1, i32 20) #12
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 8
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink23GetNetworkStateNotifierEvE24s_network_state_notifier to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink23GetNetworkStateNotifierEvE24s_network_state_notifier) #12
  br label %43

43:                                               ; preds = %3, %6, %0
  %44 = load %"class.blink::NetworkStateNotifier"*, %"class.blink::NetworkStateNotifier"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink23GetNetworkStateNotifierEvE24s_network_state_notifier, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::NetworkStateNotifier"* %44
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier14ScopedNotifierC2ERS0_(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nocapture, %"class.blink::NetworkStateNotifier"* dereferenceable(280)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %1, %"class.blink::NetworkStateNotifier"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 1
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 2
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 4
  store i32 7, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 5
  store double -1.000000e+00, double* %8, align 8
  %9 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 6
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 11
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1, i64 0, i32 4
  %19 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1, i64 0, i32 1
  %20 = select i1 %17, %"struct.blink::NetworkStateNotifier::NetworkState"* %19, %"struct.blink::NetworkStateNotifier::NetworkState"* %18
  %21 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %20, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %21, i64 84, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 0
  %3 = load %"class.blink::NetworkStateNotifier"*, %"class.blink::NetworkStateNotifier"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %3, i64 0, i32 4
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %3, i64 0, i32 1
  %9 = select i1 %6, %"struct.blink::NetworkStateNotifier::NetworkState"* %8, %"struct.blink::NetworkStateNotifier::NetworkState"* %7
  %10 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %93

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 5
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 5
  %19 = load double, double* %18, align 8
  %20 = fcmp une double %17, %19
  br i1 %20, label %93, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %93

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !3
  %30 = icmp ne i8 %29, 0
  %31 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp ne i8 %32, 0
  %34 = xor i1 %30, %33
  %35 = xor i1 %30, true
  %36 = or i1 %34, %35
  br i1 %36, label %46, label %37

37:                                               ; preds = %27
  %38 = icmp eq i8 %32, 0
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, %42
  br i1 %45, label %47, label %93

46:                                               ; preds = %27
  br i1 %34, label %93, label %47

47:                                               ; preds = %40, %46
  %48 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !3
  %50 = icmp ne i8 %49, 0
  %51 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 8, !range !3
  %53 = icmp ne i8 %52, 0
  %54 = xor i1 %50, %53
  %55 = xor i1 %50, true
  %56 = or i1 %54, %55
  br i1 %56, label %66, label %57

57:                                               ; preds = %47
  %58 = icmp eq i8 %52, 0
  br i1 %58, label %59, label %60, !prof !4

59:                                               ; preds = %57
  tail call void @llvm.trap() #12
  unreachable

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %62
  br i1 %65, label %67, label %93

66:                                               ; preds = %47
  br i1 %54, label %93, label %67

67:                                               ; preds = %60, %66
  %68 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !3
  %70 = icmp ne i8 %69, 0
  %71 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !3
  %73 = icmp ne i8 %72, 0
  %74 = xor i1 %70, %73
  %75 = xor i1 %70, true
  %76 = or i1 %74, %75
  br i1 %76, label %86, label %77

77:                                               ; preds = %67
  %78 = icmp eq i8 %72, 0
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %77
  tail call void @llvm.trap() #12
  unreachable

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = load double, double* %81, align 8
  %83 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %84 = load double, double* %83, align 8
  %85 = fcmp une double %82, %84
  br i1 %85, label %93, label %87

86:                                               ; preds = %67
  br i1 %74, label %93, label %87

87:                                               ; preds = %80, %86
  %88 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 11
  %89 = load i8, i8* %88, align 8, !range !3
  %90 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 11
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %89, %91
  br i1 %92, label %99, label %93

93:                                               ; preds = %60, %40, %80, %87, %21, %1, %86, %66, %46, %15
  %94 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 2
  %95 = load i8, i8* %94, align 2, !range !3
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %3, i64 0, i32 5
  tail call void @_ZN5blink20NetworkStateNotifier15NotifyObserversERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEENS0_12ObserverTypeERKNS0_12NetworkStateE(%"class.blink::NetworkStateNotifier"* %3, %"class.WTF::HashMap"* dereferenceable(24) %98, i32 1, %"struct.blink::NetworkStateNotifier::NetworkState"* dereferenceable(88) %9)
  br label %99

99:                                               ; preds = %93, %87, %97
  %100 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %9, i64 0, i32 1
  %101 = load i8, i8* %100, align 1, !range !3
  %102 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1, !range !3
  %104 = icmp eq i8 %101, %103
  br i1 %104, label %112, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %0, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 8, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %105
  %110 = load %"class.blink::NetworkStateNotifier"*, %"class.blink::NetworkStateNotifier"** %2, align 8
  %111 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %110, i64 0, i32 6
  tail call void @_ZN5blink20NetworkStateNotifier15NotifyObserversERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEENS0_12ObserverTypeERKNS0_12NetworkStateE(%"class.blink::NetworkStateNotifier"* %110, %"class.WTF::HashMap"* dereferenceable(24) %111, i32 0, %"struct.blink::NetworkStateNotifier::NetworkState"* dereferenceable(88) %9)
  br label %112

112:                                              ; preds = %105, %99, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier15NotifyObserversERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEENS0_12ObserverTypeERKNS0_12NetworkStateE(%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"* dereferenceable(24), i32, %"struct.blink::NetworkStateNotifier::NetworkState"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"struct.blink::NetworkStateNotifier::NetworkState", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #12
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %20
  br i1 %15, label %55, label %22

22:                                               ; preds = %4
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"struct.WTF::KeyValuePair"* [ %29, %28 ], [ %17, %22 ]
  %26 = bitcast %"struct.WTF::KeyValuePair"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %21
  br i1 %30, label %55, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"struct.WTF::KeyValuePair"* [ %17, %22 ], [ %25, %24 ]
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, %21
  br i1 %33, label %55, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.base::Location"* %10 to i8*
  %36 = ptrtoint %"class.blink::NetworkStateNotifier"* %0 to i64
  %37 = ptrtoint %"class.WTF::HashMap"* %1 to i64
  %38 = bitcast %"class.base::OnceCallback"* %6 to i8*
  %39 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %7, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %3, i64 0, i32 0
  %41 = bitcast %"class.base::OnceCallback"* %5 to i8*
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::CrossThreadOnceFunction"* %11 to i64*
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %47 = bitcast %"class.base::OnceCallback"* %8 to i8*
  %48 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i8*
  %49 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %53 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0
  br label %56

55:                                               ; preds = %28, %96, %106, %103, %4, %31
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #12
  ret void

56:                                               ; preds = %34, %106
  %57 = phi %"struct.WTF::KeyValuePair"* [ %32, %34 ], [ %100, %106 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %58, align 8
  %60 = icmp eq %"class.base::SingleThreadTaskRunner"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 284) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %64 = atomicrmw add i32* %62, i32 1 monotonic, !noalias !5
  br label %66

65:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 284) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  br label %66

66:                                               ; preds = %65, %61
  %67 = ptrtoint %"class.base::SingleThreadTaskRunner"* %59 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %39)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %40, i64 88, i1 false) #12, !noalias !5
  %68 = call i8* @_Znwm(i64 168) #13, !noalias !8
  %69 = bitcast i8* %68 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %69, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS4_12ObserverListENSA_14default_deleteISC_EEEENS5_10RefPtrHashIS8_EENS5_10HashTraitsIS9_EENSI_ISF_EENS5_18PartitionAllocatorEEENS4_12ObserverTypeES9_RKNS4_12NetworkStateEEJNS5_28CrossThreadUnretainedWrapperIS4_EENSU_ISM_EESO_S9_SP_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS3_12ObserverListENS9_14default_deleteISB_EEEENS4_10RefPtrHashIS7_EENS4_10HashTraitsIS8_EENSH_ISE_EENS4_18PartitionAllocatorEEENS3_12ObserverTypeES8_RKNS3_12NetworkStateEEJNS4_28CrossThreadUnretainedWrapperIS3_EENST_ISL_EESN_S8_SO_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !8
  %70 = getelementptr inbounds i8, i8* %68, i64 32
  %71 = bitcast i8* %70 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"*, i32, %"class.base::SingleThreadTaskRunner"*, %"struct.blink::NetworkStateNotifier::NetworkState"*)* @_ZN5blink20NetworkStateNotifier27NotifyObserversOnTaskRunnerEPN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEENS0_12ObserverTypeES6_RKNS0_12NetworkStateE to i64), i64 0>, <2 x i64>* %71, align 8, !noalias !8
  %72 = getelementptr inbounds i8, i8* %68, i64 48
  %73 = bitcast i8* %72 to i64*
  store i64 %36, i64* %73, align 8, !noalias !8
  %74 = getelementptr inbounds i8, i8* %68, i64 56
  %75 = bitcast i8* %74 to i64*
  store i64 %37, i64* %75, align 8, !noalias !8
  %76 = getelementptr inbounds i8, i8* %68, i64 64
  %77 = bitcast i8* %76 to i32*
  store i32 %2, i32* %77, align 4, !noalias !8
  %78 = getelementptr inbounds i8, i8* %68, i64 72
  %79 = bitcast i8* %78 to i64*
  store i64 %67, i64* %79, align 8, !noalias !8
  %80 = getelementptr inbounds i8, i8* %68, i64 80
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* nonnull align 8 %39, i64 88, i1 false) #12, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12, !noalias !5
  %81 = ptrtoint i8* %68 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8, !noalias !13
  store i64 %81, i64* %44, align 8, !alias.scope !13
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8, !noalias !13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #12, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12, !noalias !5
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %82 = bitcast %"class.base::SingleThreadTaskRunner"* %59 to %"class.base::TaskRunner"*
  %83 = load i64, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %49, align 8
  store i64 %83, i64* %51, align 8, !alias.scope !16
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %50, align 8, !noalias !16
  %84 = bitcast %"class.base::SingleThreadTaskRunner"* %59 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %85 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %84, align 8
  %86 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %85, align 8
  %87 = call zeroext i1 %86(%"class.base::TaskRunner"* %82, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %8, i64 0) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #12
  br i1 %60, label %96, label %88

88:                                               ; preds = %66
  %89 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %59, i64 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe"* %94 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %95) #12
  br label %96

96:                                               ; preds = %66, %88, %93
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 1
  %98 = icmp eq %"struct.WTF::KeyValuePair"* %97, %21
  br i1 %98, label %55, label %99

99:                                               ; preds = %96, %103
  %100 = phi %"struct.WTF::KeyValuePair"* [ %104, %103 ], [ %97, %96 ]
  %101 = bitcast %"struct.WTF::KeyValuePair"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %106 [
    i64 -1, label %103
    i64 0, label %103
  ]

103:                                              ; preds = %99, %99
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 1
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %104, %21
  br i1 %105, label %55, label %99

106:                                              ; preds = %99
  %107 = icmp eq %"struct.WTF::KeyValuePair"* %100, %21
  br i1 %107, label %55, label %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier26NetworkStateObserverHandleC2EPS0_NS0_12ObserverTypeEPNS0_20NetworkStateObserverE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* nocapture, %"class.blink::NetworkStateNotifier"*, i32, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.base::SingleThreadTaskRunner"* %4 to i64
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %1, %"class.blink::NetworkStateNotifier"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 2
  store %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %3, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 3
  %11 = bitcast %class.scoped_refptr* %10 to i64*
  store i64 %6, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier26NetworkStateObserverHandleD2Ev(%"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 0
  %3 = load %"class.blink::NetworkStateNotifier"*, %"class.blink::NetworkStateNotifier"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 2
  %7 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle", %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %0, i64 0, i32 3, i32 0
  %9 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %8, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %8, align 8
  switch i32 %5, label %14 [
    i32 1, label %10
    i32 0, label %12
  ]

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %3, i64 0, i32 5
  tail call void @_ZN5blink20NetworkStateNotifier21RemoveObserverFromMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"* %3, %"class.WTF::HashMap"* dereferenceable(24) %11, %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %7, %"class.base::SingleThreadTaskRunner"* %9) #12
  br label %24

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %3, i64 0, i32 6
  tail call void @_ZN5blink20NetworkStateNotifier21RemoveObserverFromMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"* %3, %"class.WTF::HashMap"* dereferenceable(24) %13, %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %7, %"class.base::SingleThreadTaskRunner"* %9) #12
  br label %24

14:                                               ; preds = %1
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %9, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %9, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #12
  br label %24

24:                                               ; preds = %10, %12, %16, %21
  %25 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %8, align 8
  %26 = icmp eq %"class.base::SingleThreadTaskRunner"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %25, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %34) #12
  br label %35

35:                                               ; preds = %14, %24, %27, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier14RemoveObserverENS0_12ObserverTypeEPNS0_20NetworkStateObserverE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::NetworkStateNotifier"*, i32, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %9 [
    i32 1, label %5
    i32 0, label %7
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 5
  tail call void @_ZN5blink20NetworkStateNotifier21RemoveObserverFromMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"* %0, %"class.WTF::HashMap"* dereferenceable(24) %6, %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %2, %"class.base::SingleThreadTaskRunner"* %3)
  br label %19

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 6
  tail call void @_ZN5blink20NetworkStateNotifier21RemoveObserverFromMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"* %0, %"class.WTF::HashMap"* dereferenceable(24) %8, %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %2, %"class.base::SingleThreadTaskRunner"* %3)
  br label %19

9:                                                ; preds = %4
  %10 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %18) #12
  br label %19

19:                                               ; preds = %5, %7, %9, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier9SetOnLineEb(%"class.blink::NetworkStateNotifier"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %4 = zext i1 %1 to i8
  %5 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %13 = select i1 %10, %"struct.blink::NetworkStateNotifier::NetworkState"* %12, %"struct.blink::NetworkStateNotifier::NetworkState"* %11
  %14 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %13, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %14, i64 84, i1 false) #12
  %15 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #12
  %16 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 0
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 1
  store i8 %4, i8* %17, align 1
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier16SetWebConnectionENS_17WebConnectionTypeEd(%"class.blink::NetworkStateNotifier"*, i32, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %5 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %4, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %13 = select i1 %10, %"struct.blink::NetworkStateNotifier::NetworkState"* %12, %"struct.blink::NetworkStateNotifier::NetworkState"* %11
  %14 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %13, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %14, i64 84, i1 false) #12
  %15 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #12
  %16 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 2
  store i8 1, i8* %16, align 2
  %17 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 4
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 5
  store double %2, double* %18, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier17SetNetworkQualityENS_26WebEffectiveConnectionTypeEN4base9TimeDeltaES3_i(%"class.blink::NetworkStateNotifier"*, i32, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %3, i64* %10, align 8
  %11 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %8, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %8, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !3
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %19 = select i1 %16, %"struct.blink::NetworkStateNotifier::NetworkState"* %18, %"struct.blink::NetworkStateNotifier::NetworkState"* %17
  %20 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %19, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %20, i64 84, i1 false) #12
  %21 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #12
  %22 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 6
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 8
  %26 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %6) #12
  %27 = icmp sgt i64 %26, -1
  br i1 %27, label %28, label %34

28:                                               ; preds = %5
  %29 = load i8, i8* %23, align 8, !range !3
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = load i64, i64* %9, align 8
  store i64 %32, i64* %31, align 8
  br i1 %30, label %33, label %34

33:                                               ; preds = %28
  store i8 1, i8* %23, align 8
  br label %34

34:                                               ; preds = %33, %28, %5
  %35 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %7) #12
  %36 = icmp sgt i64 %35, -1
  br i1 %36, label %37, label %43

37:                                               ; preds = %34
  %38 = load i8, i8* %24, align 8, !range !3
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %41 = load i64, i64* %10, align 8
  store i64 %41, i64* %40, align 8
  br i1 %39, label %42, label %43

42:                                               ; preds = %37
  store i8 1, i8* %24, align 8
  br label %43

43:                                               ; preds = %42, %37, %34
  %44 = icmp sgt i32 %4, -1
  br i1 %44, label %45, label %49

45:                                               ; preds = %43
  %46 = sitofp i32 %4 to double
  %47 = fdiv double %46, 1.000000e+03
  store i8 1, i8* %25, align 8
  %48 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %47, double* %48, align 8
  br label %49

49:                                               ; preds = %45, %43
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #12
  ret void
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier28SetNetworkQualityWebHoldbackENS_26WebEffectiveConnectionTypeE(%"class.blink::NetworkStateNotifier"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %14 = select i1 %11, %"struct.blink::NetworkStateNotifier::NetworkState"* %13, %"struct.blink::NetworkStateNotifier::NetworkState"* %12
  %15 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %15, i64 84, i1 false) #12
  %16 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #12
  %17 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 13, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast i8* %17 to i64*
  %19 = zext i32 %1 to i64
  %20 = shl nuw i64 %19, 32
  %21 = or i64 %20, 1
  store i64 %21, i64* %18, align 4
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #12
  br label %22

22:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* @_ZN5blink20NetworkStateNotifier21AddConnectionObserverEPNS0_20NetworkStateObserverE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::NetworkStateNotifier"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 5
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %3, %7
  tail call void @_ZN5blink20NetworkStateNotifier16AddObserverToMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"* %0, %"class.WTF::HashMap"* dereferenceable(24) %5, %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %1, %"class.base::SingleThreadTaskRunner"* %2)
  %11 = ptrtoint %"class.blink::NetworkStateNotifier"* %0 to i64
  %12 = tail call noalias i8* @malloc(i64 32) #12
  %13 = bitcast i8* %12 to %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"*
  br i1 %6, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %10, %14
  %18 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %19 = bitcast i8* %12 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %12, i64 16
  %23 = bitcast i8* %22 to i64*
  store i64 %4, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %12, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 %18, i64* %25, align 8
  br i1 %6, label %34, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %33) #12
  br label %34

34:                                               ; preds = %17, %26, %31
  ret %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier16AddObserverToMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"* dereferenceable(24), %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.scoped_refptr, align 8
  %6 = alloca %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, align 8
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %3, %"class.base::SingleThreadTaskRunner"** %8, align 8
  store %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %2, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #12
  %10 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  store i8* null, i8** %7, align 8
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EES4_DnEENS_18HashTableAddResultISO_SE_EEOT0_OT1_(%"class.WTF::HashTable"* %11, %class.scoped_refptr* nonnull dereferenceable(8) %5, i8** nonnull dereferenceable(8) %7) #12
  %13 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %12, 0
  %14 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %12, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %4
  %18 = call i8* @_Znwm(i64 40) #13
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #12
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %20, i64* %24, align 8
  %25 = icmp eq %"struct.blink::NetworkStateNotifier::ObserverList"* %23, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  %30 = bitcast i32* %28 to i8*
  br i1 %29, label %37, label %31, !prof !19

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %23, i64 0, i32 2, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !4

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #12
  store i32* null, i32** %27, align 8
  br label %37

37:                                               ; preds = %36, %26
  %38 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %38, align 8
  %40 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %39, null
  %41 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %39 to i8*
  br i1 %40, label %48, label %42, !prof !19

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %23, i64 0, i32 1, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !4

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #12
  br label %48

48:                                               ; preds = %47, %37
  %49 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %23, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %17, %48, %4
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %52, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %52, i64 0, i32 1, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %52, i64 0, i32 1, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %69, label %59, !prof !4

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %53, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %60, align 8
  %62 = zext i32 %55 to i64
  %63 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %61, i64 %62
  %64 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %6 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %63 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load i32, i32* %54, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %54, align 4
  br label %70

69:                                               ; preds = %50
  call void @_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"* %53, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** nonnull dereferenceable(8) %6) #12
  br label %70

70:                                               ; preds = %59, %69
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #12
  %71 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %8, align 8
  %72 = icmp eq %"class.base::SingleThreadTaskRunner"* %71, null
  br i1 %72, label %81, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %71, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe"* %79 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %80) #12
  br label %81

81:                                               ; preds = %70, %73, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier18SetSaveDataEnabledEb(%"class.blink::NetworkStateNotifier"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %4 = zext i1 %1 to i8
  %5 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %13 = select i1 %10, %"struct.blink::NetworkStateNotifier::NetworkState"* %12, %"struct.blink::NetworkStateNotifier::NetworkState"* %11
  %14 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %13, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %14, i64 84, i1 false) #12
  %15 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #12
  %16 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1, i32 11
  store i8 %4, i8* %16, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* @_ZN5blink20NetworkStateNotifier17AddOnLineObserverEPNS0_20NetworkStateObserverE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::NetworkStateNotifier"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 6
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %3, %7
  tail call void @_ZN5blink20NetworkStateNotifier16AddObserverToMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"* %0, %"class.WTF::HashMap"* dereferenceable(24) %5, %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %1, %"class.base::SingleThreadTaskRunner"* %2)
  %11 = ptrtoint %"class.blink::NetworkStateNotifier"* %0 to i64
  %12 = tail call noalias i8* @malloc(i64 32) #12
  %13 = bitcast i8* %12 to %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"*
  br i1 %6, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %10, %14
  %18 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %19 = bitcast i8* %12 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %12, i64 16
  %23 = bitcast i8* %22 to i64*
  store i64 %4, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %12, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 %18, i64* %25, align 8
  br i1 %6, label %34, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %33) #12
  br label %34

34:                                               ; preds = %17, %26, %31
  ret %"class.blink::NetworkStateNotifier::NetworkStateObserverHandle"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier32SetNetworkConnectionInfoOverrideEbNS_17WebConnectionTypeEN4absl8optionalINS_26WebEffectiveConnectionTypeEEEld(%"class.blink::NetworkStateNotifier"*, i1 zeroext, i32, i64, i64, double) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %8 = trunc i64 %3 to i8
  %9 = zext i1 %1 to i8
  %10 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %10) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %7, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %7, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %18 = select i1 %15, %"struct.blink::NetworkStateNotifier::NetworkState"* %17, %"struct.blink::NetworkStateNotifier::NetworkState"* %16
  %19 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %18, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %19, i64 84, i1 false) #12
  %20 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #12
  store i8 1, i8* %13, align 8
  %21 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 0
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 1
  store i8 %9, i8* %22, align 1
  %23 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 2
  store i8 1, i8* %23, align 2
  %24 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 4
  store i32 %2, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 5
  store double %5, double* %25, align 8
  %26 = icmp eq i8 %8, 0
  %27 = icmp sgt i64 %4, 0
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %43

29:                                               ; preds = %6
  %30 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %4, i64 1000) #12
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 9223372036854775807, i64 %32, !prof !4
  %34 = load i64, i64* getelementptr inbounds ([6 x %"class.base::TimeDelta"], [6 x %"class.base::TimeDelta"]* @_ZN3net41kHttpRttEffectiveConnectionTypeThresholdsE, i64 0, i64 2, i32 0), align 16
  %35 = icmp slt i64 %33, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %29
  %37 = load i64, i64* getelementptr inbounds ([6 x %"class.base::TimeDelta"], [6 x %"class.base::TimeDelta"]* @_ZN3net41kHttpRttEffectiveConnectionTypeThresholdsE, i64 0, i64 3, i32 0), align 8
  %38 = icmp slt i64 %33, %37
  br i1 %38, label %39, label %46

39:                                               ; preds = %36
  %40 = load i64, i64* getelementptr inbounds ([6 x %"class.base::TimeDelta"], [6 x %"class.base::TimeDelta"]* @_ZN3net41kHttpRttEffectiveConnectionTypeThresholdsE, i64 0, i64 4, i32 0), align 16
  %41 = icmp slt i64 %33, %40
  %42 = select i1 %41, i32 5, i32 4
  br label %46

43:                                               ; preds = %6
  %44 = lshr i64 %3, 32
  %45 = trunc i64 %44 to i32
  br i1 %26, label %48, label %46

46:                                               ; preds = %36, %29, %43, %39
  %47 = phi i32 [ %45, %43 ], [ 3, %36 ], [ 2, %29 ], [ %42, %39 ]
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i32 [ %47, %46 ], [ 0, %43 ]
  %50 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 6
  store i32 %49, i32* %50, align 8
  %51 = icmp slt i64 %4, 0
  %52 = select i1 %51, i64 -9223372036854775808, i64 9223372036854775807
  %53 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %4, i64 1000) #12
  %54 = extractvalue { i64, i1 } %53, 1
  %55 = extractvalue { i64, i1 } %53, 0
  %56 = select i1 %54, i64 %52, i64 %55, !prof !4
  %57 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 8, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !3
  %59 = icmp eq i8 %58, 0
  %60 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %56, i64* %60, align 8
  br i1 %59, label %61, label %62

61:                                               ; preds = %48
  store i8 1, i8* %57, align 8
  br label %62

62:                                               ; preds = %48, %61
  %63 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %63, align 8
  %64 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %5, double* %64, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier26SetSaveDataEnabledOverrideEb(%"class.blink::NetworkStateNotifier"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %4 = zext i1 %1 to i8
  %5 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %3, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %13 = select i1 %10, %"struct.blink::NetworkStateNotifier::NetworkState"* %12, %"struct.blink::NetworkStateNotifier::NetworkState"* %11
  %14 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %13, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %14, i64 84, i1 false) #12
  %15 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #12
  store i8 1, i8* %8, align 8
  %16 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 0
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 2
  store i8 1, i8* %17, align 2
  %18 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4, i32 11
  store i8 %4, i8* %18, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier13ClearOverrideEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NetworkStateNotifier::ScopedNotifier", align 8
  %3 = bitcast %"class.blink::NetworkStateNotifier::ScopedNotifier"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 bitcast ({ %"class.blink::NetworkStateNotifier"*, <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], %union.anon.4 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.9 } } } }, [4 x i8] }> }* @__const._ZN5blink20NetworkStateNotifier13ClearOverrideEv.notifier to i8*), i64 96, i1 false)
  %4 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %2, i64 0, i32 0
  store %"class.blink::NetworkStateNotifier"* %0, %"class.blink::NetworkStateNotifier"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NetworkStateNotifier::ScopedNotifier", %"class.blink::NetworkStateNotifier::ScopedNotifier"* %2, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %11 = select i1 %8, %"struct.blink::NetworkStateNotifier::NetworkState"* %10, %"struct.blink::NetworkStateNotifier::NetworkState"* %9
  %12 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %11, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %12, i64 84, i1 false) #12
  %13 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %13) #12
  store i8 0, i8* %6, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %13) #12
  call void @_ZN5blink20NetworkStateNotifier14ScopedNotifierD2Ev(%"class.blink::NetworkStateNotifier::ScopedNotifier"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #12
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier27NotifyObserversOnTaskRunnerEPN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEENS0_12ObserverTypeES6_RKNS0_12NetworkStateE(%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"*, i32, %"class.base::SingleThreadTaskRunner"*, %"struct.blink::NetworkStateNotifier::NetworkState"* dereferenceable(88)) #0 align 2 {
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %5, %7
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #12
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0
  %13 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE4findENSK_17RefPtrValuePeekerE(%"class.WTF::HashTable"* %12, %"class.base::SingleThreadTaskRunner"* %3) #12
  %14 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 %19
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %14, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %23, align 8
  br label %25

25:                                               ; preds = %22, %10
  %26 = phi %"struct.blink::NetworkStateNotifier::ObserverList"* [ %24, %22 ], [ null, %10 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #12
  br i1 %6, label %35, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %34) #12
  br label %35

35:                                               ; preds = %25, %27, %32
  %36 = icmp eq %"struct.blink::NetworkStateNotifier::ObserverList"* %26, null
  br i1 %36, label %87, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %26, i64 0, i32 0
  store i8 1, i8* %38, align 8
  %39 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %26, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %26, i64 0, i32 1, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 4
  %45 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 6
  %47 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 8
  %48 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 9
  %49 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 10
  %50 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 11
  %51 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %4, i64 0, i32 1
  br label %56

52:                                               ; preds = %82, %37
  store i8 0, i8* %38, align 8
  %53 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %26, i64 0, i32 2, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %87, label %86

56:                                               ; preds = %43, %82
  %57 = phi i32 [ 0, %43 ], [ %83, %82 ]
  %58 = tail call dereferenceable(8) %"class.blink::NetworkStateNotifier::NetworkStateObserver"** @_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %57) #12
  %59 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %58, align 8
  %60 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %59, null
  br i1 %60, label %82, label %61

61:                                               ; preds = %56
  switch i32 %2, label %82 [
    i32 0, label %62
    i32 1, label %71
  ]

62:                                               ; preds = %61
  %63 = tail call dereferenceable(8) %"class.blink::NetworkStateNotifier::NetworkStateObserver"** @_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %57) #12
  %64 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %63, align 8
  %65 = load i8, i8* %51, align 1, !range !3
  %66 = icmp ne i8 %65, 0
  %67 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %64 to void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i1)***
  %68 = load void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i1)**, void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i1)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i1)*, void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i1)** %68, i64 1
  %70 = load void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i1)*, void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i1)** %69, align 8
  tail call void %70(%"class.blink::NetworkStateNotifier::NetworkStateObserver"* %64, i1 zeroext %66) #12
  br label %82

71:                                               ; preds = %61
  %72 = tail call dereferenceable(8) %"class.blink::NetworkStateNotifier::NetworkStateObserver"** @_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %57) #12
  %73 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %72, align 8
  %74 = load i32, i32* %44, align 4
  %75 = load double, double* %45, align 8
  %76 = load i32, i32* %46, align 8
  %77 = load i8, i8* %50, align 8, !range !3
  %78 = icmp ne i8 %77, 0
  %79 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %73 to void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i32, double, i32, %"class.absl::optional"*, %"class.absl::optional"*, %"class.absl::optional.0"*, i1)***
  %80 = load void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i32, double, i32, %"class.absl::optional"*, %"class.absl::optional"*, %"class.absl::optional.0"*, i1)**, void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i32, double, i32, %"class.absl::optional"*, %"class.absl::optional"*, %"class.absl::optional.0"*, i1)*** %79, align 8
  %81 = load void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i32, double, i32, %"class.absl::optional"*, %"class.absl::optional"*, %"class.absl::optional.0"*, i1)*, void (%"class.blink::NetworkStateNotifier::NetworkStateObserver"*, i32, double, i32, %"class.absl::optional"*, %"class.absl::optional"*, %"class.absl::optional.0"*, i1)** %80, align 8
  tail call void %81(%"class.blink::NetworkStateNotifier::NetworkStateObserver"* %73, i32 %74, double %75, i32 %76, %"class.absl::optional"* dereferenceable(16) %47, %"class.absl::optional"* dereferenceable(16) %48, %"class.absl::optional.0"* dereferenceable(16) %49, i1 zeroext %78) #12
  br label %82

82:                                               ; preds = %56, %61, %71, %62
  %83 = add nuw i32 %57, 1
  %84 = load i32, i32* %40, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %56, label %52

86:                                               ; preds = %52
  tail call void @_ZN5blink20NetworkStateNotifier22CollectZeroedObserversERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPS9_S6_(%"class.blink::NetworkStateNotifier"* %0, %"class.WTF::HashMap"* dereferenceable(24) %1, %"struct.blink::NetworkStateNotifier::ObserverList"* nonnull %26, %"class.base::SingleThreadTaskRunner"* %3)
  br label %96

87:                                               ; preds = %52, %35
  br i1 %6, label %96, label %88

88:                                               ; preds = %87
  %89 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe"* %94 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %95) #12
  br label %96

96:                                               ; preds = %86, %87, %88, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.blink::NetworkStateNotifier::ObserverList"* @_ZN5blink20NetworkStateNotifier23LockAndFindObserverListERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEES6_(%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"* dereferenceable(24), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #12
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE4findENSK_17RefPtrValuePeekerE(%"class.WTF::HashTable"* %5, %"class.base::SingleThreadTaskRunner"* %2) #12
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %7, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %16, align 8
  br label %18

18:                                               ; preds = %3, %15
  %19 = phi %"struct.blink::NetworkStateNotifier::ObserverList"* [ %17, %15 ], [ null, %3 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #12
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %28) #12
  br label %29

29:                                               ; preds = %18, %21, %26
  ret %"struct.blink::NetworkStateNotifier::ObserverList"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier22CollectZeroedObserversERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPS9_S6_(%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"* dereferenceable(24), %"struct.blink::NetworkStateNotifier::ObserverList"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"struct.std::__1::__less.63", align 1
  %9 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %2, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %11, i64 %14
  %16 = getelementptr inbounds %"struct.std::__1::__less.63", %"struct.std::__1::__less.63"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %11, i32* %15, %"struct.std::__1::__less.63"* nonnull dereferenceable(1) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  %17 = load i32, i32* %12, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %25 = bitcast %"class.logging::CheckError"* %7 to i8*
  %26 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %43

27:                                               ; preds = %73, %4
  %28 = phi i32 [ 0, %4 ], [ %77, %73 ]
  %29 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  store i32 0, i32* %12, align 4
  br label %35

35:                                               ; preds = %34, %32
  %36 = bitcast %"class.WTF::Vector.13"* %9 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.WTF::Vector.13"* %9 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %29, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %37) #12
  br label %39

39:                                               ; preds = %27, %35
  %40 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %2, i64 0, i32 1, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %79, label %114

43:                                               ; preds = %19, %73
  %44 = phi i32 [ 0, %19 ], [ %76, %73 ]
  %45 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.13"* %9, i32 %44) #12
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 %46, %44
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %48 = load i32, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %49 = icmp ugt i32 %48, %47
  br i1 %49, label %50, label %51

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  store i8* null, i8** %21, align 8
  br label %58

51:                                               ; preds = %43
  %52 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #12
  %53 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %48) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %52, i8* %53) #12
  %54 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  store i8* %54, i8** %21, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %6) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %58

58:                                               ; preds = %56, %51, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %59 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %26, align 8
  %60 = zext i32 %47 to i64
  %61 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %59, i64 %60
  %62 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %61, i64 1
  %63 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %61, null
  br i1 %63, label %73, label %64, !prof !4

64:                                               ; preds = %58
  %65 = load i32, i32* %22, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %59, i64 %66
  %68 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %61 to i8*
  %69 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %62 to i8*
  %70 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %67 to i64
  %71 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %62 to i64
  %72 = sub i64 %70, %71
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* nonnull align 8 %69, i64 %72, i1 false) #12
  br label %73

73:                                               ; preds = %58, %64
  %74 = load i32, i32* %22, align 4
  %75 = add i32 %74, -1
  store i32 %75, i32* %22, align 4
  %76 = add nuw nsw i32 %44, 1
  %77 = load i32, i32* %12, align 4
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %43, label %27

79:                                               ; preds = %39
  %80 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %80) #12
  %81 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0
  %82 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE4findENSK_17RefPtrValuePeekerE(%"class.WTF::HashTable"* %81, %"class.base::SingleThreadTaskRunner"* %3) #12
  %83 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %82, 0
  %84 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %85 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %84, align 8
  %86 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 %88
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %89, %83
  br i1 %90, label %113, label %91

91:                                               ; preds = %79
  call void @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE12DeleteBucketERKSE_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %83) #12
  %92 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = add i32 %93, 1
  %95 = and i32 %94, 2147483647
  %96 = and i32 %93, -2147483648
  %97 = or i32 %95, %96
  store i32 %97, i32* %92, align 8
  %98 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, -1
  store i32 %100, i32* %98, align 4
  %101 = mul i32 %100, 6
  %102 = load i32, i32* %86, align 8
  %103 = icmp ult i32 %101, %102
  %104 = icmp ugt i32 %102, 8
  %105 = and i1 %103, %104
  br i1 %105, label %106, label %113

106:                                              ; preds = %91
  %107 = lshr i32 %102, 1
  %108 = zext i32 %107 to i64
  %109 = shl nuw nsw i64 %108, 4
  %110 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %109, i8* getelementptr inbounds ([246 x i8], [246 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %110, i8 0, i64 %109, i1 false) #12
  %111 = bitcast i8* %110 to %"struct.WTF::KeyValuePair"*
  %112 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable"* %81, %"struct.WTF::KeyValuePair"* %111, i32 %107, %"struct.WTF::KeyValuePair"* null) #12
  br label %113

113:                                              ; preds = %79, %91, %106
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %80) #12
  br label %114

114:                                              ; preds = %113, %39
  %115 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %115, label %124, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %118 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw sub i32* %118, i32 1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %124

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %117, i64 -2
  %123 = bitcast %"class.base::RefCountedThreadSafe"* %122 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %123) #12
  br label %124

124:                                              ; preds = %114, %116, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20NetworkStateNotifier21RemoveObserverFromMapERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPNS0_20NetworkStateObserverES6_(%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"* dereferenceable(24), %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = ptrtoint %"class.base::SingleThreadTaskRunner"* %3 to i64
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %4, %8
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #12
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0
  %14 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE4findENSK_17RefPtrValuePeekerE(%"class.WTF::HashTable"* %13, %"class.base::SingleThreadTaskRunner"* %3) #12
  %15 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %1, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %20
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %15, %21
  br i1 %22, label %26, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %24, align 8
  br label %26

26:                                               ; preds = %23, %11
  %27 = phi %"struct.blink::NetworkStateNotifier::ObserverList"* [ %25, %23 ], [ null, %11 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #12
  br i1 %7, label %36, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe"* %34 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %35) #12
  br label %36

36:                                               ; preds = %26, %28, %33
  %37 = icmp eq %"struct.blink::NetworkStateNotifier::ObserverList"* %27, null
  br i1 %37, label %91, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %27, i64 0, i32 1
  %40 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #12
  store i32 -1431655766, i32* %5, align 4
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %39, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %27, i64 0, i32 1, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %42, i64 %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %38, %52
  %49 = phi %"class.blink::NetworkStateNotifier::NetworkStateObserver"** [ %53, %52 ], [ %42, %38 ]
  %50 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %49, align 8
  %51 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"* %50, %2
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %49, i64 1
  %54 = icmp ult %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %53, %46
  br i1 %54, label %48, label %55

55:                                               ; preds = %52, %38
  store i32 -1, i32* %5, align 4
  br label %79

56:                                               ; preds = %48
  %57 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %49 to i64
  %58 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %42 to i64
  %59 = sub i64 %57, %58
  %60 = lshr exact i64 %59, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %5, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %79, label %63

63:                                               ; preds = %56
  %64 = tail call dereferenceable(8) %"class.blink::NetworkStateNotifier::NetworkStateObserver"** @_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %61) #12
  store %"class.blink::NetworkStateNotifier::NetworkStateObserver"* null, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %64, align 8
  %65 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %27, i64 0, i32 2
  %66 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %27, i64 0, i32 2, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %78, label %71, !prof !4

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %65, i64 0, i32 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = zext i32 %67 to i64
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  store i32 %61, i32* %75, align 4
  %76 = load i32, i32* %66, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %66, align 4
  br label %79

78:                                               ; preds = %63
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.13"* %65, i32* nonnull dereferenceable(4) %5) #12
  br label %79

79:                                               ; preds = %78, %71, %55, %56
  %80 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %27, i64 0, i32 0
  %81 = load i8, i8* %80, align 8, !range !3
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  call void @_ZN5blink20NetworkStateNotifier22CollectZeroedObserversERN3WTF7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS0_12ObserverListENS7_14default_deleteIS9_EEEENS1_10RefPtrHashIS5_EENS1_10HashTraitsIS6_EENSF_ISC_EENS1_18PartitionAllocatorEEEPS9_S6_(%"class.blink::NetworkStateNotifier"* %0, %"class.WTF::HashMap"* dereferenceable(24) %1, %"struct.blink::NetworkStateNotifier::ObserverList"* nonnull %27, %"class.base::SingleThreadTaskRunner"* %3)
  br label %88

88:                                               ; preds = %79, %87, %83
  %89 = phi i64 [ %6, %83 ], [ 0, %87 ], [ %6, %79 ]
  %90 = inttoptr i64 %89 to %"class.base::SingleThreadTaskRunner"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #12
  br label %91

91:                                               ; preds = %36, %88
  %92 = phi %"class.base::SingleThreadTaskRunner"* [ %3, %36 ], [ %90, %88 ]
  %93 = icmp eq %"class.base::SingleThreadTaskRunner"* %92, null
  br i1 %93, label %102, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %92, i64 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw sub i32* %96, i32 1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %95, i64 -2
  %101 = bitcast %"class.base::RefCountedThreadSafe"* %100 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %101) #12
  br label %102

102:                                              ; preds = %91, %94, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink20NetworkStateNotifier31EffectiveConnectionTypeToStringENS_26WebEffectiveConnectionTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN5blink34kWebEffectiveConnectionTypeMappingE, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i64 @strlen(i8* nonnull %5) #14
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %5, i64 %10) #12
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink20NetworkStateNotifier19GetRandomMultiplierERKN3WTF6StringE(%"class.blink::NetworkStateNotifier"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = lshr i32 %8, 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %6 ]
  %15 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 7
  %16 = load i8, i8* %15, align 8
  %17 = zext i8 %16 to i32
  %18 = add i32 %14, %17
  %19 = urem i32 %18, 21
  %20 = uitofp i32 %19 to double
  %21 = fmul double %20, 1.000000e-02
  %22 = fadd double %21, 9.000000e-01
  br label %23

23:                                               ; preds = %2, %13
  %24 = phi double [ %22, %13 ], [ 1.000000e+00, %2 ]
  ret double %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20NetworkStateNotifier8RoundRttERKN3WTF6StringERKN4absl8optionalIN4base9TimeDeltaEEE(%"class.blink::NetworkStateNotifier"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.absl::optional"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %57, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 -6148914691236517206, i64* %12, align 8
  %13 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i32 [ %23, %22 ], [ %20, %17 ]
  %26 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 7
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = add i32 %25, %28
  %30 = urem i32 %29, 21
  %31 = uitofp i32 %30 to double
  %32 = fmul double %31, 1.000000e-02
  %33 = fadd double %32, 9.000000e-01
  br label %34

34:                                               ; preds = %10, %24
  %35 = phi double [ %33, %24 ], [ 1.000000e+00, %10 ]
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = sitofp i64 %37 to double
  %39 = fmul double %35, %38
  %40 = fcmp oge double %39, 0xC3E0000000000000
  %41 = fcmp ole double %39, 0x43DFFFFFFFFFFFFF
  %42 = and i1 %41, %40
  %43 = fptosi double %39 to i64
  %44 = icmp sgt i64 %37, -1
  %45 = select i1 %44, i64 9223372036854775807, i64 -9223372036854775808
  %46 = select i1 %42, i64 %43, i64 %45
  store i64 %46, i64* %5, align 8
  %47 = icmp sgt i64 %46, 3000000
  %48 = bitcast i64* %5 to %"class.base::TimeDelta"*
  %49 = select i1 %47, %"class.base::TimeDelta"* @_ZZNK5blink20NetworkStateNotifier8RoundRttERKN3WTF6StringERKN4absl8optionalIN4base9TimeDeltaEEEE7kMaxRtt, %"class.base::TimeDelta"* %48
  %50 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %52 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  %53 = call i64 @_ZNK4base9TimeDelta15RoundToMultipleES0_(%"class.base::TimeDelta"* nonnull %4, i64 50000) #12
  %54 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 %53, i64* %54, align 8
  %55 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %6) #12
  %56 = trunc i64 %55 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %57

57:                                               ; preds = %3, %34
  %58 = phi i32 [ %56, %34 ], [ 0, %3 ]
  ret i32 %58
}

declare i64 @_ZNK4base9TimeDelta15RoundToMultipleES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink20NetworkStateNotifier9RoundMbpsERKN3WTF6StringERKN4absl8optionalIdEE(%"class.blink::NetworkStateNotifier"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.absl::optional.0"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = load double, double* %7, align 8
  %9 = fmul double %8, 1.000000e+03
  %10 = select i1 %6, double 1.000000e+04, double %9
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = lshr i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %12) #12
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i32 [ %20, %19 ], [ %17, %14 ]
  %23 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 7
  %24 = load i8, i8* %23, align 8
  %25 = zext i8 %24 to i32
  %26 = add i32 %22, %25
  %27 = urem i32 %26, 21
  %28 = uitofp i32 %27 to double
  %29 = fmul double %28, 1.000000e-02
  %30 = fadd double %29, 9.000000e-01
  br label %31

31:                                               ; preds = %3, %21
  %32 = phi double [ %30, %21 ], [ 1.000000e+00, %3 ]
  %33 = fmul double %10, %32
  %34 = fcmp ogt double %33, 1.000000e+04
  %35 = select i1 %34, double 1.000000e+04, double %33
  %36 = fdiv double %35, 5.000000e+01
  %37 = tail call double @llvm.round.f64(double %36)
  %38 = fmul double %37, 5.000000e+01
  %39 = fdiv double %38, 1.000000e+03
  ret double %39
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20NetworkStateNotifier27GetWebHoldbackEffectiveTypeEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #12
  %3 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %8 = select i1 %5, %"struct.blink::NetworkStateNotifier::NetworkState"* %7, %"struct.blink::NetworkStateNotifier::NetworkState"* %6
  %9 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %8, i64 0, i32 13
  %10 = bitcast %"class.absl::optional.5"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #12
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK5blink20NetworkStateNotifier21GetWebHoldbackHttpRttEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #12
  %3 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %8 = select i1 %5, %"struct.blink::NetworkStateNotifier::NetworkState"* %7, %"struct.blink::NetworkStateNotifier::NetworkState"* %6
  %9 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %8, i64 0, i32 13
  %10 = bitcast %"class.absl::optional.5"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #12
  %12 = trunc i64 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = ashr i64 %11, 32
  %16 = getelementptr inbounds [6 x %"class.base::TimeDelta"], [6 x %"class.base::TimeDelta"]* @_ZN5blink12_GLOBAL__N_138kTypicalHttpRttEffectiveConnectionTypeE, i64 0, i64 %15, i32 0
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %1, %14
  %19 = phi i8 [ 1, %14 ], [ 0, %1 ]
  %20 = phi i64 [ %17, %14 ], [ undef, %1 ]
  %21 = insertvalue { i8, i64 } undef, i8 %19, 0
  %22 = insertvalue { i8, i64 } %21, i64 %20, 1
  ret { i8, i64 } %22
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, double } @_ZNK5blink20NetworkStateNotifier36GetWebHoldbackDownlinkThroughputMbpsEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #12
  %3 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %8 = select i1 %5, %"struct.blink::NetworkStateNotifier::NetworkState"* %7, %"struct.blink::NetworkStateNotifier::NetworkState"* %6
  %9 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %8, i64 0, i32 13
  %10 = bitcast %"class.absl::optional.5"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #12
  %12 = trunc i64 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = ashr i64 %11, 32
  %16 = getelementptr inbounds [6 x double], [6 x double]* @_ZN5blink12_GLOBAL__N_143kTypicalDownlinkMbpsEffectiveConnectionTypeE, i64 0, i64 %15
  %17 = load double, double* %16, align 8
  br label %18

18:                                               ; preds = %1, %14
  %19 = phi i8 [ 1, %14 ], [ 0, %1 ]
  %20 = phi double [ %17, %14 ], [ undef, %1 ]
  %21 = insertvalue { i8, double } undef, i8 %19, 0
  %22 = insertvalue { i8, double } %21, double %20, 1
  ret { i8, double } %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20NetworkStateNotifier25GetMetricsWithWebHoldbackEPNS_17WebConnectionTypeEPdPNS_26WebEffectiveConnectionTypeEPN4absl8optionalIN4base9TimeDeltaEEEPNS7_IdEEPb(%"class.blink::NetworkStateNotifier"*, i32* nocapture, double* nocapture, i32* nocapture, %"class.absl::optional"* nocapture, %"class.absl::optional.0"* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %8) #12
  %9 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %0, i64 0, i32 1
  %14 = select i1 %11, %"struct.blink::NetworkStateNotifier::NetworkState"* %13, %"struct.blink::NetworkStateNotifier::NetworkState"* %12
  %15 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %1, align 4
  %17 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 5
  %18 = bitcast double* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast double* %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = trunc i64 %23 to i8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %7
  %27 = lshr i64 %23, 32
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %3, align 4
  %29 = ashr i64 %23, 32
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds [6 x %"class.base::TimeDelta"], [6 x %"class.base::TimeDelta"]* @_ZN5blink12_GLOBAL__N_138kTypicalHttpRttEffectiveConnectionTypeE, i64 0, i64 %29, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  br i1 %32, label %36, label %37

36:                                               ; preds = %26
  store i8 1, i8* %30, align 8
  br label %37

37:                                               ; preds = %36, %26
  %38 = getelementptr inbounds [6 x double], [6 x double]* @_ZN5blink12_GLOBAL__N_143kTypicalDownlinkMbpsEffectiveConnectionTypeE, i64 0, i64 %29
  %39 = bitcast double* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %41, align 8
  %42 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %union.anon.4* %42 to i64*
  store i64 %40, i64* %43, align 8
  br label %51

44:                                               ; preds = %7
  %45 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %3, align 4
  %47 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false)
  br label %51

51:                                               ; preds = %44, %37
  %52 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %14, i64 0, i32 11
  %53 = load i8, i8* %52, align 8, !range !3
  store i8 %53, i8* %6, align 1
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %8) #12
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS4_12ObserverListENSA_14default_deleteISC_EEEENS5_10RefPtrHashIS8_EENS5_10HashTraitsIS9_EENSI_ISF_EENS5_18PartitionAllocatorEEENS4_12ObserverTypeES9_RKNS4_12NetworkStateEEJNS5_28CrossThreadUnretainedWrapperIS4_EENSU_ISM_EESO_S9_SP_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.WTF::HashMap"**
  %8 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i32*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 4
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"struct.blink::NetworkStateNotifier::NetworkState"*
  %13 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::NetworkStateNotifier"*
  %20 = and i64 %14, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %14, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to void (%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"*, i32, %"class.base::SingleThreadTaskRunner"*, %"struct.blink::NetworkStateNotifier::NetworkState"*)**
  %28 = load void (%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"*, i32, %"class.base::SingleThreadTaskRunner"*, %"struct.blink::NetworkStateNotifier::NetworkState"*)*, void (%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"*, i32, %"class.base::SingleThreadTaskRunner"*, %"struct.blink::NetworkStateNotifier::NetworkState"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %14 to void (%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"*, i32, %"class.base::SingleThreadTaskRunner"*, %"struct.blink::NetworkStateNotifier::NetworkState"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi void (%"class.blink::NetworkStateNotifier"*, %"class.WTF::HashMap"*, i32, %"class.base::SingleThreadTaskRunner"*, %"struct.blink::NetworkStateNotifier::NetworkState"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = load i32, i32* %10, align 4
  %34 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 3
  %35 = bitcast void (%"class.base::internal::BindStateBase"*)** %34 to %"class.base::SingleThreadTaskRunner"**
  %36 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %35, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %35, align 8
  tail call void %32(%"class.blink::NetworkStateNotifier"* %19, %"class.WTF::HashMap"* %8, i32 %33, %"class.base::SingleThreadTaskRunner"* %36, %"struct.blink::NetworkStateNotifier::NetworkState"* dereferenceable(88) %12) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS3_12ObserverListENS9_14default_deleteISB_EEEENS4_10RefPtrHashIS7_EENS4_10HashTraitsIS8_EENSH_ISE_EENS4_18PartitionAllocatorEEENS3_12ObserverTypeES8_RKNS3_12NetworkStateEEJNS4_28CrossThreadUnretainedWrapperIS3_EENST_ISL_EESN_S8_SO_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #12
  br label %16

16:                                               ; preds = %3, %8, %13
  %17 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::NetworkStateNotifier::NetworkStateObserver"** @_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %24, i64 %25
  ret %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EES4_DnEENS_18HashTableAddResultISO_SE_EEOT0_OT1_(%"class.WTF::HashTable"*, %class.scoped_refptr* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %class.scoped_refptr* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %40, align 8
  %42 = icmp eq %"class.base::SingleThreadTaskRunner"* %41, null
  %43 = inttoptr i64 %17 to %"class.base::SingleThreadTaskRunner"*
  br i1 %42, label %88, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.base::SingleThreadTaskRunner"* [ %41, %44 ], [ %76, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %74, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %69, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %73, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %71, %65 ]
  %64 = icmp eq %"class.base::SingleThreadTaskRunner"* %59, %43
  br i1 %64, label %101, label %65

65:                                               ; preds = %58
  %66 = bitcast %"struct.WTF::KeyValuePair"* %60 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, inttoptr (i64 -1 to i8*)
  %69 = select i1 %68, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %70 = icmp eq i64 %63, 0
  %71 = select i1 %70, i64 %57, i64 %63
  %72 = add i64 %71, %62
  %73 = and i64 %72, %15
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %75, align 8
  %77 = icmp eq %"class.base::SingleThreadTaskRunner"* %76, null
  br i1 %77, label %78, label %58

78:                                               ; preds = %65
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %69, null
  br i1 %79, label %88, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #12
  %82 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  br label %88

88:                                               ; preds = %10, %78, %80
  %89 = phi %"struct.WTF::KeyValuePair"* [ %69, %80 ], [ %74, %78 ], [ %39, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsI13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS2_INSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS8_14default_deleteISC_EEEEEEEENS_10RefPtrHashIS5_EENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS6_SF_EES6_DnEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %89, %class.scoped_refptr* dereferenceable(8) %1, i8** dereferenceable(8) %2)
  %90 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, %92
  %96 = shl i32 %95, 1
  %97 = load i32, i32* %12, align 8
  %98 = icmp ult i32 %96, %97
  br i1 %98, label %101, label %99

99:                                               ; preds = %88
  %100 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %101

101:                                              ; preds = %58, %88, %99
  %102 = phi i8 [ 1, %88 ], [ 1, %99 ], [ 0, %58 ]
  %103 = phi %"struct.WTF::KeyValuePair"* [ %89, %88 ], [ %100, %99 ], [ %60, %58 ]
  %104 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %103, 0
  %105 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %104, i8 %102, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %105
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([246 x i8], [246 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #12
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsI13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS2_INSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS8_14default_deleteISC_EEEEEEEENS_10RefPtrHashIS5_EENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS6_SF_EES6_DnEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %class.scoped_refptr* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %5 = bitcast %class.scoped_refptr* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %8, align 8
  store i64 %6, i64* %7, align 8
  %10 = icmp eq %"class.base::SingleThreadTaskRunner"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %9, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %18) #12
  br label %19

19:                                               ; preds = %3, %11, %16
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 0, i64* %23, align 8
  %24 = icmp eq %"struct.blink::NetworkStateNotifier::ObserverList"* %22, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  %29 = bitcast i32* %27 to i8*
  br i1 %28, label %36, label %30, !prof !19

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %22, i64 0, i32 2, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !4

34:                                               ; preds = %30
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %30
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %29) #12
  store i32* null, i32** %26, align 8
  br label %36

36:                                               ; preds = %35, %25
  %37 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %37, align 8
  %39 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %38, null
  %40 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %38 to i8*
  br i1 %39, label %47, label %41, !prof !19

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %22, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !4

45:                                               ; preds = %41
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %41
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %40) #12
  br label %47

47:                                               ; preds = %46, %36
  %48 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %22, i64 0, i32 0
  tail call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %47, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %98

24:                                               ; preds = %118
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %119, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %122, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %120, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %94, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %92, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %89, %39
  %42 = phi i64 [ 0, %39 ], [ %90, %89 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %89, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.base::SingleThreadTaskRunner"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %49, align 8
  store %"struct.blink::NetworkStateNotifier::ObserverList"* null, %"struct.blink::NetworkStateNotifier::ObserverList"** %49, align 8
  %51 = icmp eq %"struct.blink::NetworkStateNotifier::ObserverList"* %50, null
  br i1 %51, label %78, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %50, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  %56 = bitcast i32* %54 to i8*
  br i1 %55, label %63, label %57, !prof !19

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %50, i64 0, i32 2, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !4

61:                                               ; preds = %57
  store i32 0, i32* %58, align 4
  br label %62

62:                                               ; preds = %61, %57
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #12
  store i32* null, i32** %53, align 8
  br label %63

63:                                               ; preds = %62, %52
  %64 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %64, align 8
  %66 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %65, null
  %67 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %65 to i8*
  br i1 %66, label %74, label %68, !prof !19

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %50, i64 0, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !4

72:                                               ; preds = %68
  store i32 0, i32* %69, align 4
  br label %73

73:                                               ; preds = %72, %68
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #12
  br label %74

74:                                               ; preds = %73, %63
  %75 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %50, i64 0, i32 0
  call void @_ZdlPv(i8* %75) #13
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0
  %77 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %76, align 8
  br label %78

78:                                               ; preds = %74, %47
  %79 = phi %"class.base::SingleThreadTaskRunner"* [ %77, %74 ], [ %48, %47 ]
  %80 = icmp eq %"class.base::SingleThreadTaskRunner"* %79, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %79, i64 0, i32 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw sub i32* %83, i32 1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %82, i64 -2
  %88 = bitcast %"class.base::RefCountedThreadSafe"* %87 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %88) #12
  br label %89

89:                                               ; preds = %86, %81, %78, %41
  %90 = add nuw nsw i64 %42, 1
  %91 = icmp eq i64 %90, %40
  br i1 %91, label %92, label %41

92:                                               ; preds = %89, %37
  %93 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %94

94:                                               ; preds = %28, %92
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, -2147483648
  store i32 %97, i32* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair"* %33

98:                                               ; preds = %21, %118
  %99 = phi i64 [ %119, %118 ], [ %23, %21 ]
  %100 = phi i32 [ %120, %118 ], [ %13, %21 ]
  %101 = phi %"struct.WTF::KeyValuePair"* [ %121, %118 ], [ %22, %21 ]
  %102 = phi %"struct.WTF::KeyValuePair"* [ %122, %118 ], [ null, %21 ]
  %103 = phi i32 [ %123, %118 ], [ 0, %21 ]
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 %104
  %106 = bitcast %"struct.WTF::KeyValuePair"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  switch i64 %107, label %108 [
    i64 -1, label %118
    i64 0, label %118
  ]

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 0, i32 0
  %110 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %class.scoped_refptr* dereferenceable(8) %109) #12
  %111 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %110, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSH_ISD_EEEELb0EE4MoveEOSE_RSE_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %105, %"struct.WTF::KeyValuePair"* dereferenceable(16) %111) #12
  %112 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 %104
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair"* %111, %"struct.WTF::KeyValuePair"* %102
  %116 = load i32, i32* %12, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair"* %112 to i64
  br label %118

118:                                              ; preds = %98, %98, %108
  %119 = phi i64 [ %99, %98 ], [ %117, %108 ], [ %99, %98 ]
  %120 = phi i32 [ %100, %98 ], [ %116, %108 ], [ %100, %98 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %101, %98 ], [ %112, %108 ], [ %101, %98 ]
  %122 = phi %"struct.WTF::KeyValuePair"* [ %102, %98 ], [ %115, %108 ], [ %102, %98 ]
  %123 = add i32 %103, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %24, label %98
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %class.scoped_refptr* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %34, align 8
  %36 = icmp eq %"class.base::SingleThreadTaskRunner"* %35, null
  %37 = inttoptr i64 %10 to %"class.base::SingleThreadTaskRunner"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %69
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %78 to i64
  %54 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %83

61:                                               ; preds = %69, %38
  %62 = phi %"class.base::SingleThreadTaskRunner"* [ %35, %38 ], [ %81, %69 ]
  %63 = phi i64 [ 0, %38 ], [ %73, %69 ]
  %64 = phi i64 [ %33, %38 ], [ %79, %69 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %32, %38 ], [ %78, %69 ]
  %66 = phi i64 [ %31, %38 ], [ %77, %69 ]
  %67 = phi i64 [ 0, %38 ], [ %75, %69 ]
  %68 = icmp eq %"class.base::SingleThreadTaskRunner"* %62, %37
  br i1 %68, label %83, label %69

69:                                               ; preds = %61
  %70 = bitcast %"struct.WTF::KeyValuePair"* %65 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, inttoptr (i64 -1 to i8*)
  %73 = select i1 %72, i64 %64, i64 %63
  %74 = icmp eq i64 %67, 0
  %75 = select i1 %74, i64 %51, i64 %67
  %76 = add i64 %75, %66
  %77 = and i64 %76, %8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 0, i32 0
  %81 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %80, align 8
  %82 = icmp eq %"class.base::SingleThreadTaskRunner"* %81, null
  br i1 %82, label %52, label %61

83:                                               ; preds = %61, %55
  %84 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %85 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %86 = inttoptr i64 %84 to %"struct.WTF::KeyValuePair"*
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %86, 0
  %88 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %87, i8 %85, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSH_ISD_EEEELb0EE4MoveEOSE_RSE_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %3, align 8
  store %"struct.blink::NetworkStateNotifier::ObserverList"* null, %"struct.blink::NetworkStateNotifier::ObserverList"** %3, align 8
  %5 = icmp eq %"struct.blink::NetworkStateNotifier::ObserverList"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  %10 = bitcast i32* %8 to i8*
  br i1 %9, label %17, label %11, !prof !19

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %4, i64 0, i32 2, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !4

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #12
  store i32* null, i32** %7, align 8
  br label %17

17:                                               ; preds = %16, %6
  %18 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %18, align 8
  %20 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %19, null
  %21 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %19 to i8*
  br i1 %20, label %28, label %22, !prof !19

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26, !prof !4

26:                                               ; preds = %22
  store i32 0, i32* %23, align 4
  br label %27

27:                                               ; preds = %26, %22
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #12
  br label %28

28:                                               ; preds = %27, %17
  %29 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %2
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0
  %32 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %31, align 8
  %33 = icmp eq %"class.base::SingleThreadTaskRunner"* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %32, i64 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe"* %40 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %41) #12
  br label %42

42:                                               ; preds = %30, %34, %39
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  %44 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store i64 %45, i64* %46, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %43, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  store %"struct.blink::NetworkStateNotifier::ObserverList"* null, %"struct.blink::NetworkStateNotifier::ObserverList"** %49, align 8
  %52 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 %51, i64* %52, align 8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink20NetworkStateNotifier20NetworkStateObserverELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %6, align 8
  %8 = icmp ugt %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %7, i64 %10
  %12 = icmp ugt %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink20NetworkStateNotifier20NetworkStateObserverEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink20NetworkStateNotifier20NetworkStateObserverEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::NetworkStateNotifier::NetworkStateObserver"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !19

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::NetworkStateNotifier::NetworkStateObserver"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %1 to i64
  %56 = ptrtoint %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !19

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink20NetworkStateNotifier20NetworkStateObserverEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink20NetworkStateNotifier20NetworkStateObserverEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !19

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::NetworkStateNotifier::NetworkStateObserver"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::NetworkStateNotifier::NetworkStateObserver"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::NetworkStateNotifier::NetworkStateObserver"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::NetworkStateNotifier::NetworkStateObserver"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::NetworkStateNotifier::NetworkStateObserver"*, %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %100, i64 %103
  %105 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink20NetworkStateNotifier20NetworkStateObserverEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.13"*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !19

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.13"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !19

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !19

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.13"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE4findENSK_17RefPtrValuePeekerE(%"class.WTF::HashTable"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %34, align 8
  %36 = icmp eq %"class.base::SingleThreadTaskRunner"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0
  %55 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %54, align 8
  %56 = icmp eq %"class.base::SingleThreadTaskRunner"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %63, align 8
  %65 = icmp eq %"class.base::SingleThreadTaskRunner"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.63"* dereferenceable(1)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableI13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_12KeyValuePairIS4_NSt3__110unique_ptrIN5blink20NetworkStateNotifier12ObserverListENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS_18PartitionAllocatorEE12DeleteBucketERKSE_(%"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::NetworkStateNotifier::ObserverList"*, %"struct.blink::NetworkStateNotifier::ObserverList"** %2, align 8
  store %"struct.blink::NetworkStateNotifier::ObserverList"* null, %"struct.blink::NetworkStateNotifier::ObserverList"** %2, align 8
  %4 = icmp eq %"struct.blink::NetworkStateNotifier::ObserverList"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  %9 = bitcast i32* %7 to i8*
  br i1 %8, label %16, label %10, !prof !19

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !4

14:                                               ; preds = %10
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %14, %10
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #12
  store i32* null, i32** %6, align 8
  br label %16

16:                                               ; preds = %15, %5
  %17 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, %"class.blink::NetworkStateNotifier::NetworkStateObserver"*** %17, align 8
  %19 = icmp eq %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %18, null
  %20 = bitcast %"class.blink::NetworkStateNotifier::NetworkStateObserver"** %18 to i8*
  br i1 %19, label %27, label %21, !prof !19

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !4

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #12
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::ObserverList", %"struct.blink::NetworkStateNotifier::ObserverList"* %3, i64 0, i32 0
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %1
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  %31 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %30, align 8
  %32 = icmp eq %"class.base::SingleThreadTaskRunner"* %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %31, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %39 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %40) #12
  br label %41

41:                                               ; preds = %29, %33, %38
  %42 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %42, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTF19CrossThreadBindOnceIMN5blink20NetworkStateNotifierEFvPNS_7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS2_12ObserverListENS8_14default_deleteISA_EEEENS_10RefPtrHashIS6_EENS_10HashTraitsIS7_EENSG_ISD_EENS_18PartitionAllocatorEEENS2_12ObserverTypeES7_RKNS2_12NetworkStateEEJNS_28CrossThreadUnretainedWrapperIS2_EENSS_ISK_EERSM_RS7_SP_EEEDaOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF19CrossThreadBindOnceIMN5blink20NetworkStateNotifierEFvPNS_7HashMapI13scoped_refptrIN4base22SingleThreadTaskRunnerEENSt3__110unique_ptrINS2_12ObserverListENS8_14default_deleteISA_EEEENS_10RefPtrHashIS6_EENS_10HashTraitsIS7_EENSG_ISD_EENS_18PartitionAllocatorEEENS2_12ObserverTypeES7_RKNS2_12NetworkStateEEJNS_28CrossThreadUnretainedWrapperIS2_EENSS_ISK_EERSM_RS7_SP_EEEDaOT_DpOT0_"}
!8 = !{!9, !11, !6}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS4_12ObserverListENSA_14default_deleteISC_EEEENS5_10RefPtrHashIS8_EENS5_10HashTraitsIS9_EENSI_ISF_EENS5_18PartitionAllocatorEEENS4_12ObserverTypeES9_RKNS4_12NetworkStateEEJNS5_28CrossThreadUnretainedWrapperIS4_EENSU_ISM_EESO_S9_SP_EEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS4_12ObserverListENSA_14default_deleteISC_EEEENS5_10RefPtrHashIS8_EENS5_10HashTraitsIS9_EENSI_ISF_EENS5_18PartitionAllocatorEEENS4_12ObserverTypeES9_RKNS4_12NetworkStateEEJNS5_28CrossThreadUnretainedWrapperIS4_EENSU_ISM_EESO_S9_SP_EEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS2_12ObserverListENS8_14default_deleteISA_EEEENS3_10RefPtrHashIS6_EENS3_10HashTraitsIS7_EENSG_ISD_EENS3_18PartitionAllocatorEEENS2_12ObserverTypeES7_RKNS2_12NetworkStateEEJNS3_28CrossThreadUnretainedWrapperIS2_EENSS_ISK_EESM_S7_SN_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSY_DpOSZ_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN5blink20NetworkStateNotifierEFvPN3WTF7HashMapI13scoped_refptrINS_22SingleThreadTaskRunnerEENSt3__110unique_ptrINS2_12ObserverListENS8_14default_deleteISA_EEEENS3_10RefPtrHashIS6_EENS3_10HashTraitsIS7_EENSG_ISD_EENS3_18PartitionAllocatorEEENS2_12ObserverTypeES7_RKNS2_12NetworkStateEEJNS3_28CrossThreadUnretainedWrapperIS2_EENSS_ISK_EESM_S7_SN_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSY_DpOSZ_"}
!13 = !{!14, !6}
!14 = distinct !{!14, !15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!19 = !{!"branch_weights", i32 2000, i32 1}
