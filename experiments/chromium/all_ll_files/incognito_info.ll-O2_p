; ModuleID = '../../extensions/common/manifest_handlers/incognito_info.cc'
source_filename = "../../extensions/common/manifest_handlers/incognito_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::IncognitoInfo" = type <{ %"struct.extensions::Extension::ManifestData", i32, [4 x i8] }>
%"struct.extensions::Extension::ManifestData" = type { i32 (...)** }
%"class.extensions::IncognitoHandler" = type { %"class.extensions::ManifestHandler" }
%"class.extensions::ManifestHandler" = type { i32 (...)** }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.37", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.19" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.24" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.90 }
%union.anon.90 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.extensions::api::incognito::ManifestKeys" = type { i32 }
%"class.extensions::ManifestPermission" = type opaque

@_ZTVN10extensions13IncognitoInfoE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.extensions::IncognitoInfo"*)* @_ZN10extensions13IncognitoInfoD2Ev to i8*), i8* bitcast (void (%"struct.extensions::IncognitoInfo"*)* @_ZN10extensions13IncognitoInfoD0Ev to i8*)] }, align 8
@_ZN10extensions3api9incognito12ManifestKeys10kIncognitoE = external constant [10 x i8], align 1
@_ZTVN10extensions16IncognitoHandlerE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::IncognitoHandler"*)* @_ZN10extensions16IncognitoHandlerD2Ev to i8*), i8* bitcast (void (%"class.extensions::IncognitoHandler"*)* @_ZN10extensions16IncognitoHandlerD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::IncognitoHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.87"*)* @_ZN10extensions16IncognitoHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)* @_ZNK10extensions15ManifestHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE to i8*), i8* bitcast (i1 (%"class.extensions::IncognitoHandler"*, i32)* @_ZNK10extensions16IncognitoHandler18AlwaysParseForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, i32)* @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (void ()* @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*)* @_ZN10extensions15ManifestHandler16CreatePermissionEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*)* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE to i8*), i8* bitcast ({ i64, i8** } (%"class.extensions::IncognitoHandler"*)* @_ZNK10extensions16IncognitoHandler4KeysEv to i8*)] }, align 8
@_ZZNK10extensions16IncognitoHandler4KeysEvE5kKeys = internal constant [1 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api9incognito12ManifestKeys10kIncognitoE, i32 0, i32 0)], align 8

@_ZN10extensions13IncognitoInfoC1ENS_3api9incognito13IncognitoModeE = hidden unnamed_addr alias void (%"struct.extensions::IncognitoInfo"*, i32), void (%"struct.extensions::IncognitoInfo"*, i32)* @_ZN10extensions13IncognitoInfoC2ENS_3api9incognito13IncognitoModeE
@_ZN10extensions13IncognitoInfoD1Ev = hidden unnamed_addr alias void (%"struct.extensions::IncognitoInfo"*), void (%"struct.extensions::IncognitoInfo"*)* @_ZN10extensions13IncognitoInfoD2Ev
@_ZN10extensions16IncognitoHandlerC1Ev = hidden unnamed_addr alias void (%"class.extensions::IncognitoHandler"*), void (%"class.extensions::IncognitoHandler"*)* @_ZN10extensions16IncognitoHandlerC2Ev
@_ZN10extensions16IncognitoHandlerD1Ev = hidden unnamed_addr alias void (%"class.extensions::IncognitoHandler"*), void (%"class.extensions::IncognitoHandler"*)* @_ZN10extensions16IncognitoHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions13IncognitoInfoC2ENS_3api9incognito13IncognitoModeE(%"struct.extensions::IncognitoInfo"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::IncognitoInfo", %"struct.extensions::IncognitoInfo"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions13IncognitoInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.extensions::IncognitoInfo", %"struct.extensions::IncognitoInfo"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions13IncognitoInfoD2Ev(%"struct.extensions::IncognitoInfo"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13IncognitoInfoD0Ev(%"struct.extensions::IncognitoInfo"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"struct.extensions::IncognitoInfo"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions13IncognitoInfo11IsSplitModeEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 9, i8* %5, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api9incognito12ManifestKeys10kIncognitoE, i64 0, i64 0), i64 9, i1 false) #9
  %6 = getelementptr inbounds i8, i8* %3, i64 9
  store i8 0, i8* %6, align 1
  %7 = call %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #9
  %8 = load i8, i8* %5, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  %14 = icmp eq %"struct.extensions::Extension::ManifestData"* %7, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.extensions::Extension::ManifestData", %"struct.extensions::Extension::ManifestData"* %7, i64 1
  %17 = bitcast %"struct.extensions::Extension::ManifestData"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br label %20

20:                                               ; preds = %13, %15
  %21 = phi i1 [ %19, %15 ], [ false, %13 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions13IncognitoInfo18IsIncognitoAllowedEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 9, i8* %5, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api9incognito12ManifestKeys10kIncognitoE, i64 0, i64 0), i64 9, i1 false) #9
  %6 = getelementptr inbounds i8, i8* %3, i64 9
  store i8 0, i8* %6, align 1
  %7 = call %"struct.extensions::Extension::ManifestData"* @_ZNK10extensions9Extension15GetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Extension"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #9
  %8 = load i8, i8* %5, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  %14 = icmp eq %"struct.extensions::Extension::ManifestData"* %7, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.extensions::Extension::ManifestData", %"struct.extensions::Extension::ManifestData"* %7, i64 1
  %17 = bitcast %"struct.extensions::Extension::ManifestData"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 3
  br label %20

20:                                               ; preds = %13, %15
  %21 = phi i1 [ %19, %15 ], [ true, %13 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16IncognitoHandlerC2Ev(%"class.extensions::IncognitoHandler"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::IncognitoHandler", %"class.extensions::IncognitoHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"* %2) #9
  %3 = getelementptr inbounds %"class.extensions::IncognitoHandler", %"class.extensions::IncognitoHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN10extensions16IncognitoHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16IncognitoHandlerD2Ev(%"class.extensions::IncognitoHandler"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::IncognitoHandler", %"class.extensions::IncognitoHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16IncognitoHandlerD0Ev(%"class.extensions::IncognitoHandler"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::IncognitoHandler", %"class.extensions::IncognitoHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #9
  %3 = bitcast %"class.extensions::IncognitoHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions16IncognitoHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.extensions::IncognitoHandler"* nocapture readnone, %"class.extensions::Extension"*, %"class.std::__1::basic_string.87"*) unnamed_addr #2 align 2 {
  %4 = alloca %"struct.extensions::api::incognito::ManifestKeys", align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"struct.extensions::api::incognito::ManifestKeys"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.extensions::api::incognito::ManifestKeys", %"struct.extensions::api::incognito::ManifestKeys"* %4, i64 0, i32 0
  store i32 -1431655766, i32* %7, align 4
  call void @_ZN10extensions3api9incognito12ManifestKeysC1Ev(%"struct.extensions::api::incognito::ManifestKeys"* nonnull %4) #9
  %8 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 16, i32 0, i32 0, i32 0
  %9 = load %"class.extensions::Manifest"*, %"class.extensions::Manifest"** %8, align 8
  %10 = getelementptr inbounds %"class.extensions::Manifest", %"class.extensions::Manifest"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %10, align 8
  %12 = call zeroext i1 @_ZN10extensions3api9incognito12ManifestKeys19ParseFromDictionaryERKN4base15DictionaryValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::DictionaryValue"* dereferenceable(32) %11, %"struct.extensions::api::incognito::ManifestKeys"* nonnull %4, %"class.std::__1::basic_string.87"* %2) #9
  br i1 %12, label %13, label %38

13:                                               ; preds = %3
  %14 = load i32, i32* %7, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = call zeroext i1 @_ZNK10extensions9Extension13is_hosted_appEv(%"class.extensions::Extension"* %1) #9
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = call zeroext i1 @_ZNK10extensions9Extension22is_legacy_packaged_appEv(%"class.extensions::Extension"* %1) #9
  %20 = select i1 %19, i32 1, i32 2
  br label %21

21:                                               ; preds = %16, %18, %13
  %22 = phi i32 [ %14, %13 ], [ 1, %16 ], [ %20, %18 ]
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #9
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 9, i8* %25, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api9incognito12ManifestKeys10kIncognitoE, i64 0, i64 0), i64 9, i1 false) #9
  %26 = getelementptr inbounds i8, i8* %23, i64 9
  store i8 0, i8* %26, align 1
  %27 = call i8* @_Znwm(i64 16) #8
  %28 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions13IncognitoInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 %22, i32* %30, align 8
  %31 = bitcast i8* %27 to %"struct.extensions::Extension::ManifestData"*
  call void @_ZN10extensions9Extension15SetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS0_12ManifestDataENS1_14default_deleteISB_EEEE(%"class.extensions::Extension"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"struct.extensions::Extension::ManifestData"* nonnull %31) #9
  %32 = load i8, i8* %25, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #8
  br label %37

37:                                               ; preds = %21, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #9
  br label %38

38:                                               ; preds = %3, %37
  %39 = phi i1 [ true, %37 ], [ false, %3 ]
  call void @_ZN10extensions3api9incognito12ManifestKeysD1Ev(%"struct.extensions::api::incognito::ManifestKeys"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #9
  ret i1 %39
}

declare void @_ZN10extensions3api9incognito12ManifestKeysC1Ev(%"struct.extensions::api::incognito::ManifestKeys"*) unnamed_addr #5

declare zeroext i1 @_ZN10extensions3api9incognito12ManifestKeys19ParseFromDictionaryERKN4base15DictionaryValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::DictionaryValue"* dereferenceable(32), %"struct.extensions::api::incognito::ManifestKeys"*, %"class.std::__1::basic_string.87"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK10extensions9Extension13is_hosted_appEv(%"class.extensions::Extension"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK10extensions9Extension22is_legacy_packaged_appEv(%"class.extensions::Extension"*) local_unnamed_addr #5

declare void @_ZN10extensions9Extension15SetManifestDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS0_12ManifestDataENS1_14default_deleteISB_EEEE(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.extensions::Extension::ManifestData"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions3api9incognito12ManifestKeysD1Ev(%"struct.extensions::api::incognito::ManifestKeys"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10extensions16IncognitoHandler18AlwaysParseForTypeENS_8Manifest4TypeE(%"class.extensions::IncognitoHandler"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i8** } @_ZNK10extensions16IncognitoHandler4KeysEv(%"class.extensions::IncognitoHandler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret { i64, i8** } { i64 1, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @_ZZNK10extensions16IncognitoHandler4KeysEvE5kKeys, i64 0, i64 0) }
}

declare zeroext i1 @_ZNK10extensions15ManifestHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE(%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*) unnamed_addr #5

declare zeroext i1 @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE(%"class.extensions::ManifestHandler"*, i32) unnamed_addr #5

declare void @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv() unnamed_addr

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler16CreatePermissionEv(%"class.extensions::ManifestHandler"*) unnamed_addr #5

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE(%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
