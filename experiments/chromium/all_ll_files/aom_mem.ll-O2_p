; ModuleID = '../../third_party/libaom/source/libaom/aom_mem/aom_mem.c'
source_filename = "../../third_party/libaom/source/libaom/aom_mem/aom_mem.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @aom_memalign(i64, i64) local_unnamed_addr #0 {
  %3 = add i64 %0, 7
  %4 = add i64 %3, %1
  %5 = icmp ugt i64 %4, 8589934592
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = tail call noalias i8* @malloc(i64 %4) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = ptrtoint i8* %10 to i64
  %12 = add i64 %0, -1
  %13 = add i64 %12, %11
  %14 = sub i64 0, %0
  %15 = and i64 %13, %14
  %16 = inttoptr i64 %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = ptrtoint i8* %7 to i64
  store i64 %19, i64* %18, align 8
  br label %20

20:                                               ; preds = %9, %6, %2
  %21 = phi i8* [ null, %2 ], [ %16, %9 ], [ null, %6 ]
  ret i8* %21
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @aom_malloc(i64) local_unnamed_addr #0 {
  %2 = add i64 %0, 23
  %3 = icmp ugt i64 %2, 8589934592
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = tail call noalias i8* @malloc(i64 %2) #6
  %6 = icmp eq i8* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = ptrtoint i8* %8 to i64
  %10 = add i64 %9, 15
  %11 = and i64 %10, -16
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 -8
  %14 = bitcast i8* %13 to i64*
  %15 = ptrtoint i8* %5 to i64
  store i64 %15, i64* %14, align 8
  br label %16

16:                                               ; preds = %1, %4, %7
  %17 = phi i8* [ null, %1 ], [ %12, %7 ], [ null, %4 ]
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @aom_calloc(i64, i64) local_unnamed_addr #2 {
  %3 = mul i64 %1, %0
  %4 = add i64 %3, 23
  %5 = icmp ugt i64 %4, 8589934592
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = tail call noalias i8* @malloc(i64 %4) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = ptrtoint i8* %10 to i64
  %12 = add i64 %11, 15
  %13 = and i64 %12, -16
  %14 = inttoptr i64 %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 -8
  %16 = bitcast i8* %15 to i64*
  %17 = ptrtoint i8* %7 to i64
  store i64 %17, i64* %16, align 8
  %18 = icmp eq i64 %13, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 %3, i1 false)
  br label %20

20:                                               ; preds = %6, %2, %9, %19
  %21 = phi i8* [ null, %9 ], [ %14, %19 ], [ null, %2 ], [ null, %6 ]
  ret i8* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_free(i8* readonly) local_unnamed_addr #2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 -8
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @free(i8* %6) #6
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @aom_memset16(i8* returned, i32, i64) local_unnamed_addr #5 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %92, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %0 to i16*
  %7 = trunc i32 %1 to i16
  %8 = icmp ult i64 %2, 16
  br i1 %8, label %83, label %9

9:                                                ; preds = %5
  %10 = and i64 %2, -16
  %11 = getelementptr i16, i16* %6, i64 %10
  %12 = insertelement <8 x i16> undef, i16 %7, i32 0
  %13 = shufflevector <8 x i16> %12, <8 x i16> undef, <8 x i32> zeroinitializer
  %14 = insertelement <8 x i16> undef, i16 %7, i32 0
  %15 = shufflevector <8 x i16> %14, <8 x i16> undef, <8 x i32> zeroinitializer
  %16 = add i64 %10, -16
  %17 = lshr exact i64 %16, 4
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 7
  %20 = icmp ult i64 %16, 112
  br i1 %20, label %68, label %21

21:                                               ; preds = %9
  %22 = sub nsw i64 %18, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %65, %23 ]
  %25 = phi i64 [ %22, %21 ], [ %66, %23 ]
  %26 = getelementptr i16, i16* %6, i64 %24
  %27 = bitcast i16* %26 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %27, align 2
  %28 = getelementptr i16, i16* %26, i64 8
  %29 = bitcast i16* %28 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %29, align 2
  %30 = or i64 %24, 16
  %31 = getelementptr i16, i16* %6, i64 %30
  %32 = bitcast i16* %31 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %32, align 2
  %33 = getelementptr i16, i16* %31, i64 8
  %34 = bitcast i16* %33 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %34, align 2
  %35 = or i64 %24, 32
  %36 = getelementptr i16, i16* %6, i64 %35
  %37 = bitcast i16* %36 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %37, align 2
  %38 = getelementptr i16, i16* %36, i64 8
  %39 = bitcast i16* %38 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %39, align 2
  %40 = or i64 %24, 48
  %41 = getelementptr i16, i16* %6, i64 %40
  %42 = bitcast i16* %41 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %42, align 2
  %43 = getelementptr i16, i16* %41, i64 8
  %44 = bitcast i16* %43 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %44, align 2
  %45 = or i64 %24, 64
  %46 = getelementptr i16, i16* %6, i64 %45
  %47 = bitcast i16* %46 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %47, align 2
  %48 = getelementptr i16, i16* %46, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %49, align 2
  %50 = or i64 %24, 80
  %51 = getelementptr i16, i16* %6, i64 %50
  %52 = bitcast i16* %51 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %52, align 2
  %53 = getelementptr i16, i16* %51, i64 8
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %54, align 2
  %55 = or i64 %24, 96
  %56 = getelementptr i16, i16* %6, i64 %55
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %57, align 2
  %58 = getelementptr i16, i16* %56, i64 8
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %59, align 2
  %60 = or i64 %24, 112
  %61 = getelementptr i16, i16* %6, i64 %60
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %62, align 2
  %63 = getelementptr i16, i16* %61, i64 8
  %64 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %64, align 2
  %65 = add i64 %24, 128
  %66 = add i64 %25, -8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %23, !llvm.loop !2

68:                                               ; preds = %23, %9
  %69 = phi i64 [ 0, %9 ], [ %65, %23 ]
  %70 = icmp eq i64 %19, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %68, %71
  %72 = phi i64 [ %78, %71 ], [ %69, %68 ]
  %73 = phi i64 [ %79, %71 ], [ %19, %68 ]
  %74 = getelementptr i16, i16* %6, i64 %72
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %13, <8 x i16>* %75, align 2
  %76 = getelementptr i16, i16* %74, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %15, <8 x i16>* %77, align 2
  %78 = add i64 %72, 16
  %79 = add i64 %73, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %71, !llvm.loop !4

81:                                               ; preds = %71, %68
  %82 = icmp eq i64 %10, %2
  br i1 %82, label %92, label %83

83:                                               ; preds = %81, %5
  %84 = phi i16* [ %6, %5 ], [ %11, %81 ]
  %85 = phi i64 [ 0, %5 ], [ %10, %81 ]
  br label %86

86:                                               ; preds = %83, %86
  %87 = phi i16* [ %89, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %90, %86 ], [ %85, %83 ]
  %89 = getelementptr inbounds i16, i16* %87, i64 1
  store i16 %7, i16* %87, align 2
  %90 = add nuw i64 %88, 1
  %91 = icmp eq i64 %90, %2
  br i1 %91, label %92, label %86, !llvm.loop !6

92:                                               ; preds = %86, %81, %3
  ret i8* %0
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
