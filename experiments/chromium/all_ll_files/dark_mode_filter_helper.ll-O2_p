; ModuleID = '../../third_party/blink/renderer/platform/graphics/dark_mode_filter_helper.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/dark_mode_filter_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" = type { [8 x i8] }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.85", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.43, %class.sk_sp.44, %class.sk_sp.45, %class.sk_sp.46, i32, float, float, i32, %union.anon.53, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.9, i32, %"class.absl::optional.19", %"class.std::__1::vector.24", %"class.std::__1::vector.31", %class.sk_sp.38, %class.sk_sp.2, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.2, %class.sk_sp.9, %"class.gfx::Rect", i32, %class.sk_sp.14, %class.sk_sp.18, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.14 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3, i32, i32 }
%class.sk_sp.3 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.15" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.18 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.9 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.10", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i32*, i32*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i32* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { float*, float*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float* }
%class.sk_sp.38 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.39", [7 x i8] }>
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i8 }
%class.sk_sp.2 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.43 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.44 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.45 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.46 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.47, i32, %"class.absl::optional.48", i8, i32 }
%class.sk_sp.47 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { %struct.SkRect }
%union.anon.53 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.55, %"class.std::__1::unique_ptr.56" }
%class.scoped_refptr.55 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.59", %struct.SkRect }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.64, [384 x i64], %class.sk_sp.65, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.66", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.72" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.64 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.65 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.106", %"class.std::__1::unique_ptr.111" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %class.sk_sp.44 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.121, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.312" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.120" }
%"class.base::RefCountedThreadSafe.120" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.121 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.122", %"class.WTF::Vector.127" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { i8*, i32, i32 }
%"class.WTF::Vector.127" = type { %"class.WTF::VectorBuffer.128" }
%"class.WTF::VectorBuffer.128" = type { %"class.WTF::VectorBufferBase.129" }
%"class.WTF::VectorBufferBase.129" = type { %"class.std::__1::unique_ptr.130"*, i32, i32 }
%"class.std::__1::unique_ptr.130" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.133", i32, [4 x i8], %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.305", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.39", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.251", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i64 }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::Worklist.180"* }
%"class.blink::Worklist.180" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.229", %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { i64 }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { float }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.254", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.263" }
%"class.WTF::Vector.263" = type { %"class.WTF::VectorBuffer.264" }
%"class.WTF::VectorBuffer.264" = type { %"class.WTF::VectorBufferBase.265" }
%"class.WTF::VectorBufferBase.265" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.180"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.341", i64 }
%"class.std::__1::vector.341" = type { %"class.std::__1::__vector_base.342" }
%"class.std::__1::__vector_base.342" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.343" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.315" }
%"class.std::__1::__hash_table.315" = type <{ %"class.std::__1::unique_ptr.316", %"class.std::__1::__compressed_pair.326", %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.333", [4 x i8] }>
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318", %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::__hash_node_base.319"** }
%"struct.std::__1::__hash_node_base.319" = type { %"struct.std::__1::__hash_node_base.319"* }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.std::__1::__bucket_list_deallocator.321" }
%"class.std::__1::__bucket_list_deallocator.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"struct.std::__1::__hash_node_base.319" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.blink::DarkModeImageCache::DarkModeKey" = type { %struct.SkIRect }
%class.SkBitmap = type { %class.sk_sp.375, %class.SkPixmap, %class.sk_sp.376 }
%class.sk_sp.375 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.376 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::CommandLine" = type { %"class.std::__1::vector.348", %"class.std::__1::map", i64 }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.352 }
%union.anon.352 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.370", [4 x i8] }>
%"struct.std::__1::atomic.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i32 }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::TickClock" = type { i32 (...)** }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

@_ZZN5blink12_GLOBAL__N_136IsRasterSideDarkModeForImagesEnabledEvE7enabled = internal unnamed_addr global i8 0, align 1
@_ZGVZN5blink12_GLOBAL__N_136IsRasterSideDarkModeForImagesEnabledEvE7enabled = internal global i64 0, align 8
@_ZN5blink8switches34kEnableRasterSideDarkModeForImagesE = external constant [0 x i8], align 1
@_ZZN5blink12_GLOBAL__N_124ApplyToImageOnMainThreadEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK7SkIRectSA_E19s_scoped_us_counter = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_124ApplyToImageOnMainThreadEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK7SkIRectSA_E19s_scoped_us_counter = internal global i64 0, align 8
@.str = private unnamed_addr constant [40 x i8] c"Blink.DarkMode.ApplyToImageOnMainThread\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20DarkModeFilterHelper20ApplyToColorIfNeededEPNS_15GraphicsContextEjNS_14DarkModeFilter11ElementRoleE(%"class.blink::GraphicsContext"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 12
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"* %0) #10
  %9 = tail call i32 @_ZN5blink14DarkModeFilter19InvertColorIfNeededEjNS0_11ElementRoleE(%"class.blink::DarkModeFilter"* %8, i32 %1, i32 %2) #10
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ %1, %3 ]
  ret i32 %11
}

declare %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #1

declare i32 @_ZN5blink14DarkModeFilter19InvertColorIfNeededEjNS0_11ElementRoleE(%"class.blink::DarkModeFilter"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DarkModeFilterHelper20ApplyToImageIfNeededEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK6SkRectSA_(%"class.blink::GraphicsContext"*, %"class.blink::Image"*, %"class.cc::PaintFlags"* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.blink::DarkModeImageCache::DarkModeKey"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.blink::DarkModeImageCache::DarkModeKey"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.blink::DarkModeImageCache::DarkModeKey"*
  %12 = alloca %class.SkBitmap, align 8
  %13 = alloca %class.SkPixmap, align 8
  %14 = alloca %class.sk_sp.44, align 8
  %15 = alloca %class.sk_sp.44, align 8
  %16 = alloca <2 x i64>, align 16
  %17 = bitcast <2 x i64>* %16 to %struct.SkIRect*
  %18 = alloca { i64, i64 }, align 8
  %19 = alloca %class.sk_sp.44, align 8
  %20 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %0, i64 0, i32 12
  %21 = load i8, i8* %20, align 2, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %298, label %23

23:                                               ; preds = %5
  %24 = bitcast <2 x i64>* %16 to { i64, i64 }*
  %25 = bitcast { i64, i64 }* %18 to %struct.SkIRect*
  %26 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i64 0, i32 1
  %28 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = tail call float @llvm.floor.f32(float %29) #10
  %31 = fcmp olt float %30, 0x41DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0x41DFFFFFE0000000
  %33 = fcmp ogt float %32, 0xC1DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0xC1DFFFFFE0000000
  %35 = fptosi float %34 to i32
  %36 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = tail call float @llvm.floor.f32(float %37) #10
  %39 = fcmp olt float %38, 0x41DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0x41DFFFFFE0000000
  %41 = fcmp ogt float %40, 0xC1DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0xC1DFFFFFE0000000
  %43 = fptosi float %42 to i32
  %44 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %45 = load float, float* %44, align 4
  %46 = tail call float @llvm.ceil.f32(float %45) #10
  %47 = fcmp olt float %46, 0x41DFFFFFE0000000
  %48 = select i1 %47, float %46, float 0x41DFFFFFE0000000
  %49 = fcmp ogt float %48, 0xC1DFFFFFE0000000
  %50 = select i1 %49, float %48, float 0xC1DFFFFFE0000000
  %51 = fptosi float %50 to i32
  %52 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %53 = load float, float* %52, align 4
  %54 = tail call float @llvm.ceil.f32(float %53) #10
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = fptosi float %58 to i32
  %60 = zext i32 %43 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %35 to i64
  %63 = or i64 %61, %62
  %64 = zext i32 %59 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %51 to i64
  %67 = or i64 %65, %66
  %68 = getelementptr inbounds <2 x i64>, <2 x i64>* %16, i64 0, i64 0
  store i64 %63, i64* %68, align 16
  store i64 %67, i64* %27, align 8
  %69 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #10
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %71 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = tail call float @llvm.floor.f32(float %72) #10
  %74 = fcmp olt float %73, 0x41DFFFFFE0000000
  %75 = select i1 %74, float %73, float 0x41DFFFFFE0000000
  %76 = fcmp ogt float %75, 0xC1DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0xC1DFFFFFE0000000
  %78 = fptosi float %77 to i32
  %79 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %80 = load float, float* %79, align 4
  %81 = tail call float @llvm.floor.f32(float %80) #10
  %82 = fcmp olt float %81, 0x41DFFFFFE0000000
  %83 = select i1 %82, float %81, float 0x41DFFFFFE0000000
  %84 = fcmp ogt float %83, 0xC1DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0xC1DFFFFFE0000000
  %86 = fptosi float %85 to i32
  %87 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %88 = load float, float* %87, align 4
  %89 = tail call float @llvm.ceil.f32(float %88) #10
  %90 = fcmp olt float %89, 0x41DFFFFFE0000000
  %91 = select i1 %90, float %89, float 0x41DFFFFFE0000000
  %92 = fcmp ogt float %91, 0xC1DFFFFFE0000000
  %93 = select i1 %92, float %91, float 0xC1DFFFFFE0000000
  %94 = fptosi float %93 to i32
  %95 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %96 = load float, float* %95, align 4
  %97 = tail call float @llvm.ceil.f32(float %96) #10
  %98 = fcmp olt float %97, 0x41DFFFFFE0000000
  %99 = select i1 %98, float %97, float 0x41DFFFFFE0000000
  %100 = fcmp ogt float %99, 0xC1DFFFFFE0000000
  %101 = select i1 %100, float %99, float 0xC1DFFFFFE0000000
  %102 = fptosi float %101 to i32
  %103 = zext i32 %86 to i64
  %104 = shl nuw i64 %103, 32
  %105 = zext i32 %78 to i64
  %106 = or i64 %104, %105
  %107 = zext i32 %102 to i64
  %108 = shl nuw i64 %107, 32
  %109 = zext i32 %94 to i64
  %110 = or i64 %108, %109
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  store i64 %106, i64* %111, align 8
  store i64 %110, i64* %70, align 8
  %112 = tail call %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"* %0) #10
  %113 = call zeroext i8 @_ZNK5blink14DarkModeFilter25AnalyzeShouldApplyToImageERK7SkIRectS3_(%"class.blink::DarkModeFilter"* %112, %struct.SkIRect* nonnull dereferenceable(16) %17, %struct.SkIRect* nonnull dereferenceable(16) %25) #10
  switch i8 %113, label %297 [
    i8 2, label %147
    i8 1, label %114
  ]

114:                                              ; preds = %23
  %115 = call %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"* %0) #10
  call void @_ZNK5blink14DarkModeFilter14GetImageFilterEv(%class.sk_sp.44* nonnull sret %19, %"class.blink::DarkModeFilter"* %115) #10
  %116 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %2, i64 0, i32 3
  %117 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %19, i64 0, i32 0
  %118 = bitcast %class.sk_sp.44* %19 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %117, align 8
  %120 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %116, i64 0, i32 0
  %121 = load %class.SkColorFilter*, %class.SkColorFilter** %120, align 8
  %122 = bitcast %class.sk_sp.44* %116 to i64*
  store i64 %119, i64* %122, align 8
  %123 = icmp eq %class.SkColorFilter* %121, null
  br i1 %123, label %134, label %124

124:                                              ; preds = %114
  %125 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %121, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = bitcast %class.SkColorFilter* %121 to %class.SkRefCntBase*
  %130 = bitcast %class.SkColorFilter* %121 to void (%class.SkRefCntBase*)***
  %131 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %130, align 8
  %132 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, i64 2
  %133 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, align 8
  call void %133(%class.SkRefCntBase* nonnull %129) #10
  br label %134

134:                                              ; preds = %114, %124, %128
  %135 = load %class.SkColorFilter*, %class.SkColorFilter** %117, align 8
  %136 = icmp eq %class.SkColorFilter* %135, null
  br i1 %136, label %297, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %135, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw add i32* %138, i32 -1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %297

141:                                              ; preds = %137
  %142 = bitcast %class.SkColorFilter* %135 to %class.SkRefCntBase*
  %143 = bitcast %class.SkColorFilter* %135 to void (%class.SkRefCntBase*)***
  %144 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %143, align 8
  %145 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %144, i64 2
  %146 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, align 8
  call void %146(%class.SkRefCntBase* nonnull %142) #10
  br label %297

147:                                              ; preds = %23
  %148 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_136IsRasterSideDarkModeForImagesEnabledEvE7enabled to i8*) acquire, align 8
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %157, !prof !3

150:                                              ; preds = %147
  %151 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_136IsRasterSideDarkModeForImagesEnabledEvE7enabled) #10
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %150
  %154 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %155 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %154, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8switches34kEnableRasterSideDarkModeForImagesE, i64 0, i64 0)) #10
  %156 = zext i1 %155 to i8
  store i8 %156, i8* @_ZZN5blink12_GLOBAL__N_136IsRasterSideDarkModeForImagesEnabledEvE7enabled, align 1
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_136IsRasterSideDarkModeForImagesEnabledEvE7enabled) #10
  br label %157

157:                                              ; preds = %153, %150, %147
  %158 = load i8, i8* @_ZZN5blink12_GLOBAL__N_136IsRasterSideDarkModeForImagesEnabledEvE7enabled, align 1, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.blink::Image"* %1 to i1 (%"class.blink::Image"*)***
  %162 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %161, align 8
  %163 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %162, i64 3
  %164 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %163, align 8
  %165 = call zeroext i1 %164(%"class.blink::Image"* %1) #10
  br i1 %165, label %166, label %171

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %2, i64 0, i32 10
  %168 = bitcast %union.anon.53* %167 to i16*
  %169 = load i16, i16* %168, align 8
  %170 = or i16 %169, 1024
  store i16 %170, i16* %168, align 8
  br label %297

171:                                              ; preds = %157, %160
  %172 = bitcast %class.sk_sp.44* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172)
  %173 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_124ApplyToImageOnMainThreadEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK7SkIRectSA_E19s_scoped_us_counter to i8*) acquire, align 8
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %179, !prof !3

175:                                              ; preds = %171
  %176 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_124ApplyToImageOnMainThreadEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK7SkIRectSA_E19s_scoped_us_counter) #10
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %175
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_124ApplyToImageOnMainThreadEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK7SkIRectSA_E19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32 0, i32 10000000, i32 50) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_124ApplyToImageOnMainThreadEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK7SkIRectSA_E19s_scoped_us_counter) #10
  br label %179

179:                                              ; preds = %178, %175, %171
  %180 = call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #10
  %181 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %180, i64 0, i32 0
  %182 = bitcast %"class.base::DefaultTickClock"* %180 to i64 (%"class.base::TickClock"*)***
  %183 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %182, align 8
  %184 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %183, i64 2
  %185 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %184, align 8
  %186 = call i64 %185(%"class.base::TickClock"* %181) #10
  %187 = call %"class.blink::DarkModeImageCache"* @_ZN5blink5Image21GetDarkModeImageCacheEv(%"class.blink::Image"* %1) #10
  %188 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #10
  %189 = load <2 x i64>, <2 x i64>* %16, align 16
  store <2 x i64> %189, <2 x i64>* %10, align 16
  %190 = getelementptr inbounds %"class.blink::DarkModeImageCache", %"class.blink::DarkModeImageCache"* %187, i64 0, i32 0, i32 0
  %191 = call %"struct.std::__1::__hash_node_base.319"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.315"* %190, %"struct.blink::DarkModeImageCache::DarkModeKey"* nonnull dereferenceable(16) %11) #10
  %192 = icmp eq %"struct.std::__1::__hash_node_base.319"* %191, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #10
  br i1 %192, label %208, label %193

193:                                              ; preds = %179
  %194 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %194) #10, !noalias !4
  %195 = load <2 x i64>, <2 x i64>* %16, align 16, !noalias !4
  store <2 x i64> %195, <2 x i64>* %8, align 16, !noalias !4
  %196 = call %"struct.std::__1::__hash_node_base.319"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.315"* %190, %"struct.blink::DarkModeImageCache::DarkModeKey"* nonnull dereferenceable(16) %9) #10, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %194) #10, !noalias !4
  %197 = icmp eq %"struct.std::__1::__hash_node_base.319"* %196, null
  br i1 %197, label %291, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %196, i64 4
  %200 = bitcast %"struct.std::__1::__hash_node_base.319"* %199 to %class.SkColorFilter**
  %201 = load %class.SkColorFilter*, %class.SkColorFilter** %200, align 8, !noalias !4
  %202 = icmp eq %class.SkColorFilter* %201, null
  br i1 %202, label %206, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %201, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = atomicrmw add i32* %204, i32 1 monotonic, !noalias !4
  br label %206

206:                                              ; preds = %203, %198
  %207 = ptrtoint %class.SkColorFilter* %201 to i64
  br label %260

208:                                              ; preds = %179
  %209 = bitcast %class.SkBitmap* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %209) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 56, i1 false) #10
  call void @_ZN5blink5Image25AsSkBitmapForCurrentFrameENS_27RespectImageOrientationEnumE(%class.SkBitmap* nonnull sret %12, %"class.blink::Image"* %1, i32 0) #10
  %210 = bitcast %class.SkPixmap* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %210) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 0, i64 40, i1 false) #10
  %211 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* nonnull %12, %class.SkPixmap* nonnull %13) #10
  %212 = bitcast %class.sk_sp.44* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #10
  %213 = call %"class.blink::DarkModeFilter"* @_ZN5blink15GraphicsContext17GetDarkModeFilterEv(%"class.blink::GraphicsContext"* %0) #10
  call void @_ZNK5blink14DarkModeFilter12ApplyToImageERK8SkPixmapRK7SkIRect(%class.sk_sp.44* nonnull sret %14, %"class.blink::DarkModeFilter"* %213, %class.SkPixmap* nonnull dereferenceable(40) %13, %struct.SkIRect* nonnull dereferenceable(16) %17) #10
  %214 = bitcast %class.sk_sp.44* %14 to i64*
  %215 = load i64, i64* %214, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #10
  %216 = bitcast %"class.blink::Image"* %1 to i1 (%"class.blink::Image"*)***
  %217 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %216, align 8
  %218 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %217, i64 3
  %219 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %218, align 8
  %220 = call zeroext i1 %219(%"class.blink::Image"* %1) #10
  br i1 %220, label %221, label %226

221:                                              ; preds = %208
  %222 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %216, align 8
  %223 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %222, i64 7
  %224 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %223, align 8
  %225 = call zeroext i1 %224(%"class.blink::Image"* %1) #10
  br i1 %225, label %226, label %249

226:                                              ; preds = %221, %208
  %227 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %15, i64 0, i32 0
  %228 = inttoptr i64 %215 to %class.SkColorFilter*
  %229 = icmp eq i64 %215, 0
  br i1 %229, label %233, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %228, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 1 monotonic
  br label %233

233:                                              ; preds = %230, %226
  store %class.SkColorFilter* %228, %class.SkColorFilter** %227, align 8
  %234 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #10
  %235 = load <2 x i64>, <2 x i64>* %16, align 16
  store <2 x i64> %235, <2 x i64>* %6, align 16
  %236 = call { %"struct.std::__1::__hash_node_base.319"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.315"* %190, %"struct.blink::DarkModeImageCache::DarkModeKey"* nonnull dereferenceable(16) %7, %"struct.blink::DarkModeImageCache::DarkModeKey"* nonnull dereferenceable(16) %7, %class.sk_sp.44* nonnull dereferenceable(8) %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #10
  %237 = load %class.SkColorFilter*, %class.SkColorFilter** %227, align 8
  %238 = icmp eq %class.SkColorFilter* %237, null
  br i1 %238, label %249, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %237, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = atomicrmw add i32* %240, i32 -1 acq_rel
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %249

243:                                              ; preds = %239
  %244 = bitcast %class.SkColorFilter* %237 to %class.SkRefCntBase*
  %245 = bitcast %class.SkColorFilter* %237 to void (%class.SkRefCntBase*)***
  %246 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %245, align 8
  %247 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %246, i64 2
  %248 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %247, align 8
  call void %248(%class.SkRefCntBase* nonnull %244) #10
  br label %249

249:                                              ; preds = %243, %239, %233, %221
  %250 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %251 = load %class.SkColorSpace*, %class.SkColorSpace** %250, align 8
  %252 = icmp eq %class.SkColorSpace* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i32* %254, i32 -1 acq_rel
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %257, label %259

257:                                              ; preds = %253
  %258 = bitcast %class.SkColorSpace* %251 to i8*
  call void @_ZdlPv(i8* %258) #11
  br label %259

259:                                              ; preds = %257, %253, %249
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %210) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %209) #10
  br label %260

260:                                              ; preds = %259, %206
  %261 = phi i64 [ %215, %259 ], [ %207, %206 ]
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %291, label %263

263:                                              ; preds = %260
  %264 = inttoptr i64 %261 to %class.SkColorFilter*
  %265 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %264, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = atomicrmw add i32* %265, i32 1 monotonic
  %267 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %2, i64 0, i32 3
  %268 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %267, i64 0, i32 0
  %269 = load %class.SkColorFilter*, %class.SkColorFilter** %268, align 8
  %270 = bitcast %class.sk_sp.44* %267 to i64*
  store i64 %261, i64* %270, align 8
  %271 = icmp eq %class.SkColorFilter* %269, null
  br i1 %271, label %282, label %272

272:                                              ; preds = %263
  %273 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %269, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw add i32* %273, i32 -1 acq_rel
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %282

276:                                              ; preds = %272
  %277 = bitcast %class.SkColorFilter* %269 to %class.SkRefCntBase*
  %278 = bitcast %class.SkColorFilter* %269 to void (%class.SkRefCntBase*)***
  %279 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %278, align 8
  %280 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %279, i64 2
  %281 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %280, align 8
  call void %281(%class.SkRefCntBase* nonnull %277) #10
  br label %282

282:                                              ; preds = %276, %272, %263
  %283 = atomicrmw add i32* %265, i32 -1 acq_rel
  %284 = icmp eq i32 %283, 1
  br i1 %284, label %285, label %291

285:                                              ; preds = %282
  %286 = inttoptr i64 %261 to %class.SkRefCntBase*
  %287 = inttoptr i64 %261 to void (%class.SkRefCntBase*)***
  %288 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %287, align 8
  %289 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %288, i64 2
  %290 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %289, align 8
  call void %290(%class.SkRefCntBase* nonnull %286) #10
  br label %291

291:                                              ; preds = %193, %260, %282, %285
  %292 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %182, align 8
  %293 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %292, i64 2
  %294 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %293, align 8
  %295 = call i64 %294(%"class.base::TickClock"* %181) #10
  %296 = sub nsw i64 %295, %186
  call void @_ZN5blink20CustomCountHistogram17CountMicrosecondsEN4base9TimeDeltaE(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_124ApplyToImageOnMainThreadEPNS_15GraphicsContextEPNS_5ImageEPN2cc10PaintFlagsERK7SkIRectSA_E19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i64 %296) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172)
  br label %297

297:                                              ; preds = %141, %137, %134, %23, %291, %166
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  br label %298

298:                                              ; preds = %5, %297
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i8 @_ZNK5blink14DarkModeFilter25AnalyzeShouldApplyToImageERK7SkIRectS3_(%"class.blink::DarkModeFilter"*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink14DarkModeFilter14GetImageFilterEv(%class.sk_sp.44* sret, %"class.blink::DarkModeFilter"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare %"class.blink::DarkModeImageCache"* @_ZN5blink5Image21GetDarkModeImageCacheEv(%"class.blink::Image"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink5Image25AsSkBitmapForCurrentFrameENS_27RespectImageOrientationEnumE(%class.SkBitmap* sret, %"class.blink::Image"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #1

declare void @_ZNK5blink14DarkModeFilter12ApplyToImageERK8SkPixmapRK7SkIRect(%class.sk_sp.44* sret, %"class.blink::DarkModeFilter"*, %class.SkPixmap* dereferenceable(40), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #5

declare void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"*, i8*, i32, i32, i32) unnamed_addr #1

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.319"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.315"*, %"struct.blink::DarkModeImageCache::DarkModeKey"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %4, i32 %6) #10
  %8 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* %3, align 4
  %11 = sub i32 %9, %10
  %12 = sext i32 %11 to i64
  %13 = tail call i64 @_ZN4base10HashInts64Emm(i64 %7, i64 %12) #10
  %14 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %5, align 4
  %17 = sub i32 %15, %16
  %18 = sext i32 %17 to i64
  %19 = tail call i64 @_ZN4base10HashInts64Emm(i64 %13, i64 %18) #10
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %72, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #10, !range !7
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.319"* %38, null
  br i1 %39, label %72, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.319"* %42, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  %46 = bitcast %"struct.blink::DarkModeImageCache::DarkModeKey"* %1 to i8*
  br label %47

47:                                               ; preds = %44, %68
  %48 = phi %"struct.std::__1::__hash_node_base.319"* [ %42, %44 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.319"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %25, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %45
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %21
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %21
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %34
  br i1 %62, label %68, label %72

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.319"* %64 to i8*
  %66 = tail call i32 @bcmp(i8* %65, i8* %46, i64 16) #10
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %60, %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.319"* %70, null
  br i1 %71, label %72, label %47

72:                                               ; preds = %63, %68, %60, %40, %2, %33
  %73 = phi %"struct.std::__1::__hash_node_base.319"* [ null, %33 ], [ null, %2 ], [ null, %40 ], [ %48, %63 ], [ null, %68 ], [ null, %60 ]
  ret %"struct.std::__1::__hash_node_base.319"* %73
}

declare i64 @_ZN4base10HashInts64Emm(i64, i64) local_unnamed_addr #1

declare i64 @_ZN4base10HashInts32Ejj(i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.319"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS4_JS4_S7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.315"*, %"struct.blink::DarkModeImageCache::DarkModeKey"* dereferenceable(16), %"struct.blink::DarkModeImageCache::DarkModeKey"* dereferenceable(16), %class.sk_sp.44* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call i64 @_ZN4base10HashInts32Ejj(i32 %6, i32 %8) #10
  %10 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %5, align 4
  %13 = sub i32 %11, %12
  %14 = sext i32 %13 to i64
  %15 = tail call i64 @_ZN4base10HashInts64Emm(i64 %9, i64 %14) #10
  %16 = getelementptr inbounds %"struct.blink::DarkModeImageCache::DarkModeKey", %"struct.blink::DarkModeImageCache::DarkModeKey"* %1, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* %7, align 4
  %19 = sub i32 %17, %18
  %20 = sext i32 %19 to i64
  %21 = tail call i64 @_ZN4base10HashInts64Emm(i64 %15, i64 %20) #10
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %70, label %25

25:                                               ; preds = %4
  %26 = tail call i64 @llvm.ctpop.i64(i64 %23) #10, !range !7
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %21, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.319"* %40, null
  br i1 %41, label %70, label %42

42:                                               ; preds = %35
  %43 = add i64 %23, -1
  %44 = bitcast %"struct.blink::DarkModeImageCache::DarkModeKey"* %1 to i8*
  br label %45

45:                                               ; preds = %42, %65
  %46 = phi %"struct.std::__1::__hash_node_base.319"* [ %48, %65 ], [ %40, %42 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %46, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.319"* %48, null
  br i1 %49, label %70, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %48, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.319"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %21
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  br i1 %27, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %43
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %23
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %23
  br label %62

62:                                               ; preds = %56, %58, %60
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %36
  br i1 %64, label %65, label %70

65:                                               ; preds = %50, %62
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %48, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.319"* %66 to i8*
  %68 = tail call i32 @bcmp(i8* %67, i8* %44, i64 16) #10
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %161, label %45

70:                                               ; preds = %45, %62, %35, %4
  %71 = phi i64 [ %36, %35 ], [ -6148914691236517206, %4 ], [ %36, %62 ], [ %36, %45 ]
  %72 = tail call i8* @_Znwm(i64 40) #11, !noalias !8
  %73 = getelementptr inbounds i8, i8* %72, i64 16
  %74 = bitcast %"struct.blink::DarkModeImageCache::DarkModeKey"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 4 %74, i64 16, i1 false) #10, !noalias !8
  %75 = getelementptr inbounds i8, i8* %72, i64 32
  %76 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %3, i64 0, i32 0
  %77 = bitcast %class.sk_sp.44* %3 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !8
  store %class.SkColorFilter* null, %class.SkColorFilter** %76, align 8, !noalias !8
  %79 = bitcast i8* %75 to i64*
  store i64 %78, i64* %79, align 8, !noalias !8
  %80 = getelementptr inbounds i8, i8* %72, i64 8
  %81 = bitcast i8* %80 to i64*
  store i64 %21, i64* %81, align 8, !noalias !8
  %82 = bitcast i8* %72 to %"struct.std::__1::__hash_node_base.319"**
  store %"struct.std::__1::__hash_node_base.319"* null, %"struct.std::__1::__hash_node_base.319"** %82, align 8, !noalias !8
  %83 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  %86 = uitofp i64 %85 to float
  %87 = uitofp i64 %23 to float
  %88 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 3, i32 0, i32 0
  %89 = load float, float* %88, align 4
  %90 = fmul float %89, %87
  %91 = fcmp olt float %90, %86
  %92 = or i1 %24, %91
  br i1 %92, label %93, label %116

93:                                               ; preds = %70
  %94 = shl i64 %23, 1
  %95 = icmp ult i64 %23, 3
  %96 = tail call i64 @llvm.ctpop.i64(i64 %23) #10, !range !7
  %97 = icmp ugt i64 %96, 1
  %98 = or i1 %95, %97
  %99 = zext i1 %98 to i64
  %100 = or i64 %94, %99
  %101 = fdiv float %86, %89
  %102 = tail call float @llvm.ceil.f32(float %101) #10
  %103 = fptoui float %102 to i64
  %104 = icmp ult i64 %100, %103
  %105 = select i1 %104, i64 %103, i64 %100
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.315"* %0, i64 %105)
  %106 = load i64, i64* %22, align 8
  %107 = tail call i64 @llvm.ctpop.i64(i64 %106) #10, !range !7
  %108 = icmp ugt i64 %107, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %93
  %110 = add i64 %106, -1
  %111 = and i64 %110, %21
  br label %116

112:                                              ; preds = %93
  %113 = icmp ult i64 %21, %106
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %21, %106
  br label %116

116:                                              ; preds = %114, %112, %109, %70
  %117 = phi i64 [ %23, %70 ], [ %106, %109 ], [ %106, %112 ], [ %106, %114 ]
  %118 = phi i64 [ %71, %70 ], [ %111, %109 ], [ %21, %112 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %120, i64 %118
  %122 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.319"* %122, null
  br i1 %123, label %124, label %150

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = bitcast %"struct.std::__1::__hash_node_base.319"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i8* %72 to i64*
  store i64 %127, i64* %128, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base.319"* %125 to i8**
  store i8* %72, i8** %129, align 8
  store %"struct.std::__1::__hash_node_base.319"* %125, %"struct.std::__1::__hash_node_base.319"** %121, align 8
  %130 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %82, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.319"* %130, null
  br i1 %131, label %157, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %130, i64 1
  %134 = bitcast %"struct.std::__1::__hash_node_base.319"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = tail call i64 @llvm.ctpop.i64(i64 %117) #10, !range !7
  %137 = icmp ugt i64 %136, 1
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = add i64 %117, -1
  %140 = and i64 %135, %139
  br label %145

141:                                              ; preds = %132
  %142 = icmp ult i64 %135, %117
  br i1 %142, label %145, label %143

143:                                              ; preds = %141
  %144 = urem i64 %135, %117
  br label %145

145:                                              ; preds = %138, %141, %143
  %146 = phi i64 [ %140, %138 ], [ %144, %143 ], [ %135, %141 ]
  %147 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %119, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %147, i64 %146
  %149 = bitcast %"struct.std::__1::__hash_node_base.319"** %148 to i8**
  br label %155

150:                                              ; preds = %116
  %151 = bitcast %"struct.std::__1::__hash_node_base.319"* %122 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast i8* %72 to i64*
  store i64 %152, i64* %153, align 8
  %154 = bitcast %"struct.std::__1::__hash_node_base.319"* %122 to i8**
  br label %155

155:                                              ; preds = %145, %150
  %156 = phi i8** [ %154, %150 ], [ %149, %145 ]
  store i8* %72, i8** %156, align 8
  br label %157

157:                                              ; preds = %155, %124
  %158 = bitcast i8* %72 to %"struct.std::__1::__hash_node_base.319"*
  %159 = load i64, i64* %83, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %83, align 8
  br label %161

161:                                              ; preds = %65, %157
  %162 = phi i8 [ 1, %157 ], [ 0, %65 ]
  %163 = phi %"struct.std::__1::__hash_node_base.319"* [ %158, %157 ], [ %48, %65 ]
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.319"*, i8 } undef, %"struct.std::__1::__hash_node_base.319"* %163, 0
  %165 = insertvalue { %"struct.std::__1::__hash_node_base.319"*, i8 } %164, i8 %162, 1
  ret { %"struct.std::__1::__hash_node_base.319"*, i8 } %165
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.315"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !7
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.315"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !7
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !7
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.315"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.315"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %133, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.315"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.319"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.319"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.321", %"class.std::__1::__bucket_list_deallocator.321"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.319"* null, %"struct.std::__1::__hash_node_base.319"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.319"* %38, null
  br i1 %39, label %141, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.319"* null, %"struct.std::__1::__hash_node_base.319"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.319"* null, %"struct.std::__1::__hash_node_base.319"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.319"* null, %"struct.std::__1::__hash_node_base.319"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.319"* null, %"struct.std::__1::__hash_node_base.319"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.319"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !7
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.319"* %36, %"struct.std::__1::__hash_node_base.319"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.319"* %75, null
  br i1 %76, label %141, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %127
  %80 = phi %"struct.std::__1::__hash_node_base.319"* [ %75, %77 ], [ %131, %127 ]
  %81 = phi i64 [ %71, %77 ], [ %129, %127 ]
  %82 = phi %"struct.std::__1::__hash_node_base.319"* [ %38, %77 ], [ %128, %127 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.319"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %127, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.319"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.319"* %101 to i8*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.319"* %82, %"struct.std::__1::__hash_node_base.319"** %97, align 8
  br label %127

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.319"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.319"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.319"* %110 to i8*
  %112 = tail call i32 @bcmp(i8* %102, i8* %111, i64 16) #10
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %104, label %114

114:                                              ; preds = %104, %109
  %115 = ptrtoint %"struct.std::__1::__hash_node_base.319"* %107 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base.319"* %105 to i64*
  %117 = bitcast %"struct.std::__1::__hash_node_base.319"* %82 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %118, i64 %93
  %120 = bitcast %"struct.std::__1::__hash_node_base.319"** %119 to i64**
  %121 = load i64*, i64** %120, align 8
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %116, align 8
  %123 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %11, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %123, i64 %93
  %125 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %125, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.319"* %80, %"struct.std::__1::__hash_node_base.319"** %126, align 8
  br label %127

127:                                              ; preds = %92, %114, %103
  %128 = phi %"struct.std::__1::__hash_node_base.319"* [ %80, %103 ], [ %82, %114 ], [ %80, %92 ]
  %129 = phi i64 [ %93, %103 ], [ %81, %114 ], [ %81, %92 ]
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.319", %"struct.std::__1::__hash_node_base.319"* %128, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.319"*, %"struct.std::__1::__hash_node_base.319"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.319"* %131, null
  br i1 %132, label %141, label %79

133:                                              ; preds = %2
  %134 = getelementptr inbounds %"class.std::__1::__hash_table.315", %"class.std::__1::__hash_table.315"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.319"**, %"struct.std::__1::__hash_node_base.319"*** %134, align 8
  store %"struct.std::__1::__hash_node_base.319"** null, %"struct.std::__1::__hash_node_base.319"*** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.319"** %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast %"struct.std::__1::__hash_node_base.319"** %135 to i8*
  tail call void @_ZdlPv(i8* %138) #11
  br label %139

139:                                              ; preds = %133, %137
  %140 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.321", %"class.std::__1::__bucket_list_deallocator.321"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %140, align 8
  br label %141

141:                                              ; preds = %127, %70, %35, %139
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #3

declare void @_ZN5blink20CustomCountHistogram17CountMicrosecondsEN4base9TimeDeltaE(%"class.blink::CustomCountHistogram"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink18DarkModeImageCache3GetERK7SkIRect: argument 0"}
!6 = distinct !{!6, !"_ZN5blink18DarkModeImageCache3GetERK7SkIRect"}
!7 = !{i64 0, i64 65}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSG_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN5blink18DarkModeImageCache11DarkModeKeyE5sk_spI13SkColorFilterEEENS_22__unordered_map_hasherIS4_S8_NS3_15DarkModeKeyHashENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S8_SC_SA_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIS4_JS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSG_ISN_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
