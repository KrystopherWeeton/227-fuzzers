; ModuleID = '../../third_party/blink/renderer/core/layout/svg/layout_svg_inline_text.cc'
source_filename = "../../third_party/blink/renderer/core/layout/svg/layout_svg_inline_text.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1660", [4 x i8] }>
%"class.WTF::RefCounted.1660" = type { %"class.base::RefCounted.1661" }
%"class.base::RefCounted.1661" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::LayoutSVGInlineText" = type { %"class.blink::LayoutText", float, %"class.blink::Font", %"class.WTF::HashMap.1691", %"class.WTF::Vector.1696" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1690 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2098 }
%class.scoped_refptr.2098 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2099", %"class.WTF::Vector.630", %"class.WTF::Vector.2101", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2099" = type { %"class.base::RefCounted.2100" }
%"class.base::RefCounted.2100" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2101" = type { %"class.WTF::VectorBuffer.2102" }
%"class.WTF::VectorBuffer.2102" = type { %"class.WTF::VectorBufferBase.2103" }
%"class.WTF::VectorBufferBase.2103" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2104 }
%union.anon.2104 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1653", i64 }
%"class.std::__1::vector.1653" = type { %"class.std::__1::__vector_base.1654" }
%"class.std::__1::__vector_base.1654" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1655" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1655" = type { %"struct.std::__1::__compressed_pair_elem.1656" }
%"struct.std::__1::__compressed_pair_elem.1656" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1377", %"class.blink::Member.1379", %"class.blink::TextLinkColors", %"class.blink::Member.1381", i8, [7 x i8], %"class.blink::HeapHashMap.1383", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1390", %"class.blink::Member.1395", %"class.blink::Member.1397", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1399", %"class.blink::HeapVector.1401", %"class.std::__1::unique_ptr.1409", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1415", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1428", %"class.WTF::Vector.1430", i8, i8, %"class.std::__1::unique_ptr.1435", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1441", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1449", i8, i32, %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.blink::Member.1455", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1457", %"class.WTF::HashMap.1459", %"class.blink::Member.1464", %"class.blink::Member.1466", %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1472", i8, i32, %"class.blink::Member.1479", %"class.blink::Member.1481", i32, %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::Member.1487", %"class.std::__1::unique_ptr.1489", i64, %"class.std::__1::unique_ptr.1495", i32, i32, %"class.blink::Member.1506", %"class.blink::Member.1508", %"class.blink::Member.1510", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1512", %"class.WTF::Vector.1514", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1519", %"class.blink::Member.1526", %"class.std::__1::unique_ptr.1528", %"class.blink::Member.1534", i8, i8, %"class.WTF::String", %"class.blink::Member.1536", i8, [7 x i8], %"class.blink::HeapHashMap.1538", %"class.blink::HeapObserverSet", %"class.blink::Member.1552", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1554", i32, i8, i8, %"class.blink::WeakMember.1556", %"class.blink::Member.1557" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1581", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1622", i32, i8, [3 x i8], %"class.blink::HeapVector.1624", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1632", %"class.blink::Member.1634", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1643", %"class.blink::Member.1649", %"class.blink::Member.1651", i8, [7 x i8] }>
%"class.blink::Supplementable.1581" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1582" }
%"class.blink::HeapHashMap.1582" = type { %"class.WTF::HashMap.1585" }
%"class.WTF::HashMap.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ %"struct.WTF::KeyValuePair.1588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1588" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1597" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1589" }
%"class.blink::HeapObserverSet.1589" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1590" }
%"class.blink::HeapHashSet.1590" = type { %"class.WTF::HashSet.1593" }
%"class.WTF::HashSet.1593" = type { %"class.WTF::HashTable.1594" }
%"class.WTF::HashTable.1594" = type <{ %"class.blink::WeakMember.1596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1596" = type opaque
%"class.blink::Supplementable.1597" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1598" }
%"class.blink::HeapHashMap.1598" = type { %"class.WTF::HashMap.1601" }
%"class.WTF::HashMap.1601" = type { %"class.WTF::HashTable.1602" }
%"class.WTF::HashTable.1602" = type <{ %"struct.WTF::KeyValuePair.1604"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1604" = type { i8*, %"class.blink::Member.2084" }
%"class.blink::Member.2084" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2086" }
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1605, %"class.std::__1::unique_ptr.1606", %"class.std::__1::unique_ptr.1606", %"class.std::__1::unique_ptr.1612", %"class.std::__1::unique_ptr.1612", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1618", i32, i32 }
%class.scoped_refptr.1605 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1682", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1684", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1689 }
%"class.WTF::RefCounted.1682" = type { %"class.base::RefCounted.1683" }
%"class.base::RefCounted.1683" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1684" = type { %"class.absl::optional_internal::optional_data.1685" }
%"class.absl::optional_internal::optional_data.1685" = type { %"class.absl::optional_internal::optional_data_base.1686" }
%"class.absl::optional_internal::optional_data_base.1686" = type { %"class.absl::optional_internal::optional_data_dtor_base.1687" }
%"class.absl::optional_internal::optional_data_dtor_base.1687" = type { i8, %union.anon.1688 }
%union.anon.1688 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1689 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1606" = type { %"class.std::__1::__compressed_pair.1607" }
%"class.std::__1::__compressed_pair.1607" = type { %"struct.std::__1::__compressed_pair_elem.1608" }
%"struct.std::__1::__compressed_pair_elem.1608" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1618" = type { %"class.WTF::HashTable.1619" }
%"class.WTF::HashTable.1619" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1624" = type { %"class.WTF::Vector.1627" }
%"class.WTF::Vector.1627" = type { %"class.WTF::VectorBuffer.1628" }
%"class.WTF::VectorBuffer.1628" = type { %"class.WTF::VectorBufferBase.1629" }
%"class.WTF::VectorBufferBase.1629" = type { %"class.blink::Member.1630"*, i32, i32 }
%"class.blink::Member.1630" = type opaque
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1636", i32, i32 }
%"class.blink::HeapHashMap.1636" = type { %"class.WTF::HashMap.1639" }
%"class.WTF::HashMap.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"struct.WTF::KeyValuePair.1642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1642" = type opaque
%"class.std::__1::unique_ptr.1643" = type { %"class.std::__1::__compressed_pair.1644" }
%"class.std::__1::__compressed_pair.1644" = type { %"struct.std::__1::__compressed_pair_elem.1645" }
%"struct.std::__1::__compressed_pair_elem.1645" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1318", %"class.blink::HeapHashMap.1325", %"class.std::__1::unique_ptr.1332", i32, %"class.blink::HeapVector.1338", %"class.blink::HeapVector.1338", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1346", %"class.blink::HeapHashMap.1353", %"class.blink::Member.1360", %"class.blink::HeapHashMap.1362", %class.scoped_refptr.1369, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1370", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1572", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1572" = type { %"class.WTF::Vector.1575" }
%"class.WTF::Vector.1575" = type { %"class.WTF::VectorBuffer.1576" }
%"class.WTF::VectorBuffer.1576" = type { %"class.WTF::VectorBufferBase.1577" }
%"class.WTF::VectorBufferBase.1577" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2112 }
%class.scoped_refptr.2112 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2122" }
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2119" }
%"class.blink::MemberBase.2119" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2121" }
%"class.blink::MemberBase.2121" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2113", %"class.WTF::Vector.2113" }
%"class.WTF::Vector.2113" = type { %"class.WTF::VectorBuffer.2114" }
%"class.WTF::VectorBuffer.2114" = type { %"class.WTF::VectorBufferBase.2115" }
%"class.WTF::VectorBufferBase.2115" = type { %class.scoped_refptr.2112*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.1263", %"class.blink::Member.1264", %"class.blink::HeapHashSet.1299", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.1261" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::WeakMember.1263" = type { %"class.blink::MemberBase.313" }
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.1268", %"class.blink::HeapHashMap.1275", %"class.blink::HeapHashMap.1282", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.1268" = type { %"class.WTF::HashMap.1271" }
%"class.WTF::HashMap.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type opaque
%"class.blink::HeapHashMap.1275" = type { %"class.WTF::HashMap.1278" }
%"class.WTF::HashMap.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"struct.WTF::KeyValuePair.1281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1281" = type opaque
%"class.blink::HeapHashMap.1282" = type { %"class.WTF::HashMap.1285" }
%"class.WTF::HashMap.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"struct.WTF::KeyValuePair.1288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1288" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1291", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1291" = type { %"class.WTF::HashTable.1292" }
%"class.WTF::HashTable.1292" = type <{ %"struct.WTF::KeyValuePair.1294"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1294" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1295", i32, i32 }
%"class.WTF::Vector.1295" = type { %"class.WTF::VectorBuffer.1296" }
%"class.WTF::VectorBuffer.1296" = type { %"class.WTF::VectorBufferBase.1297" }
%"class.WTF::VectorBufferBase.1297" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapHashSet.1299" = type { %"class.WTF::HashSet.1302" }
%"class.WTF::HashSet.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ %"class.blink::WeakMember.1305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1305" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1306", %"class.WTF::HashMap.1306", %"class.WTF::HashMap.1306", %"class.WTF::HashMap.1306", %"class.WTF::HashMap.1306", %"class.WTF::HashMap.1306", %"class.WTF::HashMap.1306", %"class.std::__1::unique_ptr.1311" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1310" = type opaque
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.WTF::Vector.1314"* }
%"class.WTF::Vector.1314" = type opaque
%"class.blink::HeapHashMap.1318" = type { %"class.WTF::HashMap.1321" }
%"class.WTF::HashMap.1321" = type { %"class.WTF::HashTable.1322" }
%"class.WTF::HashTable.1322" = type <{ %"struct.WTF::KeyValuePair.1324"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1324" = type opaque
%"class.blink::HeapHashMap.1325" = type { %"class.WTF::HashMap.1328" }
%"class.WTF::HashMap.1328" = type { %"class.WTF::HashTable.1329" }
%"class.WTF::HashTable.1329" = type <{ %"struct.WTF::KeyValuePair.1331"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1331" = type opaque
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1338" = type { %"class.WTF::Vector.1341" }
%"class.WTF::Vector.1341" = type { %"class.WTF::VectorBuffer.1342" }
%"class.WTF::VectorBuffer.1342" = type { %"class.WTF::VectorBufferBase.1343" }
%"class.WTF::VectorBufferBase.1343" = type { %"struct.std::__1::pair.1344"*, i32, i32 }
%"struct.std::__1::pair.1344" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1346" = type { %"class.WTF::HashSet.1349" }
%"class.WTF::HashSet.1349" = type { %"class.WTF::HashTable.1350" }
%"class.WTF::HashTable.1350" = type <{ %"class.blink::WeakMember.1352"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1352" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1353" = type { %"class.WTF::HashMap.1356" }
%"class.WTF::HashMap.1356" = type { %"class.WTF::HashTable.1357" }
%"class.WTF::HashTable.1357" = type <{ %"struct.WTF::KeyValuePair.1359"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1359" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1362" = type { %"class.WTF::HashMap.1365" }
%"class.WTF::HashMap.1365" = type { %"class.WTF::HashTable.1366" }
%"class.WTF::HashTable.1366" = type <{ %"struct.WTF::KeyValuePair.1368"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1368" = type opaque
%class.scoped_refptr.1369 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1370" = type { %"class.WTF::HashSet.1373" }
%"class.WTF::HashSet.1373" = type { %"class.WTF::HashTable.1374" }
%"class.WTF::HashTable.1374" = type <{ %"class.blink::Member.1376"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1376" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type opaque
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1397" = type { %"class.blink::MemberBase.1398" }
%"class.blink::MemberBase.1398" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1401" = type { %"class.WTF::Vector.1404" }
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406" }
%"class.WTF::VectorBufferBase.1406" = type { %"class.blink::Member.1407"*, i32, i32 }
%"class.blink::Member.1407" = type opaque
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1415" = type { %"class.WTF::HashSet.1418" }
%"class.WTF::HashSet.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"class.blink::WeakMember.1421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1421" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1422", i32, [4 x i8] }>
%"class.WTF::Vector.1422" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"struct.std::__1::pair.1425"*, i32, i32 }
%"struct.std::__1::pair.1425" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1430" = type { %"class.WTF::VectorBuffer.1431" }
%"class.WTF::VectorBuffer.1431" = type { %"class.WTF::VectorBufferBase.1432" }
%"class.WTF::VectorBufferBase.1432" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1435" = type { %"class.std::__1::__compressed_pair.1436" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1441" = type { %"class.WTF::Vector.1444" }
%"class.WTF::Vector.1444" = type { %"class.WTF::VectorBuffer.1445" }
%"class.WTF::VectorBuffer.1445" = type { %"class.WTF::VectorBufferBase.1446" }
%"class.WTF::VectorBufferBase.1446" = type { %"class.blink::Member.1447"*, i32, i32 }
%"class.blink::Member.1447" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1459" = type { %"class.WTF::HashTable.1460" }
%"class.WTF::HashTable.1460" = type <{ %"struct.WTF::KeyValuePair.1463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1463" = type opaque
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1472" = type { %"class.WTF::HashSet.1475" }
%"class.WTF::HashSet.1475" = type { %"class.WTF::HashTable.1476" }
%"class.WTF::HashTable.1476" = type <{ %"class.blink::Member.1478"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1478" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1489" = type { %"class.std::__1::__compressed_pair.1490" }
%"class.std::__1::__compressed_pair.1490" = type { %"struct.std::__1::__compressed_pair_elem.1491" }
%"struct.std::__1::__compressed_pair_elem.1491" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1495" = type { %"class.std::__1::__compressed_pair.1496" }
%"class.std::__1::__compressed_pair.1496" = type { %"struct.std::__1::__compressed_pair_elem.1497" }
%"struct.std::__1::__compressed_pair_elem.1497" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1498", %"class.WTF::HashMap.1498", %"class.WTF::HashMap.1498", %"class.WTF::HashMap.1498", %"class.WTF::HashMap.1498", %"class.WTF::HashMap.1498", %"class.WTF::HashMap.1498", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ %"struct.WTF::KeyValuePair.1502"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1502" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1514" = type { %"class.WTF::VectorBuffer.1515" }
%"class.WTF::VectorBuffer.1515" = type { %"class.WTF::VectorBufferBase.1516" }
%"class.WTF::VectorBufferBase.1516" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1519" = type { %"class.WTF::HashMap.1522" }
%"class.WTF::HashMap.1522" = type { %"class.WTF::HashTable.1523" }
%"class.WTF::HashTable.1523" = type <{ %"struct.WTF::KeyValuePair.1525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1525" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1528" = type { %"class.std::__1::__compressed_pair.1529" }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.1530" }
%"struct.std::__1::__compressed_pair_elem.1530" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1534" = type { %"class.blink::MemberBase.1535" }
%"class.blink::MemberBase.1535" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1538" = type { %"class.WTF::HashMap.1541" }
%"class.WTF::HashMap.1541" = type { %"class.WTF::HashTable.1542" }
%"class.WTF::HashTable.1542" = type <{ %"struct.WTF::KeyValuePair.1544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1544" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1545" }
%"class.blink::HeapHashSet.1545" = type { %"class.WTF::HashSet.1548" }
%"class.WTF::HashSet.1548" = type { %"class.WTF::HashTable.1549" }
%"class.WTF::HashTable.1549" = type <{ %"class.blink::WeakMember.1551"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1551" = type opaque
%"class.blink::Member.1552" = type { %"class.blink::MemberBase.1553" }
%"class.blink::MemberBase.1553" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1561", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1568", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1561" = type { %"class.WTF::HashSet.1564" }
%"class.WTF::HashSet.1564" = type { %"class.WTF::HashTable.1565" }
%"class.WTF::HashTable.1565" = type <{ %"class.blink::Member.1567"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1567" = type opaque
%"class.blink::HeapTaskRunnerTimer.1568" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1569", { i64, i64 } }
%"class.blink::WeakMember.1569" = type { %"class.blink::MemberBase.1555" }
%"class.blink::WeakMember.1556" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2088" }
%"class.WTF::Vector.2088" = type { %"class.WTF::VectorBuffer.2089" }
%"class.WTF::VectorBuffer.2089" = type { %"class.WTF::VectorBufferBase.2090" }
%"class.WTF::VectorBufferBase.2090" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2093", %"class.absl::optional.2093", %"class.absl::optional.2093" }
%"class.absl::optional.2093" = type { %"class.absl::optional_internal::optional_data.2094" }
%"class.absl::optional_internal::optional_data.2094" = type { %"class.absl::optional_internal::optional_data_base.2095" }
%"class.absl::optional_internal::optional_data_base.2095" = type { %"class.absl::optional_internal::optional_data_dtor_base.2096" }
%"class.absl::optional_internal::optional_data_dtor_base.2096" = type { i8, %union.anon.2097 }
%union.anon.2097 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2108" }
%"class.WTF::VectorBuffer.2108" = type { %"class.WTF::VectorBufferBase.2109", [32 x i8] }
%"class.WTF::VectorBufferBase.2109" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1690 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1662", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1662" = type { %"class.std::__1::__compressed_pair.1663" }
%"class.std::__1::__compressed_pair.1663" = type { %"struct.std::__1::__compressed_pair_elem.1664" }
%"struct.std::__1::__compressed_pair_elem.1664" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1665", %"class.absl::optional.1674" }
%"class.absl::optional.1665" = type { %"class.absl::optional_internal::optional_data.1666" }
%"class.absl::optional_internal::optional_data.1666" = type { %"class.absl::optional_internal::optional_data_base.1667" }
%"class.absl::optional_internal::optional_data_base.1667" = type { %"class.absl::optional_internal::optional_data_dtor_base.1668" }
%"class.absl::optional_internal::optional_data_dtor_base.1668" = type { i8, %union.anon.1669 }
%union.anon.1669 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1674" = type { %"class.absl::optional_internal::optional_data.1675" }
%"class.absl::optional_internal::optional_data.1675" = type { %"class.absl::optional_internal::optional_data_base.1676" }
%"class.absl::optional_internal::optional_data_base.1676" = type { %"class.absl::optional_internal::optional_data_dtor_base.1677" }
%"class.absl::optional_internal::optional_data_dtor_base.1677" = type { i8, %union.anon.1678 }
%union.anon.1678 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashMap.1691" = type { %"class.WTF::HashTable.1692" }
%"class.WTF::HashTable.1692" = type <{ %"struct.WTF::KeyValuePair.1695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1695" = type { i32, %"struct.blink::SVGCharacterData" }
%"struct.blink::SVGCharacterData" = type { float, float, float, float, float }
%"class.WTF::Vector.1696" = type { %"class.WTF::VectorBuffer.1697" }
%"class.WTF::VectorBuffer.1697" = type { %"class.WTF::VectorBufferBase.1698" }
%"class.WTF::VectorBufferBase.1698" = type { %"class.blink::SVGTextMetrics"*, i32, i32 }
%"class.blink::SVGTextMetrics" = type { float, float, i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutSVGBlock" = type <{ %"class.blink::LayoutBlockFlow", %"class.blink::AffineTransform", i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1746", %"class.std::__1::unique_ptr.1756" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1701, %"class.WTF::Vector.1702", %"class.std::__1::unique_ptr.1707", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1728, %"class.blink::Persistent.1729" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1701 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1702" = type { %"class.WTF::VectorBuffer.1703" }
%"class.WTF::VectorBuffer.1703" = type { %"class.WTF::VectorBufferBase.1704", [8 x i8] }
%"class.WTF::VectorBufferBase.1704" = type { %class.scoped_refptr.1701*, i32, i32 }
%"class.std::__1::unique_ptr.1707" = type { %"class.std::__1::__compressed_pair.1708" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.1709" }
%"struct.std::__1::__compressed_pair_elem.1709" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1710", %"class.absl::optional.1715", %"class.absl::optional.1720" }
%"class.absl::optional.1710" = type { %"class.absl::optional_internal::optional_data.1711" }
%"class.absl::optional_internal::optional_data.1711" = type { %"class.absl::optional_internal::optional_data_base.1712" }
%"class.absl::optional_internal::optional_data_base.1712" = type { %"class.absl::optional_internal::optional_data_dtor_base.1713" }
%"class.absl::optional_internal::optional_data_dtor_base.1713" = type { i8, %union.anon.1714 }
%union.anon.1714 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1715" = type { %"class.absl::optional_internal::optional_data.1716" }
%"class.absl::optional_internal::optional_data.1716" = type { %"class.absl::optional_internal::optional_data_base.1717" }
%"class.absl::optional_internal::optional_data_base.1717" = type { %"class.absl::optional_internal::optional_data_dtor_base.1718" }
%"class.absl::optional_internal::optional_data_dtor_base.1718" = type { i8, [3 x i8], %union.anon.1719 }
%union.anon.1719 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1720" = type { %"class.absl::optional_internal::optional_data.1721" }
%"class.absl::optional_internal::optional_data.1721" = type { %"class.absl::optional_internal::optional_data_base.1722" }
%"class.absl::optional_internal::optional_data_base.1722" = type { %"class.absl::optional_internal::optional_data_dtor_base.1723" }
%"class.absl::optional_internal::optional_data_dtor_base.1723" = type { i8, %union.anon.1724 }
%union.anon.1724 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1728 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1729" = type { %"class.blink::PersistentBase.1730" }
%"class.blink::PersistentBase.1730" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1733", %"struct.blink::PhysicalRect", %"class.blink::Member.1743" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.WTF::HashSet.1736"* }
%"class.WTF::HashSet.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1743" = type { %"class.blink::MemberBase.1744" }
%"class.blink::MemberBase.1744" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList.1745" }
%"class.blink::InlineBoxList.1745" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1746" = type { %"class.blink::PersistentBase.1747" }
%"class.blink::PersistentBase.1747" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1750", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1750" = type { %"class.std::__1::__compressed_pair.1751" }
%"class.std::__1::__compressed_pair.1751" = type { %"struct.std::__1::__compressed_pair_elem.1752" }
%"struct.std::__1::__compressed_pair_elem.1752" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1756" = type { %"class.std::__1::__compressed_pair.1757" }
%"class.std::__1::__compressed_pair.1757" = type { %"struct.std::__1::__compressed_pair_elem.1758" }
%"struct.std::__1::__compressed_pair_elem.1758" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1759", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1759" = type { %"class.WTF::HashTable.1762", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1762" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1765", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1765" = type { %"class.std::__1::__compressed_pair.1766" }
%"class.std::__1::__compressed_pair.1766" = type { %"struct.std::__1::__compressed_pair_elem.1767" }
%"struct.std::__1::__compressed_pair_elem.1767" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1768, %"class.std::__1::unique_ptr.1769", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1662", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1768 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1787", i16, %class.scoped_refptr.1768 }
%"class.WTF::ThreadSafeRefCounted.1787" = type { %"class.base::RefCountedThreadSafe.1788" }
%"class.base::RefCountedThreadSafe.1788" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"class.WTF::Vector.1772"* }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774" }
%"class.WTF::VectorBufferBase.1774" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1783, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1783 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::LayoutNGSVGText" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::FloatRect", i8, [7 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin.base", %"class.std::__1::unique_ptr.1794" }
%"class.blink::LayoutNGMixin.base" = type { %"class.blink::LayoutSVGBlock.base" }
%"class.blink::LayoutSVGBlock.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.blink::AffineTransform", i8 }>
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type opaque
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::SVGInlineTextBox" = type { %"class.blink::InlineTextBox", %"class.blink::LayoutUnit", i8, %"class.WTF::Vector.1800" }
%"class.WTF::Vector.1800" = type { %"class.WTF::VectorBuffer.1801" }
%"class.WTF::VectorBuffer.1801" = type { %"class.WTF::VectorBufferBase.1802" }
%"class.WTF::VectorBufferBase.1802" = type { %"struct.blink::SVGTextFragment"*, i32, i32 }
%"struct.blink::SVGTextFragment" = type { i32, i32, i32, float, float, float, float, %"struct.blink::GlyphOverflow", %"class.blink::AffineTransform", float, float }
%"struct.blink::GlyphOverflow" = type { float, float, float, float }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1807", %"class.blink::Member.1812", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1814", i8, i32, %"class.blink::Color", %"class.absl::optional.1817", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1822", %"class.blink::Member.1824", %"class.blink::Member.1824", %"class.std::__1::unique_ptr.1827", i32, [4 x i8], %"class.WTF::HashSet.1830", %"class.blink::Member.1837", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1839", %"class.blink::HeapHashSet.1846", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1854", i8, %"class.blink::Member.1860", i8, i8, i32, %"class.blink::HeapLinkedHashSet.1862", %"class.blink::HeapLinkedHashSet.1876", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1890", i8, %"class.std::__1::unique_ptr.1896", %"class.std::__1::unique_ptr.1977", %"class.WTF::Vector.1983", i32, %class.scoped_refptr.1988, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1989", %"class.blink::Member.1991", %"class.blink::Member.1993", %"class.blink::HeapHashSet.1995", %"class.blink::HeapHashSet.2002", %"class.std::__1::unique_ptr.2009", %"class.std::__1::unique_ptr.2016", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1807" = type { %"class.WTF::HashTable.1808" }
%"class.WTF::HashTable.1808" = type <{ %class.scoped_refptr.1811*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1811 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1814" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1815", { i64, i64 } }
%"class.blink::WeakMember.1815" = type { %"class.blink::MemberBase.1816" }
%"class.blink::MemberBase.1816" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1817" = type { %"class.absl::optional_internal::optional_data.1818" }
%"class.absl::optional_internal::optional_data.1818" = type { %"class.absl::optional_internal::optional_data_base.1819" }
%"class.absl::optional_internal::optional_data_base.1819" = type { %"class.absl::optional_internal::optional_data_dtor_base.1820" }
%"class.absl::optional_internal::optional_data_dtor_base.1820" = type { i8, %union.anon.1821 }
%union.anon.1821 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::HeapHashSet.1826"* }
%"class.blink::HeapHashSet.1826" = type opaque
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"class.WTF::HashSet.1830"* }
%"class.WTF::HashSet.1830" = type { %"class.WTF::HashTable.1831" }
%"class.WTF::HashTable.1831" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1837" = type { %"class.blink::MemberBase.1838" }
%"class.blink::MemberBase.1838" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1839" = type { %"class.WTF::HashSet.1842" }
%"class.WTF::HashSet.1842" = type { %"class.WTF::HashTable.1843" }
%"class.WTF::HashTable.1843" = type <{ %"class.blink::Member.1845"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1845" = type opaque
%"class.blink::HeapHashSet.1846" = type { %"class.WTF::HashSet.1849" }
%"class.WTF::HashSet.1849" = type { %"class.WTF::HashTable.1850" }
%"class.WTF::HashTable.1850" = type <{ %"class.blink::Member.1852"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1852" = type { %"class.blink::MemberBase.1853" }
%"class.blink::MemberBase.1853" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2029", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2039", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2029" = type { %"class.blink::MemberBase.2030" }
%"class.blink::MemberBase.2030" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2031", %"class.blink::Member.2033", %"class.blink::Member.2035", %"class.blink::Member.2037", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2031" = type { %"class.blink::MemberBase.2032" }
%"class.blink::MemberBase.2032" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2033" = type { %"class.blink::MemberBase.2034" }
%"class.blink::MemberBase.2034" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2039" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2040", { i64, i64 } }
%"class.blink::WeakMember.2040" = type { %"class.blink::MemberBase.1853" }
%"class.std::__1::unique_ptr.1854" = type { %"class.std::__1::__compressed_pair.1855" }
%"class.std::__1::__compressed_pair.1855" = type { %"struct.std::__1::__compressed_pair_elem.1856" }
%"struct.std::__1::__compressed_pair_elem.1856" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1860" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.1862" = type { %"class.WTF::LinkedHashSet.1865" }
%"class.WTF::LinkedHashSet.1865" = type { %"class.WTF::HashMap.1866", %"class.WTF::VectorBackedLinkedList.1870" }
%"class.WTF::HashMap.1866" = type { %"class.WTF::HashTable.1867" }
%"class.WTF::HashTable.1867" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::VectorBackedLinkedList.1870" = type { %"class.WTF::Vector.1871", i32, i32 }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873" }
%"class.WTF::VectorBufferBase.1873" = type { %"class.WTF::VectorBackedLinkedListNode.1874"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1874" = type opaque
%"class.blink::HeapLinkedHashSet.1876" = type { %"class.WTF::LinkedHashSet.1879" }
%"class.WTF::LinkedHashSet.1879" = type { %"class.WTF::HashMap.1880", %"class.WTF::VectorBackedLinkedList.1884" }
%"class.WTF::HashMap.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"struct.WTF::KeyValuePair.1883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1883" = type opaque
%"class.WTF::VectorBackedLinkedList.1884" = type { %"class.WTF::Vector.1885", i32, i32 }
%"class.WTF::Vector.1885" = type { %"class.WTF::VectorBuffer.1886" }
%"class.WTF::VectorBuffer.1886" = type { %"class.WTF::VectorBufferBase.1887" }
%"class.WTF::VectorBufferBase.1887" = type { %"class.WTF::VectorBackedLinkedListNode.1888"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1888" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1890" = type { %"class.std::__1::__compressed_pair.1891" }
%"class.std::__1::__compressed_pair.1891" = type { %"struct.std::__1::__compressed_pair_elem.1892" }
%"struct.std::__1::__compressed_pair_elem.1892" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1896" = type { %"class.std::__1::__compressed_pair.1897" }
%"class.std::__1::__compressed_pair.1897" = type { %"struct.std::__1::__compressed_pair_elem.1898" }
%"struct.std::__1::__compressed_pair_elem.1898" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1899, %class.scoped_refptr.1899, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1954", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1959", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1899 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1900", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1907" }
%"class.WTF::RefCounted.1900" = type { %"class.base::RefCounted.1901" }
%"class.base::RefCounted.1901" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1902", i32, [4 x i8] }>
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904" }
%"class.WTF::VectorBufferBase.1904" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1907" = type { %"class.WTF::VectorBuffer.1908" }
%"class.WTF::VectorBuffer.1908" = type { %"class.WTF::VectorBufferBase.1909" }
%"class.WTF::VectorBufferBase.1909" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1926", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1913", %"class.WTF::Vector.1918", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1913" = type { %"class.WTF::VectorBuffer.1914" }
%"class.WTF::VectorBuffer.1914" = type { %"class.WTF::VectorBufferBase.1915" }
%"class.WTF::VectorBufferBase.1915" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1918" = type { %"class.WTF::VectorBuffer.1919" }
%"class.WTF::VectorBuffer.1919" = type { %"class.WTF::VectorBufferBase.1920" }
%"class.WTF::VectorBufferBase.1920" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1926" = type { %"class.std::__1::__compressed_pair.1927" }
%"class.std::__1::__compressed_pair.1927" = type { %"struct.std::__1::__compressed_pair_elem.1928" }
%"struct.std::__1::__compressed_pair_elem.1928" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1929", %"class.absl::optional.1929" }
%"class.absl::optional.1929" = type { %"class.absl::optional_internal::optional_data.1930" }
%"class.absl::optional_internal::optional_data.1930" = type { %"class.absl::optional_internal::optional_data_base.1931" }
%"class.absl::optional_internal::optional_data_base.1931" = type { %"class.absl::optional_internal::optional_data_dtor_base.1932" }
%"class.absl::optional_internal::optional_data_dtor_base.1932" = type { i8, [3 x i8], %union.anon.1933 }
%union.anon.1933 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1907"*, %"class.absl::optional.1939", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1939" = type { %"class.absl::optional_internal::optional_data.1940" }
%"class.absl::optional_internal::optional_data.1940" = type { %"class.absl::optional_internal::optional_data_base.1941" }
%"class.absl::optional_internal::optional_data_base.1941" = type { %"class.absl::optional_internal::optional_data_dtor_base.1942" }
%"class.absl::optional_internal::optional_data_dtor_base.1942" = type { i8, %union.anon.1943 }
%union.anon.1943 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1944", %"class.WTF::Vector.1949" }
%"class.WTF::Vector.1944" = type { %"class.WTF::VectorBuffer.1945" }
%"class.WTF::VectorBuffer.1945" = type { %"class.WTF::VectorBufferBase.1946", [128 x i8] }
%"class.WTF::VectorBufferBase.1946" = type { i32*, i32, i32 }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951", [128 x i8] }
%"class.WTF::VectorBufferBase.1951" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1959" = type { %"class.WTF::HashTable.1960" }
%"class.WTF::HashTable.1960" = type <{ %"struct.WTF::KeyValuePair.1963"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1963" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1964", %"class.WTF::Vector.1969" }
%"class.WTF::HashMap.1964" = type { %"class.WTF::HashTable.1965" }
%"class.WTF::HashTable.1965" = type <{ %"struct.WTF::KeyValuePair.1968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1968" = type opaque
%"class.WTF::Vector.1969" = type { %"class.WTF::VectorBuffer.1970" }
%"class.WTF::VectorBuffer.1970" = type { %"class.WTF::VectorBufferBase.1971" }
%"class.WTF::VectorBufferBase.1971" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1977" = type { %"class.std::__1::__compressed_pair.1978" }
%"class.std::__1::__compressed_pair.1978" = type { %"struct.std::__1::__compressed_pair_elem.1979" }
%"struct.std::__1::__compressed_pair_elem.1979" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1983" = type { %"class.WTF::VectorBuffer.1984" }
%"class.WTF::VectorBuffer.1984" = type { %"class.WTF::VectorBufferBase.1985" }
%"class.WTF::VectorBufferBase.1985" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1988 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1995" = type { %"class.WTF::HashSet.1998" }
%"class.WTF::HashSet.1998" = type { %"class.WTF::HashTable.1999" }
%"class.WTF::HashTable.1999" = type <{ %"class.blink::WeakMember.2001"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2001" = type opaque
%"class.blink::HeapHashSet.2002" = type { %"class.WTF::HashSet.2005" }
%"class.WTF::HashSet.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"class.blink::WeakMember.2008"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2008" = type opaque
%"class.std::__1::unique_ptr.2009" = type { %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2012" }
%"class.base::time_internal::TimeBase.2012" = type { i64 }
%"class.std::__1::unique_ptr.2016" = type { %"class.std::__1::__compressed_pair.2017" }
%"class.std::__1::__compressed_pair.2017" = type { %"struct.std::__1::__compressed_pair_elem.2018" }
%"struct.std::__1::__compressed_pair_elem.2018" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2019", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2019" = type { %"class.absl::optional_internal::optional_data.2020" }
%"class.absl::optional_internal::optional_data.2020" = type { %"class.absl::optional_internal::optional_data_base.2021" }
%"class.absl::optional_internal::optional_data_base.2021" = type { %"class.absl::optional_internal::optional_data_dtor_base.2022" }
%"class.absl::optional_internal::optional_data_dtor_base.2022" = type { i8, %union.anon.2023 }
%union.anon.2023 = type { %"class.base::Time" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::TextRun" = type <{ %union.anon.2041, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.2041 = type { i8* }
%"class.WTF::Vector.2042" = type { %"class.WTF::VectorBuffer.2043" }
%"class.WTF::VectorBuffer.2043" = type { %"class.WTF::VectorBufferBase.2044" }
%"class.WTF::VectorBufferBase.2044" = type { %"struct.blink::CharacterRange"*, i32, i32 }
%"struct.blink::CharacterRange" = type { float, float, float, float }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::BidiResolver" = type { %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"struct.blink::BidiStatus", i32, %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", i8, %"class.blink::TextRunIterator", i8, [7 x i8], %"class.blink::BidiRunList", %"class.blink::MidpointState", i32, %"class.WTF::Vector.2052", %"struct.blink::BidiCharacterRun"*, i8, i8, %"class.WTF::Vector.2057", %"class.WTF::HashMap.2062" }
%"struct.blink::BidiStatus" = type { i32, i32, i32, %class.scoped_refptr.1768 }
%"class.blink::TextRunIterator" = type { %"class.blink::TextRun"*, i32, i32 }
%"class.blink::BidiRunList" = type <{ %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"*, i32, [4 x i8] }>
%"class.blink::MidpointState" = type <{ %"class.WTF::Vector.2047", i32, i32, i8, [7 x i8] }>
%"class.WTF::Vector.2047" = type { %"class.WTF::VectorBuffer.2048" }
%"class.WTF::VectorBuffer.2048" = type { %"class.WTF::VectorBufferBase.2049" }
%"class.WTF::VectorBufferBase.2049" = type { %"class.blink::TextRunIterator"*, i32, i32 }
%"class.WTF::Vector.2052" = type { %"class.WTF::VectorBuffer.2053" }
%"class.WTF::VectorBuffer.2053" = type { %"class.WTF::VectorBufferBase.2054" }
%"class.WTF::VectorBufferBase.2054" = type { %"class.blink::NoIsolatedRun"*, i32, i32 }
%"class.blink::NoIsolatedRun" = type { i8 }
%"struct.blink::BidiCharacterRun" = type { i8, i8, %"struct.blink::BidiCharacterRun"*, i32, i32 }
%"class.WTF::Vector.2057" = type { %"class.WTF::VectorBuffer.2058" }
%"class.WTF::VectorBuffer.2058" = type { %"class.WTF::VectorBufferBase.2059", [64 x i8] }
%"class.WTF::VectorBufferBase.2059" = type { %"class.blink::BidiEmbedding"*, i32, i32 }
%"class.blink::BidiEmbedding" = type { i32, i32 }
%"class.WTF::HashMap.2062" = type { %"class.WTF::HashTable.2063" }
%"class.WTF::HashTable.2063" = type <{ %"struct.WTF::KeyValuePair.2066"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2066" = type { %"struct.blink::BidiCharacterRun"*, %"class.blink::MidpointState" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::LayoutNGGridInterface" = type opaque
%"struct.blink::PaintInfo" = type opaque
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1852", i8, %"class.blink::Member.2067", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::HeapLinkedHashSet.2069"* }
%"class.blink::HeapLinkedHashSet.2069" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.WTF::Vector.2070" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2071", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.std::__1::unique_ptr.2071" = type { %"class.std::__1::__compressed_pair.2072" }
%"class.std::__1::__compressed_pair.2072" = type { %"struct.std::__1::__compressed_pair_elem.2073" }
%"struct.std::__1::__compressed_pair_elem.2073" = type { %"class.blink::TransformationMatrix"* }
%"class.WTF::Vector.2077" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.WTF::HashSet.2078" = type opaque
%"class.base::span" = type opaque
%class.anon = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2137" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2124", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2124" = type { %"class.std::__1::__vector_base.2125" }
%"class.std::__1::__vector_base.2125" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2132" }
%"class.std::__1::__compressed_pair.2132" = type { %"struct.std::__1::__compressed_pair_elem.2133" }
%"struct.std::__1::__compressed_pair_elem.2133" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2126", i64, i64 }
%"class.std::__1::unique_ptr.2126" = type { %"class.std::__1::__compressed_pair.2127" }
%"class.std::__1::__compressed_pair.2127" = type { %"struct.std::__1::__compressed_pair_elem.2128" }
%"struct.std::__1::__compressed_pair_elem.2128" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK5blink15SVGTextFragment11BoundingBoxEf = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21CreateBidiRunsForLineERKS1_NS_23VisualDirectionOverrideEbb = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev = comdat any

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv = comdat any

$_ZN5blink19LayoutSVGInlineTextD2Ev = comdat any

$_ZN5blink19LayoutSVGInlineTextD0Ev = comdat any

$_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE = comdat any

$_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv = comdat any

$_ZNK5blink19LayoutSVGInlineText7GetNameEv = comdat any

$_ZN5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink12LayoutObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink19LayoutSVGInlineText17ObjectBoundingBoxEv = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink12LayoutObject18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv = comdat any

$_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE = comdat any

$_ZN5blink10LayoutText12UpdateLayoutEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE = comdat any

$_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink10LayoutText6lengthEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink19LayoutSVGInlineText8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink10LayoutText15TextStartOffsetEv = comdat any

$_ZNK5blink10LayoutText18GetFirstLetterPartEv = comdat any

$_ZNK5blink10LayoutText16GetNGInlineItemsEv = comdat any

$_ZN5blink10LayoutText16GetNGInlineItemsEv = comdat any

$_ZThn8_N5blink19LayoutSVGInlineTextD1Ev = comdat any

$_ZThn8_N5blink19LayoutSVGInlineTextD0Ev = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZNK5blink15SVGTextFragment27BuildTransformForTextOnPathEv = comdat any

$_ZNK5blink15SVGTextFragment27BuildTransformForTextOnLineEv = comdat any

$_ZN5blink11BidiContextD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN5blink16SharedFontFamilyD2Ev = comdat any

$_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGTextMetricsEEEmm = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE = comdat any

$_ZNK5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21ReorderRunsFromLevelsERNS_11BidiRunListIS2_EE = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_ = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE = comdat any

@_ZTVN5blink19LayoutSVGInlineTextE = hidden unnamed_addr constant { [126 x i8*], [7 x i8*] } { [126 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutSVGInlineText"*)* @_ZN5blink19LayoutSVGInlineTextD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutSVGInlineText"*)* @_ZN5blink19LayoutSVGInlineTextD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::ImageResourceObserver"*)* @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutSVGInlineText"*)* @_ZNK5blink19LayoutSVGInlineText7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject8AddChildEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutSVGInlineText"*)* @_ZNK5blink19LayoutSVGInlineText17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutSVGInlineText"*)* @_ZNK5blink19LayoutSVGInlineText31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGInlineText"*)* @_ZN5blink19LayoutSVGInlineText37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32)* @_ZN5blink10LayoutText31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1430"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutSVGInlineText"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink19LayoutSVGInlineText16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"class.WTF::Vector.2070"*, i32)* @_ZNK5blink10LayoutText13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutSVGInlineText"*, i32)* @_ZNK5blink19LayoutSVGInlineText20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutSVGInlineText"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink19LayoutSVGInlineText14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2077"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink10LayoutText15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i8)* @_ZNK5blink10LayoutText28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutSVGInlineText"*, i32)* @_ZNK5blink19LayoutSVGInlineText8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutSVGInlineText"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink19LayoutSVGInlineText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i1)* @_ZN5blink10LayoutText43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText11IsWordBreakEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText12OriginalTextEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText15TextStartOffsetEv to i8*), i8* bitcast (%"class.blink::LayoutText"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText18GetFirstLetterPartEv to i8*), i8* bitcast (float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.2078"*, %"class.blink::FloatRect"*, float)* @_ZNK5blink10LayoutText5WidthEjjRKNS_4FontENS_10LayoutUnitENS_13TextDirectionEPN3WTF7HashSetIPKNS_14SimpleFontDataENS6_7PtrHashIS9_EENS6_10HashTraitsISA_EENS6_18PartitionAllocatorEEEPNS_9FloatRectEf to i8*), i8* bitcast (float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2078"*, %"class.blink::FloatRect"*, float)* @_ZNK5blink10LayoutText5WidthEjjNS_10LayoutUnitENS_13TextDirectionEbPN3WTF7HashSetIPKNS_14SimpleFontDataENS3_7PtrHashIS6_EENS3_10HashTraitsIS7_EENS3_18PartitionAllocatorEEEPNS_9FloatRectEf to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutSVGInlineText"*)* @_ZNK5blink19LayoutSVGInlineText24PhysicalLinesBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText13TransformTextEv to i8*), i8* bitcast (void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)* @_ZNK5blink10LayoutText22PositionForCaretOffsetEj to i8*), i8* bitcast (i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)* @_ZNK5blink10LayoutText22CaretOffsetForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText14CaretMinOffsetEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText14CaretMaxOffsetEv to i8*), i8* bitcast (i16 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText17PreviousCharacterEv to i8*), i8* bitcast (%"class.base::span"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText16GetNGInlineItemsEv to i8*), i8* bitcast (%"class.base::span"* (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText16GetNGInlineItemsEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGInlineText"*)* @_ZN5blink19LayoutSVGInlineText13TextDidChangeEv to i8*), i8* bitcast (%"class.blink::InlineTextBox"* (%"class.blink::LayoutSVGInlineText"*, i32, i16)* @_ZN5blink19LayoutSVGInlineText13CreateTextBoxEit to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutSVGInlineText"*)* @_ZThn8_N5blink19LayoutSVGInlineTextD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutSVGInlineText"*)* @_ZThn8_N5blink19LayoutSVGInlineTextD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason12kTextChangedE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason12kStyleChangeE = external constant [0 x i8], align 1
@__const._ZN5blink19LayoutSVGInlineText28ComputeNewScaledFontForStyleERKNS_12LayoutObjectERfRNS_4FontE.font_description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.7 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.8 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.11 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.21 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.28 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"LayoutSVGInlineText\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGTextMetricsEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGTextMetrics]\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BidiEmbedding]\00", align 1

@_ZN5blink19LayoutSVGInlineTextC1EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE = hidden unnamed_addr alias void (%"class.blink::LayoutSVGInlineText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*), void (%"class.blink::LayoutSVGInlineText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*)* @_ZN5blink19LayoutSVGInlineTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutSVGInlineText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0
  %5 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL19NormalizeWhitespaceE13scoped_refptrIN3WTF10StringImplEE(%"class.WTF::StringImpl"* %2)
  tail call void @_ZN5blink10LayoutTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"* %4, %"class.blink::Node"* %1, %"class.WTF::StringImpl"* %5) #12
  %6 = bitcast %"class.blink::LayoutSVGInlineText"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 2
  tail call void @_ZN5blink4FontC1Ev(%"class.blink::Font"* %8) #12
  %9 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 3
  %10 = bitcast %"class.WTF::HashMap.1691"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #12
  %11 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4
  %12 = bitcast %"class.WTF::Vector.1696"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blinkL19NormalizeWhitespaceE13scoped_refptrIN3WTF10StringImplEE(%"class.WTF::StringImpl"*) unnamed_addr #0 {
  %2 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* %0, i16 zeroext 9, i16 zeroext 32) #12
  %3 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* %2, i16 zeroext 10, i16 zeroext 32) #12
  %4 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* %3, i16 zeroext 13, i16 zeroext 32) #12
  %20 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %34

34:                                               ; preds = %18, %30, %33
  %35 = icmp eq %"class.WTF::StringImpl"* %0, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %0) #12
  br label %49

49:                                               ; preds = %34, %45, %48
  ret %"class.WTF::StringImpl"* %19
}

declare void @_ZN5blink10LayoutTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*) unnamed_addr #1

declare void @_ZN5blink4FontC1Ev(%"class.blink::Font"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineText13TextDidChangeEv(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %1, %7, %22
  %25 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL19NormalizeWhitespaceE13scoped_refptrIN3WTF10StringImplEE(%"class.WTF::StringImpl"* %5)
  tail call void @_ZN5blink10LayoutText15SetTextInternalE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"* %3, %"class.WTF::StringImpl"* %25) #12
  tail call void @_ZN5blink10LayoutText13TextDidChangeEv(%"class.blink::LayoutText"* %3) #12
  tail call void @_ZN5blink13LayoutSVGText29NotifySubtreeStructureChangedEPNS_12LayoutObjectEPKc(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kTextChangedE, i64 0, i64 0)) #12
  %26 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %27 = bitcast %"class.blink::ComputedStyle"** %26 to %"class.blink::ComputedStyleBase"**
  %28 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %30, i64 0, i32 23
  %32 = bitcast [5 x i8]* %31 to i40*
  %33 = load i40, i40* %32, align 8
  %34 = and i40 %33, 201326592
  %35 = icmp eq i40 %34, 0
  br i1 %35, label %58, label %36

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %47

40:                                               ; preds = %36, %40
  %41 = phi %"class.blink::LayoutObject"* [ %43, %40 ], [ %2, %36 ]
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 7
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 6, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %40, label %47

47:                                               ; preds = %40, %36
  %48 = phi %"class.blink::Node"* [ %38, %36 ], [ %45, %40 ]
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 2
  %54 = bitcast %"class.blink::UseCounter"* %53 to void (%"class.blink::UseCounter"*, i32)***
  %55 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %55, i64 3
  %57 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %56, align 8
  tail call void %57(%"class.blink::UseCounter"* %53, i32 3799) #12
  br label %58

58:                                               ; preds = %24, %47
  ret void
}

declare void @_ZN5blink10LayoutText15SetTextInternalE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink10LayoutText13TextDidChangeEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZN5blink13LayoutSVGText29NotifySubtreeStructureChangedEPNS_12LayoutObjectEPKc(%"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutSVGInlineText"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0
  tail call void @_ZN5blink10LayoutText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutText"* %5, i32 %1, %"class.blink::ComputedStyle"* %2) #12
  %6 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 2
  tail call void @_ZN5blink19LayoutSVGInlineText28ComputeNewScaledFontForStyleERKNS_12LayoutObjectERfRNS_4FontE(%"class.blink::LayoutObject"* dereferenceable(88) %4, float* dereferenceable(4) %6, %"class.blink::Font"* dereferenceable(88) %7) #12
  %8 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 520192
  %15 = icmp eq i160 %14, 8192
  %16 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 520192
  %22 = icmp eq i160 %21, 8192
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %3, %17
  %25 = phi i32 [ 0, %3 ], [ %23, %17 ]
  %26 = zext i1 %15 to i32
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call %"class.WTF::StringImpl"* @_ZNK5blink10LayoutText12OriginalTextEv(%"class.blink::LayoutText"* %5) #12
  tail call void @_ZN5blink10LayoutText12ForceSetTextE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"* %5, %"class.WTF::StringImpl"* %29) #12
  br label %50

30:                                               ; preds = %24
  %31 = and i32 %1, 6
  %32 = icmp eq i32 %31, 4
  br i1 %32, label %33, label %50

33:                                               ; preds = %30
  %34 = tail call %"class.blink::LayoutSVGBlock"* @_ZN5blink13LayoutSVGText27LocateLayoutSVGTextAncestorEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %4) #12
  %35 = icmp eq %"class.blink::LayoutSVGBlock"* %34, null
  br i1 %35, label %50, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::LayoutSVGBlock", %"class.blink::LayoutSVGBlock"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::LayoutSVGBlock"* %34 to i1 (%"class.blink::LayoutObject"*, i32)***
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %37, i32 69) #12
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::LayoutSVGBlock", %"class.blink::LayoutSVGBlock"* %34, i64 0, i32 3, i64 0
  %45 = load i8, i8* %44, align 1
  %46 = or i8 %45, 4
  store i8 %46, i8* %44, align 1
  br label %49

47:                                               ; preds = %36
  %48 = bitcast %"class.blink::LayoutSVGBlock"* %34 to %"class.blink::LayoutNGSVGText"*
  tail call void @_ZN5blink15LayoutNGSVGText25SetNeedsTextMetricsUpdateEv(%"class.blink::LayoutNGSVGText"* nonnull %48) #12
  br label %49

49:                                               ; preds = %47, %43
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %37, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kStyleChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %37, i8 zeroext 3) #12
  br label %50

50:                                               ; preds = %49, %33, %30, %28
  ret void
}

declare void @_ZN5blink10LayoutText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineText16UpdateScaledFontEv(%"class.blink::LayoutSVGInlineText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 2
  tail call void @_ZN5blink19LayoutSVGInlineText28ComputeNewScaledFontForStyleERKNS_12LayoutObjectERfRNS_4FontE(%"class.blink::LayoutObject"* dereferenceable(88) %2, float* dereferenceable(4) %3, %"class.blink::Font"* dereferenceable(88) %4)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink10LayoutText12ForceSetTextE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink10LayoutText12OriginalTextEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare %"class.blink::LayoutSVGBlock"* @_ZN5blink13LayoutSVGText27LocateLayoutSVGTextAncestorEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink15LayoutNGSVGText25SetNeedsTextMetricsUpdateEv(%"class.blink::LayoutNGSVGText"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineText37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink12LayoutObject19IsFontFallbackValidEv(%"class.blink::LayoutObject"* %2) #12
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.blink::LayoutSVGBlock"* @_ZN5blink13LayoutSVGText27LocateLayoutSVGTextAncestorEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %2) #12
  %6 = icmp eq %"class.blink::LayoutSVGBlock"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::LayoutSVGBlock", %"class.blink::LayoutSVGBlock"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutSVGBlock"* %5 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8, i32 69) #12
  br i1 %13, label %14, label %18

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::LayoutSVGBlock", %"class.blink::LayoutSVGBlock"* %5, i64 0, i32 3, i64 0
  %16 = load i8, i8* %15, align 1
  %17 = or i8 %16, 4
  store i8 %17, i8* %15, align 1
  br label %20

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::LayoutSVGBlock"* %5 to %"class.blink::LayoutNGSVGText"*
  tail call void @_ZN5blink15LayoutNGSVGText25SetNeedsTextMetricsUpdateEv(%"class.blink::LayoutNGSVGText"* nonnull %19) #12
  br label %20

20:                                               ; preds = %4, %18, %14, %1
  %21 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0
  tail call void @_ZN5blink10LayoutText37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutText"* %21) #12
  ret void
}

declare zeroext i1 @_ZNK5blink12LayoutObject19IsFontFallbackValidEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink10LayoutText37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineTextBox"* @_ZN5blink19LayoutSVGInlineText13CreateTextBoxEit(%"class.blink::LayoutSVGInlineText"*, i32, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0
  %5 = tail call i8* @_ZN5blink9InlineBoxnwEm(i64 112) #12
  %6 = bitcast i8* %5 to %"class.blink::SVGInlineTextBox"*
  tail call void @_ZN5blink16SVGInlineTextBoxC1ENS_14LineLayoutItemEit(%"class.blink::SVGInlineTextBox"* %6, %"class.blink::LayoutObject"* %4, i32 %1, i16 zeroext %2) #12
  %7 = bitcast i8* %5 to %"class.blink::InlineTextBox"*
  %8 = getelementptr inbounds i8, i8* %5, i64 60
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = or i32 %10, 1024
  store i32 %11, i32* %9, align 4
  ret %"class.blink::InlineTextBox"* %7
}

declare i8* @_ZN5blink9InlineBoxnwEm(i64) local_unnamed_addr #1

declare void @_ZN5blink16SVGInlineTextBoxC1ENS_14LineLayoutItemEit(%"class.blink::SVGInlineTextBox"*, %"class.blink::LayoutObject"*, i32, i16 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink19LayoutSVGInlineText14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutSVGInlineText"* nocapture readonly, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0
  %6 = icmp eq %"class.blink::InlineBox"* %1, null
  br i1 %6, label %119, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.blink::InlineBox"* %1 to i1 (%"class.blink::InlineBox"*)***
  %9 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %9, i64 15
  %11 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::InlineBox"* nonnull %1) #12
  br i1 %12, label %13, label %119

13:                                               ; preds = %7
  %14 = bitcast %"class.blink::InlineBox"* %1 to %"class.blink::InlineTextBox"*
  %15 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 1, i32 1
  %16 = bitcast %"class.blink::InlineBox"** %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = icmp ugt i32 %17, %2
  br i1 %18, label %119, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %14, i64 0, i32 4
  %21 = load i16, i16* %20, align 4
  %22 = zext i16 %21 to i32
  %23 = add i32 %17, %22
  %24 = icmp ult i32 %23, %2
  br i1 %24, label %119, label %25

25:                                               ; preds = %19
  %26 = icmp ugt i32 %23, %2
  br i1 %26, label %27, label %73

27:                                               ; preds = %25
  %28 = add nuw nsw i32 %2, 1
  %29 = bitcast %"class.blink::InlineBox"* %1 to { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)***
  %30 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)**, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*** %29, align 8
  %31 = getelementptr inbounds { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %30, i64 33
  %32 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %31, align 8
  %33 = tail call { i64, i64 } %32(%"class.blink::InlineTextBox"* nonnull %14, i32 %2, i32 %28, i1 zeroext true) #12
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = trunc i64 %34 to i32
  %36 = and i64 %34, -4294967296
  %37 = extractvalue { i64, i64 } %33, 1
  %38 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %27
  %43 = trunc i64 %37 to i32
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %43) #12
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  br label %50

50:                                               ; preds = %27, %42
  %51 = phi i32 [ %49, %42 ], [ %35, %27 ]
  %52 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %55, label %62

55:                                               ; preds = %50, %55
  %56 = phi %"class.blink::LayoutObject"* [ %58, %55 ], [ %5, %50 ]
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 7
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 6, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %55, label %62

62:                                               ; preds = %55, %50
  %63 = phi %"class.blink::Node"* [ %53, %50 ], [ %60, %55 ]
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::Document"*, %"class.blink::Document"** %66, align 8
  %68 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %67) #12
  %69 = tail call i32 @_ZNK5blink14LocalFrameView10CaretWidthEv(%"class.blink::LocalFrameView"* %68) #12
  %70 = and i64 %37, -4294967296
  %71 = zext i32 %69 to i64
  %72 = or i64 %70, %71
  br label %119

73:                                               ; preds = %25
  %74 = add nsw i32 %2, -1
  %75 = bitcast %"class.blink::InlineBox"* %1 to { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)***
  %76 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)**, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*** %75, align 8
  %77 = getelementptr inbounds { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %76, i64 33
  %78 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %77, align 8
  %79 = tail call { i64, i64 } %78(%"class.blink::InlineTextBox"* nonnull %14, i32 %74, i32 %2, i1 zeroext true) #12
  %80 = extractvalue { i64, i64 } %79, 0
  %81 = trunc i64 %80 to i32
  %82 = and i64 %80, -4294967296
  %83 = extractvalue { i64, i64 } %79, 1
  %84 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %96

88:                                               ; preds = %73
  %89 = trunc i64 %83 to i32
  %90 = icmp slt i32 %89, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %89) #12
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !2
  br label %96

96:                                               ; preds = %73, %88
  %97 = phi i32 [ %95, %88 ], [ %81, %73 ]
  %98 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %99 = load %"class.blink::Node"*, %"class.blink::Node"** %98, align 8
  %100 = icmp eq %"class.blink::Node"* %99, null
  br i1 %100, label %101, label %108

101:                                              ; preds = %96, %101
  %102 = phi %"class.blink::LayoutObject"* [ %104, %101 ], [ %5, %96 ]
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 0, i32 7
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 6, i32 0, i32 0
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %107 = icmp eq %"class.blink::Node"* %106, null
  br i1 %107, label %101, label %108

108:                                              ; preds = %101, %96
  %109 = phi %"class.blink::Node"* [ %99, %96 ], [ %106, %101 ]
  %110 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 0, i32 3, i32 0, i32 0
  %111 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %111, i64 0, i32 2, i32 0, i32 0
  %113 = load %"class.blink::Document"*, %"class.blink::Document"** %112, align 8
  %114 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %113) #12
  %115 = tail call i32 @_ZNK5blink14LocalFrameView10CaretWidthEv(%"class.blink::LocalFrameView"* %114) #12
  %116 = and i64 %83, -4294967296
  %117 = zext i32 %115 to i64
  %118 = or i64 %116, %117
  br label %119

119:                                              ; preds = %13, %19, %7, %4, %62, %108
  %120 = phi i32 [ %51, %62 ], [ %97, %108 ], [ 0, %4 ], [ 0, %7 ], [ 0, %19 ], [ 0, %13 ]
  %121 = phi i64 [ %36, %62 ], [ %82, %108 ], [ 0, %4 ], [ 0, %7 ], [ 0, %19 ], [ 0, %13 ]
  %122 = phi i64 [ %72, %62 ], [ %118, %108 ], [ 0, %4 ], [ 0, %7 ], [ 0, %19 ], [ 0, %13 ]
  %123 = zext i32 %120 to i64
  %124 = or i64 %121, %123
  %125 = insertvalue { i64, i64 } undef, i64 %124, 0
  %126 = insertvalue { i64, i64 } %125, i64 %122, 1
  ret { i64, i64 } %126
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @_ZNK5blink14LocalFrameView10CaretWidthEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink19LayoutSVGInlineText21FloatLinesBoundingBoxEv(%"class.blink::LayoutSVGInlineText"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %"class.blink::FloatRect"*
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %6 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #12
  %7 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 268435456
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #12
  br label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 9, i32 0
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi %"class.blink::InlineTextBoxList"* [ %13, %12 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %20 = icmp eq %"class.blink::InlineTextBox"* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %16
  %22 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  br label %35

25:                                               ; preds = %62
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %27 = load <2 x float>, <2 x float>* %26, align 8
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %29 = load <2 x float>, <2 x float>* %28, align 8
  br label %30

30:                                               ; preds = %25, %16
  %31 = phi <2 x float> [ %29, %25 ], [ zeroinitializer, %16 ]
  %32 = phi <2 x float> [ %27, %25 ], [ zeroinitializer, %16 ]
  %33 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %32, 0
  %34 = insertvalue { <2 x float>, <2 x float> } %33, <2 x float> %31, 1
  ret { <2 x float>, <2 x float> } %34

35:                                               ; preds = %21, %62
  %36 = phi %"class.blink::InlineTextBox"* [ %19, %21 ], [ %77, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %37 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 0, i32 5, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 0, i32 5, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 0, i32 7, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 2048
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 0, i32 6, i32 0
  %48 = load i32, i32* %47, align 8
  br label %52

49:                                               ; preds = %35
  %50 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %37) #12
  %51 = load i32, i32* %42, align 4
  br label %52

52:                                               ; preds = %49, %46
  %53 = phi i32 [ %43, %46 ], [ %51, %49 ]
  %54 = phi i32 [ %48, %46 ], [ %50, %49 ]
  %55 = and i32 %53, 2048
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %37) #12
  br label %62

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 0, i32 6, i32 0
  %61 = load i32, i32* %60, align 8
  br label %62

62:                                               ; preds = %57, %59
  %63 = phi i32 [ %58, %57 ], [ %61, %59 ]
  %64 = sitofp i32 %39 to float
  %65 = fmul float %64, 1.562500e-02
  %66 = sitofp i32 %41 to float
  %67 = fmul float %66, 1.562500e-02
  %68 = sitofp i32 %54 to float
  %69 = fmul float %68, 1.562500e-02
  %70 = sitofp i32 %63 to float
  %71 = fmul float %70, 1.562500e-02
  %72 = insertelement <2 x float> undef, float %65, i32 0
  %73 = insertelement <2 x float> %72, float %67, i32 1
  %74 = insertelement <2 x float> undef, float %69, i32 0
  %75 = insertelement <2 x float> %74, float %71, i32 1
  store <2 x float> %73, <2 x float>* %23, align 8
  store <2 x float> %75, <2 x float>* %24, align 8
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  %76 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 2
  %77 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %76, align 8
  %78 = icmp eq %"class.blink::InlineTextBox"* %77, null
  br i1 %78, label %25, label %35
}

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink19LayoutSVGInlineText24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutSVGInlineText"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call { <2 x float>, <2 x float> } @_ZNK5blink19LayoutSVGInlineText21FloatLinesBoundingBoxEv(%"class.blink::LayoutSVGInlineText"* %0)
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %3, i32 0
  %6 = fmul float %5, 6.400000e+01
  %7 = tail call float @llvm.floor.f32(float %6) #12
  %8 = fcmp ult float %7, 0xC1E0000000000000
  %9 = fcmp ugt float %7, 0x41DFFFFFE0000000
  %10 = fcmp ogt float %7, 0xC1E0000000000000
  %11 = select i1 %10, float %7, float 0xC1E0000000000000
  %12 = fptosi float %11 to i32
  %13 = select i1 %8, i32 0, i32 2147483647
  %14 = select i1 %9, i32 %13, i32 %12
  %15 = extractelement <2 x float> %3, i32 1
  %16 = fmul float %15, 6.400000e+01
  %17 = tail call float @llvm.floor.f32(float %16) #12
  %18 = fcmp ult float %17, 0xC1E0000000000000
  %19 = fcmp ugt float %17, 0x41DFFFFFE0000000
  %20 = fcmp ogt float %17, 0xC1E0000000000000
  %21 = select i1 %20, float %17, float 0xC1E0000000000000
  %22 = fptosi float %21 to i32
  %23 = select i1 %18, i32 0, i32 2147483647
  %24 = select i1 %19, i32 %23, i32 %22
  %25 = extractelement <2 x float> %4, i32 0
  %26 = fadd float %5, %25
  %27 = fmul float %26, 6.400000e+01
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fcmp ult float %28, 0xC1E0000000000000
  %30 = fcmp ugt float %28, 0x41DFFFFFE0000000
  %31 = fcmp ogt float %28, 0xC1E0000000000000
  %32 = select i1 %31, float %28, float 0xC1E0000000000000
  %33 = fptosi float %32 to i32
  %34 = select i1 %29, i32 0, i32 2147483647
  %35 = select i1 %30, i32 %34, i32 %33
  %36 = icmp sgt i32 %14, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %35, i32 %14) #12
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !2
  %42 = extractelement <2 x float> %4, i32 1
  %43 = fadd float %15, %42
  %44 = fmul float %43, 6.400000e+01
  %45 = tail call float @llvm.ceil.f32(float %44) #12
  %46 = fcmp ult float %45, 0xC1E0000000000000
  %47 = fcmp ugt float %45, 0x41DFFFFFE0000000
  %48 = fcmp ogt float %45, 0xC1E0000000000000
  %49 = select i1 %48, float %45, float 0xC1E0000000000000
  %50 = fptosi float %49 to i32
  %51 = select i1 %46, i32 0, i32 2147483647
  %52 = select i1 %47, i32 %51, i32 %50
  %53 = icmp sgt i32 %24, -1
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %52, i32 %24) #12
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  %59 = zext i32 %24 to i64
  %60 = shl nuw i64 %59, 32
  %61 = zext i32 %14 to i64
  %62 = or i64 %60, %61
  %63 = zext i32 %58 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %41 to i64
  %66 = or i64 %64, %65
  %67 = insertvalue { i64, i64 } undef, i64 %62, 0
  %68 = insertvalue { i64, i64 } %67, i64 %66, 1
  ret { i64, i64 } %68
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19LayoutSVGInlineText27CharacterStartsNewTextChunkEi(%"class.blink::LayoutSVGInlineText"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %16

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 7
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* %6, i32 70) #12
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 8
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %93, label %16

16:                                               ; preds = %12, %2, %4
  %17 = add nsw i32 %1, 1
  %18 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.1695"*, %"struct.WTF::KeyValuePair.1695"** %18, align 8
  %20 = icmp eq %"struct.WTF::KeyValuePair.1695"* %19, null
  %21 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  br i1 %20, label %77, label %23

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  %25 = zext i32 %24 to i64
  %26 = shl i32 %17, 15
  %27 = sub i32 %1, %26
  %28 = lshr i32 %27, 10
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, 9
  %31 = lshr i32 %30, 6
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 11
  %34 = xor i32 %33, -1
  %35 = add i32 %32, %34
  %36 = lshr i32 %35, 16
  %37 = xor i32 %36, %35
  %38 = and i32 %24, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %19, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, %17
  br i1 %43, label %72, label %44

44:                                               ; preds = %23
  %45 = xor i32 %37, -1
  %46 = lshr i32 %35, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %63, %44
  %59 = phi i32 [ %42, %44 ], [ %70, %63 ]
  %60 = phi i64 [ %39, %44 ], [ %67, %63 ]
  %61 = phi i64 [ 0, %44 ], [ %65, %63 ]
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = icmp eq i64 %61, 0
  %65 = select i1 %64, i64 %57, i64 %61
  %66 = add i64 %65, %60
  %67 = and i64 %66, %25
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %19, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %17
  br i1 %71, label %72, label %58

72:                                               ; preds = %63, %23
  %73 = phi %"struct.WTF::KeyValuePair.1695"* [ %40, %23 ], [ %68, %63 ]
  %74 = icmp eq %"struct.WTF::KeyValuePair.1695"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = zext i32 %22 to i64
  br label %80

77:                                               ; preds = %58, %72, %16
  %78 = zext i32 %22 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %19, i64 %78
  br label %80

80:                                               ; preds = %75, %77
  %81 = phi i64 [ %76, %75 ], [ %78, %77 ]
  %82 = phi %"struct.WTF::KeyValuePair.1695"* [ %73, %75 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %19, i64 %81
  %84 = icmp eq %"struct.WTF::KeyValuePair.1695"* %82, %83
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %82, i64 0, i32 1, i32 0
  %87 = load float, float* %86, align 4
  %88 = fcmp ord float %87, 0.000000e+00
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.1695", %"struct.WTF::KeyValuePair.1695"* %82, i64 0, i32 1, i32 1
  %91 = load float, float* %90, align 4
  %92 = fcmp ord float %91, 0.000000e+00
  br label %93

93:                                               ; preds = %80, %89, %85, %12
  %94 = phi i1 [ true, %12 ], [ false, %80 ], [ true, %85 ], [ %92, %89 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19LayoutSVGInlineText16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutSVGInlineText"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #3 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %8 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %1, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %1, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZNK5blink10LayoutText18HasInlineFragmentsEv(%"class.blink::LayoutText"* %9) #12
  br i1 %10, label %11, label %19

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %1, i64 0, i32 0, i32 7, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %11, %15, %3
  tail call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %8, i32 0) #12
  br label %160

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %1, i64 0, i32 2
  %22 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %21) #12
  %23 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %22, i64 0, i32 2
  %24 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %23, align 8
  %25 = icmp eq %"class.blink::SimpleFontData"* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %21, i64 0, i32 0
  %28 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %22, %"class.blink::FontDescription"* dereferenceable(80) %27) #12
  store %"class.blink::SimpleFontData"* %28, %"class.blink::SimpleFontData"** %23, align 8
  %29 = icmp eq %"class.blink::SimpleFontData"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %20, %26
  %31 = phi %"class.blink::SimpleFontData"* [ %28, %26 ], [ %24, %20 ]
  %32 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %31, i64 0, i32 1, i32 1
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %1, i64 0, i32 1
  %35 = load float, float* %34, align 8
  %36 = fdiv float %33, %35
  br label %37

37:                                               ; preds = %26, %30
  %38 = phi float [ %36, %30 ], [ 0.000000e+00, %26 ]
  %39 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %8, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %40 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  %42 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sitofp i32 %44 to float
  %46 = fmul float %45, 1.562500e-02
  %47 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = fmul float %49, 1.562500e-02
  %51 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %39, i64 0, i32 0, i32 2
  %52 = bitcast %"class.blink::LayoutRect"* %51 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = trunc i64 %53 to i32
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  %57 = sitofp i32 %54 to float
  %58 = fmul float %57, 1.562500e-02
  %59 = sitofp i32 %56 to float
  %60 = fmul float %59, 1.562500e-02
  %61 = fadd float %58, %46
  store float %61, float* %41, align 8
  %62 = fadd float %50, %60
  store float %62, float* %42, align 4
  %63 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %1, i64 0, i32 0, i32 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 268435456
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %37
  %69 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #12
  br label %72

70:                                               ; preds = %37
  %71 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %1, i64 0, i32 0, i32 9, i32 0
  br label %72

72:                                               ; preds = %68, %70
  %73 = phi %"class.blink::InlineTextBoxList"* [ %69, %68 ], [ %71, %70 ]
  %74 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %74, align 8
  %76 = icmp eq %"class.blink::InlineTextBox"* %75, null
  br i1 %76, label %151, label %77

77:                                               ; preds = %72
  %78 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0, i64 0
  %80 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %82 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %83 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  br label %86

84:                                               ; preds = %143
  %85 = icmp eq %"struct.blink::SVGTextFragment"* %144, null
  br i1 %85, label %151, label %152

86:                                               ; preds = %77, %143
  %87 = phi %"class.blink::InlineTextBox"* [ %75, %77 ], [ %149, %143 ]
  %88 = phi float [ 0x47EFFFFFE0000000, %77 ], [ %147, %143 ]
  %89 = phi float [ 0.000000e+00, %77 ], [ %146, %143 ]
  %90 = phi %"class.blink::SVGInlineTextBox"* [ null, %77 ], [ %145, %143 ]
  %91 = phi %"struct.blink::SVGTextFragment"* [ null, %77 ], [ %144, %143 ]
  %92 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %87, i64 0, i32 0
  %93 = bitcast %"class.blink::InlineTextBox"* %87 to i1 (%"class.blink::InlineBox"*)***
  %94 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %94, i64 17
  %96 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %95, align 8
  %97 = call zeroext i1 %96(%"class.blink::InlineBox"* %92) #12
  %98 = bitcast %"class.blink::InlineTextBox"* %87 to %"class.blink::SVGInlineTextBox"*
  br i1 %97, label %99, label %143

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %87, i64 1, i32 0, i32 0, i32 1
  %101 = bitcast i8* %100 to %"struct.blink::SVGTextFragment"**
  %102 = load %"struct.blink::SVGTextFragment"*, %"struct.blink::SVGTextFragment"** %101, align 8
  %103 = getelementptr inbounds i8, i8* %100, i64 12
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %102, i64 %106
  %108 = icmp eq i32 %105, 0
  br i1 %108, label %143, label %109

109:                                              ; preds = %99, %136
  %110 = phi %"struct.blink::SVGTextFragment"* [ %141, %136 ], [ %102, %99 ]
  %111 = phi float [ %140, %136 ], [ %88, %99 ]
  %112 = phi float [ %139, %136 ], [ %89, %99 ]
  %113 = phi %"class.blink::SVGInlineTextBox"* [ %138, %136 ], [ %90, %99 ]
  %114 = phi %"struct.blink::SVGTextFragment"* [ %137, %136 ], [ %91, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -1, i64 16, i1 false)
  %115 = call { <2 x float>, <2 x float> } @_ZNK5blink15SVGTextFragment11BoundingBoxEf(%"struct.blink::SVGTextFragment"* %110, float %38)
  %116 = extractvalue { <2 x float>, <2 x float> } %115, 0
  store <2 x float> %116, <2 x float>* %81, align 8
  %117 = extractvalue { <2 x float>, <2 x float> } %115, 1
  store <2 x float> %117, <2 x float>* %82, align 8
  %118 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* nonnull %7, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %5, i32 0) #12
  br i1 %118, label %121, label %119

119:                                              ; preds = %109
  %120 = call float @_ZNK5blink9FloatRect17SquaredDistanceToERKNS_10FloatPointE(%"class.blink::FloatRect"* nonnull %7, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %5) #12
  br label %121

121:                                              ; preds = %119, %109
  %122 = phi float [ 0.000000e+00, %109 ], [ %120, %119 ]
  %123 = fcmp ugt float %122, %111
  br i1 %123, label %136, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %110, i64 0, i32 2
  %126 = load i32, i32* %125, align 8
  %127 = icmp slt i32 %126, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %124
  %129 = load float, float* %42, align 4
  %130 = load float, float* %80, align 4
  %131 = fsub float %129, %130
  br label %136

132:                                              ; preds = %124
  %133 = load float, float* %41, align 8
  %134 = load float, float* %79, align 8
  %135 = fsub float %133, %134
  br label %136

136:                                              ; preds = %128, %132, %121
  %137 = phi %"struct.blink::SVGTextFragment"* [ %114, %121 ], [ %110, %132 ], [ %110, %128 ]
  %138 = phi %"class.blink::SVGInlineTextBox"* [ %113, %121 ], [ %98, %132 ], [ %98, %128 ]
  %139 = phi float [ %112, %121 ], [ %135, %132 ], [ %131, %128 ]
  %140 = phi float [ %111, %121 ], [ %122, %132 ], [ %122, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #12
  %141 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %110, i64 1
  %142 = icmp eq %"struct.blink::SVGTextFragment"* %141, %107
  br i1 %142, label %143, label %109

143:                                              ; preds = %136, %99, %86
  %144 = phi %"struct.blink::SVGTextFragment"* [ %91, %86 ], [ %91, %99 ], [ %137, %136 ]
  %145 = phi %"class.blink::SVGInlineTextBox"* [ %90, %86 ], [ %90, %99 ], [ %138, %136 ]
  %146 = phi float [ %89, %86 ], [ %89, %99 ], [ %139, %136 ]
  %147 = phi float [ %88, %86 ], [ %88, %99 ], [ %140, %136 ]
  %148 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %87, i64 0, i32 2
  %149 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %148, align 8
  %150 = icmp eq %"class.blink::InlineTextBox"* %149, null
  br i1 %150, label %84, label %86

151:                                              ; preds = %72, %84
  call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %8, i32 0) #12
  br label %159

152:                                              ; preds = %84
  %153 = call i32 @_ZNK5blink16SVGInlineTextBox27OffsetForPositionInFragmentERKNS_15SVGTextFragmentEf(%"class.blink::SVGInlineTextBox"* %145, %"struct.blink::SVGTextFragment"* nonnull dereferenceable(104) %144, float %146) #12
  %154 = getelementptr inbounds %"class.blink::SVGInlineTextBox", %"class.blink::SVGInlineTextBox"* %145, i64 0, i32 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = add i32 %155, %153
  %157 = icmp slt i32 %153, 1
  %158 = zext i1 %157 to i32
  call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEiNS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %8, i32 %156, i32 %158) #12
  br label %159

159:                                              ; preds = %152, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %160

160:                                              ; preds = %159, %19
  ret void
}

declare zeroext i1 @_ZNK5blink10LayoutText18HasInlineFragmentsEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink15SVGTextFragment11BoundingBoxEf(%"struct.blink::SVGTextFragment"*, float) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::FloatRect", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = bitcast %"class.blink::FloatRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %0, i64 0, i32 3
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %0, i64 0, i32 4
  %13 = load float, float* %12, align 8
  %14 = fsub float %13, %1
  %15 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %0, i64 0, i32 5
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %0, i64 0, i32 6
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = bitcast %"class.blink::FloatRect"* %3 to i32*
  store i32 %11, i32* %21, align 8
  store float %14, float* %6, align 4
  %22 = bitcast float* %7 to i32*
  store i32 %17, i32* %22, align 8
  %23 = bitcast float* %8 to i32*
  store i32 %20, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %0, i64 0, i32 9
  %25 = load float, float* %24, align 8
  %26 = fcmp une float %25, 1.000000e+00
  br i1 %26, label %36, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %0, i64 0, i32 8
  %29 = tail call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %28) #12
  br i1 %29, label %30, label %36

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::FloatRect"* %3 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 8
  %33 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %3, i64 0, i32 1
  %34 = bitcast %"class.blink::FloatSize"* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 8
  br label %48

36:                                               ; preds = %27, %2
  %37 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 8, !noalias !3
  %40 = and i32 %39, 1073741824
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %36
  call void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnPathEv(%"class.blink::AffineTransform"* nonnull sret %4, %"struct.blink::SVGTextFragment"* %0) #12
  br label %44

43:                                               ; preds = %36
  call void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnLineEv(%"class.blink::AffineTransform"* nonnull sret %4, %"struct.blink::SVGTextFragment"* %0) #12
  br label %44

44:                                               ; preds = %42, %43
  %45 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #12
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #12
  br label %48

48:                                               ; preds = %44, %30
  %49 = phi <2 x float> [ %46, %44 ], [ %32, %30 ]
  %50 = phi <2 x float> [ %47, %44 ], [ %35, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  %51 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %49, 0
  %52 = insertvalue { <2 x float>, <2 x float> } %51, <2 x float> %50, 1
  ret { <2 x float>, <2 x float> } %52
}

declare zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"*, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #1

declare float @_ZNK5blink9FloatRect17SquaredDistanceToERKNS_10FloatPointE(%"class.blink::FloatRect"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK5blink16SVGInlineTextBox27OffsetForPositionInFragmentERKNS_15SVGTextFragmentEf(%"class.blink::SVGInlineTextBox"*, %"struct.blink::SVGTextFragment"* dereferenceable(104), float) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEiNS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineText17AddMetricsFromRunERKNS_7TextRunERb(%"class.blink::LayoutSVGInlineText"*, %"class.blink::TextRun"* dereferenceable(40), i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.2042", align 8
  %5 = alloca %"class.blink::SVGTextMetrics", align 4
  %6 = alloca %"class.blink::SVGTextMetrics", align 4
  %7 = bitcast %"class.WTF::Vector.2042"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.2042", %"class.WTF::Vector.2042"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.2042", %"class.WTF::Vector.2042"* %4, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 2
  %11 = bitcast %"class.WTF::Vector.2042"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink4Font25IndividualCharacterRangesERKNS_7TextRunE(%"class.WTF::Vector.2042"* nonnull sret %4, %"class.blink::Font"* %10, %"class.blink::TextRun"* dereferenceable(40) %1) #12
  %12 = load i32, i32* %9, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %105

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %1, i64 0, i32 5
  %16 = bitcast %"class.blink::TextRun"* %1 to i16**
  %17 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %1, i64 0, i32 2
  br label %18

18:                                               ; preds = %102, %14
  %19 = phi i32 [ %12, %14 ], [ %21, %102 ]
  %20 = phi i32 [ 0, %14 ], [ %103, %102 ]
  %21 = add nsw i32 %19, -1
  %22 = call dereferenceable(16) %"struct.blink::CharacterRange"* @_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2042"* nonnull %4, i32 %21) #12
  %23 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %22, i64 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %22, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fsub float %24, %26
  %28 = fcmp oeq float %27, 0.000000e+00
  br i1 %28, label %29, label %31

29:                                               ; preds = %18
  %30 = add i32 %20, 1
  br label %102

31:                                               ; preds = %18
  %32 = icmp eq i32 %20, 0
  br i1 %32, label %102, label %33

33:                                               ; preds = %31
  %34 = add i32 %20, %19
  %35 = icmp ult i32 %21, %34
  br i1 %35, label %36, label %66

36:                                               ; preds = %33
  %37 = load i16, i16* %15, align 8
  %38 = and i16 %37, 4
  %39 = icmp eq i16 %38, 0
  br label %40

40:                                               ; preds = %61, %36
  %41 = phi i32 [ 0, %36 ], [ %64, %61 ]
  %42 = phi i32 [ %21, %36 ], [ %63, %61 ]
  br i1 %39, label %43, label %61

43:                                               ; preds = %40
  %44 = load i16*, i16** %16, align 8
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds i16, i16* %44, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = and i16 %47, -1024
  %49 = icmp eq i16 %48, -10240
  br i1 %49, label %50, label %61

50:                                               ; preds = %43
  %51 = add nuw i32 %42, 1
  %52 = load i32, i32* %17, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %54, label %61

54:                                               ; preds = %50
  %55 = zext i32 %51 to i64
  %56 = getelementptr inbounds i16, i16* %44, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = and i16 %57, -1024
  %59 = icmp eq i16 %58, -9216
  %60 = select i1 %59, i32 2, i32 1
  br label %61

61:                                               ; preds = %54, %50, %43, %40
  %62 = phi i32 [ 1, %43 ], [ 1, %50 ], [ 1, %40 ], [ %60, %54 ]
  %63 = add i32 %62, %42
  %64 = add i32 %41, 1
  %65 = icmp ult i32 %63, %34
  br i1 %65, label %40, label %66

66:                                               ; preds = %61, %33
  %67 = phi i32 [ 0, %33 ], [ %64, %61 ]
  %68 = uitofp i32 %67 to float
  %69 = fdiv float %27, %68
  br label %70

70:                                               ; preds = %98, %66
  %71 = phi float [ %26, %66 ], [ %75, %98 ]
  %72 = phi i32 [ %21, %66 ], [ %100, %98 ]
  %73 = call dereferenceable(16) %"struct.blink::CharacterRange"* @_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2042"* nonnull %4, i32 %72) #12
  %74 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %73, i64 0, i32 0
  store float %71, float* %74, align 4
  %75 = fadd float %69, %71
  %76 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %73, i64 0, i32 1
  store float %75, float* %76, align 4
  %77 = load i16, i16* %15, align 8
  %78 = and i16 %77, 4
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %80, label %98

80:                                               ; preds = %70
  %81 = load i16*, i16** %16, align 8
  %82 = zext i32 %72 to i64
  %83 = getelementptr inbounds i16, i16* %81, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = and i16 %84, -1024
  %86 = icmp eq i16 %85, -10240
  br i1 %86, label %87, label %98

87:                                               ; preds = %80
  %88 = add i32 %72, 1
  %89 = load i32, i32* %17, align 4
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %91, label %98

91:                                               ; preds = %87
  %92 = zext i32 %88 to i64
  %93 = getelementptr inbounds i16, i16* %81, i64 %92
  %94 = load i16, i16* %93, align 2
  %95 = and i16 %94, -1024
  %96 = icmp eq i16 %95, -9216
  %97 = select i1 %96, i32 2, i32 1
  br label %98

98:                                               ; preds = %91, %87, %80, %70
  %99 = phi i32 [ 1, %80 ], [ 1, %87 ], [ 1, %70 ], [ %97, %91 ]
  %100 = add i32 %99, %72
  %101 = icmp ult i32 %100, %34
  br i1 %101, label %70, label %102

102:                                              ; preds = %98, %31, %29
  %103 = phi i32 [ %30, %29 ], [ 0, %31 ], [ 0, %98 ]
  %104 = icmp sgt i32 %21, 0
  br i1 %104, label %18, label %105

105:                                              ; preds = %102, %3
  %106 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %10) #12
  %107 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %106, i64 0, i32 2
  %108 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %107, align 8
  %109 = icmp eq %"class.blink::SimpleFontData"* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %10, i64 0, i32 0
  %112 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %106, %"class.blink::FontDescription"* dereferenceable(80) %111) #12
  store %"class.blink::SimpleFontData"* %112, %"class.blink::SimpleFontData"** %107, align 8
  %113 = icmp eq %"class.blink::SimpleFontData"* %112, null
  br i1 %113, label %229, label %114

114:                                              ; preds = %105, %110
  %115 = phi %"class.blink::SimpleFontData"* [ %112, %110 ], [ %108, %105 ]
  %116 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %115, i64 0, i32 1, i32 1
  %117 = load float, float* %116, align 4
  %118 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %115, i64 0, i32 1, i32 2
  %119 = load float, float* %118, align 4
  %120 = fadd float %117, %119
  %121 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 1
  %122 = load float, float* %121, align 8
  %123 = fdiv float %120, %122
  %124 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %125 = bitcast %"class.blink::ComputedStyle"** %124 to %"class.blink::ComputedStyleBase"**
  %126 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %126, i64 0, i32 9
  %128 = bitcast [20 x i8]* %127 to i160*
  %129 = load i160, i160* %128, align 8
  %130 = and i160 %129, 520192
  %131 = icmp eq i160 %130, 8192
  %132 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %1, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %229, label %135

135:                                              ; preds = %114
  %136 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %1, i64 0, i32 5
  %137 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %1, i64 0, i32 0, i32 0
  %138 = bitcast %"class.blink::TextRun"* %1 to i16**
  %139 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4
  %140 = bitcast %"class.blink::SVGTextMetrics"* %5 to i8*
  %141 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %142 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %143 = getelementptr inbounds %"class.WTF::Vector.1696", %"class.WTF::Vector.1696"* %139, i64 0, i32 0, i32 0, i32 0
  %144 = bitcast %"class.blink::SVGTextMetrics"* %6 to i8*
  br label %145

145:                                              ; preds = %135, %225
  %146 = phi i32 [ 0, %135 ], [ %227, %225 ]
  %147 = load i16, i16* %136, align 8
  %148 = and i16 %147, 4
  %149 = icmp eq i16 %148, 0
  br i1 %149, label %157, label %150

150:                                              ; preds = %145
  %151 = load i8*, i8** %137, align 8
  %152 = zext i32 %146 to i64
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i16
  %156 = bitcast i8* %151 to i16*
  br label %162

157:                                              ; preds = %145
  %158 = load i16*, i16** %138, align 8
  %159 = zext i32 %146 to i64
  %160 = getelementptr inbounds i16, i16* %158, i64 %159
  %161 = load i16, i16* %160, align 2
  br label %162

162:                                              ; preds = %150, %157
  %163 = phi i16* [ %156, %150 ], [ %158, %157 ]
  %164 = phi i16 [ %155, %150 ], [ %161, %157 ]
  %165 = icmp eq i16 %164, 32
  %166 = zext i1 %165 to i8
  %167 = load i8, i8* %2, align 1
  %168 = icmp eq i8 %167, 0
  %169 = or i1 %131, %168
  %170 = xor i1 %165, true
  %171 = or i1 %169, %170
  br i1 %171, label %185, label %172

172:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %140) #12
  call void @_ZN5blink14SVGTextMetricsC1ENS0_11MetricsTypeE(%"class.blink::SVGTextMetrics"* nonnull %5, i32 0) #12
  %173 = load i32, i32* %141, align 4
  %174 = load i32, i32* %142, align 8
  %175 = icmp eq i32 %173, %174
  br i1 %175, label %183, label %176, !prof !2

176:                                              ; preds = %172
  %177 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %143, align 8
  %178 = zext i32 %173 to i64
  %179 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %177, i64 %178
  %180 = bitcast %"class.blink::SVGTextMetrics"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* nonnull align 4 %140, i64 12, i1 false) #12
  %181 = load i32, i32* %141, align 4
  %182 = add i32 %181, 1
  store i32 %182, i32* %141, align 4
  br label %184

183:                                              ; preds = %172
  call void @_ZN3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1696"* %139, %"class.blink::SVGTextMetrics"* nonnull dereferenceable(12) %5) #12
  br label %184

184:                                              ; preds = %176, %183
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %140) #12
  br label %225

185:                                              ; preds = %162
  br i1 %149, label %186, label %203

186:                                              ; preds = %185
  %187 = zext i32 %146 to i64
  %188 = getelementptr inbounds i16, i16* %163, i64 %187
  %189 = load i16, i16* %188, align 2
  %190 = and i16 %189, -1024
  %191 = icmp eq i16 %190, -10240
  br i1 %191, label %192, label %203

192:                                              ; preds = %186
  %193 = add nuw i32 %146, 1
  %194 = load i32, i32* %132, align 4
  %195 = icmp ult i32 %193, %194
  br i1 %195, label %196, label %203

196:                                              ; preds = %192
  %197 = zext i32 %193 to i64
  %198 = getelementptr inbounds i16, i16* %163, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = and i16 %199, -1024
  %201 = icmp eq i16 %200, -9216
  %202 = select i1 %201, i32 2, i32 1
  br label %203

203:                                              ; preds = %196, %185, %192, %186
  %204 = phi i32 [ 1, %186 ], [ 1, %192 ], [ 1, %185 ], [ %202, %196 ]
  %205 = call dereferenceable(16) %"struct.blink::CharacterRange"* @_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2042"* nonnull %4, i32 %146) #12
  %206 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %205, i64 0, i32 1
  %207 = load float, float* %206, align 4
  %208 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %205, i64 0, i32 0
  %209 = load float, float* %208, align 4
  %210 = fsub float %207, %209
  %211 = load float, float* %121, align 8
  %212 = fdiv float %210, %211
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %144) #12
  call void @_ZN5blink14SVGTextMetricsC1Ejff(%"class.blink::SVGTextMetrics"* nonnull %6, i32 %204, float %212, float %123) #12
  %213 = load i32, i32* %141, align 4
  %214 = load i32, i32* %142, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %223, label %216, !prof !2

216:                                              ; preds = %203
  %217 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %143, align 8
  %218 = zext i32 %213 to i64
  %219 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %217, i64 %218
  %220 = bitcast %"class.blink::SVGTextMetrics"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %220, i8* nonnull align 4 %144, i64 12, i1 false) #12
  %221 = load i32, i32* %141, align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %141, align 4
  br label %224

223:                                              ; preds = %203
  call void @_ZN3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1696"* %139, %"class.blink::SVGTextMetrics"* nonnull dereferenceable(12) %6) #12
  br label %224

224:                                              ; preds = %216, %223
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %144) #12
  store i8 %166, i8* %2, align 1
  br label %225

225:                                              ; preds = %224, %184
  %226 = phi i32 [ %204, %224 ], [ 1, %184 ]
  %227 = add i32 %226, %146
  %228 = icmp ult i32 %227, %133
  br i1 %228, label %145, label %229

229:                                              ; preds = %225, %114, %110
  %230 = load %"struct.blink::CharacterRange"*, %"struct.blink::CharacterRange"** %8, align 8
  %231 = icmp eq %"struct.blink::CharacterRange"* %230, null
  %232 = bitcast %"struct.blink::CharacterRange"* %230 to i8*
  br i1 %231, label %238, label %233, !prof !6

233:                                              ; preds = %229
  %234 = load i32, i32* %9, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %237, label %236, !prof !2

236:                                              ; preds = %233
  store i32 0, i32* %9, align 4
  br label %237

237:                                              ; preds = %236, %233
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %232) #12
  store %"struct.blink::CharacterRange"* null, %"struct.blink::CharacterRange"** %8, align 8
  br label %238

238:                                              ; preds = %229, %237
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK5blink4Font25IndividualCharacterRangesERKNS_7TextRunE(%"class.WTF::Vector.2042"* sret, %"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN5blink14SVGTextMetricsC1ENS0_11MetricsTypeE(%"class.blink::SVGTextMetrics"*, i32) unnamed_addr #1

declare void @_ZN5blink14SVGTextMetricsC1Ejff(%"class.blink::SVGTextMetrics"*, i32, float, float) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineText17UpdateMetricsListERb(%"class.blink::LayoutSVGInlineText"*, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::TextRun", align 8
  %5 = alloca %"class.blink::BidiResolver", align 8
  %6 = alloca %"struct.blink::BidiStatus", align 8
  %7 = alloca %"class.blink::TextRunIterator", align 8
  %8 = alloca %"class.blink::TextRun", align 8
  %9 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  %19 = bitcast %"class.WTF::Vector.1696"* %9 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.WTF::Vector.1696"* %9 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %10, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %20) #12
  br label %22

22:                                               ; preds = %2, %18
  %23 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %289, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %289, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::TextRun"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 2
  %35 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 3
  %36 = bitcast %"class.blink::TextRun"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %35, align 8
  %37 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %37, align 4
  %38 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 5
  store i16 -21846, i16* %38, align 8
  %39 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 6, i64 0
  store i8 -86, i8* %39, align 2
  %40 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 6, i64 1
  store i8 -86, i8* %40, align 1
  %41 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %41, align 4
  %42 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 7, i32 1
  %43 = bitcast i8* %42 to i64*
  store i64 -6148914691236517206, i64* %43, align 4
  %44 = load i32, i32* %27, align 4
  %45 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %46 = bitcast %"class.blink::ComputedStyle"** %45 to %"class.blink::ComputedStyleBase"**
  %47 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %47, i64 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  store i8 -86, i8* %39, align 2, !alias.scope !7
  store i8 -86, i8* %40, align 1, !alias.scope !7
  %51 = bitcast i8* %42 to i64*
  store i64 -6148914691236517205, i64* %51, align 4, !alias.scope !7
  %52 = lshr i160 %50, 86
  %53 = trunc i160 %52 to i32
  %54 = and i32 %53, 7
  %55 = icmp eq i32 %54, 2
  %56 = icmp eq i32 %54, 5
  %57 = or i1 %55, %56
  %58 = lshr i160 %50, 111
  %59 = trunc i160 %58 to i16
  %60 = and i16 %59, 16
  %61 = zext i1 %57 to i16
  %62 = shl nuw nsw i16 %61, 5
  %63 = or i16 %60, %62
  %64 = or i16 %63, -22523
  %65 = bitcast i32* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #12, !alias.scope !7
  store i16 %64, i16* %38, align 8, !alias.scope !7
  store float 0.000000e+00, float* %41, align 4, !alias.scope !7
  store i8* null, i8** %32, align 8, !alias.scope !7
  %66 = icmp eq i32 %44, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %30
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4, !noalias !7
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 1
  %73 = bitcast %"class.blink::TextRun"* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  store i32 %44, i32* %34, align 4
  %74 = and i16 %64, -22479
  %75 = select i1 %71, i16 %74, i16 %64
  store i16 %75, i16* %38, align 8, !alias.scope !7
  br label %76

76:                                               ; preds = %67, %30
  %77 = phi i16 [ %64, %30 ], [ %75, %67 ]
  %78 = or i16 %77, 64
  store i16 %78, i16* %38, align 8, !alias.scope !7
  %79 = load i32, i32* %27, align 4, !noalias !7
  store i32 %79, i32* %33, align 8, !alias.scope !7
  %80 = bitcast %"class.blink::BidiResolver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %80) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 368, i1 false)
  %81 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 64, i1 false) #12
  store i32 10, i32* %81, align 8
  %82 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 4, i32 1
  store i32 10, i32* %82, align 4
  %83 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 4, i32 2
  store i32 10, i32* %83, align 8
  %84 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 4, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %84, align 8
  %85 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 5
  store i32 10, i32* %85, align 8
  %86 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 6
  %87 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 9
  %88 = bitcast %"class.blink::TextRunIterator"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #12
  %89 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 10
  %90 = bitcast %"class.blink::TextRunIterator"* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 33, i1 false) #12
  store i8 1, i8* %89, align 8
  %91 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12
  %92 = bitcast %"class.blink::BidiRunList"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 28, i1 false) #12
  %93 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 13
  %94 = bitcast %"class.blink::MidpointState"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 25, i1 false) #12
  %95 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 14
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 15
  %97 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 19
  %98 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 19, i32 0, i32 1, i64 0
  %99 = bitcast %"class.WTF::Vector.2057"* %97 to i8**
  %100 = bitcast %"class.WTF::Vector.2052"* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 25, i1 false) #12
  store i8* %98, i8** %99, align 8
  %101 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 19, i32 0, i32 0, i32 1
  store i32 8, i32* %101, align 8
  %102 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 19, i32 0, i32 0, i32 2
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 20
  %104 = bitcast %"class.WTF::HashMap.2062"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 20, i1 false) #12
  %105 = load i160, i160* %49, align 8
  %106 = lshr i160 %105, 86
  %107 = trunc i160 %106 to i32
  %108 = and i32 %107, 7
  %109 = icmp eq i32 %108, 2
  %110 = icmp eq i32 %108, 5
  %111 = or i1 %109, %110
  %112 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext 0, i32 0, i1 zeroext %111, i32 0, %"class.blink::BidiContext"* null) #12
  %113 = load i16, i16* %38, align 8
  %114 = and i16 %113, 4
  %115 = icmp eq i16 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %76
  switch i32 %108, label %169 [
    i32 5, label %118
    i32 2, label %118
  ]

117:                                              ; preds = %76
  switch i32 %108, label %126 [
    i32 5, label %118
    i32 2, label %118
  ]

118:                                              ; preds = %116, %116, %117, %117
  %119 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %119, i64 0, i32 0, i32 9
  %121 = bitcast [20 x i8]* %120 to i160*
  %122 = load i160, i160* %121, align 8
  %123 = lshr i160 %122, 115
  %124 = trunc i160 %123 to i32
  %125 = and i32 %124, 1
  br label %126

126:                                              ; preds = %117, %118
  %127 = phi i32 [ 0, %117 ], [ %125, %118 ]
  %128 = call noalias i8* @malloc(i64 24) #12
  %129 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %112, i64 0, i32 1
  %130 = load i16, i16* %129, align 4
  %131 = trunc i16 %130 to i8
  %132 = and i8 %131, 127
  %133 = load i32, i32* %33, align 8
  %134 = lshr i16 %130, 12
  %135 = trunc i16 %134 to i8
  %136 = and i8 %135, 1
  store i8 %136, i8* %128, align 8
  %137 = getelementptr inbounds i8, i8* %128, i64 1
  %138 = getelementptr inbounds i8, i8* %128, i64 8
  %139 = bitcast i8* %138 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %139, align 8
  %140 = getelementptr inbounds i8, i8* %128, i64 16
  %141 = bitcast i8* %140 to i32*
  store i32 0, i32* %141, align 8
  %142 = getelementptr inbounds i8, i8* %128, i64 20
  %143 = bitcast i8* %142 to i32*
  store i32 %133, i32* %143, align 4
  store i8 %132, i8* %137, align 1
  %144 = and i8 %131, 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %126
  %147 = icmp eq i32 %127, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %146
  %149 = add nuw i8 %132, 1
  store i8 %149, i8* %137, align 1
  br label %154

150:                                              ; preds = %126
  %151 = icmp eq i32 %127, 1
  br i1 %151, label %152, label %154

152:                                              ; preds = %150
  %153 = add nuw i8 %132, 1
  store i8 %153, i8* %137, align 1
  br label %154

154:                                              ; preds = %146, %150, %148, %152
  %155 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %91, i64 0, i32 0
  %156 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %155, align 8
  %157 = icmp eq %"struct.blink::BidiCharacterRun"* %156, null
  %158 = bitcast %"class.blink::BidiRunList"* %91 to i8**
  %159 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 1
  %160 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %159, align 8
  %161 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %160, i64 0, i32 2
  %162 = bitcast %"struct.blink::BidiCharacterRun"** %161 to i8**
  %163 = select i1 %157, i8** %158, i8** %162
  store i8* %128, i8** %163, align 8
  %164 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 1
  %165 = bitcast %"struct.blink::BidiCharacterRun"** %164 to i8**
  store i8* %128, i8** %165, align 8
  %166 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 3
  %167 = load i32, i32* %166, align 8
  %168 = add i32 %167, 1
  store i32 %168, i32* %166, align 8
  br label %191

169:                                              ; preds = %116
  %170 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 0
  store i32 0, i32* %170, align 8
  %171 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 1
  store i32 10, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 2
  store i32 10, i32* %172, align 8
  %173 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 3, i32 0
  store %"class.blink::BidiContext"* %112, %"class.blink::BidiContext"** %173, align 8
  %174 = icmp eq %"class.blink::BidiContext"* %112, null
  br i1 %174, label %182, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw add i32* %176, i32 1 monotonic
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %181 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #12
  br label %182

182:                                              ; preds = %169, %175, %179
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"* nonnull %5, %"struct.blink::BidiStatus"* nonnull byval(%"struct.blink::BidiStatus") align 8 %6)
  %183 = load i32, i32* %34, align 4
  %184 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 0, i32 0
  store %"class.blink::TextRun"* %4, %"class.blink::TextRun"** %184, align 8
  %185 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 0, i32 1
  store i32 0, i32* %185, align 8
  %186 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 0, i32 2
  store i32 %183, i32* %186, align 4
  %187 = bitcast %"class.blink::TextRunIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #12
  %188 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %7, i64 0, i32 0
  store %"class.blink::TextRun"* %4, %"class.blink::TextRun"** %188, align 8
  %189 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %7, i64 0, i32 1
  store i32 %183, i32* %189, align 8
  %190 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %7, i64 0, i32 2
  store i32 %183, i32* %190, align 4
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21CreateBidiRunsForLineERKS1_NS_23VisualDirectionOverrideEbb(%"class.blink::BidiResolver"* nonnull %5, %"class.blink::TextRunIterator"* nonnull dereferenceable(16) %7, i32 0, i1 zeroext false, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #12
  br label %191

191:                                              ; preds = %182, %154
  %192 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %91, i64 0, i32 0
  %193 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %192, align 8
  %194 = icmp eq %"struct.blink::BidiCharacterRun"* %193, null
  br i1 %194, label %222, label %195

195:                                              ; preds = %191
  %196 = bitcast %"class.blink::TextRun"* %8 to i8*
  %197 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 0, i32 0
  %198 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 1
  %199 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 2
  %200 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 3
  %201 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 4
  %202 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 5
  %203 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 0
  %204 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 1
  %205 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 0
  %206 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 1
  %207 = bitcast i8* %206 to i64*
  %208 = bitcast i32* %198 to i8*
  %209 = bitcast %"class.blink::TextRun"* %8 to i16**
  %210 = bitcast %"class.blink::TextRun"* %8 to i8*
  %211 = bitcast i8* %206 to i64*
  br label %231

212:                                              ; preds = %283
  %213 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %192, align 8
  %214 = icmp eq %"struct.blink::BidiCharacterRun"* %213, null
  br i1 %214, label %222, label %215

215:                                              ; preds = %212, %215
  %216 = phi %"struct.blink::BidiCharacterRun"* [ %218, %215 ], [ %213, %212 ]
  %217 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %216, i64 0, i32 2
  %218 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %217, align 8
  %219 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %216, i64 0, i32 0
  call void @free(i8* %219) #12
  %220 = icmp eq %"struct.blink::BidiCharacterRun"* %218, null
  br i1 %220, label %221, label %215

221:                                              ; preds = %215
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 28, i1 false) #12
  br label %222

222:                                              ; preds = %191, %212, %221
  %223 = icmp eq %"class.blink::BidiContext"* %112, null
  br i1 %223, label %230, label %224

224:                                              ; preds = %222
  %225 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw sub i32* %225, i32 1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %230

228:                                              ; preds = %224
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %112) #12
  %229 = bitcast %"class.blink::BidiContext"* %112 to i8*
  call void @free(i8* %229) #12
  br label %230

230:                                              ; preds = %222, %224, %228
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %80) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #12
  br label %289

231:                                              ; preds = %195, %283
  %232 = phi %"struct.blink::BidiCharacterRun"* [ %193, %195 ], [ %287, %283 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %196) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %200, align 8
  store float 0xFFFFFFFFE0000000, float* %201, align 4
  store i16 -21846, i16* %202, align 8
  store i8 -86, i8* %203, align 2
  store i8 -86, i8* %204, align 1
  store float 0xFFFFFFFFE0000000, float* %205, align 4
  %233 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %232, i64 0, i32 3
  store i64 -6148914691236517206, i64* %211, align 4
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %232, i64 0, i32 4
  %236 = load i32, i32* %235, align 4
  %237 = sub nsw i32 %236, %234
  %238 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %232, i64 0, i32 1
  %239 = load i8, i8* %238, align 1
  %240 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %46, align 8, !noalias !10
  store i8 -86, i8* %203, align 2, !alias.scope !10
  store i8 -86, i8* %204, align 1, !alias.scope !10
  %241 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %240, i64 0, i32 9
  %242 = bitcast [20 x i8]* %241 to i160*
  store i64 -6148914691236517205, i64* %207, align 4, !alias.scope !10
  %243 = load i160, i160* %242, align 8, !noalias !10
  %244 = lshr i160 %243, 86
  %245 = trunc i160 %244 to i32
  %246 = and i32 %245, 7
  %247 = icmp eq i32 %246, 2
  %248 = icmp eq i32 %246, 5
  %249 = or i1 %247, %248
  %250 = shl i8 %239, 4
  %251 = and i8 %250, 16
  %252 = zext i1 %249 to i16
  %253 = shl nuw nsw i16 %252, 5
  %254 = zext i8 %251 to i16
  %255 = or i16 %253, %254
  %256 = or i16 %255, -22523
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 16, i1 false) #12, !alias.scope !10
  store i16 %256, i16* %202, align 8, !alias.scope !10
  store float 0.000000e+00, float* %205, align 4, !alias.scope !10
  store i8* null, i8** %197, align 8, !alias.scope !10
  %257 = icmp eq i32 %237, 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8, !noalias !10
  br i1 %257, label %276, label %259

259:                                              ; preds = %231
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4, !noalias !10
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 1
  br i1 %263, label %269, label %265

265:                                              ; preds = %259
  %266 = bitcast %"class.WTF::StringImpl"* %264 to i8*
  %267 = zext i32 %234 to i64
  %268 = getelementptr inbounds i8, i8* %266, i64 %267
  store i8* %268, i8** %197, align 8, !alias.scope !10
  store i32 %237, i32* %199, align 4, !alias.scope !10
  br label %274

269:                                              ; preds = %259
  %270 = bitcast %"class.WTF::StringImpl"* %264 to i16*
  %271 = zext i32 %234 to i64
  %272 = getelementptr inbounds i16, i16* %270, i64 %271
  store i16* %272, i16** %209, align 8, !alias.scope !10
  store i32 %237, i32* %199, align 4, !alias.scope !10
  %273 = and i16 %256, -22479
  br label %274

274:                                              ; preds = %265, %269
  %275 = phi i16 [ %273, %269 ], [ %256, %265 ]
  store i16 %275, i16* %202, align 8, !alias.scope !10
  br label %276

276:                                              ; preds = %274, %231
  %277 = phi i16 [ %256, %231 ], [ %275, %274 ]
  %278 = or i16 %277, 64
  store i16 %278, i16* %202, align 8, !alias.scope !10
  %279 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 1
  %282 = load i32, i32* %281, align 4, !noalias !10
  br label %283

283:                                              ; preds = %276, %280
  %284 = phi i32 [ %282, %280 ], [ 0, %276 ]
  %285 = sub i32 %284, %234
  store i32 %285, i32* %198, align 8, !alias.scope !10
  call void @_ZN5blink19LayoutSVGInlineText17AddMetricsFromRunERKNS_7TextRunERb(%"class.blink::LayoutSVGInlineText"* %0, %"class.blink::TextRun"* nonnull dereferenceable(40) %8, i8* dereferenceable(1) %1)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %196) #12
  %286 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %232, i64 0, i32 2
  %287 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %286, align 8
  %288 = icmp eq %"struct.blink::BidiCharacterRun"* %287, null
  br i1 %288, label %212, label %231

289:                                              ; preds = %22, %26, %230
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"*, %"struct.blink::BidiStatus"* byval(%"struct.blink::BidiStatus") align 8) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4
  %5 = bitcast %"struct.blink::BidiStatus"* %4 to i8*
  %6 = bitcast %"struct.blink::BidiStatus"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* nonnull align 8 %6, i64 12, i1 false) #12
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %8 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %1, i64 0, i32 3, i32 0
  %9 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %10 = icmp eq %"class.blink::BidiContext"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %18

18:                                               ; preds = %15, %11, %2
  %19 = ptrtoint %"class.blink::BidiContext"* %9 to i64
  %20 = bitcast %class.scoped_refptr.1768* %7 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr.1768, %class.scoped_refptr.1768* %7, i64 0, i32 0
  %22 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.blink::BidiContext"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %22) #12
  %29 = bitcast %"class.blink::BidiContext"* %22 to i8*
  call void @free(i8* %29) #12
  br label %30

30:                                               ; preds = %18, %24, %28
  %31 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %32 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 1
  %33 = load i16, i16* %32, align 4
  %34 = and i16 %33, 3968
  %35 = icmp ne i16 %34, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 18
  store i8 %36, i8* %37, align 1
  %38 = icmp eq %"class.blink::BidiContext"* %31, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %31) #12
  %44 = bitcast %"class.blink::BidiContext"* %31 to i8*
  call void @free(i8* %44) #12
  br label %45

45:                                               ; preds = %30, %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21CreateBidiRunsForLineERKS1_NS_23VisualDirectionOverrideEbb(%"class.blink::BidiResolver"*, %"class.blink::TextRunIterator"* dereferenceable(16), i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.blink::BidiResolver", align 8
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 16
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 7
  %13 = bitcast %"class.blink::TextRunIterator"* %12 to i8*
  %14 = bitcast %"class.blink::TextRunIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = icmp eq i32 %2, 0
  %16 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  br i1 %15, label %116, label %17

17:                                               ; preds = %5
  store i8 0, i8* %16, align 8
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::TextRunIterator"* %18 to i8*
  %20 = bitcast %"class.blink::BidiResolver"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %22 = bitcast %"class.blink::TextRunIterator"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 2
  %28 = load i32, i32* %24, align 8
  br label %29

29:                                               ; preds = %40, %17
  %30 = phi i32 [ %41, %40 ], [ %28, %17 ]
  %31 = load i32, i32* %25, align 8
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %23, align 8
  %35 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %26, align 8
  %36 = icmp eq %"class.blink::TextRun"* %34, %35
  br i1 %36, label %42, label %37

37:                                               ; preds = %33, %29
  %38 = load i32, i32* %27, align 4
  %39 = icmp ult i32 %30, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %20, i64 16, i1 false)
  %41 = add nuw i32 %30, 1
  store i32 %41, i32* %24, align 8
  br label %29

42:                                               ; preds = %33, %37
  %43 = icmp ne i32 %2, 1
  %44 = zext i1 %43 to i32
  %45 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %46)
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 1
  %48 = bitcast %"struct.blink::BidiCharacterRun"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 2
  %51 = bitcast %"struct.blink::BidiCharacterRun"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = icmp eq i32 %2, 2
  br i1 %52, label %53, label %705

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %705, label %57

57:                                               ; preds = %53
  %58 = add i32 %55, -1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %705, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %46, i64 0, i32 0
  %62 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %61, align 8
  %63 = add i32 %55, -2
  %64 = and i32 %58, 7
  %65 = icmp ult i32 %63, 7
  br i1 %65, label %89, label %66

66:                                               ; preds = %60
  %67 = sub i32 %58, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi %"struct.blink::BidiCharacterRun"* [ %62, %66 ], [ %86, %68 ]
  %70 = phi i32 [ %67, %66 ], [ %87, %68 ]
  %71 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %69, i64 0, i32 2
  %72 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %71, align 8
  %73 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %72, i64 0, i32 2
  %74 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %73, align 8
  %75 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %74, i64 0, i32 2
  %76 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %76, i64 0, i32 2
  %78 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %78, i64 0, i32 2
  %80 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %79, align 8
  %81 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %80, i64 0, i32 2
  %82 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %81, align 8
  %83 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %82, i64 0, i32 2
  %84 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %83, align 8
  %85 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %84, i64 0, i32 2
  %86 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %85, align 8
  %87 = add i32 %70, -8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %68

89:                                               ; preds = %68, %60
  %90 = phi %"struct.blink::BidiCharacterRun"* [ undef, %60 ], [ %86, %68 ]
  %91 = phi %"struct.blink::BidiCharacterRun"* [ %62, %60 ], [ %86, %68 ]
  %92 = icmp eq i32 %64, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %89, %93
  %94 = phi %"struct.blink::BidiCharacterRun"* [ %97, %93 ], [ %91, %89 ]
  %95 = phi i32 [ %98, %93 ], [ %64, %89 ]
  %96 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %94, i64 0, i32 2
  %97 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %96, align 8
  %98 = add i32 %95, -1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %93, !llvm.loop !13

100:                                              ; preds = %93, %89
  %101 = phi %"struct.blink::BidiCharacterRun"* [ %90, %89 ], [ %97, %93 ]
  %102 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %101, i64 0, i32 2
  %103 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %102, align 8
  br label %104

104:                                              ; preds = %104, %100
  %105 = phi %"struct.blink::BidiCharacterRun"* [ %109, %104 ], [ %62, %100 ]
  %106 = phi %"struct.blink::BidiCharacterRun"* [ %105, %104 ], [ %103, %100 ]
  %107 = phi i32 [ %110, %104 ], [ 0, %100 ]
  %108 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %105, i64 0, i32 2
  %109 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %108, align 8
  store %"struct.blink::BidiCharacterRun"* %106, %"struct.blink::BidiCharacterRun"** %108, align 8
  %110 = add i32 %107, 1
  %111 = icmp ugt i32 %110, %58
  br i1 %111, label %112, label %104

112:                                              ; preds = %104
  store %"struct.blink::BidiCharacterRun"* %101, %"struct.blink::BidiCharacterRun"** %61, align 8
  %113 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %62, i64 0, i32 2
  store %"struct.blink::BidiCharacterRun"* %103, %"struct.blink::BidiCharacterRun"** %113, align 8
  %114 = icmp eq %"struct.blink::BidiCharacterRun"* %103, null
  br i1 %114, label %115, label %705

115:                                              ; preds = %112
  store %"struct.blink::BidiCharacterRun"* %62, %"struct.blink::BidiCharacterRun"** %47, align 8
  br label %705

116:                                              ; preds = %5
  store i8 1, i8* %16, align 8
  %117 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %118 = bitcast %"class.blink::TextRunIterator"* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false)
  %119 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %120 = bitcast %"class.blink::TextRunIterator"* %119 to i8*
  %121 = bitcast %"class.blink::BidiResolver"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false)
  %122 = bitcast %"class.blink::BidiResolver"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %122) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 368, i1 false)
  %123 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 64, i1 false) #12
  store i32 10, i32* %123, align 8
  %124 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 1
  store i32 10, i32* %124, align 4
  %125 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 2
  store i32 10, i32* %125, align 8
  %126 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %126, align 8
  %127 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 5
  store i32 10, i32* %127, align 8
  %128 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 6
  %129 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 9
  %130 = bitcast %"class.blink::TextRunIterator"* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #12
  %131 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 10
  %132 = bitcast %"class.blink::TextRunIterator"* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 33, i1 false) #12
  store i8 1, i8* %131, align 8
  %133 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 12
  %134 = bitcast %"class.blink::BidiRunList"* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 28, i1 false) #12
  %135 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 13
  %136 = bitcast %"class.blink::MidpointState"* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 25, i1 false) #12
  %137 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 14
  store i32 0, i32* %137, align 8
  %138 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 15
  %139 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19
  %140 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19, i32 0, i32 1, i64 0
  %141 = bitcast %"class.WTF::Vector.2057"* %139 to i8**
  %142 = bitcast %"class.WTF::Vector.2052"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 25, i1 false) #12
  store i8* %140, i8** %141, align 8
  %143 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19, i32 0, i32 0, i32 1
  store i32 8, i32* %143, align 8
  %144 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19, i32 0, i32 0, i32 2
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 20
  %146 = bitcast %"class.WTF::HashMap.2062"* %145 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 20, i1 false) #12
  %147 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 14
  %148 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %149 = bitcast %"class.blink::TextRunIterator"* %148 to i8*
  %150 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 1
  %151 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 1
  %152 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 0
  %154 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 2
  %155 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4
  %156 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4
  %157 = bitcast %"struct.blink::BidiStatus"* %156 to i8*
  %158 = bitcast %"struct.blink::BidiStatus"* %155 to i8*
  %159 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 3
  %160 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %161 = bitcast %"class.logging::CheckError"* %7 to i8*
  %162 = bitcast %class.scoped_refptr.1768* %159 to i64*
  %163 = getelementptr inbounds %class.scoped_refptr.1768, %class.scoped_refptr.1768* %159, i64 0, i32 0
  %164 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 1
  %165 = bitcast %"class.blink::TextRunIterator"* %164 to i8*
  %166 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 2
  %167 = bitcast %"class.blink::TextRunIterator"* %166 to i8*
  %168 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 3
  %169 = bitcast %"class.blink::TextRunIterator"* %168 to i8*
  %170 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 8
  %171 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 8
  %172 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 9
  %173 = bitcast %"class.blink::TextRunIterator"* %172 to i8*
  %174 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6
  %175 = bitcast %"class.blink::TextRunIterator"* %174 to i8*
  %176 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  %177 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %178 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %179 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1
  %180 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %117, i64 0, i32 0
  %181 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %119, i64 0, i32 0
  %182 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %183 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %155, i64 0, i32 0
  %184 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12
  %185 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %186 = bitcast i64* %6 to %"class.blink::BidiEmbedding"*
  %187 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %188 = bitcast i64* %6 to i8*
  %189 = bitcast i64* %6 to i32*
  %190 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %186, i64 0, i32 1
  %191 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %192 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %193 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %187, i64 0, i32 0, i32 0, i32 0
  br label %194

194:                                              ; preds = %594, %116
  %195 = phi i8 [ 0, %116 ], [ %329, %594 ]
  %196 = load i32, i32* %147, align 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %194
  %199 = load i8, i8* %16, align 8, !range !15
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %121, i64 16, i1 false)
  store i8 0, i8* %16, align 8
  br label %202

202:                                              ; preds = %194, %198, %201
  %203 = and i8 %195, 1
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %244

205:                                              ; preds = %202
  %206 = load i32, i32* %150, align 8
  %207 = load i32, i32* %151, align 8
  %208 = icmp eq i32 %206, %207
  br i1 %208, label %209, label %213

209:                                              ; preds = %205
  %210 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %152, align 8
  %211 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %153, align 8
  %212 = icmp eq %"class.blink::TextRun"* %210, %211
  br i1 %212, label %216, label %213

213:                                              ; preds = %205, %209
  %214 = load i32, i32* %154, align 4
  %215 = icmp ult i32 %206, %214
  br i1 %215, label %241, label %216

216:                                              ; preds = %213, %209
  %217 = load i8, i8* %16, align 8, !range !15
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %621

219:                                              ; preds = %216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 12, i1 false) #12
  %220 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %221 = icmp eq %"class.blink::BidiContext"* %220, null
  br i1 %221, label %228, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = atomicrmw add i32* %223, i32 1 monotonic
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %222
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #12
  br label %228

228:                                              ; preds = %226, %222, %219
  %229 = ptrtoint %"class.blink::BidiContext"* %220 to i64
  %230 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %163, align 8
  store i64 %229, i64* %162, align 8
  %231 = icmp eq %"class.blink::BidiContext"* %230, null
  br i1 %231, label %238, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = atomicrmw sub i32* %233, i32 1 acq_rel
  %235 = icmp eq i32 %234, 1
  br i1 %235, label %236, label %238

236:                                              ; preds = %232
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %230) #12
  %237 = bitcast %"class.blink::BidiContext"* %230 to i8*
  call void @free(i8* %237) #12
  br label %238

238:                                              ; preds = %236, %232, %228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %149, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %118, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %120, i64 16, i1 false)
  %239 = load i8, i8* %170, align 8, !range !15
  store i8 %239, i8* %171, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %173, i64 16, i1 false)
  %240 = load i8, i8* %16, align 8, !range !15
  store i8 %240, i8* %131, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %120, i64 16, i1 false)
  br label %244

241:                                              ; preds = %213
  %242 = load i32, i32* %150, align 8
  %243 = load i32, i32* %154, align 4
  br label %282

244:                                              ; preds = %202, %238
  %245 = phi i8 [ 1, %238 ], [ %195, %202 ]
  br i1 %3, label %252, label %246

246:                                              ; preds = %244
  %247 = load i32, i32* %150, align 8
  %248 = load i32, i32* %154, align 4
  %249 = icmp ult i32 %247, %248
  br i1 %249, label %282, label %250

250:                                              ; preds = %246
  %251 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  br label %271

252:                                              ; preds = %244
  %253 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %254 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext41CopyStackRemovingUnicodeEmbeddingContextsEv(%"class.blink::BidiContext"* %253) #12
  %255 = ptrtoint %"class.blink::BidiContext"* %254 to i64
  %256 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %163, align 8
  store i64 %255, i64* %162, align 8
  %257 = icmp eq %"class.blink::BidiContext"* %256, null
  br i1 %257, label %264, label %258

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = atomicrmw sub i32* %259, i32 1 acq_rel
  %261 = icmp eq i32 %260, 1
  br i1 %261, label %262, label %264

262:                                              ; preds = %258
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %256) #12
  %263 = bitcast %"class.blink::BidiContext"* %256 to i8*
  call void @free(i8* %263) #12
  br label %264

264:                                              ; preds = %252, %258, %262
  %265 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %126, align 8
  %266 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %265, i64 0, i32 1
  %267 = load i16, i16* %266, align 4
  %268 = lshr i16 %267, 7
  %269 = and i16 %268, 31
  %270 = zext i16 %269 to i32
  store i32 %270, i32* %123, align 8
  store i32 %270, i32* %125, align 8
  store i32 %270, i32* %124, align 4
  br label %327

271:                                              ; preds = %271, %250
  %272 = phi %"class.blink::BidiContext"* [ %251, %250 ], [ %274, %271 ]
  %273 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %272, i64 0, i32 2, i32 0
  %274 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %273, align 8
  %275 = icmp eq %"class.blink::BidiContext"* %274, null
  br i1 %275, label %276, label %271

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %272, i64 0, i32 1
  %278 = load i16, i16* %277, align 4
  %279 = lshr i16 %278, 7
  %280 = and i16 %279, 31
  %281 = zext i16 %280 to i32
  br label %327

282:                                              ; preds = %241, %246
  %283 = phi i32 [ %248, %246 ], [ %243, %241 ]
  %284 = phi i32 [ %247, %246 ], [ %242, %241 ]
  %285 = phi i1 [ true, %246 ], [ false, %241 ]
  %286 = phi i8 [ %245, %246 ], [ %195, %241 ]
  %287 = icmp ult i32 %284, %283
  br i1 %287, label %288, label %311

288:                                              ; preds = %282
  %289 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %152, align 8
  %290 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %289, i64 0, i32 5
  %291 = load i16, i16* %290, align 8
  %292 = and i16 %291, 4
  %293 = icmp eq i16 %292, 0
  br i1 %293, label %301, label %294

294:                                              ; preds = %288
  %295 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %289, i64 0, i32 0, i32 0
  %296 = load i8*, i8** %295, align 8
  %297 = zext i32 %284 to i64
  %298 = getelementptr inbounds i8, i8* %296, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i16
  br label %307

301:                                              ; preds = %288
  %302 = bitcast %"class.blink::TextRun"* %289 to i16**
  %303 = load i16*, i16** %302, align 8
  %304 = zext i32 %284 to i64
  %305 = getelementptr inbounds i16, i16* %303, i64 %304
  %306 = load i16, i16* %305, align 2
  br label %307

307:                                              ; preds = %301, %294
  %308 = phi i16 [ %300, %294 ], [ %306, %301 ]
  %309 = zext i16 %308 to i32
  %310 = call i32 @u_charDirection_69(i32 %309) #12
  br label %311

311:                                              ; preds = %282, %307
  %312 = phi i32 [ %310, %307 ], [ 10, %282 ]
  %313 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %314 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %313, i64 0, i32 1
  %315 = load i16, i16* %314, align 4
  %316 = and i16 %315, 4096
  %317 = icmp eq i16 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %311
  switch i32 %312, label %319 [
    i32 11, label %327
    i32 12, label %327
    i32 14, label %327
    i32 15, label %327
    i32 16, label %327
  ]

319:                                              ; preds = %318
  %320 = lshr i16 %315, 7
  %321 = and i16 %320, 31
  %322 = zext i16 %321 to i32
  br label %327

323:                                              ; preds = %311
  %324 = icmp eq i32 %312, 17
  br i1 %324, label %325, label %327

325:                                              ; preds = %323
  %326 = load i32, i32* %176, align 8
  br label %327

327:                                              ; preds = %318, %318, %318, %318, %318, %264, %276, %319, %325, %323
  %328 = phi i1 [ %285, %319 ], [ %285, %325 ], [ %285, %323 ], [ true, %264 ], [ true, %276 ], [ %285, %318 ], [ %285, %318 ], [ %285, %318 ], [ %285, %318 ], [ %285, %318 ]
  %329 = phi i8 [ %286, %319 ], [ %286, %325 ], [ %286, %323 ], [ %245, %264 ], [ %245, %276 ], [ %286, %318 ], [ %286, %318 ], [ %286, %318 ], [ %286, %318 ], [ %286, %318 ]
  %330 = phi i32 [ %322, %319 ], [ %326, %325 ], [ %312, %323 ], [ %270, %264 ], [ %281, %276 ], [ %312, %318 ], [ %312, %318 ], [ %312, %318 ], [ %312, %318 ], [ %312, %318 ]
  %331 = load i32, i32* %147, align 8
  %332 = icmp eq i32 %331, 0
  %333 = select i1 %332, i32 %330, i32 10
  switch i32 %333, label %527 [
    i32 14, label %334
    i32 11, label %334
    i32 15, label %334
    i32 12, label %334
    i32 16, label %334
    i32 0, label %349
    i32 13, label %386
    i32 1, label %386
    i32 2, label %415
    i32 5, label %460
    i32 18, label %518
    i32 4, label %510
  ]

334:                                              ; preds = %327, %327, %327, %327, %327
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #12
  store i32 %333, i32* %189, align 8
  store i32 1, i32* %190, align 4
  %335 = load i32, i32* %191, align 4
  %336 = load i32, i32* %192, align 8
  %337 = icmp eq i32 %335, %336
  br i1 %337, label %346, label %338, !prof !2

338:                                              ; preds = %334
  %339 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %193, align 8
  %340 = zext i32 %335 to i64
  %341 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %339, i64 %340
  %342 = bitcast %"class.blink::BidiEmbedding"* %341 to i64*
  %343 = load i64, i64* %6, align 8
  store i64 %343, i64* %342, align 4
  %344 = load i32, i32* %191, align 4
  %345 = add i32 %344, 1
  store i32 %345, i32* %191, align 4
  br label %347

346:                                              ; preds = %334
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2057"* %187, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %186) #12
  br label %347

347:                                              ; preds = %338, %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #12
  %348 = call zeroext i1 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %527

349:                                              ; preds = %327
  %350 = load i32, i32* %176, align 8
  switch i32 %350, label %385 [
    i32 9, label %355
    i32 8, label %355
    i32 7, label %355
    i32 18, label %355
    i32 10, label %355
    i32 3, label %355
    i32 4, label %355
    i32 6, label %355
    i32 2, label %351
    i32 1, label %354
    i32 5, label %354
    i32 13, label %354
  ]

351:                                              ; preds = %349
  %352 = load i32, i32* %182, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %385, label %354

354:                                              ; preds = %349, %349, %349, %351
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

355:                                              ; preds = %349, %349, %349, %349, %349, %349, %349, %349
  %356 = load i32, i32* %183, align 8
  switch i32 %356, label %374 [
    i32 2, label %357
    i32 5, label %367
  ]

357:                                              ; preds = %355
  %358 = load i32, i32* %182, align 4
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %385, label %360

360:                                              ; preds = %357
  store i32 2, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %361 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %362 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %361, i64 0, i32 1
  %363 = load i16, i16* %362, align 4
  %364 = and i16 %363, 3968
  %365 = icmp eq i16 %364, 0
  br i1 %365, label %385, label %366

366:                                              ; preds = %360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

367:                                              ; preds = %355
  store i32 5, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %368 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %369 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %368, i64 0, i32 1
  %370 = load i16, i16* %369, align 4
  %371 = and i16 %370, 3968
  %372 = icmp eq i16 %371, 0
  br i1 %372, label %385, label %373

373:                                              ; preds = %367
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

374:                                              ; preds = %355
  %375 = load i32, i32* %182, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %374
  %378 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %379 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %378, i64 0, i32 1
  %380 = load i16, i16* %379, align 4
  %381 = and i16 %380, 3968
  %382 = icmp eq i16 %381, 128
  br i1 %382, label %383, label %384

383:                                              ; preds = %377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %384

384:                                              ; preds = %383, %377
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

385:                                              ; preds = %349, %351, %360, %357, %367, %374, %366, %384, %373, %354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 0, i32* %183, align 8
  store i32 0, i32* %182, align 4
  store i32 0, i32* %185, align 8
  br label %527

386:                                              ; preds = %327, %327
  %387 = load i32, i32* %176, align 8
  switch i32 %387, label %414 [
    i32 0, label %388
    i32 2, label %388
    i32 5, label %388
    i32 10, label %389
    i32 9, label %389
    i32 3, label %389
    i32 4, label %389
    i32 6, label %389
    i32 18, label %389
    i32 7, label %389
    i32 8, label %389
  ]

388:                                              ; preds = %386, %386, %386
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

389:                                              ; preds = %386, %386, %386, %386, %386, %386, %386, %386
  %390 = load i32, i32* %183, align 8
  switch i32 %390, label %403 [
    i32 2, label %391
    i32 5, label %402
  ]

391:                                              ; preds = %389
  %392 = load i32, i32* %182, align 4
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %401

394:                                              ; preds = %391
  %395 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %396 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %395, i64 0, i32 1
  %397 = load i16, i16* %396, align 4
  %398 = and i16 %397, 3968
  %399 = icmp eq i16 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  br label %401

401:                                              ; preds = %400, %394, %391
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

402:                                              ; preds = %389
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

403:                                              ; preds = %389
  %404 = load i32, i32* %182, align 4
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %414

406:                                              ; preds = %403
  %407 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %408 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %407, i64 0, i32 1
  %409 = load i16, i16* %408, align 4
  %410 = and i16 %409, 3968
  %411 = icmp eq i16 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  br label %413

413:                                              ; preds = %412, %406
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

414:                                              ; preds = %386, %401, %403, %413, %402, %388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 1, i32* %183, align 8
  store i32 %333, i32* %182, align 4
  store i32 1, i32* %185, align 8
  br label %527

415:                                              ; preds = %327
  %416 = load i32, i32* %182, align 4
  %417 = icmp eq i32 %416, 13
  br i1 %417, label %460, label %418

418:                                              ; preds = %415
  %419 = load i32, i32* %176, align 8
  switch i32 %419, label %456 [
    i32 10, label %424
    i32 9, label %424
    i32 1, label %420
    i32 13, label %420
    i32 5, label %420
    i32 3, label %421
    i32 6, label %421
    i32 4, label %424
    i32 18, label %424
    i32 7, label %424
    i32 8, label %424
  ]

420:                                              ; preds = %418, %418, %418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  br label %455

421:                                              ; preds = %418, %418
  %422 = load i32, i32* %183, align 8
  %423 = icmp eq i32 %422, 2
  br i1 %423, label %456, label %426

424:                                              ; preds = %418, %418, %418, %418, %418, %418
  %425 = load i32, i32* %183, align 8
  br label %426

426:                                              ; preds = %424, %421
  %427 = phi i32 [ %425, %424 ], [ %422, %421 ]
  switch i32 %427, label %449 [
    i32 2, label %428
    i32 5, label %435
  ]

428:                                              ; preds = %426
  %429 = icmp eq i32 %416, 1
  br i1 %429, label %430, label %456

430:                                              ; preds = %428
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %431 = load i32, i32* %176, align 8
  %432 = icmp eq i32 %431, 4
  %433 = select i1 %432, %"class.blink::TextRunIterator"* %172, %"class.blink::TextRunIterator"* %119
  %434 = bitcast %"class.blink::TextRunIterator"* %433 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %434, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %455

435:                                              ; preds = %426
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %436 = load i32, i32* %182, align 4
  %437 = icmp eq i32 %436, 1
  br i1 %437, label %444, label %438

438:                                              ; preds = %435
  %439 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %440 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %439, i64 0, i32 1
  %441 = load i16, i16* %440, align 4
  %442 = and i16 %441, 3968
  %443 = icmp eq i16 %442, 128
  br i1 %443, label %444, label %456

444:                                              ; preds = %438, %435
  %445 = load i32, i32* %176, align 8
  %446 = icmp eq i32 %445, 4
  %447 = select i1 %446, %"class.blink::TextRunIterator"* %172, %"class.blink::TextRunIterator"* %119
  %448 = bitcast %"class.blink::TextRunIterator"* %447 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %448, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %455

449:                                              ; preds = %426
  %450 = icmp eq i32 %416, 1
  br i1 %450, label %451, label %456

451:                                              ; preds = %449
  %452 = icmp eq i32 %419, 4
  %453 = select i1 %452, %"class.blink::TextRunIterator"* %172, %"class.blink::TextRunIterator"* %119
  %454 = bitcast %"class.blink::TextRunIterator"* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %454, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %455

455:                                              ; preds = %430, %451, %444, %420
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  store i32 2, i32* %185, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 2, i32* %183, align 8
  br label %527

456:                                              ; preds = %418, %428, %449, %438, %421
  %457 = load i32, i32* %185, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 2, i32* %183, align 8
  %458 = icmp eq i32 %457, 10
  br i1 %458, label %459, label %527

459:                                              ; preds = %456
  store i32 0, i32* %185, align 8
  br label %527

460:                                              ; preds = %415, %327
  %461 = load i32, i32* %176, align 8
  switch i32 %461, label %506 [
    i32 0, label %462
    i32 10, label %473
    i32 1, label %469
    i32 13, label %469
    i32 2, label %469
    i32 6, label %470
    i32 3, label %473
    i32 4, label %473
    i32 18, label %473
    i32 7, label %473
    i32 8, label %473
    i32 9, label %473
  ]

462:                                              ; preds = %460
  %463 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %464 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %463, i64 0, i32 1
  %465 = load i16, i16* %464, align 4
  %466 = and i16 %465, 3968
  %467 = icmp eq i16 %466, 0
  br i1 %467, label %468, label %506

468:                                              ; preds = %462
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %506

469:                                              ; preds = %460, %460, %460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %506

470:                                              ; preds = %460
  %471 = load i32, i32* %183, align 8
  %472 = icmp eq i32 %471, 5
  br i1 %472, label %506, label %475

473:                                              ; preds = %460, %460, %460, %460, %460, %460, %460
  %474 = load i32, i32* %183, align 8
  br label %475

475:                                              ; preds = %473, %470
  %476 = phi i32 [ %474, %473 ], [ %471, %470 ]
  switch i32 %476, label %486 [
    i32 5, label %495
    i32 2, label %477
  ]

477:                                              ; preds = %475
  %478 = load i32, i32* %182, align 4
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %495, label %480

480:                                              ; preds = %477
  %481 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %482 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %481, i64 0, i32 1
  %483 = load i16, i16* %482, align 4
  %484 = and i16 %483, 3968
  %485 = icmp eq i16 %484, 128
  br i1 %485, label %495, label %496

486:                                              ; preds = %475
  %487 = load i32, i32* %182, align 4
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %496

489:                                              ; preds = %486
  %490 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %491 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %490, i64 0, i32 1
  %492 = load i16, i16* %491, align 4
  %493 = and i16 %492, 3968
  %494 = icmp eq i16 %493, 128
  br i1 %494, label %495, label %496

495:                                              ; preds = %475, %489, %480, %477
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %503

496:                                              ; preds = %480, %489, %486
  %497 = phi i32 [ %478, %480 ], [ 0, %489 ], [ %487, %486 ]
  %498 = load i32, i32* %185, align 8
  %499 = icmp eq i32 %498, 10
  br i1 %499, label %500, label %505

500:                                              ; preds = %496
  %501 = icmp ne i32 %497, 0
  %502 = zext i1 %501 to i32
  br label %503

503:                                              ; preds = %495, %500
  %504 = phi i32 [ %502, %500 ], [ 1, %495 ]
  store i32 %504, i32* %185, align 8
  br label %505

505:                                              ; preds = %503, %496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %506

506:                                              ; preds = %460, %470, %462, %468, %505, %469
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 5, i32* %183, align 8
  %507 = load i32, i32* %185, align 8
  %508 = icmp eq i32 %507, 10
  br i1 %508, label %509, label %527

509:                                              ; preds = %506
  store i32 5, i32* %185, align 8
  br label %527

510:                                              ; preds = %327
  %511 = load i32, i32* %176, align 8
  switch i32 %511, label %513 [
    i32 2, label %512
    i32 4, label %527
  ]

512:                                              ; preds = %510
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 2, i32* %177, align 8
  br label %527

513:                                              ; preds = %510
  %514 = load i8, i8* %16, align 8, !range !15
  %515 = icmp eq i8 %514, 0
  %516 = select i1 %515, %"class.blink::TextRunIterator"* %119, %"class.blink::TextRunIterator"* %117
  %517 = bitcast %"class.blink::TextRunIterator"* %516 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %517, i64 16, i1 false)
  br label %527

518:                                              ; preds = %327
  %519 = load i32, i32* %178, align 8
  %520 = load i32, i32* %179, align 8
  %521 = icmp eq i32 %519, %520
  br i1 %521, label %522, label %527

522:                                              ; preds = %518
  %523 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %180, align 8
  %524 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %181, align 8
  %525 = icmp eq %"class.blink::TextRun"* %523, %524
  br i1 %525, label %526, label %527

526:                                              ; preds = %522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  br label %527

527:                                              ; preds = %455, %518, %510, %327, %522, %526, %512, %513, %506, %509, %456, %459, %414, %385, %347
  %528 = phi i32 [ %333, %327 ], [ 2, %512 ], [ 4, %513 ], [ 18, %526 ], [ 18, %522 ], [ 5, %509 ], [ 5, %506 ], [ 2, %459 ], [ 2, %456 ], [ %333, %414 ], [ 0, %385 ], [ %330, %347 ], [ %511, %510 ], [ 18, %518 ], [ 2, %455 ]
  br i1 %328, label %529, label %572

529:                                              ; preds = %527
  %530 = load i32, i32* %178, align 8
  %531 = load i32, i32* %150, align 8
  %532 = icmp eq i32 %530, %531
  br i1 %532, label %533, label %572

533:                                              ; preds = %529
  %534 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %180, align 8
  %535 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %152, align 8
  %536 = icmp eq %"class.blink::TextRun"* %534, %535
  br i1 %536, label %537, label %572

537:                                              ; preds = %533
  %538 = load i8, i8* %170, align 8, !range !15
  %539 = icmp eq i8 %538, 0
  br i1 %539, label %540, label %549

540:                                              ; preds = %537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %175, i64 16, i1 false)
  %541 = load i32, i32* %177, align 8
  switch i32 %541, label %548 [
    i32 0, label %546
    i32 1, label %546
    i32 5, label %546
    i32 2, label %542
  ]

542:                                              ; preds = %540
  %543 = load i32, i32* %182, align 4
  %544 = icmp eq i32 %543, 0
  %545 = select i1 %544, i32 0, i32 2
  br label %546

546:                                              ; preds = %540, %540, %540, %542
  %547 = phi i32 [ %545, %542 ], [ %541, %540 ], [ %541, %540 ], [ %541, %540 ]
  store i32 %547, i32* %185, align 8
  br label %548

548:                                              ; preds = %546, %540
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %549

549:                                              ; preds = %537, %548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %14, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %157, i64 12, i1 false) #12
  %550 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %551 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %126, align 8
  %552 = icmp eq %"class.blink::BidiContext"* %551, null
  br i1 %552, label %560, label %553

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %551, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = atomicrmw add i32* %554, i32 1 monotonic
  %556 = icmp sgt i32 %555, 0
  br i1 %556, label %560, label %557

557:                                              ; preds = %553
  %558 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %559 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #12
  br label %560

560:                                              ; preds = %557, %553, %549
  %561 = ptrtoint %"class.blink::BidiContext"* %551 to i64
  %562 = bitcast %class.scoped_refptr.1768* %550 to i64*
  %563 = getelementptr inbounds %class.scoped_refptr.1768, %class.scoped_refptr.1768* %550, i64 0, i32 0
  %564 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %563, align 8
  store i64 %561, i64* %562, align 8
  %565 = icmp eq %"class.blink::BidiContext"* %564, null
  br i1 %565, label %618, label %566

566:                                              ; preds = %560
  %567 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %564, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = atomicrmw sub i32* %567, i32 1 acq_rel
  %569 = icmp eq i32 %568, 1
  br i1 %569, label %570, label %618

570:                                              ; preds = %566
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %564) #12
  %571 = bitcast %"class.blink::BidiContext"* %564 to i8*
  call void @free(i8* %571) #12
  br label %618

572:                                              ; preds = %529, %533, %527
  switch i32 %528, label %581 [
    i32 4, label %573
    i32 3, label %577
    i32 6, label %577
    i32 8, label %577
    i32 9, label %577
    i32 10, label %577
    i32 17, label %582
    i32 18, label %582
    i32 14, label %582
    i32 11, label %582
    i32 15, label %582
    i32 12, label %582
    i32 16, label %582
  ]

573:                                              ; preds = %572
  %574 = load i32, i32* %176, align 8
  %575 = icmp eq i32 %574, 2
  br i1 %575, label %582, label %576

576:                                              ; preds = %573
  store i32 4, i32* %176, align 8
  br label %582

577:                                              ; preds = %572, %572, %572, %572, %572
  %578 = load i32, i32* %176, align 8
  switch i32 %578, label %580 [
    i32 0, label %579
    i32 1, label %579
    i32 13, label %579
    i32 2, label %579
    i32 5, label %579
  ]

579:                                              ; preds = %577, %577, %577, %577, %577
  store i32 %528, i32* %176, align 8
  br label %582

580:                                              ; preds = %577
  store i32 10, i32* %176, align 8
  br label %582

581:                                              ; preds = %572
  store i32 %528, i32* %176, align 8
  br label %582

582:                                              ; preds = %572, %572, %572, %572, %572, %572, %572, %573, %576, %579, %580, %581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false)
  %583 = load i8, i8* %16, align 8, !range !15
  %584 = icmp eq i8 %583, 0
  br i1 %584, label %586, label %585

585:                                              ; preds = %582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %121, i64 16, i1 false)
  store i8 0, i8* %16, align 8
  br label %586

586:                                              ; preds = %582, %585
  %587 = load i32, i32* %150, align 8
  %588 = add i32 %587, 1
  store i32 %588, i32* %150, align 8
  %589 = load i32, i32* %191, align 4
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %594, label %591

591:                                              ; preds = %586
  %592 = call zeroext i1 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %593 = and i1 %328, %592
  br i1 %593, label %595, label %594

594:                                              ; preds = %591, %586
  br label %194

595:                                              ; preds = %591
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %14, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %157, i64 12, i1 false) #12
  %596 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %597 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %126, align 8
  %598 = icmp eq %"class.blink::BidiContext"* %597, null
  br i1 %598, label %606, label %599

599:                                              ; preds = %595
  %600 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %597, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = atomicrmw add i32* %600, i32 1 monotonic
  %602 = icmp sgt i32 %601, 0
  br i1 %602, label %606, label %603

603:                                              ; preds = %599
  %604 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %604) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %605 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %604) #12
  br label %606

606:                                              ; preds = %603, %599, %595
  %607 = ptrtoint %"class.blink::BidiContext"* %597 to i64
  %608 = bitcast %class.scoped_refptr.1768* %596 to i64*
  %609 = getelementptr inbounds %class.scoped_refptr.1768, %class.scoped_refptr.1768* %596, i64 0, i32 0
  %610 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %609, align 8
  store i64 %607, i64* %608, align 8
  %611 = icmp eq %"class.blink::BidiContext"* %610, null
  br i1 %611, label %618, label %612

612:                                              ; preds = %606
  %613 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %610, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = atomicrmw sub i32* %613, i32 1 acq_rel
  %615 = icmp eq i32 %614, 1
  br i1 %615, label %616, label %618

616:                                              ; preds = %612
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %610) #12
  %617 = bitcast %"class.blink::BidiContext"* %610 to i8*
  call void @free(i8* %617) #12
  br label %618

618:                                              ; preds = %606, %612, %616, %570, %566, %560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %165, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %167, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %169, i64 16, i1 false)
  %619 = load i8, i8* %171, align 8, !range !15
  store i8 %619, i8* %170, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %130, i64 16, i1 false)
  %620 = load i8, i8* %131, align 8, !range !15
  store i8 %620, i8* %16, align 8
  store i32 10, i32* %185, align 8
  br label %621

621:                                              ; preds = %216, %618
  %622 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 1
  %623 = bitcast %"struct.blink::BidiCharacterRun"** %622 to i64*
  %624 = load i64, i64* %623, align 8
  %625 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 2
  %626 = bitcast %"struct.blink::BidiCharacterRun"** %625 to i64*
  store i64 %624, i64* %626, align 8
  br i1 %4, label %627, label %628

627:                                              ; preds = %621
  call void @_ZNK5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21ReorderRunsFromLevelsERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %628

628:                                              ; preds = %627, %621
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  br i1 %3, label %704, label %629

629:                                              ; preds = %628
  %630 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 3
  %631 = load i32, i32* %630, align 8
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %704, label %633

633:                                              ; preds = %629
  %634 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 17
  %635 = load i8, i8* %634, align 8, !range !15
  %636 = icmp eq i8 %635, 0
  br i1 %636, label %704, label %637

637:                                              ; preds = %633
  %638 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %625, align 8
  %639 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 4
  %640 = load i32, i32* %639, align 4
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %704, label %642

642:                                              ; preds = %637
  %643 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 18
  %644 = load i8, i8* %643, align 1
  %645 = icmp eq i8 %644, 0
  %646 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 3
  %647 = load i32, i32* %646, align 8
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %657, label %649

649:                                              ; preds = %642
  %650 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  br label %651

651:                                              ; preds = %651, %649
  %652 = phi %"class.blink::BidiContext"* [ %650, %649 ], [ %654, %651 ]
  %653 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %652, i64 0, i32 2, i32 0
  %654 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %653, align 8
  %655 = icmp eq %"class.blink::BidiContext"* %654, null
  br i1 %655, label %656, label %651

656:                                              ; preds = %651
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %11, align 8
  store i32 0, i32* %639, align 4
  br label %704

657:                                              ; preds = %642
  %658 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %184, i64 0, i32 0
  %659 = select i1 %645, %"struct.blink::BidiCharacterRun"** %622, %"struct.blink::BidiCharacterRun"** %658
  %660 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %659, align 8
  %661 = icmp eq %"struct.blink::BidiCharacterRun"* %638, %660
  br i1 %661, label %662, label %663

662:                                              ; preds = %657
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %11, align 8
  br label %704

663:                                              ; preds = %657
  br i1 %645, label %664, label %681

664:                                              ; preds = %663, %664
  %665 = phi %"struct.blink::BidiCharacterRun"* [ %667, %664 ], [ null, %663 ]
  %666 = phi %"struct.blink::BidiCharacterRun"** [ %669, %664 ], [ %658, %663 ]
  %667 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %666, align 8
  %668 = icmp eq %"struct.blink::BidiCharacterRun"* %667, %638
  %669 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %667, i64 0, i32 2
  br i1 %668, label %670, label %664

670:                                              ; preds = %664
  %671 = icmp eq %"struct.blink::BidiCharacterRun"* %665, null
  %672 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 2
  %673 = bitcast %"struct.blink::BidiCharacterRun"** %672 to i64*
  %674 = load i64, i64* %673, align 8
  %675 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %665, i64 0, i32 2
  %676 = bitcast %"struct.blink::BidiCharacterRun"** %675 to i64*
  %677 = bitcast %"class.blink::BidiRunList"* %184 to i64*
  %678 = select i1 %671, i64* %677, i64* %676
  store i64 %674, i64* %678, align 8
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %672, align 8
  %679 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %622, align 8
  %680 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %679, i64 0, i32 2
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %680, align 8
  br label %700

681:                                              ; preds = %663
  %682 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %658, align 8
  br label %683

683:                                              ; preds = %683, %681
  %684 = phi %"struct.blink::BidiCharacterRun"* [ %682, %681 ], [ %686, %683 ]
  %685 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %684, i64 0, i32 2
  %686 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %685, align 8
  %687 = icmp eq %"struct.blink::BidiCharacterRun"* %686, %638
  br i1 %687, label %688, label %683

688:                                              ; preds = %683
  %689 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %684, i64 0, i32 2
  %690 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 2
  %691 = bitcast %"struct.blink::BidiCharacterRun"** %690 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = bitcast %"struct.blink::BidiCharacterRun"** %689 to i64*
  store i64 %692, i64* %693, align 8
  %694 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %622, align 8
  %695 = icmp eq %"struct.blink::BidiCharacterRun"* %694, %638
  br i1 %695, label %696, label %697

696:                                              ; preds = %688
  store %"struct.blink::BidiCharacterRun"* %684, %"struct.blink::BidiCharacterRun"** %622, align 8
  br label %697

697:                                              ; preds = %696, %688
  %698 = bitcast %"class.blink::BidiRunList"* %184 to i64*
  %699 = load i64, i64* %698, align 8
  store i64 %699, i64* %691, align 8
  br label %700

700:                                              ; preds = %697, %670
  %701 = phi %"struct.blink::BidiCharacterRun"** [ %658, %697 ], [ %622, %670 ]
  %702 = phi i8 [ 1, %697 ], [ 0, %670 ]
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %701, align 8
  %703 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 1
  store i8 %702, i8* %703, align 1
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %11, align 8
  br label %704

704:                                              ; preds = %633, %700, %662, %656, %637, %629, %628
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %122) #12
  br label %705

705:                                              ; preds = %57, %115, %112, %53, %42, %704
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.2066"*, %"struct.WTF::KeyValuePair.2066"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.2066"* %3, null
  br i1 %4, label %32, label %5, !prof !6

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i64 [ 0, %9 ], [ %28, %27 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.2066", %"struct.WTF::KeyValuePair.2066"* %3, i64 %12, i32 0
  %14 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %13, align 8
  %15 = icmp eq %"struct.blink::BidiCharacterRun"* %14, inttoptr (i64 -1 to %"struct.blink::BidiCharacterRun"*)
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.2066", %"struct.WTF::KeyValuePair.2066"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::TextRunIterator"*, %"class.blink::TextRunIterator"** %17, align 8
  %19 = icmp eq %"class.blink::TextRunIterator"* %18, null
  %20 = bitcast %"class.blink::TextRunIterator"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !6

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.2066", %"struct.WTF::KeyValuePair.2066"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #12
  store %"class.blink::TextRunIterator"* null, %"class.blink::TextRunIterator"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16, %11
  %28 = add nuw nsw i64 %12, 1
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %30, label %11

30:                                               ; preds = %27, %5
  %31 = bitcast %"struct.WTF::KeyValuePair.2066"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #12
  store %"struct.WTF::KeyValuePair.2066"* null, %"struct.WTF::KeyValuePair.2066"** %2, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %34 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !2

37:                                               ; preds = %32
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %33, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %42 = bitcast i8* %41 to %"class.blink::BidiEmbedding"*
  %43 = icmp eq %"class.blink::BidiEmbedding"* %40, %42
  br i1 %43, label %46, label %44, !prof !6

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %33, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2058"* %45, %"class.blink::BidiEmbedding"* %40) #12
  br label %46

46:                                               ; preds = %38, %44
  store %"class.blink::BidiEmbedding"* null, %"class.blink::BidiEmbedding"** %39, align 8
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %48 = load %"class.blink::NoIsolatedRun"*, %"class.blink::NoIsolatedRun"** %47, align 8
  %49 = icmp eq %"class.blink::NoIsolatedRun"* %48, null
  br i1 %49, label %57, label %50, !prof !6

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !2

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  %56 = getelementptr inbounds %"class.blink::NoIsolatedRun", %"class.blink::NoIsolatedRun"* %48, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #12
  store %"class.blink::NoIsolatedRun"* null, %"class.blink::NoIsolatedRun"** %47, align 8
  br label %57

57:                                               ; preds = %46, %55
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::TextRunIterator"*, %"class.blink::TextRunIterator"** %58, align 8
  %60 = icmp eq %"class.blink::TextRunIterator"* %59, null
  %61 = bitcast %"class.blink::TextRunIterator"* %59 to i8*
  br i1 %60, label %68, label %62, !prof !6

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66, !prof !2

66:                                               ; preds = %62
  store i32 0, i32* %63, align 4
  br label %67

67:                                               ; preds = %66, %62
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #12
  store %"class.blink::TextRunIterator"* null, %"class.blink::TextRunIterator"** %58, align 8
  br label %68

68:                                               ; preds = %57, %67
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %70 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %69, align 8
  %71 = icmp eq %"class.blink::BidiContext"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %70) #12
  %77 = bitcast %"class.blink::BidiContext"* %70 to i8*
  tail call void @free(i8* %77) #12
  br label %78

78:                                               ; preds = %68, %72, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LayoutSVGInlineText28ComputeNewScaledFontForStyleERKNS_12LayoutObjectERfRNS_4FontE(%"class.blink::LayoutObject"* dereferenceable(88), float* nocapture dereferenceable(4), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontDescription", align 8
  %5 = alloca %"class.blink::Font", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call float @_ZN5blink16SVGLayoutSupport36CalculateScreenFontSizeScalingFactorEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %0) #12
  store float %8, float* %1, align 4
  %9 = fcmp une float %8, 0.000000e+00
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  store float 1.000000e+00, float* %1, align 4
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %14, i64 0, i32 1
  %16 = tail call dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"* %2, %"class.blink::Font"* dereferenceable(88) %15) #12
  br label %84

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %21, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %21, i64 0, i32 1, i32 0, i32 12, i32 0
  %24 = bitcast %"struct.blink::FontDescription::BitFields"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 402653184
  %27 = icmp eq i64 %26, 402653184
  br i1 %27, label %28, label %29

28:                                               ; preds = %17
  store float 1.000000e+00, float* %1, align 4
  br label %29

29:                                               ; preds = %28, %17
  %30 = phi float [ 1.000000e+00, %28 ], [ %8, %17 ]
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %41

34:                                               ; preds = %29, %34
  %35 = phi %"class.blink::LayoutObject"* [ %37, %34 ], [ %0, %29 ]
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 7
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %34, label %41

41:                                               ; preds = %34, %29
  %42 = phi %"class.blink::Node"* [ %32, %29 ], [ %39, %34 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = load i64, i64* %24, align 8
  %48 = trunc i64 %47 to i8
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %21, i64 0, i32 1, i32 0, i32 4
  %51 = load float, float* %50, align 8
  %52 = tail call float @_ZN5blink17FontSizeFunctions32GetComputedSizeFromSpecifiedSizeEPKNS_8DocumentEfbfNS_20ApplyMinimumFontSizeE(%"class.blink::Document"* %46, float %30, i1 zeroext %49, float %51, i32 0) #12
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %21, i64 0, i32 1, i32 0, i32 5
  %54 = load float, float* %53, align 4
  %55 = fcmp oeq float %52, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %41
  %57 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %18, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %57, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %59, i64 0, i32 1
  %61 = tail call dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"* %2, %"class.blink::Font"* dereferenceable(88) %60) #12
  br label %84

62:                                               ; preds = %41
  %63 = bitcast %"class.blink::FontDescription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %63) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink19LayoutSVGInlineText28ComputeNewScaledFontForStyleERKNS_12LayoutObjectERfRNS_4FontE.font_description to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %4, %"class.blink::FontDescription"* dereferenceable(80) %22) #12
  %64 = fcmp ult float %52, 0x47EFFFFFE0000000
  %65 = fcmp ole float %52, 0xC7EFFFFFE0000000
  %66 = select i1 %65, float 0xC7EFFFFFE0000000, float %52
  %67 = select i1 %64, float %66, float 0x47EFFFFFE0000000
  %68 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 5
  store float %67, float* %68, align 4
  %69 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 8
  %70 = load float, float* %69, align 8
  %71 = load float, float* %1, align 4
  %72 = fmul float %70, %71
  store float %72, float* %69, align 8
  call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* nonnull %4) #12
  %73 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 9
  %74 = load float, float* %73, align 4
  %75 = load float, float* %1, align 4
  %76 = fmul float %74, %75
  store float %76, float* %73, align 4
  %77 = bitcast %"class.blink::Font"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %77) #12
  %78 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 59, i32 0, i32 0
  %79 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %79, i64 0, i32 37, i32 0, i32 0
  %81 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %81, i64 0, i32 0
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionEPNS_12FontSelectorE(%"class.blink::Font"* nonnull %5, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4, %"class.blink::FontSelector"* %82) #12
  %83 = call dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"* %2, %"class.blink::Font"* nonnull dereferenceable(88) %5) #12
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %77) #12
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %63) #12
  br label %84

84:                                               ; preds = %56, %62, %10
  ret void
}

declare float @_ZN5blink16SVGLayoutSupport36CalculateScreenFontSizeScalingFactorEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"*, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #1

declare float @_ZN5blink17FontSizeFunctions32GetComputedSizeFromSpecifiedSizeEPKNS_8DocumentEfbfNS_20ApplyMinimumFontSizeE(%"class.blink::Document"*, float, i1 zeroext, float, i32) local_unnamed_addr #1

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN5blink4FontC1ERKNS_15FontDescriptionEPNS_12FontSelectorE(%"class.blink::Font"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontSelector"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #12
  %17 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.27", %"class.base::RefCounted.27"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.27"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.27"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #12
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #12
  br label %55

55:                                               ; preds = %1, %5, %53
  %56 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %57 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %56, align 8
  %58 = icmp eq %"class.blink::FontVariationSettings"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #12
  %62 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %60, i64 -4
  %67 = bitcast %"class.base::RefCounted.20"* %66 to %"class.blink::FontTagValuePair.16"**
  %68 = load %"class.blink::FontTagValuePair.16"*, %"class.blink::FontTagValuePair.16"** %67, align 8
  %69 = icmp eq %"class.blink::FontTagValuePair.16"* %68, null
  %70 = bitcast %"class.blink::FontTagValuePair.16"* %68 to i8*
  br i1 %69, label %77, label %71, !prof !6

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.base::RefCounted.20", %"class.base::RefCounted.20"* %60, i64 -1, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #12
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.base::RefCounted.20"* %66 to i8*
  tail call void @free(i8* %78) #12
  br label %79

79:                                               ; preds = %55, %59, %77
  %80 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %81 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %80, align 8
  %82 = icmp eq %"class.blink::FontFeatureSettings"* %81, null
  br i1 %82, label %103, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.10", %"class.base::RefCounted.10"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #12
  %86 = getelementptr inbounds %"class.base::RefCounted.10", %"class.base::RefCounted.10"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.10", %"class.base::RefCounted.10"* %84, i64 -4
  %91 = bitcast %"class.base::RefCounted.10"* %90 to %"class.blink::FontTagValuePair"**
  %92 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %91, align 8
  %93 = icmp eq %"class.blink::FontTagValuePair"* %92, null
  %94 = bitcast %"class.blink::FontTagValuePair"* %92 to i8*
  br i1 %93, label %101, label %95, !prof !6

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted.10", %"class.base::RefCounted.10"* %84, i64 -1, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99, !prof !2

99:                                               ; preds = %95
  store i32 0, i32* %96, align 4
  br label %100

100:                                              ; preds = %99, %95
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #12
  br label %101

101:                                              ; preds = %100, %89
  %102 = bitcast %"class.base::RefCounted.10"* %90 to i8*
  tail call void @free(i8* %102) #12
  br label %103

103:                                              ; preds = %79, %83, %101
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %104) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink19LayoutSVGInlineText20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutSVGInlineText"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = bitcast %"class.blink::LayoutObject"* %4 to { i64, i64 } (%"class.blink::LayoutObject"*, i32)***
  %6 = load { i64, i64 } (%"class.blink::LayoutObject"*, i32)**, { i64, i64 } (%"class.blink::LayoutObject"*, i32)*** %5, align 8
  %7 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutObject"*, i32)*, { i64, i64 } (%"class.blink::LayoutObject"*, i32)** %6, i64 71
  %8 = load { i64, i64 } (%"class.blink::LayoutObject"*, i32)*, { i64, i64 } (%"class.blink::LayoutObject"*, i32)** %7, align 8
  %9 = tail call { i64, i64 } %8(%"class.blink::LayoutObject"* %4, i32 %1) #12
  ret { i64, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink19LayoutSVGInlineText31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutSVGInlineText"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = bitcast %"class.blink::LayoutObject"* %3 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %5 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %5, i64 39
  %7 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %6, align 8
  %8 = tail call { <2 x float>, <2 x float> } %7(%"class.blink::LayoutObject"* %3) #12
  ret { <2 x float>, <2 x float> } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19LayoutSVGInlineTextD2Ev(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutSVGInlineText"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %3, align 8
  %5 = icmp eq %"class.blink::SVGTextMetrics"* %4, null
  %6 = bitcast %"class.blink::SVGTextMetrics"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !6

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #12
  store %"class.blink::SVGTextMetrics"* null, %"class.blink::SVGTextMetrics"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.1695"*, %"struct.WTF::KeyValuePair.1695"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair.1695"* %15, null
  br i1 %16, label %19, label %17, !prof !6

17:                                               ; preds = %13
  %18 = bitcast %"struct.WTF::KeyValuePair.1695"* %15 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #12
  store %"struct.WTF::KeyValuePair.1695"* null, %"struct.WTF::KeyValuePair.1695"** %14, align 8
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 2
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %20) #12
  %21 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0
  tail call void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"* %21) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19LayoutSVGInlineTextD0Ev(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutSVGInlineText"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %3, align 8
  %5 = icmp eq %"class.blink::SVGTextMetrics"* %4, null
  %6 = bitcast %"class.blink::SVGTextMetrics"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !6

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #12
  store %"class.blink::SVGTextMetrics"* null, %"class.blink::SVGTextMetrics"** %3, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.1695"*, %"struct.WTF::KeyValuePair.1695"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair.1695"* %15, null
  br i1 %16, label %19, label %17, !prof !6

17:                                               ; preds = %13
  %18 = bitcast %"struct.WTF::KeyValuePair.1695"* %15 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #12
  store %"struct.WTF::KeyValuePair.1695"* null, %"struct.WTF::KeyValuePair.1695"** %14, align 8
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 2
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %20) #12
  %21 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 0, i32 0
  tail call void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"* %21) #12
  %22 = bitcast %"class.blink::LayoutSVGInlineText"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %22) #12
  ret void
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv(%"class.blink::ImageResourceObserver"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink19LayoutSVGInlineText7GetNameEv(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #12
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #12
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsBoxModelObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink19LayoutSVGInlineText17ObjectBoundingBoxEv(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { <2 x float>, <2 x float> } @_ZNK5blink19LayoutSVGInlineText21FloatLinesBoundingBoxEv(%"class.blink::LayoutSVGInlineText"* %0)
  ret { <2 x float>, <2 x float> } %2
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %9 = bitcast %union.anon.1690* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZN5blink10LayoutText31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutText"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE(%"class.blink::LayoutText"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i16 @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject20RecalcVisualOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LayoutText12UpdateLayoutEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1430"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutText"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink10LayoutText13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutText"*, %"class.WTF::Vector.2070"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink10LayoutText36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText6lengthEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

declare { i64, i64 } @_ZNK5blink10LayoutText24LocalSelectionVisualRectEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.2077"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink10LayoutText15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutText"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink10LayoutText28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutText"*, i8 zeroext) unnamed_addr #1

declare %"class.blink::DisplayItemClient"* @_ZNK5blink10LayoutText29GetSelectionDisplayItemClientEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink10LayoutText9DebugRectEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19LayoutSVGInlineText8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutSVGInlineText"*, i32) unnamed_addr #0 comdat align 2 {
  switch i32 %1, label %3 [
    i32 65, label %4
    i32 58, label %4
  ]

3:                                                ; preds = %2
  br label %4

4:                                                ; preds = %2, %2, %3
  %5 = phi i1 [ true, %2 ], [ false, %3 ], [ true, %2 ]
  ret i1 %5
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10LayoutText43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutText"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink10LayoutText15WillBeDestroyedEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject16InsertedIntoTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject15ClearPaintFlagsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink10LayoutText33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i64 @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE(%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10LayoutText11IsWordBreakEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText15TextStartOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutText"* @_ZNK5blink10LayoutText18GetFirstLetterPartEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutText"* null
}

declare float @_ZNK5blink10LayoutText5WidthEjjRKNS_4FontENS_10LayoutUnitENS_13TextDirectionEPN3WTF7HashSetIPKNS_14SimpleFontDataENS6_7PtrHashIS9_EENS6_10HashTraitsISA_EENS6_18PartitionAllocatorEEEPNS_9FloatRectEf(%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"* dereferenceable(88), i32, i8 zeroext, %"class.WTF::HashSet.2078"*, %"class.blink::FloatRect"*, float) unnamed_addr #1

declare float @_ZNK5blink10LayoutText5WidthEjjNS_10LayoutUnitENS_13TextDirectionEbPN3WTF7HashSetIPKNS_14SimpleFontDataENS3_7PtrHashIS6_EENS3_10HashTraitsIS7_EENS3_18PartitionAllocatorEEEPNS_9FloatRectEf(%"class.blink::LayoutText"*, i32, i32, i32, i8 zeroext, i1 zeroext, %"class.WTF::HashSet.2078"*, %"class.blink::FloatRect"*, float) unnamed_addr #1

declare void @_ZN5blink10LayoutText13TransformTextEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare void @_ZNK5blink10LayoutText22PositionForCaretOffsetEj(%"class.blink::PositionTemplate"* sret, %"class.blink::LayoutText"*, i32) unnamed_addr #1

declare i64 @_ZNK5blink10LayoutText22CaretOffsetForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZNK5blink10LayoutText14CaretMinOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare i32 @_ZNK5blink10LayoutText14CaretMaxOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #1

declare zeroext i16 @_ZNK5blink10LayoutText17PreviousCharacterEv(%"class.blink::LayoutText"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::span"* @_ZNK5blink10LayoutText16GetNGInlineItemsEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.base::span"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::span"* @_ZN5blink10LayoutText16GetNGInlineItemsEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.base::span"* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink19LayoutSVGInlineTextD1Ev(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 -1, i32 4, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 66
  %5 = bitcast i32* %4 to %"class.blink::SVGTextMetrics"**
  %6 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %5, align 8
  %7 = icmp eq %"class.blink::SVGTextMetrics"* %6, null
  %8 = bitcast %"class.blink::SVGTextMetrics"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !6

9:                                                ; preds = %1
  %10 = getelementptr inbounds i32, i32* %2, i64 69
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #12
  store %"class.blink::SVGTextMetrics"* null, %"class.blink::SVGTextMetrics"** %5, align 8
  br label %15

15:                                               ; preds = %14, %1
  %16 = getelementptr inbounds i32, i32* %2, i64 60
  %17 = bitcast i32* %16 to %"struct.WTF::KeyValuePair.1695"**
  %18 = load %"struct.WTF::KeyValuePair.1695"*, %"struct.WTF::KeyValuePair.1695"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair.1695"* %18, null
  br i1 %19, label %22, label %20, !prof !6

20:                                               ; preds = %15
  %21 = bitcast %"struct.WTF::KeyValuePair.1695"* %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #12
  store %"struct.WTF::KeyValuePair.1695"* null, %"struct.WTF::KeyValuePair.1695"** %17, align 8
  br label %22

22:                                               ; preds = %15, %20
  %23 = getelementptr inbounds i32, i32* %2, i64 38
  %24 = bitcast i32* %23 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %24) #12
  %25 = bitcast i32* %2 to %"class.blink::LayoutText"*
  tail call void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"* %25) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink19LayoutSVGInlineTextD0Ev(%"class.blink::LayoutSVGInlineText"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGInlineText", %"class.blink::LayoutSVGInlineText"* %0, i64 -1, i32 4, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink19LayoutSVGInlineTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 66
  %5 = bitcast i32* %4 to %"class.blink::SVGTextMetrics"**
  %6 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %5, align 8
  %7 = icmp eq %"class.blink::SVGTextMetrics"* %6, null
  %8 = bitcast %"class.blink::SVGTextMetrics"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !6

9:                                                ; preds = %1
  %10 = getelementptr inbounds i32, i32* %2, i64 69
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #12
  store %"class.blink::SVGTextMetrics"* null, %"class.blink::SVGTextMetrics"** %5, align 8
  br label %15

15:                                               ; preds = %14, %1
  %16 = getelementptr inbounds i32, i32* %2, i64 60
  %17 = bitcast i32* %16 to %"struct.WTF::KeyValuePair.1695"**
  %18 = load %"struct.WTF::KeyValuePair.1695"*, %"struct.WTF::KeyValuePair.1695"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair.1695"* %18, null
  br i1 %19, label %22, label %20, !prof !6

20:                                               ; preds = %15
  %21 = bitcast %"struct.WTF::KeyValuePair.1695"* %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #12
  store %"struct.WTF::KeyValuePair.1695"* null, %"struct.WTF::KeyValuePair.1695"** %17, align 8
  br label %22

22:                                               ; preds = %15, %20
  %23 = getelementptr inbounds i32, i32* %2, i64 38
  %24 = bitcast i32* %23 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %24) #12
  %25 = bitcast i32* %2 to %"class.blink::LayoutText"*
  tail call void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"* %25) #12
  %26 = bitcast i32* %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %26) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !6

23:                                               ; preds = %19
  %24 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #12
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = tail call i8* @_Znwm(i64 192) #13
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #12
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #12
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #12
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #12
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #12
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #12
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #12
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #12
  %40 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #12
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #12
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #12
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #12
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #12
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !16

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !17

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !18

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #13
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #13, !noalias !19
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !19
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #13
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #8

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #1

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnPathEv(%"class.blink::AffineTransform"* noalias sret, %"struct.blink::SVGTextFragment"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  %5 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 4
  %6 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %7 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -1, i64 48, i1 false)
  %8 = load float, float* %6, align 8
  %9 = fcmp une float %8, 1.000000e+00
  %10 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  br i1 %9, label %14, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::AffineTransform"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %13, i64 48, i1 false)
  br label %39

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 3
  %17 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 4
  %18 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -1, i64 48, i1 false) #12, !alias.scope !22
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %3) #12
  %19 = load float, float* %6, align 8, !noalias !22
  %20 = fcmp une float %19, 1.000000e+00
  br i1 %20, label %21, label %36

21:                                               ; preds = %14
  %22 = fpext float %19 to double
  %23 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 10
  %24 = load float, float* %23, align 4, !noalias !22
  %25 = fpext float %24 to double
  call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* nonnull %3, double %22, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %25, double 0.000000e+00) #12
  %26 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8, !noalias !22
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = bitcast %"class.blink::AffineTransform"* %3 to i64*
  %31 = load i64, i64* %30, align 8, !alias.scope !22
  %32 = bitcast double* %16 to i64*
  store i64 %31, i64* %32, align 8, !alias.scope !22
  store double 1.000000e+00, double* %15, align 8, !alias.scope !22
  %33 = bitcast double* %17 to i64*
  %34 = load i64, i64* %33, align 8, !alias.scope !22
  %35 = bitcast double* %18 to i64*
  store i64 %34, i64* %35, align 8, !alias.scope !22
  store double 0.000000e+00, double* %17, align 8, !alias.scope !22
  br label %36

36:                                               ; preds = %14, %21, %29
  %37 = bitcast %"class.blink::AffineTransform"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %37, i64 48, i1 false) #12
  %38 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* %0, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %3) #12
  br label %39

39:                                               ; preds = %36, %12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #12
  %40 = call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %0) #12
  br i1 %40, label %57, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 3
  %43 = bitcast double* %5 to <2 x double>*
  %44 = load <2 x double>, <2 x double>* %43, align 8
  %45 = bitcast float* %42 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  %47 = fpext <2 x float> %46 to <2 x double>
  %48 = fadd <2 x double> %44, %47
  %49 = bitcast double* %5 to <2 x double>*
  store <2 x double> %48, <2 x double>* %49, align 8
  %50 = extractelement <2 x float> %46, i32 0
  %51 = fsub float -0.000000e+00, %50
  %52 = fpext float %51 to double
  %53 = extractelement <2 x float> %46, i32 1
  %54 = fsub float -0.000000e+00, %53
  %55 = fpext float %54 to double
  %56 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %0, double %52, double %55) #12
  br label %57

57:                                               ; preds = %41, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15SVGTextFragment27BuildTransformForTextOnLineEv(%"class.blink::AffineTransform"* noalias sret, %"struct.blink::SVGTextFragment"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 8
  %6 = tail call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* %5) #12
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 3
  %10 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 4
  %11 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 5
  %12 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -1, i64 48, i1 false) #12, !alias.scope !25
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #12
  %13 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %14 = load float, float* %13, align 8, !noalias !25
  %15 = fcmp une float %14, 1.000000e+00
  br i1 %15, label %16, label %76

16:                                               ; preds = %7
  %17 = fpext float %14 to double
  %18 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 10
  %19 = load float, float* %18, align 4, !noalias !25
  %20 = fpext float %19 to double
  tail call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* %0, double %17, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %20, double 0.000000e+00) #12
  %21 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %22 = load i32, i32* %21, align 8, !noalias !25
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %76

24:                                               ; preds = %16
  %25 = bitcast %"class.blink::AffineTransform"* %0 to i64*
  %26 = load i64, i64* %25, align 8, !alias.scope !25
  %27 = bitcast double* %9 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !25
  store double 1.000000e+00, double* %8, align 8, !alias.scope !25
  %28 = bitcast double* %10 to i64*
  %29 = load i64, i64* %28, align 8, !alias.scope !25
  %30 = bitcast double* %11 to i64*
  store i64 %29, i64* %30, align 8, !alias.scope !25
  store double 0.000000e+00, double* %10, align 8, !alias.scope !25
  br label %76

31:                                               ; preds = %2
  %32 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %3, i64 0, i32 0, i64 4
  %34 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %34, i64 48, i1 false)
  %35 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 3
  %36 = bitcast double* %33 to <2 x double>*
  %37 = load <2 x double>, <2 x double>* %36, align 8
  %38 = bitcast float* %35 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  %40 = fpext <2 x float> %39 to <2 x double>
  %41 = fadd <2 x double> %37, %40
  %42 = bitcast double* %33 to <2 x double>*
  store <2 x double> %41, <2 x double>* %42, align 8
  %43 = extractelement <2 x float> %39, i32 0
  %44 = fsub float -0.000000e+00, %43
  %45 = fpext float %44 to double
  %46 = extractelement <2 x float> %39, i32 1
  %47 = fsub float -0.000000e+00, %46
  %48 = fpext float %47 to double
  %49 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %3, double %45, double %48) #12
  %50 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 0
  %52 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 3
  %53 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 4
  %54 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %4, i64 0, i32 0, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -1, i64 48, i1 false) #12, !alias.scope !28
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %4) #12
  %55 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 9
  %56 = load float, float* %55, align 8, !noalias !28
  %57 = fcmp une float %56, 1.000000e+00
  br i1 %57, label %58, label %73

58:                                               ; preds = %31
  %59 = fpext float %56 to double
  %60 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 10
  %61 = load float, float* %60, align 4, !noalias !28
  %62 = fpext float %61 to double
  call void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"* nonnull %4, double %59, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %62, double 0.000000e+00) #12
  %63 = getelementptr inbounds %"struct.blink::SVGTextFragment", %"struct.blink::SVGTextFragment"* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 8, !noalias !28
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %58
  %67 = bitcast %"class.blink::AffineTransform"* %4 to i64*
  %68 = load i64, i64* %67, align 8, !alias.scope !28
  %69 = bitcast double* %52 to i64*
  store i64 %68, i64* %69, align 8, !alias.scope !28
  store double 1.000000e+00, double* %51, align 8, !alias.scope !28
  %70 = bitcast double* %53 to i64*
  %71 = load i64, i64* %70, align 8, !alias.scope !28
  %72 = bitcast double* %54 to i64*
  store i64 %71, i64* %72, align 8, !alias.scope !28
  store double 0.000000e+00, double* %53, align 8, !alias.scope !28
  br label %73

73:                                               ; preds = %31, %58, %66
  %74 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"* nonnull %3, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #12
  %75 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* nonnull align 8 %32, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #12
  br label %76

76:                                               ; preds = %24, %16, %7, %73
  ret void
}

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

declare void @_ZN5blink15AffineTransform9SetMatrixEdddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform11PreMultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext, i32, i1 zeroext, i32, %"class.blink::BidiContext"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %2, align 8
  %4 = icmp eq %"class.blink::BidiContext"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %3) #12
  %10 = bitcast %"class.blink::BidiContext"* %3 to i8*
  tail call void @free(i8* %10) #12
  ret void

11:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2058"*, %"class.blink::BidiEmbedding"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"class.blink::BidiEmbedding"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.1661"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #12
  %21 = bitcast %"class.base::RefCounted.1661"* %19 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %27 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.1661"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #12
  %33 = bitcast %"class.base::RefCounted.1661"* %31 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.1661"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #12
  %46 = bitcast %"class.base::RefCounted.1661"* %44 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.1661"* %19 to %"class.blink::SharedFontFamily"*
  tail call void @_ZN5blink16SharedFontFamilyD2Ev(%"class.blink::SharedFontFamily"* nonnull %20) #12
  %21 = bitcast %"class.base::RefCounted.1661"* %19 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %10
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %27 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.1661"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #12
  %33 = bitcast %"class.base::RefCounted.1661"* %31 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %30, %24
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.1661", %"class.base::RefCounted.1661"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.1661"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #12
  %46 = bitcast %"class.base::RefCounted.1661"* %44 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::CharacterRange"* @_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2042"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2042", %"class.WTF::Vector.2042"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2042", %"class.WTF::Vector.2042"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CharacterRange"*, %"struct.blink::CharacterRange"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %24, i64 %25
  ret %"struct.blink::CharacterRange"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14SVGTextMetricsELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1696"*, %"class.blink::SVGTextMetrics"* dereferenceable(12)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1696", %"class.WTF::Vector.1696"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1696", %"class.WTF::Vector.1696"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %6, align 8
  %8 = icmp ugt %"class.blink::SVGTextMetrics"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %7, i64 %10
  %12 = icmp ugt %"class.blink::SVGTextMetrics"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1696", %"class.WTF::Vector.1696"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::SVGTextMetrics"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGTextMetricsEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGTextMetricsEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1696"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 12
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::SVGTextMetrics"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 12
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::SVGTextMetrics"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::SVGTextMetrics"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !6

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.1696"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.1696"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::SVGTextMetrics"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::SVGTextMetrics"* %1 to i64
  %56 = ptrtoint %"class.blink::SVGTextMetrics"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 12
  %59 = getelementptr inbounds %"class.WTF::Vector.1696", %"class.WTF::Vector.1696"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !6

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::SVGTextMetrics"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGTextMetricsEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGTextMetricsEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1696"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::SVGTextMetrics"*, %"class.blink::SVGTextMetrics"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::SVGTextMetrics"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::SVGTextMetrics"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !6

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.1696"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.1696"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 12
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::SVGTextMetrics"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::SVGTextMetrics"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::SVGTextMetrics"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::SVGTextMetrics"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::SVGTextMetrics", %"class.blink::SVGTextMetrics"* %100, i64 %103
  %105 = bitcast %"class.blink::SVGTextMetrics"* %104 to i8*
  %106 = bitcast %"class.blink::SVGTextMetrics"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 12, i1 false) #12
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14SVGTextMetricsEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 178782208
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 178782208) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 12
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 8, !range !15
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %95

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %13, label %95

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp uge i32 %18, %20
  %22 = icmp ult i32 %9, %18
  %23 = or i1 %22, %21
  br i1 %23, label %26, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 8
  br label %26

26:                                               ; preds = %24, %13
  %27 = phi i32 [ %9, %13 ], [ %18, %24 ]
  %28 = add nuw i32 %27, 1
  %29 = icmp ult i32 %27, %16
  br i1 %29, label %90, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 1
  %35 = bitcast %"class.blink::BidiRunList"* %1 to i8**
  %36 = bitcast %"struct.blink::BidiCharacterRun"** %34 to i8**
  %37 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 3
  br label %38

38:                                               ; preds = %30, %83
  %39 = phi i32 [ %16, %30 ], [ %43, %83 ]
  %40 = sub i32 %28, %39
  %41 = icmp ugt i32 %40, 65535
  %42 = add i32 %39, 65535
  %43 = select i1 %41, i32 %42, i32 %28
  %44 = tail call noalias i8* @malloc(i64 24) #12
  %45 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %31, align 8
  %46 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %45, i64 0, i32 1
  %47 = load i16, i16* %46, align 4
  %48 = trunc i16 %47 to i8
  %49 = and i8 %48, 127
  %50 = load i32, i32* %32, align 8
  %51 = lshr i16 %47, 7
  %52 = and i16 %51, 31
  %53 = zext i16 %52 to i32
  %54 = lshr i16 %47, 12
  %55 = trunc i16 %54 to i8
  %56 = and i8 %55, 1
  store i8 %56, i8* %44, align 8
  %57 = getelementptr inbounds i8, i8* %44, i64 1
  %58 = getelementptr inbounds i8, i8* %44, i64 8
  %59 = bitcast i8* %58 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %44, i64 16
  %61 = bitcast i8* %60 to i32*
  store i32 %39, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %44, i64 20
  %63 = bitcast i8* %62 to i32*
  store i32 %43, i32* %63, align 4
  %64 = icmp eq i32 %50, 10
  %65 = select i1 %64, i32 %53, i32 %50
  store i8 %49, i8* %57, align 1
  %66 = and i8 %48, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %38
  switch i32 %65, label %76 [
    i32 5, label %69
    i32 2, label %69
    i32 0, label %69
  ]

69:                                               ; preds = %68, %68, %68
  %70 = add nuw i8 %49, 1
  store i8 %70, i8* %57, align 1
  br label %76

71:                                               ; preds = %38
  switch i32 %65, label %76 [
    i32 1, label %72
    i32 5, label %74
    i32 2, label %74
  ]

72:                                               ; preds = %71
  %73 = add nuw i8 %49, 1
  store i8 %73, i8* %57, align 1
  br label %76

74:                                               ; preds = %71, %71
  %75 = add nuw i8 %49, 2
  store i8 %75, i8* %57, align 1
  br label %76

76:                                               ; preds = %68, %69, %71, %72, %74
  %77 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %33, align 8
  %78 = icmp eq %"struct.blink::BidiCharacterRun"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %76
  %80 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %34, align 8
  %81 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %80, i64 0, i32 2
  %82 = bitcast %"struct.blink::BidiCharacterRun"** %81 to i8**
  br label %83

83:                                               ; preds = %76, %79
  %84 = phi i8** [ %82, %79 ], [ %35, %76 ]
  store i8* %44, i8** %84, align 8
  store i8* %44, i8** %36, align 8
  %85 = load i32, i32* %37, align 8
  %86 = add i32 %85, 1
  store i32 %86, i32* %37, align 8
  %87 = icmp ult i32 %27, %43
  br i1 %87, label %88, label %38

88:                                               ; preds = %83
  %89 = load i32, i32* %8, align 8
  br label %90

90:                                               ; preds = %88, %26
  %91 = phi i32 [ %89, %88 ], [ %9, %26 ]
  %92 = add i32 %91, 1
  store i32 %92, i32* %8, align 8
  %93 = bitcast %"class.blink::TextRunIterator"* %14 to i8*
  %94 = bitcast %"class.blink::TextRunIterator"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false)
  br label %95

95:                                               ; preds = %6, %2, %90
  %96 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  store i32 10, i32* %96, align 8
  %97 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  store i32 10, i32* %97, align 8
  ret void
}

declare %"class.blink::BidiContext"* @_ZN5blink11BidiContext41CopyStackRemovingUnicodeEmbeddingContextsEv(%"class.blink::BidiContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %7 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 1
  %9 = load i16, i16* %8, align 4
  %10 = trunc i16 %9 to i8
  %11 = and i8 %10, 127
  %12 = ptrtoint %"class.blink::BidiContext"* %7 to i64
  %13 = icmp eq %"class.blink::BidiContext"* %7, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %2, %14, %18
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %24, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %41

32:                                               ; preds = %107, %21
  %33 = phi i64 [ %12, %21 ], [ %108, %107 ]
  %34 = inttoptr i64 %33 to %"class.blink::BidiContext"*
  %35 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 4
  %37 = trunc i16 %36 to i8
  %38 = and i8 %37, 127
  %39 = zext i8 %11 to i32
  %40 = icmp ugt i8 %38, %11
  br i1 %40, label %111, label %115

41:                                               ; preds = %30, %107
  %42 = phi %"class.blink::BidiEmbedding"* [ %24, %30 ], [ %109, %107 ]
  %43 = phi i64 [ %12, %30 ], [ %108, %107 ]
  %44 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %72 [
    i32 16, label %46
    i32 14, label %66
  ]

46:                                               ; preds = %41
  %47 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %48 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 2, i32 0
  %49 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %48, align 8
  %50 = icmp eq %"class.blink::BidiContext"* %49, null
  br i1 %50, label %107, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %57

57:                                               ; preds = %55, %51
  %58 = ptrtoint %"class.blink::BidiContext"* %49 to i64
  %59 = icmp eq i64 %43, 0
  br i1 %59, label %107, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %107

64:                                               ; preds = %60
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %47) #12
  %65 = inttoptr i64 %43 to i8*
  call void @free(i8* %65) #12
  br label %107

66:                                               ; preds = %41
  %67 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %68 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %67, i64 0, i32 1
  %69 = load i16, i16* %68, align 4
  %70 = trunc i16 %69 to i8
  %71 = and i8 %70, 127
  br label %79

72:                                               ; preds = %41
  %73 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %74 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %73, i64 0, i32 1
  %75 = load i16, i16* %74, align 4
  %76 = trunc i16 %75 to i8
  %77 = and i8 %76, 127
  switch i32 %45, label %85 [
    i32 12, label %78
    i32 15, label %79
  ]

78:                                               ; preds = %72
  br label %85

79:                                               ; preds = %72, %66
  %80 = phi i8 [ %71, %66 ], [ %77, %72 ]
  %81 = phi %"class.blink::BidiContext"* [ %67, %66 ], [ %73, %72 ]
  %82 = phi i1 [ false, %66 ], [ true, %72 ]
  %83 = add nuw i8 %80, 1
  %84 = or i8 %83, 1
  br label %89

85:                                               ; preds = %72, %78
  %86 = phi i1 [ true, %78 ], [ false, %72 ]
  %87 = add nuw i8 %77, 2
  %88 = and i8 %87, -2
  br label %89

89:                                               ; preds = %85, %79
  %90 = phi %"class.blink::BidiContext"* [ %81, %79 ], [ %73, %85 ]
  %91 = phi i1 [ %82, %79 ], [ %86, %85 ]
  %92 = phi i32 [ 1, %79 ], [ 0, %85 ]
  %93 = phi i8 [ %84, %79 ], [ %88, %85 ]
  %94 = icmp ult i8 %93, 125
  br i1 %94, label %95, label %107

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %93, i32 %92, i1 zeroext %91, i32 %97, %"class.blink::BidiContext"* %90) #12
  %99 = ptrtoint %"class.blink::BidiContext"* %98 to i64
  %100 = icmp eq %"class.blink::BidiContext"* %90, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw sub i32* %102, i32 1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %90) #12
  %106 = bitcast %"class.blink::BidiContext"* %90 to i8*
  call void @free(i8* %106) #12
  br label %107

107:                                              ; preds = %105, %101, %95, %64, %60, %57, %89, %46
  %108 = phi i64 [ %43, %46 ], [ %43, %89 ], [ %58, %57 ], [ %58, %60 ], [ %58, %64 ], [ %99, %95 ], [ %99, %101 ], [ %99, %105 ]
  %109 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 1
  %110 = icmp eq %"class.blink::BidiEmbedding"* %109, %28
  br i1 %110, label %32, label %41

111:                                              ; preds = %32
  %112 = and i32 %39, 1
  %113 = and i8 %37, 1
  %114 = zext i8 %113 to i32
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %112, i32 %114)
  br label %119

115:                                              ; preds = %32
  %116 = icmp ult i8 %38, %11
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = and i32 %39, 1
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %118)
  br label %119

119:                                              ; preds = %115, %117, %111
  %120 = icmp eq i64 %33, 0
  br i1 %120, label %128, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 1 monotonic
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0)) #12
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #12
  br label %128

128:                                              ; preds = %119, %121, %125
  %129 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %130 = bitcast %class.scoped_refptr.1768* %129 to i64*
  %131 = getelementptr inbounds %class.scoped_refptr.1768, %class.scoped_refptr.1768* %129, i64 0, i32 0
  %132 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %131, align 8
  store i64 %33, i64* %130, align 8
  %133 = icmp eq %"class.blink::BidiContext"* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw sub i32* %135, i32 1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %132) #12
  %139 = bitcast %"class.blink::BidiContext"* %132 to i8*
  call void @free(i8* %139) #12
  br label %140

140:                                              ; preds = %128, %134, %138
  %141 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = load i32, i32* %25, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store i32 0, i32* %25, align 4
  br label %148

148:                                              ; preds = %147, %144
  %149 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %150 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %151 = ptrtoint i8* %150 to i64
  %152 = bitcast %"class.WTF::Vector.2057"* %22 to i64*
  store atomic i64 %151, i64* %152 monotonic, align 8
  store i32 8, i32* %141, align 8
  %153 = bitcast i8* %150 to %"class.blink::BidiEmbedding"*
  %154 = icmp eq %"class.blink::BidiEmbedding"* %149, %153
  br i1 %154, label %157, label %155, !prof !6

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %22, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2058"* %156, %"class.blink::BidiEmbedding"* %149) #12
  br label %157

157:                                              ; preds = %140, %148, %155
  %158 = icmp ne i8 %11, %38
  br i1 %120, label %165, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw sub i32* %160, i32 1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %34) #12
  %164 = inttoptr i64 %33 to i8*
  call void @free(i8* %164) #12
  br label %165

165:                                              ; preds = %157, %159, %163
  ret i1 %158
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21ReorderRunsFromLevelsERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 0
  %4 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %3, align 8
  %5 = icmp eq %"struct.blink::BidiCharacterRun"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %19, %2
  %7 = phi i8 [ 0, %2 ], [ %26, %19 ]
  %8 = phi i8 [ 125, %2 ], [ %28, %19 ]
  %9 = and i8 %8, 1
  %10 = xor i8 %9, 1
  %11 = add i8 %10, %8
  %12 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = icmp ult i8 %7, %11
  br i1 %15, label %191, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %14, 0
  %18 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 1
  br label %32

19:                                               ; preds = %2, %19
  %20 = phi %"struct.blink::BidiCharacterRun"* [ %30, %19 ], [ %4, %2 ]
  %21 = phi i8 [ %28, %19 ], [ 125, %2 ]
  %22 = phi i8 [ %26, %19 ], [ 0, %2 ]
  %23 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %20, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp ult i8 %24, %22
  %26 = select i1 %25, i8 %22, i8 %24
  %27 = icmp ult i8 %21, %24
  %28 = select i1 %27, i8 %21, i8 %24
  %29 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %20, i64 0, i32 2
  %30 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %29, align 8
  %31 = icmp eq %"struct.blink::BidiCharacterRun"* %30, null
  br i1 %31, label %6, label %19

32:                                               ; preds = %189, %16
  %33 = phi %"struct.blink::BidiCharacterRun"* [ %4, %16 ], [ %190, %189 ]
  %34 = phi i8 [ %7, %16 ], [ %187, %189 ]
  br i1 %17, label %186, label %35

35:                                               ; preds = %32, %184
  %36 = phi %"struct.blink::BidiCharacterRun"* [ %75, %184 ], [ %33, %32 ]
  %37 = phi i32 [ %74, %184 ], [ 0, %32 ]
  %38 = icmp ult i32 %37, %14
  %39 = icmp ne %"struct.blink::BidiCharacterRun"* %36, null
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %54

41:                                               ; preds = %35, %47
  %42 = phi %"struct.blink::BidiCharacterRun"* [ %49, %47 ], [ %36, %35 ]
  %43 = phi i32 [ %50, %47 ], [ %37, %35 ]
  %44 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %42, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp ult i8 %45, %34
  br i1 %46, label %47, label %54

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %42, i64 0, i32 2
  %49 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %48, align 8
  %50 = add nuw i32 %43, 1
  %51 = icmp ult i32 %50, %14
  %52 = icmp ne %"struct.blink::BidiCharacterRun"* %49, null
  %53 = and i1 %51, %52
  br i1 %53, label %41, label %54

54:                                               ; preds = %41, %47, %35
  %55 = phi i32 [ %37, %35 ], [ %50, %47 ], [ %43, %41 ]
  %56 = phi %"struct.blink::BidiCharacterRun"* [ %36, %35 ], [ %49, %47 ], [ %42, %41 ]
  %57 = icmp ule i32 %55, %14
  %58 = icmp ne %"struct.blink::BidiCharacterRun"* %56, null
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %73

60:                                               ; preds = %54, %66
  %61 = phi %"struct.blink::BidiCharacterRun"* [ %68, %66 ], [ %56, %54 ]
  %62 = phi i32 [ %69, %66 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %61, i64 0, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp ult i8 %64, %34
  br i1 %65, label %73, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %61, i64 0, i32 2
  %68 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %67, align 8
  %69 = add i32 %62, 1
  %70 = icmp ule i32 %69, %14
  %71 = icmp ne %"struct.blink::BidiCharacterRun"* %68, null
  %72 = and i1 %70, %71
  br i1 %72, label %60, label %73

73:                                               ; preds = %66, %60, %54
  %74 = phi i32 [ %55, %54 ], [ %62, %60 ], [ %69, %66 ]
  %75 = phi %"struct.blink::BidiCharacterRun"* [ %56, %54 ], [ %61, %60 ], [ %68, %66 ]
  %76 = add i32 %74, -1
  %77 = icmp ult i32 %55, %76
  br i1 %77, label %78, label %184

78:                                               ; preds = %73
  %79 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %3, align 8
  %80 = icmp eq i32 %55, 0
  br i1 %80, label %99, label %81

81:                                               ; preds = %78
  %82 = add i32 %55, -1
  %83 = and i32 %55, 7
  %84 = icmp ult i32 %82, 7
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = sub i32 %55, %83
  br label %122

87:                                               ; preds = %122, %81
  %88 = phi %"struct.blink::BidiCharacterRun"* [ undef, %81 ], [ %138, %122 ]
  %89 = phi %"struct.blink::BidiCharacterRun"* [ undef, %81 ], [ %140, %122 ]
  %90 = phi %"struct.blink::BidiCharacterRun"* [ %79, %81 ], [ %140, %122 ]
  %91 = icmp eq i32 %83, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %87, %92
  %93 = phi %"struct.blink::BidiCharacterRun"* [ %96, %92 ], [ %90, %87 ]
  %94 = phi i32 [ %97, %92 ], [ %83, %87 ]
  %95 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %93, i64 0, i32 2
  %96 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %95, align 8
  %97 = add i32 %94, -1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %92, !llvm.loop !31

99:                                               ; preds = %87, %92, %78
  %100 = phi %"struct.blink::BidiCharacterRun"* [ null, %78 ], [ %88, %87 ], [ %93, %92 ]
  %101 = phi %"struct.blink::BidiCharacterRun"* [ %79, %78 ], [ %89, %87 ], [ %96, %92 ]
  %102 = xor i32 %55, 7
  %103 = add i32 %74, %102
  %104 = add i32 %74, -2
  %105 = sub i32 %104, %55
  %106 = and i32 %103, 7
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %117, label %108

108:                                              ; preds = %99, %108
  %109 = phi %"struct.blink::BidiCharacterRun"* [ %114, %108 ], [ %101, %99 ]
  %110 = phi i32 [ %112, %108 ], [ %55, %99 ]
  %111 = phi i32 [ %115, %108 ], [ %106, %99 ]
  %112 = add nuw i32 %110, 1
  %113 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %109, i64 0, i32 2
  %114 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %113, align 8
  %115 = add i32 %111, -1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %108, !llvm.loop !32

117:                                              ; preds = %108, %99
  %118 = phi %"struct.blink::BidiCharacterRun"* [ undef, %99 ], [ %114, %108 ]
  %119 = phi %"struct.blink::BidiCharacterRun"* [ %101, %99 ], [ %114, %108 ]
  %120 = phi i32 [ %55, %99 ], [ %112, %108 ]
  %121 = icmp ult i32 %105, 7
  br i1 %121, label %164, label %143

122:                                              ; preds = %122, %85
  %123 = phi %"struct.blink::BidiCharacterRun"* [ %79, %85 ], [ %140, %122 ]
  %124 = phi i32 [ %86, %85 ], [ %141, %122 ]
  %125 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %123, i64 0, i32 2
  %126 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %125, align 8
  %127 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %126, i64 0, i32 2
  %128 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %127, align 8
  %129 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %128, i64 0, i32 2
  %130 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %129, align 8
  %131 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %130, i64 0, i32 2
  %132 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %131, align 8
  %133 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %132, i64 0, i32 2
  %134 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %133, align 8
  %135 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %134, i64 0, i32 2
  %136 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %135, align 8
  %137 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %136, i64 0, i32 2
  %138 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %137, align 8
  %139 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %138, i64 0, i32 2
  %140 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %139, align 8
  %141 = add i32 %124, -8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %87, label %122

143:                                              ; preds = %117, %143
  %144 = phi %"struct.blink::BidiCharacterRun"* [ %162, %143 ], [ %119, %117 ]
  %145 = phi i32 [ %160, %143 ], [ %120, %117 ]
  %146 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %144, i64 0, i32 2
  %147 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %146, align 8
  %148 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %147, i64 0, i32 2
  %149 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %148, align 8
  %150 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %149, i64 0, i32 2
  %151 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %150, align 8
  %152 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %151, i64 0, i32 2
  %153 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %152, align 8
  %154 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %153, i64 0, i32 2
  %155 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %154, align 8
  %156 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %155, i64 0, i32 2
  %157 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %156, align 8
  %158 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %157, i64 0, i32 2
  %159 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %158, align 8
  %160 = add nuw i32 %145, 8
  %161 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %159, i64 0, i32 2
  %162 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %161, align 8
  %163 = icmp eq i32 %160, %76
  br i1 %163, label %164, label %143

164:                                              ; preds = %143, %117
  %165 = phi %"struct.blink::BidiCharacterRun"* [ %118, %117 ], [ %162, %143 ]
  %166 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %165, i64 0, i32 2
  %167 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %166, align 8
  %168 = icmp ugt i32 %55, %76
  br i1 %168, label %177, label %169

169:                                              ; preds = %164, %169
  %170 = phi %"struct.blink::BidiCharacterRun"* [ %174, %169 ], [ %101, %164 ]
  %171 = phi %"struct.blink::BidiCharacterRun"* [ %170, %169 ], [ %167, %164 ]
  %172 = phi i32 [ %175, %169 ], [ %55, %164 ]
  %173 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %170, i64 0, i32 2
  %174 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %173, align 8
  store %"struct.blink::BidiCharacterRun"* %171, %"struct.blink::BidiCharacterRun"** %173, align 8
  %175 = add i32 %172, 1
  %176 = icmp ugt i32 %175, %76
  br i1 %176, label %177, label %169

177:                                              ; preds = %169, %164
  %178 = icmp eq %"struct.blink::BidiCharacterRun"* %100, null
  %179 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %100, i64 0, i32 2
  %180 = select i1 %178, %"struct.blink::BidiCharacterRun"** %3, %"struct.blink::BidiCharacterRun"** %179
  store %"struct.blink::BidiCharacterRun"* %165, %"struct.blink::BidiCharacterRun"** %180, align 8
  %181 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %101, i64 0, i32 2
  store %"struct.blink::BidiCharacterRun"* %167, %"struct.blink::BidiCharacterRun"** %181, align 8
  %182 = icmp eq %"struct.blink::BidiCharacterRun"* %167, null
  br i1 %182, label %183, label %184

183:                                              ; preds = %177
  store %"struct.blink::BidiCharacterRun"* %101, %"struct.blink::BidiCharacterRun"** %18, align 8
  br label %184

184:                                              ; preds = %73, %177, %183
  %185 = icmp ult i32 %74, %14
  br i1 %185, label %35, label %186

186:                                              ; preds = %184, %32
  %187 = add i8 %34, -1
  %188 = icmp ult i8 %187, %11
  br i1 %188, label %191, label %189

189:                                              ; preds = %186
  %190 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %3, align 8
  br label %32

191:                                              ; preds = %186, %6
  ret void
}

declare i32 @u_charDirection_69(i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2057"*, %"class.blink::BidiEmbedding"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %8 = icmp ugt %"class.blink::BidiEmbedding"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %7, i64 %10
  %12 = icmp ugt %"class.blink::BidiEmbedding"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2057"* %0, i32 %5) #12
  %14 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::BidiEmbedding"* %1 to i64
  %17 = ptrtoint %"class.blink::BidiEmbedding"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2057"* %0, i32 %5) #12
  %20 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::BidiEmbedding"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::BidiEmbedding"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %23, i64 %26
  %28 = bitcast %"class.blink::BidiEmbedding"* %24 to i64*
  %29 = bitcast %"class.blink::BidiEmbedding"* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2057"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !6

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %31, align 8
  %33 = icmp eq %"class.blink::BidiEmbedding"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2057"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2057"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2057"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2057"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %5, align 8
  %7 = icmp eq %"class.blink::BidiEmbedding"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::BidiEmbedding"*
  %10 = icmp eq %"class.blink::BidiEmbedding"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2057"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2057"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::BidiEmbedding"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2058"* %19, %"class.blink::BidiEmbedding"* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::BidiEmbedding"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !6

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::BidiEmbedding"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #12
  %46 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::BidiEmbedding"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::BidiEmbedding"*
  %51 = icmp eq %"class.blink::BidiEmbedding"* %48, %50
  br i1 %51, label %54, label %52, !prof !6

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2058"* %53, %"class.blink::BidiEmbedding"* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2057"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2057", %"class.WTF::Vector.2057"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 8, !range !15
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %9, i64 0, i32 0
  %18 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %10, i64 0, i32 0
  %20 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %19, align 8
  %21 = icmp eq %"class.blink::TextRun"* %18, %20
  br i1 %21, label %66, label %22

22:                                               ; preds = %16, %8
  %23 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 10
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  %30 = zext i1 %29 to i32
  store i32 %30, i32* %23, align 8
  br label %31

31:                                               ; preds = %22, %26
  %32 = icmp eq i32 %3, 0
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %34 = load i32, i32* %33, align 8
  br i1 %32, label %35, label %49

35:                                               ; preds = %31
  switch i32 %34, label %42 [
    i32 2, label %36
    i32 5, label %41
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %36
  store i32 2, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

41:                                               ; preds = %35
  store i32 5, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 0
  %46 = icmp eq i32 %2, 0
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %63

48:                                               ; preds = %42
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %23, align 8
  br label %63

49:                                               ; preds = %31
  switch i32 %34, label %56 [
    i32 5, label %62
    i32 2, label %50
  ]

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  %54 = icmp eq i32 %2, 1
  %55 = or i1 %54, %53
  br i1 %55, label %62, label %63

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  %60 = icmp eq i32 %2, 1
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %63

62:                                               ; preds = %49, %56, %50
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %23, align 8
  br label %63

63:                                               ; preds = %50, %36, %56, %62, %40, %42, %48, %41
  %64 = bitcast %"class.blink::TextRunIterator"* %9 to i8*
  %65 = bitcast %"class.blink::TextRunIterator"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false)
  br label %66

66:                                               ; preds = %16, %4, %63
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %5, align 8
  %67 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %3, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %3, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %70 = bitcast %"class.blink::TextRunIterator"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !15
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %8, i64 0, i32 0
  %17 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %9, i64 0, i32 0
  %19 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %18, align 8
  %20 = icmp eq %"class.blink::TextRun"* %17, %19
  br i1 %20, label %55, label %21

21:                                               ; preds = %15, %7
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %22, align 8
  br label %30

30:                                               ; preds = %21, %25
  %31 = icmp eq i32 %2, 0
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %33 = load i32, i32* %32, align 8
  br i1 %31, label %34, label %46

34:                                               ; preds = %30
  switch i32 %33, label %41 [
    i32 2, label %35
    i32 5, label %40
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  store i32 2, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

40:                                               ; preds = %34
  store i32 5, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %22, align 8
  br label %52

46:                                               ; preds = %30
  switch i32 %33, label %47 [
    i32 5, label %51
    i32 2, label %51
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %46, %46, %47
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %22, align 8
  br label %52

52:                                               ; preds = %35, %41, %47, %51, %39, %45, %40
  %53 = bitcast %"class.blink::TextRunIterator"* %8 to i8*
  %54 = bitcast %"class.blink::TextRunIterator"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  br label %55

55:                                               ; preds = %15, %3, %52
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %4, align 8
  %56 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %2, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %59 = bitcast %"class.blink::TextRunIterator"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false)
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink15SVGTextFragment28BuildNormalFragmentTransformEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink15SVGTextFragment28BuildNormalFragmentTransformEv"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_116ConstructTextRunERNS_19LayoutSVGInlineTextEjjNS_13TextDirectionE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_116ConstructTextRunERNS_19LayoutSVGInlineTextEjjNS_13TextDirectionE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink12_GLOBAL__N_116ConstructTextRunERNS_19LayoutSVGInlineTextEjjNS_13TextDirectionE: argument 0"}
!12 = distinct !{!12, !"_ZN5blink12_GLOBAL__N_116ConstructTextRunERNS_19LayoutSVGInlineTextEjjNS_13TextDirectionE"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = !{i8 0, i8 2}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !14}
!18 = distinct !{!18, !14}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink15SVGTextFragment21LengthAdjustTransformEv"}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !14}
