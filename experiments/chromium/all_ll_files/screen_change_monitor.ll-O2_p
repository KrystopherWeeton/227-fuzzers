; ModuleID = '../../content/browser/screen_enumeration/screen_change_monitor.cc'
source_filename = "../../content/browser/screen_enumeration/screen_change_monitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::ScreenChangeMonitor" = type { %"class.display::DisplayObserver", %"class.base::RepeatingCallback", %"class.std::__1::vector" }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.7", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.8" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.display::Display"* }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.16 }
%union.anon.16 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZTVN7content19ScreenChangeMonitorE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::ScreenChangeMonitor"*)* @_ZN7content19ScreenChangeMonitorD2Ev to i8*), i8* bitcast (void (%"class.content::ScreenChangeMonitor"*)* @_ZN7content19ScreenChangeMonitorD0Ev to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*)* @_ZN7display15DisplayObserver27OnWillProcessDisplayChangesEv to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*)* @_ZN7display15DisplayObserver26OnDidProcessDisplayChangesEv to i8*), i8* bitcast (void (%"class.content::ScreenChangeMonitor"*, %"class.display::Display"*)* @_ZN7content19ScreenChangeMonitor14OnDisplayAddedERKN7display7DisplayE to i8*), i8* bitcast (void (%"class.content::ScreenChangeMonitor"*, %"class.display::Display"*)* @_ZN7content19ScreenChangeMonitor16OnDisplayRemovedERKN7display7DisplayE to i8*), i8* bitcast (void (%"class.content::ScreenChangeMonitor"*, %"class.display::Display"*, i32)* @_ZN7content19ScreenChangeMonitor23OnDisplayMetricsChangedERKN7display7DisplayEj to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, %"class.std::__1::basic_string"*)* @_ZN7display15DisplayObserver25OnCurrentWorkspaceChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, i32)* @_ZN7display15DisplayObserver27OnDisplayTabletStateChangedENS_11TabletStateE to i8*)] }, align 8

@_ZN7content19ScreenChangeMonitorC1EN4base17RepeatingCallbackIFvbEEE = hidden unnamed_addr alias void (%"class.content::ScreenChangeMonitor"*, %"class.base::RepeatingCallback"*), void (%"class.content::ScreenChangeMonitor"*, %"class.base::RepeatingCallback"*)* @_ZN7content19ScreenChangeMonitorC2EN4base17RepeatingCallbackIFvbEEE
@_ZN7content19ScreenChangeMonitorD1Ev = hidden unnamed_addr alias void (%"class.content::ScreenChangeMonitor"*), void (%"class.content::ScreenChangeMonitor"*)* @_ZN7content19ScreenChangeMonitorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ScreenChangeMonitorC2EN4base17RepeatingCallbackIFvbEEE(%"class.content::ScreenChangeMonitor"*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %4) #7
  %5 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN7content19ScreenChangeMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %6, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %7) #7
  %8 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #7
  %10 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %11 = icmp eq %"class.display::Screen"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.display::Screen"* %10 to %"class.std::__1::vector"* (%"class.display::Screen"*)***
  %14 = load %"class.std::__1::vector"* (%"class.display::Screen"*)**, %"class.std::__1::vector"* (%"class.display::Screen"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %14, i64 7
  %16 = load %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %15, align 8
  %17 = tail call dereferenceable(24) %"class.std::__1::vector"* %16(%"class.display::Screen"* nonnull %10) #7
  %18 = icmp eq %"class.std::__1::vector"* %8, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %21 = load %"class.display::Display"*, %"class.display::Display"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %23 = load %"class.display::Display"*, %"class.display::Display"** %22, align 8
  tail call void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %8, %"class.display::Display"* %21, %"class.display::Display"* %23) #7
  br label %24

24:                                               ; preds = %12, %19
  %25 = bitcast %"class.display::Screen"* %10 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %26 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %26, i64 16
  %28 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %27, align 8
  tail call void %28(%"class.display::Screen"* nonnull %10, %"class.display::DisplayObserver"* %3) #7
  br label %29

29:                                               ; preds = %2, %24
  ret void
}

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ScreenChangeMonitorD2Ev(%"class.content::ScreenChangeMonitor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN7content19ScreenChangeMonitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %4 = icmp eq %"class.display::Screen"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 0
  %7 = bitcast %"class.display::Screen"* %3 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %8 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %8, i64 17
  %10 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %9, align 8
  tail call void %10(%"class.display::Screen"* nonnull %3, %"class.display::DisplayObserver"* %6) #7
  br label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.display::Display"*, %"class.display::Display"** %13, align 8
  %15 = icmp eq %"class.display::Display"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.display::Display"* %14 to i8*
  %18 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = load %"class.display::Display"*, %"class.display::Display"** %18, align 8
  %20 = icmp eq %"class.display::Display"* %19, %14
  br i1 %20, label %28, label %21

21:                                               ; preds = %16, %21
  %22 = phi %"class.display::Display"* [ %23, %21 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %22, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %23) #7
  %24 = icmp eq %"class.display::Display"* %23, %14
  br i1 %24, label %25, label %21

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::vector"* %12 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi i8* [ %27, %25 ], [ %17, %16 ]
  store %"class.display::Display"* %14, %"class.display::Display"** %18, align 8
  tail call void @_ZdlPv(i8* %29) #8
  br label %30

30:                                               ; preds = %11, %28
  %31 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #7
  %32 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 0
  tail call void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"* %32) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ScreenChangeMonitorD0Ev(%"class.content::ScreenChangeMonitor"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7content19ScreenChangeMonitorD2Ev(%"class.content::ScreenChangeMonitor"* %0) #7
  %2 = bitcast %"class.content::ScreenChangeMonitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ScreenChangeMonitor15OnScreensChangeEv(%"class.content::ScreenChangeMonitor"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %3 = icmp eq %"class.display::Screen"* %2, null
  br i1 %3, label %64, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.display::Screen"* %2 to %"class.std::__1::vector"* (%"class.display::Screen"*)***
  %6 = load %"class.std::__1::vector"* (%"class.display::Screen"*)**, %"class.std::__1::vector"* (%"class.display::Screen"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %6, i64 7
  %8 = load %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %7, align 8
  %9 = tail call dereferenceable(24) %"class.std::__1::vector"* %8(%"class.display::Screen"* nonnull %2) #7
  %10 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.display::Display"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %18 = bitcast %"class.display::Display"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to %"class.display::Display"*
  %25 = inttoptr i64 %13 to %"class.display::Display"*
  %26 = inttoptr i64 %21 to %"class.display::Display"*
  br i1 %23, label %27, label %45

27:                                               ; preds = %4
  %28 = icmp eq %"class.display::Display"* %24, %25
  br i1 %28, label %64, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"class.display::Display"* [ %35, %33 ], [ %26, %27 ]
  %31 = phi %"class.display::Display"* [ %34, %33 ], [ %24, %27 ]
  %32 = tail call zeroext i1 @_ZNK7display7DisplayeqERKS0_(%"class.display::Display"* %31, %"class.display::Display"* dereferenceable(568) %30) #7
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %31, i64 1
  %35 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %30, i64 1
  %36 = icmp eq %"class.display::Display"* %34, %25
  br i1 %36, label %64, label %29

37:                                               ; preds = %29
  %38 = load i64, i64* %12, align 8
  %39 = load i64, i64* %14, align 8
  %40 = load i64, i64* %18, align 8
  %41 = load i64, i64* %20, align 8
  %42 = inttoptr i64 %41 to %"class.display::Display"*
  %43 = sub i64 %38, %39
  %44 = sub i64 %40, %41
  br label %45

45:                                               ; preds = %37, %4
  %46 = phi i64 [ %44, %37 ], [ %22, %4 ]
  %47 = phi i64 [ %43, %37 ], [ %16, %4 ]
  %48 = phi i64 [ %40, %37 ], [ %19, %4 ]
  %49 = phi %"class.display::Display"* [ %42, %37 ], [ %26, %4 ]
  %50 = sdiv exact i64 %47, 568
  %51 = icmp ugt i64 %50, 1
  %52 = sdiv exact i64 %46, 568
  %53 = icmp ugt i64 %52, 1
  %54 = xor i1 %51, %53
  %55 = icmp eq %"class.std::__1::vector"* %10, %9
  br i1 %55, label %58, label %56

56:                                               ; preds = %45
  %57 = inttoptr i64 %48 to %"class.display::Display"*
  tail call void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %10, %"class.display::Display"* %49, %"class.display::Display"* %57) #7
  br label %58

58:                                               ; preds = %45, %56
  %59 = getelementptr inbounds %"class.content::ScreenChangeMonitor", %"class.content::ScreenChangeMonitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %59, align 8
  %61 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %60, i64 0, i32 1
  %62 = bitcast void ()** %61 to void (%"class.base::internal::BindStateBase"*, i1)**
  %63 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %62, align 8
  tail call void %63(%"class.base::internal::BindStateBase"* %60, i1 zeroext %54) #7
  br label %64

64:                                               ; preds = %33, %27, %1, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ScreenChangeMonitor14OnDisplayAddedERKN7display7DisplayE(%"class.content::ScreenChangeMonitor"*, %"class.display::Display"* nocapture readnone dereferenceable(568)) unnamed_addr #0 align 2 {
  tail call void @_ZN7content19ScreenChangeMonitor15OnScreensChangeEv(%"class.content::ScreenChangeMonitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ScreenChangeMonitor16OnDisplayRemovedERKN7display7DisplayE(%"class.content::ScreenChangeMonitor"*, %"class.display::Display"* nocapture readnone dereferenceable(568)) unnamed_addr #0 align 2 {
  tail call void @_ZN7content19ScreenChangeMonitor15OnScreensChangeEv(%"class.content::ScreenChangeMonitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ScreenChangeMonitor23OnDisplayMetricsChangedERKN7display7DisplayEj(%"class.content::ScreenChangeMonitor"*, %"class.display::Display"* nocapture readnone dereferenceable(568), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN7content19ScreenChangeMonitor15OnScreensChangeEv(%"class.content::ScreenChangeMonitor"* %0)
  ret void
}

declare void @_ZN7display15DisplayObserver27OnWillProcessDisplayChangesEv(%"class.display::DisplayObserver"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver26OnDidProcessDisplayChangesEv(%"class.display::DisplayObserver"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver25OnCurrentWorkspaceChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.display::DisplayObserver"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN7display15DisplayObserver27OnDisplayTabletStateChangedENS_11TabletStateE(%"class.display::DisplayObserver"*, i32) unnamed_addr #1

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7display7DisplayENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.display::Display"*, %"class.display::Display"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.display::Display"* %2 to i64
  %5 = ptrtoint %"class.display::Display"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 568
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.display::Display"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 568
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.display::Display"*
  br i1 %15, label %83, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.display::Display"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 568
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 %22
  %25 = select i1 %23, %"class.display::Display"* %24, %"class.display::Display"* %2
  %26 = icmp eq %"class.display::Display"* %25, %1
  br i1 %26, label %58, label %27

27:                                               ; preds = %17, %50
  %28 = phi %"class.display::Display"* [ %56, %50 ], [ %16, %17 ]
  %29 = phi %"class.display::Display"* [ %55, %50 ], [ %1, %17 ]
  %30 = bitcast %"class.display::Display"* %28 to i8*
  %31 = bitcast %"class.display::Display"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 80, i1 false) #7
  %32 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 10, i32 0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 10, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 436, i1 false) #7
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 10, i32 3
  %35 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %42, label %47, label %44

44:                                               ; preds = %38
  %45 = bitcast %"struct.gfx::HDRStaticMetadata"* %43 to i8*
  %46 = bitcast %"struct.gfx::HDRStaticMetadata"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #7
  br label %50

47:                                               ; preds = %38
  tail call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %43, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %39) #7
  store i8 1, i8* %40, align 8
  br label %50

48:                                               ; preds = %27
  %49 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 8
  br label %50

50:                                               ; preds = %48, %47, %44
  %51 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 0, i32 11
  %52 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 0, i32 11
  %53 = bitcast i32* %51 to i8*
  %54 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false) #7
  %55 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %29, i64 1
  %56 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %28, i64 1
  %57 = icmp eq %"class.display::Display"* %55, %25
  br i1 %57, label %58, label %27

58:                                               ; preds = %50, %17
  %59 = phi %"class.display::Display"* [ %16, %17 ], [ %56, %50 ]
  br i1 %23, label %60, label %75

60:                                               ; preds = %58
  %61 = load i64, i64* %19, align 8
  %62 = icmp eq %"class.display::Display"* %25, %2
  br i1 %62, label %73, label %63

63:                                               ; preds = %60
  %64 = inttoptr i64 %61 to %"class.display::Display"*
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi %"class.display::Display"* [ %69, %65 ], [ %64, %63 ]
  %67 = phi %"class.display::Display"* [ %68, %65 ], [ %24, %63 ]
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %66, %"class.display::Display"* dereferenceable(568) %67) #7
  %68 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %67, i64 1
  %69 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %66, i64 1
  %70 = icmp eq %"class.display::Display"* %68, %2
  br i1 %70, label %71, label %65

71:                                               ; preds = %65
  %72 = ptrtoint %"class.display::Display"* %69 to i64
  br label %73

73:                                               ; preds = %60, %71
  %74 = phi i64 [ %61, %60 ], [ %72, %71 ]
  store i64 %74, i64* %19, align 8
  br label %134

75:                                               ; preds = %58
  %76 = load %"class.display::Display"*, %"class.display::Display"** %18, align 8
  %77 = icmp eq %"class.display::Display"* %76, %59
  br i1 %77, label %82, label %78

78:                                               ; preds = %75, %78
  %79 = phi %"class.display::Display"* [ %80, %78 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %79, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %80) #7
  %81 = icmp eq %"class.display::Display"* %80, %59
  br i1 %81, label %82, label %78

82:                                               ; preds = %78, %75
  store %"class.display::Display"* %59, %"class.display::Display"** %18, align 8
  br label %134

83:                                               ; preds = %3
  %84 = icmp eq i64 %12, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %83
  %86 = inttoptr i64 %12 to i8*
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %88 = load %"class.display::Display"*, %"class.display::Display"** %87, align 8
  %89 = icmp eq %"class.display::Display"* %88, %16
  br i1 %89, label %97, label %90

90:                                               ; preds = %85, %90
  %91 = phi %"class.display::Display"* [ %92, %90 ], [ %88, %85 ]
  %92 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %91, i64 -1
  tail call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %92) #7
  %93 = icmp eq %"class.display::Display"* %92, %16
  br i1 %93, label %94, label %90

94:                                               ; preds = %90
  %95 = bitcast %"class.std::__1::vector"* %0 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %85
  %98 = phi i8* [ %96, %94 ], [ %86, %85 ]
  store %"class.display::Display"* %16, %"class.display::Display"** %87, align 8
  tail call void @_ZdlPv(i8* %98) #8
  %99 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #7
  br label %100

100:                                              ; preds = %83, %97
  %101 = phi i64 [ %10, %83 ], [ 0, %97 ]
  %102 = icmp ugt i64 %7, 32476662101601323
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #9
  unreachable

105:                                              ; preds = %100
  %106 = sdiv exact i64 %101, 568
  %107 = icmp ult i64 %106, 16238331050800661
  br i1 %107, label %108, label %112

108:                                              ; preds = %105
  %109 = shl nsw i64 %106, 1
  %110 = icmp ult i64 %109, %7
  %111 = select i1 %110, i64 %7, i64 %109
  br label %112

112:                                              ; preds = %108, %105
  %113 = phi i64 [ %111, %108 ], [ 32476662101601323, %105 ]
  %114 = mul i64 %113, 568
  %115 = tail call i8* @_Znwm(i64 %114) #8
  %116 = bitcast i8* %115 to %"class.display::Display"*
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %118 = bitcast %"class.display::Display"** %117 to i8**
  store i8* %115, i8** %118, align 8
  %119 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %115, i8** %119, align 8
  %120 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %116, i64 %113
  store %"class.display::Display"* %120, %"class.display::Display"** %8, align 8
  %121 = bitcast %"class.display::Display"** %117 to i64*
  %122 = ptrtoint i8* %115 to i64
  %123 = icmp eq %"class.display::Display"* %1, %2
  br i1 %123, label %132, label %124

124:                                              ; preds = %112, %124
  %125 = phi %"class.display::Display"* [ %128, %124 ], [ %116, %112 ]
  %126 = phi %"class.display::Display"* [ %127, %124 ], [ %1, %112 ]
  tail call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %125, %"class.display::Display"* dereferenceable(568) %126) #7
  %127 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %126, i64 1
  %128 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %125, i64 1
  %129 = icmp eq %"class.display::Display"* %127, %2
  br i1 %129, label %130, label %124

130:                                              ; preds = %124
  %131 = ptrtoint %"class.display::Display"* %128 to i64
  br label %132

132:                                              ; preds = %112, %130
  %133 = phi i64 [ %122, %112 ], [ %131, %130 ]
  store i64 %133, i64* %121, align 8
  br label %134

134:                                              ; preds = %73, %82, %132
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"*, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZNK7display7DisplayeqERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
