; ModuleID = '../../third_party/blink/renderer/core/layout/geometry/logical_offset.cc'
source_filename = "../../third_party/blink/renderer/core/layout/geometry/logical_offset.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }

@.str = private unnamed_addr constant [6 x i8] c"%d,%d\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink13LogicalOffset17ConvertToPhysicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::LogicalOffset"*, i16, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.blink::WritingModeConverter", align 4
  store i64 %3, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #3
  %8 = bitcast %"class.blink::WritingModeConverter"* %6 to i16*
  store i16 %1, i16* %8, align 4
  %9 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %6, i64 0, i32 1
  %10 = bitcast %"struct.blink::PhysicalSize"* %9 to i64*
  store i64 %2, i64* %10, align 4
  %11 = trunc i16 %1 to i8
  %12 = icmp eq i8 %11, 0
  %13 = icmp ult i16 %1, 256
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %20

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %0, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  br label %26

20:                                               ; preds = %4
  %21 = bitcast i64* %5 to %"struct.blink::PhysicalSize"*
  %22 = call i64 @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_13LogicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %6, %"struct.blink::LogicalOffset"* dereferenceable(8) %0, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %21) #3
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ %19, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %17, %15 ], [ %23, %20 ]
  %29 = zext i32 %27 to i64
  %30 = shl nuw i64 %29, 32
  %31 = zext i32 %28 to i64
  %32 = or i64 %30, %31
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #3
  ret i64 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13LogicalOffset8ToStringEv(%"struct.blink::LogicalOffset"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = sdiv i32 %3, 64
  %5 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sdiv i32 %6, 64
  %8 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %4, i32 %7) #3
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_13LogicalOffsetE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.blink::LogicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #3
  %5 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sdiv i32 %6, 64
  %8 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %1, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sdiv i32 %9, 64
  %11 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %7, i32 %10) #3
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #3
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #3
  br label %29

29:                                               ; preds = %2, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #3
  ret %"class.std::__1::basic_ostream"* %13
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_13LogicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"*, %"struct.blink::LogicalOffset"* dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
